[{"tags": ["angularjs", "typescript"], "comments": [{"owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "edited": false, "score": 1, "creation_date": 1423079922, "post_id": 28329405, "comment_id": 45007752, "body": "Do you <i>really</i> want to have a class where properties have different types when read vs written to? This seems like an abuse of getters/setters."}, {"owner": {"reputation": 1027, "user_id": 3622676, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/n4SuA.jpg?s=128&g=1", "display_name": "myartsev", "link": "https://stackoverflow.com/users/3622676/myartsev"}, "reply_to_user": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "edited": false, "score": 0, "creation_date": 1423080314, "post_id": 28329405, "comment_id": 45007987, "body": "Ryan, that is my question. How else would you have a property which returns a promise? Steve Fenton&#39;s answer below appears reasonable."}, {"owner": {"reputation": 5023, "user_id": 10156, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/d997169a951f335eecd6bf66921e80aa?s=128&d=identicon&r=PG", "display_name": "Steve Mitcham", "link": "https://stackoverflow.com/users/10156/steve-mitcham"}, "edited": false, "score": 0, "creation_date": 1423082610, "post_id": 28329405, "comment_id": 45009246, "body": "Since a resolved promise shouldn&#39;t be resolved multiple times, even with Steve Fenton&#39;s implementation you will need to guard against setting the property more than once."}], "answers": [{"comments": [{"owner": {"reputation": 1027, "user_id": 3622676, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/n4SuA.jpg?s=128&g=1", "display_name": "myartsev", "link": "https://stackoverflow.com/users/3622676/myartsev"}, "edited": false, "score": 0, "creation_date": 1423081952, "post_id": 28329943, "comment_id": 45008876, "body": "One complication with the type guards/assertions is if the type is an interface instead of a primitive. I&#39;ll update my question to reflect that."}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 11, "last_activity_date": 1423080135, "last_edit_date": 1423080135, "creation_date": 1423078701, "answer_id": 28329943, "question_id": 28329405, "link": "https://stackoverflow.com/questions/28329405/typescript-properties-returning-a-promise-get-set-accessors-must-have-the-same/28329943#28329943", "title": "TypeScript properties returning a promise - Get/Set accessors must have the same type", "body": "<p>This sounds like a perfect opportunity to use a union type (TypeScript 1.4 or above) - example taken from <a href=\"https://www.stevefenton.co.uk/Content/Blog/Date/201502/Blog/Union-Types-Ease-Getters-and-Setters/\">this blog post</a>:</p>\n\n<pre><code>type StringPromise = string | ng.IPromise&lt;string&gt;;\n\nmodule App {\n    export interface MyInterface {\n        foo: ng.IPromise&lt;string&gt;;\n    }\n\n    class MyClass implements MyInterface {\n        private _fooDeferred: ng.IDeferred&lt;string&gt;;\n\n        constructor(private $q: ng.IQService) {\n            this._fooDeferred = this.$q.defer();\n        }\n\n        get foo(): StringPromise {\n            return this._fooDeferred.promise;\n        }\n\n        set foo(value: StringPromise) {\n            this._fooDeferred.resolve(value);\n        }\n    }\n}\n</code></pre>\n\n<p>Notes:</p>\n\n<ul>\n<li>You will need to use type guards when you want to use a specific type from the union type</li>\n<li>You may need to use type assertions in some cases</li>\n</ul>\n\n<h1>Type Guard</h1>\n\n<p>Here is an example of a type guard</p>\n\n<pre><code>if (typeof value === 'string') {\n    // the type of value inside this if statement is\n    // string, rather than StringPromise\n} else {\n    // the type of value inside this else statement is\n    // ng.IPromise&lt;string&gt;, rather than StringPromise\n}\n</code></pre>\n\n<h1>Type Assertion</h1>\n\n<p>If needed, you can assert types like this:</p>\n\n<pre><code>var prom = &lt;string&gt; value;\n</code></pre>\n"}], "owner": {"reputation": 1027, "user_id": 3622676, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/n4SuA.jpg?s=128&g=1", "display_name": "myartsev", "link": "https://stackoverflow.com/users/3622676/myartsev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8615, "favorite_count": 0, "accepted_answer_id": 28329943, "answer_count": 1, "score": 9, "last_activity_date": 1423082108, "creation_date": 1423076851, "last_edit_date": 1423082108, "question_id": 28329405, "link": "https://stackoverflow.com/questions/28329405/typescript-properties-returning-a-promise-get-set-accessors-must-have-the-same", "title": "TypeScript properties returning a promise - Get/Set accessors must have the same type", "body": "<p>Why does TypeScript enforce Get/Set accessors to have the same type?\nLet's say I want to have a property which returns a promise.</p>\n\n<pre><code>module App {\n    export interface MyInterface {\n        foo: ng.IPromise&lt;IStuff&gt;;\n    }\n\n    export interface IStuff {\n        bar: string;\n        baz: number;\n    }\n\n    class MyClass implements MyInterface {\n        private _fooDeferred: ng.IDeferred&lt;IStuff&gt;;\n\n        constructor(private $q: ng.IQService) {\n            this._fooDeferred = this.$q.defer();\n        }\n\n        get foo(): ng.IPromise&lt;IStuff&gt; {\n            return this._fooDeferred.promise;\n        }\n\n        set foo(value: IStuff) {\n            this._fooDeferred.resolve(value);\n        }\n    }\n}\n</code></pre>\n\n<p><strong>'Get' and 'Set' accessor must have the same type</strong> will be the error message coming from TypeScript.</p>\n\n<p>The fix would be to type the accessors to <strong>any</strong>, but then we are losing the advantages of static typing, and might as well just write JS.</p>\n\n<pre><code>        get foo(): any {\n            return this._fooDeferred.promise;\n        }\n\n        set foo(value: any) {\n            this._fooDeferred.resolve(value);\n        }\n</code></pre>\n"}, {"tags": ["meteor", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 893, "user_id": 1348303, "user_type": "registered", "accept_rate": 26, "profile_image": "https://www.gravatar.com/avatar/011231bab044dcddb8367ccb891b51b7?s=128&d=identicon&r=PG", "display_name": "tomitrescak", "link": "https://stackoverflow.com/users/1348303/tomitrescak"}, "edited": false, "score": 0, "creation_date": 1429579191, "post_id": 28322251, "comment_id": 47654472, "body": "This won&#39;t work, since you cannot use declare in non-transient modules."}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 1, "last_activity_date": 1423055334, "creation_date": 1423055334, "answer_id": 28322251, "question_id": 28321467, "link": "https://stackoverflow.com/questions/28321467/using-modules-in-meteor-js-with-typescript/28322251#28322251", "title": "Using modules in Meteor.js with Typescript", "body": "<p>Definition files should use the <code>declare</code> keyword. You would normally get an error if you didn't use this keyword.</p>\n\n<pre><code>declare module MyModule {\n     export interface Bla {}\n}\n</code></pre>\n\n<p>And</p>\n\n<pre><code>declare module MyModule {\n    export class MyBla implements Bla {\n\n    }\n}\n</code></pre>\n\n<p>It is also worth checking that the <code>ServerBook</code> class has the <code>export</code> keyword (just like <code>MyBla</code> in your examples).</p>\n"}, {"tags": [], "owner": {"reputation": 893, "user_id": 1348303, "user_type": "registered", "accept_rate": 26, "profile_image": "https://www.gravatar.com/avatar/011231bab044dcddb8367ccb891b51b7?s=128&d=identicon&r=PG", "display_name": "tomitrescak", "link": "https://stackoverflow.com/users/1348303/tomitrescak"}, "is_accepted": false, "score": 3, "last_activity_date": 1429579736, "last_edit_date": 1495542828, "creation_date": 1429579736, "answer_id": 29761296, "question_id": 28321467, "link": "https://stackoverflow.com/questions/28321467/using-modules-in-meteor-js-with-typescript/29761296#29761296", "title": "Using modules in Meteor.js with Typescript", "body": "<p>I have dealt with this issue on my <a href=\"https://doctorllama.wordpress.com/2015/04/21/meteor-typescript-classes-and-modules/\" rel=\"nofollow noreferrer\">blog</a>. I decided to use the evil <code>eval</code> command, since it gave me the easiest possibility of using modules till something more sophisticated appears.</p>\n\n<p>File <code>/lib/foo.ts</code> is position in the subdirectory since it has to be loaded before Bar.</p>\n\n<pre><code>eval('var Hugo = (this.Hugo || (this.Hugo = {})'); // this will override the automatically emitted var Hugo and assigns it with globally defined Hugo module \n\nmodule Hugo {\n  export class Foo {\n    foo():string {\n      return 'foo'\n    }\n  }\n}\n</code></pre>\n\n<p>File <code>/bar.ts</code></p>\n\n<pre><code>/// &lt;reference path=\"lib/foo.ts\"/&gt;\neval('var Hugo = (this.Hugo || (this.Hugo = {})'); // this will override the automatically emitted var Hugo and assigns it with globally defined Hugo module \n\nmodule Hugo {\n export class Bar extends Foo {\n    bar () : string {\n      return 'bar';\n    }\n  }\n}\n</code></pre>\n\n<p>File <code>/test.ts</code></p>\n\n<pre><code>/// &lt;reference path=\"lib/foo.ts\"/&gt;\n/// &lt;reference path=\"bar.ts\"/&gt;\n\nvar m = new Hugo.Bar();\nconsole.log(m.bar());\nconsole.log(m.foo());\n</code></pre>\n\n<p>As mentioned <a href=\"https://stackoverflow.com/questions/29115417/mixing-typescript-and-meteor-classes-across-multiple-files\">here</a>, for classes, the solution is even simpler:</p>\n\n<pre><code>class ExportedClass {\n    variable : int;\n} \nthis.ExportedClass = ExportedClass;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 457, "user_id": 2198954, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/620c4b54309dd97543a0fb30ab8e8904?s=128&d=identicon&r=PG", "display_name": "Vincent J", "link": "https://stackoverflow.com/users/2198954/vincent-j"}, "is_accepted": false, "score": 0, "last_activity_date": 1432473148, "last_edit_date": 1432473148, "creation_date": 1432472199, "answer_id": 30423742, "question_id": 28321467, "link": "https://stackoverflow.com/questions/28321467/using-modules-in-meteor-js-with-typescript/30423742#30423742", "title": "Using modules in Meteor.js with Typescript", "body": "<p>After lot of trial and errors, here are my findings so far :</p>\n\n<p>Using typescript \"module\" keyword doesn't get well with Meteor. I think at the moment you cannot use it (or the workarounds are too complicated for me).</p>\n\n<p>However, here is what you can do :</p>\n\n<p>Let say that you have package A where you want to define a class ClassToExport which you want to make public.</p>\n\n<pre><code>class ClassToExport {\n  getFoo(){\n    return \"foo\";\n  }\n}\n</code></pre>\n\n<p>Please note that <strong>you can't</strong> write <code>this.ClassToExport = ClassToExport</code> and \n<code>api.export('ClassToExport')</code> or else ClassToExport won't be available in the global scope of package A, hence the need for a module/namespace for exporting your class, which we will see next.</p>\n\n<p>Now, for the class to be available for the consumers of your package, you have to create a namespace, which will be the equivalent of the \"module\" typescript keyword for internal module.</p>\n\n<p>So let's write :</p>\n\n<pre><code>declare var packageA; //so that the compiler doesn't complain about undeclared var\npackageA = packageA || {}; //so that this namespace can be reused for the entire package\npackageA.ClassToExport = ClassToExport; //the actual export\n</code></pre>\n\n<p>Now, don't forget to write \n<code>api.export('packageA')</code> in the package.js of package A</p>\n\n<p>If you have a package B where you want to use ClassToExport, you write in package B:</p>\n\n<pre><code>var cte = new packageA.ClassToExport();\n</code></pre>\n\n<p>without forgetting to api.use package A in package B's package.js</p>\n\n<p>If you don't want to write the namespace each time you use the class, you can also write <code>var ClassToExport = packageA.ClassToExport;</code> at the top of your using file.</p>\n\n<p>If you need a global class <strong>for you package only</strong>, without exporting it, then you can do instead just :</p>\n\n<pre><code>this.ClassToExport = ClassToExport\n</code></pre>\n\n<p>and again <strong>don't</strong> write <code>api.export('ClassToExport')</code>, or it won't be available in the package anymore.</p>\n\n<p>This way, i think the features (export/ import) of internal typescript modules are there.</p>\n"}, {"tags": [], "owner": {"reputation": 893, "user_id": 1348303, "user_type": "registered", "accept_rate": 26, "profile_image": "https://www.gravatar.com/avatar/011231bab044dcddb8367ccb891b51b7?s=128&d=identicon&r=PG", "display_name": "tomitrescak", "link": "https://stackoverflow.com/users/1348303/tomitrescak"}, "is_accepted": false, "score": 0, "last_activity_date": 1432607370, "creation_date": 1432607370, "answer_id": 30448502, "question_id": 28321467, "link": "https://stackoverflow.com/questions/28321467/using-modules-in-meteor-js-with-typescript/30448502#30448502", "title": "Using modules in Meteor.js with Typescript", "body": "<p>If you are not afraid of gulp build, I have prepared a typescript boilerplate project which allows you to comfortably use typescript from within your app, not depending on packages.</p>\n\n<p><a href=\"https://github.com/tomitrescak/meteor-boilerplate-typescript\" rel=\"nofollow\">https://github.com/tomitrescak/meteor-boilerplate-typescript</a></p>\n"}, {"tags": [], "owner": {"reputation": 7216, "user_id": 196038, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vaJ8i.jpg?s=128&g=1", "display_name": "ncubica", "link": "https://stackoverflow.com/users/196038/ncubica"}, "is_accepted": false, "score": 0, "last_activity_date": 1445041474, "last_edit_date": 1445041474, "creation_date": 1444631126, "answer_id": 33074489, "question_id": 28321467, "link": "https://stackoverflow.com/questions/28321467/using-modules-in-meteor-js-with-typescript/33074489#33074489", "title": "Using modules in Meteor.js with Typescript", "body": "<p>Random idea, what about extend Meteor instead of Window.</p>\n\n<pre><code>Meteor.yournamespace = Meteor.yournamespace || {};\nMeteor.yournamespace.myclass = new MyClass();\n</code></pre>\n\n<p>or</p>\n\n<pre><code>Meteor.yournamespace.MyClass = MyClass();\n</code></pre>\n\n<p>I think this is less invasive than go directly to the window object IMHO. my two cents.</p>\n\n<p>now you can do <code>Meteor.yournamespace.MyClass</code> :P</p>\n\n<p>--EDIT</p>\n\n<p>Then you could create a <code>meteor-extend.d.ts</code> file and do something like:</p>\n\n<pre><code>/// &lt;reference path=\"main.d.ts\" /&gt;\ndeclare module Meteor {\n    var yournamespace: any;\n}\n</code></pre>\n\n<p>Now you can remove the <code>&lt;any&gt;</code> before <code>Meteor</code> and Typescript will not complaint. </p>\n"}], "owner": {"reputation": 2448, "user_id": 442856, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/6420e91df209fdb7552f4190d6692696?s=128&d=identicon&r=PG", "display_name": "Ameen", "link": "https://stackoverflow.com/users/442856/ameen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1274, "favorite_count": 1, "answer_count": 5, "score": 2, "last_activity_date": 1445041474, "creation_date": 1423053028, "question_id": 28321467, "link": "https://stackoverflow.com/questions/28321467/using-modules-in-meteor-js-with-typescript", "title": "Using modules in Meteor.js with Typescript", "body": "<p>Folks, I'm trying to do something that I thought ought to be simple, but I must be doing something wrong. I'm trying to simply have a clear structure in my meteor application which uses Typescript.</p>\n\n<p>Here are my requirements:</p>\n\n<ul>\n<li>All interfaces are available in both client and server</li>\n<li>Some class implementations are only available on the server</li>\n<li>I don't want to rely on file load order for my application to work properly</li>\n<li>I need my own module to not clash with global objects (such as the Position class for example)</li>\n<li>I need to have one monolithic include file for server, one for both client and server and one for client (don't want to have 10s of includes on top of my files)</li>\n</ul>\n\n<p>The setup that I have right now is this</p>\n\n<ul>\n<li>server\n<ul>\n<li>server-book.ts</li>\n</ul></li>\n<li>client</li>\n<li>shared\n<ul>\n<li>collections.ts</li>\n</ul></li>\n<li>definitions\n<ul>\n<li>server\n<ul>\n<li>include.d.ts (includes all .d.ts files in this folder)</li>\n<li>server-book.d.ts (server specific implementation of book)</li>\n</ul></li>\n<li>client</li>\n<li>shared\n<ul>\n<li>include.d.ts (includes all .d.ts files here)</li>\n<li>book.d.ts (book interface definition)</li>\n<li>collections.d.ts</li>\n</ul></li>\n</ul></li>\n</ul>\n\n<p>In each .d.ts file I have</p>\n\n<pre>\nmodule MyModule {\n     interface Bla {}\n};\n</pre>\n\n<p>In each .ts file that defines a class I have:</p>\n\n<pre>\nmodule MyModule {\n     export class MyBla implements Bla {};\n}\n</pre>\n\n<p>All .d.ts files generated for classes are generated by tsc -d.</p>\n\n<p>No .ts files are being included via ///&lt;reference&gt; rather only .d.ts files.</p>\n\n<p>Now, when I run this, I get an error that MyModule is undefined:</p>\n\n<pre>\n/// &lt;reference path=\"shared/include.d.ts\"/&gt;\n/// &lt;reference path=\"server/include.d.ts\"/&gt;\nMeteor.startup(() => {\n   var temp = new MyModule.ServerBook();\n});\n</pre>\n\n<p>The error occurs right on MyModule.</p>\n\n<p>What am I doing wrong? What should be the proper setup here?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["javascript", "google-chrome", "debugging", "typescript"], "comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 2, "creation_date": 1423061955, "post_id": 28321316, "comment_id": 44996673, "body": "Are you using IIS? You probably have to <a href=\"http://stackoverflow.com/a/23047088/188246\">add .ts as an mime type</a> (or <a href=\"https://technet.microsoft.com/en-us/library/cc725608%28v=ws.10%29.aspx\" rel=\"nofollow noreferrer\">this</a>)"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 1, "creation_date": 1423090851, "post_id": 28321316, "comment_id": 45013340, "body": "@DavidSherret I would post that as the answer"}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1423094280, "post_id": 28321316, "comment_id": 45014491, "body": "@basarat I didn&#39;t want to answer with the assumption they were using IIS, but yeah that&#39;s most likely the issue."}, {"owner": {"reputation": 226, "user_id": 1128364, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/be20e9b0f0627ef92488c26eafe93708?s=128&d=identicon&r=PG", "display_name": "Emil Larsson", "link": "https://stackoverflow.com/users/1128364/emil-larsson"}, "edited": false, "score": 0, "creation_date": 1423211482, "post_id": 28321316, "comment_id": 45065275, "body": "Thank you! Yep, it was the missing Mime type, what a simple fix."}], "answers": [{"comments": [{"owner": {"reputation": 2295, "user_id": 1262541, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8d7544724fcfc5be9d94eb10cc3ec47c?s=128&d=identicon&r=PG", "display_name": "Seabizkit", "link": "https://stackoverflow.com/users/1262541/seabizkit"}, "edited": false, "score": 0, "creation_date": 1604172952, "post_id": 28333567, "comment_id": 114268198, "body": "you seem to know more here, how can the site work if you cant get the ts..... example i want to see what is behind an event on a button it says ts. but how did it work in the first place. Example github trying to view the source on a button, its linked to <a href=\"https://github.githubassets.com/assets/app/assets/modules/github/behaviors/confirm.ts\" rel=\"nofollow noreferrer\">github.githubassets.com/assets/app/assets/modules/github/&hellip;</a>, the size must get the code from somewhere... but i cant view it."}], "tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": true, "score": 8, "last_activity_date": 1423092551, "last_edit_date": 1495542198, "creation_date": 1423092551, "answer_id": 28333567, "question_id": 28321316, "link": "https://stackoverflow.com/questions/28321316/debug-typescript-in-chrome-404-response/28333567#28333567", "title": "Debug TypeScript in Chrome, 404 response", "body": "<p>The issue you are having is most likely that IIS isn't configured to serve <code>.ts</code> files. You'll need to add <code>.ts</code> as an MIME type.</p>\n\n<p><strong>Option 1 - Edit web.config</strong></p>\n\n<p>I'd suggest doing this change so that your project will serve <code>.ts</code> files regardless of the environment. To do this, add an <code>mimeMap</code> tag to your <code>web.config</code> under <code>configuration &gt; system.webServer &gt; staticContent</code> like so:</p>\n\n<pre><code>&lt;configuration&gt;\n    ...\n    &lt;system.webServer&gt;\n        &lt;staticContent&gt;\n            &lt;mimeMap fileExtension=\".ts\" mimeType=\"application/x-typescript\" /&gt;\n        &lt;/staticContent&gt;\n    &lt;/system.webServer&gt;\n&lt;/configuration&gt;\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/13213787/whats-the-mime-type-of-typescript/23047088#23047088\">Source</a></p>\n\n<p><strong>Option 2 - Configure IIS</strong></p>\n\n<p>Another option is to configure IIS to serve <code>.ts</code> files. Here are some resources for doing that:</p>\n\n<ul>\n<li><a href=\"http://www.iis.net/configreference/system.webserver/staticcontent/mimemap\" rel=\"nofollow noreferrer\">How to add an MIME type to a web site (IIS 8)</a></li>\n<li><a href=\"https://technet.microsoft.com/en-us/library/cc725608%28v=ws.10%29.aspx\" rel=\"nofollow noreferrer\">Add MIME Type (IIS 7)</a></li>\n<li><a href=\"http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/cd72c0dc-c5b8-42e4-96c2-b3c656f99ead.mspx?mfr=true\" rel=\"nofollow noreferrer\">Configure MIME Types (IIS 6)</a></li>\n</ul>\n"}], "owner": {"reputation": 226, "user_id": 1128364, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/be20e9b0f0627ef92488c26eafe93708?s=128&d=identicon&r=PG", "display_name": "Emil Larsson", "link": "https://stackoverflow.com/users/1128364/emil-larsson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2372, "favorite_count": 2, "accepted_answer_id": 28333567, "answer_count": 1, "score": 3, "last_activity_date": 1423092551, "creation_date": 1423052668, "question_id": 28321316, "link": "https://stackoverflow.com/questions/28321316/debug-typescript-in-chrome-404-response", "title": "Debug TypeScript in Chrome, 404 response", "body": "<p>I'm compiling my .TS to JavaScript and generating source maps. However, I can't debug the actual files. I have an X number of .TS files that compiles into CombinedTypescript.js with a source map that is correct.</p>\n\n<p>However, when I try to access my .TS files in the Chrome Debugger, it just gives me a 404 response. The files exist in \"Sources\", but I can't access them or set breakpoints in CombinedTypescript.js and step through my files.</p>\n\n<p>Does anyone have an idea of what the problem might be?</p>\n"}, {"tags": ["javascript", "typescript", "obfuscation", "google-closure-compiler"], "answers": [{"tags": [], "owner": {"reputation": 14130, "user_id": 1211524, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f31a02e08cce5cb8fb2f50656b1756be?s=128&d=identicon&r=PG", "display_name": "Chad Killingsworth", "link": "https://stackoverflow.com/users/1211524/chad-killingsworth"}, "is_accepted": false, "score": 3, "last_activity_date": 1423087498, "creation_date": 1423087498, "answer_id": 28332373, "question_id": 28318862, "link": "https://stackoverflow.com/questions/28318862/can-typescript-output-annotations-for-closure-compiler/28332373#28332373", "title": "can TypeScript output annotations for Closure Compiler?", "body": "<p>Your understanding is mostly correct. The advantage to type based renaming (which requires the <code>--use_types_for_optimization</code> flag) is that properties that are named the same as any property in an extern are no longer blocked from renaming.</p>\n\n<pre><code>var foo = {};\nfoo.src = 'test'; //only renameable with type based optimizations\n</code></pre>\n\n<p>As for typescript, closure-compiler is being modified to understand type-script style type notations. However this project is in the very early stages. The plugins you linked are the best option I know of for now.</p>\n\n<p>The type systems in Typescript and Closure-Compiler are not completely compatible right now. That is also being actively worked on.</p>\n"}, {"comments": [{"owner": {"reputation": 5313, "user_id": 873003, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AFsPK.jpg?s=128&g=1", "display_name": "John", "link": "https://stackoverflow.com/users/873003/john"}, "reply_to_user": {"reputation": 2258, "user_id": 3352025, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RpFHA.jpg?s=128&g=1", "display_name": "Lye Fish", "link": "https://stackoverflow.com/users/3352025/lye-fish"}, "edited": false, "score": 1, "creation_date": 1441032578, "post_id": 28334507, "comment_id": 52503146, "body": "Looks like someone removed the &quot;Experimental&quot; part of the name: It is here now: &quot;<a href=\"https://github.com/google/closure-compiler/wiki/Type-Based-Property-Renaming\" rel=\"nofollow noreferrer\">github.com/google/closure-compiler/wiki/&hellip;</a>&quot;"}], "tags": [], "owner": {"reputation": 5313, "user_id": 873003, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AFsPK.jpg?s=128&g=1", "display_name": "John", "link": "https://stackoverflow.com/users/873003/john"}, "is_accepted": false, "score": 4, "last_activity_date": 1441032609, "last_edit_date": 1441032609, "creation_date": 1423098232, "answer_id": 28334507, "question_id": 28318862, "link": "https://stackoverflow.com/questions/28318862/can-typescript-output-annotations-for-closure-compiler/28334507#28334507", "title": "can TypeScript output annotations for Closure Compiler?", "body": "<h2>Update</h2>\n\n<p>As of the 20150315 release of Closure-compiler, the type based optimizations are enabled by default.</p>\n\n<hr>\n\n<p>\"use types for optimizations\" triggers several compiler optimizations:</p>\n\n<ul>\n<li>\"disambiguate properties\"</li>\n<li>\"ambiguate properties\"</li>\n<li>\"inline properties\"</li>\n</ul>\n\n<p>Disambiguation occurs early in the optimization process and enables the type unaware optimizations to remove unused properties, devirtualization and other optimizations</p>\n\n<p>Ambiguation occurs just before renaming and is specifically to improve code size by leveraging shorter names and making them more common (which improves gzipping)</p>\n\n<p>Inline properties uses type information to inline properties that wouldn't otherwise be devirtualized. This pass is less effective and thus less interesting to this discussion.</p>\n\n<p>These optimizations are very effective for larger projects but there are some risks involved as there are isn't usually any runtime type enforcement.  It is possible to lie about the types in a variety of unintentional ways.  I describe the risks in more detail in this project wiki page:</p>\n\n<p><a href=\"https://github.com/google/closure-compiler/wiki/Type-Based-Property-Renaming\" rel=\"nofollow\">https://github.com/google/closure-compiler/wiki/Type-Based-Property-Renaming</a> </p>\n\n<p>The risks are low but can be mitigated by using the \"runtime type check\" instrumentation that the compiler supports. If you are trying to retrofit a larger project or having trouble isolating a \"bad\" disambiguation, look into the \"runtime type check\"</p>\n\n<p>The TypeScript issue is a separate and should be really be a separate question.  Converting TypeScript to the Closure Compiler type system is possible to some extend but there are differences between the TypeScript and Closure Compiler type systems (TypeScript is distinctly unsound and allows many unsafe assignments).</p>\n"}, {"tags": [], "owner": {"reputation": 6633, "user_id": 968379, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/cca1b075aa9adcf0757b4c289eaa3218?s=128&d=identicon&r=PG&f=1", "display_name": "Matt", "link": "https://stackoverflow.com/users/968379/matt"}, "is_accepted": false, "score": 1, "last_activity_date": 1433969613, "last_edit_date": 1433969613, "creation_date": 1433260038, "answer_id": 30600717, "question_id": 28318862, "link": "https://stackoverflow.com/questions/28318862/can-typescript-output-annotations-for-closure-compiler/30600717#30600717", "title": "can TypeScript output annotations for Closure Compiler?", "body": "<p>I think Google Closure Compiler will support TypeScript annotations in the near future. Look <a href=\"https://groups.google.com/forum/#!topic/closure-compiler-discuss/5EVAw6oO2BI\" rel=\"nofollow\">here</a></p>\n"}], "owner": {"reputation": 2155, "user_id": 319182, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/fbc8780cc150b0b98662e3c2d54e18d4?s=128&d=identicon&r=PG", "display_name": "Malki", "link": "https://stackoverflow.com/users/319182/malki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3288, "favorite_count": 2, "answer_count": 3, "score": 5, "last_activity_date": 1441032609, "creation_date": 1423045260, "last_edit_date": 1423045827, "question_id": 28318862, "link": "https://stackoverflow.com/questions/28318862/can-typescript-output-annotations-for-closure-compiler", "title": "can TypeScript output annotations for Closure Compiler?", "body": "<p>I'm using TypeScript, and I want to use Closure-Compiler to minify and obfuscate the JS output that I get after building my TS code.</p>\n\n<p>I read that GCC is capable of obfuscating based on type definitions. As far as I can tell (and please correct me if I'm wrong) this means that if I have type annotations on my code then GCC will use them to do a better obfuscation.</p>\n\n<p>For example, for <code>obj.someProp</code> GCC currently finds all instances of the <code>someProp</code> property name in my code, without regarding which object it's on, and replaces all of them to the same obfuscated name (e.g. <code>o.a</code>).<br>\nBut if I had type annotations on my code GCC would instead be able to know which object is of which type and obfuscate it accordingly - so the same property name on two different types will be obfuscated to two different names.</p>\n\n<p>Questions:</p>\n\n<ul>\n<li>Did I understand this correctly?</li>\n<li>Is \"type-safe\" obfuscation a good thing?<br>\nI mean, what are the benefits of it? It seems like it would not have an impact on the resulting file size, and might even have a negative impact on the gzipped file size (since there are potentially more different keys across different types).</li>\n<li>Can I use TypeScript to somehow create the GCC annotations automatically?<br>\nsince TS is already type-safe, I believe it is possible, however I'm skeptical that it is a feature. It would probably require knowledge of the TS-compiler internals. Any insights on this?</li>\n</ul>\n\n<p><strong>EDIT</strong></p>\n\n<p>I actually just found <a href=\"https://github.com/evanw/typescript-closure-compiler\">this</a> and <a href=\"http://bolinfest.com/typescript/\">this</a>. I'll check it out and post an update soon.</p>\n"}, {"tags": ["javascript", "typescript"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user1274564"}, "edited": false, "score": 2, "creation_date": 1423017211, "post_id": 28311632, "comment_id": 44975371, "body": "Thank you for your help. Please note for anyone else that after reading around I found out that Unions are not in version of Typescript below 1.4."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 3, "last_activity_date": 1423012887, "last_edit_date": 1423012887, "creation_date": 1423011282, "answer_id": 28311632, "question_id": 28311584, "link": "https://stackoverflow.com/questions/28311584/typescript-hybrid-type/28311632#28311632", "title": "Typescript hybrid type", "body": "<p>What you are really looking for is a <code>Union</code> Type (denoted by <code>|</code>). For your case:</p>\n\n<pre><code>interface IObj {\n    href: string | { (...any): any };\n};\n\n\nvar obj: IObj = {\n    href: \"page/list.html\"\n}\n\nvar obj: IObj = {\n    href: function (data) { return \"/page/\" + data.id; }\n}\n\n// ERROR\nvar obj: IObj = { \n    href: 123\n}\n</code></pre>\n\n<p><a href=\"http://www.typescriptlang.org/Playground/#src=interface%20IObj%20%7B%0A%20%20%20%20href%3A%20string%20%7C%20%7B%20(...any)%3A%20any%20%7D%3B%0A%7D%3B%0A%0A%0Avar%20obj%3A%20IObj%20%3D%20%7B%0A%20%20%20%20href%3A%20%22page%2Flist.html%22%0A%7D%0A%0Avar%20obj%3A%20IObj%20%3D%20%7B%0A%20%20%20%20href%3A%20function%20(data)%20%7B%20return%20%22%2Fpage%2F%22%20%2B%20data.id%3B%20%7D%0A%7D%0A%0A%2F%2F%20ERROR%0Avar%20obj%3A%20IObj%20%3D%20%7B%20%0A%20%20%20%20href%3A%20123%0A%7D\" rel=\"nofollow\">See an example</a></p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user1274564"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 0, "accepted_answer_id": 28311632, "answer_count": 1, "score": 1, "last_activity_date": 1423012887, "creation_date": 1423011002, "question_id": 28311584, "link": "https://stackoverflow.com/questions/28311584/typescript-hybrid-type", "title": "Typescript hybrid type", "body": "<p>I am currently writing a *d.ts files for a private JavaScript file that I cannot modify. I'm currently trying to define a property in an interface that can be either a <strong>string</strong> or a <strong>function</strong>:</p>\n\n<pre><code>var obj = {\n    href: function(data) { return \"/page/\" + data.id; }\n}\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>var obj = {\n    href: \"page/list.html\"\n}\n</code></pre>\n\n<p>After looking at the <a href=\"http://www.typescriptlang.org/Handbook\" rel=\"nofollow\">typescript doc</a> about interfaces I came across the <a href=\"http://www.typescriptlang.org/Handbook#interfaces-hybrid-types\" rel=\"nofollow\">follow example</a> but it won't let me define the function as an optional type as shown below:</p>\n\n<pre><code>interface IObj {\n    href: {\n        (...any)?: any;\n        string? ;\n    };\n}\n</code></pre>\n\n<p>Is this even possible? Or am I approaching this the wrong way?</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 843, "user_id": 376518, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f8728906f66ef319875cb48b6cd5c771?s=128&d=identicon&r=PG", "display_name": "4dan", "link": "https://stackoverflow.com/users/376518/4dan"}, "edited": false, "score": 0, "creation_date": 1423003933, "post_id": 28308695, "comment_id": 44971514, "body": "Aha! Since nearly all of my Javascript programming has been with node.js, I tend to forget about global scope."}, {"owner": {"reputation": 843, "user_id": 376518, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f8728906f66ef319875cb48b6cd5c771?s=128&d=identicon&r=PG", "display_name": "4dan", "link": "https://stackoverflow.com/users/376518/4dan"}, "edited": false, "score": 0, "creation_date": 1423433541, "post_id": 28308695, "comment_id": 45135583, "body": "Both of the answers here were helpful, but this one was the key insight I was missing for why Promise was available without exporting it."}], "tags": [], "owner": {"reputation": 658, "user_id": 4499525, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XpNno.png?s=128&g=1", "display_name": "error", "link": "https://stackoverflow.com/users/4499525/error"}, "is_accepted": true, "score": 1, "last_activity_date": 1422997422, "creation_date": 1422997422, "answer_id": 28308695, "question_id": 28305523, "link": "https://stackoverflow.com/questions/28305523/seeking-better-understanding-of-declaring-external-javascript-modules-writing/28308695#28308695", "title": "Seeking better understanding of declaring external javascript modules (writing .d.t.s files)", "body": "<p>The problem is in <a href=\"https://github.com/borisyankov/DefinitelyTyped/blob/master/bluebird/bluebird.d.ts\" rel=\"nofollow\">bluebird.d.ts</a>:</p>\n\n<pre><code>declare class Promise&lt;R&gt; implements Promise.Thenable&lt;R&gt;, Promise.Inspection&lt;R&gt;\n</code></pre>\n\n<p>It declares the class in global scope.</p>\n"}, {"comments": [{"owner": {"reputation": 843, "user_id": 376518, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f8728906f66ef319875cb48b6cd5c771?s=128&d=identicon&r=PG", "display_name": "4dan", "link": "https://stackoverflow.com/users/376518/4dan"}, "edited": false, "score": 0, "creation_date": 1423003697, "post_id": 28310097, "comment_id": 44971421, "body": "Thank you, that&#39;s helpful. But it seems to be inconsistent with the requirement to use the <code>export</code> keyword in other contexts. Can you elaborate on this a little?  By the way, Typescript is <i>awesome</i>. Thanks!"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 843, "user_id": 376518, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f8728906f66ef319875cb48b6cd5c771?s=128&d=identicon&r=PG", "display_name": "4dan", "link": "https://stackoverflow.com/users/376518/4dan"}, "edited": false, "score": 0, "creation_date": 1423005189, "post_id": 28310097, "comment_id": 44971992, "body": "@4dan I&#39;ve added more clarification"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 1, "last_activity_date": 1423005174, "last_edit_date": 1423005174, "creation_date": 1423003079, "answer_id": 28310097, "question_id": 28305523, "link": "https://stackoverflow.com/questions/28305523/seeking-better-understanding-of-declaring-external-javascript-modules-writing/28310097#28310097", "title": "Seeking better understanding of declaring external javascript modules (writing .d.t.s files)", "body": "<blockquote>\n  <p>Nowhere in this file is Promise explicitly exported, yet Typescript applications can import this module via a reference path and import Other = require('other');</p>\n</blockquote>\n\n<p>When a file <code>a</code> does <code>/// &lt;reference foo</code> and later a file <code>b</code> does <code>/// &lt;reference a</code> then file <code>b</code> <em>implicitly</em> references <code>foo</code></p>\n\n<p>Here your file references <code>bluebird</code> so any thing that <code>references</code> your file will implicitly reference <code>bluebird</code>. </p>\n\n<h1>Reference vs. import</h1>\n\n<p><code>/// &lt;reference</code> <em>only</em> works if there is no root level <code>import</code> / <code>export</code> in the file. If there a root level <code>export</code> in the file it is considered an <em>external module</em> and can only be brought in with a corresponding <code>import</code> in another file. </p>\n"}], "owner": {"reputation": 843, "user_id": 376518, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f8728906f66ef319875cb48b6cd5c771?s=128&d=identicon&r=PG", "display_name": "4dan", "link": "https://stackoverflow.com/users/376518/4dan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 703, "favorite_count": 0, "accepted_answer_id": 28308695, "answer_count": 2, "score": 0, "last_activity_date": 1423005174, "creation_date": 1422986016, "question_id": 28305523, "link": "https://stackoverflow.com/questions/28305523/seeking-better-understanding-of-declaring-external-javascript-modules-writing", "title": "Seeking better understanding of declaring external javascript modules (writing .d.t.s files)", "body": "<p>After a bit of trial and error I figured out how to write a .d.ts file for a complex NPM javascript package. The package uses bluebird promises, so it needs to import bluebird and export the bluebird Promise interface. The solution I found boils down to something like this:</p>\n\n<pre><code>/// &lt;reference path='../typings/bluebird/bluebird.d.ts' /&gt;\n\ndeclare module 'other' {\n  import Promise = require('bluebird');\n\n  interface Foo {\n    func1(): Promise&lt;void&gt;;\n  }\n\n  var Other: Foo;\n  export = Other;\n}\n\ndeclare module Other {\n  export module X {\n    export interface Y {\n      func2(): Promise&lt;void&gt;;\n    }\n  }\n}\n</code></pre>\n\n<p>Nowhere in this file is <code>Promise</code> explicitly exported, yet Typescript applications can import this module via a reference path and <code>import Other = require('other');</code> and then use the type <code>Promise</code>, without even scoping the type as <code>Other.Promise</code>.</p>\n\n<p>I've looked through the Handbook and the Language Specification trying to get a better understanding to no avail, though perhaps I've missed something. In seems that <code>export = &lt;identifier&gt;;</code> exports more than the identifier. Can anyone enlighten me?</p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 15836, "user_id": 1675492, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/HsMph.jpg?s=128&g=1", "display_name": "Ingo B&#252;rk", "link": "https://stackoverflow.com/users/1675492/ingo-b%c3%bcrk"}, "edited": false, "score": 0, "creation_date": 1422980530, "post_id": 28303725, "comment_id": 44958792, "body": "The specification contains information on how certain amiguities are resolved."}, {"owner": {"reputation": 6523, "user_id": 499922, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/168958e86210e7a60277634309705672?s=128&d=identicon&r=PG", "display_name": "billc.cn", "link": "https://stackoverflow.com/users/499922/billc-cn"}, "reply_to_user": {"reputation": 15836, "user_id": 1675492, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/HsMph.jpg?s=128&g=1", "display_name": "Ingo B&#252;rk", "link": "https://stackoverflow.com/users/1675492/ingo-b%c3%bcrk"}, "edited": false, "score": 0, "creation_date": 1422984374, "post_id": 28303725, "comment_id": 44961153, "body": "@IngoB&#252;rk I have read the spec, but it is not very clear to me how type assertions interact with property access and function expressions. E.g., what does this expression mean <code>&lt;T&gt; a.b</code>?"}, {"owner": {"reputation": 15836, "user_id": 1675492, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/HsMph.jpg?s=128&g=1", "display_name": "Ingo B&#252;rk", "link": "https://stackoverflow.com/users/1675492/ingo-b%c3%bcrk"}, "edited": false, "score": 1, "creation_date": 1422985336, "post_id": 28303725, "comment_id": 44961698, "body": "4.13 states that type assertions are applied on an (entire) unary expression. Hence, I would expect that <code>&lt;T&gt; a.b</code> is equivalent to <code>&lt;T&gt; (a.b)</code>. And a quick test does confirm this."}], "answers": [{"comments": [{"owner": {"reputation": 6523, "user_id": 499922, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/168958e86210e7a60277634309705672?s=128&d=identicon&r=PG", "display_name": "billc.cn", "link": "https://stackoverflow.com/users/499922/billc-cn"}, "edited": false, "score": 0, "creation_date": 1423042814, "post_id": 28316948, "comment_id": 44984935, "body": "Okay, so it matches the cast operator in C-like languages. However, I just want to point out another thing: function application binds more closely than type assertion, so the following does not type: <code>interface FunType { (): string }            var x: string= &lt;FunType&gt; function() {return undefined;}();</code>. This again matches C, but is unclear solely based on the spec."}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 2, "last_activity_date": 1423039328, "creation_date": 1423039328, "answer_id": 28316948, "question_id": 28303725, "link": "https://stackoverflow.com/questions/28303725/typescript-operator-precedence-table-or-whats-the-precedence-of-type-assertion/28316948#28316948", "title": "TypeScript operator precedence table (or what&#39;s the precedence of Type Assertions?)", "body": "<p>I have supplied some examples of Type Assertions below that will hopefully shine some light on this feature for you.</p>\n\n<p>The interesting bit is that <em>if a set of parentheses has an affect on the scope of a type assertion, the parentheses are removed by type erasure during compilation</em>. This means that example <code>b</code> below results in <code>(x)</code> in the JavaScript, whereas example <code>c</code> results in simply <code>x</code>.</p>\n\n<p>The only reason to use parentheses to set the scope of the type assertion is when you want to apply to a part of the right-hand expression, in which case you would place the type assertion inside of the parentheses, as shown in example <code>e</code>.</p>\n\n<pre><code>interface SomeType {\n    name: string;\n    id: number;\n}\n\nvar x = {};\n\nvar a: SomeType = &lt;SomeType&gt; x;\n\n// Note, when brackets do not affect \n// type assertions they will be left in the output\nvar b: SomeType = &lt;SomeType&gt; (x);\n\n// When brackets affect type assertions,\n// they are erased along with the type information\nvar c: SomeType = (&lt;SomeType&gt; x);\n\n// Two errors:\n// - SomeType is not assignable to d\n// - Property id does not exist on x\nvar d: number = &lt;SomeType&gt; x.id;\n\n// Brackets are useful here:\nvar e: number = (&lt;SomeType&gt; x).id;\n\n// More complex example\nvar func = () =&gt; {\n    return x; // return type is {}\n};\nvar f: SomeType = &lt;SomeType&gt; func();\n</code></pre>\n"}], "owner": {"reputation": 6523, "user_id": 499922, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/168958e86210e7a60277634309705672?s=128&d=identicon&r=PG", "display_name": "billc.cn", "link": "https://stackoverflow.com/users/499922/billc-cn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1395, "favorite_count": 0, "accepted_answer_id": 28316948, "answer_count": 1, "score": 4, "last_activity_date": 1423039328, "creation_date": 1422980299, "question_id": 28303725, "link": "https://stackoverflow.com/questions/28303725/typescript-operator-precedence-table-or-whats-the-precedence-of-type-assertion", "title": "TypeScript operator precedence table (or what&#39;s the precedence of Type Assertions?)", "body": "<p>I guess operators exist in JavaScript use their original precedence, but new constructs like Type Assertions (i.e. <code>&lt;Type&gt; expr</code>) and arrow function expressions are less clear.</p>\n\n<p>It will be helpful if there's an official table somewhere.</p>\n"}, {"tags": ["generics", "casting", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 28736, "user_id": 54981, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/32378ae3a7538b84f48f59752ef6fe28?s=128&d=identicon&r=PG", "display_name": "SWeko", "link": "https://stackoverflow.com/users/54981/sweko"}, "edited": false, "score": 0, "creation_date": 1422973079, "post_id": 28299801, "comment_id": 44953483, "body": "Tnx, at least the compiler is happy now."}], "tags": [], "owner": {"reputation": 54248, "user_id": 95190, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a58c0b44762885ca46ecee7f5b379f3d?s=128&d=identicon&r=PG", "display_name": "WiredPrairie", "link": "https://stackoverflow.com/users/95190/wiredprairie"}, "is_accepted": false, "score": 2, "last_activity_date": 1422969084, "creation_date": 1422969084, "answer_id": 28299801, "question_id": 28299380, "link": "https://stackoverflow.com/questions/28299380/generic-casting-in-typescript/28299801#28299801", "title": "Generic casting in Typescript", "body": "<p>Since a <code>U</code> isn't necessarily a <code>T</code>, you'd need to change the type assertion to be less specific by using <code>any</code>: </p>\n\n<pre><code>selector = x =&gt; &lt;any&gt;x;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 28736, "user_id": 54981, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/32378ae3a7538b84f48f59752ef6fe28?s=128&d=identicon&r=PG", "display_name": "SWeko", "link": "https://stackoverflow.com/users/54981/sweko"}, "edited": false, "score": 0, "creation_date": 1423141725, "post_id": 28310171, "comment_id": 45033786, "body": "Yes, <code>T</code> is not castable to <code>U</code>, but <code>T</code> is castable to <code>any</code> which is then castable to <code>U</code>. Thx,"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 3, "last_activity_date": 1423003376, "creation_date": 1423003376, "answer_id": 28310171, "question_id": 28299380, "link": "https://stackoverflow.com/questions/28299380/generic-casting-in-typescript/28310171#28310171", "title": "Generic casting in Typescript", "body": "<p>Here is the complete code:</p>\n\n<pre><code>export function findFirst&lt;T, U&gt;(\n        array: T[], \n        predicate: (item: T) =&gt; boolean, \n        selector: (item: T) =&gt; U = (x:T)=&gt; &lt;U&gt;&lt;any&gt;x): U {\n     return array.filter(predicate).map(selector)[0];\n}\n</code></pre>\n\n<p>Reason for <code>&lt;U&gt;&lt;any&gt;</code> : Type <code>T</code> can be asserted to type <code>U</code> <em>only</em> if T is a subtype of U OR U is a subtype of T. Since that is not determinable you need to convert to <code>&lt;any&gt;</code> <em>before</em> you can assert to <code>&lt;U&gt;</code></p>\n"}, {"tags": [], "owner": {"reputation": 77031, "user_id": 44743, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9af6bab469df2f4e1486c3a608446f3b?s=128&d=identicon&r=PG", "display_name": "recursive", "link": "https://stackoverflow.com/users/44743/recursive"}, "is_accepted": false, "score": 1, "last_activity_date": 1423016124, "creation_date": 1423016124, "answer_id": 28312393, "question_id": 28299380, "link": "https://stackoverflow.com/questions/28299380/generic-casting-in-typescript/28312393#28312393", "title": "Generic casting in Typescript", "body": "<p>You can just move the default value to the parameter declaration.</p>\n\n<pre><code>function findFirst&lt;T, U&gt;(\n    array: T[], \n    predicate: (item: T) =&gt; boolean, \n    selector: (item: T) =&gt; U = (x =&gt; x)): U {\n       // ....\n}\n</code></pre>\n"}], "owner": {"reputation": 28736, "user_id": 54981, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/32378ae3a7538b84f48f59752ef6fe28?s=128&d=identicon&r=PG", "display_name": "SWeko", "link": "https://stackoverflow.com/users/54981/sweko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4030, "favorite_count": 0, "accepted_answer_id": 28310171, "answer_count": 3, "score": 4, "last_activity_date": 1423016124, "creation_date": 1422967813, "last_edit_date": 1422973387, "question_id": 28299380, "link": "https://stackoverflow.com/questions/28299380/generic-casting-in-typescript", "title": "Generic casting in Typescript", "body": "<p>I'm trying to create a simple generic find function in TypeScript, along the lines of:</p>\n\n<pre><code>export function findFirst&lt;T, U&gt;(\n        array: T[], \n        predicate: (item: T) =&gt; boolean, \n        selector?: (item: T) =&gt; U): U {\n     ...\n}\n</code></pre>\n\n<p>So, my parameters are:<br>\n- the array to filter through<br>\n- a predicate to test each element<br>\n- a selector to get the return value </p>\n\n<p>What I want to do is provide a default selector, i.e. if no selector is provided, just return the whole value, i.e. something like:</p>\n\n<pre><code>if (typeof selector === \"undefined\")\n    selector = (x) =&gt; x;\n</code></pre>\n\n<p>However this, (or even <code>(x) =&gt; &lt;U&gt;x</code>) breaks the generic definition of the function. How can I achieve a default selector without removing the generic parameters?</p>\n\n<hr>\n\n<p>If I use code like:</p>\n\n<pre><code>var arr = [1,2,3,4];\nvar even = findFirst(arr, x =&gt; x % 2 === 0);\n</code></pre>\n\n<p>i.e. return the first even number, it infers the type of y as <code>{}</code> i.e. <code>object</code> instead of number. \nIt seems that, as U can only be inferred from the <code>selector</code> parameter, which is undefined in this case, U defaults to <code>object</code>.\nI know I ask a bit too much of the type inference, but is there any way around this?</p>\n"}, {"tags": ["typescript", "indentation", "code-formatting", "typescript1.4"], "comments": [{"owner": {"reputation": 54248, "user_id": 95190, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a58c0b44762885ca46ecee7f5b379f3d?s=128&d=identicon&r=PG", "display_name": "WiredPrairie", "link": "https://stackoverflow.com/users/95190/wiredprairie"}, "edited": false, "score": 0, "creation_date": 1422968570, "post_id": 28298624, "comment_id": 44950750, "body": "I&#39;d suggest contacting the author on the download site for WebEssentials. (You could also disable the WebEssentials extension to see if the behavior is caused by it)."}, {"owner": {"reputation": 1939, "user_id": 395658, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/cN5n2.jpg?s=128&g=1", "display_name": "Anupheaus", "link": "https://stackoverflow.com/users/395658/anupheaus"}, "reply_to_user": {"reputation": 54248, "user_id": 95190, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a58c0b44762885ca46ecee7f5b379f3d?s=128&d=identicon&r=PG", "display_name": "WiredPrairie", "link": "https://stackoverflow.com/users/95190/wiredprairie"}, "edited": false, "score": 0, "creation_date": 1422973068, "post_id": 28298624, "comment_id": 44953474, "body": "Good idea, have tried disabling WebEssentials and it is not that which is causing this issue.  Have updated post due to these findings."}, {"owner": {"reputation": 7686, "user_id": 2626313, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/613888ad5bbd9ddba4bd81bbbfeb7a05?s=128&d=identicon&r=PG", "display_name": "xmojmr", "link": "https://stackoverflow.com/users/2626313/xmojmr"}, "edited": false, "score": 0, "creation_date": 1422975574, "post_id": 28298624, "comment_id": 44955206, "body": "This maybe related <a href=\"https://github.com/Microsoft/TypeScript/issues/1276\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/issues/1276</a>"}, {"owner": {"reputation": 1939, "user_id": 395658, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/cN5n2.jpg?s=128&g=1", "display_name": "Anupheaus", "link": "https://stackoverflow.com/users/395658/anupheaus"}, "edited": false, "score": 0, "creation_date": 1422982050, "post_id": 28298624, "comment_id": 44959703, "body": "You may be right, but that seems to be to do with tab spacing (being 2 instead of 4) in VS2015, my issue seems to be with an indentation not being applied in VS 2013 when it should be, but not denying it could be related (I&#39;ve updated my post to include the VS version I&#39;m using).  I&#39;m happy to raise this as a bug on the github site if I&#39;m sure I&#39;m not doing anything daft first though."}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 0, "last_activity_date": 1423003700, "creation_date": 1423003700, "answer_id": 28310249, "question_id": 28298624, "link": "https://stackoverflow.com/questions/28298624/typescript-1-4-indentation-issue/28310249#28310249", "title": "TypeScript 1.4 indentation issue", "body": "<p>Seems like a new bug so I raised it on Github : <a href=\"https://github.com/Microsoft/TypeScript/issues/1917\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/1917</a></p>\n\n<p>Observed it in <a href=\"https://atom.io/packages/atom-typescript\" rel=\"nofollow\">https://atom.io/packages/atom-typescript</a> as well which simply calls the language service.</p>\n"}], "owner": {"reputation": 1939, "user_id": 395658, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/cN5n2.jpg?s=128&g=1", "display_name": "Anupheaus", "link": "https://stackoverflow.com/users/395658/anupheaus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 556, "favorite_count": 0, "accepted_answer_id": 28310249, "answer_count": 1, "score": 0, "last_activity_date": 1423003700, "creation_date": 1422965560, "last_edit_date": 1422982070, "question_id": 28298624, "link": "https://stackoverflow.com/questions/28298624/typescript-1-4-indentation-issue", "title": "TypeScript 1.4 indentation issue", "body": "<p>I recently upgraded TypeScript to v1.4 (I'm using VS2013) and the code indentation formatting seems to have been changed with the update.</p>\n\n<p>The way my code looked before was like this:</p>\n\n<pre><code>return this.doSomethingThatReturnsAPromise()\n    .then(()=&gt;{\n        // more code\n    })\n    .then(()=&gt;{\n        // even more code\n    });\n</code></pre>\n\n<p>But since installing v1.4 the code now formats like this:</p>\n\n<pre><code>return this.doSomethingThatReturnsAPromise()\n    .then(()=&gt;{\n    // more code\n})\n    .then(()=&gt;{\n    // even more code\n});\n</code></pre>\n\n<p>Whenever I change it back to the way I used to have it and type something that formats the code it puts it back to the new way (which I really don't like).  Any ideas what I can check or change to make it go back to the way it was before please?</p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 7686, "user_id": 2626313, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/613888ad5bbd9ddba4bd81bbbfeb7a05?s=128&d=identicon&r=PG", "display_name": "xmojmr", "link": "https://stackoverflow.com/users/2626313/xmojmr"}, "edited": false, "score": 0, "creation_date": 1422891737, "post_id": 28279398, "comment_id": 44916703, "body": "Another trick buried in the docs is the <code>eagle</code> example <a href=\"http://www.typescriptlang.org/Handbook#writing-dts-files-examples\" rel=\"nofollow noreferrer\">typescriptlang.org/Handbook#writing-dts-files-examples</a>"}], "answers": [{"comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1422920188, "post_id": 28285541, "comment_id": 44931487, "body": "<code>and make .d.ts files for the .js files.</code>  +1"}, {"owner": {"reputation": 1270, "user_id": 867304, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2d63541009352606b42125fc2ebaa6ae?s=128&d=identicon&r=PG", "display_name": "Martijn", "link": "https://stackoverflow.com/users/867304/martijn"}, "reply_to_user": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1422920346, "post_id": 28285541, "comment_id": 44931535, "body": "yeah, should be explained better, &quot;typescript definition files&quot;, reference: <a href=\"https://typescript.codeplex.com/wikipage?title=Writing%20Definition%20%28.d.ts%29%20Files\" rel=\"nofollow noreferrer\">typescript.codeplex.com/&hellip;</a>"}, {"owner": {"reputation": 1463, "user_id": 250611, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/584c6b578c6e69c443caa094429ff65d?s=128&d=identicon&r=PG", "display_name": "Gipsy King", "link": "https://stackoverflow.com/users/250611/gipsy-king"}, "edited": false, "score": 0, "creation_date": 1423042062, "post_id": 28285541, "comment_id": 44984480, "body": "You are right, in my case I have decided it will be best to convert to typescript (it&#39;s not a rewrite, really) instead if writing <code>d.ts</code> files. Thank you."}], "tags": [], "owner": {"reputation": 1270, "user_id": 867304, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2d63541009352606b42125fc2ebaa6ae?s=128&d=identicon&r=PG", "display_name": "Martijn", "link": "https://stackoverflow.com/users/867304/martijn"}, "is_accepted": true, "score": 2, "last_activity_date": 1422906431, "creation_date": 1422906431, "answer_id": 28285541, "question_id": 28279398, "link": "https://stackoverflow.com/questions/28279398/use-function-constructor-prototype-as-type-to-avoid-rewriting-large-part-of-c/28285541#28285541", "title": "Use function constructor + prototype as type, to avoid rewriting large part of codebase", "body": "<p>If i understand it correct, you have 'javascript' style typescript files. </p>\n\n<p>You probably need to choose what you want to do with your current code. Leave it as .js or convert it to .ts</p>\n\n<p>We had the same situation, we choose to keep the .js as it is and make .d.ts files for the .js files. Only for the functions and and classes we used from .ts and only when we needed.</p>\n\n<p>At the end it gaves a very nice overview about the .js functions we used and what code was obsolete.</p>\n"}, {"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 1, "last_activity_date": 1422920518, "creation_date": 1422920518, "answer_id": 28288901, "question_id": 28279398, "link": "https://stackoverflow.com/questions/28279398/use-function-constructor-prototype-as-type-to-avoid-rewriting-large-part-of-c/28288901#28288901", "title": "Use function constructor + prototype as type, to avoid rewriting large part of codebase", "body": "<p>As mentioned by Martijn you might want to just create a <code>.d.ts</code>. I suspect you have already arrived at that conclusion and looking for guidance on how to do that. </p>\n\n<p>For your particular case <code>p.d.ts</code>: </p>\n\n<pre><code>declare module \"P\" {\n    class P {\n        method:Function;\n    }\n    export = P;\n}\n</code></pre>\n\n<p>Usage: </p>\n\n<pre><code>/// &lt;reference path=\"./p.d.ts\"/&gt;\nimport P = require(\"P\");\nvar p = new P();\np.method(); // OKay\n</code></pre>\n"}], "owner": {"reputation": 1463, "user_id": 250611, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/584c6b578c6e69c443caa094429ff65d?s=128&d=identicon&r=PG", "display_name": "Gipsy King", "link": "https://stackoverflow.com/users/250611/gipsy-king"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 233, "favorite_count": 0, "accepted_answer_id": 28285541, "answer_count": 2, "score": 0, "last_activity_date": 1422920518, "creation_date": 1422885568, "question_id": 28279398, "link": "https://stackoverflow.com/questions/28279398/use-function-constructor-prototype-as-type-to-avoid-rewriting-large-part-of-c", "title": "Use function constructor + prototype as type, to avoid rewriting large part of codebase", "body": "<p><strong>Is there a way to get <code>tsc</code> to interpret an external module that exports a constructor function + prototype as a type?</strong></p>\n\n<p>While converting a large codebase to TypeScript, I found that typescript does not recognize external modules that export a function constructor and it's prototype as types.</p>\n\n<pre><code>function P() {...}\nP.prototype.method = function() {...};\n...\nexport = P;\n</code></pre>\n\n<p>If I later <code>import</code> this file, the type is simply the function signature and not a class-like type. This gives me type errors, e.g.:</p>\n\n<pre><code>import P = require('P');\nvar c:P = new P(); // cannot find name P\nvar c = new P(); // c has no type information\n</code></pre>\n\n<p>I know I should rewrite the code to use typescript's types with classes and interfaces, but it would be really nice if I could do that gradually and at least compile the project as it is with <code>tsc</code>. I recently found out that you can use the type of an external module that exports a singleton object like this:</p>\n\n<pre><code>var S = {...};\nexport S;\n</code></pre>\n\n<p>...and in another file:</p>\n\n<pre><code>import S = require('s');\ninterface C {\n  s:typeof S; // notice the \"typeof\"\n}\n</code></pre>\n\n<p>That you can use the type of an instance for typescript with <code>typeof</code> was not obvious and quite buried in the docs. I wonder if there is a trick like this when using normal javascript prototypes.</p>\n"}, {"tags": ["generics", "types", "constructor", "typescript", "extends"], "comments": [{"owner": {"reputation": 5280, "user_id": 592792, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/LSCC9.gif?s=128&g=1", "display_name": "Andr&#233; Werlang", "link": "https://stackoverflow.com/users/592792/andr%c3%a9-werlang"}, "edited": false, "score": 0, "creation_date": 1422887567, "post_id": 28278384, "comment_id": 44913986, "body": "No problems here: <a href=\"http://www.typescriptlang.org/Playground\" rel=\"nofollow noreferrer\">typescriptlang.org/Playground</a>"}, {"owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "reply_to_user": {"reputation": 5280, "user_id": 592792, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/LSCC9.gif?s=128&g=1", "display_name": "Andr&#233; Werlang", "link": "https://stackoverflow.com/users/592792/andr%c3%a9-werlang"}, "edited": false, "score": 0, "creation_date": 1422888906, "post_id": 28278384, "comment_id": 44914868, "body": "Compilaton does not cause problem if I run it directly. But this error keeps appearing in my editor and I would like to get rid of them for readability and for my collaborators as well."}, {"owner": {"reputation": 5280, "user_id": 592792, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/LSCC9.gif?s=128&g=1", "display_name": "Andr&#233; Werlang", "link": "https://stackoverflow.com/users/592792/andr%c3%a9-werlang"}, "edited": false, "score": 0, "creation_date": 1422888991, "post_id": 28278384, "comment_id": 44914933, "body": "no problem here in VS2013/TS1.4 either"}, {"owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "reply_to_user": {"reputation": 5280, "user_id": 592792, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/LSCC9.gif?s=128&g=1", "display_name": "Andr&#233; Werlang", "link": "https://stackoverflow.com/users/592792/andr%c3%a9-werlang"}, "edited": false, "score": 0, "creation_date": 1422890976, "post_id": 28278384, "comment_id": 44916208, "body": "I have VS2013 and I realized that TS1.0 was installed. I switched to TS1.4. But now not only the problem is the same, but there is no syntax highlighting anymore. Thank you anyway for trying out. I&#39;m glad it does not cause problems in at least one place."}, {"owner": {"reputation": 54248, "user_id": 95190, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a58c0b44762885ca46ecee7f5b379f3d?s=128&d=identicon&r=PG", "display_name": "WiredPrairie", "link": "https://stackoverflow.com/users/95190/wiredprairie"}, "edited": false, "score": 0, "creation_date": 1422929151, "post_id": 28278384, "comment_id": 44933981, "body": "Make sure that you&#39;ve got TypeScript updated every where in your path as well on your machine. <code>where tsc</code> for example from a command prompt (developer command prompt) will show you where it might be found. In earlier versions, I routinely would have 3 or 4 distinct locations unfortunately."}, {"owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "reply_to_user": {"reputation": 54248, "user_id": 95190, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a58c0b44762885ca46ecee7f5b379f3d?s=128&d=identicon&r=PG", "display_name": "WiredPrairie", "link": "https://stackoverflow.com/users/95190/wiredprairie"}, "edited": false, "score": 0, "creation_date": 1422953370, "post_id": 28278384, "comment_id": 44941957, "body": "Thank you @WiredPrairie I checked and it&#39;s located in <code>c:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.4\\tsc.exe</code>"}], "answers": [{"comments": [{"owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "edited": false, "score": 0, "creation_date": 1422953254, "post_id": 28288833, "comment_id": 44941888, "body": "Well it&#39;s nice I saw that, so why is it throwing errors on my machine it&#39;s something I would like to know. Perhaps it&#39;s just resharper."}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "edited": false, "score": 0, "creation_date": 1423002567, "post_id": 28288833, "comment_id": 44970935, "body": "Perhaps. Try disabling it."}, {"owner": {"reputation": 827, "user_id": 1392001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/529bafdcdb8560db12a38c9ed37a8636?s=128&d=identicon&r=PG", "display_name": "Anton", "link": "https://stackoverflow.com/users/1392001/anton"}, "edited": false, "score": 1, "creation_date": 1423059557, "post_id": 28288833, "comment_id": 44995033, "body": "Yes, but before disabling ReSharper please create an issue in YouTrack, so that we&#39;ll know about the problem and will be able to fix it. :) Thanks! I created an issue for this problem, will be fixed in 9.1: <a href=\"https://youtrack.jetbrains.com/issue/RSRP-432550\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issue/RSRP-432550</a>"}, {"owner": {"reputation": 827, "user_id": 1392001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/529bafdcdb8560db12a38c9ed37a8636?s=128&d=identicon&r=PG", "display_name": "Anton", "link": "https://stackoverflow.com/users/1392001/anton"}, "edited": false, "score": 0, "creation_date": 1423059980, "post_id": 28288833, "comment_id": 44995317, "body": "I re-checked in on fresh 9.1 build, the problem is gone. You&#39;re welcome to try a 9.1 EAP build: <a href=\"https://confluence.jetbrains.com/display/ReSharper/ReSharper+9.1+EAP\" rel=\"nofollow noreferrer\">confluence.jetbrains.com/display/ReSharper/ReSharper+9.1+EAP</a>&zwnj;&#8203;."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 0, "last_activity_date": 1422920089, "creation_date": 1422920089, "answer_id": 28288833, "question_id": 28278384, "link": "https://stackoverflow.com/questions/28278384/typescript-type-object-does-not-satisfy-the-constraint-extends-te-for-type-pa/28288833#28288833", "title": "Typescript Type &quot;Object does not satisfy the constraint &#39;extends TE&#39; for type parameter", "body": "<p>It compiles fine on the playground : </p>\n\n<p><img src=\"https://i.stack.imgur.com/y4riw.png\" alt=\"enter image description here\"></p>\n\n<p>And Visual studio and command line: </p>\n\n<p><img src=\"https://i.stack.imgur.com/u0SKj.png\" alt=\"enter image description here\"></p>\n"}], "owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 3556, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1422920089, "creation_date": 1422882234, "last_edit_date": 1495535609, "question_id": 28278384, "link": "https://stackoverflow.com/questions/28278384/typescript-type-object-does-not-satisfy-the-constraint-extends-te-for-type-pa", "title": "Typescript Type &quot;Object does not satisfy the constraint &#39;extends TE&#39; for type parameter", "body": "<p>Before publishing an issue, I would like to know if it is programmation error or a compiler bug.</p>\n\n<p>Typescript 1.4 (running in Visual Studio 2013) complains on the following small program:</p>\n\n<pre><code>export class TE {\n  value : string;\n}\nexport class A&lt;T extends TE&gt; {\n}\nexport class B extends A&lt;TE&gt; {\n  constructor(public name: string) {\n     super(); // Error: Type Object does not satisfy the constraint extends TE for type parameter T.\n  }\n}\n</code></pre>\n\n<p>The same in screenshot : </p>\n\n<p><img src=\"https://i.stack.imgur.com/jv4pl.png\" alt=\"real typescript test\"></p>\n\n<p>and if I remove the super() clause, it gives:</p>\n\n<p><img src=\"https://i.stack.imgur.com/xd1Ls.png\" alt=\"second typescript test\"></p>\n\n<p>A related question is <a href=\"https://stackoverflow.com/q/18523133/1287856\">Type T does not satisfy the constraint C for type parameter P error in TypeScript</a> but it does not deal with the constructor.</p>\n\n<p>What should I to to make the little snippet above to compile?</p>\n"}, {"tags": ["typescript", "resharper-9.0"], "comments": [{"owner": {"reputation": 19377, "user_id": 388834, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/cb0a2b294b839c024727a6ee6cc60043?s=128&d=identicon&r=PG", "display_name": "zbynour", "link": "https://stackoverflow.com/users/388834/zbynour"}, "edited": false, "score": 0, "creation_date": 1422874587, "post_id": 28274019, "comment_id": 44906766, "body": "I understand that you include the file containing the interface in two or more .ts files, right? Perhaps using relative paths but not using the same root folder? Try to use all these relative paths starting from the same root folder. That works for me... (The compiler perhaps considers two <i>different</i> relative paths targeting the same file as <i>two different paths</i> and that is reason for &quot;duplicate identifier&quot; problem...)"}, {"owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "reply_to_user": {"reputation": 19377, "user_id": 388834, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/cb0a2b294b839c024727a6ee6cc60043?s=128&d=identicon&r=PG", "display_name": "zbynour", "link": "https://stackoverflow.com/users/388834/zbynour"}, "edited": false, "score": 0, "creation_date": 1422876150, "post_id": 28274019, "comment_id": 44907653, "body": "Indeed, I am not using the same root folder. I started to delete all &lt;reference&gt; to make this error disappear and I&#39;m now trying to add them one by one to solve errors without having the problem above."}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1422919815, "post_id": 28274019, "comment_id": 44931325, "body": "<code>Even when I unload the &quot;dependent&quot; project, I still get these annoying highlighting errors</code> Try restarting after unloading"}, {"owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "edited": false, "score": 0, "creation_date": 1422953427, "post_id": 28274019, "comment_id": 44941980, "body": "For the moment, I could get rid of this errors by removing all &lt;reference&gt; comments. But if I do that, then I get compile errors and files which are not compiled in the folder (I have a custom build step)"}, {"owner": {"reputation": 7138, "user_id": 692422, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/4b93f5d101d4e8b14ca950ed530e0148?s=128&d=identicon&r=PG", "display_name": "alisabzevari", "link": "https://stackoverflow.com/users/692422/alisabzevari"}, "edited": false, "score": 0, "creation_date": 1422959630, "post_id": 28274019, "comment_id": 44945663, "body": "I have the same problem. I searched for duplicate but didn&#39;t found anything! Also I tried to clear resharper cache but didn&#39;t solved."}, {"owner": {"reputation": 827, "user_id": 1392001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/529bafdcdb8560db12a38c9ed37a8636?s=128&d=identicon&r=PG", "display_name": "Anton", "link": "https://stackoverflow.com/users/1392001/anton"}, "edited": false, "score": 5, "creation_date": 1422962906, "post_id": 28274019, "comment_id": 44947543, "body": "Unfortunately, now ReSharper doesn&#39;t handle this well. There exist two issues in YouTrack for that: <a href=\"https://youtrack.jetbrains.com/issue/RSRP-428536\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issue/RSRP-428536</a>, <a href=\"https://youtrack.jetbrains.com/issue/RSRP-430212\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issue/RSRP-430212</a>, please upvote. Thanks."}, {"owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "edited": false, "score": 0, "creation_date": 1423128090, "post_id": 28274019, "comment_id": 45025463, "body": "Thank you Anton. I upvoted both. Were you able to attach this SO question as well ?"}], "answers": [{"comments": [{"owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "edited": false, "score": 0, "creation_date": 1449919040, "post_id": 34234795, "comment_id": 56220727, "body": "No this part appears in just one file."}, {"owner": {"reputation": 6268, "user_id": 1644422, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/01c7fb4b20926d4dcf7d1125f7adac9f?s=128&d=identicon&r=PG", "display_name": "Louay Alakkad", "link": "https://stackoverflow.com/users/1644422/louay-alakkad"}, "reply_to_user": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "edited": false, "score": 1, "creation_date": 1449931982, "post_id": 34234795, "comment_id": 56224200, "body": "The other file is in &quot;node_modules&quot;. <a href=\"https://github.com/urbanmassage/opool/blob/master/tsconfig.json#L8-L10\" rel=\"nofollow noreferrer\">Here&#39;s</a> what I use for <code>tsconfig</code>. Add the &quot;exclude&quot; part to your project and it should work."}], "tags": [], "owner": {"reputation": 6268, "user_id": 1644422, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/01c7fb4b20926d4dcf7d1125f7adac9f?s=128&d=identicon&r=PG", "display_name": "Louay Alakkad", "link": "https://stackoverflow.com/users/1644422/louay-alakkad"}, "is_accepted": false, "score": 0, "last_activity_date": 1449880480, "creation_date": 1449880480, "answer_id": 34234795, "question_id": 28274019, "link": "https://stackoverflow.com/questions/28274019/typescript-resharper-9-duplicate-identifier/34234795#34234795", "title": "Typescript/Resharper 9. Duplicate identifier", "body": "<p>You have the part <code>export interface IPosition</code> in two files. You should get two identical errors in two different files.</p>\n\n<p>Just add one of those files (or folders) to <code>tsconfig.json</code> to the \"ignore\" key.</p>\n"}, {"tags": [], "owner": {"reputation": 4300, "user_id": 113701, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e1a4e780c91cb2701b0bda2e8a1a64e6?s=128&d=identicon&r=PG", "display_name": "Doug Domeny", "link": "https://stackoverflow.com/users/113701/doug-domeny"}, "is_accepted": false, "score": 2, "last_activity_date": 1473258273, "creation_date": 1473258273, "answer_id": 39372562, "question_id": 28274019, "link": "https://stackoverflow.com/questions/28274019/typescript-resharper-9-duplicate-identifier/39372562#39372562", "title": "Typescript/Resharper 9. Duplicate identifier", "body": "<p>This is fixed in ReSharper 2016.2.</p>\n"}, {"tags": [], "owner": {"reputation": 59, "user_id": 2923682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c4ab77903cee652b7eb0d24bf5c9e403?s=128&d=identicon&r=PG&f=1", "display_name": "VitalickS", "link": "https://stackoverflow.com/users/2923682/vitalicks"}, "is_accepted": false, "score": 1, "last_activity_date": 1479088942, "last_edit_date": 1479088942, "creation_date": 1479068323, "answer_id": 40578371, "question_id": 28274019, "link": "https://stackoverflow.com/questions/28274019/typescript-resharper-9-duplicate-identifier/40578371#40578371", "title": "Typescript/Resharper 9. Duplicate identifier", "body": "<p>Try checking the <code>bin</code> folder. It can contain <code>.ts</code> files and it generates duplication. You need to add the <code>bin</code> folder to the exclusion list. Something like this:</p>\n\n<pre><code>....\n\"exclude\": [\n    \"node_modules\",\n    \"wwwroot/lib\",\n    \"bin\"\n  ]\n....\n</code></pre>\n"}], "owner": {"reputation": 9321, "user_id": 1287856, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c6c6ea18f5cbad028f28bcfe7ce531e1?s=128&d=identicon&r=PG", "display_name": "Mika&#235;l Mayer", "link": "https://stackoverflow.com/users/1287856/mika%c3%abl-mayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2025, "favorite_count": 0, "answer_count": 3, "score": 11, "last_activity_date": 1479088942, "creation_date": 1422867347, "last_edit_date": 1495540450, "question_id": 28274019, "link": "https://stackoverflow.com/questions/28274019/typescript-resharper-9-duplicate-identifier", "title": "Typescript/Resharper 9. Duplicate identifier", "body": "<p>I get a lot of \"Duplicate identifier\" errors in Visual Studio 2013 which make my code unreadable since I installed Resharper 9.</p>\n\n<p><img src=\"https://i.stack.imgur.com/PrI4o.png\" alt=\"Duplicate identifier\"></p>\n\n<p>The only reason I can see that there are duplicate errors, is that in another project, these files are included and thus compiled another time. But it should not interfere. Even when I unload the \"dependent\" project, I still get these annoying highlighting errors. IPosition is not only the only one affected, ILabel, ILabelExample, etc. all got the same error on all fields.</p>\n\n<p>These errors are highlighted in the code, but not in the error list - and compilation is fine.</p>\n\n<p>Related questions:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28125260/1287856\">(Unanswered): Multiple Typescript modules without duplicate identifier errors</a></li>\n</ul>\n\n<p>What setting should I change to make them disappear? Thank you for helping.</p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 1270, "user_id": 867304, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2d63541009352606b42125fc2ebaa6ae?s=128&d=identicon&r=PG", "display_name": "Martijn", "link": "https://stackoverflow.com/users/867304/martijn"}, "edited": false, "score": 0, "creation_date": 1422906762, "post_id": 28273714, "comment_id": 44925232, "body": "i think there is a bug in the example.  this in the constructor is not the generic type value. Class should have a   Model:T property or constructur can accept a   value:T argument"}], "answers": [{"comments": [{"owner": {"reputation": 1741, "user_id": 138733, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6bb5fb8542300919ae3410c44519b37c?s=128&d=identicon&r=PG", "display_name": "Dave Taylor", "link": "https://stackoverflow.com/users/138733/dave-taylor"}, "edited": false, "score": 0, "creation_date": 1422869223, "post_id": 28274279, "comment_id": 44903849, "body": "I tried that, and it does compile but I don&#39;t think it does what I&#39;m looking for becuase when I try to do <code>this.model.imageUrl()</code> it complains the T doesn&#39;t have an <code>imageUrl</code> function"}, {"owner": {"reputation": 1741, "user_id": 138733, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6bb5fb8542300919ae3410c44519b37c?s=128&d=identicon&r=PG", "display_name": "Dave Taylor", "link": "https://stackoverflow.com/users/138733/dave-taylor"}, "edited": false, "score": 0, "creation_date": 1422877361, "post_id": 28274279, "comment_id": 44908272, "body": "i&#39;ll give that a go, I thought I tried that but might not have done"}, {"owner": {"reputation": 1741, "user_id": 138733, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6bb5fb8542300919ae3410c44519b37c?s=128&d=identicon&r=PG", "display_name": "Dave Taylor", "link": "https://stackoverflow.com/users/138733/dave-taylor"}, "edited": false, "score": 0, "creation_date": 1422879177, "post_id": 28274279, "comment_id": 44909281, "body": "This almost works, It allows correct use of the <code>model</code> property however for some reason it doesn&#39;t restrict to classes that extend the base class... I have created an issue in github explaining this further <a href=\"https://github.com/Microsoft/TypeScript/issues/1885\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/issues/1885</a>"}, {"owner": {"reputation": 1270, "user_id": 867304, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2d63541009352606b42125fc2ebaa6ae?s=128&d=identicon&r=PG", "display_name": "Martijn", "link": "https://stackoverflow.com/users/867304/martijn"}, "edited": false, "score": 0, "creation_date": 1422911931, "post_id": 28274279, "comment_id": 44927824, "body": "There are serious issues with the provided example. If T needs to extend Model and Implement IHasImage the real implementation class is missing. That would be something like   <code>class ModelWithImage extends Model Implements IHasImage {}</code>  In that case, that class can be use as the Type parameter constraint, or an additional interface can be added."}, {"owner": {"reputation": 1741, "user_id": 138733, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6bb5fb8542300919ae3410c44519b37c?s=128&d=identicon&r=PG", "display_name": "Dave Taylor", "link": "https://stackoverflow.com/users/138733/dave-taylor"}, "edited": false, "score": 0, "creation_date": 1422977805, "post_id": 28274279, "comment_id": 44956780, "body": "This answer has the right idea which is why I have marked it but I have added a full explanation (and fixed the code! ...sorry) in an edit above"}], "tags": [], "owner": {"reputation": 1312, "user_id": 1358405, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb36db4e27253a9dc82329e40b206c5d?s=128&d=identicon&r=PG", "display_name": "dignifiedquire", "link": "https://stackoverflow.com/users/1358405/dignifiedquire"}, "is_accepted": true, "score": 12, "last_activity_date": 1422874195, "last_edit_date": 1422874195, "creation_date": 1422868388, "answer_id": 28274279, "question_id": 28273714, "link": "https://stackoverflow.com/questions/28273714/typescript-generics-extending-class-and-interface/28274279#28274279", "title": "Typescript generics extending class and interface", "body": "<p>It looks like this is the only way of doing it that I can find. Not perfectly clean but it does the right thing.</p>\n\n<pre><code>interface IHasImage extends Model{  \n  imageUrl():string; \n}\n\nclass Model {\n}\n\nclass View&lt;T extends IHasImage&gt; {\n}\n</code></pre>\n\n<p>Here is a screenshot from the playground verifying that it works:</p>\n\n<p><img src=\"https://i.stack.imgur.com/8czpA.png\" alt=\"playground\"></p>\n\n<p><strong>Edit:</strong> Added correct workaround.</p>\n"}, {"comments": [{"owner": {"reputation": 8268, "user_id": 3915717, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/OTZ63.jpg?s=128&g=1", "display_name": "SuperUberDuper", "link": "https://stackoverflow.com/users/3915717/superuberduper"}, "edited": false, "score": 1, "creation_date": 1481362509, "post_id": 28277962, "comment_id": 69354600, "body": "what does <code>class View&lt;T&gt;</code> actually mean?"}, {"owner": {"reputation": 3013, "user_id": 4516689, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/xPRs0.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/4516689/markus"}, "reply_to_user": {"reputation": 8268, "user_id": 3915717, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/OTZ63.jpg?s=128&g=1", "display_name": "SuperUberDuper", "link": "https://stackoverflow.com/users/3915717/superuberduper"}, "edited": false, "score": 1, "creation_date": 1481370891, "post_id": 28277962, "comment_id": 69356808, "body": "@SuperUberDuper This is a question for a new stackoverflow entry. In short it is the typescript way for a generic class <a href=\"https://www.typescriptlang.org/docs/handbook/generics.html#generic-classes\" rel=\"nofollow noreferrer\">typescriptlang.org/docs/handbook/generics.html#generic-class&zwnj;&#8203;es</a> You can use this class with all types which fulfilled the \trequirements &quot;extens IHasImage &amp; Model&quot;"}], "tags": [], "owner": {"reputation": 3013, "user_id": 4516689, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/xPRs0.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/4516689/markus"}, "is_accepted": false, "score": 24, "last_activity_date": 1443364682, "last_edit_date": 1443364682, "creation_date": 1422880734, "answer_id": 28277962, "question_id": 28273714, "link": "https://stackoverflow.com/questions/28273714/typescript-generics-extending-class-and-interface/28277962#28277962", "title": "Typescript generics extending class and interface", "body": "<p>Typescript is not so restrictive as Java or C# so you can do things like that:</p>\n\n<pre><code>interface IHasImage {\n    imageUrl():string; \n}\n\nclass Model {\n}\n\n// use the Model class like an interface\ninterface IHasImageModel extends IHasImage, Model{\n}\n\nclass View&lt;T extends IHasImageModel&gt; {\n    constructor(arg :T){\n       arg.imageUrl();\n    }\n}\n</code></pre>\n\n<p><strong>Edit:</strong>\nIn TypeScript 1.6 you can use Intersection types:</p>\n\n<pre><code>interface IHasImage {\n    imageUrl():string; \n}\n\nclass Model {\n}\n\nclass View&lt;T extends IHasImage &amp; Model&gt; {\n    constructor(arg :T){\n       arg.imageUrl();\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1741, "user_id": 138733, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6bb5fb8542300919ae3410c44519b37c?s=128&d=identicon&r=PG", "display_name": "Dave Taylor", "link": "https://stackoverflow.com/users/138733/dave-taylor"}, "edited": false, "score": 0, "creation_date": 1422977903, "post_id": 28287110, "comment_id": 44956836, "body": "the model extends is too specific here unfortunately as many kinds of model may have the same <code>IHasImage</code> functionality"}], "tags": [], "owner": {"reputation": 1270, "user_id": 867304, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2d63541009352606b42125fc2ebaa6ae?s=128&d=identicon&r=PG", "display_name": "Martijn", "link": "https://stackoverflow.com/users/867304/martijn"}, "is_accepted": false, "score": 3, "last_activity_date": 1422912558, "creation_date": 1422912558, "answer_id": 28287110, "question_id": 28273714, "link": "https://stackoverflow.com/questions/28273714/typescript-generics-extending-class-and-interface/28287110#28287110", "title": "Typescript generics extending class and interface", "body": "<p>Missing in the example is what T will be:</p>\n\n<p>In the example below i have added an implementation for T, that can be used as the generic constraint.</p>\n\n<pre><code>interface IHasImage {\n  imageUrl():string; \n}\n\nclass Model {\n}\n\nclass ModelWithImage extends Model implements IHasImage {\n\n    imageUrl():string\n    {\n     return \"http://thepetwiki.com/images/thumb/Kitten.jpg/400px-Kitten.jpg\";\n    }   \n}\n\n\nclass View&lt;T extends ModelWithImage&gt;\n{\n    value:T;\n\n    constructor(arg:T)\n    {   \n        this.value=arg;\n    }       \n}\n</code></pre>\n"}], "owner": {"reputation": 1741, "user_id": 138733, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6bb5fb8542300919ae3410c44519b37c?s=128&d=identicon&r=PG", "display_name": "Dave Taylor", "link": "https://stackoverflow.com/users/138733/dave-taylor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53428, "favorite_count": 5, "accepted_answer_id": 28274279, "answer_count": 3, "score": 18, "last_activity_date": 1443364682, "creation_date": 1422865977, "last_edit_date": 1422977446, "question_id": 28273714, "link": "https://stackoverflow.com/questions/28273714/typescript-generics-extending-class-and-interface", "title": "Typescript generics extending class and interface", "body": "<p>I have a Typescript class which includes a generic which needs to extend another class and implement an interface. Here is an example</p>\n\n<pre><code>interface IHasImage {\n  imageUrl():string; \n}\nclass Model {\n}\nclass View&lt;T extends Model &amp; IHasImage&gt; {\n}\n</code></pre>\n\n<p>This is the sort of syntax I have seen elsewhere but is there a way of doing this in Typescript?</p>\n\n<p>edit:\nTry pasting the following in to the playground:<a href=\"http://www.typescriptlang.org/Playground\" rel=\"noreferrer\">http://www.typescriptlang.org/Playground</a></p>\n\n<pre><code>...[removed edit 1 code]\n</code></pre>\n\n<p><strong>edit 2: Answer and reasoning</strong></p>\n\n<p>(I apologise, the first example had a few flaws!)\nI have marked the correct answer below, although it probably needs a few pointers as outlined in this github issue (<a href=\"https://github.com/Microsoft/TypeScript/issues/1885\" rel=\"noreferrer\">https://github.com/Microsoft/TypeScript/issues/1885</a>)</p>\n\n<p>Given the following code you can see the methodology works.</p>\n\n<p><img src=\"https://i.stack.imgur.com/ytu8M.png\" alt=\"playground screenshot\"></p>\n\n<p>The only other thing to say is that trying to <code>implement</code> the interface from a class that does not extend the base class also fails. However because Typescript checking is <strong>based on the structure of the object</strong>, it will succeed if you manually add the <code>name</code> property to the class.</p>\n\n<p><img src=\"https://i.stack.imgur.com/dkFvU.png\" alt=\"enter image description here\"></p>\n\n<p>This is also why it succeeds with the <code>ModelCorrect</code> which <code>extends</code> but doesn't <code>implements</code>.</p>\n"}, {"tags": ["javascript", "typescript", "relocation"], "comments": [{"owner": {"reputation": 2832, "user_id": 1508529, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/974a4e8de28274c71bf5e08a39ca1b86?s=128&d=identicon&r=PG", "display_name": "Mathias Bader", "link": "https://stackoverflow.com/users/1508529/mathias-bader"}, "reply_to_user": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 0, "creation_date": 1422860439, "post_id": 28272418, "comment_id": 44900174, "body": "Yep, that helped - it&#39;s indeed a duplicate. Thanks a lot."}], "owner": {"reputation": 2832, "user_id": 1508529, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/974a4e8de28274c71bf5e08a39ca1b86?s=128&d=identicon&r=PG", "display_name": "Mathias Bader", "link": "https://stackoverflow.com/users/1508529/mathias-bader"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1422860897, "answer_count": 0, "score": 1, "last_activity_date": 1422859738, "creation_date": 1422859738, "question_id": 28272418, "link": "https://stackoverflow.com/questions/28272418/relocate-using-javascript-with-typescript", "closed_reason": "Duplicate", "title": "Relocate using JavaScript with TypeScript", "body": "<p>I want to do a simple relocate using javascript and typescript. Using the following code</p>\n\n<pre><code>window.location = 'index.html';\n</code></pre>\n\n<p>that does what it should, I still get a TypeScript-error that says</p>\n\n<pre><code>Assigned expression type string is not assinable to type Location\n</code></pre>\n\n<p>What is the <em>supposed</em> way to do this relocate correctly with TypeScript?</p>\n"}, {"tags": ["typescript", "intellisense", "adobe-brackets"], "answers": [{"comments": [{"owner": {"reputation": 405, "user_id": 796910, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d7b2dd8162600f1ed534d4c730918122?s=128&d=identicon&r=PG", "display_name": "skvsree", "link": "https://stackoverflow.com/users/796910/skvsree"}, "edited": false, "score": 0, "creation_date": 1422753081, "post_id": 28257319, "comment_id": 44874762, "body": "Thanks, I am trying to setup dev environment for Node JS and stuck into this."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 3, "last_activity_date": 1422743750, "creation_date": 1422743750, "answer_id": 28257319, "question_id": 28254822, "link": "https://stackoverflow.com/questions/28254822/brackets-io-in-built-support-for-typescript/28257319#28257319", "title": "Brackets.io in built support for TypeScript", "body": "<blockquote>\n  <p>Does brackets.io have in-built support for typescript? I tried the plugin from below link</p>\n</blockquote>\n\n<p>No. </p>\n\n<p>The plugin you are pointing to is the de facto one. </p>\n"}, {"tags": [], "owner": {"reputation": 405, "user_id": 796910, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d7b2dd8162600f1ed534d4c730918122?s=128&d=identicon&r=PG", "display_name": "skvsree", "link": "https://stackoverflow.com/users/796910/skvsree"}, "is_accepted": true, "score": 0, "last_activity_date": 1424747730, "creation_date": 1424747730, "answer_id": 28687578, "question_id": 28254822, "link": "https://stackoverflow.com/questions/28254822/brackets-io-in-built-support-for-typescript/28687578#28687578", "title": "Brackets.io in built support for TypeScript", "body": "<p>I figured this out after I posted this request in <a href=\"https://github.com/fdecampredon/brackets-typescript/issues/34\" rel=\"nofollow\">Github</a> page of the plugin.</p>\n\n<p>there is one other typescript <a href=\"https://github.com/tomsdev/brackets-typescript-code-intel\" rel=\"nofollow\">plugin</a> for brackets and if you have installed it, that intervenes with this.</p>\n\n<p>right one is <a href=\"https://github.com/fdecampredon/brackets-typescript\" rel=\"nofollow\">fdecampredon/brackets-typescript</a></p>\n"}, {"tags": [], "owner": {"reputation": 945, "user_id": 7362995, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/2ba654759e97939ab430c61808825715?s=128&d=identicon&r=PG&f=1", "display_name": "Leonzen", "link": "https://stackoverflow.com/users/7362995/leonzen"}, "is_accepted": false, "score": 1, "last_activity_date": 1490346031, "creation_date": 1490346031, "answer_id": 42995213, "question_id": 28254822, "link": "https://stackoverflow.com/questions/28254822/brackets-io-in-built-support-for-typescript/42995213#42995213", "title": "Brackets.io in built support for TypeScript", "body": "<p>Please use <a href=\"https://github.com/zaggino/brackets-typescript\" rel=\"nofollow noreferrer\">https://github.com/zaggino/brackets-typescript</a> if you need a TypeScript plugin. I'm using this one and it is perfect :)</p>\n"}], "owner": {"reputation": 405, "user_id": 796910, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d7b2dd8162600f1ed534d4c730918122?s=128&d=identicon&r=PG", "display_name": "skvsree", "link": "https://stackoverflow.com/users/796910/skvsree"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13389, "favorite_count": 0, "accepted_answer_id": 28687578, "answer_count": 3, "score": 3, "last_activity_date": 1490346031, "creation_date": 1422727601, "last_edit_date": 1425321787, "question_id": 28254822, "link": "https://stackoverflow.com/questions/28254822/brackets-io-in-built-support-for-typescript", "title": "Brackets.io in built support for TypeScript", "body": "<p>Does brackets.io have in-built support for typescript?  I tried the plugin from below link </p>\n\n<p><a href=\"https://github.com/fdecampredon/brackets-typescript\" rel=\"nofollow\">https://github.com/fdecampredon/brackets-typescript</a></p>\n\n<p>Steps\n1) OS Windows 8.1\n2) Installed latest version of Brackets\n3) Installed Brackets-TypeScript\n4) created .brackets.json and added </p>\n\n<pre><code>{\n    \"typescript\": {\n        \"target\": \"ES5\",\n        \"module\": \"AMD\",\n        \"noImplicitAny\": true,\n        \"sources\" : [\n            \"src/declarations//*.ts\",\n            \"src/main//*.ts\"\n        ]\n    }\n}\n</code></pre>\n\n<p>5) Still now luck for code completion of Intellisense.\nI have created issue in the same Github, but it looks inactive for sometime now.<a href=\"https://github.com/fdecampredon/brackets-typescript/issues/34\" rel=\"nofollow\">https://github.com/fdecampredon/brackets-typescript/issues/34</a></p>\n"}, {"tags": ["cordova", "typescript", "cordova-plugins"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 5, "last_activity_date": 1422747563, "creation_date": 1422747563, "answer_id": 28257818, "question_id": 28254770, "link": "https://stackoverflow.com/questions/28254770/acessing-apache-cordova-plugins-using-typescript/28257818#28257818", "title": "Acessing Apache Cordova plugins using Typescript", "body": "<blockquote>\n  <p>I understand I have to somehow extend the basic \"window\" object ? How to do that ? </p>\n</blockquote>\n\n<p>Here you go: </p>\n\n<pre><code>interface Window {\n    sqlitePlugin: any;\n}\n\nvar db = window.sqlitePlugin.openDatabase({name: \"my.db\"});\n</code></pre>\n\n<p>Note: TypeScript interfaces are <em>open ended</em> in that their declaration can be re-opened to add members.</p>\n"}, {"tags": [], "owner": {"reputation": 31, "user_id": 6684408, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdc8d7279246d83fa79e74d31f1a27fb?s=128&d=identicon&r=PG&f=1", "display_name": "Ali Abdollahi", "link": "https://stackoverflow.com/users/6684408/ali-abdollahi"}, "is_accepted": false, "score": 3, "last_activity_date": 1470440164, "creation_date": 1470440164, "answer_id": 38799108, "question_id": 28254770, "link": "https://stackoverflow.com/questions/28254770/acessing-apache-cordova-plugins-using-typescript/38799108#38799108", "title": "Acessing Apache Cordova plugins using Typescript", "body": "<p>The correct way is declaring window out side of class and use it in class (be careful use sqlite after platform ready ! ;) )</p>\n\n<pre><code>interface Window {\n  sqlitePlugin: any;\n}\ndeclare var window : Window;\n...\n  export class MyClass{\n\n    this.platform.ready().then(() =&gt; {\n\n  var db = window.sqlitePlugin.openDatabase({ name: 'MyDB.db', iosDatabaseLocation: 'default', location: null });\n....\n});\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 639, "user_id": 518404, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/4ddbefe907381362f772e07df96360c6?s=128&d=identicon&r=PG", "display_name": "Quintonn", "link": "https://stackoverflow.com/users/518404/quintonn"}, "edited": false, "score": 0, "creation_date": 1568184095, "post_id": 46552778, "comment_id": 102189492, "body": "how do you import the sqlite plugin? I am getting error &quot;index.d.ts is not a module&quot;"}], "tags": [], "owner": {"reputation": 5165, "user_id": 191438, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/64bc17b57ffcff98e96702f1216d8be6?s=128&d=identicon&r=PG", "display_name": "spiffytech", "link": "https://stackoverflow.com/users/191438/spiffytech"}, "is_accepted": false, "score": 0, "last_activity_date": 1507062040, "creation_date": 1507062040, "answer_id": 46552778, "question_id": 28254770, "link": "https://stackoverflow.com/questions/28254770/acessing-apache-cordova-plugins-using-typescript/46552778#46552778", "title": "Acessing Apache Cordova plugins using Typescript", "body": "<p>Typescript is happy since I installed the type definitions:</p>\n\n<p><code>npm install --save-dev @types/cordova-sqlite-storage</code>.</p>\n"}], "owner": {"reputation": 573, "user_id": 1667302, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/440ae5d8b1cc95cbcd5c24c30ed6fdbd?s=128&d=identicon&r=PG", "display_name": "user1667302", "link": "https://stackoverflow.com/users/1667302/user1667302"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3790, "favorite_count": 2, "answer_count": 3, "score": 5, "last_activity_date": 1507062040, "creation_date": 1422727260, "last_edit_date": 1427191016, "question_id": 28254770, "link": "https://stackoverflow.com/questions/28254770/acessing-apache-cordova-plugins-using-typescript", "title": "Acessing Apache Cordova plugins using Typescript", "body": "<p>I am prototyping an A Hybrid Mobile app using Ionic + Angular + Apache Cordova 4.0 using Visual Studio 2003 update 4. I installed the SQLite plugin to access database.</p>\n\n<p>Recommended method to access this plugin is:</p>\n\n<pre><code>var db = window.sqlitePlugin.openDatabase({name: \"my.db\"});\n</code></pre>\n\n<p>But I don't have typescript definition for plugin - only Cordova. SO Typescript does not know the sqlitePLugin and its complaining about it.</p>\n\n<p>How do you access Cordova plugin from Typescript code ?\nI understand I have to somehow extend the basic \"window\" object ? How to do that ?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 0, "creation_date": 1422738458, "post_id": 28253829, "comment_id": 44871294, "body": "The error with <code>var mySearch3</code> is that you are redeclaring a variable with a different type to the original. Remove the <code>var</code> from the subsequent use of the variable and it will also allow the function without parameters."}, {"owner": {"reputation": 139, "user_id": 565690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/640a06bb5767daa6d17f9ee000bb8900?s=128&d=identicon&r=PG", "display_name": "iislucas", "link": "https://stackoverflow.com/users/565690/iislucas"}, "reply_to_user": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 0, "creation_date": 1558739081, "post_id": 28253829, "comment_id": 99212824, "body": "yes, probably not super clearly expressed, but that was the point: that you can make the type-declaration be more strictly checked against the function definition by using this double declaration trick."}], "tags": [], "owner": {"reputation": 139, "user_id": 565690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/640a06bb5767daa6d17f9ee000bb8900?s=128&d=identicon&r=PG", "display_name": "iislucas", "link": "https://stackoverflow.com/users/565690/iislucas"}, "is_accepted": false, "score": 0, "last_activity_date": 1422721602, "creation_date": 1422721602, "answer_id": 28253829, "question_id": 28252843, "link": "https://stackoverflow.com/questions/28252843/typescript-dont-really-check-function-type/28253829#28253829", "title": "Typescript don&#39;t really check function type?", "body": "<p>Typescript does check function types - that's just a weird and special case where Typescript is letting you ignore function arguments in an assignment.</p>\n\n<p>If you separate the variable declaration from the assignment, you'll then get type-errors during the assignment e.g. </p>\n\n<pre><code>var mySearch3 :(source: number, subString: string) =&gt; boolean;\nvar mySearch3 = function() { return true; }\n</code></pre>\n\n<p>Will produce this error in tsc 1.4.1: </p>\n\n<pre><code>error TS2403: Subsequent variable declarations must have the same type.  \nVariable 'mySearch3' must be of type \n'(source: number, subString: string) =&gt; boolean', \nbut here has type '() =&gt; boolean'.\n</code></pre>\n\n<p>Similarly, you'll get error's if you provide the arguments, but they have different types to the function definition. e.g. </p>\n\n<pre><code>var mySearch3 :(source: number, subString: string) =&gt; boolean =\n    function(source:string, subString:string) { return true; }\n</code></pre>\n\n<p>Will give you this error: </p>\n\n<pre><code>error TS2322: Type '(source: string, subString: string) =&gt; boolean' is\nnot assignable to type '(source: number, subString: string) =&gt; boolean'.\nTypes of parameters 'source' and 'source' are incompatible.\nType 'string' is not assignable to type 'number'.\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 4, "last_activity_date": 1422730475, "creation_date": 1422730475, "answer_id": 28255287, "question_id": 28252843, "link": "https://stackoverflow.com/questions/28252843/typescript-dont-really-check-function-type/28255287#28255287", "title": "Typescript don&#39;t really check function type?", "body": "<p>TypeScript respects the fact that you can ignore the arguments that are passed.</p>\n\n<p>When you have a definition of a function, any implementation must be compatible by either having the correct type of parameter, or by omitting that parameter.</p>\n\n<p>When calling a function, you must supply all required arguments (arguments that are not optional and don't have a default value).</p>\n\n<p>Let's work some examples using this interface that is for a function that accepts a string and a number:</p>\n\n<pre><code>interface Example {\n    (name: string, age: number) : string;\n}\n</code></pre>\n\n<p>All of the following function are compatible:</p>\n\n<pre><code>var a: Example = function() { return 'Hello'; };\nvar b: Example = function(name: string) { return 'Hello ' + name; };\nvar c: Example = function(n: string, a: number) { return 'Hello ' + n + ' you are ' + a; };\n</code></pre>\n\n<p>Each one is compatible because it either specifies a parameter of the correct type, or omits it. The key to this is <em>that they all have to be called in the same way</em>.</p>\n\n<p>I have to specify both parameters when I call these functions, even if they don't use them. This allows the function to change its implementation without affecting the callers that rely on the public contract (which expects two arguments to be passed).</p>\n\n<pre><code>a('Rod', 50);\nb('Jane', 50);\nc('Freddy', 50);\n</code></pre>\n\n<p>Now let's look at the error cases.</p>\n\n<p>Functions:</p>\n\n<pre><code>// The parameters are not compatible.\nvar d: Example = function(special: boolean) { return 'Hello';}\n</code></pre>\n\n<p>Function calls:</p>\n\n<pre><code>// You haven't passed the args\na();\na('Rod');\n\n// Args are wrong type\na(50, 'Rod');\na('Rod', true);\n\n// Too many args\na('Rod', 50, true);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 15749, "user_id": 4420812, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9yQ4D.jpg?s=128&g=1", "display_name": "Maciej Sikora", "link": "https://stackoverflow.com/users/4420812/maciej-sikora"}, "is_accepted": false, "score": 0, "last_activity_date": 1564130857, "creation_date": 1564130857, "answer_id": 57216374, "question_id": 28252843, "link": "https://stackoverflow.com/questions/28252843/typescript-dont-really-check-function-type/57216374#57216374", "title": "Typescript don&#39;t really check function type?", "body": "<p>Type validates here that function needs to be called with all required arguments. The implementation with less parameters match the need, just do not use all of them. If such check would be working then you could be doing function with three arguments and just cheat the type system:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const mySearch3:  (source: Person, subString: string)=&gt; boolean = (_source, _subString) =&gt; true \n</code></pre>\n\n<p>As you can see this function does not use any of them. What I want to prove is - such type check has no real sens, because you cannot validate if the argument is really in use inside the implementation. What is important for the caller is -> what type is the function returns and what arguments should be passed to it.</p>\n"}], "owner": {"reputation": 1386, "user_id": 361010, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/1206e098d3797186a22dbf05e428e82c?s=128&d=identicon&r=PG", "display_name": "Jammy Lee", "link": "https://stackoverflow.com/users/361010/jammy-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1661, "favorite_count": 0, "accepted_answer_id": 28255287, "answer_count": 3, "score": 1, "last_activity_date": 1564130857, "creation_date": 1422715419, "question_id": 28252843, "link": "https://stackoverflow.com/questions/28252843/typescript-dont-really-check-function-type", "title": "Typescript don&#39;t really check function type?", "body": "<p>Giving the below code, type script compiler just don't raise any error, so it just don't check the parameter type of function? </p>\n\n<pre><code>var mySearch3:  (source: Person, subString: string)=&gt; boolean  = \n       function()     {return true;}\n</code></pre>\n"}, {"tags": ["visual-studio-2013", "typescript"], "comments": [{"owner": {"reputation": 460, "user_id": 228770, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dba43d8eb139309250f8b52c9dba8ef?s=128&d=identicon&r=PG", "display_name": "Ed Spencer", "link": "https://stackoverflow.com/users/228770/ed-spencer"}, "edited": false, "score": 0, "creation_date": 1427048662, "post_id": 28250525, "comment_id": 46608735, "body": "Did you get to the bottom of this? I&#39;m having the same problem and can see that other typings are working ok"}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 2, "last_activity_date": 1422702630, "creation_date": 1422702630, "answer_id": 28250901, "question_id": 28250525, "link": "https://stackoverflow.com/questions/28250525/vs-2013-does-not-see-angular-typescript-typings/28250901#28250901", "title": "VS 2013 does not see angular typescript typings", "body": "<blockquote>\n  <p>I am using visual studio 2013 update 4 with TypeScript 1.4. Anyone can help? I tried everything :/</p>\n</blockquote>\n\n<p>Suspect its just an issue of an old version lingering around. Try <code>where tsc</code> and make sure you only see <code>C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.4\\</code>. </p>\n\n<blockquote>\n  <p>I have added reference to angular.d.ts but it doesn't help. What's interesting a restangular typings are working fine - even without adding the reference.</p>\n</blockquote>\n\n<p>Make sure you have it added to the visual studio <em>project</em>. </p>\n"}, {"tags": [], "owner": {"reputation": 137, "user_id": 3815367, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0f847af8709a3f7df767976be9ebf25b?s=128&d=identicon&r=PG&f=1", "display_name": "schizofreindly", "link": "https://stackoverflow.com/users/3815367/schizofreindly"}, "is_accepted": false, "score": 0, "last_activity_date": 1423759767, "creation_date": 1423759767, "answer_id": 28483133, "question_id": 28250525, "link": "https://stackoverflow.com/questions/28250525/vs-2013-does-not-see-angular-typescript-typings/28483133#28483133", "title": "VS 2013 does not see angular typescript typings", "body": "<p>Any luck ? \nI have the same problem, however, if you use the older version\n    angularjs.TypeScript.DefinitelyTyped version=0.9.6 \n    (Nuget -> Install-Package angularjs.TypeScript.DefinitelyTyped -Version 0.9.6)\neverything works fine and it understands the ng.IScope definition.</p>\n\n<p>I don't see any structural difference between 3.1.3 and 0.9.6, so I don't understand why the older version works.</p>\n"}], "owner": {"reputation": 21, "user_id": 4514145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f3b7d459016ab1b5554f69905dacffa8?s=128&d=identicon&r=PG&f=1", "display_name": "Mariusz", "link": "https://stackoverflow.com/users/4514145/mariusz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 425, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1423759767, "creation_date": 1422699665, "last_edit_date": 1422702803, "question_id": 28250525, "link": "https://stackoverflow.com/questions/28250525/vs-2013-does-not-see-angular-typescript-typings", "title": "VS 2013 does not see angular typescript typings", "body": "<p>Visual Studio cannot resolve interface <code>ng.IScope</code> (and others from ng module).</p>\n\n<p>I have added reference to <code>angular.d.ts</code> but it doesn't help.</p>\n\n<p>What's interesting a rectangular typings are working fine - even without adding the reference.</p>\n\n<p>I am using <code>Visual Studio 2013 Update 4</code> with <code>TypeScript 1.4</code>. Anyone can help? I tried everything.</p>\n"}, {"tags": ["visual-studio", "typescript", "visual-studio-2015", "definitelytyped", "typescript1.4"], "comments": [{"owner": {"reputation": 491, "user_id": 613399, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JBQ5Q.png?s=128&g=1", "display_name": "Jonathan Sheely", "link": "https://stackoverflow.com/users/613399/jonathan-sheely"}, "edited": false, "score": 0, "creation_date": 1422660932, "post_id": 28246233, "comment_id": 44853382, "body": "I resolved the issue by downloading the source version from GitHub of TypeScript and putting the /bin directory into C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript"}, {"owner": {"reputation": 491, "user_id": 613399, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JBQ5Q.png?s=128&g=1", "display_name": "Jonathan Sheely", "link": "https://stackoverflow.com/users/613399/jonathan-sheely"}, "edited": false, "score": 0, "creation_date": 1422661287, "post_id": 28246233, "comment_id": 44853486, "body": "Also worth noting that I had to copy the en directory from the 1.4 directory and put it in the C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript directory. Then rename it to en-US in order to remove the Unsupported locale error. But I no longer needed specific the csproj settings"}, {"owner": {"reputation": 385, "user_id": 508677, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/591a5d48d21ae074562e4a20508efc96?s=128&d=identicon&r=PG", "display_name": "koo9", "link": "https://stackoverflow.com/users/508677/koo9"}, "edited": false, "score": 1, "creation_date": 1441155314, "post_id": 28246233, "comment_id": 52560466, "body": "any update on this one, having the same issue after using visual studio 2015 for a vs 2013 solution."}], "answers": [{"tags": [], "owner": {"reputation": 53, "user_id": 508224, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5IRJq.jpg?s=128&g=1", "display_name": "David Grogan", "link": "https://stackoverflow.com/users/508224/david-grogan"}, "is_accepted": false, "score": 1, "last_activity_date": 1424267765, "creation_date": 1424267765, "answer_id": 28585403, "question_id": 28246233, "link": "https://stackoverflow.com/questions/28246233/visual-studio-2015-ctp-typescript-errors-on-build/28585403#28585403", "title": "Visual Studio 2015 CTP TypeScript Errors on Build", "body": "<p>I fixed this problem by re-running the TypeScript 1.4 for Visual Studio 2013 installer, copying the GitHub sources into \"C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\" didn't work for me.</p>\n"}, {"comments": [{"owner": {"reputation": 28927, "user_id": 175679, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/CrJNW.png?s=128&g=1", "display_name": "SliverNinja - MSFT", "link": "https://stackoverflow.com/users/175679/sliverninja-msft"}, "edited": false, "score": 0, "creation_date": 1465938320, "post_id": 35952776, "comment_id": 63107906, "body": "Same issue here - had to remove any older versions as well as reinstall 1.8.6 afterwords. I had <b>TypeScript Tools for Visual Studio 2015</b> 1.7.6.0. Once uninstalled and latest version reinstalled - builds worked fine again."}], "tags": [], "owner": {"reputation": 2622, "user_id": 253732, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d98b6cd10461088105bd0a36b5a4aef8?s=128&d=identicon&r=PG", "display_name": "BowserKingKoopa", "link": "https://stackoverflow.com/users/253732/bowserkingkoopa"}, "is_accepted": false, "score": 6, "last_activity_date": 1457747236, "creation_date": 1457747236, "answer_id": 35952776, "question_id": 28246233, "link": "https://stackoverflow.com/questions/28246233/visual-studio-2015-ctp-typescript-errors-on-build/35952776#35952776", "title": "Visual Studio 2015 CTP TypeScript Errors on Build", "body": "<p>I just had this occur for me when I installed TypeScript 1.8.6 Visual Studio 2015 plugin.</p>\n\n<p>Eventually I fixed it by uninstalling all previous versions of TypeScript (of which I had many) using Add/Remove programs, and then reinstalling TypeScript plugin 1.8.6.</p>\n"}], "owner": {"reputation": 491, "user_id": 613399, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JBQ5Q.png?s=128&g=1", "display_name": "Jonathan Sheely", "link": "https://stackoverflow.com/users/613399/jonathan-sheely"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4347, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1457747236, "creation_date": 1422659980, "question_id": 28246233, "link": "https://stackoverflow.com/questions/28246233/visual-studio-2015-ctp-typescript-errors-on-build", "title": "Visual Studio 2015 CTP TypeScript Errors on Build", "body": "<p>I am getting the following errors when using Visual Studio 2015 CTP and trying to use TypeScript.</p>\n\n<pre><code>1&gt;VSTSC : error TS5015: Build: Unsupported locale: 'en-US'.\n1&gt;VSTSC : error TS5023: Build: Unknown option 'noEmitOnError'\n</code></pre>\n\n<p>I was able to get both errors to go away by setting the following configurations in the <strong>csproj</strong> file</p>\n\n<pre><code>&lt;TypeScriptToolsVersion&gt;1.4&lt;/TypeScriptToolsVersion&gt;\n&lt;TypeScriptNoEmitOnError&gt;false&lt;/TypeScriptNoEmitOnError&gt;\n&lt;TypeScriptBuildConfigurations&gt;--sourcemap --target ES5&lt;/TypeScriptBuildConfigurations&gt;\n</code></pre>\n\n<p>However if I include any <strong>DefinitelyTyped</strong> typing files such as Angular or jQuery it will throw a bunch of errors. The errors appear to be that it doesn't understand the TypeScript 1.4 syntax for multiple value typings.</p>\n\n<p>Example:</p>\n\n<pre><code>search(search: string, paramValue: string|number|string[]|boolean): ILocationService;\n</code></pre>\n\n<p><strong>Error</strong>: Build: ',' expected</p>\n\n<p>Is this a bug in Visual Studio 2015 CTP or just something messed up in my configuration.</p>\n"}, {"tags": ["angularjs", "unit-testing", "typescript", "jasmine"], "comments": [{"owner": {"reputation": 3282, "user_id": 1731636, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/poZOj.jpg?s=128&g=1", "display_name": "Boris Charpentier", "link": "https://stackoverflow.com/users/1731636/boris-charpentier"}, "edited": false, "score": 0, "creation_date": 1422632522, "post_id": 28236893, "comment_id": 44839834, "body": "Can you show your before each ?"}, {"owner": {"reputation": 45, "user_id": 3921638, "user_type": "registered", "profile_image": "https://graph.facebook.com/100001698800672/picture?type=large", "display_name": "Artur Wmatko", "link": "https://stackoverflow.com/users/3921638/artur-wmatko"}, "reply_to_user": {"reputation": 3282, "user_id": 1731636, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/poZOj.jpg?s=128&g=1", "display_name": "Boris Charpentier", "link": "https://stackoverflow.com/users/1731636/boris-charpentier"}, "edited": false, "score": 0, "creation_date": 1422638958, "post_id": 28236893, "comment_id": 44843746, "body": "@BorisCharpentier added beforEach."}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 3921638, "user_type": "registered", "profile_image": "https://graph.facebook.com/100001698800672/picture?type=large", "display_name": "Artur Wmatko", "link": "https://stackoverflow.com/users/3921638/artur-wmatko"}, "edited": false, "score": 0, "creation_date": 1422649038, "post_id": 28241670, "comment_id": 44848607, "body": "omg, it was such a stupid mistake :[ sorry for bothering you with this question and thanks alot :)"}], "tags": [], "owner": {"reputation": 3282, "user_id": 1731636, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/poZOj.jpg?s=128&g=1", "display_name": "Boris Charpentier", "link": "https://stackoverflow.com/users/1731636/boris-charpentier"}, "is_accepted": true, "score": 0, "last_activity_date": 1422639853, "creation_date": 1422639853, "answer_id": 28241670, "question_id": 28236893, "link": "https://stackoverflow.com/questions/28236893/http-is-null-when-testing/28241670#28241670", "title": "$http is null when testing", "body": "<p>You initialize $http with null in your before each, don't specify it or inject $http but if you pass null, well it will be null in your controller.</p>\n"}], "owner": {"reputation": 45, "user_id": 3921638, "user_type": "registered", "profile_image": "https://graph.facebook.com/100001698800672/picture?type=large", "display_name": "Artur Wmatko", "link": "https://stackoverflow.com/users/3921638/artur-wmatko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 28241670, "answer_count": 1, "score": 0, "last_activity_date": 1422639853, "creation_date": 1422624139, "last_edit_date": 1422638935, "question_id": 28236893, "link": "https://stackoverflow.com/questions/28236893/http-is-null-when-testing", "title": "$http is null when testing", "body": "<p>I wrote a test that mocks a request to server which should return an array. The problem is, that when i launch my test it gives me error:</p>\n\n<blockquote>\n  <p>Cannot read property 'get' of null</p>\n</blockquote>\n\n<p>and when i debug it is clear, that $http is null for some reason, but if i launch my code, it sends a request to server. Maybe my mystake is that i am using $http directly from controller, maybe i should use service for that and it would solve the problem? Anyway, my main question is why $http is null and what am i doing wrong?</p>\n\n<p>Code in controller:</p>\n\n<p><code>$scope.getLastReview = () =&gt; {\n    $http.get('/lastReview').success((reviewArray: any) =&gt; {\n    $scope.reviewsToShow = reviewArray;\n     });\n    };</code></p>\n\n<p>My test:</p>\n\n<pre><code>var sut = createController();\nscope.getLastReview();\nhttpBackend.expectGET(\"/lastReview\").respond(200, reviewArray);\nhttpBackend.flush();\nexpect(reviewArray.length).toBeGreaterThan(0);\n</code></pre>\n\n<p>beforeEach:</p>\n\n<pre><code>        inject(($injector, $rootScope, $controller) =&gt; {\n        httpBackend = $injector.get(\"$httpBackend\");\n        httpBackend.whenGET(\"/lastReview\").respond(200, reviewArray);\n        scope = $rootScope.$new();\n        createController = (): lastReviewController =&gt; {\n            return $controller(lastReviewController.controllerId, { \"$scope\": scope, \"$http\": null, '$resource': null, '$interval': $interval});\n        };\n    })\n</code></pre>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 379, "user_id": 2966506, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f8b587ed49a53998aa6e08f6febddc9d?s=128&d=identicon&r=PG", "display_name": "Marc Roussel", "link": "https://stackoverflow.com/users/2966506/marc-roussel"}, "edited": false, "score": 0, "creation_date": 1422530497, "post_id": 28206344, "comment_id": 44790473, "body": "I tried and I still have the same issue.  PageMethods is null so unusable"}, {"owner": {"reputation": 2133, "user_id": 1289311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b641f7aaa9603b827997a90ed8ce60c8?s=128&d=identicon&r=PG", "display_name": "Clark", "link": "https://stackoverflow.com/users/1289311/clark"}, "edited": false, "score": 0, "creation_date": 1422532775, "post_id": 28206344, "comment_id": 44791923, "body": "Try create a `PageMethods.d.ts&quot; somewhere, and add bas&#39; line of code. Then reference your PageMethods.d.ts at the top of your screenshot file.  That should remove the error?"}, {"owner": {"reputation": 379, "user_id": 2966506, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f8b587ed49a53998aa6e08f6febddc9d?s=128&d=identicon&r=PG", "display_name": "Marc Roussel", "link": "https://stackoverflow.com/users/2966506/marc-roussel"}, "edited": false, "score": 0, "creation_date": 1422560407, "post_id": 28206344, "comment_id": 44809265, "body": "I&#39;m not sure to understand your solution.  What do you mean by baseline ? The somewhere is vague"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 2, "last_activity_date": 1422500691, "creation_date": 1422500691, "answer_id": 28206344, "question_id": 28205618, "link": "https://stackoverflow.com/questions/28205618/cannot-find-name-pagemethods/28206344#28206344", "title": "Cannot find name PageMethods", "body": "<blockquote>\n  <p>Cannot find name 'PageMethods'.</p>\n</blockquote>\n\n<p>Quickest fix: add <code>declare var PageMethods:any</code>. </p>\n\n<p>Alternatively you will need to generate a <code>.d.ts</code> for your <code>PageMethods</code></p>\n"}], "owner": {"reputation": 379, "user_id": 2966506, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f8b587ed49a53998aa6e08f6febddc9d?s=128&d=identicon&r=PG", "display_name": "Marc Roussel", "link": "https://stackoverflow.com/users/2966506/marc-roussel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 675, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1422500691, "creation_date": 1422495386, "question_id": 28205618, "link": "https://stackoverflow.com/questions/28205618/cannot-find-name-pagemethods", "title": "Cannot find name PageMethods", "body": "<p>I have everything setup for calling a WebMethod of the aspx page from JavaScript but The PageMethods is not recognized.  I get the error <strong>Cannot find name 'PageMethods'</strong>.</p>\n\n<p>I have the ScriptManager with EnablePageMethods=\"true\",\nI have the method public static SendQuote() {} with the attribute [WebMethod] </p>\n\n<p>Here's an image :</p>\n\n<p><a href=\"http://1drv.ms/1ze8nJr\" rel=\"nofollow\">Image of the error</a></p>\n\n<p>The js is added to the aspx of course since everything else works fine</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 770, "user_id": 2822417, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5b3ff25abb372ea156fc6560a38855f8?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Seufert", "link": "https://stackoverflow.com/users/2822417/chris-seufert"}, "edited": false, "score": 0, "creation_date": 1422491795, "post_id": 28205070, "comment_id": 44775924, "body": "I thought there may be some sneaky way to do this. Its such a pain especially dealing with many JQuery plugins that seem to operate in a similar way."}, {"owner": {"reputation": 770, "user_id": 2822417, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5b3ff25abb372ea156fc6560a38855f8?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Seufert", "link": "https://stackoverflow.com/users/2822417/chris-seufert"}, "edited": false, "score": 0, "creation_date": 1422492301, "post_id": 28205070, "comment_id": 44776082, "body": "Makes sense, don&#39;t know why I did not see it. Thanks."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1422491911, "last_edit_date": 1422491911, "creation_date": 1422491584, "answer_id": 28205070, "question_id": 28204906, "link": "https://stackoverflow.com/questions/28204906/describing-function-with-specific-string-parameters/28205070#28205070", "title": "Describing function with specific string parameters", "body": "<p>You need to provide a non-specialized function signature. However this does open up possibilities of error: </p>\n\n<pre><code>interface JQuery {\n  foundation(plugin:'reveal',action:string):void;\n  foundation(plugin:'dropdown',action:string,$el:JQuery):void;\n  foundation(plugin:string,action:string,$el?:JQuery):void;\n}\n\n// SADLY \nvar foo:JQuery;\nfoo.foundation('sad','panda');\n</code></pre>\n\n<h1>WHY</h1>\n\n<p>The reason is that <em>there is no deterministic way for a compiler to always know ahead of time if a particular string is going to have an exact value</em>. This <code>string</code> might be coming from userinput/database. The idea here is to bring this information directly to your notice.</p>\n"}], "owner": {"reputation": 770, "user_id": 2822417, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5b3ff25abb372ea156fc6560a38855f8?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Seufert", "link": "https://stackoverflow.com/users/2822417/chris-seufert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "accepted_answer_id": 28205070, "answer_count": 1, "score": 1, "last_activity_date": 1422491911, "creation_date": 1422490538, "last_edit_date": 1422490989, "question_id": 28204906, "link": "https://stackoverflow.com/questions/28204906/describing-function-with-specific-string-parameters", "title": "Describing function with specific string parameters", "body": "<p>I am trying to write an interface to describe the foundation JQuery plugin. The plugin uses the first parameter to determine the child plugin that is called with the foundation plugin. </p>\n\n<p>Below is an example of what i am trying to achieve.</p>\n\n<pre><code>/// &lt;reference path=\"jquery.d.ts\"/&gt;\n\ninterface JQuery {\n  foundation(plugin:'reveal',action:string):void;\n  foundation(plugin:'dropdown',action:string,$el:JQuery):void;\n}\n</code></pre>\n\n<p>How do i describe a fixed string parameter within a typescript definition?</p>\n"}]