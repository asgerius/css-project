[{"tags": ["constructor", "typescript", "commonjs"], "answers": [{"comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1427932549, "post_id": 29402743, "comment_id": 46981090, "body": "Also I would prefer <code>mariasql</code> instead of <code>MARIASQL</code>"}, {"owner": {"reputation": 407, "user_id": 854836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98dbe607ee29c84095748705a0aa4ec2?s=128&d=identicon&r=PG", "display_name": "Bennett", "link": "https://stackoverflow.com/users/854836/bennett"}, "edited": false, "score": 0, "creation_date": 1427933231, "post_id": 29402743, "comment_id": 46981255, "body": "I <i>just</i> issued a PR, sorry I didn&#39;t see this comment in time; I misunderstood the example and assumed caps was the &quot;style&quot;."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1427931640, "creation_date": 1427931640, "answer_id": 29402743, "question_id": 29402624, "link": "https://stackoverflow.com/questions/29402624/typescript-1-4-commonjs-modules-exposed-as-constructors/29402743#29402743", "title": "TypeScript 1.4 CommonJS modules exposed as constructors", "body": "<p>What you have is perfectly fine. The only minor fix needed is in your test instead of </p>\n\n<pre><code>var c:Client.prototype = new Client(),\n</code></pre>\n\n<p>You need to use the interface: </p>\n\n<pre><code>var c: MARIASQL.MariaClient = new Client(),\n</code></pre>\n\n<p>Or remove it entirely and let the compiler infer it for you ;). </p>\n"}], "owner": {"reputation": 407, "user_id": 854836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98dbe607ee29c84095748705a0aa4ec2?s=128&d=identicon&r=PG", "display_name": "Bennett", "link": "https://stackoverflow.com/users/854836/bennett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "accepted_answer_id": 29402743, "answer_count": 1, "score": 1, "last_activity_date": 1427931640, "creation_date": 1427930962, "last_edit_date": 1495540311, "question_id": 29402624, "link": "https://stackoverflow.com/questions/29402624/typescript-1-4-commonjs-modules-exposed-as-constructors", "title": "TypeScript 1.4 CommonJS modules exposed as constructors", "body": "<p><a href=\"https://stackoverflow.com/questions/26249210/how-do-i-write-a-typescript-declaration-file-for-a-complex-external-commonjs-mod\">This question</a> is <em>very</em> close to my question, and the comments in the linked question are really helpful, but I cannot seem to make a pure \"ghost\" module.</p>\n\n<p>The code I'm struggling with can <a href=\"https://github.com/bennett000/DefinitelyTyped/tree/mariasql/mariasql\" rel=\"nofollow noreferrer\">be found here</a> I have a file \"mariasql.d.ts\", and a test file \"mariasql-tests.ts\".  The *.d.ts file exposes a constructor function, that works like so:</p>\n\n<pre><code>var Client = require('mariasql),\nc = new Client();\n</code></pre>\n\n<p>Based on the other SO quesion, the *.d.ts file exports like so:</p>\n\n<pre><code>module MARIASQL {\n    //... edited for brevity\n    export interface MariaClient {\n        connect(config:ClientConfig):void;\n        end():void;\n        destroy():void;\n        escape(query:string):string;\n        query(q:string, placeHolders?:Dictionary, useArray?:boolean):MariaQuery;\n        query(q:string, placeHolders?:Array&lt;any&gt;, useArray?:boolean):MariaQuery;\n        query(q:string, useArray?:boolean):MariaQuery;\n        prepare(query:string): MariaPreparedQuery;\n        isMariaDB():boolean;\n        on(signal:string, cb:MariaCallBackError): MariaClient;    // signal 'error'\n        on(signal:string, cb:MariaCallBackObject): MariaClient;   // signal 'close'\n        on(signal:string, cb:MariaCallBackVoid): MariaClient;     // signal 'connect'\n        connected: boolean;\n        threadId: string;\n    }\n\n    export interface Client {\n        new ():MariaClient;\n        ():MariaClient;\n        prototype: MariaClient;\n    }\n}\n\ndeclare module \"mariasql\" {\n    var Client:MARIASQL.Client;\n    export = Client;\n}\n</code></pre>\n\n<p>The import code in the test file looks like so:</p>\n\n<pre><code>/// &lt;reference path=\"../node/node-0.10.d.ts\" /&gt;\n/// &lt;reference path=\"./mariasql.d.ts\" /&gt;\n\n// Example 1 - SHOW DATABASES\nimport util = require('util');\nimport Client = require('mariasql');\n\nvar c:Client = new Client(),\n    inspect = util.inspect;\n// edited ...\n</code></pre>\n\n<p><em>note</em> - the github link will read <code>c:Client.prototype</code> which also did not work.</p>\n\n<p>I feel like I must be misunderstanding something(s) obvious.</p>\n"}, {"tags": ["typescript", "typescript1.4"], "answers": [{"comments": [{"owner": {"reputation": 37346, "user_id": 699632, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/EU5sp.jpg?s=128&g=1", "display_name": "Marty", "link": "https://stackoverflow.com/users/699632/marty"}, "edited": false, "score": 0, "creation_date": 1427946040, "post_id": 29402628, "comment_id": 46984159, "body": "Thank you - is there any convention around where exactly this type of content goes? Would you say a <code>global.ts</code> in the project root is common or are there more rigid ways to go about it?"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 37346, "user_id": 699632, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/EU5sp.jpg?s=128&g=1", "display_name": "Marty", "link": "https://stackoverflow.com/users/699632/marty"}, "edited": false, "score": 0, "creation_date": 1427949099, "post_id": 29402628, "comment_id": 46984875, "body": "<code>Would you say a global.ts in the project root is common or are there more rigid ways to go about it</code>  That&#39;s what I do. Haven&#39;t had complaints : <a href=\"https://github.com/TypeStrong/atom-typescript/blob/master/lib/globals.ts\" rel=\"nofollow noreferrer\">github.com/TypeStrong/atom-typescript/blob/master/lib/&hellip;</a> /"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 37346, "user_id": 699632, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/EU5sp.jpg?s=128&g=1", "display_name": "Marty", "link": "https://stackoverflow.com/users/699632/marty"}, "edited": false, "score": 0, "creation_date": 1427949117, "post_id": 29402628, "comment_id": 46984880, "body": "Some people prefer <code>globals.d.ts</code>. I don&#39;t care :)"}, {"owner": {"reputation": 37346, "user_id": 699632, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/EU5sp.jpg?s=128&g=1", "display_name": "Marty", "link": "https://stackoverflow.com/users/699632/marty"}, "edited": false, "score": 0, "creation_date": 1427953173, "post_id": 29402628, "comment_id": 46986103, "body": "So after doing this, I can&#39;t create a new instances via the type - it says the constructor does not accept any arguments (e.g. if I do <code>new MyClass(some, args)</code> even if <code>MyClass</code>&#39;s constructor does in fact accept two arguments."}, {"owner": {"reputation": 37346, "user_id": 699632, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/EU5sp.jpg?s=128&g=1", "display_name": "Marty", "link": "https://stackoverflow.com/users/699632/marty"}, "edited": false, "score": 0, "creation_date": 1427953811, "post_id": 29402628, "comment_id": 46986352, "body": "Oh, I see now... That is a bit of an unfortunate way to go about it. I am yet to watch your video but I intend to."}, {"owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "edited": false, "score": 0, "creation_date": 1427985927, "post_id": 29402628, "comment_id": 47003837, "body": "Btw. it seems most of your arguments against internal modules go up in smoke if you use gulp-typescript. It takes care of code ordering, does not force you to use <code>&#47;&#47;&#47;reference</code> tags yet and supports incremental builds."}, {"owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 0, "creation_date": 1428048711, "post_id": 29402628, "comment_id": 47027281, "body": "@basarat Can you tell us more about the internal modules, somewhere? I am also interested."}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1428119934, "post_id": 29402628, "comment_id": 47053010, "body": "<code>Can you tell us more about the internal modules, somewhere</code> Can you quote what I said, so I know what I need to explain more?"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 1, "last_activity_date": 1427953693, "last_edit_date": 1427953693, "creation_date": 1427930975, "answer_id": 29402628, "question_id": 29402462, "link": "https://stackoverflow.com/questions/29402462/where-is-the-correct-place-for-type-statements/29402628#29402628", "title": "Where is the correct place for &#39;type&#39; statements?", "body": "<blockquote>\n  <p>However once I did this in another file, the compiler didn't like that I had the same statement twice across two files.</p>\n</blockquote>\n\n<p>Don't do it twice then. Just do it once in a place like <code>globals.ts</code> </p>\n\n<p>BTW: I recommend you don't use internal modules (<a href=\"https://github.com/TypeStrong/atom-typescript/blob/master/docs/out.md\" rel=\"nofollow\">heres why</a>) and I recommend you use <em>external modules</em>: <a href=\"https://www.youtube.com/watch?v=KDrWLMUY0R0\" rel=\"nofollow\">https://www.youtube.com/watch?v=KDrWLMUY0R0</a></p>\n\n<h2>Update</h2>\n\n<p>Don't use <code>type</code> for something that you are going to use in <em>code</em>. Use <code>type</code> only for stuff that is going to be in the <code>type annotation</code> declaration space. </p>\n\n<p>To alias classes you will need to use <code>var</code>. This is shown below: </p>\n\n<pre><code>module a.b {\n    export class Foo {\n        constructor(a, b) {\n        }\n    }\n}\n\nvar Bar = a.b.Foo;\n\nvar b = new Bar(1, 2);\n</code></pre>\n\n<p>Again I cannot warn you enough of the hazards of using <code>--out</code>.</p>\n"}], "owner": {"reputation": 37346, "user_id": 699632, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/EU5sp.jpg?s=128&g=1", "display_name": "Marty", "link": "https://stackoverflow.com/users/699632/marty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 29402628, "answer_count": 1, "score": 1, "last_activity_date": 1427953693, "creation_date": 1427930086, "question_id": 29402462, "link": "https://stackoverflow.com/questions/29402462/where-is-the-correct-place-for-type-statements", "title": "Where is the correct place for &#39;type&#39; statements?", "body": "<p>I have been playing around with TypeScript 1.4 recently and I am trying to understand the correct usage of <a href=\"http://blogs.msdn.com/b/typescript/archive/2014/11/18/what-s-new-in-the-typescript-type-system.aspx\" rel=\"nofollow\">type aliases via the <code>type</code> keyword</a>. To add some context, I have a bunch of TypeScript files which I have structured this way:</p>\n\n<pre><code>module A.B.C {\n    export class MyClass {\n        // ...\n    }\n}\n</code></pre>\n\n<p>And to get around having to use <code>var thing:A.B.C.MyClass</code>, I have been trying to use the <code>type</code> keyword in various ways, each with their own problems:</p>\n\n<h2>Top of the file.</h2>\n\n<p>The first attempt I made was placing these statements at the top of the file, above the <code>module</code> statement:</p>\n\n<pre><code>type MyClass = A.B.C.MyClass;\n\nmodule D.E {\n    // Yada yada.\n}\n</code></pre>\n\n<p>However once I did this in another file, the compiler didn't like that I had the same statement twice across two files.</p>\n\n<h2>Within the module.</h2>\n\n<p>My next thought was to place the statement within the module definition:</p>\n\n<pre><code>module D.E {\n    type MyClass = A.B.C.MyClass;\n\n    // ...\n}\n</code></pre>\n\n<p>This worked well for some time, but then I ran into some kind of ambiguity error when trying to assign a <code>new MyClass</code> to a class member. For example:</p>\n\n<pre><code>module D.E {\n    type MyClass = A.B.C.MyClass;\n\n    export class AnotherClass {\n        private thing:MyClass;\n\n        constructor() {\n            this.thing = new MyClass(); // Error is here.\n        }\n    }\n}\n</code></pre>\n\n<p>Results in:</p>\n\n<blockquote>\n  <p>Assigned expression type <code>D.E.MyClass</code> in not assignable to type <code>A.B.C.MyClass</code></p>\n</blockquote>\n\n<p>Obviously I am approaching this the wrong way entirely. What is the correct way to achieve what I am trying to do? I suspect my first attempt was closer to correct and that those <code>type</code> statements just belong in a single file somewhere?</p>\n"}, {"tags": ["typescript", "webstorm"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 1, "last_activity_date": 1427927934, "creation_date": 1427927934, "answer_id": 29402078, "question_id": 29401916, "link": "https://stackoverflow.com/questions/29401916/typescript-and-webstorm/29402078#29402078", "title": "Typescript and WebStorm", "body": "<blockquote>\n  <p>Is there a way to set up WebStorm to also wrap the code in an iife so that all of those objects aren't on the global namespace?</p>\n</blockquote>\n\n<p>You will have to show the <code>ts</code> code but two things: </p>\n\n<p>Use an internal module: </p>\n\n<pre><code>module Foo{\n     // Code here is in an IIFE\n}\n</code></pre>\n\n<p>Or external modules and compile with <code>--module amd</code>: </p>\n\n<pre><code>export var foo = 123; // The whole file will be in an IIFE\n</code></pre>\n\n<p>More about external modules : <a href=\"https://www.youtube.com/watch?v=KDrWLMUY0R0\" rel=\"nofollow\">https://www.youtube.com/watch?v=KDrWLMUY0R0</a></p>\n"}], "owner": {"reputation": 46655, "user_id": 1647604, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/de0a77110ab57284e2a8d57858f714a3?s=128&d=identicon&r=PG", "display_name": "DeborahK", "link": "https://stackoverflow.com/users/1647604/deborahk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 29402078, "answer_count": 1, "score": -1, "last_activity_date": 1427927934, "creation_date": 1427926955, "question_id": 29401916, "link": "https://stackoverflow.com/questions/29401916/typescript-and-webstorm", "title": "Typescript and WebStorm", "body": "<p>When using Typescript and Visual Studio, the generated JavaScript code is wrapped in an Immediately Invoked Function Expression (iife). </p>\n\n<p>When using Typescript and WebStorm, the generated JavaScript code appears to put all of the objects in the global namespace.</p>\n\n<p>Is there a way to set up WebStorm to <em>also</em> wrap the code in an iife so that all of those objects aren't on the global namespace?</p>\n"}, {"tags": ["angularjs", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "edited": false, "score": 0, "creation_date": 1427924168, "post_id": 29401216, "comment_id": 46978205, "body": "Thanks Ryan but the <code>text</code> variable is not seen either."}], "tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": false, "score": 3, "last_activity_date": 1427923860, "creation_date": 1427923860, "answer_id": 29401216, "question_id": 29401078, "link": "https://stackoverflow.com/questions/29401078/angularjs-scope-not-binding-to-this-of-typescript-class-for-controlleras-syntax/29401216#29401216", "title": "AngularJS scope not binding to this of TypeScript class for controllerAs syntax", "body": "<p>If you want <code>buttonClick</code> to be an instance member (as you did in the ES5 version) instead of a prototype member, use an arrow function:</p>\n\n<pre><code>// Controller implementation via TypeScript\nclass TypeScriptController {\n  text = \"Please click the button\";\n\n  constructor() {}\n\n  // Arrow function captures 'this'\n  buttonClick = () =&gt; {\n    this.text = \"The button was clicked\";\n  }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "edited": false, "score": 1, "creation_date": 1427989081, "post_id": 29402193, "comment_id": 47005930, "body": "Thanks for the tip. For this to work <b>the controller needs to be passed to angular after the class definition</b>. This is because the <code>TypeScriptController</code> class is defined as a variable that a function is assigned to. Therefore the <code>TypeScriptController</code> function is not available until after the class definition.  For me, this will make the code passing the controller harder to find (at the end of the file) but it works."}, {"owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "edited": false, "score": 0, "creation_date": 1427990318, "post_id": 29402193, "comment_id": 47006732, "body": "I&#39;ve written <a href=\"http://stackoverflow.com/a/29417325/4252741\">my own answer</a> incorporating your note and my own realization."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 2, "last_activity_date": 1427928583, "creation_date": 1427928583, "answer_id": 29402193, "question_id": 29401078, "link": "https://stackoverflow.com/questions/29401078/angularjs-scope-not-binding-to-this-of-typescript-class-for-controlleras-syntax/29402193#29402193", "title": "AngularJS scope not binding to this of TypeScript class for controllerAs syntax", "body": "<blockquote>\n  <p>angular.module('testApp')\n  .controller('TypeScriptController', () => new TypeScriptController())</p>\n</blockquote>\n\n<p>You have this wrong for <code>controllerAs</code> syntax. Instead do: </p>\n\n<pre><code>angular.module('testApp')\n.controller('TypeScriptController', TypeScriptController)\n</code></pre>\n\n<p>And angular will run the <code>new</code> when it sees controller as. </p>\n"}, {"tags": [], "owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "is_accepted": true, "score": 1, "last_activity_date": 1427990232, "last_edit_date": 1495542349, "creation_date": 1427990232, "answer_id": 29417325, "question_id": 29401078, "link": "https://stackoverflow.com/questions/29401078/angularjs-scope-not-binding-to-this-of-typescript-class-for-controlleras-syntax/29417325#29417325", "title": "AngularJS scope not binding to this of TypeScript class for controllerAs syntax", "body": "<p>As noted by <a href=\"https://stackoverflow.com/a/29402193/4252741\">@basarat</a>, the <code>TypeScriptController</code> should be passed directly to the controller.</p>\n\n<pre><code>angular.module('testApp')\n.controller('TypeScriptController', TypeScriptController)\n</code></pre>\n\n<p>The second issue is that the class definition needs to happen before the <code>TypeScriptController</code> is passed to the angular <code>.controller()</code> function. This is because TypeScript compiles classes to variables that contain a function.</p>\n\n<pre><code>// Compiled from TypeScript source\n// Note the variable definition\nvar TypeScriptController = (function() {\n  function TypeScriptController() {\n    this.text = \"Please click the button\";\n  }\n  TypeScriptController.prototype.buttonClick = function() {\n    this.text = \"The button was clicked\";\n  };\n  return TypeScriptController;\n})();\n</code></pre>\n\n<p>This variable needs to be computed before it can be passed to angular. This differs from a typical JavaScript function definition which is available at the start of the program because of <a href=\"https://stackoverflow.com/questions/7506844/javascript-function-scoping-and-hoisting\">JavaScript hoisting</a>.</p>\n\n<pre><code>// MainController function is already defined\nangular.module('testApp', [])\n.controller('MainController', MainController);\n\n// Available above because defined as \"function FuncName()\"\nfunction MainController() {\n  this.text = \"Please click the button\";\n  this.buttonClick = function() {\n    this.text = \"The button was clicked\";\n  };\n}\n</code></pre>\n\n<p>Therefore the fix is to define the TypeScript class before passing the controller function.</p>\n\n<pre><code>// Controller implementation via TypeScript\nclass TypeScriptController {\n  text = \"Please click the button\";\n\n  constructor() {}\n\n  buttonClick() {\n    this.text = \"The button was clicked\";\n  }\n}\n// Now that class is defined we can pass the controller directly\nangular.module('testApp')\n.controller('TypeScriptController', TypeScriptController)\n</code></pre>\n"}], "owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2183, "favorite_count": 0, "accepted_answer_id": 29417325, "answer_count": 3, "score": 2, "last_activity_date": 1427990232, "creation_date": 1427923313, "question_id": 29401078, "link": "https://stackoverflow.com/questions/29401078/angularjs-scope-not-binding-to-this-of-typescript-class-for-controlleras-syntax", "title": "AngularJS scope not binding to this of TypeScript class for controllerAs syntax", "body": "<p>I'm trying out AngularJS and I'm attempting to use TypeScript classes to get prepared for a large project. The problem I'm having is that the <code>this</code> of the controller class is not being binded to the scope inside the portion of the DOM where the <code>ng-controller</code> directive is.</p>\n\n<p>Starting with the following TypeScript code:</p>\n\n<pre><code>angular.module('testApp')\n.controller('TypeScriptController', () =&gt; new TypeScriptController())\n\n// Controller implementation via TypeScript\nclass TypeScriptController {\n  text = \"Please click the button\";\n\n  constructor() {}\n\n  buttonClick () {\n    this.text = \"The button was clicked\";\n  }\n}\n</code></pre>\n\n<p>And binding the controller to the DOM using </p>\n\n<pre><code>&lt;main ng-controller=\"TypeScriptController as TSCtrl\"&gt;\n</code></pre>\n\n<p>If I implement this using the standard ES5 function style it works fine (see first half of code snippet below). However the class version does not. Now I can pass in the <code>$scope</code> variable to the controller and bind a property of <code>$scope</code> to <code>this</code> but then the <code>controllerAs</code> syntax in the HTML is ignored. However, I'd like to avoid passing <code>$scope</code> to every controller. </p>\n\n<p>I know that AngularJS 1.3 introduced a <code>bindToController</code> option for directives but I don't see how that could be applied in this context.</p>\n\n<h2>Example:</h2>\n\n<p>In this example showing the ES5 and TypeScript implementation of a controller. The controller simply contains a method that the <code>ng-click</code> calls to write text below the button. The ES5 version works. The TypeScript version does not. I've also implemented this in a <a href=\"http://plnkr.co/edit/j7SGwLDG5KmHV76hJUjl?p=preview\" rel=\"nofollow\">Plunker</a></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>angular.module('testApp', [])\r\n  .controller('MainController', MainController);\r\n\r\nfunction MainController() {\r\n  this.text = \"Please click the button\";\r\n  this.buttonClick = function() {\r\n    this.text = \"The button was clicked\";\r\n  };\r\n};\r\n\r\n// Compiled from TypeScript source\r\nangular.module('testApp').controller('TypeScriptController', function() {\r\n  return new TypeScriptController();\r\n});\r\n// Controller implementation via TypeScript\r\nvar TypeScriptController = (function() {\r\n  function TypeScriptController() {\r\n    this.text = \"Please click the button\";\r\n  }\r\n  TypeScriptController.prototype.buttonClick = function() {\r\n    this.text = \"The button was clicked\";\r\n  };\r\n  return TypeScriptController;\r\n})();</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;body ng-app=\"testApp\"&gt;\r\n  &lt;main ng-controller=\"MainController as mainCtrl\"&gt;\r\n    &lt;h1&gt;Hello World!&lt;/h1&gt;\r\n    &lt;p&gt;\r\n      &lt;input type=\"button\" name=\"testInput\" value=\"Test button\" ng-click=\"mainCtrl.buttonClick()\"&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;{{mainCtrl.text}}&lt;/p&gt;\r\n  &lt;/main&gt;\r\n  &lt;main ng-controller=\"TypeScriptController as TSCtrl\"&gt;\r\n    &lt;h1&gt;Hello TypeScript!&lt;/h1&gt;\r\n    &lt;p&gt;\r\n      &lt;input type=\"button\" name=\"testInput\" value=\"Test button\" ng-click=\"TSCtrl.buttonClick()\"&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;{{TSCtrl.text}}&lt;/p&gt;\r\n  &lt;/main&gt;\r\n&lt;/body&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 22581, "user_id": 509627, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/e33ew.jpg?s=128&g=1", "display_name": "David Thielen", "link": "https://stackoverflow.com/users/509627/david-thielen"}, "edited": false, "score": 0, "creation_date": 1427993616, "post_id": 29402128, "comment_id": 47008599, "body": "You&#39;re right - the IE debugger was not properly displaying the value."}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 22581, "user_id": 509627, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/e33ew.jpg?s=128&g=1", "display_name": "David Thielen", "link": "https://stackoverflow.com/users/509627/david-thielen"}, "edited": false, "score": 0, "creation_date": 1428024822, "post_id": 29402128, "comment_id": 47021357, "body": "FWIW <code>I don&#39;t believe you</code> was meant as a joke :)"}, {"owner": {"reputation": 22581, "user_id": 509627, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/e33ew.jpg?s=128&g=1", "display_name": "David Thielen", "link": "https://stackoverflow.com/users/509627/david-thielen"}, "edited": false, "score": 1, "creation_date": 1428083055, "post_id": 29402128, "comment_id": 47043035, "body": "Oh yes, I did take it as a joke. But it also did make me look again. So funny and solved my problem."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 1, "last_activity_date": 1427928213, "creation_date": 1427928213, "answer_id": 29402128, "question_id": 29400860, "link": "https://stackoverflow.com/questions/29400860/how-do-i-access-this-variable-in-typescript/29402128#29402128", "title": "How do I access this variable in typescript", "body": "<blockquote>\n  <p>The debugger tells me that enableTraps in the trap function is undefined. How do I specify the var enableTraps</p>\n</blockquote>\n\n<p>What you have is correct TS/JS. I don't believe you. Unless you have found a bug in the <em>runtime environment you are working with</em>.</p>\n"}], "owner": {"reputation": 22581, "user_id": 509627, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/e33ew.jpg?s=128&g=1", "display_name": "David Thielen", "link": "https://stackoverflow.com/users/509627/david-thielen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 29402128, "answer_count": 1, "score": 0, "last_activity_date": 1427928213, "creation_date": 1427922458, "question_id": 29400860, "link": "https://stackoverflow.com/questions/29400860/how-do-i-access-this-variable-in-typescript", "title": "How do I access this variable in typescript", "body": "<p>For the following code:</p>\n\n<pre><code>export var enableTraps = false;\n\n/**\n * Drops into the debugger.\n * @param breakIfTrue if undefined or true, will break.\n */\nexport var trap = function (breakIfTrue?: boolean): void {\n    if (!enableTraps)\n        return;\n    if ((breakIfTrue === undefined) || breakIfTrue)\n        debugger;\n}\n</code></pre>\n\n<p>The debugger tells me that enableTraps in the trap function is undefined. How do I specify the var enableTraps?</p>\n\n<p>thanks - dave</p>\n"}, {"tags": ["google-maps", "typescript"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user1106925"}, "edited": false, "score": 2, "creation_date": 1427921359, "post_id": 29400342, "comment_id": 46976883, "body": "That&#39;s not JavaScript."}, {"owner": {"reputation": 113237, "user_id": 459897, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mA4e2.jpg?s=128&g=1", "display_name": "Dr.Molle", "link": "https://stackoverflow.com/users/459897/dr-molle"}, "edited": false, "score": 0, "creation_date": 1427921473, "post_id": 29400342, "comment_id": 46976952, "body": "It seems to be a part of the documentation, the <code>?</code> marks the function-arguments/object-properties as optional"}, {"owner": {"reputation": 113237, "user_id": 459897, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mA4e2.jpg?s=128&g=1", "display_name": "Dr.Molle", "link": "https://stackoverflow.com/users/459897/dr-molle"}, "edited": false, "score": 0, "creation_date": 1427921655, "post_id": 29400342, "comment_id": 46977057, "body": "The <code>lat():number</code> probably is a method <code>lat()</code> of some object which returns a value of type <code>number</code>"}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 3, "last_activity_date": 1427928397, "creation_date": 1427928397, "answer_id": 29402156, "question_id": 29400342, "link": "https://stackoverflow.com/questions/29400342/in-javascript-objec-property/29402156#29402156", "title": "?: in javascript objec property", "body": "<p>That code is <code>TypeScript</code>, not JavaScript. </p>\n\n<p><code>?</code> denotes that the paremeter (or interface members) are optional. </p>\n\n<p><code>:number</code> denotes that the return type is a <code>number</code>. </p>\n\n<p>More on basic type annotations : <a href=\"http://basarat.gitbooks.io/typescript/content/docs/types/type-system.html\" rel=\"nofollow\">http://basarat.gitbooks.io/typescript/content/docs/types/type-system.html</a></p>\n"}], "owner": {"reputation": 772, "user_id": 926519, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/9698cdba35fbdb87279cc8049681c4b3?s=128&d=identicon&r=PG", "display_name": "Miguel", "link": "https://stackoverflow.com/users/926519/miguel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 29402156, "answer_count": 1, "score": 0, "last_activity_date": 1427934143, "creation_date": 1427920721, "last_edit_date": 1592644375, "question_id": 29400342, "link": "https://stackoverflow.com/questions/29400342/in-javascript-objec-property", "title": "?: in javascript objec property", "body": "<p>I have a question about some javascript code I saw in the google maps javascript library.</p>\n<h1>1.</h1>\n<pre><code>constructor (sw?: LatLng, ne?: LatLng);\n</code></pre>\n<p>the above is inside a class called latlng. Im not sure what is happening here. Why is the '?:' used, and what does it mean for the parameters being passed into the function.</p>\n<h1>2.</h1>\n<pre><code>lat(): number;\n</code></pre>\n<p>The above is inside another object. I'm thinking this tells me that this object's function returns a number, but I'm not sure this is the case since I thought you couldn't specify return types in javascript.</p>\n<h1>3.</h1>\n<pre><code>export interface MapOptions {\n        backgroundColor?: string;\n        center?: LatLng;\n        disableDefaultUI?: boolean;\n        disableDoubleClickZoom?: boolean;\n        draggable?: boolean;\n        draggableCursor?: string;\n        draggingCursor?: string;\n        heading?: number;\n        ...etc.\n        }\n</code></pre>\n<p>What the heck is all this? Is this even legal javascript. What does the '?:' operator (or whatever you wanna call it) is doing here?</p>\n<p>I'm an experienced c++ and type definition is what my mind sees every where. I'm trying to adjust to javascript variables with not types but this here is just a little confusing... is everything to the right of the colon just assigning types to the properties on the left? or is the comparison operator being used here to compare something?</p>\n<p>UPDATE:\nI guess this is not javascript after all. Dont understand why down voted for it being typescript. So much of this being a learning environment ha!</p>\n"}, {"tags": ["typescript", "asp.net-core", "visual-studio-2015"], "comments": [{"owner": {"reputation": 1578, "user_id": 2528440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84f6b32e6e099bc721e93d0a397c85cd?s=128&d=identicon&r=PG", "display_name": "AndersNS", "link": "https://stackoverflow.com/users/2528440/andersns"}, "edited": false, "score": 0, "creation_date": 1427925020, "post_id": 29399707, "comment_id": 46978515, "body": "Why do you want to avoid Grunt (or Gulp which is a lot better than Grunt in my opinion)? Also see this GH issue: <a href=\"https://github.com/aspnet/Home/issues/134\" rel=\"nofollow noreferrer\">github.com/aspnet/Home/issues/134</a>. You could always invoke the TypeScript compiler in a postbuild script but.."}, {"owner": {"reputation": 1124, "user_id": 3151470, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/1e4993f34e0a9d2006e493c845b75e37?s=128&d=identicon&r=PG&f=1", "display_name": "William", "link": "https://stackoverflow.com/users/3151470/william"}, "reply_to_user": {"reputation": 1578, "user_id": 2528440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84f6b32e6e099bc721e93d0a397c85cd?s=128&d=identicon&r=PG", "display_name": "AndersNS", "link": "https://stackoverflow.com/users/2528440/andersns"}, "edited": false, "score": 0, "creation_date": 1427946636, "post_id": 29399707, "comment_id": 46984294, "body": "Fear of the unknown mostly.  ASP Net 5 is so foreign to what Im used to.  If I setup a gulp task, will I still see compiler errors in the Visual Studio errors window?"}], "answers": [{"comments": [{"owner": {"reputation": 1367, "user_id": 2022255, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/9542653eab2b0831603422c184129727?s=128&d=identicon&r=PG", "display_name": "Daan van Hulst", "link": "https://stackoverflow.com/users/2022255/daan-van-hulst"}, "edited": false, "score": 1, "creation_date": 1429860069, "post_id": 29432901, "comment_id": 47808372, "body": "I&#39;ve been looking at TypeScript with ASP.NET 5, but how do you access definition files when you install them through NuGet? I&#39;ve used TSD before, but this sort of has it&#39;s own package manager for installing TypeScript files. I would hate to introduce a fourth package manager :)."}, {"owner": {"reputation": 964, "user_id": 3530622, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7543d34746c63aff1d4106d9c83d21c4?s=128&d=identicon&r=PG", "display_name": "Dylan", "link": "https://stackoverflow.com/users/3530622/dylan"}, "reply_to_user": {"reputation": 1367, "user_id": 2022255, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/9542653eab2b0831603422c184129727?s=128&d=identicon&r=PG", "display_name": "Daan van Hulst", "link": "https://stackoverflow.com/users/2022255/daan-van-hulst"}, "edited": false, "score": 0, "creation_date": 1430067461, "post_id": 29432901, "comment_id": 47885341, "body": "Good question... looks like it doesn&#39;t go as planned. I will have a play around. Hopefully one day the definition files will just come down with bower."}, {"owner": {"reputation": 1367, "user_id": 2022255, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/9542653eab2b0831603422c184129727?s=128&d=identicon&r=PG", "display_name": "Daan van Hulst", "link": "https://stackoverflow.com/users/2022255/daan-van-hulst"}, "edited": false, "score": 0, "creation_date": 1430116942, "post_id": 29432901, "comment_id": 47901323, "body": "I&#39;ve actually looked into it, and it is not supported atm. I&#39;ve switched to TSD until support comes through either NuGet or Bower."}, {"owner": {"reputation": 964, "user_id": 3530622, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7543d34746c63aff1d4106d9c83d21c4?s=128&d=identicon&r=PG", "display_name": "Dylan", "link": "https://stackoverflow.com/users/3530622/dylan"}, "reply_to_user": {"reputation": 1367, "user_id": 2022255, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/9542653eab2b0831603422c184129727?s=128&d=identicon&r=PG", "display_name": "Daan van Hulst", "link": "https://stackoverflow.com/users/2022255/daan-van-hulst"}, "edited": false, "score": 0, "creation_date": 1430132281, "post_id": 29432901, "comment_id": 47910511, "body": "Yeah, I just figured the same thing out. It treats the packages very differently. My only thinking which I haven&#39;t to play around with is if you could get the old packages.config working in the new projects. Though doubt it would be possible only using Visual Studio."}], "tags": [], "owner": {"reputation": 964, "user_id": 3530622, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7543d34746c63aff1d4106d9c83d21c4?s=128&d=identicon&r=PG", "display_name": "Dylan", "link": "https://stackoverflow.com/users/3530622/dylan"}, "is_accepted": false, "score": 2, "last_activity_date": 1428067105, "last_edit_date": 1428067105, "creation_date": 1428066801, "answer_id": 29432901, "question_id": 29399707, "link": "https://stackoverflow.com/questions/29399707/visual-studio-2015-ctp-6-combining-typescript-output-into-single-js-file/29432901#29432901", "title": "Visual Studio 2015 CTP 6 - Combining Typescript output into single .js file", "body": "<p>I was a little hesitant to use Grunt at first, kind of seems like a backwards step when you used to Visual Studio doing everything for you. Though I am guessing they had to get away from using Visual Studio for a everything since ASP.NET 5 is going to be cross platform and not reliant on Visual Studio.</p>\n\n<p>If you set up a Grunt or Gulp task you will still see errors in the Errors List. It is just coming from Visual Studio.</p>\n\n<p>I used <a href=\"https://www.npmjs.com/package/grunt-typescript\" rel=\"nofollow\">grunt-typescript</a> to compile and output the JavaScript to one file. I also had to install <a href=\"https://www.npmjs.com/package/typescript\" rel=\"nofollow\">typescript</a> itself. Once you have them installed via the packages.json file you have to add something like this to your gruntfile.js</p>\n\n<pre><code>typescript: {\n    base: {\n      src: ['path/to/typescript/files/**/*.ts'],\n      dest: 'where/you/want/your/js/file.js',\n      options: {\n        module: 'amd', //or commonjs \n      }\n    }\n  }\n</code></pre>\n\n<p>and</p>\n\n<pre><code>grunt.loadNpmTasks(\"grunt-typescript\");\n</code></pre>\n\n<p>I ended up pointing the src to my TypeScript reference file.</p>\n\n<p>You can then get it to run in post build via the Visual Studio Task Runner Explorer. Though what is even better is set up a watch task on all the TypeScript files to start the build, it is built into grunt-typescript but I used <a href=\"https://www.npmjs.com/package/grunt-contrib-watch\" rel=\"nofollow\">grunt-contrib-watch</a> to do it as I am also watching Sass files...etc. I used the watch task, as you don't need to manually build the project anymore with ASP.NET 5.</p>\n\n<p>Also if haven't tried <a href=\"https://github.com/Definitelytyped/tsd\" rel=\"nofollow\">TSD</a>, have a look it is really good to find and download the definition files. It feels better using it than NuGet to get them, just as bower seems better than NuGet for JavaScript libraries.</p>\n"}, {"comments": [{"owner": {"reputation": 1124, "user_id": 3151470, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/1e4993f34e0a9d2006e493c845b75e37?s=128&d=identicon&r=PG&f=1", "display_name": "William", "link": "https://stackoverflow.com/users/3151470/william"}, "edited": false, "score": 0, "creation_date": 1428328761, "post_id": 29445061, "comment_id": 47106668, "body": "Thank you... Editing the kproj file worked perfectly.  Exactly what I was looking for.  I&#39;m going to stick with this method until we have some additional guidance from Microsoft about the recommended way to handle it."}], "tags": [], "owner": {"reputation": 964, "user_id": 3530622, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7543d34746c63aff1d4106d9c83d21c4?s=128&d=identicon&r=PG", "display_name": "Dylan", "link": "https://stackoverflow.com/users/3530622/dylan"}, "is_accepted": true, "score": 3, "last_activity_date": 1428142859, "last_edit_date": 1428142859, "creation_date": 1428141575, "answer_id": 29445061, "question_id": 29399707, "link": "https://stackoverflow.com/questions/29399707/visual-studio-2015-ctp-6-combining-typescript-output-into-single-js-file/29445061#29445061", "title": "Visual Studio 2015 CTP 6 - Combining Typescript output into single .js file", "body": "<p>I found a way to do it without using Grunt or Gulp. In the properties of your web application, under the build tab you have to select \"Produce outputs on build\". This seems then allows you to add items to the scripts in the project.json file. I then added</p>\n\n<pre><code>\"prebuild\": \"tsc /typescript/reference/file.ts --out /output.js\"\n</code></pre>\n\n<p>Though by doing this I think the build process will be slower as it is creating the NuGet packages.</p>\n\n<p>I also got it working by unloading the project and editing the .kproj</p>\n\n<pre><code>  &lt;PropertyGroup&gt;\n    &lt;TypeScriptCompileOnSaveEnabled&gt;True&lt;/TypeScriptCompileOnSaveEnabled&gt;\n    &lt;TypeScriptOutFile&gt;output.js&lt;/TypeScriptOutFile&gt;\n  &lt;/PropertyGroup&gt;\n</code></pre>\n\n<p>After adding that it compiling and outputting to one file on save. Though I am sure both of these are not the recommended way to do it, and the latter one might not even work in the future...</p>\n"}], "owner": {"reputation": 1124, "user_id": 3151470, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/1e4993f34e0a9d2006e493c845b75e37?s=128&d=identicon&r=PG&f=1", "display_name": "William", "link": "https://stackoverflow.com/users/3151470/william"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1200, "favorite_count": 0, "accepted_answer_id": 29445061, "answer_count": 2, "score": 2, "last_activity_date": 1428142859, "creation_date": 1427918425, "question_id": 29399707, "link": "https://stackoverflow.com/questions/29399707/visual-studio-2015-ctp-6-combining-typescript-output-into-single-js-file", "title": "Visual Studio 2015 CTP 6 - Combining Typescript output into single .js file", "body": "<p>The TypeScript compiler supports sending all output to a single file using:\ntsc --out filename.js</p>\n\n<p>In Visual Studio 2013 you could send these options to the compiler under Project Properties / TypeScript Build / Output / Combine JavaScript Output into File:.</p>\n\n<p>It doesn't look like the new 'K' project properties has this as an option.  Is it possible to alter the .kproj file to do this?</p>\n\n<p>I would like to avoid using Grunt for this.</p>\n\n<p>Thank you for your help!</p>\n"}, {"tags": ["javascript", "typescript"], "comments": [{"owner": {"reputation": 4134, "user_id": 1736012, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/cdfeab51edd576023dd1c13f1fa02fd7?s=128&d=identicon&r=PG", "display_name": "olefrank", "link": "https://stackoverflow.com/users/1736012/olefrank"}, "edited": false, "score": 0, "creation_date": 1427903152, "post_id": 29394919, "comment_id": 46966702, "body": "Oh the dreaded &quot;this in callbacks&quot; problem.....! I found this description on the setInterval Mozilla docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval\" rel=\"nofollow noreferrer\">developer.mozilla.org/en-US/docs/Web/API/WindowTimers/&hellip;</a>.  I ended up using the arrow syntax (ES6). It did the trick! this.loop = setInterval(() =&gt; this.gameLoop(), this.loopSpeed);"}], "answers": [{"tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": true, "score": 2, "last_activity_date": 1427902316, "creation_date": 1427902316, "answer_id": 29394936, "question_id": 29394919, "link": "https://stackoverflow.com/questions/29394919/object-undefined-when-declared-before-setinterval-function/29394936#29394936", "title": "Object undefined when declared before setInterval function", "body": "<p>Change:</p>\n\n<pre><code>this.loop = setInterval(this.gameLoop, this.loopSpeed);\n</code></pre>\n\n<p>To:</p>\n\n<pre><code>this.loop = setInterval(() =&gt; this.gameLoop(), this.loopSpeed);\n</code></pre>\n\n<p>The value of <code>this</code> was getting lost when you passed in the function directly.</p>\n"}], "owner": {"reputation": 4134, "user_id": 1736012, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/cdfeab51edd576023dd1c13f1fa02fd7?s=128&d=identicon&r=PG", "display_name": "olefrank", "link": "https://stackoverflow.com/users/1736012/olefrank"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "closed_date": 1427902352, "accepted_answer_id": 29394936, "answer_count": 1, "score": 0, "last_activity_date": 1427902472, "creation_date": 1427902247, "last_edit_date": 1427902472, "question_id": 29394919, "link": "https://stackoverflow.com/questions/29394919/object-undefined-when-declared-before-setinterval-function", "closed_reason": "Duplicate", "title": "Object undefined when declared before setInterval function", "body": "<p>I'm new to TypeScript, coming from Java and having some knowledge of JavaScript. I'm learning TS by making a good old Snake game!</p>\n\n<p>I have this class Gui that should draw the canvas. In my contructor I start with creating my Snake object. Later on I start the game loop in which the Snake should be moved... </p>\n\n<p>But the loop function does not work, because of this error. <strong>\"Uncaught Type Error: Cannot read property 'move' of undefined.\"</strong></p>\n\n<p>I suspect it has something to do with the setInterval function that works 'asyncronously' or something but I'm not sure... It seems as a kind of fundamental JavaScript problem.</p>\n\n<p>Any help is highly appreciated!</p>\n\n<pre><code>module gui {\n\n    export class Gui {\n        snake:model.Snake;\n        loop:any;\n\n        constructor() {\n            // get snake\n            this.snake = new model.Snake();\n\n            // Attach key event\n            document.addEventListener(\"keydown\", KeyListener.handleEvt);\n\n            // activate game loop\n            this.loop = setInterval(this.gameLoop, 50);\n        }\n\n        gameLoop() {\n            if (this.snake) {\n                console.log(\"loop\");\n                this.snake.move();\n                this.drawSnake()\n            }\n        }\n\n        drawPart(part:model.Part) { ... }\n\n        drawSnake() { ... }\n\n    }\n\n    class KeyListener {\n\n        static handleEvt(e) {\n            if (e) {\n                switch (e.keyCode) {\n                    case 37:\n                        console.log(\"left\");\n                        break;\n                    case 38:\n                        console.log(\"up\");\n                        break;\n                    case 39:\n                        console.log(\"right\");\n                        break;\n                    case 40:\n                        console.log(\"down\");\n                        break;\n                }\n            }\n        }\n\n    }\n\n}\n</code></pre>\n"}, {"tags": ["arrays", "typescript"], "comments": [{"owner": {"reputation": 5594, "user_id": 1179379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5bf2d2e692a814340e2b10a9f61507f2?s=128&d=identicon&r=PG", "display_name": "cancerbero", "link": "https://stackoverflow.com/users/1179379/cancerbero"}, "edited": false, "score": 0, "creation_date": 1526265890, "post_id": 29382389, "comment_id": 87660740, "body": "Similar question to this one, with no answer, but this time using class inheritance with unknown number of items and all extending the same class: <a href=\"https://stackoverflow.com/questions/50322488/array-of-unknown-size-with-items-of-different-classes-that-extends-the-same-pare\" title=\"array of unknown size with items of different classes that extends the same pare\">stackoverflow.com/questions/50322488/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 53661, "user_id": 1413538, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/594bb80f7ed4b0b3770df7ad97c4d16a?s=128&d=identicon&r=PG", "display_name": "Brocco", "link": "https://stackoverflow.com/users/1413538/brocco"}, "edited": false, "score": 2, "creation_date": 1427897279, "post_id": 29382420, "comment_id": 46962653, "body": "Just a note that this will require TS v1.4+"}, {"owner": {"reputation": 929, "user_id": 7340594, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df6f5437852616534fbc62cbb7eaa4ff?s=128&d=identicon&r=PG", "display_name": "Nadine", "link": "https://stackoverflow.com/users/7340594/nadine"}, "edited": false, "score": 10, "creation_date": 1512062504, "post_id": 29382420, "comment_id": 82115292, "body": "... and it won&#39;t work with complex types with different properties, when you want to access a property available on only one of the types."}, {"owner": {"reputation": 9968, "user_id": 114900, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ZGjf9.jpg?s=128&g=1", "display_name": "msanford", "link": "https://stackoverflow.com/users/114900/msanford"}, "reply_to_user": {"reputation": 929, "user_id": 7340594, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df6f5437852616534fbc62cbb7eaa4ff?s=128&d=identicon&r=PG", "display_name": "Nadine", "link": "https://stackoverflow.com/users/7340594/nadine"}, "edited": false, "score": 1, "creation_date": 1534791996, "post_id": 29382420, "comment_id": 90824084, "body": "@Nadine And in that case, what could one do?"}, {"owner": {"reputation": 929, "user_id": 7340594, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df6f5437852616534fbc62cbb7eaa4ff?s=128&d=identicon&r=PG", "display_name": "Nadine", "link": "https://stackoverflow.com/users/7340594/nadine"}, "edited": false, "score": 5, "creation_date": 1534845048, "post_id": 29382420, "comment_id": 90841313, "body": "Each time when you are clear about which type it is, you can do a type assertion. Then it will work to access the properties."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 423, "last_activity_date": 1526899031, "last_edit_date": 1526899031, "creation_date": 1427859326, "answer_id": 29382420, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/29382420#29382420", "title": "Defining array with multiple types in TypeScript", "body": "<blockquote>\n  <p>Defining array with multiple types in TypeScript</p>\n</blockquote>\n\n<p>Use a union type <code>(string|number)[]</code> demo: </p>\n\n<pre><code>const foo: (string|number)[] = [ 1, \"message\" ];\n</code></pre>\n\n<blockquote>\n  <p>I have an array of the form: [ 1, \"message\" ].</p>\n</blockquote>\n\n<p>If you are sure that there are always only two elements <code>[number, string]</code> then you can declare it as a tuple: </p>\n\n<pre><code>const foo: [number, string] = [ 1, \"message\" ];\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 11, "creation_date": 1427863615, "post_id": 29382871, "comment_id": 46944960, "body": "TIP: I would prefer <code>type NumberStringTuple = [number, string]</code>"}, {"owner": {"reputation": 11846, "user_id": 4339170, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/xdR3z.png?s=128&g=1", "display_name": "CoderPi", "link": "https://stackoverflow.com/users/4339170/coderpi"}, "edited": false, "score": 1, "creation_date": 1449360109, "post_id": 29382871, "comment_id": 55974589, "body": "Thanks! I was totally looking for this: <code>const W3COLORS: [[string, string, number, number]] = [    [&quot;aliceblue&quot;, &quot;#f0f8ff&quot;, 240, 248, 255], ... ];</code>"}, {"owner": {"reputation": 127, "user_id": 3550376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cXIJn.jpg?s=128&g=1", "display_name": "Druvis Cukurs", "link": "https://stackoverflow.com/users/3550376/druvis-cukurs"}, "edited": false, "score": 1, "creation_date": 1492427016, "post_id": 29382871, "comment_id": 73955896, "body": "Note - both types MUST be in the array (doesn&#39;t work for an empty array as well). Accepted answer is more versatile and which I personally always use, but it depends on the needs."}], "tags": [], "owner": {"reputation": 1852, "user_id": 3658508, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TAcRG.png?s=128&g=1", "display_name": "curpa", "link": "https://stackoverflow.com/users/3658508/curpa"}, "is_accepted": false, "score": 86, "last_activity_date": 1518694149, "last_edit_date": 1518694149, "creation_date": 1427862510, "answer_id": 29382871, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/29382871#29382871", "title": "Defining array with multiple types in TypeScript", "body": "<p>If you're treating it as a tuple (see section 3.3.3 of the <a href=\"https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#3.3.3\" rel=\"noreferrer\">language spec</a>), then:</p>\n\n<pre><code>var t:[number, string] = [1, \"message\"]\n</code></pre>\n\n<p>or</p>\n\n<pre><code>interface NumberStringTuple extends Array&lt;string|number&gt;{0:number; 1:string}\nvar t:NumberStringTuple = [1, \"message\"];\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1554678504, "post_id": 49402169, "comment_id": 97828588, "body": "This is great, but say if we&#39;re looping over the array now, how do we figure out which type the current array is?"}, {"owner": {"reputation": 3629, "user_id": 1744107, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/91748b7203b0ef849403e8099da4528f?s=128&d=identicon&r=PG", "display_name": "Rambatino", "link": "https://stackoverflow.com/users/1744107/rambatino"}, "reply_to_user": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 2, "creation_date": 1581671217, "post_id": 49402169, "comment_id": 106522215, "body": "@thouliha <a href=\"https://stackoverflow.com/questions/50774790/switch-for-specific-type-in-typescript\" title=\"switch for specific type in typescript\">stackoverflow.com/questions/50774790/&hellip;</a>"}], "tags": [], "owner": {"reputation": 533, "user_id": 919331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43a883e56521174b064cc405be976eca?s=128&d=identicon&r=PG", "display_name": "Szamanm", "link": "https://stackoverflow.com/users/919331/szamanm"}, "is_accepted": false, "score": 36, "last_activity_date": 1521623504, "creation_date": 1521623504, "answer_id": 49402169, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/49402169#49402169", "title": "Defining array with multiple types in TypeScript", "body": "<p>My TS lint was complaining about other solutions, so the solution that was working for me was:</p>\n\n<pre><code>item: Array&lt;Type1 | Type2&gt;\n</code></pre>\n\n<p>if there's only one type, it's fine to use:</p>\n\n<pre><code>item: Type1[]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 185, "user_id": 9530936, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e5c6a63e687688644f2561e6c2a8a37e?s=128&d=identicon&r=PG&f=1", "display_name": "DerKarim", "link": "https://stackoverflow.com/users/9530936/derkarim"}, "is_accepted": false, "score": 5, "last_activity_date": 1553246264, "creation_date": 1553246264, "answer_id": 55296342, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/55296342#55296342", "title": "Defining array with multiple types in TypeScript", "body": "<p>Im using this version:</p>\n\n<pre><code>exampleArr: Array&lt;{ id: number, msg: string}&gt; = [\n   { id: 1, msg: 'message'},\n   { id: 2, msg: 'message2'}\n ]\n</code></pre>\n\n<p>It is a little bit similar to the other suggestions but still easy and quite good to remember.</p>\n"}, {"tags": [], "owner": {"reputation": 445, "user_id": 1959107, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8db6231cd2931fc0b551fc16a2ffe9a2?s=128&d=identicon&r=PG", "display_name": "j4ys0n", "link": "https://stackoverflow.com/users/1959107/j4ys0n"}, "is_accepted": false, "score": 16, "last_activity_date": 1555445401, "creation_date": 1555445401, "answer_id": 55715912, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/55715912#55715912", "title": "Defining array with multiple types in TypeScript", "body": "<p>I've settled on the following format for typing arrays that can have items of multiple types.</p>\n\n<p><code>Array&lt;ItemType1 | ItemType2 | ItemType3&gt;</code></p>\n\n<p>This works well with testing and type guards. <a href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\" rel=\"noreferrer\">https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types</a></p>\n\n<p>This format doesn't work well with testing or type guards:</p>\n\n<p><code>(ItemType1 | ItemType2 | ItemType3)[]</code></p>\n"}, {"tags": [], "owner": {"reputation": 96, "user_id": 11556625, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-aLGq3AE6yok/AAAAAAAAAAI/AAAAAAAAVq8/wmMPEVeJ0aA/photo.jpg?sz=128", "display_name": "CaliTab", "link": "https://stackoverflow.com/users/11556625/calitab"}, "is_accepted": false, "score": 0, "last_activity_date": 1597256919, "creation_date": 1597256919, "answer_id": 63382705, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/63382705#63382705", "title": "Defining array with multiple types in TypeScript", "body": "<p>If you are interested in getting an array of either numbers or strings, you could define a type that will take an array of either</p>\n<pre><code>type Tuple = Array&lt;number | string&gt;\nconst example: Tuple = [1, &quot;message&quot;]\nconst example2: Tuple = [&quot;message&quot;, 1]\n</code></pre>\n<p>If you expect an array of a specific order (i.e. number and a string)</p>\n<pre><code>type Tuple = [number, string]\nconst example: Tuple = [1, &quot;message&quot;]\nconst example2: Tuple = [&quot;messsage&quot;, 1] // Type 'string' is not assignable to type 'number'.\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1414, "user_id": 340142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/873b9af973d3001201c4ffdf79341624?s=128&d=identicon&r=PG", "display_name": "Marecky", "link": "https://stackoverflow.com/users/340142/marecky"}, "edited": false, "score": 0, "creation_date": 1615559815, "post_id": 63884272, "comment_id": 117735953, "body": "What is it for? The names on tuple elements?"}, {"owner": {"reputation": 1216, "user_id": 1998097, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HxHNf.jpg?s=128&g=1", "display_name": "Oleg Zarevennyi", "link": "https://stackoverflow.com/users/1998097/oleg-zarevennyi"}, "reply_to_user": {"reputation": 1414, "user_id": 340142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/873b9af973d3001201c4ffdf79341624?s=128&d=identicon&r=PG", "display_name": "Marecky", "link": "https://stackoverflow.com/users/340142/marecky"}, "edited": false, "score": 1, "creation_date": 1615803896, "post_id": 63884272, "comment_id": 117795165, "body": "@Marecky it was added for ease of use, e.g. hint from TypeScript compiler: <code>(property) 0: number (id)</code> instead of unified <code>(property) 0: number</code>. So, there will be more details in the error message too, if any."}], "tags": [], "owner": {"reputation": 1216, "user_id": 1998097, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HxHNf.jpg?s=128&g=1", "display_name": "Oleg Zarevennyi", "link": "https://stackoverflow.com/users/1998097/oleg-zarevennyi"}, "is_accepted": false, "score": 6, "last_activity_date": 1600086216, "creation_date": 1600086216, "answer_id": 63884272, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/63884272#63884272", "title": "Defining array with multiple types in TypeScript", "body": "<p><strong>TypeScript 3.9+ update (May 12, 2020)</strong></p>\n<p>Now, TypeScript also supports <em><strong>named tuples</strong></em>. This greatly increases the <em>understandability</em> and <em>maintainability</em> of the code. <a href=\"https://www.typescriptlang.org/play?ts=4.0.2#example/named-tuples\" rel=\"noreferrer\">Check the official TS playground.</a></p>\n<hr />\n<p>So, now instead of unnamed:</p>\n<pre><code>const a: [number, string] = [ 1, &quot;message&quot; ];\n</code></pre>\n<p><strong>We can add names:</strong></p>\n<pre><code>const b: [id: number, message: string] = [ 1, &quot;message&quot; ];\n</code></pre>\n<hr />\n<p><strong>Note</strong>: you need to add all names at once, you can not omit some names, e.g:</p>\n<pre><code>type tIncorrect = [id: number, string]; // INCORRECT, 2nd element has no name, compile-time error.\ntype tCorrect = [id: number, msg: string]; // CORRECT, all have a names.\n</code></pre>\n<p><strong>Tip</strong>: if you are not sure in the count of the last elements, you can write it like this:</p>\n<pre><code>type t = [msg: string, ...indexes: number];// means first element is a message and there are unknown number of indexes.\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 630, "user_id": 10303580, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-efAJNvIa6Nk/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaOjG3wkWD0oPQz4fb60YEbxiQDkTw/mo/photo.jpg?sz=128", "display_name": "Dm Mh", "link": "https://stackoverflow.com/users/10303580/dm-mh"}, "is_accepted": false, "score": 0, "last_activity_date": 1606743356, "creation_date": 1606743356, "answer_id": 65074611, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/65074611#65074611", "title": "Defining array with multiple types in TypeScript", "body": "<p>You can either use a regular tuple</p>\n<pre><code>interface IReqularDemo: [number, string];\n</code></pre>\n<p>or if optional parameters support is needed</p>\n<pre><code>interface IOptionalDemo: [value1: number, value2?: string]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 6715966, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YFDaq.png?s=128&g=1", "display_name": "Jerehme Gayle", "link": "https://stackoverflow.com/users/6715966/jerehme-gayle"}, "is_accepted": false, "score": 0, "last_activity_date": 1615694028, "last_edit_date": 1615694028, "creation_date": 1615693677, "answer_id": 66620906, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript/66620906#66620906", "title": "Defining array with multiple types in TypeScript", "body": "<p>If dealing with an array with multiple value types in an object this worked for me.</p>\n<pre><code> { [key: string]: number | string }[]\n</code></pre>\n"}], "owner": {"reputation": 15014, "user_id": 1709725, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/21b4e5678d9383c432b4868772a1b34c?s=128&d=identicon&r=PG", "display_name": "dk123", "link": "https://stackoverflow.com/users/1709725/dk123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122559, "favorite_count": 22, "accepted_answer_id": 29382420, "answer_count": 9, "score": 248, "last_activity_date": 1615694028, "creation_date": 1427859132, "last_edit_date": 1603484109, "question_id": 29382389, "link": "https://stackoverflow.com/questions/29382389/defining-array-with-multiple-types-in-typescript", "title": "Defining array with multiple types in TypeScript", "body": "<p>I have an array of the form: <code>[ 1, \"message\" ]</code>.</p>\n\n<p>How would I define this in TypeScript?</p>\n"}, {"tags": ["git", "visual-studio-2012", "typescript"], "comments": [{"owner": {"reputation": 3894, "user_id": 4342563, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/xgGSM.png?s=128&g=1", "display_name": "Eric Lease", "link": "https://stackoverflow.com/users/4342563/eric-lease"}, "edited": false, "score": 0, "creation_date": 1454352192, "post_id": 29380302, "comment_id": 57995884, "body": "An alternative would be to nest files...which doesn&#39;t exist as functionality yet.  You could probably <a href=\"https://code.visualstudio.com/docs/extensions/overview\" rel=\"nofollow noreferrer\">create a VSC extension</a> to do this, or just <a href=\"http://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/8239908-add-ability-to-nest-files-under-a-parent-file\" rel=\"nofollow noreferrer\">vote and wait</a>."}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 6, "last_activity_date": 1427845538, "creation_date": 1427845538, "answer_id": 29380455, "question_id": 29380302, "link": "https://stackoverflow.com/questions/29380302/how-to-prevent-editing-of-generated-javascript-files-in-a-typescript-project/29380455#29380455", "title": "How to prevent editing of generated Javascript files in a TypeScript project?", "body": "<blockquote>\n  <p>So I suppose there might be an option to prevent editing the .js files in git?</p>\n</blockquote>\n\n<p>We have the .js files <em>excluded</em> from the repo using <code>.gitignore</code>. These js files are built again as a part of build / deploy. </p>\n\n<p>This is similar to the manner you wouldn't include <code>*.exe</code> / <code>*.dll</code> files in your git repo.</p>\n"}, {"tags": [], "owner": {"reputation": 1406, "user_id": 3206987, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0Szui.png?s=128&g=1", "display_name": "ablais", "link": "https://stackoverflow.com/users/3206987/ablais"}, "is_accepted": false, "score": 0, "last_activity_date": 1427925015, "creation_date": 1427925015, "answer_id": 29401467, "question_id": 29380302, "link": "https://stackoverflow.com/questions/29380302/how-to-prevent-editing-of-generated-javascript-files-in-a-typescript-project/29401467#29401467", "title": "How to prevent editing of generated Javascript files in a TypeScript project?", "body": "<p>I'm not sure there's a way to \"block\" editing directly the JS files, since they are in your project.</p>\n\n<p>You could use Gulp, for example, to watch all your files and generate the JS file from its TS file if there's been a modification on a JS file. </p>\n\n<p>It's not perfect, but it would prevent a developper from typing stuff in the JS file.</p>\n\n<p><a href=\"https://www.npmjs.com/package/gulp-watch\" rel=\"nofollow\">https://www.npmjs.com/package/gulp-watch</a></p>\n"}, {"comments": [{"owner": {"reputation": 3894, "user_id": 4342563, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/xgGSM.png?s=128&g=1", "display_name": "Eric Lease", "link": "https://stackoverflow.com/users/4342563/eric-lease"}, "edited": false, "score": 1, "creation_date": 1454352784, "post_id": 32148385, "comment_id": 57996202, "body": "This seems like it&#39;s the most efficient workaround for this clutter until nesting is implemented, either as an extension or in the base.  While <code>.gitignore</code> is great for interacting with git, that won&#39;t prevent you from accidentally modifying a <code>.js</code> file and corrupting your dev env, even if just locally/temporarily.  True, you just have to open and save the <code>.ts</code> again, but it&#39;s very easy to do this inadvertently.  While this approach is not 100% foolproof, it works well for me."}, {"owner": {"reputation": 55, "user_id": 1242811, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/b1wLa.png?s=128&g=1", "display_name": "DavidActualX", "link": "https://stackoverflow.com/users/1242811/davidactualx"}, "reply_to_user": {"reputation": 3894, "user_id": 4342563, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/xgGSM.png?s=128&g=1", "display_name": "Eric Lease", "link": "https://stackoverflow.com/users/4342563/eric-lease"}, "edited": false, "score": 0, "creation_date": 1454419252, "post_id": 32148385, "comment_id": 58027514, "body": "@EricLease thanks for the reminder about *.js.map.  I had that in my project, but forgot to come back here and add it to the answer. +1 to you Sir :)"}], "tags": [], "owner": {"reputation": 55, "user_id": 1242811, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/b1wLa.png?s=128&g=1", "display_name": "DavidActualX", "link": "https://stackoverflow.com/users/1242811/davidactualx"}, "is_accepted": false, "score": 1, "last_activity_date": 1454419175, "last_edit_date": 1454419175, "creation_date": 1440187097, "answer_id": 32148385, "question_id": 29380302, "link": "https://stackoverflow.com/questions/29380302/how-to-prevent-editing-of-generated-javascript-files-in-a-typescript-project/32148385#32148385", "title": "How to prevent editing of generated Javascript files in a TypeScript project?", "body": "<p>I recently started using Visual Studio code.  In the user settings you can hide the js files entirely.</p>\n\n<p>Select:</p>\n\n<p>File | Preferences | User Settings</p>\n\n<p>add the following to the right side editor (you can't modify the default settings).</p>\n\n<pre><code>\"files.exclude\": {\n    \"**/.git\": true,\n    \"**/.DS_Store\": true,\n    \"**/*.js\": true,\n    \"**/*.js.map\":true\n}\n</code></pre>\n\n<p>I am not sure if you need the first two lines, but they were in the default settings that I just copied over.  Obviously, When you want to see JavaScript files again just switch that true to false.</p>\n"}], "owner": {"reputation": 3615, "user_id": 583638, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/275032b539c11d315adf3661d0460b24?s=128&d=identicon&r=PG", "display_name": "Chris Swain", "link": "https://stackoverflow.com/users/583638/chris-swain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 522, "favorite_count": 1, "answer_count": 3, "score": 2, "last_activity_date": 1454419175, "creation_date": 1427844666, "question_id": 29380302, "link": "https://stackoverflow.com/questions/29380302/how-to-prevent-editing-of-generated-javascript-files-in-a-typescript-project", "title": "How to prevent editing of generated Javascript files in a TypeScript project?", "body": "<p>Is it possible in a Visual Studio 2012 project to enforce a rule that prevents developers from trying to directly edit (by accident/old habit) the JavaScript files generated by the TypeScript files?  </p>\n\n<p>I have a project with a lot of TypeScript files that have in turn generated a lot of JavaScript files that have to be included in the project.  However, I find myself selecting the JavaScript files out of habit rather than selecting the Typescript version of file to do my editing.  I'd like to prevent this.  Because these TypeScript/JavaScript files are linked in from elsewhere, I can't seem to nest them.  </p>\n\n<p>The project is a Windows Store app with WinJS.  It has three different Windows Store projects in it and a set of shared solution folders that include the bulk of the TypeScript/JavaScript files which are linked into the projects using the syntax below in the project files:</p>\n\n<pre><code>&lt;Content Include=\"..\\Shared\\**\\*.*\"&gt;\n  &lt;Link&gt;%(RecursiveDir)%(FileName)%(Extension)&lt;/Link&gt;\n  &lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;\n&lt;/Content&gt;\n</code></pre>\n\n<p>This allows me to include all files in the Shared directory and sub-directories as automatically linked files.  It's really handy for sharing linked files, but mean I can nest individual files because the recursive file linking would get broken.  </p>\n\n<p>My source control is git.  So I suppose there might be an option to prevent editing the .js files in git?  Looking for suggestions.  </p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 12444, "user_id": 2391795, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/MG7Lq.png?s=128&g=1", "display_name": "Vadorequest", "link": "https://stackoverflow.com/users/2391795/vadorequest"}, "edited": false, "score": 0, "creation_date": 1427843416, "post_id": 29379702, "comment_id": 46940027, "body": "It is possible in JS to have a lot of code encapsulated in a function which isn&#39;t usable on the browser global scope, and only export what I want. Isn&#39;t possible in TS?"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 12444, "user_id": 2391795, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/MG7Lq.png?s=128&g=1", "display_name": "Vadorequest", "link": "https://stackoverflow.com/users/2391795/vadorequest"}, "edited": false, "score": 0, "creation_date": 1427844580, "post_id": 29379702, "comment_id": 46940358, "body": "Yes. TS is just JS with added compile time type checks"}, {"owner": {"reputation": 12444, "user_id": 2391795, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/MG7Lq.png?s=128&g=1", "display_name": "Vadorequest", "link": "https://stackoverflow.com/users/2391795/vadorequest"}, "edited": false, "score": 0, "creation_date": 1427883524, "post_id": 29379702, "comment_id": 46954110, "body": "So, the only solution would be to wrap the whole code into a scope while I conct it into a single file? I don&#39;t see any other solution for the moment. If I want to encapsulate the whole logic but using my classes from each other I will need to put all of them into a private scope so it&#39;s not globally accessible from the browser, then I&#39;ll need to manage what I expose globally."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 1, "last_activity_date": 1427841012, "creation_date": 1427841012, "answer_id": 29379702, "question_id": 29379578, "link": "https://stackoverflow.com/questions/29379578/typescript-encapsulating-module-classes-so-its-not-accessible-from-the-browse/29379702#29379702", "title": "Typescript - Encapsulating module/classes so it&#39;s not accessible from the browser", "body": "<blockquote>\n  <p>but wouldn't be usable from the browser</p>\n</blockquote>\n\n<p>If you want something to transcend file boundaries you will need to <code>export</code> it from the file. </p>\n\n<p>However if you keep it all on a single file then you don't need to use <code>export</code>. </p>\n\n<pre><code>module myModule.Api{\n    var notExported = 0;\n    export function exported(){\n        return notExported + 1;\n    }\n}\n</code></pre>\n\n<p>I would like to point out that <em>when using external modules</em> each file is its own module and not exported to the browser i.e. <code>window</code> : <a href=\"https://www.youtube.com/watch?v=KDrWLMUY0R0\" rel=\"nofollow\">https://www.youtube.com/watch?v=KDrWLMUY0R0</a></p>\n"}], "owner": {"reputation": 12444, "user_id": 2391795, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/MG7Lq.png?s=128&g=1", "display_name": "Vadorequest", "link": "https://stackoverflow.com/users/2391795/vadorequest"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 461, "favorite_count": 0, "accepted_answer_id": 29379702, "answer_count": 1, "score": 0, "last_activity_date": 1427843257, "creation_date": 1427840339, "last_edit_date": 1427843257, "question_id": 29379578, "link": "https://stackoverflow.com/questions/29379578/typescript-encapsulating-module-classes-so-its-not-accessible-from-the-browse", "title": "Typescript - Encapsulating module/classes so it&#39;s not accessible from the browser", "body": "<p>I'm looking for a way to write my TypeScript classes in a way that I could provide only what I want to provide to the browser (global scope), basically something like this:</p>\n\n<p><code>myModule.Api</code></p>\n\n<p>Where <code>Api</code> would contain some <code>public</code> functions that could be executed from the browser, but relaying on other functions that would be written is other classes within the same module or sub-modules.</p>\n\n<p>I need that these classes could use each other, but wouldn't be usable from the browser global scope, only through the <code>Api</code>.</p>\n\n<p>What's the way to go with that? I couldn't figure out how to reuse classes from other classes without exposing them to the browser directly using <code>export</code> keyword.</p>\n"}, {"tags": ["node.js", "typescript", "webstorm"], "comments": [{"owner": {"reputation": 574461, "user_id": 816620, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/Xu7hp.jpg?s=128&g=1", "display_name": "jfriend00", "link": "https://stackoverflow.com/users/816620/jfriend00"}, "edited": false, "score": 0, "creation_date": 1427835650, "post_id": 29378128, "comment_id": 46937058, "body": "Relevant similar question and answer: <a href=\"http://stackoverflow.com/questions/12930049/how-do-i-import-other-typescript-files\" title=\"how do i import other typescript files\">stackoverflow.com/questions/12930049/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 22134, "user_id": 457172, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/5d299e5e519f4b916dd606dec782955a?s=128&d=identicon&r=PG", "display_name": "Martin", "link": "https://stackoverflow.com/users/457172/martin"}, "edited": false, "score": 0, "creation_date": 1427910485, "post_id": 29378941, "comment_id": 46970906, "body": "Great, and nice videos. Thanks."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1427837415, "creation_date": 1427837415, "answer_id": 29378941, "question_id": 29378128, "link": "https://stackoverflow.com/questions/29378128/typescript-nodejs-variable-not-defined-using-internal-ref-paths-for-separate/29378941#29378941", "title": "TypeScript / NodeJS: variable not defined, using internal ref paths for separate files", "body": "<p>You don't have to use modules. You can compile with --out flag</p>\n\n<p>But external modules with commonjs is highly recommended if targeting nodejs : <a href=\"http://m.youtube.com/watch?v=KDrWLMUY0R0\" rel=\"nofollow\">http://m.youtube.com/watch?v=KDrWLMUY0R0</a></p>\n"}], "owner": {"reputation": 22134, "user_id": 457172, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/5d299e5e519f4b916dd606dec782955a?s=128&d=identicon&r=PG", "display_name": "Martin", "link": "https://stackoverflow.com/users/457172/martin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 325, "favorite_count": 0, "accepted_answer_id": 29378941, "answer_count": 1, "score": 0, "last_activity_date": 1549184610, "creation_date": 1427834359, "last_edit_date": 1549184610, "question_id": 29378128, "link": "https://stackoverflow.com/questions/29378128/typescript-nodejs-variable-not-defined-using-internal-ref-paths-for-separate", "title": "TypeScript / NodeJS: variable not defined, using internal ref paths for separate files", "body": "<p>I have been testing TypeScript with node, all was going well until i tried splitting these out.</p>\n\n<p>Am I forced to use modules ?</p>\n\n<p>I have 2 files, app.ts which has a reference path to the hellofile.tst</p>\n\n<pre><code>/// &lt;reference path=\"hellofile.ts\" /&gt;\nvar testme = new Hello()\nconsole.log(testme.testMe());\n</code></pre>\n\n<p>and the hellofile.ts which contains</p>\n\n<pre><code>class Hello {\n    testMe():string {\n        return \"hello\";\n    }\n}\n</code></pre>\n\n<p>Now running the program (i am using webstorm), I get the following error.</p>\n\n<pre><code>/usr/local/bin/node app.js\n\n/\n\nUsers/tst/WebstormProjects/NodeJsWithTypescript/app.js:2\nvar testme = new Hello();\n                 ^\nReferenceError: Hello is not defined\n    at Object.&lt;anonymous&gt; (/Users/tst/WebstormProjects/NodeJsWithTypescript/app.js:2:18)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:906:3\n\nProcess finished with exit code 8\n</code></pre>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 923, "user_id": 1985659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/31c65c2d686336f1cc7d123b86284d38?s=128&d=identicon&r=PG", "display_name": "mgutz", "link": "https://stackoverflow.com/users/1985659/mgutz"}, "edited": false, "score": 0, "creation_date": 1427865675, "post_id": 29379583, "comment_id": 46945501, "body": "That clears it up. Typescript needs a <code>becomes</code> keyword which means a it will implement some interface in the future. In my case, <code>class GameActions becomes ActionCreator</code>"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 923, "user_id": 1985659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/31c65c2d686336f1cc7d123b86284d38?s=128&d=identicon&r=PG", "display_name": "mgutz", "link": "https://stackoverflow.com/users/1985659/mgutz"}, "edited": false, "score": 0, "creation_date": 1427868303, "post_id": 29379583, "comment_id": 46946337, "body": "Mixins are on the roadmap for 2.0 : <a href=\"https://github.com/Microsoft/TypeScript/wiki/Roadmap#20\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/wiki/Roadmap#20</a> Also you can start a discussion here : <a href=\"https://github.com/Microsoft/TypeScript/issues\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/issues</a> It would be great if you can come up with a proposal."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1428042700, "last_edit_date": 1428042700, "creation_date": 1427840409, "answer_id": 29379583, "question_id": 29375766, "link": "https://stackoverflow.com/questions/29375766/how-to-declare-methods-added-to-the-prototype-chain/29379583#29379583", "title": "How to declare methods added to the prototype chain?", "body": "<blockquote>\n  <p>alt.createActions(GameActions)</p>\n</blockquote>\n\n<p>This is effectively a <code>mixin</code>. There isn't a good story about mixins in TypeScript at the moment. There is documentation of how to type it : <a href=\"https://github.com/Microsoft/TypeScript/wiki/Mixins\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/wiki/Mixins</a> </p>\n\n<p>You basically <em>declare</em> that these members exist but don't <em>define</em> them, i.e.: </p>\n\n<pre><code>class GameActions {\n  bootstrap() {\n    return fetchGames().then((data: any) =&gt; {\n      this.dispatch(data)\n    })\n  }\n\n  // Dispatchable:\n  dispatch: Function;\n}\n\nmodule.exports = alt.createActions(GameActions)\n</code></pre>\n\n<p>Mixins are on the roadmap for 2.0 : <a href=\"http://github.com/Microsoft/TypeScript/wiki/Roadmap#20\" rel=\"nofollow\">http://github.com/Microsoft/TypeScript/wiki/Roadmap#20</a> Also you can start a discussion here : <a href=\"http://github.com/Microsoft/TypeScript/issues\" rel=\"nofollow\">http://github.com/Microsoft/TypeScript/issues</a> It would be great if you can come up with a proposal</p>\n"}], "owner": {"reputation": 923, "user_id": 1985659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/31c65c2d686336f1cc7d123b86284d38?s=128&d=identicon&r=PG", "display_name": "mgutz", "link": "https://stackoverflow.com/users/1985659/mgutz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 29379583, "answer_count": 1, "score": 1, "last_activity_date": 1428042700, "creation_date": 1427826269, "last_edit_date": 1427826900, "question_id": 29375766, "link": "https://stackoverflow.com/questions/29375766/how-to-declare-methods-added-to-the-prototype-chain", "title": "How to declare methods added to the prototype chain?", "body": "<p>Given this</p>\n\n<pre><code>class GameActions {\n  bootstrap() {\n    return fetchGames().then((data: any) =&gt; {\n      // error\n      this.dispatch(data)\n    })\n  }\n}\n\nmodule.exports = alt.createActions(GameActions)\n</code></pre>\n\n<p>How do I inform typescript that <code>dispatch</code> is found in the prototype chain? <code>alt.createActions</code> adds <code>dispatch</code> through prototypical inheritance. Moreover, <code>alt</code> is an external flux library from npm.</p>\n"}, {"tags": ["visual-studio-2012", "typescript"], "comments": [{"owner": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "edited": false, "score": 0, "creation_date": 1427825917, "post_id": 29373243, "comment_id": 46931731, "body": "Not really answering your question but you might want to look at the (free) community edition for VS 2013! Because if I remember it correctly 1.0 was the last one for 2012"}, {"owner": {"reputation": 3615, "user_id": 583638, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/275032b539c11d315adf3661d0460b24?s=128&d=identicon&r=PG", "display_name": "Chris Swain", "link": "https://stackoverflow.com/users/583638/chris-swain"}, "reply_to_user": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "edited": false, "score": 0, "creation_date": 1427826492, "post_id": 29373243, "comment_id": 46932099, "body": "Yeah, I&#39;m doing Xbox One media app development and am forced to stick with VS 2012."}], "answers": [{"tags": [], "owner": {"reputation": 3615, "user_id": 583638, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/275032b539c11d315adf3661d0460b24?s=128&d=identicon&r=PG", "display_name": "Chris Swain", "link": "https://stackoverflow.com/users/583638/chris-swain"}, "is_accepted": false, "score": 0, "last_activity_date": 1427826695, "creation_date": 1427826695, "answer_id": 29375895, "question_id": 29373243, "link": "https://stackoverflow.com/questions/29373243/is-it-possible-to-use-a-higher-version-of-typescript-than-1-0-1-in-visual-studio/29375895#29375895", "title": "Is it possible to use a higher version of TypeScript than 1.0.1 in Visual Studio 2012?", "body": "<p>So I asked this question on the TypeScript github page and got the following answer:</p>\n\n<p><a href=\"https://github.com/Microsoft/TypeScript/issues/2564\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/2564</a></p>\n\n<p>Basically, it looks like 2012 only supports up to version 1.0.1.  However, as a work-around, it may be possible for me to isolate my .ts files in an external Visual Studio 2013 or 2015 project and use that project to generate the .js files used by my Visual Studio 2012 project.  It's a bit of a hack, but it's currently the only solution unless someone wants to create an new TypeScript plugin for VS 2012.  </p>\n"}, {"tags": [], "owner": {"reputation": 4066, "user_id": 567091, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/db9fadaca93c6c592ed619248daf9b89?s=128&d=identicon&r=PG", "display_name": "NYCdotNet", "link": "https://stackoverflow.com/users/567091/nycdotnet"}, "is_accepted": true, "score": 0, "last_activity_date": 1427830685, "creation_date": 1427830685, "answer_id": 29377079, "question_id": 29373243, "link": "https://stackoverflow.com/questions/29373243/is-it-possible-to-use-a-higher-version-of-typescript-than-1-0-1-in-visual-studio/29377079#29377079", "title": "Is it possible to use a higher version of TypeScript than 1.0.1 in Visual Studio 2012?", "body": "<p>It's not perfect, but for what it's worth you can swap out the compiler and language service by following these instructions posted by Daniel Rosenwasser.</p>\n\n<p><a href=\"https://github.com/Microsoft/TypeScript/issues/1110#issuecomment-62451204\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/1110#issuecomment-62451204</a></p>\n\n<p><strong>Abbreviated:</strong>\nBackup and replace the <code>tsc.js</code> files under here:\n<code>C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\</code> with one you want to use.  </p>\n\n<p>Backup and replace the <code>typescriptServices.js</code> under <code>C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TypeScript</code> with the one you want to use.</p>\n\n<p>VS 2012 may be able to take TypeScript 1.1 fairly safely because it's largely compatible with 1.0, but 1.3 or 1.4 perhaps not - I haven't tried it.</p>\n\n<p>You can get the download from the GitHub TypeScript releases page and the compiled <code>.js</code> files are in the <code>bin</code> folder so you don't even have to run Jake if you download a full release.</p>\n"}], "owner": {"reputation": 3615, "user_id": 583638, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/275032b539c11d315adf3661d0460b24?s=128&d=identicon&r=PG", "display_name": "Chris Swain", "link": "https://stackoverflow.com/users/583638/chris-swain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 29377079, "answer_count": 2, "score": 0, "last_activity_date": 1427830685, "creation_date": 1427817988, "question_id": 29373243, "link": "https://stackoverflow.com/questions/29373243/is-it-possible-to-use-a-higher-version-of-typescript-than-1-0-1-in-visual-studio", "title": "Is it possible to use a higher version of TypeScript than 1.0.1 in Visual Studio 2012?", "body": "<p>I'd like to take advantage of some of the faster compilation and other newer features of TypeScript than what we get with the 1.0.1 version that seems to be the only one that comes with the TypeScript 1.0.1 Tools for Visual Studio 2012 plugin.  Is this possible?</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 12444, "user_id": 2391795, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/MG7Lq.png?s=128&g=1", "display_name": "Vadorequest", "link": "https://stackoverflow.com/users/2391795/vadorequest"}, "edited": false, "score": 0, "creation_date": 1427809951, "post_id": 29370116, "comment_id": 46921515, "body": "It was so easy, I knew it had to be possible, just forgot how to do it! Thanks."}], "tags": [], "owner": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "is_accepted": true, "score": 2, "last_activity_date": 1427809586, "creation_date": 1427809586, "answer_id": 29370116, "question_id": 29369482, "link": "https://stackoverflow.com/questions/29369482/typescript-access-to-private-static-fields-within-same-class/29370116#29370116", "title": "Typescript access to private static fields within same class", "body": "<p>In this case you can just type the class name like below (so the same as you have now but without the module name (Test)</p>\n\n<pre><code>Handlebars.templates[Template.basePath + Template.templatesFolder + '/' + templateName + Template.ext];\n</code></pre>\n\n<p>You can't access the <code>public static template</code> function now from outside the module because it is in the class which isn't exported. </p>\n\n<p>If you move that function out of the class in the module and instead of <code>public static</code> make it <code>export function</code> you can call it outside the module and it should work correctly.</p>\n"}], "owner": {"reputation": 12444, "user_id": 2391795, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/MG7Lq.png?s=128&g=1", "display_name": "Vadorequest", "link": "https://stackoverflow.com/users/2391795/vadorequest"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1289, "favorite_count": 0, "accepted_answer_id": 29370116, "answer_count": 1, "score": 2, "last_activity_date": 1427809586, "creation_date": 1427807367, "question_id": 29369482, "link": "https://stackoverflow.com/questions/29369482/typescript-access-to-private-static-fields-within-same-class", "title": "Typescript access to private static fields within same class", "body": "<p>I'm wondering what's the way to access a private static field within the same class assuming that class isn't <em>exported</em>.</p>\n\n<pre><code>module Test {\n    class Template {\n        private static ext = '.hbs';\n        private static basePath = 'WebContent/templates/';\n        private static templatesFolder = 'templates';\n        private static partialsFolder = 'partials';\n        private static paymentMethodsFolder = 'paymentMethods';\n\n        public static template(templateName, data): string{\n            return Handlebars.templates[Test.Template.basePath + this.templatesFolder + '/' + templateName + this.ext];\n        }\n    }\n}\n</code></pre>\n\n<p>I don't know how to access to the static variables within the <code>static template</code> function. I don't want to export the class, because I want to encapsulate the logic so it's not usable from the browser.</p>\n\n<p>What's the way to go here? I started with <code>this</code> because it wasn't static at first, but I changed my mind and I'm stuck now.</p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "edited": false, "score": 1, "creation_date": 1427815758, "post_id": 29368152, "comment_id": 46925556, "body": "You want to call <code>new T()</code> and get something other than a <code>T</code>? I think you&#39;re missing the point of Typescript."}, {"owner": {"reputation": 138660, "user_id": 298661, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/3445f56229632874a44596385ed6d40c?s=128&d=identicon&r=PG", "display_name": "Puppy", "link": "https://stackoverflow.com/users/298661/puppy"}, "reply_to_user": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "edited": false, "score": 0, "creation_date": 1427826557, "post_id": 29368152, "comment_id": 46932149, "body": "@JLRishe: T&#39;s sole purpose is to be converted into a more useful representation, and having <code>new T()</code> automatically convert it (since I only require a very narrow subset of T&#39;s original semantics) is just more intuitive."}, {"owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "edited": false, "score": 1, "creation_date": 1427826725, "post_id": 29368152, "comment_id": 46932253, "body": "Ok, but why do you need to use <code>new</code> in that case? Can&#39;t you just use a factory method? Having <code>new T()</code> return something that is not a <code>T</code> just runs counter to the whole idea of static typing that TypeScript is trying so hard to preserve."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "edited": false, "score": 0, "creation_date": 1427827784, "post_id": 29368152, "comment_id": 46932880, "body": "@JLRishe factory methods would be more readable too... no surprises to someone who hasn&#39;t seen the inner workings of the class."}, {"owner": {"reputation": 138660, "user_id": 298661, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/3445f56229632874a44596385ed6d40c?s=128&d=identicon&r=PG", "display_name": "Puppy", "link": "https://stackoverflow.com/users/298661/puppy"}, "reply_to_user": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "edited": false, "score": 0, "creation_date": 1427884790, "post_id": 29368152, "comment_id": 46954745, "body": "@JLRishe: Creating a <code>T</code> is what&#39;s going on semantically, it&#39;s just that there&#39;s a bunch of gunk going on in the middle about instance reuse and crap like that."}, {"owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "edited": false, "score": 0, "creation_date": 1427885064, "post_id": 29368152, "comment_id": 46954896, "body": "@Puppy In that case, why are you trying to change the return type? Can&#39;t you just return the <code>T</code> after all that gunk has happened?"}, {"owner": {"reputation": 138660, "user_id": 298661, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/3445f56229632874a44596385ed6d40c?s=128&d=identicon&r=PG", "display_name": "Puppy", "link": "https://stackoverflow.com/users/298661/puppy"}, "reply_to_user": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "edited": false, "score": 0, "creation_date": 1428857140, "post_id": 29368152, "comment_id": 47330737, "body": "@JLRishe: No, I can&#39;t. I&#39;m trying to pass the really-a-T-but-technically-not to another function which takes the technically-not and does the gunk itself."}, {"owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "edited": false, "score": 0, "creation_date": 1428857534, "post_id": 29368152, "comment_id": 47330868, "body": "@Puppy Well, I&#39;m afraid I have no idea what you are trying to describe. I presume you&#39;re familiar with the <a href=\"http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY problem</a>? That&#39;s what this is. You&#39;ve asked us how to do Y, and very gradually given us vague hints about what X is. We&#39;re pretty sure there is no way to do Y, so could you please <i>show</i> us how you intend to use this capability rather than just asking how to make it happen?"}], "answers": [{"comments": [{"owner": {"reputation": 138660, "user_id": 298661, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/3445f56229632874a44596385ed6d40c?s=128&d=identicon&r=PG", "display_name": "Puppy", "link": "https://stackoverflow.com/users/298661/puppy"}, "edited": false, "score": 0, "creation_date": 1428857096, "post_id": 29379647, "comment_id": 47330723, "body": "But can you derive from OldLib and get the same effect?"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 1, "last_activity_date": 1427840736, "creation_date": 1427840736, "answer_id": 29379647, "question_id": 29368152, "link": "https://stackoverflow.com/questions/29368152/hijack-new-call/29379647#29379647", "title": "Hijack new call", "body": "<blockquote>\n  <p>How can I convince TypeScript to substitute my own function for new T()</p>\n</blockquote>\n\n<p>This is considered <em>very bad</em> practice. If you call <code>new</code> on a function you expect it to return something that has the <code>constructor</code> property correctly setup to point to that function. </p>\n\n<p>This is why TypeScript <em>classes</em> enforce that being called with <code>new</code> they will return an instance of that <em>class</em>. </p>\n\n<p>However if you want a <em>factory function</em>, or create type definitions for existing <em>bad</em> JS libraries TypeScript will allow you to do that e.g.: </p>\n\n<pre><code>interface A {\n    foo: number;\n}\ninterface B {\n    foo: string;\n}\n\nvar OldLib: {\n    new (): A;\n    new (str:string): B;\n}\n\n\nvar a = new OldLib(); \na.foo = 123;               // Is a string\n\nvar b = new OldLib('something');\nb.foo = '123';             // Is a number\n</code></pre>\n"}], "owner": {"reputation": 138660, "user_id": 298661, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/3445f56229632874a44596385ed6d40c?s=128&d=identicon&r=PG", "display_name": "Puppy", "link": "https://stackoverflow.com/users/298661/puppy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1427840736, "creation_date": 1427803201, "question_id": 29368152, "link": "https://stackoverflow.com/questions/29368152/hijack-new-call", "title": "Hijack new call", "body": "<p>I've got a class in TypeScript, which is fine. I'd like to intercept calls to <code>new T(...)</code> so that instead of calling the default machinery instead returns the value from an arbitrary function call (which has a different return type that is completely different to <code>T</code>). </p>\n\n<p>I tried something like <code>new() : OtherT { return func(); }</code>, which TS accepts without error but when compiling <code>new T()</code> still insists that the return is of type <code>T</code>.</p>\n\n<p>How can I convince TypeScript to substitute my own function for <code>new T()</code>? I could really use a solution that I can place on a base class of <code>T</code> rather than <code>T</code> itself.</p>\n"}, {"tags": ["javascript", "angularjs", "kendo-ui", "typescript", "kendo-grid"], "comments": [{"owner": {"reputation": 1964, "user_id": 612625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/327431f601f907f5f2f1bb702edb31dd?s=128&d=identicon&r=PG", "display_name": "indapublic", "link": "https://stackoverflow.com/users/612625/indapublic"}, "edited": false, "score": 0, "creation_date": 1427786519, "post_id": 29362723, "comment_id": 46909276, "body": "Did you add definitions?"}, {"owner": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "reply_to_user": {"reputation": 1964, "user_id": 612625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/327431f601f907f5f2f1bb702edb31dd?s=128&d=identicon&r=PG", "display_name": "indapublic", "link": "https://stackoverflow.com/users/612625/indapublic"}, "edited": false, "score": 0, "creation_date": 1427788548, "post_id": 29362723, "comment_id": 46910295, "body": "Definitions ? If you are talking about DefinetelyTyped script, yes, I added them in my project."}, {"owner": {"reputation": 1022, "user_id": 872505, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ePTx2.jpg?s=128&g=1", "display_name": "Mohamed Shaaban", "link": "https://stackoverflow.com/users/872505/mohamed-shaaban"}, "edited": false, "score": 0, "creation_date": 1427793219, "post_id": 29362723, "comment_id": 46912700, "body": "From where the generated data inside datasource comes from? you didn&#39;t mention any <code>read</code> URL"}, {"owner": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "edited": false, "score": 0, "creation_date": 1427795629, "post_id": 29362723, "comment_id": 46914216, "body": "Sorry, I put an example in the Javascript Plunker, the data are charging from another function. The div looks like this : <code>&lt;div id=&quot;resultSubTasksGrid&quot; kendo-grid=&quot;resultGrid&quot; class=&quot;table table-striped table-hover&quot; k-options=&quot;infoGridOptions&quot; k-data-source=&quot;source&quot;&gt;&lt;&#47;div&gt;</code> Data comes from the object source."}], "answers": [{"comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "edited": false, "score": 1, "creation_date": 1427792857, "post_id": 29363184, "comment_id": 46912484, "body": "Cool. But <code>dataSource</code> is still different between the two"}, {"owner": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "edited": false, "score": 0, "creation_date": 1427797052, "post_id": 29363184, "comment_id": 46915041, "body": "It doesn&#39;t change anything for the filter. I edited the Plunker and my post."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 3, "last_activity_date": 1427792845, "last_edit_date": 1427792845, "creation_date": 1427787617, "answer_id": 29363184, "question_id": 29362723, "link": "https://stackoverflow.com/questions/29362723/typescript-kendo-ui-grid-column-type-error/29363184#29363184", "title": "Typescript Kendo UI grid column type error", "body": "<blockquote>\n  <p>So it's working in Javascript but not in Typescript</p>\n</blockquote>\n\n<p>The typescript you have shared is not the same as the JavaScript that you have shared. Specifially <code>dataSource</code> is vastly different. I would make the TS similar to the JS and that should fix the error. </p>\n"}, {"comments": [{"owner": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "edited": false, "score": 0, "creation_date": 1427796709, "post_id": 29365199, "comment_id": 46914837, "body": "Thanks for your help, your code is more cleaner than mine, but it doesn&#39;t work for me.I don&#39;t know why because your plunker and mine, work juste fine."}, {"owner": {"reputation": 1731, "user_id": 2768661, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4611a4b1484df3e2da8e57c59e709783?s=128&d=identicon&r=PG&f=1", "display_name": "111", "link": "https://stackoverflow.com/users/2768661/111"}, "reply_to_user": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "edited": false, "score": 1, "creation_date": 1427797717, "post_id": 29365199, "comment_id": 46915447, "body": "are you still getting TypeError?"}, {"owner": {"reputation": 1731, "user_id": 2768661, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4611a4b1484df3e2da8e57c59e709783?s=128&d=identicon&r=PG&f=1", "display_name": "111", "link": "https://stackoverflow.com/users/2768661/111"}, "reply_to_user": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "edited": false, "score": 0, "creation_date": 1427805484, "post_id": 29365199, "comment_id": 46919317, "body": "make sure your kendo-grid read URL response object types and your kendo-grid column field have same DataType."}, {"owner": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "edited": false, "score": 0, "creation_date": 1427872730, "post_id": 29365199, "comment_id": 46948217, "body": "It&#39;s the same type. Either int or DateTime for the id, prog, reportDate or maxTemps. I really don&#39;t understand why this is not working in my grid."}], "tags": [], "owner": {"reputation": 1731, "user_id": 2768661, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4611a4b1484df3e2da8e57c59e709783?s=128&d=identicon&r=PG&f=1", "display_name": "111", "link": "https://stackoverflow.com/users/2768661/111"}, "is_accepted": true, "score": -4, "last_activity_date": 1427794192, "creation_date": 1427794192, "answer_id": 29365199, "question_id": 29362723, "link": "https://stackoverflow.com/questions/29362723/typescript-kendo-ui-grid-column-type-error/29365199#29365199", "title": "Typescript Kendo UI grid column type error", "body": "<p>Try this solution  <a href=\"http://plnkr.co/edit/vNwhPmyz1vllN8FNmnmC?p=info\" rel=\"nofollow\">Plunker</a>,</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n\r\n&lt;head&gt;\r\n  &lt;link rel=\"stylesheet\" href=\"http://cdn.kendostatic.com/2015.1.318/styles/kendo.common.min.css\"&gt;\r\n  &lt;link rel=\"stylesheet\" href=\"http://cdn.kendostatic.com/2015.1.318/styles/kendo.rtl.min.css\"&gt;\r\n  &lt;link rel=\"stylesheet\" href=\"http://cdn.kendostatic.com/2015.1.318/styles/kendo.default.min.css\"&gt;\r\n  &lt;link rel=\"stylesheet\" href=\"http://cdn.kendostatic.com/2015.1.318/styles/kendo.dataviz.min.css\"&gt;\r\n  &lt;link rel=\"stylesheet\" href=\"http://cdn.kendostatic.com/2015.1.318/styles/kendo.dataviz.default.min.css\"&gt;\r\n  &lt;link rel=\"stylesheet\" href=\"http://cdn.kendostatic.com/2015.1.318/styles/kendo.mobile.all.min.css\"&gt;\r\n\r\n  &lt;script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"&gt;&lt;/script&gt;\r\n  &lt;script src=\"http://cdn.kendostatic.com/2015.1.318/js/kendo.all.min.js\"&gt;&lt;/script&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n  &lt;div id=\"grid\"&gt;&lt;/div&gt;\r\n  &lt;script&gt;\r\n    $(document).ready(function() {\r\n      var data = [{\r\n        id: 36308,\r\n        reportDate: new Date(\"2015/02/01\"),\r\n        prog: 58,\r\n        state: \"Waiting\",\r\n        maxTemps: 0\r\n      }, {\r\n        id: 36309,\r\n        reportDate: new Date(\"2015/02/01\"),\r\n        prog: 34,\r\n        state: \"Complete\",\r\n        maxTemps: 86400\r\n      }, {\r\n        id: 36310,\r\n        reportDate: new Date(\"2015/02/01\"),\r\n        prog: 116,\r\n        state: \"Complete\",\r\n        maxTemps: 86400\r\n      }, {\r\n        id: 36311,\r\n        reportDate: new Date(\"2015/02/02\"),\r\n        prog: 58,\r\n        state: \"Complete\",\r\n        maxTemps: 86400\r\n      }];\r\n\r\n\r\n      $(\"#grid\").kendoGrid({\r\n        dataSource: {\r\n          data: data,\r\n          schema: {\r\n            model: {\r\n              fields: {\r\n                prog: {\r\n                  type: \"number\"\r\n                },\r\n                reportDate: {\r\n                  type: \"date\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        scrollable: true,\r\n        columnMenu: true,\r\n        filterable: {\r\n          extra: false,\r\n          operators: {\r\n            string: {\r\n              startswith: \"Starts with\",\r\n              eq: \"Is equal to\",\r\n              neq: \"Is not equal to\"\r\n            }\r\n          }\r\n        },\r\n        columns: [{\r\n          field: 'id',\r\n          type: 'number',\r\n          title: 'Id',\r\n          width: '80px'\r\n        }, {\r\n          field: 'reportDate',\r\n          title: 'Report Date',\r\n          width: '100px',\r\n          format: \"{0:yyyy/MM/dd}\",\r\n          filterable: {\r\n            ui: \"datepicker\"\r\n          }\r\n        }, {\r\n          field: 'prog',\r\n          title: 'Prog',\r\n          width: '60px',\r\n          template: '&lt;a href=\"\\\\#\" onclick =\"\\\\alert(#=prog#)\"&gt;#= prog #&lt;/a&gt;'\r\n\r\n        }, {\r\n          field: 'state',\r\n          title: 'Status',\r\n          width: '130px'\r\n        }, {\r\n          field: 'maxTemps',\r\n          type: 'number',\r\n          title: 'Max Temps',\r\n          width: '100px'\r\n        }]\r\n      });\r\n\r\n    });\r\n  &lt;/script&gt;\r\n&lt;/body&gt;\r\n\r\n&lt;/html&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}], "owner": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3064, "favorite_count": 0, "accepted_answer_id": 29365199, "answer_count": 2, "score": 1, "last_activity_date": 1427796995, "creation_date": 1427785996, "last_edit_date": 1427796995, "question_id": 29362723, "link": "https://stackoverflow.com/questions/29362723/typescript-kendo-ui-grid-column-type-error", "title": "Typescript Kendo UI grid column type error", "body": "<p>I have a problem with Kendo UI using Typescript in my project. I have a grid which filtering mode doesn't work on some column types, like integer. I tried to add the type in the columns directly, but it's not working at all.\nAnd it's not filtering on links either.</p>\n\n<p>[EDIT] Here's my function code that create the grid :</p>\n\n<pre><code>private _createInfoGridOptions(): kendo.ui.GridOptions {\n    return {\n        dataSource: {\n            serverPaging: true,\n            serverSorting: true,\n            pageSize: 15,\n        },\n        resizable: true,\n        selectable: 'row',\n        filterable: true,\n        columnMenu: true,\n        sortable: true,\n        scrollable: {\n            virtual: true\n        },\n        groupable: true,\n        height: 450,\n        columns: [\n            { field: 'subTaskId', type: \"number\", title: 'Subtask Id', width: '80px' },\n            { field: 'reportDate', type:\"date\", title: 'Report Date', width: '100px', template: '#= moment.utc(reportDate).local().format(\"yyyy/mm/dd\") #' },\n            { field: 'prog', type: \"string\", title: 'prog',  width: '60px', template: \"&lt;a href='\\\\#' ng-click=\\\"openpopup(#=prog#, \\'#=reportDate#\\'\\')\\\"&gt;#=prog#&lt;/a&gt;\" },\n            { field: 'state', type:\"string\", title: 'status', width: '130px' },\n            { field: 'maxTemps', type: 'number', title: 'Max Temps', width: '100px' }                    \n        ]\n    };\n}\n</code></pre>\n\n<p>I have this error on Chrome:</p>\n\n<blockquote>\n  <p>Uncaught TypeError: (d.prog || \"\").toLowerCase is not a function</p>\n</blockquote>\n\n<p>and this one on Firefox:</p>\n\n<blockquote>\n  <p>TypeError: \"\".toLowerCase is not a function.</p>\n</blockquote>\n\n<p>I did a <a href=\"http://plnkr.co/edit/OfzaIlyRp299sT3Qe3SS?p=info\" rel=\"nofollow\">plunker</a> to test my code translated in javascript, but the type property works. </p>\n\n<pre><code>$(\"#grid\").kendoGrid({\n  dataSource: \n  {\n       data : [\n            {id: 36308,reportDate:\"2015-02-01\",prog: 58,state: \"Waiting\",maxTemps: 0}, \n            {id: 36309,reportDate:\"2015-02-01\",prog: 34,state: \"Complete\",maxTemps: 86400},\n            {id: 36310,reportDate:\"2015-02-01\",prog: 116,state: \"Complete\",maxTemps: 86400},\n            {id: 36311,reportDate:\"2015-02-02\",prog: 58,state: \"Complete\",maxTemps: 86400}\n       ],\n       serverPaging: true,\n       serverSorting: true,\n       pageSize: 15\n  },\n  filterable: true,\n  columnMenu: true,\n  columns: [\n    { field: 'id', type:'number', title: 'Id', width: '80px' },\n    { field: 'reportDate', title: 'Report Date', width: '100px' },\n    { field: 'prog', type:'number', title: 'Prog', width: '60px' },\n    { field: 'state', title: 'Status', width: '130px' },\n    { field: 'maxTemps', type:'number', title: 'Max Temps', width: '100px' }\n  ]\n});\n</code></pre>\n\n<p>So it's working in Javascript but not in Typescript, I'm using AngularJS with Kendo UI.\nAny ideas why it's not woking ?</p>\n\n<p>Thanks !</p>\n\n<p>Ginwu</p>\n"}, {"tags": ["compilation", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 94522, "user_id": 7595, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/99108829176dfbbc5d0bf3c041542a26?s=128&d=identicon&r=PG", "display_name": "Pablo Fernandez", "link": "https://stackoverflow.com/users/7595/pablo-fernandez"}, "edited": false, "score": 0, "creation_date": 1427774269, "post_id": 29360216, "comment_id": 46904606, "body": "hey, that&#39;s cool! how did you know? are there any docs of the compiler APIs or you just read the sources?"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 94522, "user_id": 7595, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/99108829176dfbbc5d0bf3c041542a26?s=128&d=identicon&r=PG", "display_name": "Pablo Fernandez", "link": "https://stackoverflow.com/users/7595/pablo-fernandez"}, "edited": false, "score": 0, "creation_date": 1427775597, "post_id": 29360216, "comment_id": 46904961, "body": "Sources and experimentation e.g. <code>mkdirp</code> was added by someone else. You can see code in this package and the brackets one as a reference for how stuff works"}, {"owner": {"reputation": 94522, "user_id": 7595, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/99108829176dfbbc5d0bf3c041542a26?s=128&d=identicon&r=PG", "display_name": "Pablo Fernandez", "link": "https://stackoverflow.com/users/7595/pablo-fernandez"}, "edited": false, "score": 0, "creation_date": 1427815858, "post_id": 29360216, "comment_id": 46925629, "body": "on a closer look those are <code>atom-typescript</code> objects and methods, not typescripts. I can&#39;t use those."}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 94522, "user_id": 7595, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/99108829176dfbbc5d0bf3c041542a26?s=128&d=identicon&r=PG", "display_name": "Pablo Fernandez", "link": "https://stackoverflow.com/users/7595/pablo-fernandez"}, "edited": false, "score": 0, "creation_date": 1427841229, "post_id": 29360216, "comment_id": 46939334, "body": "<code>services</code> is just the <code>LanguageService</code>  documented here: <a href=\"https://github.com/Microsoft/TypeScript/wiki/Using-the-Language-Service-API\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/wiki/&hellip;</a> Not AtomTS specific in any way"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 2, "last_activity_date": 1427773393, "creation_date": 1427773393, "answer_id": 29360216, "question_id": 29360196, "link": "https://stackoverflow.com/questions/29360196/typescript-compiler-api-output-files-and-handle-errors/29360216#29360216", "title": "typescript compiler api, output files and handle errors", "body": "<blockquote>\n  <p>how to make emitFiles to write to a specific path</p>\n</blockquote>\n\n<p>The <code>emitFiles</code> doesn't do any actual writing. It returns it as a result and <em>you</em> need to write it, so you can write it anywhere. </p>\n\n<p>e.g. </p>\n\n<pre><code>output.outputFiles.forEach(o =&gt; {\n    mkdirp.sync(path.dirname(o.name));\n    fs.writeFileSync(o.name, o.text, \"utf8\");\n});\n</code></pre>\n\n<blockquote>\n  <p>how to catch and handle compilation errors?</p>\n</blockquote>\n\n<p>Using diagnostics: </p>\n\n<pre><code>var allDiagnostics = services.getCompilerOptionsDiagnostics()\n    .concat(services.getSyntacticDiagnostics(filePath))\n    .concat(services.getSemanticDiagnostics(filePath));\n</code></pre>\n\n<p>Source : <a href=\"https://github.com/TypeStrong/atom-typescript/blob/master/lib/main/lang/modules/building.ts#L28-L30\" rel=\"nofollow\">https://github.com/TypeStrong/atom-typescript/blob/master/lib/main/lang/modules/building.ts#L28-L30</a> don't forget to star ;) </p>\n"}], "owner": {"reputation": 94522, "user_id": 7595, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/99108829176dfbbc5d0bf3c041542a26?s=128&d=identicon&r=PG", "display_name": "Pablo Fernandez", "link": "https://stackoverflow.com/users/7595/pablo-fernandez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 802, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1427773393, "creation_date": 1427773259, "question_id": 29360196, "link": "https://stackoverflow.com/questions/29360196/typescript-compiler-api-output-files-and-handle-errors", "title": "typescript compiler api, output files and handle errors", "body": "<p>I'm trying to do a slightly different thing than the example on the TypeScript <a href=\"https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API\" rel=\"nofollow\">compiler API wiki</a>:</p>\n\n<pre><code>var host = ts.createCompilerHost(options);\nvar program = ts.createProgram(filenames, options, host);\nvar checker = ts.createTypeChecker(program, /*produceDiagnostics*/ true);\nvar result = checker.emitFiles();\n</code></pre>\n\n<p>The question is twofold:</p>\n\n<p>1) how to make <code>emitFiles</code> to write to a specific path?</p>\n\n<p>2) how to catch and handle compilation errors?</p>\n"}, {"tags": ["angularjs", "variables", "typescript", "webstorm"], "comments": [{"owner": {"reputation": 53661, "user_id": 1413538, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/594bb80f7ed4b0b3770df7ad97c4d16a?s=128&d=identicon&r=PG", "display_name": "Brocco", "link": "https://stackoverflow.com/users/1413538/brocco"}, "edited": false, "score": 0, "creation_date": 1427750259, "post_id": 29355765, "comment_id": 46897801, "body": "2 suggestions. 1) try casting angular <code>(&lt;ng.IAngularStatic&gt;angular)</code> 2) look through the settings in WS to add TS references through their settings"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1427751073, "post_id": 29355765, "comment_id": 46898182, "body": "Webstorm needs an update for ts 1.4"}, {"owner": {"reputation": 2988, "user_id": 2514535, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/kBeO9.jpg?s=128&g=1", "display_name": "Christine", "link": "https://stackoverflow.com/users/2514535/christine"}, "edited": false, "score": 0, "creation_date": 1427757722, "post_id": 29355765, "comment_id": 46900506, "body": "I think WebStorm 9.0.3 is already the latest version. What update do you mean?"}, {"owner": {"reputation": 2988, "user_id": 2514535, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/kBeO9.jpg?s=128&g=1", "display_name": "Christine", "link": "https://stackoverflow.com/users/2514535/christine"}, "edited": false, "score": 0, "creation_date": 1427759375, "post_id": 29355765, "comment_id": 46900931, "body": "OK, thanks to Brocco. So to get that working I had to install WebStorm 10 EAP."}], "owner": {"reputation": 2988, "user_id": 2514535, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/kBeO9.jpg?s=128&g=1", "display_name": "Christine", "link": "https://stackoverflow.com/users/2514535/christine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 130, "favorite_count": 0, "closed_date": 1427751048, "answer_count": 0, "score": 1, "last_activity_date": 1427750436, "creation_date": 1427747620, "last_edit_date": 1427750436, "question_id": 29355765, "link": "https://stackoverflow.com/questions/29355765/wrong-webstorm-typescript-warning-unresolved-variable-or-type-angular", "closed_reason": "Duplicate", "title": "Wrong WebStorm TypeScript Warning &quot;unresolved variable or type angular&quot;?", "body": "<p>I have a problem that WebStorm (latest 9.0.3) shows an error \"unresolved variable or type angular\" on the angular type in the following typescript file:</p>\n\n<pre><code>/// &lt;reference path=\"../../typings/angularjs/angular.d.ts\"/&gt;\nmodule app.core {\n    'use strict';\n    angular.module('app.core', [\n    ]);\n}\n</code></pre>\n\n<p>I am absolutely sure that the reference path is correct.</p>\n\n<p>The jquery.d.ts file that is referenced by the angular.d.ts file is also there.</p>\n\n<p>The other thing that might be a clue is that WebStorm also complains about a lot of things in the angular.d.ts and the jquery.d.ts files.</p>\n\n<p>It almost looks like that the WebStorm Typescript interpreter has a bug!?</p>\n\n<p>Using an external typescript compiler (I use grunt-ts and ts-lint) works absolutely fine without warnings or errors.</p>\n\n<p>Please help - I find it really distracting having all these red underlines in my WebStorm projects.</p>\n\n<p>Thank you\nChristine</p>\n"}, {"tags": ["javascript", "visual-studio", "visual-studio-2013", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 23477, "user_id": 374198, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/ed8129b80e0e4cd6152b1035e06a9a6a?s=128&d=identicon&r=PG&f=1", "display_name": "Josh M.", "link": "https://stackoverflow.com/users/374198/josh-m"}, "edited": false, "score": 0, "creation_date": 1428326367, "post_id": 29463537, "comment_id": 47105374, "body": "However, it&#39;s not true. <a href=\"http://i.imgur.com/JuAMjFc.png\" rel=\"nofollow noreferrer\">See the same answer and my comments, here.</a>"}, {"owner": {"reputation": 23477, "user_id": 374198, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/ed8129b80e0e4cd6152b1035e06a9a6a?s=128&d=identicon&r=PG&f=1", "display_name": "Josh M.", "link": "https://stackoverflow.com/users/374198/josh-m"}, "edited": false, "score": 0, "creation_date": 1428368629, "post_id": 29463537, "comment_id": 47124621, "body": "Ah, yes. And so close - the bin/obj folders still get generated. Haha. I know it&#39;s a useless question but thanks for sticking with it."}], "tags": [], "owner": {"reputation": 2939, "user_id": 2089182, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uS6EF.png?s=128&g=1", "display_name": "Dzienny", "link": "https://stackoverflow.com/users/2089182/dzienny"}, "is_accepted": true, "score": 2, "last_activity_date": 1428349845, "last_edit_date": 1428349845, "creation_date": 1428277549, "answer_id": 29463537, "question_id": 29348550, "link": "https://stackoverflow.com/questions/29348550/vs-web-application-project-with-no-framework-dll/29463537#29463537", "title": "VS Web Application project with no framework/DLL?", "body": "<p>Yes, at least in VS 2013 there is. New Project->Templates->TypeScript->HTML Application with TypeScript. Then, in order to avoid generating a useless dll, you have to turn off the build of the project - go to the solution Configuration Manager and uncheck Build for the project.</p>\n"}], "owner": {"reputation": 23477, "user_id": 374198, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/ed8129b80e0e4cd6152b1035e06a9a6a?s=128&d=identicon&r=PG&f=1", "display_name": "Josh M.", "link": "https://stackoverflow.com/users/374198/josh-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "accepted_answer_id": 29463537, "answer_count": 1, "score": 1, "last_activity_date": 1428349845, "creation_date": 1427724874, "question_id": 29348550, "link": "https://stackoverflow.com/questions/29348550/vs-web-application-project-with-no-framework-dll", "title": "VS Web Application project with no framework/DLL?", "body": "<p>I want to create a JavaScript API project in Visual Studio 2013/2015/etc. I don't want any bin/obj/dll/framework as it will be pure JS. Actually, it will be using Typescript, so I do need it to be in a web project so I can get Typescript compilation, etc.</p>\n\n<p>Is there any existing project template which would give me just a plain old web application with no framework attached?</p>\n"}, {"tags": ["javascript", "jquery", "kendo-ui", "typescript", "kendo-grid"], "answers": [{"comments": [{"owner": {"reputation": 3047, "user_id": 1293912, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6bcF9.jpg?s=128&g=1", "display_name": "Robin Giltner", "link": "https://stackoverflow.com/users/1293912/robin-giltner"}, "edited": false, "score": 0, "creation_date": 1427720914, "post_id": 29346794, "comment_id": 46879902, "body": "Be sure to specify the types for the other number and date fields.    columns: [     { field: &#39;id&#39;, title: &#39;Id&#39;, type:&#39;number&#39;,width: &#39;80px&#39; },     { field: &#39;reportDate&#39;, title: &#39;Report Date&#39;, type:&#39;date&#39;,width: &#39;100px&#39;, format: &#39;{0:yyyy-MM-dd}&#39; },     { field: &#39;prog&#39;, title: &#39;Prog&#39;, type: &#39;number&#39;, width: &#39;60px&#39; },     { field: &#39;state&#39;, title: &#39;Status&#39;, width: &#39;130px&#39; },     { field: &#39;maxTemps&#39;, title: &#39;Max Temps&#39;, type:&#39;number&#39;,width: &#39;100px&#39; }   ]"}, {"owner": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "edited": false, "score": 0, "creation_date": 1427786076, "post_id": 29346794, "comment_id": 46909060, "body": "Thanks guys for your answers ! I opened a new question for my TypeScript problem."}, {"owner": {"reputation": 903, "user_id": 2920277, "user_type": "registered", "accept_rate": 86, "profile_image": "https://graph.facebook.com/1043808492/picture?type=large", "display_name": "David Alan Condit", "link": "https://stackoverflow.com/users/2920277/david-alan-condit"}, "edited": false, "score": 1, "creation_date": 1580944675, "post_id": 29346794, "comment_id": 106268912, "body": "I had this issue, too. I had to reference the field&#39;s type property in my datasource&#39;s schema, like schema: { model: { fields: { SomeNumberField: { field: &quot;SomeNumberField&quot;, type: &quot;number&quot; }  } } }. It wasn&#39;t enough to specify the field&#39;s type in the grid&#39;s columns."}], "tags": [], "owner": {"reputation": 2558, "user_id": 1271279, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/UjoVW.png?s=128&g=1", "display_name": "Sridhar Narasimhan", "link": "https://stackoverflow.com/users/1271279/sridhar-narasimhan"}, "is_accepted": true, "score": 5, "last_activity_date": 1427720053, "creation_date": 1427720053, "answer_id": 29346794, "question_id": 29346616, "link": "https://stackoverflow.com/questions/29346616/kendo-ui-grid-filter-doesnt-work-for-integer-type-columns/29346794#29346794", "title": "kendo ui grid filter doesn&#39;t work for integer type columns", "body": "<p>You need to define the type number so that there wont be any issue with number filtering. Refer below code </p>\n\n<pre><code>columns: [\n\n    { field: 'prog', type:'number',  title: 'Prog', width: '60px' },\n\n  ]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2501, "user_id": 501481, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2bdc62f1c2d4b7f1fbee4f9310c484ce?s=128&d=identicon&r=PG&f=1", "display_name": "Dave", "link": "https://stackoverflow.com/users/501481/dave"}, "edited": false, "score": 0, "creation_date": 1612561896, "post_id": 36947044, "comment_id": 116815275, "body": "This should be the answer, as the marked answer does not work."}], "tags": [], "owner": {"reputation": 432, "user_id": 2178360, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d46e1c2fae347b0d025bd6dc8fa0514?s=128&d=identicon&r=PG", "display_name": "William", "link": "https://stackoverflow.com/users/2178360/william"}, "is_accepted": false, "score": 2, "last_activity_date": 1461962203, "creation_date": 1461962203, "answer_id": 36947044, "question_id": 29346616, "link": "https://stackoverflow.com/questions/29346616/kendo-ui-grid-filter-doesnt-work-for-integer-type-columns/36947044#36947044", "title": "kendo ui grid filter doesn&#39;t work for integer type columns", "body": "<p>It should be \"number\" in the schema as well. I had \"int\" and it still didn't work</p>\n"}], "owner": {"reputation": 75, "user_id": 1677747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9233baac93529dc68ff92bd383faa36?s=128&d=identicon&r=PG", "display_name": "Ginwu", "link": "https://stackoverflow.com/users/1677747/ginwu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8190, "favorite_count": 2, "accepted_answer_id": 29346794, "answer_count": 2, "score": 6, "last_activity_date": 1461962203, "creation_date": 1427719542, "last_edit_date": 1427724066, "question_id": 29346616, "link": "https://stackoverflow.com/questions/29346616/kendo-ui-grid-filter-doesnt-work-for-integer-type-columns", "title": "kendo ui grid filter doesn&#39;t work for integer type columns", "body": "<p>I have a problem with Kendo UI. I can't filter on some columns.</p>\n\n<p>Here's a <a href=\"http://plnkr.co/edit/OfzaIlyRp299sT3Qe3SS\" rel=\"noreferrer\">plunker</a> with my example where I try to filter on the columns id, prog or Max Temps and it doesn't work.</p>\n\n<pre><code>&lt;body&gt;\n    &lt;div id=\"grid\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;script&gt;\n    $(\"#grid\").kendoGrid({\n        dataSource: [\n            { id: 36308, reportDate: \"2015-02-01\", prog: 58, state: \"Waiting\", maxTemps: 0 }, \n            { id: 36309, reportDate: \"2015-02-01\", prog: 34, state: \"Complete\", maxTemps: 86400 },\n            { id: 36310, reportDate: \"2015-02-01\", prog: 116, state: \"Complete\", maxTemps: 86400  },\n            { id: 36311, reportDate: \"2015-02-02\", prog: 58, state: \"Complete\", maxTemps: 86400 }\n        ],\n        filterable: true,\n        columnMenu: true,\n        columns: [\n            { field: 'id', title: 'Id', width: '80px' },\n            { field: 'reportDate', title: 'Report Date', width: '100px' },\n            { field: 'prog', title: 'Prog', width: '60px' },\n            { field: 'state', title: 'Status', width: '130px' },\n            { field: 'maxTemps', title: 'Max Temps', width: '100px' }\n        ]\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>I have this error on Chrome: </p>\n\n<blockquote>\n  <p>Uncaught TypeError: (d.prog || \"\").toLowerCase is not a function</p>\n</blockquote>\n\n<p>and this one on Firefox: </p>\n\n<blockquote>\n  <p>TypeError: \"\".toLowerCase is not a function.</p>\n</blockquote>\n\n<p>I think it's because my data type is integer on these columns. I don't know how to solve this. Any ideas?</p>\n"}, {"tags": ["javascript", "typescript", "ecmascript-6"], "comments": [{"owner": {"reputation": 31823, "user_id": 1960455, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/d22bdc5c04b48a9054586eb64174ea99?s=128&d=identicon&r=PG", "display_name": "t.niese", "link": "https://stackoverflow.com/users/1960455/t-niese"}, "edited": false, "score": 1, "creation_date": 1427716534, "post_id": 29345559, "comment_id": 46877088, "body": "Type annotations are not part of ES6"}, {"owner": {"reputation": 469147, "user_id": 476, "user_type": "moderator", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a235706e3d81b614acaec3368edfea4b?s=128&d=identicon&r=PG", "display_name": "deceze", "link": "https://stackoverflow.com/users/476/deceze"}, "edited": false, "score": 4, "creation_date": 1427716542, "post_id": 29345559, "comment_id": 46877091, "body": "Whether some technology has a future is largely stargazing and opinionating. We don&#39;t know, only the future will tell."}, {"owner": {"reputation": 40105, "user_id": 28278, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/1cc9e6fee8abccebed1d4f7a88f0b9cb?s=128&d=identicon&r=PG", "display_name": "CodingWithSpike", "link": "https://stackoverflow.com/users/28278/codingwithspike"}, "edited": false, "score": 5, "creation_date": 1427718318, "post_id": 29345559, "comment_id": 46878225, "body": "TypeScript is not the same as ECMAScript6. TypeScript adds classes and interfaces and compile-time type checking to Javascript, which is not part of any ECMAScript standard. TypeScript is just set up to use ECMAScript6 so that it is ready for the future when browsers are more ES6 compatible.  The simple answer to your question is &#39;yes&#39; if you still want type checking. If you don&#39;t care about compile time type checking, then you don&#39;t need TypeScript now or in the future."}, {"owner": {"reputation": 1806, "user_id": 1581132, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6fd26d3646e07199b4e69d4d3fba4501?s=128&d=identicon&r=PG", "display_name": "Alagesan Palani", "link": "https://stackoverflow.com/users/1581132/alagesan-palani"}, "edited": false, "score": 0, "creation_date": 1427722459, "post_id": 29345559, "comment_id": 46880986, "body": "as per this link <a href=\"http://www.wintellect.com/devcenter/nstieglitz/5-great-features-in-es6-harmony\" rel=\"nofollow noreferrer\">wintellect.com/devcenter/nstieglitz/&hellip;</a> i see ECMAScript 6 too proposed to support classes. am i missing something here?"}, {"owner": {"reputation": 101190, "user_id": 710446, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a1325bf0a5baed69f6f65248c3b2254a?s=128&d=identicon&r=PG", "display_name": "apsillers", "link": "https://stackoverflow.com/users/710446/apsillers"}, "edited": false, "score": 0, "creation_date": 1427723615, "post_id": 29345559, "comment_id": 46881832, "body": "The feature set of TypeScript seems to be a superset of ES6 features. Thus, TypeScript has more features than a full ES6 implementation would have. Given this information, I don&#39;t understand how you think it could be possible for ES6 to render TypeScript obsolete, since TypeScript has extra features that ES6 does not plan to have. Could clarify your question to more carefully explain how and why you anticipate a subset of TypeScript features to render TypeScript obsolete? Your current level of understanding there may be critical to understanding what you&#39;re really asking."}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1427749101, "post_id": 29345559, "comment_id": 46897234, "body": "See &quot;why typescript&quot; <a href=\"http://basarat.gitbooks.io/typescript/content/docs/why-typescript.html#\" rel=\"nofollow noreferrer\">basarat.gitbooks.io/typescript/content/docs/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1806, "user_id": 1581132, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6fd26d3646e07199b4e69d4d3fba4501?s=128&d=identicon&r=PG", "display_name": "Alagesan Palani", "link": "https://stackoverflow.com/users/1581132/alagesan-palani"}, "edited": false, "score": 0, "creation_date": 1427723650, "post_id": 29346284, "comment_id": 46881856, "body": "when such advanced features are implemented in TS and that TS has to be ultimately compiled into plain javascript. will that compiled javascript will have support for old IE browsers atleast IE 8 or 9.?"}, {"owner": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "edited": false, "score": 0, "creation_date": 1427725987, "post_id": 29346284, "comment_id": 46883485, "body": "From the looks of it in the current prototype I think older browsers are supported: See generated code: <a href=\"https://github.com/Microsoft/TypeScript/blob/60a0a49437eb4fc4d96ef9d4e7d33818222ddea2/tests/baselines/reference/asyncMethod9.js#L14-L32\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/blob/&hellip;</a> and <a href=\"https://github.com/Microsoft/TypeScript/blob/60a0a49437eb4fc4d96ef9d4e7d33818222ddea2/src/lib/tslib.js\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/blob/&hellip;</a> <b>BUT</b> I&#39;m not from the TS team so I can&#39;t be sure though :)"}, {"owner": {"reputation": 8957, "user_id": 1073868, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/397bb6e2c9cc191a20143ca8566385c5?s=128&d=identicon&r=PG&f=1", "display_name": "Dan", "link": "https://stackoverflow.com/users/1073868/dan"}, "reply_to_user": {"reputation": 1806, "user_id": 1581132, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6fd26d3646e07199b4e69d4d3fba4501?s=128&d=identicon&r=PG", "display_name": "Alagesan Palani", "link": "https://stackoverflow.com/users/1581132/alagesan-palani"}, "edited": false, "score": 0, "creation_date": 1468909882, "post_id": 29346284, "comment_id": 64306805, "body": "Late to the party, but a lot of the &quot;new&quot; features work in ES5 and not ES3. IE9 has some known bugs with ES5 alone, so it&#39;s possible that they may not work correctly. I would definitely <i>not</i> count on IE8 support. @AlagesanPalani. For example, <code>async</code> (which TypeScript does support now) only works when compiled to ES6."}], "tags": [], "owner": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "is_accepted": false, "score": 1, "last_activity_date": 1427727537, "last_edit_date": 1427727537, "creation_date": 1427718559, "answer_id": 29346284, "question_id": 29345559, "link": "https://stackoverflow.com/questions/29345559/will-microsoft-typescript-be-obsolete-when-browsers-directly-support-ecmascript/29346284#29346284", "title": "will Microsoft Typescript be obsolete when browsers directly support ECMAScript 6 based javascript", "body": "<p>No, because TypeScript has lots other things which are important (at least for me)</p>\n\n<p>Notable:</p>\n\n<ul>\n<li>Interfaces</li>\n<li>Types</li>\n<li>Very nice tooling support</li>\n<li>Generics</li>\n</ul>\n\n<p>edit:\nAnd in the future TypeScript will support <code>async</code> which will maybe come in ES7 and other features so TS might have some features with downlevel support for older browser! </p>\n"}], "owner": {"reputation": 1806, "user_id": 1581132, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6fd26d3646e07199b4e69d4d3fba4501?s=128&d=identicon&r=PG", "display_name": "Alagesan Palani", "link": "https://stackoverflow.com/users/1581132/alagesan-palani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1488, "favorite_count": 0, "closed_date": 1427723480, "answer_count": 1, "score": 0, "last_activity_date": 1427727537, "creation_date": 1427716375, "question_id": 29345559, "link": "https://stackoverflow.com/questions/29345559/will-microsoft-typescript-be-obsolete-when-browsers-directly-support-ecmascript", "closed_reason": "Opinion-based", "title": "will Microsoft Typescript be obsolete when browsers directly support ECMAScript 6 based javascript", "body": "<p>we are currently using Microsoft TypeScript in our project. I came to know that Microsoft TypeScript is following ECMAScript 6 standards. So when ECMASCript 6 is finalized and released and browsers natively supports javascript based off of ECMAScript 6, do we need Microsoft TypeScript?</p>\n\n<p>Since TypeScript follows ECMAScript 6 standard, after ECMAScript 6 based javascript is directly supported in browsers, can we still use Typescript without compiling into to native javascript as it will be ultimately supported by browsers?</p>\n"}, {"tags": ["typescript", "extends", "implements"], "answers": [{"comments": [{"owner": {"reputation": 361, "user_id": 2923631, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e0ef534aaa8e4b139c5c6231cbf799c?s=128&d=identicon&r=PG&f=1", "display_name": "Everton Santos", "link": "https://stackoverflow.com/users/2923631/everton-santos"}, "edited": false, "score": 0, "creation_date": 1427682942, "post_id": 29336605, "comment_id": 46863220, "body": "yes, i&#39;m was using tsconfig.json to compile to only one app.js file and the tsc was creating a MyBaseClass.js file.  But still not working, the tsc is not creating the __extends code on js file, I will gonna try more later. - tsc --version 1.4.1.0 on Mac OS X 10.8"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 26, "last_activity_date": 1427674881, "creation_date": 1427674881, "answer_id": 29336605, "question_id": 29336496, "link": "https://stackoverflow.com/questions/29336496/extends-and-implements-in-one-class-in-typescript/29336605#29336605", "title": "extends and implements in one class in TypeScript", "body": "<blockquote>\n  <p>in runtime i get this <code>Uncaught ReferenceError: MyBaseClass is not defined</code></p>\n</blockquote>\n\n<p>Yes you can do that. The code you posted will work fine. </p>\n\n<p>However I suspect in your <em>actual code</em> you have it split across multiple files and <code>MyBaseClass</code> is <em>not executed</em> before the code for <code>MyClass</code>. </p>\n\n<p>Fix JavaScript ordering or use external modules to have the ordering determined by the module loader.</p>\n"}], "owner": {"reputation": 361, "user_id": 2923631, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e0ef534aaa8e4b139c5c6231cbf799c?s=128&d=identicon&r=PG&f=1", "display_name": "Everton Santos", "link": "https://stackoverflow.com/users/2923631/everton-santos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 26380, "favorite_count": 3, "accepted_answer_id": 29336605, "answer_count": 1, "score": 35, "last_activity_date": 1606243910, "creation_date": 1427673936, "last_edit_date": 1606243910, "question_id": 29336496, "link": "https://stackoverflow.com/questions/29336496/extends-and-implements-in-one-class-in-typescript", "title": "extends and implements in one class in TypeScript", "body": "<p>Can I do this in TypeScript?</p>\n<pre class=\"lang-ts prettyprint-override\"><code>export interface IMyInterface {\n  doSomething(): void;\n}\n\nexport class MyBaseClass {\n  myBaseClassHasProperty: string;\n\n  constructor(){\n    this.myBaseClassHasProperty = 'some value';\n  }\n  myBaseClassHasMethods(): void {\n    console.log(this.myBaseClassHasProperty);\n  }\n}\n\nexport class MyClass extends MyBaseClass implements IMyInterface {\n  constructor() {\n    super();\n  }\n\n  doSomething(): void {\n    this.myBaseClassHasMethods();\n  }\n}\n</code></pre>\n<p>In runtime it throws:</p>\n<blockquote>\n<p>Uncaught ReferenceError: MyBaseClass is not defined</p>\n</blockquote>\n"}, {"tags": ["intellij-idea", "typescript", "built-in"], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 2586009, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d01f583691e98166060ba812ff9b41e8?s=128&d=identicon&r=PG", "display_name": "user2586009", "link": "https://stackoverflow.com/users/2586009/user2586009"}, "edited": false, "score": 0, "creation_date": 1427697591, "post_id": 29335692, "comment_id": 46867037, "body": "I have downloaded all required d.ts files, but how to tell compiler where they are placed? I have large project with more than 100 .ts files, so defining reference path directly in each of files - bad solution."}, {"owner": {"reputation": 3, "user_id": 2586009, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d01f583691e98166060ba812ff9b41e8?s=128&d=identicon&r=PG", "display_name": "user2586009", "link": "https://stackoverflow.com/users/2586009/user2586009"}, "edited": false, "score": 0, "creation_date": 1427698830, "post_id": 29335692, "comment_id": 46867579, "body": "I agree, that would be a solution. But I&#39;m curious, why using file watcher compiler there is possibility to define reference to d.ts file and using built-in compiler - not possible. So maybe there is some other approach to achieve this?"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 3, "user_id": 2586009, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d01f583691e98166060ba812ff9b41e8?s=128&d=identicon&r=PG", "display_name": "user2586009", "link": "https://stackoverflow.com/users/2586009/user2586009"}, "edited": false, "score": 0, "creation_date": 1427701351, "post_id": 29335692, "comment_id": 46868771, "body": "Not at the moment. But soon you will be able to use <code>tsconfig.json</code> : <a href=\"https://github.com/TypeStrong/atom-typescript/blob/master/docs/tsconfig.md\" rel=\"nofollow noreferrer\">github.com/TypeStrong/atom-typescript/blob/master/docs/&hellip;</a>"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 0, "last_activity_date": 1427697708, "last_edit_date": 1427697708, "creation_date": 1427668166, "answer_id": 29335692, "question_id": 29335030, "link": "https://stackoverflow.com/questions/29335030/intellij-built-in-typescript-compiler-command-line-options/29335692#29335692", "title": "IntelliJ Built-in TypeScript Compiler Command Line Options", "body": "<blockquote>\n  <p>Would be better to define reference path just in one place (compiler arguments).\n  So how to define reference path using built-in TypeScript compiler command line options</p>\n</blockquote>\n\n<p>You would include these <em>with your project</em>. Download directly from github or use <code>tsd</code>. </p>\n\n<blockquote>\n  <p>I have large project with more than 100 .ts files, so defining reference path directly in each of files - bad solutio</p>\n</blockquote>\n\n<p>Basically create a <code>globals.d.ts</code> file and <code>///&lt;reference</code> these files <em>once</em>. Then you can just reference <code>globals.d.ts</code> and these get referenced <em>implicitly</em>.</p>\n"}], "owner": {"reputation": 3, "user_id": 2586009, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d01f583691e98166060ba812ff9b41e8?s=128&d=identicon&r=PG", "display_name": "user2586009", "link": "https://stackoverflow.com/users/2586009/user2586009"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 776, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1427697708, "creation_date": 1427664324, "last_edit_date": 1427666635, "question_id": 29335030, "link": "https://stackoverflow.com/questions/29335030/intellij-built-in-typescript-compiler-command-line-options", "title": "IntelliJ Built-in TypeScript Compiler Command Line Options", "body": "<p>I have such C:/project/test.ts file:</p>\n\n<pre><code>import $ = require('jquery');\nconsole.log($);\n</code></pre>\n\n<p>And I have placed jquery.d.ts file in: C:/jquery.d.ts</p>\n\n<p>Using file watcher (with additional compiler arguments: --module amd C:/jquery.d.ts) file test.ts compiles successfully.</p>\n\n<p>Using built-in compiler (with the same arguments: --module amd C:/jquery.d.ts) file test.ts doesn't compile. Error: </p>\n\n<pre><code>Error:(1, 20) TS2307: Cannot find external module 'jquery'.\n</code></pre>\n\n<p>Of course, I could define reference path test.ts file like this:</p>\n\n<pre><code>/// &lt;reference path=\"C:/jquery.d.ts\" /&gt;\n</code></pre>\n\n<p>After that - it compiles fine using both compilers. But its not convenient in big project. Would be better to define reference path just in one place (compiler arguments).</p>\n\n<p>So how to define reference path using built-in TypeScript compiler command line options? </p>\n"}, {"tags": ["javascript", "typescript", "webstorm"], "answers": [{"comments": [{"owner": {"reputation": 7884, "user_id": 458356, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/a4f78de294cf8eaa7c8a00e6c93a3d77?s=128&d=identicon&r=PG", "display_name": "Ian Bytchek", "link": "https://stackoverflow.com/users/458356/ian-bytchek"}, "edited": false, "score": 1, "creation_date": 1452966697, "post_id": 29335716, "comment_id": 57401916, "body": "Would you know how to the opposite? Make WebStorm use <code>typings</code> in package.json or an actual d.ts file from the package to provide autocompletion support and hinting for JS code? I have a library written in TS, compiled and published on npm. In my project I want to use my own d.ts which is not on DefintelyTyped repo."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1427668298, "last_edit_date": 1495539898, "creation_date": 1427668298, "answer_id": 29335716, "question_id": 29332390, "link": "https://stackoverflow.com/questions/29332390/external-libraries-vs-reference-path-for-typescript-in-webstorm/29335716#29335716", "title": "External Libraries vs. &quot;&lt;reference path=&quot; for TypeScript in WebStorm", "body": "<blockquote>\n  <p>Indeed, I'm not sure what it accomplished for me as I had to download and reference the definition file manually. Am I misunderstanding something</p>\n</blockquote>\n\n<p>The stubs that webstorm downloads are only for JS. For TS you need to download and reference manually : <a href=\"https://stackoverflow.com/questions/22367328/intellisense-and-code-complete-for-definitelytyped-typescript-type-definitions\">intellisense and code complete for DefinitelyTyped (TypeScript type definitions) on WebStorm IDE</a></p>\n"}], "owner": {"reputation": 10594, "user_id": 7961, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/97dbd8204d48f5a086586a4e95d0403b?s=128&d=identicon&r=PG", "display_name": "Howard Pinsley", "link": "https://stackoverflow.com/users/7961/howard-pinsley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2200, "favorite_count": 0, "accepted_answer_id": 29335716, "answer_count": 1, "score": 1, "last_activity_date": 1427668298, "creation_date": 1427650230, "question_id": 29332390, "link": "https://stackoverflow.com/questions/29332390/external-libraries-vs-reference-path-for-typescript-in-webstorm", "title": "External Libraries vs. &quot;&lt;reference path=&quot; for TypeScript in WebStorm", "body": "<p>I am trying to understand how to get WebStorm 9 to recognize external TypeScript libraries.  I tried to add \"TypeScript Community Stubs\" for an external library -- for example knockout -- and that results in an Application Library called knockout-DefinitelyTypes to appear in my \"External Libraries\" node in the project tree.  Expanding that node shows /Users/Decker/Library/Caches/WebStorm9/extLibs/http_github.com_borisyankov_DefinitelyTyped_raw_master_knockout_knockout.d.ts.  My expectation is that that would allow me, in my own typescript file, to create a line like:</p>\n\n<pre><code>var name = ko.observable('Hi');\n</code></pre>\n\n<p>But the TypeScript will not compile and gives the error \"Cannot find name 'ko'\".  I am able to solve this by downloading the TypeScript definition file manually (from <a href=\"https://github.com/borisyankov/DefinitelyTyped\" rel=\"nofollow\">https://github.com/borisyankov/DefinitelyTyped</a>) and storing it in my project -- in my case at /scripts/typings/knockout.d.ts -- and then reference it with this line in my TypeScript source file:</p>\n\n<pre><code>/// &lt;reference path=\"../typings/knockout.d.ts\" /&gt;\n</code></pre>\n\n<p>I thought that WebStorm's external library would alleviate the need for the  tag.  Indeed, I'm not sure what it accomplished for me as I had to download and reference the definition file manually.  Am I misunderstanding something?  TIA.</p>\n"}, {"tags": ["typescript", "webstorm"], "answers": [{"comments": [{"owner": {"reputation": 11638, "user_id": 123204, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/c23cd2d6afb9dc3e42b6c0d280086fab?s=128&d=identicon&r=PG", "display_name": "Jesus Rodriguez", "link": "https://stackoverflow.com/users/123204/jesus-rodriguez"}, "edited": false, "score": 0, "creation_date": 1427712771, "post_id": 29335733, "comment_id": 46874797, "body": "I am using Webstorm 10 EAP, isn&#39;t that enough?"}, {"owner": {"reputation": 72406, "user_id": 2274212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05f19aded7e6cfc60f184796e8e02a4?s=128&d=identicon&r=PG", "display_name": "lena", "link": "https://stackoverflow.com/users/2274212/lena"}, "edited": false, "score": 0, "creation_date": 1427724438, "post_id": 29335733, "comment_id": 46882398, "body": "may be <a href=\"https://youtrack.jetbrains.com/issue/WEB-15797\" rel=\"nofollow noreferrer\">WEB-15797</a>. Does the problem persists in WebStorm 10 RC?"}, {"owner": {"reputation": 11638, "user_id": 123204, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/c23cd2d6afb9dc3e42b6c0d280086fab?s=128&d=identicon&r=PG", "display_name": "Jesus Rodriguez", "link": "https://stackoverflow.com/users/123204/jesus-rodriguez"}, "edited": false, "score": 0, "creation_date": 1427725832, "post_id": 29335733, "comment_id": 46883376, "body": "I am not seeing that lena."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 1, "last_activity_date": 1427668366, "creation_date": 1427668366, "answer_id": 29335733, "question_id": 29331902, "link": "https://stackoverflow.com/questions/29331902/understanding-typescript-definition-files-on-webstorm/29335733#29335733", "title": "Understanding Typescript definition files on Webstorm", "body": "<blockquote>\n  <p>Who's failing here? The typescript plugin? </p>\n</blockquote>\n\n<p>Yes. You need to use the Webstorm beta channel to get support for TypeScript 1.4 union Types at the moment.</p>\n"}], "owner": {"reputation": 11638, "user_id": 123204, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/c23cd2d6afb9dc3e42b6c0d280086fab?s=128&d=identicon&r=PG", "display_name": "Jesus Rodriguez", "link": "https://stackoverflow.com/users/123204/jesus-rodriguez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 939, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1427668366, "creation_date": 1427647534, "last_edit_date": 1486566102, "question_id": 29331902, "link": "https://stackoverflow.com/questions/29331902/understanding-typescript-definition-files-on-webstorm", "title": "Understanding Typescript definition files on Webstorm", "body": "<p>I started using Typescript with Webstorm today and I am getting real crazy understanding what's going on. Imagine a project using <code>tsd</code> loading definition types on <code>typings/</code>. For background, <code>angular</code> defines an <code>angular</code> module aliased to <code>ng</code> and then there is other <code>d.ts</code> files appending more modules into <code>angular</code> (and technically <code>ng</code>).</p>\n\n<p>When I require for example the <code>router</code> I get:</p>\n\n<p><img src=\"https://puu.sh/gUcQA/93b5782ca7.png\" alt=\"route is not resolved\"></p>\n\n<p>In fact, if you go to <code>angular-route.d.ts</code> (from DefinitelyTyped) you can see the same:</p>\n\n<p><img src=\"https://i.stack.imgur.com/0SrPd.png\" alt=\"not resolved in here too\"></p>\n\n<p>The <code>d.ts</code> files are technically correct because tsc compiles them giving it those definition files.</p>\n\n<p>On the other hand, Webstorm allows you to load libraries (typescript stubs from DefinitelyTyped). If I go there and I download the <code>angular</code> ones (which are 100% the same as the one I have on <code>typings/</code>) I get:</p>\n\n<p><img src=\"https://i.stack.imgur.com/YYuE9.png\" alt=\"quite better\"></p>\n\n<p>Same error but at least I don't get the red wiggle in the solution explorer. Still, it doesn't give me any intellisense when writing <code>ng.route.&lt;ctrl+space&gt;</code>, it just turn blue when I finish writing it (in fact, I can cmd+click and go to the definition).</p>\n\n<p>Who's failing here? The typescript plugin? It is weird that it fails using <code>typings/</code> and somehow work with Webstorm's libraries menu (using the same file).</p>\n"}, {"tags": ["attributes", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 264, "user_id": 3794464, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/w87OQ.jpg?s=128&g=1", "display_name": "kkost", "link": "https://stackoverflow.com/users/3794464/kkost"}, "edited": false, "score": 0, "creation_date": 1427708062, "post_id": 29327377, "comment_id": 46872202, "body": "Thanks! This seems like a perfect solution for my problem, and I&#39;ll certainly look into it when I can use it."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 4, "last_activity_date": 1427619911, "creation_date": 1427619911, "answer_id": 29327377, "question_id": 29327091, "link": "https://stackoverflow.com/questions/29327091/typescript-idioms-around-adding-properties-to-methods-inline-with-the-method-def/29327377#29327377", "title": "Typescript idioms around adding properties to methods inline with the method definition", "body": "<p>This is an ideal candidate for TypeScript Decorators : <a href=\"https://github.com/Microsoft/TypeScript/issues/2249\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/2249</a>. Your code refactored: </p>\n\n<pre><code>class FooController {\n    @route(/*put your config here*/)\n    foo(req: express.Request, res: express.Response) {\n        res.send(JSON.stringify({ loc: 'FooController::foo 2 here '+req.params.fooId }));\n    }\n    @route(/*put your config here*/)\n    bar(req: express.Request, res: express.Response) {\n        res.send(JSON.stringify({ loc: 'FooController::bar here' }));\n    }\n}\n</code></pre>\n\n<p>Note that you will need TypeScript 1.5 which should be released very shortly. </p>\n"}, {"comments": [{"owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 0, "creation_date": 1427631024, "post_id": 29328395, "comment_id": 46847513, "body": "<code>this.foo.route = ...</code> in the constructor means each instance of the class will redefine the routes in the prototype. It&#39;s not elegant. <a href=\"http://www.typescriptlang.org/Playground#src=var%20r%3B%0D%0Ar.foo%20%3D%20%28req%3A%20express.Request%2C%20res%3A%20express.Response%29%20%3D%3E%20%7B%0D%0A%09res.send%28JSON.stringify%28%7B%20loc%3A%20%27FooController%3A%3Afoo%202%20here%20%27%2Breq.params.fooId%20%7D%29%29%3B%0D%0A%7D%0D%0Ar.foo.route%20%3D%20%27%2Ffoo%2F%3AfooId%27%3B%0D%0Ar.foo.route%20%3D%20%27get%27%3B%0D%0A\" rel=\"nofollow noreferrer\">A pure JavaScript solution, without classes, is better</a>."}, {"owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 0, "creation_date": 1427631113, "post_id": 29328395, "comment_id": 46847537, "body": "But I&#39;ve +1ed the answer of Basarat, it looks nice for a solution with a class."}, {"owner": {"reputation": 10126, "user_id": 81723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04b736323c221528a5eaad9224fac226?s=128&d=identicon&r=PG", "display_name": "Sly_cardinal", "link": "https://stackoverflow.com/users/81723/sly-cardinal"}, "reply_to_user": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 0, "creation_date": 1427631988, "post_id": 29328395, "comment_id": 46847784, "body": "Thanks, I&#39;d considered that, but decided to go with a straight translation of kkost&#39;s example. I figure these types of route/controller classes aren&#39;t instantiated very often so having the clarity of a self-contained class  outweighs the route redefinition in the constructor."}, {"owner": {"reputation": 264, "user_id": 3794464, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/w87OQ.jpg?s=128&g=1", "display_name": "kkost", "link": "https://stackoverflow.com/users/3794464/kkost"}, "edited": false, "score": 0, "creation_date": 1427794233, "post_id": 29328395, "comment_id": 46913318, "body": "Thanks - marked as accepted.  What I do like about it is the better type safety and encapsulating the concerns in the class definition. I would like it better if I could interrogate properties before I instanced an object (my pattern is establish route from method properties, and then fulfill route with a new controller object) and if the properties could be established in the exact same space as the method. I think TypeScript Decorators (mentioned by @basarat) will get me there when they are available to me."}], "tags": [], "owner": {"reputation": 10126, "user_id": 81723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04b736323c221528a5eaad9224fac226?s=128&d=identicon&r=PG", "display_name": "Sly_cardinal", "link": "https://stackoverflow.com/users/81723/sly-cardinal"}, "is_accepted": true, "score": 3, "last_activity_date": 1427627599, "creation_date": 1427627599, "answer_id": 29328395, "question_id": 29327091, "link": "https://stackoverflow.com/questions/29327091/typescript-idioms-around-adding-properties-to-methods-inline-with-the-method-def/29328395#29328395", "title": "Typescript idioms around adding properties to methods inline with the method definition", "body": "<p>The easiest way to keep type safety on your route methods is to define an interface:</p>\n\n<pre><code>interface IRoute {\n    (req: express.Request, res: express.Response): void;\n\n    route?: string;\n    verb?: string;\n}\n</code></pre>\n\n<p>Then define your routing methods as properties that implement the <code>IRoute</code> interface. Then you can use the constructor to define the additional <code>route</code> and <code>verb</code> properties:</p>\n\n<pre><code>class FooController {\n\n    constructor(){\n        // Type-safety on these properties:\n        this.foo.route = '/foo/:fooId';\n        this.foo.verb = 'get'\n\n        this.bar.route = '/bar';\n        this.bar.verb = 'post';\n    }\n\n    // Use fat-arrow syntax to bind the scope to this instance.\n    foo: IRoute = (req: express.Request, res: express.Response) =&gt; {\n        this.bar(req, res);\n    }\n\n    bar: IRoute = (req: express.Request, res: express.Response) =&gt; {\n        // TypeScript knows about the additional properties on `this.foo`.\n        this.foo.route;\n\n        res.send(JSON.stringify({ loc: 'FooController::bar here' }));\n    }\n\n}\n</code></pre>\n\n<p>You might still have a bit of \"distance\" between the constructor and the route methods, but the benefits are:</p>\n\n<ul>\n<li>You gain type-safety</li>\n<li>You don't have to fiddle around with the <code>FooController.prototype['foo']...</code></li>\n<li>It's all self-contained in the class definition</li>\n</ul>\n\n<p><a href=\"http://www.typescriptlang.org/Playground#src=%09interface%20IRoute%20%7B%0D%0A%09%09(req%3A%20express.Request%2C%20res%3A%20express.Response)%3A%20void%3B%0D%0A%09%09%0D%0A%09%09route%3F%3A%20string%3B%0D%0A%09%09verb%3F%3A%20string%3B%0D%0A%09%7D%0D%0A%09%0D%0A%09%0D%0A%09class%20FooController%20%7B%0D%0A%09%09%0D%0A%09%09constructor()%7B%0D%0A%09%09%09%2F%2F%20Type-safety%20on%20these%20properties%3A%0D%0A%09%09%09this.foo.route%20%3D%20&#39;%2Ffoo%2F%3AfooId&#39;%3B%0D%0A%09%09%09this.foo.verb%20%3D%20&#39;get&#39;%0D%0A%09%09%09%0D%0A%09%09%09this.bar.route%20%3D%20&#39;%2Fbar&#39;%3B%0D%0A%09%09%09this.bar.verb%20%3D%20&#39;post&#39;%3B%0D%0A%09%09%7D%0D%0A%09%09%0D%0A%09%09foo%3A%20IRoute%20%3D%20(req%3A%20express.Request%2C%20res%3A%20express.Response)%20%3D%3E%20%7B%0D%0A%09%09%09this.bar(req%2C%20res)%3B%0D%0A%09%09%7D%0D%0A%09%09%0D%0A%09%20%20%20%20bar%3A%20IRoute%20%3D%20(req%3A%20express.Request%2C%20res%3A%20express.Response)%20%3D%3E%20%7B%0D%0A%09%09%09%2F%2F%20TypeScript%20knows%20about%20the%20additional%20properties%20on%20%60this.foo%60.%0D%0A%09%09%09this.foo.route%3B%0D%0A%09%09%09%0D%0A%09%20%20%20%20%20%20%20%20res.send(JSON.stringify(%7B%20loc%3A%20&#39;FooController%3A%3Abar%20here&#39;%20%7D))%3B%0D%0A%09%20%20%20%20%7D%0D%0A%09%09%0D%0A%09%7D%0D%0A%09%0D%0A%09%0D%0A%09module%20express%20%7B%0D%0A%09%09%2F%2F%20Throwaway%20module%20definition%20to%20keep%20the%0D%0A%09%09%2F%2F%20compiler%20happy%20for%20this%20example.%0D%0A%09%09export%20interface%20Request%20%7B%0D%0A%09%09%09params%3B%0D%0A%09%09%7D%0D%0A%09%09export%20interface%20Response%20%7B%0D%0A%09%09%09send%3B%0D%0A%09%09%7D%0D%0A%09%7D%0D%0A%09%0D%0A%09%0D%0A%09var%20route%20%3D%20new%20FooController()%3B%0D%0A%09console.log(&#39;foo.verb%3D&#39;%2C%20route.foo.verb)%3B%0D%0A\" rel=\"nofollow\">Here's the above example in the TypeScript playground.</a></p>\n"}], "owner": {"reputation": 264, "user_id": 3794464, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/w87OQ.jpg?s=128&g=1", "display_name": "kkost", "link": "https://stackoverflow.com/users/3794464/kkost"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2683, "favorite_count": 1, "accepted_answer_id": 29328395, "answer_count": 2, "score": 1, "last_activity_date": 1427627599, "creation_date": 1427617557, "last_edit_date": 1495542293, "question_id": 29327091, "link": "https://stackoverflow.com/questions/29327091/typescript-idioms-around-adding-properties-to-methods-inline-with-the-method-def", "title": "Typescript idioms around adding properties to methods inline with the method definition", "body": "<p>Are there any idioms in typescript to define properties to methods in a class inline with the method definition?</p>\n\n<p>I'm looking for something similar to .NET attributes.</p>\n\n<p>Here's an example of what I've got so far </p>\n\n<pre><code>class FooController {\n    foo(req: express.Request, res: express.Response) {\n        res.send(JSON.stringify({ loc: 'FooController::foo 2 here '+req.params.fooId }));\n    }\n    bar(req: express.Request, res: express.Response) {\n        res.send(JSON.stringify({ loc: 'FooController::bar here' }));\n    }\n}\nFooController.prototype.foo['route'] = '/foo/:fooId';\nFooController.prototype.foo['verb'] = 'get';\nFooController.prototype.bar['route'] = '/bar';\nFooController.prototype.bar['verb'] = 'post';\n</code></pre>\n\n<p>where a different function will consume FooController and interrogate the method attributes to set up a routing table before any of the FooController methods are invoked.</p>\n\n<p>I don't like the distance between my method definitions and my property definitions, especially as my methods get larger and supporting functions sit in between the two.</p>\n\n<p>Is there anything better I can do here? If there are different language features I should be using to express this other than properties, I'm open to that. I'm especially interested if the solution retains type safety.</p>\n\n<p>I did review <a href=\"https://stackoverflow.com/questions/12766528/build-a-function-object-with-properties-in-typescript\">build a function object with properties in typescript</a> but I don't think the solutions in there are a good match because of the late binding and object method requirements.</p>\n\n<p>I'm using typescript compiler version 1.0.3 with Visual Studio 2013 Update 3.</p>\n"}, {"tags": ["jquery", "typescript"], "comments": [{"owner": {"reputation": 23981, "user_id": 1157814, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/Nk7LK.png?s=128&g=1", "display_name": "g.pickardou", "link": "https://stackoverflow.com/users/1157814/g-pickardou"}, "edited": false, "score": 0, "creation_date": 1432632421, "post_id": 29320838, "comment_id": 48989874, "body": "Any chance you are using also the kendo.all.d?"}, {"owner": {"reputation": 153, "user_id": 971374, "user_type": "registered", "accept_rate": 7, "profile_image": "https://graph.facebook.com/100000725827461/picture?type=large", "display_name": "user971374", "link": "https://stackoverflow.com/users/971374/user971374"}, "reply_to_user": {"reputation": 23981, "user_id": 1157814, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/Nk7LK.png?s=128&g=1", "display_name": "g.pickardou", "link": "https://stackoverflow.com/users/1157814/g-pickardou"}, "edited": false, "score": 0, "creation_date": 1432746837, "post_id": 29320838, "comment_id": 49056270, "body": "Yes I was using Kendo.all.d"}], "answers": [{"tags": [], "owner": {"reputation": 46, "user_id": 4245943, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HgDYJ.jpg?s=128&g=1", "display_name": "Andreas H&#248;yer", "link": "https://stackoverflow.com/users/4245943/andreas-h%c3%b8yer"}, "is_accepted": false, "score": 3, "last_activity_date": 1427633891, "creation_date": 1427633891, "answer_id": 29329390, "question_id": 29320838, "link": "https://stackoverflow.com/questions/29320838/jquery-typescript-definition-file-gives-error/29329390#29329390", "title": "jquery typescript definition file gives error", "body": "<p>Had same problem, what I did was copy the following line to the bottom of the \"interface JQueryPromise extends JQueryGenericPromise\" block.</p>\n\n<pre><code>/**\n * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\n * \n * @param doneFilter A function that is called when the Deferred is resolved.\n * @param failFilter An optional function that is called when the Deferred is rejected.\n */\nthen&lt;U&gt;(doneFilter: (value?: T, ...values: any[]) =&gt; U|JQueryPromise&lt;U&gt;, failFilter?: (...reasons: any[]) =&gt; any, progressFilter?: (...progression: any[]) =&gt; any): JQueryPromise&lt;U&gt;;\n\n/**\n * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\n * \n * @param doneFilter A function that is called when the Deferred is resolved.\n * @param failFilter An optional function that is called when the Deferred is rejected.\n */\nthen(doneFilter: (value?: T, ...values: any[]) =&gt; void, failFilter?: (...reasons: any[]) =&gt; any, progressFilter?: (...progression: any[]) =&gt; any): JQueryPromise&lt;void&gt;;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 23981, "user_id": 1157814, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/Nk7LK.png?s=128&g=1", "display_name": "g.pickardou", "link": "https://stackoverflow.com/users/1157814/g-pickardou"}, "is_accepted": false, "score": 1, "last_activity_date": 1432632875, "creation_date": 1432632875, "answer_id": 30454763, "question_id": 29320838, "link": "https://stackoverflow.com/questions/29320838/jquery-typescript-definition-file-gives-error/30454763#30454763", "title": "jquery typescript definition file gives error", "body": "<p>Had the same error, however just in case if I use also the kendo.all.d.ts\nMy kendo version is: 2015.1.408</p>\n\n<p>Commenting out the conflicting declaration in kendo.all.d.ts solves this issue with minimal impact:</p>\n\n<pre><code>// This is line 15266 in my kendo.all.d.ts\n//interface JQueryPromise&lt;T&gt; {\n//    pipe(doneFilter?: (x: any) =&gt; any, failFilter?: (x: any) =&gt; any, progressFilter?: (x: any) =&gt; any): JQueryPromise&lt;T&gt;;\n//    then(doneCallbacks: any, failCallbacks: any, progressCallbacks?: any): JQueryPromise&lt;T&gt;;\n//}\n</code></pre>\n\n<p>This solution is based on <a href=\"https://github.com/borisyankov/DefinitelyTyped/issues/3976\" rel=\"nofollow\">issue 3976 at DefinitelyTyped</a></p>\n"}], "owner": {"reputation": 153, "user_id": 971374, "user_type": "registered", "accept_rate": 7, "profile_image": "https://graph.facebook.com/100000725827461/picture?type=large", "display_name": "user971374", "link": "https://stackoverflow.com/users/971374/user971374"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 800, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1432632875, "creation_date": 1427566756, "question_id": 29320838, "link": "https://stackoverflow.com/questions/29320838/jquery-typescript-definition-file-gives-error", "title": "jquery typescript definition file gives error", "body": "<p>I have 2 Visual studio projects in the same solution, I have updated to the latest jquery 2-1-3 and typescript definition 2-2-3, but I get an error, \nBuild: Interface 'JQueryPromise' incorrectly extends interface 'JQueryGenericPromise </p>\n\n<p>funny thing I only get this error in one project. \nany ideas thanks</p>\n"}, {"tags": ["typescript", "aurelia"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1427679887, "creation_date": 1427679887, "answer_id": 29337194, "question_id": 29317822, "link": "https://stackoverflow.com/questions/29317822/need-guidance-on-strategy-for-creating-typescript-public-type-definitions/29337194#29337194", "title": "need guidance on strategy for creating typescript public type definitions", "body": "<p>Assuming you have <code>origin.d.ts</code>: </p>\n\n<pre><code>declare module 'aurelia/origin' {\n    export class Origin {\n    }\n}\n</code></pre>\n\n<p>You can import / reexport it as <code>aurelia.d.ts</code>: </p>\n\n<pre><code>/// &lt;reference path=\"./origin/origin.d.ts\"/&gt;\ndeclare module 'aurelia' {\n    export * from 'aurelia/origin';\n}\n</code></pre>\n\n<hr>\n\n<p>Verified from usage: </p>\n\n<pre><code>/// &lt;reference path=\"./aurelia\"/&gt;\n\nimport {Origin as Origin1} from \"aurelia/origin\";\nimport {Origin as Origin2} from \"aurelia\";\n</code></pre>\n\n<p>Note: the <em>exact</em> answer depend on how you want to use the definitions in Typescript. </p>\n\n<p>Tracked here : <a href=\"https://github.com/Microsoft/TypeScript/issues/2516#issuecomment-87509666\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/2516#issuecomment-87509666</a></p>\n"}], "owner": {"reputation": 1034, "user_id": 385426, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/869065593aa1af3e88c6b5ccbb55b9c1?s=128&d=identicon&r=PG", "display_name": "Mike Graham", "link": "https://stackoverflow.com/users/385426/mike-graham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 513, "favorite_count": 1, "accepted_answer_id": 29337194, "answer_count": 1, "score": 3, "last_activity_date": 1427679887, "creation_date": 1427549991, "question_id": 29317822, "link": "https://stackoverflow.com/questions/29317822/need-guidance-on-strategy-for-creating-typescript-public-type-definitions", "title": "need guidance on strategy for creating typescript public type definitions", "body": "<p>i am seeking guidance on creating public type definitions for the aurelia framework - <a href=\"https://github.com/aurelia/\" rel=\"nofollow noreferrer\">aurelia on github here</a> / <a href=\"http://aurelia.io/\" rel=\"nofollow noreferrer\">aurelia website here</a> / <a href=\"https://github.com/cmichaelgraham/aurelia-typescript\" rel=\"nofollow noreferrer\">aurelia typescript samples on github</a></p>\n\n<p>i am struggling with the following pattern:</p>\n\n<p><img src=\"https://i.stack.imgur.com/Yvw0r.jpg\" alt=\"repository pattern\"></p>\n\n<p>typescript compiler wont allow export declaration in an ambient external module declaration that references an external module through relative external module name</p>\n\n<p>the repos use systemjs and jspm to resolve aurelia-metadata. i want to use ambient module declarations to expose the types from aurelia-metadata</p>\n\n<p>what i'm trying to achieve is effectively the same as copying the contents of origin.d.ts, resource-type.d.ts, and metadata.d.ts into the ambient module declaration in aurelia.d.ts.</p>\n\n<p>note that ./metadata/index.js basically publishes the public interface through its exports, and that is precisely what i want to expose in the ambient module declaration</p>\n\n<p>i could surrender and manually copy the info from the compiler-generated origin.d.ts, resource-type.d.ts, and metadata.d.ts into the ambient module declaration, but have been trying to find a way to just expose what is exported in index.d.ts, as that is the public api for the module in the repo.</p>\n\n<p>the issue with the manual approach is that there are already 20+ libraries, they will continue to grow, and if updating the api can't be done using the compiler, i will be forever tracking the changes in the repos and updating the api manually.</p>\n\n<p>i believe that the public api for each repo must be an ambient module because the actual path to the corresponding import (aurelia-metadata in this case) is resolved using systemjs loader (the module dependencies are managed using jspm)</p>\n"}, {"tags": ["angularjs", "function", "class", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1427522692, "creation_date": 1427522692, "answer_id": 29314225, "question_id": 29313518, "link": "https://stackoverflow.com/questions/29313518/typescript-class-that-also-acts-as-a-function-type/29314225#29314225", "title": "TypeScript class that also acts as a function type", "body": "<p>You cannot do that with a <em>TypeScript</em> class. You will need to fall back to using a simple function. </p>\n\n<p>Not every interface you can define in TypeScript can be implemented using a TypeScript class. This is one of those cases. </p>\n"}, {"tags": [], "owner": {"reputation": 10126, "user_id": 81723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04b736323c221528a5eaad9224fac226?s=128&d=identicon&r=PG", "display_name": "Sly_cardinal", "link": "https://stackoverflow.com/users/81723/sly-cardinal"}, "is_accepted": false, "score": 0, "last_activity_date": 1427629254, "creation_date": 1427629254, "answer_id": 29328653, "question_id": 29313518, "link": "https://stackoverflow.com/questions/29313518/typescript-class-that-also-acts-as-a-function-type/29328653#29328653", "title": "TypeScript class that also acts as a function type", "body": "<p>basarat is correct that you should use a regular function to implement the <code>IHttpService</code> interface.</p>\n\n<p>For future reference, here is one of implementing that interface and using it in Angular:</p>\n\n<pre><code>interface IRequestConfig {}\ninterface IHttpPromise&lt;T&gt; {\n    then: (resolve?: (value: T) =&gt; any, reject?) =&gt; IHttpPromise&lt;T&gt;;\n}\n\ninterface IHttpService {\n    &lt;T&gt;(config: IRequestConfig): IHttpPromise&lt;T&gt;;\n}\n\n\nfunction MyHttpService&lt;T&gt;(config: IRequestConfig): IHttpPromise&lt;T&gt;{\n    // Define service behaviour here.\n}\n\n\nangular.module('MyModule')\n    .service('MyHttpService', MyHttpService)\n    .controller('MyController', function(MyHttpService: IHttpService){\n\n        MyHttpService&lt;MyType&gt;({\n            // Implement `IRequestConfig` here. \n        }).then(function(value){\n            // Accces properties on `value`.\n        });\n\n    });\n</code></pre>\n"}], "owner": {"reputation": 313, "user_id": 4723015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/981dae8b4afb7dc6f330638e8d446446?s=128&d=identicon&r=PG", "display_name": "cpowers", "link": "https://stackoverflow.com/users/4723015/cpowers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 29314225, "answer_count": 2, "score": 1, "last_activity_date": 1427629254, "creation_date": 1427515132, "question_id": 29313518, "link": "https://stackoverflow.com/questions/29313518/typescript-class-that-also-acts-as-a-function-type", "title": "TypeScript class that also acts as a function type", "body": "<p>In attempting to implement angular's IHttpService, I am not sure how one would handle the following function. </p>\n\n<pre><code>interface IHttpService {\n    &lt;T&gt;(config: IRequestConfig): IHttpPromise&lt;T&gt;;\n}\n\nclass MyHttpService implements IHttpService\n{\n    // The following does not work\n    &lt;T&gt;(config: IRequestConfig): IHttpPromise&lt;T&gt; \n    {\n    }\n}\n</code></pre>\n\n<p>Is this even possible?</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 650, "user_id": 2342681, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/brdpW.jpg?s=128&g=1", "display_name": "Luis Crespo", "link": "https://stackoverflow.com/users/2342681/luis-crespo"}, "edited": false, "score": 0, "creation_date": 1481021880, "post_id": 29313621, "comment_id": 69195871, "body": "It is a very big drawback that typescript forces you to use array notation, i.e.  <code>obj[&#39;property1&#39;]</code>, when it could let you use the standard <code>obj.property1</code> notation. Is there any alternative / workaround for that?"}, {"owner": {"reputation": 10126, "user_id": 81723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04b736323c221528a5eaad9224fac226?s=128&d=identicon&r=PG", "display_name": "Sly_cardinal", "link": "https://stackoverflow.com/users/81723/sly-cardinal"}, "reply_to_user": {"reputation": 650, "user_id": 2342681, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/brdpW.jpg?s=128&g=1", "display_name": "Luis Crespo", "link": "https://stackoverflow.com/users/2342681/luis-crespo"}, "edited": false, "score": 0, "creation_date": 1481028198, "post_id": 29313621, "comment_id": 69199780, "body": "@LuisCrespo to use dot notation you can use a standard interface definition (like I show at the bottom of my answer) but you will have to list all members so TypeScript knows about them. You can add named properties to a dictionary interface as long as the properties are all of the same type."}, {"owner": {"reputation": 650, "user_id": 2342681, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/brdpW.jpg?s=128&g=1", "display_name": "Luis Crespo", "link": "https://stackoverflow.com/users/2342681/luis-crespo"}, "edited": false, "score": 0, "creation_date": 1481180901, "post_id": 29313621, "comment_id": 69274668, "body": "@Sly_cardinal The dictionary interface is great when you don&#39;t know which properties are there going to be in your objects, but you do know that they all must be of the same type. The standard interface definition forces you to define those properties in advance."}], "tags": [], "owner": {"reputation": 10126, "user_id": 81723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04b736323c221528a5eaad9224fac226?s=128&d=identicon&r=PG", "display_name": "Sly_cardinal", "link": "https://stackoverflow.com/users/81723/sly-cardinal"}, "is_accepted": true, "score": 2, "last_activity_date": 1427516162, "creation_date": 1427516162, "answer_id": 29313621, "question_id": 29312949, "link": "https://stackoverflow.com/questions/29312949/how-to-describe-this-object-using-an-interface/29313621#29313621", "title": "How to describe this object using an interface?", "body": "<p>If you want to define <code>MyObject</code> as an object that holds an arbitrary number of properties all of the same type then you can use the <a href=\"http://www.typescriptlang.org/Handbook#interfaces-array-types\" rel=\"nofollow\"><code>Dictionary</code> array type definition (TypeScript documentation)</a>.</p>\n\n<p>Here is a <a href=\"http://www.typescriptlang.org/Playground#src=%2F**%0D%0A%20*%20Define%20a%20dictionary%20interface.%0D%0A%20*%20%0D%0A%20*%20Arbitrary%20properties%20may%20be%20added%20as%20long%20as%0D%0A%20*%20they%20satisfy%20the%20%60IMyProperty%60%20interface.%0D%0A%20*%2F%0D%0Ainterface%20IMyObjectDictionary%20%7B%0D%0A%09%5Bproperty%3A%20string%5D%3A%20IMyProperty%3B%0D%0A%7D%0D%0A%0D%0A%0D%0Ainterface%20IMyProperty%20%7B%0D%0A%09name%3A%20string%3B%0D%0A%09args%3A%20number%5B%5D%3B%0D%0A%7D%0D%0A%0D%0A%0D%0A%2F%2F%20Define%20%60obj1%60%20to%20be%20an%20%60IMyObjectDictionary%60.%0D%0A%2F%2F%20%0D%0A%2F%2F%20All%20properties%20must%20be%20%60IMyProperty%60%20instances.%0D%0Avar%20obj1%3A%20IMyObjectDictionary%20%3D%20%7B%0D%0A%09property1%3A%20%7Bname%3A%20&#39;&#39;%2C%20args%3A%20%5B%5D%7D%0D%0A%09%0D%0A%09%2F%2F%20You%20define%20as%20many%20%60IMyProperty%60%20properties%0D%0A%09%2F%2F%20as%20needed.%0D%0A%09%0D%0A%09%2F%2F%20But%20all%20properties%20*must*%20match%20the%20%60IMyProperty%60%20interface.%0D%0A%09%2F%2F%2Cproperty2%3A%20number%09%2F%2F%20%3C--%20This%20would%20give%20a%20compiler%20error%20because%20it&#39;s%20not%20an%20%60IMyProperty%60.%0D%0A%7D%3B%0D%0A%0D%0A%2F%2F%20Must%20access%20properties%20using%20array%20notation.%0D%0Avar%20b%20%3D%20obj1%5B&#39;property1&#39;%5D%3B%0D%0A%0D%0A%2F%2F%20TypeScript%20knows%20that%20%60b%60%20is%20an%20%60IMyProperty%60.%0D%0Ab.name%3B%09%2F%2F%20Valid%0D%0Ab.args%3B%20%2F%2F%20Valid%0D%0A%0D%0A%2F%2F%20b.temp%3B%09%2F%2F%20%3C--%20Invalid%20-%20%60temp%60%20does%20not%20exist%20on%20%60IMyProperty%60.%0D%0A%2F%2F%20b%20%3D%201%3B%20%2F%2F%20%3C--%20This%20would%20give%20a%20compiler%20error.%20&#39;number&#39;%20is%20not%20an%20%60IMyProperty%60.\" rel=\"nofollow\" title=\"TypeScript playground example\">Typescript playground example</a> of the dictionary interface:</p>\n\n<pre><code>/**\n * Define a dictionary interface.\n */\ninterface IMyObjectDictionary {\n    [property: string]: IMyProperty;\n}\n\n\ninterface IMyProperty {\n    name: string;\n    args: number[];\n}\n\n\n// Define `obj1` to be an `IMyObjectDictionary`.\n// \n// All properties must be `IMyProperty` instances.\nvar obj1: IMyObjectDictionary = {\n    property1: {name: '', args: []}\n\n    // You define as many `IMyProperty` properties\n    // as needed.\n\n    // But all properties *must* match the `IMyProperty` interface.\n    //,property2: number    // &lt;-- This would give a compiler error because it's not an `IMyProperty`.\n};\n\n// Must access properties using array notation.\nvar b = obj1['property1'];\n\n// TypeScript knows that `b` is an `IMyProperty`.\nb.name; // Valid\nb.args; // Valid\n\n// b.temp;  // &lt;-- Invalid - `temp` does not exist on `IMyProperty`.\n// b = 1; // &lt;-- This would give a compiler error. 'number' is not an `IMyProperty`.\n</code></pre>\n\n<p>If you need properties of mixed types then you will need to use a regular interface definition.</p>\n\n<p>e.g. </p>\n\n<pre><code>interface IMyObjectDictionary {\n    property1: IMyProperty;\n    property2: IMyProperty;\n    // ...\n\n    // Allows properties that aren't `IMyProperty`\n    // but you have to define all properties.\n    index: number;\n}\n</code></pre>\n"}], "owner": {"reputation": 16306, "user_id": 1748450, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/3decb53828ce2c77a7fb28f7fd987234?s=128&d=identicon&r=PG", "display_name": "Chin", "link": "https://stackoverflow.com/users/1748450/chin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 29313621, "answer_count": 1, "score": 0, "last_activity_date": 1427516162, "creation_date": 1427509173, "question_id": 29312949, "link": "https://stackoverflow.com/questions/29312949/how-to-describe-this-object-using-an-interface", "title": "How to describe this object using an interface?", "body": "<p>I have an object that looks like this:</p>\n\n<pre><code>var MyObject = {\n    property1: {\n        name: \"name1\",\n        args: [1, 2, 3, 4],\n    },\n\n    property2: {\n        name: \"name2\",\n        args: [1, 1],\n    },\n    ...\n}\n</code></pre>\n\n<p><code>MyObject</code> contains many properties, each of them is an object that has a string and an array of numbers.</p>\n\n<p>Is it possible to create an interface that describe the type of MyObject?</p>\n"}, {"tags": ["typescript", "definition", "extends"], "comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1427489412, "post_id": 29309735, "comment_id": 46813733, "body": "It&#39;s not ideal, but this is the way I do it: <a href=\"http://stackoverflow.com/a/23024723/188246\">stackoverflow.com/a/23024723/188246</a> -- Maybe there&#39;s a better way that someone knows though?"}, {"owner": {"reputation": 989, "user_id": 2760155, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ae9655be3b7cc94c8325b8d1e91b31?s=128&d=identicon&r=PG", "display_name": "Blake Bowen", "link": "https://stackoverflow.com/users/2760155/blake-bowen"}, "reply_to_user": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1427492776, "post_id": 29309735, "comment_id": 46815200, "body": "I could get it working for the <code>Bar</code> class, but not the <code>Baz</code> class."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1427493140, "post_id": 29309735, "comment_id": 46815315, "body": "oh yeah, it doesn&#39;t work for more than one layer of inheritance :("}], "answers": [{"tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": true, "score": 1, "last_activity_date": 1427492283, "creation_date": 1427492283, "answer_id": 29310616, "question_id": 29309735, "link": "https://stackoverflow.com/questions/29309735/method-chaining-when-extending-typescript-classes/29310616#29310616", "title": "Method chaining when extending TypeScript classes", "body": "<p>This isn't supported by the type system yet. <a href=\"https://github.com/Microsoft/TypeScript/issues/285\" rel=\"nofollow\">See issue #285 in GitHub for tracking</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 989, "user_id": 2760155, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ae9655be3b7cc94c8325b8d1e91b31?s=128&d=identicon&r=PG", "display_name": "Blake Bowen", "link": "https://stackoverflow.com/users/2760155/blake-bowen"}, "is_accepted": false, "score": 1, "last_activity_date": 1430687600, "creation_date": 1430687600, "answer_id": 30019474, "question_id": 29309735, "link": "https://stackoverflow.com/questions/29309735/method-chaining-when-extending-typescript-classes/30019474#30019474", "title": "Method chaining when extending TypeScript classes", "body": "<p>I was able to achieve this by modifying David's example a little bit. It's not ideal, but it works.</p>\n\n<pre><code>declare class IFoo&lt;T&gt; {\n    add(): T;\n}\n\ndeclare class IBar&lt;T&gt; extends IFoo&lt;T&gt; {\n    remove(): T;\n}\n\ndeclare class IBaz&lt;T&gt; extends IBar&lt;T&gt; {\n    destroy(): T;\n}\n\ndeclare class Foo extends IFoo&lt;Foo&gt; { }\ndeclare class Bar extends IBar&lt;Bar&gt; { }\ndeclare class Baz extends IBaz&lt;Baz&gt; { }\n\n// Okay\nvar foo = new Foo().add();\nvar bar = new Bar().add().remove();\nvar baz = new Baz().add().remove().destroy();\n</code></pre>\n\n<p><a href=\"http://www.typescriptlang.org/Playground#src=declare%20class%20IFoo%3CT%3E%20%7B%0A%20%20%20%20add()%3A%20T%3B%0A%7D%0A%0Adeclare%20class%20IBar%3CT%3E%20extends%20IFoo%3CT%3E%20%7B%0A%20%20%20%20remove()%3A%20T%3B%0A%7D%0A%0Adeclare%20class%20IBaz%3CT%3E%20extends%20IBar%3CT%3E%20%7B%0A%20%20%20%20destroy()%3A%20T%3B%0A%7D%0A%0Adeclare%20class%20Foo%20extends%20IFoo%3CFoo%3E%20%7B%20%7D%0Adeclare%20class%20Bar%20extends%20IBar%3CBar%3E%20%7B%20%7D%0Adeclare%20class%20Baz%20extends%20IBaz%3CBaz%3E%20%7B%20%7D%0A%0A%2F%2F%20Okay%0Avar%20foo%20%3D%20new%20Foo().add()%3B%0Avar%20bar%20%3D%20new%20Bar().add().remove()%3B%0Avar%20baz%20%3D%20new%20Baz().add().remove().destroy()%3B%0A\" rel=\"nofollow\">Working example</a></p>\n"}], "owner": {"reputation": 989, "user_id": 2760155, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ae9655be3b7cc94c8325b8d1e91b31?s=128&d=identicon&r=PG", "display_name": "Blake Bowen", "link": "https://stackoverflow.com/users/2760155/blake-bowen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1884, "favorite_count": 0, "accepted_answer_id": 29310616, "answer_count": 2, "score": 1, "last_activity_date": 1430687600, "creation_date": 1427488446, "question_id": 29309735, "link": "https://stackoverflow.com/questions/29309735/method-chaining-when-extending-typescript-classes", "title": "Method chaining when extending TypeScript classes", "body": "<p>Is there an easy way to change the return type of a method when extending a class without having to explicitly set it in each new definition? I'd like to simplify my definitions that look like this...</p>\n\n<pre><code>declare class Foo {\n    add(): Foo;\n}\n\ndeclare class Bar extends Foo {\n    add(): Bar;\n    remove(): Bar;\n}\n\ndeclare class Baz extends Bar {\n    add(): Baz;\n    remove(): Baz;\n    destroy(): Baz;\n}\n\n// Usage...\nvar foo = new Foo().add();    \nvar bar = new Bar().add().remove();    \nvar baz = new Baz().add().remove().destroy();\n</code></pre>\n"}, {"tags": ["knockout.js", "typescript", "devextreme"], "comments": [{"owner": {"reputation": 37731, "user_id": 392102, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/A0L1n.jpg?s=128&g=1", "display_name": "Roy J", "link": "https://stackoverflow.com/users/392102/roy-j"}, "edited": false, "score": 5, "creation_date": 1427474319, "post_id": 29298107, "comment_id": 46805828, "body": "You&#39;re calling return before you get to the computed definition."}], "answers": [{"tags": [], "owner": {"reputation": 667, "user_id": 2470594, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ba4324024d632b0ce093739f17023b?s=128&d=identicon&r=PG", "display_name": "Svakinn", "link": "https://stackoverflow.com/users/2470594/svakinn"}, "is_accepted": true, "score": 0, "last_activity_date": 1430329237, "last_edit_date": 1430329237, "creation_date": 1430328056, "answer_id": 29950446, "question_id": 29298107, "link": "https://stackoverflow.com/questions/29298107/ko-computed-in-typescript/29950446#29950446", "title": "ko.computed in TypeScript", "body": "<p>Since you are moving to TypesSript you should use the opertunity to think object oriented and use classes and modules.  That way you produce much more readable code.\nYour class could look like this:\n</p>\n\n<pre><code>import mm_data = require('pathToMyDataClass');\nimport mm_globals = require('pathToMyGlobals');\n\nexport interface ITrackerParms {\n    id: any;\n}\nexport class Trackers {\n    constructor(parms: ITrackerParms) {\n        this.parms = parms;\n        this.dsTrackers = new DevExpress.data.DataSource({\n            store: mm_globals.MyGlobals.oTrackerManager.getTrackerCustomStore(),\n            searchExpr: \"Bezeichnung\"\n        });\n        this.searchString.extend({ throttle: 500 });\n        this.searchString.subscribe((val: string) =&gt; {\n            this.dsTrackers.filter(\"Bezeichnung\", \"contains\", val);\n            this.dsTrackers.pageIndex(0);\n            this.dsTrackers.load();\n        }, this);\n    }\n    public parms: ITrackerParms;\n    public dsTrackers: mm_data.ITrackerSource; //interface from your datasource module\n    public showSearch = ko.observable(false);\n    public searchString = ko.observable('');\n    public find() : void {\n        this.showSearch(!this.showSearch());\n        this.searchString('');\n    }\n}\n</code></pre>\n\n<p>But your problem is based on making sure that the subscrptions and computeds are set in the constructor of the class (or what in your example equals constructor).\nIn fact you do not need to use compuded in your example since you can extend the Knockout observable for throtteling.</p>\n"}], "owner": {"reputation": 87, "user_id": 1539859, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5e597c7562e984d32ac800e7fb19a6ba?s=128&d=identicon&r=PG", "display_name": "gogcam", "link": "https://stackoverflow.com/users/1539859/gogcam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 631, "favorite_count": 0, "accepted_answer_id": 29950446, "answer_count": 1, "score": 0, "last_activity_date": 1430329237, "creation_date": 1427451064, "question_id": 29298107, "link": "https://stackoverflow.com/questions/29298107/ko-computed-in-typescript", "title": "ko.computed in TypeScript", "body": "<p>I've the following problem. The following code works in JS:</p>\n\n<pre><code>Application1.Trackers = function (params) {\n\nvar viewModel = {\n    dsTrackers: new DevExpress.data.DataSource({\n        store: Application1.db,\n        searchExpr: \"Bezeichnung\"\n    }),\n\n    searchString: ko.observable(''),\n    find: function () {\n        viewModel.showSearch(!viewModel.showSearch());\n        viewModel.searchString('');\n    },\n    showSearch: ko.observable(false),\n};\n\nko.computed(function () {\n    return viewModel.searchString();\n}).extend({\n    throttle: 500\n}).subscribe(function (value) {\n    viewModel.dsTrackers.filter(\"Bezeichnung\", \"contains\", value);\n    viewModel.dsTrackers.pageIndex(0);\n    viewModel.dsTrackers.load();\n});\n\nreturn viewModel;\n</code></pre>\n\n<p>};</p>\n\n<p>In Typescript I tried it this way, but this doesn't work:</p>\n\n<pre><code>module MyExtremeApp {\nexport function Trackers(params: { id: any }) {\n    return {\n        dsTrackers: new DevExpress.data.DataSource({\n            store: MyGlobals.oTrackerManager.getTrackerCustomStore(),\n            searchExpr: \"Bezeichnung\"\n        }),\n\n        searchString: ko.observable(''),\n        find: function () {\n            this.showSearch(!this.showSearch());\n            this.searchString('');\n        },\n        showSearch: ko.observable(false),\n    };\n\n    ko.computed(() =&gt; {\n        return this.searchString();\n    }).extend({\n        throttle: 500\n    }).subscribe(function (value) {\n        this.dsTrackers.filter(\"Bezeichnung\", \"contains\", value);\n        this.dsTrackers.pageIndex(0);\n        this.dsTrackers.load();\n    });\n}\n</code></pre>\n\n<p>}</p>\n\n<p>It never jumps into ko.computed(). Does anyone has an idea why not?\n<em>I'm new to typescript</em></p>\n\n<p>Thank you very much.\nBest Regards</p>\n"}, {"tags": ["javascript", "date", "typescript"], "comments": [{"owner": {"reputation": 126505, "user_id": 1668533, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NQbPb.jpg?s=128&g=1", "display_name": "Satpal", "link": "https://stackoverflow.com/users/1668533/satpal"}, "edited": false, "score": 0, "creation_date": 1427448589, "post_id": 29297257, "comment_id": 46789833, "body": "If no arguments are provided, the constructor creates a JavaScript Date object for the current date and time according to system settings."}, {"owner": {"reputation": 229185, "user_id": 251311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b6b0ca5d4ef200ec8e3cd1fa2aefd836?s=128&d=identicon&r=PG", "display_name": "zerkms", "link": "https://stackoverflow.com/users/251311/zerkms"}, "edited": false, "score": 1, "creation_date": 1427448608, "post_id": 29297257, "comment_id": 46789846, "body": "It specifies the timezone name. Just run <code>new Date()</code> and see yourself"}, {"owner": {"reputation": 3636, "user_id": 697354, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/6uyr7.png?s=128&g=1", "display_name": "Sami", "link": "https://stackoverflow.com/users/697354/sami"}, "edited": false, "score": 0, "creation_date": 1427448918, "post_id": 29297257, "comment_id": 46790017, "body": "And you can use <code>getTimezoneOffset()</code> to get the offset in minutes between GMT and local time"}, {"owner": {"reputation": 11161, "user_id": 1908967, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/vPwiV.jpg?s=128&g=1", "display_name": "Grokify", "link": "https://stackoverflow.com/users/1908967/grokify"}, "edited": false, "score": 0, "creation_date": 1427449346, "post_id": 29297257, "comment_id": 46790268, "body": "It&#39;s still a JavaScript Date object that&#39;s getting created in the end."}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "reply_to_user": {"reputation": 11161, "user_id": 1908967, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/vPwiV.jpg?s=128&g=1", "display_name": "Grokify", "link": "https://stackoverflow.com/users/1908967/grokify"}, "edited": false, "score": 0, "creation_date": 1427449980, "post_id": 29297257, "comment_id": 46790697, "body": "@Grokify: Yes, and the statement &quot;In my Javascript I check...&quot; is still incorrect."}], "answers": [{"tags": [], "owner": {"reputation": 2451, "user_id": 3493433, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/Rv0Vj.jpg?s=128&g=1", "display_name": "Valentin Montmirail", "link": "https://stackoverflow.com/users/3493433/valentin-montmirail"}, "is_accepted": false, "score": 1, "last_activity_date": 1427448862, "last_edit_date": 1427448862, "creation_date": 1427448756, "answer_id": 29297335, "question_id": 29297257, "link": "https://stackoverflow.com/questions/29297257/what-time-zone-does-the-javascript-new-date-use/29297335#29297335", "title": "What time zone does the JavaScript new Date() use?", "body": "<p>By default, JS will use your browser timezone, but if you want to change the display, you can for example use the <code>toString()</code> function ;)</p>\n\n<pre><code>var d1=new Date();\nd1.toString('yyyy-MM-dd');       //returns \"2015-03-27\" in IE, but not FF or Chrome\nd1.toString('dddd, MMMM ,yyyy')  //returns \"Friday, March 27,2015\" in IE, but not FF or Chrome\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "is_accepted": false, "score": 1, "last_activity_date": 1427448792, "creation_date": 1427448792, "answer_id": 29297355, "question_id": 29297257, "link": "https://stackoverflow.com/questions/29297257/what-time-zone-does-the-javascript-new-date-use/29297355#29297355", "title": "What time zone does the JavaScript new Date() use?", "body": "<blockquote>\n  <p>What time zone does the Javascript new Date() use?</p>\n</blockquote>\n\n<p><code>Date</code> objects work with the number of milliseconds since The Epoch (Jan 1st 1970 at midnight GMT). They have methods like <code>getDay</code> and <code>getMonth</code> and such that use the local timezone of the JavaScript engine, and also functions like <code>getUTCDay</code> and <code>getUTCMonth</code> that use UTC (loosely, GMT).</p>\n\n<p>If you're parsing a string, you need to be sure that the string is in a format that <code>Date</code> knows how to parse. The only <strong>defined</strong> format in the specification is <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15\" rel=\"nofollow\">a simplified derivative of ISO-8601</a>, but it was only added in ES5 and they got it wrong in the spec about what should happen if there's no timezone indicator on the string, so you need to be sure to always have a timezone indicator on it (for now, ES6 will fix it and eventually engines will reliably use ES6 behavior). Those strings look like this:</p>\n\n<pre><code>\"2015-03-27T09:32:54.427Z\"\n</code></pre>\n\n<p>You can produce that format using the <code>toISOString</code> method.</p>\n"}, {"comments": [{"owner": {"reputation": 119030, "user_id": 16940, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/7fc2db839382b30434539fbc967c498e?s=128&d=identicon&r=PG", "display_name": "Simon_Weaver", "link": "https://stackoverflow.com/users/16940/simon-weaver"}, "edited": false, "score": 1, "creation_date": 1561621598, "post_id": 29297375, "comment_id": 100126694, "body": "It&#39;s really kind of misleading to simply say &#39;it uses the client&#39;s local time&#39;. The date object itself (as shown by your link) is the <code>number of milliseconds since 1 January 1970 UTC</code> - so therefore the Date itself doesn&#39;t have a timezone - it&#39;s just a number. It&#39;s only when you display it with toString that you see YOUR timezone. I also think getTimezoneOffset() is a bit misleading because it implies the Date instance knows its timezone - but really it doesn&#39;t. Correct me if I&#39;m wrong though :-)"}, {"owner": {"reputation": 11161, "user_id": 1908967, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/vPwiV.jpg?s=128&g=1", "display_name": "Grokify", "link": "https://stackoverflow.com/users/1908967/grokify"}, "reply_to_user": {"reputation": 119030, "user_id": 16940, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/7fc2db839382b30434539fbc967c498e?s=128&d=identicon&r=PG", "display_name": "Simon_Weaver", "link": "https://stackoverflow.com/users/16940/simon-weaver"}, "edited": false, "score": 0, "creation_date": 1561656972, "post_id": 29297375, "comment_id": 100146766, "body": "While the MDN page says &quot;Date objects use a Unix Time Stamp, an integer value&quot; and &quot;A JavaScript date is fundamentally specified as the number of milliseconds that have elapsed since midnight on January 1, 1970, UTC&quot;, it also says both &quot;When no parameters are provided, the newly-created Date object represents the current date and time, specified in the local time zone, as of the time of instantiation.&quot; and &quot;It&#39;s important to keep in mind that the date and time is stored in the local time zone&quot;."}], "tags": [], "owner": {"reputation": 11161, "user_id": 1908967, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/vPwiV.jpg?s=128&g=1", "display_name": "Grokify", "link": "https://stackoverflow.com/users/1908967/grokify"}, "is_accepted": true, "score": 16, "last_activity_date": 1570721859, "last_edit_date": 1570721859, "creation_date": 1427448858, "answer_id": 29297375, "question_id": 29297257, "link": "https://stackoverflow.com/questions/29297257/what-time-zone-does-the-javascript-new-date-use/29297375#29297375", "title": "What time zone does the JavaScript new Date() use?", "body": "<p>JavaScript will use the client's local time but it also has UTC / GMT methods. The following is from Mozilla:</p>\n\n<blockquote>\n  <p>The JavaScript Date object supports a number of UTC (universal) methods, as well as local time methods. UTC, also known as Greenwich Mean Time (GMT), refers to the time as set by the World Time Standard. The local time is the time known to the computer where JavaScript is executed.</p>\n</blockquote>\n\n<p>While methods are available to access date and time in both UTC and the localtime zone, the date and time are stored in the local time zone:</p>\n\n<blockquote>\n  <p><strong>Note:</strong> It's important to keep in mind that the date and time is stored in the local time zone, and that the basic methods to fetch the date and time or its components all work in the local time zone as well.</p>\n</blockquote>\n\n<p>Reference: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\" rel=\"noreferrer\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date</a></p>\n"}, {"tags": [], "owner": {"reputation": 99, "user_id": 1643332, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/7BdN9.jpg?s=128&g=1", "display_name": "Arm\u012bns Nikolajevs", "link": "https://stackoverflow.com/users/1643332/arm%c4%abns-nikolajevs"}, "is_accepted": false, "score": 2, "last_activity_date": 1427450360, "creation_date": 1427450360, "answer_id": 29297897, "question_id": 29297257, "link": "https://stackoverflow.com/questions/29297257/what-time-zone-does-the-javascript-new-date-use/29297897#29297897", "title": "What time zone does the JavaScript new Date() use?", "body": "<p>As other said, JavaScript uses clients system time, but you can create date object from server time, so every client will get the same current time.</p>\n\n<pre><code>var date = new Date(\"&lt;?php echo date(\"Y-m-d H:i:s\");?&gt;\");\n</code></pre>\n\n<p>It will work only on page load. If you want to check later for dates still valid, then you need to synchronize current date with server date every couple of seconds.</p>\n"}], "owner": {"reputation": 19458, "user_id": 1422604, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ca45dd8df3ec5f4535d8bc09e59c4d2e?s=128&d=identicon&r=PG", "display_name": "Alan2", "link": "https://stackoverflow.com/users/1422604/alan2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 27774, "favorite_count": 1, "accepted_answer_id": 29297375, "answer_count": 4, "score": 18, "last_activity_date": 1570721859, "creation_date": 1427448488, "last_edit_date": 1561656578, "question_id": 29297257, "link": "https://stackoverflow.com/questions/29297257/what-time-zone-does-the-javascript-new-date-use", "title": "What time zone does the JavaScript new Date() use?", "body": "<p>I have a C# application that return in JSON an expiration date of an authentication token like this:</p>\n\n<pre><code>\"expirationDate\":\"Fri, 27 Mar 2015 09:12:45 GMT\"\n</code></pre>\n\n<p>In my TypeScript I check that the date is still valid here:</p>\n\n<pre><code>isAuthenticationExpired = (expirationDate: string): boolean =&gt; {\n    var now = new Date().valueOf();\n    var exp: any = Date.parse(expirationDate).valueOf();\n    return exp - now &lt;= 0;\n};\n</code></pre>\n\n<p>What I would like to know is what time zone does <code>new Date()</code> use when it is returning a date?</p>\n"}, {"tags": ["typescript", "promise", "type-safety"], "answers": [{"comments": [{"owner": {"reputation": 17887, "user_id": 162273, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/430cb584ada70347d6bdaabdcf67390c?s=128&d=identicon&r=PG", "display_name": "Jason Kleban", "link": "https://stackoverflow.com/users/162273/jason-kleban"}, "edited": false, "score": 0, "creation_date": 1427401053, "post_id": 29287864, "comment_id": 46773249, "body": "Awesome answer!   In Typescript, couldn&#39;t we just a <code>Promise&lt;T&gt;</code> extends <code>Promise&lt;T, any&gt;</code> and it would be happy again for the &quot;lazy&quot;?  Plus, since Typescript&#39;s type checking is structural, we could just indicate <code>Promise&lt;MyT, Exception&gt;</code> or <code>Promise&lt;MyT, FullException | string | XhrOrWhatever$AjaxThrows&gt;</code> at worst and expect throwers to behave themselves?"}, {"owner": {"reputation": 245145, "user_id": 1348195, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f6dca2295546af21e1cde8e68f2d49bd?s=128&d=identicon&r=PG", "display_name": "Benjamin Gruenbaum", "link": "https://stackoverflow.com/users/1348195/benjamin-gruenbaum"}, "reply_to_user": {"reputation": 17887, "user_id": 162273, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/430cb584ada70347d6bdaabdcf67390c?s=128&d=identicon&r=PG", "display_name": "Jason Kleban", "link": "https://stackoverflow.com/users/162273/jason-kleban"}, "edited": false, "score": 1, "creation_date": 1427401166, "post_id": 29287864, "comment_id": 46773311, "body": "You technically could (it&#39;s one of the perks of promises not being part of the language&#39;s <code>try&#47;catch</code> semantics - in modern promise libraries like bluebird (I saw you&#39;re using Q which is really old) you also have built in support for typed catches and predicate catches which make this sort of handling very easy."}], "tags": [], "owner": {"reputation": 245145, "user_id": 1348195, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f6dca2295546af21e1cde8e68f2d49bd?s=128&d=identicon&r=PG", "display_name": "Benjamin Gruenbaum", "link": "https://stackoverflow.com/users/1348195/benjamin-gruenbaum"}, "is_accepted": false, "score": 5, "last_activity_date": 1427400505, "last_edit_date": 1592644375, "creation_date": 1427400505, "answer_id": 29287864, "question_id": 29286018, "link": "https://stackoverflow.com/questions/29286018/typescript-typings-for-failure-reason-in-various-promises-implementations/29287864#29287864", "title": "Typescript typings for failure `reason` in various Promises implementations?", "body": "<p>Gee, this is a really hard one. It's actually a good question you're asking here.</p>\n<p>Let me start with a</p>\n<h3>Yes, it can be typed</h3>\n<p>It's entirely possible to create a promise type which takes exceptions into account. When I implemented a promise library in a typed language, I started out with a <code>Promise&lt;T,E&gt;</code> type and only later reverted to <code>Promise&lt;T&gt;</code> - it worked but it wasn't fun. What you're asking for has a name.</p>\n<h3>Checked Exceptions</h3>\n<p>What you're actually asking for here is for exceptions to be checked - that is a function <em>must</em> declare the type of exceptions it might throw - there are languages that actually do this for exceptions well... there is <em>a</em> language that does it - <strong>Java</strong>. In Java, when you have a method that <em>might</em> throw an exception (except for a RuntimeException) it <em>must</em> declare it:</p>\n<pre><code> public T foo() throws E {}\n</code></pre>\n<p>See, in Java - both the return type and the error type are a part of a method's signature. This is a controversial choice and a lot of people find it tedious. It's very unpopular among developers of other languages because it forces you to write a lot of crufty code.</p>\n<p>Imagine you have a function that returns a promise that makes a db connection to get a URL, makes a web request and writes it to a file. The promise equivalent of what you have in Java is something like:</p>\n<pre><code>Promise&lt;T, FileAccessError | DatabaseError | WebRequestError | WebConnectionError | TypeError&gt;\n</code></pre>\n<p>Not a lot of fun to type many times - so the types of exceptions in these languages (like C#) is usually implicit. That said if you like that stylistic choice you definitely should do it. It's just not really trivial - the type of a promise is already pretty complicated:</p>\n<pre><code>then&lt;T,U&gt; :: Promise&lt;T&gt; -&gt; T -&gt; Promise&lt;U&gt; | U -&gt; Promise&lt;U&gt;\n</code></pre>\n<p>This is what <code>then</code> does - it takes a promise of type T, and a callback that takes a T and returns a value (U) or a promise for a value (Promise) - and returns a Promise (unwrap and transform). The actual type is even harder since then has a second failure argument - and both arguments are optional:</p>\n<pre><code>then&lt;T,U&gt; :: Promise&lt;T&gt; -&gt; (T -&gt; Promise&lt;U&gt; | U) | null) -&gt; ((Promise&lt;T&gt; -&gt; any -&gt; Promise&lt;U&gt; | U) | null) -&gt; Promise&lt;U&gt;\n</code></pre>\n<p>If you add error handling in, this becomes really &quot;fun&quot; since all these steps now have an additional error path:</p>\n<pre><code>then&lt;T,E,U,E2&gt; :: Promise&lt;T,E&gt; -&gt; (T -&gt; Promise&lt;U, E2&gt; | U) | null -&gt; (E -&gt; Promise&lt;U, E2&gt; | U) | null -&gt; Promise&lt;U&gt;\n</code></pre>\n<p>Basically - <code>then</code> now has 4 type parameters which is something people generally want to avoid :) It's entirely possible though and up to you.</p>\n"}, {"comments": [{"owner": {"reputation": 17887, "user_id": 162273, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/430cb584ada70347d6bdaabdcf67390c?s=128&d=identicon&r=PG", "display_name": "Jason Kleban", "link": "https://stackoverflow.com/users/162273/jason-kleban"}, "edited": false, "score": 0, "creation_date": 1427403139, "post_id": 29288239, "comment_id": 46774457, "body": "Another awesome answer from a heavyweight!  Thank you."}, {"owner": {"reputation": 17887, "user_id": 162273, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/430cb584ada70347d6bdaabdcf67390c?s=128&d=identicon&r=PG", "display_name": "Jason Kleban", "link": "https://stackoverflow.com/users/162273/jason-kleban"}, "edited": false, "score": 0, "creation_date": 1427479082, "post_id": 29288239, "comment_id": 46808548, "body": "I chose this answer because it got just a little deeper on the theory side of things, but both answers were really excellent, helpful, and appreciated."}], "tags": [], "owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "is_accepted": true, "score": 3, "last_activity_date": 1427404946, "last_edit_date": 1427404946, "creation_date": 1427401804, "answer_id": 29288239, "question_id": 29286018, "link": "https://stackoverflow.com/questions/29286018/typescript-typings-for-failure-reason-in-various-promises-implementations/29288239#29288239", "title": "Typescript typings for failure `reason` in various Promises implementations?", "body": "<p>I think one of the main challenges to achieving something like this is that the parameters to <code>then</code> are optional and its return type is dependent on whether they are functions or not. <code>Q.d.ts</code> doesn't get it right, even with just one type parameter:</p>\n\n<pre><code>   then&lt;U&gt;(onFulfill?: (value: T)  =&gt; U | IPromise&lt;U&gt;, \n           onReject?: (error: any) =&gt; U | IPromise&lt;U&gt;, \n           onProgress?: Function):                      Promise&lt;U&gt;;\n</code></pre>\n\n<p>This says that the return type of <code>Promise&lt;T&gt;.then()</code> is <code>Promise&lt;U&gt;</code>, but if <code>onFulfill</code> is unspecified, the return type is actually <code>Promise&lt;T&gt;</code>!</p>\n\n<p>And this doesn't even get into the fact that <code>onFulfill</code> and <code>onReject</code> can both throw, giving you five different sources of errors to reconcile in order to determine the type of <code>p.then(onFulfill, onReject)</code>:</p>\n\n<ul>\n<li>The rejection value of <code>p</code> if <code>onReject</code> is unspecified</li>\n<li>An error thrown in <code>onFulfill</code></li>\n<li>The rejection value of a promise returned by <code>onFulfill</code></li>\n<li>An error thrown in <code>onReject</code></li>\n<li>The rejection value of a promise returned by <code>onReject</code></li>\n</ul>\n\n<p>I'm pretty sure there isn't even a way to express bullets 2 and 4 in TypeScript since it doesn't have checked exceptions.</p>\n\n<p>If we take the analogy with synchronous code, the resulting value of a block of code can be well defined. The possible set of errors thrown by a block of code rarely are (unless, as Benjamin points out, you are writing in Java).</p>\n\n<p>To take that analogy further, even with TypeScript's strong typing, it doesn't even provide (AFAIK) a mechanism for specifying types on caught exceptions, so promises with an <code>any</code> error type are consistent with how TypeScript handles errors in synchronous code.</p>\n\n<p>The comments section on <a href=\"https://typescript.codeplex.com/workitem/784\" rel=\"nofollow\">this page about that very matter</a> contains a comment that I think is very relevant here:</p>\n\n<blockquote>\n  <p>By definition, an exception is an 'exceptional' condition, and could occur for a number of reason (e.g. syntax error, stack overflow, etc...). And while most of these errors do derive from the Error type, it is also possible something you call into could throw anything.</p>\n</blockquote>\n\n<p>The reason given on that same page for not supporting typed exceptions is also quite relevant here:</p>\n\n<blockquote>\n  <p>Since we don't have any notion of what exceptions a function might throw, allowing a type annotation on 'catch' variable would be highly misleading - it's not an exception filter and it's not anything resembling a guarantee of type safety.</p>\n</blockquote>\n\n<p>So my advice would be not to try and pin down the error type in your type definition. Exceptions are unpredictable by their very nature, and the typed definition of <code>.then</code> is already hard enough to define as it is.</p>\n\n<hr />\n\n<p>Also to note: Many strongly-typed languages that include a promise-like structure also do nothing to express the type of potential errors they can produce. .NET's <code>Task&lt;T&gt;</code> has a single type parameter for the result, as does Scala's <code>Future[T]</code>. Scala's mechanism for encapsulating errors, <code>Try[T]</code> (which is a part of <code>Future[T]</code>'s interface) gives no guarantees on its resulting error type beyond inheriting from <code>Throwable</code>. So I would say that the single-type-parameter promises in TypeScript are in good company.</p>\n"}], "owner": {"reputation": 17887, "user_id": 162273, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/430cb584ada70347d6bdaabdcf67390c?s=128&d=identicon&r=PG", "display_name": "Jason Kleban", "link": "https://stackoverflow.com/users/162273/jason-kleban"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 767, "favorite_count": 2, "accepted_answer_id": 29288239, "answer_count": 2, "score": 6, "last_activity_date": 1427404946, "creation_date": 1427394066, "last_edit_date": 1427401325, "question_id": 29286018, "link": "https://stackoverflow.com/questions/29286018/typescript-typings-for-failure-reason-in-various-promises-implementations", "title": "Typescript typings for failure `reason` in various Promises implementations?", "body": "<p>The current <code>d.ts</code> definition files for various promise libraries seem to give up on the data type supplied to the failure callbacks.</p>\n\n<h3>when.d.ts:</h3>\n\n<pre><code>interface Deferred&lt;T&gt; {\n    notify(update: any): void;\n    promise: Promise&lt;T&gt;;\n    reject(reason: any): void;\n    resolve(value?: T): void;\n    resolve(value?: Promise&lt;T&gt;): void;\n}\n</code></pre>\n\n<h3>q.d.ts:</h3>\n\n<pre><code>interface Deferred&lt;T&gt; {\n    promise: Promise&lt;T&gt;;\n    resolve(value: T): void;\n    reject(reason: any): void;\n    notify(value: any): void;\n    makeNodeResolver(): (reason: any, value: T) =&gt; void;\n}\n</code></pre>\n\n<h3>jquery.d.ts (promise-ish):</h3>\n\n<pre><code>fail(failCallback1?: JQueryPromiseCallback&lt;any&gt;|JQueryPromiseCallback&lt;any&gt;[], ...failCallbacksN: Array&lt;JQueryPromiseCallback&lt;any&gt;|JQueryPromiseCallback&lt;any&gt;[]&gt;): JQueryPromise&lt;T&gt;;\n</code></pre>\n\n<p>I don't see anything in the <a href=\"https://promisesaplus.com/\" rel=\"nofollow\">Promises/A+ spec</a> suggesting to me that <code>reason</code> <em>cannot</em> be typed.</p>\n\n<p>I did attempt it on <em>q.d.ts</em> but the type information seems to get lost where the transition from <code>'T</code> to <code>'U</code> happens and I don't fully understand why that has to be the case - and my attempts (mechanically adding <code>'N</code> and <code>'F</code> type parameters to <code>&lt;T&gt;</code> and <code>'O</code> and <code>'G</code> type parameters to <code>&lt;U&gt;</code> and typing things as I figured they ought to be) result mostly in <code>{}</code> being the type for the newly added type parameters.</p>\n\n<p>Is there a reason that they cannot be given their own type parameter?  Is there a construction of promises that can be fully typed?</p>\n"}, {"tags": ["javascript", "typescript", "ecmascript-6", "angular"], "comments": [{"owner": {"reputation": 2029, "user_id": 1230961, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/f177a7c9152f26a8080c65cf5ad6110e?s=128&d=identicon&r=PG", "display_name": "adeelmahmood", "link": "https://stackoverflow.com/users/1230961/adeelmahmood"}, "edited": false, "score": 0, "creation_date": 1427492654, "post_id": 29283994, "comment_id": 46815160, "body": "after going through some additional material my question sort of seems stupid. Component and Template are annotations so yeah they are applied on a class which is how that class is linked with Component. As for child components that makes sense too because any related components are included in the root component as directives"}, {"owner": {"reputation": 4091, "user_id": 1497565, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/efc3ebd42d0eb02f2d9cb7cec469bec5?s=128&d=identicon&r=PG&f=1", "display_name": "Mukus", "link": "https://stackoverflow.com/users/1497565/mukus"}, "edited": false, "score": 0, "creation_date": 1448412148, "post_id": 29283994, "comment_id": 55575789, "body": "I don&#39;t think it is a stupid question. I just could not see it for a while until I saw it. It just does not look as natural as in Java - even if imports are added and it appears above the class."}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 3, "last_activity_date": 1427530332, "creation_date": 1427530332, "answer_id": 29315041, "question_id": 29283994, "link": "https://stackoverflow.com/questions/29283994/angular2-relationship-between-component-and-class/29315041#29315041", "title": "angular2 relationship between @Component and Class", "body": "<blockquote>\n  <p>How is the relationship between a component controller class and the component is formed. Is it simply based on the positioning that whatever class comes after a given component, it becomes the component controller class for the component defined before it.</p>\n</blockquote>\n\n<p>Yes. </p>\n\n<blockquote>\n  <p>How does it works if you have multiple components in a single js file</p>\n</blockquote>\n\n<p>Have the structure: </p>\n\n<pre><code>@Component ...\nclass Foo ...\n\n@Component ...\nclass Bar ...\n</code></pre>\n\n<blockquote>\n  <p>Is there such a thing as child components and in that case do these child components inherit something from parent components and more specifically from the component controller class of parent component.</p>\n</blockquote>\n\n<p>Components don't inherit. Components <em>compose</em>. Search <em>inheritance vs. composition</em> (but I sure you know this). </p>\n\n<p>Also see : <a href=\"https://github.com/Microsoft/TypeScript/issues/2249\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/2249</a> </p>\n"}, {"tags": [], "owner": {"reputation": 624, "user_id": 5020350, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b61076e081a0674e413097d82dd257b5?s=128&d=identicon&r=PG&f=1", "display_name": "kakaja", "link": "https://stackoverflow.com/users/5020350/kakaja"}, "is_accepted": false, "score": 0, "last_activity_date": 1435825725, "creation_date": 1435825725, "answer_id": 31179360, "question_id": 29283994, "link": "https://stackoverflow.com/questions/29283994/angular2-relationship-between-component-and-class/31179360#31179360", "title": "angular2 relationship between @Component and Class", "body": "<p>There are some kind of parents which are declared in the class constructor. Here is an example <a href=\"http://victorsavkin.com/post/118372404541/the-core-concepts-of-angular-2\" rel=\"nofollow\">http://victorsavkin.com/post/118372404541/the-core-concepts-of-angular-2</a>:</p>\n\n<pre><code>class Component {\n    constructor(sibling:SiblingCmp,\n          @Parent parent:ParentCmp,\n          @Ancestor ancestor:AncestorCmp) {\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2029, "user_id": 1230961, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/f177a7c9152f26a8080c65cf5ad6110e?s=128&d=identicon&r=PG", "display_name": "adeelmahmood", "link": "https://stackoverflow.com/users/1230961/adeelmahmood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1425, "favorite_count": 0, "accepted_answer_id": 29315041, "answer_count": 2, "score": 3, "last_activity_date": 1435825725, "creation_date": 1427387664, "last_edit_date": 1427575235, "question_id": 29283994, "link": "https://stackoverflow.com/questions/29283994/angular2-relationship-between-component-and-class", "title": "angular2 relationship between @Component and Class", "body": "<p>How is the relationship between a component controller class and the component is formed. Is it simply based on the positioning that whatever class comes after a given component, it becomes the component controller class for the component defined before it. How does it works if you have multiple components in a single js file. How do you associate a class anywhere in the js file to a component. </p>\n\n<p>Along the same lines, is there such a thing as child components and in that case do these child components inherit something from parent components and more specifically from the component controller class of parent component.</p>\n"}, {"tags": ["javascript", "ecmascript-6", "angular", "atscript"], "comments": [{"owner": {"reputation": 5517, "user_id": 905422, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/da2e78c90eaeaf04236488dc55c58810?s=128&d=identicon&r=PG", "display_name": "Mathijs Segers", "link": "https://stackoverflow.com/users/905422/mathijs-segers"}, "edited": false, "score": 0, "creation_date": 1433406312, "post_id": 29283875, "comment_id": 49341795, "body": "Can I ask how come your layoutStrategy was not throwing an error? It did for me :&#39;("}], "answers": [{"comments": [{"owner": {"reputation": 2029, "user_id": 1230961, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/f177a7c9152f26a8080c65cf5ad6110e?s=128&d=identicon&r=PG", "display_name": "adeelmahmood", "link": "https://stackoverflow.com/users/1230961/adeelmahmood"}, "edited": false, "score": 0, "creation_date": 1427494667, "post_id": 29306954, "comment_id": 46815861, "body": "Yeah that was it. Darn typo. Now I am getting a different error though .. &gt; ror during instantiation of Token(AppView)!. ORIGINAL ERROR: TypeError: Cannot read property &#39;annotations&#39; of undefined"}, {"owner": {"reputation": 2575, "user_id": 656449, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/1d95d92d9d824cbe955148c4a447bba4?s=128&d=identicon&r=PG", "display_name": "user656449", "link": "https://stackoverflow.com/users/656449/user656449"}, "edited": false, "score": 0, "creation_date": 1427699060, "post_id": 29306954, "comment_id": 46867692, "body": "the forms seem to be not ready yet: <a href=\"http://stackoverflow.com/questions/29215464/importing-anuglar2-forms-causing-cannot-read-property-annotations-of-undefine\" title=\"importing anuglar2 forms causing cannot read property annotations of undefine\">stackoverflow.com/questions/29215464/&hellip;</a>"}], "tags": [], "owner": {"reputation": 26, "user_id": 3650466, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f15083bd42fa14605f5c4e65b519589e?s=128&d=identicon&r=PG&f=1", "display_name": "ThatsWhy", "link": "https://stackoverflow.com/users/3650466/thatswhy"}, "is_accepted": true, "score": 1, "last_activity_date": 1427478290, "creation_date": 1427478290, "answer_id": 29306954, "question_id": 29283875, "link": "https://stackoverflow.com/questions/29283875/angular2-forms-cannot-read-property-replace-of-undefined/29306954#29306954", "title": "angular2 forms - cannot read property replace of undefined", "body": "<p>did you post all of your app.es6? Imports seem to be missing.</p>\n\n<p>And: the error suggests there may be a typo in the import? <strong>angualr2</strong>/forms --> in my example the folder name is angular2/forms</p>\n"}], "owner": {"reputation": 2029, "user_id": 1230961, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/f177a7c9152f26a8080c65cf5ad6110e?s=128&d=identicon&r=PG", "display_name": "adeelmahmood", "link": "https://stackoverflow.com/users/1230961/adeelmahmood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2429, "favorite_count": 0, "accepted_answer_id": 29306954, "answer_count": 1, "score": 3, "last_activity_date": 1498550185, "creation_date": 1427387337, "last_edit_date": 1498550185, "question_id": 29283875, "link": "https://stackoverflow.com/questions/29283875/angular2-forms-cannot-read-property-replace-of-undefined", "title": "angular2 forms - cannot read property replace of undefined", "body": "<p>I am following the form examples provided at <a href=\"http://angularjs.blogspot.com/2015/03/forms-in-angular-2.html\" rel=\"nofollow noreferrer\">Forms in Angular 2</a> and when I load the page I get this error</p>\n\n<pre><code>TypeError: Error loading \"angualr2/forms\" at &lt;unknown&gt; Error loading\n\"angualr2/forms\" from \"app\" at http://localhost:8080/js/app.es6 Cannot\nread property 'replace' of undefined\n</code></pre>\n\n<p>Here is the code. This is for the first data driven forms example from the blog</p>\n\n<p><strong>index.html</strong></p>\n\n<pre><code>&lt;my-form&gt;&lt;/my-form&gt;\n\n&lt;script&gt;\n    System.paths = {\n        'angular2/*' : '/quickstart/angular2/*.js',\n        'rtts_assert/*' : '/quickstart/rtts_assert/*.js',\n        'app' : 'js/app.es6'\n    };\n\n    //start app\n    System.import('app');\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>app.es6</strong></p>\n\n<pre><code>class Address {\nstreet: string;\ncity: string;\nstate: string;\nzip: string;\nresidential: boolean;\n}\n\n@Component({\n    selector: 'my-form'\n})\n@Template({\n    inline: '&lt;form [form-structure]=\"form\"&gt;&lt;/form&gt;',\n    directives: [forms] \n})\nclass FormExample {\n    constructor(fb: FormBuilder) {\n        this.address = new Address();\n\n        this.form = fb.fromModel(address, \n            [\n             {field: 'street', label: 'Street', validator: 'required'},\n             {field: 'city', label: 'City', validator: 'required'},\n             {field: 'state', label: 'State', size: 2, validator: 'required'},\n             {field: 'zip', label: 'Zip Code', size: 5, validator: 'required'},\n             {field: 'residential', label: 'Residential', type: 'checkbox'}\n             ], {\n            saveOnUpdate: true,\n            layoutStrategy: materialDesign\n    });\n}\n}\n\nbootstrap(FormExample);\n</code></pre>\n\n<p>Any help would be appreciated</p>\n"}, {"tags": ["javascript", "node.js", "typescript"], "comments": [{"owner": {"reputation": 2624, "user_id": 1343275, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/432d16f0ee8238d210d88dd3f161c9f2?s=128&d=identicon&r=PG", "display_name": "mukund", "link": "https://stackoverflow.com/users/1343275/mukund"}, "edited": false, "score": 0, "creation_date": 1427458354, "post_id": 29282394, "comment_id": 46795467, "body": "It is recomended that a module name should start with a lowercase letter. And what is &quot;///&lt;reference path=&quot;./Nexus.ts&quot;/&gt;&quot; ? Is Nexus a class ? The name of the typescript file should be same as name of class. And your app.ts should be inside the same module i.e. nexus. Then it will work"}], "answers": [{"comments": [{"owner": {"reputation": 2694, "user_id": 2452442, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4a9391ca25cfccbc8ec92536da744257?s=128&d=identicon&r=PG", "display_name": "Raggaer", "link": "https://stackoverflow.com/users/2452442/raggaer"}, "edited": false, "score": 0, "creation_date": 1427383719, "post_id": 29282495, "comment_id": 46762700, "body": "&#39;Cannot find name Nexus&#39; on app.ts"}, {"owner": {"reputation": 11638, "user_id": 123204, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/c23cd2d6afb9dc3e42b6c0d280086fab?s=128&d=identicon&r=PG", "display_name": "Jesus Rodriguez", "link": "https://stackoverflow.com/users/123204/jesus-rodriguez"}, "edited": false, "score": 0, "creation_date": 1427383758, "post_id": 29282495, "comment_id": 46762726, "body": "You will also need to require it on app.ts, if I am not mistaken."}], "tags": [], "owner": {"reputation": 2996, "user_id": 1164646, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d4ab0939182124aca9cb28f25a86d9a5?s=128&d=identicon&r=PG", "display_name": "Safari", "link": "https://stackoverflow.com/users/1164646/safari"}, "is_accepted": false, "score": 1, "last_activity_date": 1427384085, "last_edit_date": 1427384085, "creation_date": 1427383653, "answer_id": 29282495, "question_id": 29282394, "link": "https://stackoverflow.com/questions/29282394/typescript-define-external-class/29282495#29282495", "title": "TypeScript define external class", "body": "<p>You also need to export the module</p>\n\n<pre><code>export module Nexus {\n    ...\n}\n</code></pre>\n\n<p>then in your app.ts you can call it like:</p>\n\n<pre><code>import Nexus = require('./Nexus.ts');\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3715, "user_id": 3272249, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sgy73.png?s=128&g=1", "display_name": "wjohnsto", "link": "https://stackoverflow.com/users/3272249/wjohnsto"}, "is_accepted": true, "score": 2, "last_activity_date": 1427414418, "creation_date": 1427414418, "answer_id": 29291052, "question_id": 29282394, "link": "https://stackoverflow.com/questions/29282394/typescript-define-external-class/29291052#29291052", "title": "TypeScript define external class", "body": "<p>Make sure your module looks as follows:</p>\n\n<pre><code>module Nexus {\n    export class Scrapper {\n        private summonerName: string;\n        private apiKey: string = '';\n        private summonerStatsUrl = '';\n\n        constructor(name: string) {\n\n            this.summonerName = name;\n        }\n\n        getSeasonRank(): string {\n\n            return 'aa';\n        }\n\n        getRankedStats(): string {\n            return 'aa';\n        }\n\n        getSummonerStats(callback: Function) {\n            var summonerStats = request(this.summonerStatsUrl + this.apiKey, function (error, body, response) {\n                callback(response);\n            });\n        }\n    }\n}\n\nexport = Nexus;\n</code></pre>\n\n<p>Then, rather than using <code>/// &lt;reference /&gt;</code> do this:</p>\n\n<pre><code>import Nexus = require('Nexus');\n</code></pre>\n"}], "owner": {"reputation": 2694, "user_id": 2452442, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4a9391ca25cfccbc8ec92536da744257?s=128&d=identicon&r=PG", "display_name": "Raggaer", "link": "https://stackoverflow.com/users/2452442/raggaer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1635, "favorite_count": 0, "accepted_answer_id": 29291052, "answer_count": 2, "score": 0, "last_activity_date": 1427414418, "creation_date": 1427383391, "last_edit_date": 1427384440, "question_id": 29282394, "link": "https://stackoverflow.com/questions/29282394/typescript-define-external-class", "title": "TypeScript define external class", "body": "<p>Currently my code looks like this:</p>\n\n<pre><code>module Nexus {\n\n    export class Scrapper {\n\n        private summonerName: string;\n\n        private apiKey: string = '';\n\n        private summonerStatsUrl = '';\n\n        constructor(name: string) {\n\n            this.summonerName = name;\n        }\n\n        getSeasonRank(): string {\n\n            return 'aa';\n        }\n\n        getRankedStats(): string {\n\n            return 'aa';\n        }\n\n        getSummonerStats(callback: Function) {\n\n            var summonerStats = request(this.summonerStatsUrl + this.apiKey, function (error, body, response) {\n\n                callback(response);\n            });\n        }\n    }\n}\n</code></pre>\n\n<p>And <strong>app.ts</strong>:</p>\n\n<pre><code>///&lt;reference path=\"./Nexus.ts\"/&gt;\n\nvar colors = require('colors'),\n    request = require('request'),\n    fs = require('fs'),\n    readline = require('readline'),\n    rl = readline.createInterface({\n\n        input: process.stdin,\n        output: process.stdout\n    });\n\nrl.question('Insert summoner name: \\r\\n &gt;&gt; ', function (answer) {\n\n    var scrapper = new Nexus.Scrapper(answer);\n\n    scrapper.getSummonerStats(function (result) {\n\n        console.log(result);\n    });\n});\n</code></pre>\n\n<p>When I reach the new <code>Nexus.Scrapper()</code>, I'm getting this error:</p>\n\n<p><strong>Nexus is not defined</strong></p>\n\n<p>While it should be since I'm including it? The module is named <strong>Nexus</strong> and I'm exporting the Scrapper class. (The file is called <strong>Nexus.ts</strong>.)</p>\n"}, {"tags": ["typescript", "visual-studio-2015"], "answers": [{"comments": [{"owner": {"reputation": 10701, "user_id": 998328, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/86d1bcb6609046f3535ca20691c48aa9?s=128&d=identicon&r=PG", "display_name": "Carrie Kendall", "link": "https://stackoverflow.com/users/998328/carrie-kendall"}, "edited": false, "score": 0, "creation_date": 1427988428, "post_id": 29284459, "comment_id": 47005512, "body": "Phew, this was a tricky find, nice job. I hope they&#39;ll be making this more user-friendly in later releases."}, {"owner": {"reputation": 10701, "user_id": 998328, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/86d1bcb6609046f3535ca20691c48aa9?s=128&d=identicon&r=PG", "display_name": "Carrie Kendall", "link": "https://stackoverflow.com/users/998328/carrie-kendall"}, "edited": false, "score": 0, "creation_date": 1427988557, "post_id": 29284459, "comment_id": 47005593, "body": "I edited your answer to add (a lot of) formatting and some extra information as, I was not using AMD but was also getting this error. Please make sure I didn&#39;t change your intent."}, {"owner": {"reputation": 17933, "user_id": 7756, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2e91cc4579b4a88bd811c4169f577284?s=128&d=identicon&r=PG", "display_name": "Orion Adrian", "link": "https://stackoverflow.com/users/7756/orion-adrian"}, "edited": false, "score": 0, "creation_date": 1430686103, "post_id": 29284459, "comment_id": 48155798, "body": "I added this, but then I couldn&#39;t compile anymore with the TypeScript 1.5 Beta, stating reference to &#39;../Scripts/file.js&#39; could not be found."}, {"owner": {"reputation": 1324, "user_id": 528318, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6e75916457e1acb08d4671feb0431e21?s=128&d=identicon&r=PG", "display_name": "MIP1983", "link": "https://stackoverflow.com/users/528318/mip1983"}, "edited": false, "score": 0, "creation_date": 1432133397, "post_id": 29284459, "comment_id": 48798607, "body": "Thank you, as well as enabling amd this also fixed vs 2015 RC not generating source maps on save for me."}], "tags": [], "owner": {"reputation": 372, "user_id": 2570169, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/7ix6C.jpg?s=128&g=1", "display_name": "jgo", "link": "https://stackoverflow.com/users/2570169/jgo"}, "is_accepted": false, "score": 5, "last_activity_date": 1427988399, "last_edit_date": 1427988399, "creation_date": 1427389029, "answer_id": 29284459, "question_id": 29282269, "link": "https://stackoverflow.com/questions/29282269/using-external-modules-in-visual-studio-2015-ctp6-typescript-1-4/29284459#29284459", "title": "Using external modules in Visual Studio 2015 CTP6 + TypeScript 1.4", "body": "<p>Here are the steps to configure typescript per project:</p>\n\n<ol>\n<li><p>Unload your project. If your project is based on the MVC 6 template, you will find that the <code>MSBuild</code> configuration is pretty minimal. </p></li>\n<li><p>Navigate to:\n<code>C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\TypeScript</code>* </p>\n\n<p><sub>* This assumes you installed VS in the default location.</sub></p></li>\n<li><p>Locate the <code>Microsoft.TypeScript.Default.props</code> file and open it up. No need for elevated privileges, we will only be reading from it.</p>\n\n<p>It should look something like:</p>\n\n\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;Project ToolsVersion=\"4.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"&gt;\n  &lt;PropertyGroup&gt;\n    &lt;TypeScriptTarget&gt;ES5&lt;/TypeScriptTarget&gt;\n    &lt;TypeScriptCompileOnSaveEnabled&gt;true&lt;/TypeScriptCompileOnSaveEnabled&gt;\n    &lt;TypeScriptNoImplicitAny&gt;false&lt;/TypeScriptNoImplicitAny&gt;\n    &lt;TypeScriptModuleKind&gt;none&lt;/TypeScriptModuleKind&gt;\n    &lt;TypeScriptRemoveComments&gt;false&lt;/TypeScriptRemoveComments&gt;\n    &lt;TypeScriptOutFile&gt;&lt;/TypeScriptOutFile&gt;\n    &lt;TypeScriptOutDir&gt;&lt;/TypeScriptOutDir&gt;\n    &lt;TypeScriptGeneratesDeclarations&gt;false&lt;/TypeScriptGeneratesDeclarations&gt;\n    &lt;TypeScriptSourceMap&gt;true&lt;/TypeScriptSourceMap&gt;\n    &lt;TypeScriptMapRoot&gt;&lt;/TypeScriptMapRoot&gt;\n    &lt;TypeScriptSourceRoot&gt;&lt;/TypeScriptSourceRoot&gt;\n    &lt;TypeScriptNoEmitOnError&gt;true&lt;/TypeScriptNoEmitOnError&gt;\n  &lt;/PropertyGroup&gt;\n&lt;/Project&gt;\n</code></pre></li>\n<li><p>Copy the entire <code>PropertyGroup</code> element, and paste it somewhere in your <code>.kproj</code> file; it needs to be under the Project element.</p></li>\n<li><p>Modify the <code>TypeScriptModuleKind</code> from none to your module definition. The options are <code>AMD</code> or <code>CommonJS</code>.</p></li>\n<li><p>Save the .kproj file, and reload your project.</p></li>\n</ol>\n\n<p>You should no longer get the compile-time error about including modules.</p>\n"}], "owner": {"reputation": 372, "user_id": 2570169, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/7ix6C.jpg?s=128&g=1", "display_name": "jgo", "link": "https://stackoverflow.com/users/2570169/jgo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2208, "favorite_count": 4, "answer_count": 1, "score": 7, "last_activity_date": 1443284993, "creation_date": 1427383095, "last_edit_date": 1427988618, "question_id": 29282269, "link": "https://stackoverflow.com/questions/29282269/using-external-modules-in-visual-studio-2015-ctp6-typescript-1-4", "title": "Using external modules in Visual Studio 2015 CTP6 + TypeScript 1.4", "body": "<p>I'm trying to figure out how to import modules.\nWhen I write a statement at the top of my .ts file such as:</p>\n\n<pre><code>import a = require(\"a\");\n</code></pre>\n\n<p>I get the following error:</p>\n\n<blockquote>\n  <p>Cannot compile external modules unless the '--module' flag is provided.</p>\n</blockquote>\n\n<p>In previous versions of Visual Studio, there was an area with the Project's properties that allowed you to control some TypeScript configuration. Where is this located in Visual Studio 2015?</p>\n\n<p>Does anyone know how I can enable importing external modules?</p>\n"}, {"tags": ["typescript"], "answers": [{"tags": [], "owner": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "is_accepted": false, "score": 5, "last_activity_date": 1427385127, "creation_date": 1427385127, "answer_id": 29283057, "question_id": 29280938, "link": "https://stackoverflow.com/questions/29280938/preserve-license-comment-in-typescript-compiled-output/29283057#29283057", "title": "Preserve license comment in TypeScript compiled output", "body": "<p>In older versions of TypeScript you could do this with <code>pinned comments</code> like below:</p>\n\n<pre><code>/*!\n * Test\n */\n</code></pre>\n\n<p>These comments would still be present after compiling with <code>--removeComments</code>. This feature is gone/broken in TypeScript 1.4 but works again in the latest GitHub source code. So I think it will work again in TypeScript 1.5! :) </p>\n\n<p>For future reference it was fixed in master a few days ago: <a href=\"https://github.com/Microsoft/TypeScript/pull/2406\" rel=\"noreferrer\">https://github.com/Microsoft/TypeScript/pull/2406</a></p>\n"}], "owner": {"reputation": 19249, "user_id": 1711598, "user_type": "registered", "accept_rate": 42, "profile_image": "https://i.stack.imgur.com/ytmdg.jpg?s=128&g=1", "display_name": "Kna\u0123is", "link": "https://stackoverflow.com/users/1711598/kna%c4%a3is"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 742, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1427385127, "creation_date": 1427379834, "question_id": 29280938, "link": "https://stackoverflow.com/questions/29280938/preserve-license-comment-in-typescript-compiled-output", "title": "Preserve license comment in TypeScript compiled output", "body": "<p>TypeScript compiler provides an option to remove or retain comments in the compiled JavaScript output.</p>\n\n<p>What I need is the ability to remove all comments but to keep one specific comment that is in the beginning of the file containing the license text.</p>\n\n<p>I am using the compiler from node.js code so a solution that works from code (and is not exposed via <code>tsc</code>).</p>\n\n<p>I cannot just prepend the license text to the resulting file since that would invalidate the source mapping.</p>\n"}, {"tags": ["typescript", "undefined"], "answers": [{"comments": [{"owner": {"reputation": 87, "user_id": 1539859, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5e597c7562e984d32ac800e7fb19a6ba?s=128&d=identicon&r=PG", "display_name": "gogcam", "link": "https://stackoverflow.com/users/1539859/gogcam"}, "edited": false, "score": 0, "creation_date": 1427380239, "post_id": 29280973, "comment_id": 46760026, "body": "I&#39;ve tried your solution, but still everyhing is undefined (e.g. this.SendRequest, this._dbOptions, this.SERVICE_URL_GET_TRACKERS) when im in the load function. It looks like I have no access to my class methods/variables. Any other idea?"}, {"owner": {"reputation": 87, "user_id": 1539859, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5e597c7562e984d32ac800e7fb19a6ba?s=128&d=identicon&r=PG", "display_name": "gogcam", "link": "https://stackoverflow.com/users/1539859/gogcam"}, "edited": false, "score": 0, "creation_date": 1427380580, "post_id": 29280973, "comment_id": 46760267, "body": "Additional: Sorry, it should work now as you wrote. Thanks a lot! I was irritated that the chrome debugger debugs the ts file and still shows undefined, but when I continue it jumps into SendRequest, what is correct. Thank you again!"}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 87, "user_id": 1539859, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5e597c7562e984d32ac800e7fb19a6ba?s=128&d=identicon&r=PG", "display_name": "gogcam", "link": "https://stackoverflow.com/users/1539859/gogcam"}, "edited": false, "score": 0, "creation_date": 1427380695, "post_id": 29280973, "comment_id": 46760352, "body": "@user1539859 no problem! When you said it didn&#39;t work I thought it was probably some cache issue. I&#39;ve had that problem with chrome before too."}], "tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": true, "score": 1, "last_activity_date": 1427381296, "last_edit_date": 1427381296, "creation_date": 1427379897, "answer_id": 29280973, "question_id": 29280812, "link": "https://stackoverflow.com/questions/29280812/typescript-undefined-is-not-a-function/29280973#29280973", "title": "TypeScript: undefined is not a function", "body": "<p><strong>Problem</strong></p>\n\n<p>Right now the JavaScript output of your code is the following:</p>\n\n<pre><code>TrackerManager.prototype.initTrackersCustomStoreSettings = function () {\n    this._dbOptions = {\n        load: function (loadOptions) {\n            debugger;\n            return this.SendRequest(this.SERVICE_URL_GET_TRACKERS, 'GET');\n        },\n        // omitted...\n    };\n};\n</code></pre>\n\n<p>As you can see, the value of <code>this</code> will not be preserved. </p>\n\n<p><strong>Solution</strong></p>\n\n<p>To fix this, use an arrow function to preserve the context:</p>\n\n<pre><code>private initTrackersCustomStoreSettings(): void {\n    this._dbOptions = {\n        load: (loadOptions) =&gt; {\n            debugger;\n            return this.SendRequest(this.SERVICE_URL_GET_TRACKERS, 'GET');\n        },\n        // omitted...\n    };\n}\n</code></pre>\n\n<p>Which will transpile to the following javascript:</p>\n\n<pre><code>TrackerManager.prototype.initTrackersCustomStoreSettings = function () {\n    var _this = this; // notice this new variable and how it's used\n    this._dbOptions = {\n        load: function (loadOptions) {\n            debugger;\n            return _this.SendRequest(_this.SERVICE_URL_GET_TRACKERS, 'GET');\n        },\n        // omitted...\n    };\n};\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 87, "user_id": 1539859, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5e597c7562e984d32ac800e7fb19a6ba?s=128&d=identicon&r=PG", "display_name": "gogcam", "link": "https://stackoverflow.com/users/1539859/gogcam"}, "edited": false, "score": 0, "creation_date": 1427380162, "post_id": 29280998, "comment_id": 46759971, "body": "this.SendRequest is not the only thing which is undefined. When I look at runtime, as soon as I get into load function, everything is undefined (e.g. this._dbOptions, this.SERVICE_URL_GET_TRACKERS). It looks like I have no access to my class. Any other idea?"}], "tags": [], "owner": {"reputation": 1, "user_id": 2725997, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/05XV9.jpg?s=128&g=1", "display_name": "whoiskg", "link": "https://stackoverflow.com/users/2725997/whoiskg"}, "is_accepted": false, "score": -1, "last_activity_date": 1427379945, "creation_date": 1427379945, "answer_id": 29280998, "question_id": 29280812, "link": "https://stackoverflow.com/questions/29280812/typescript-undefined-is-not-a-function/29280998#29280998", "title": "TypeScript: undefined is not a function", "body": "<p>Since you haven't implemented the <code>SendRequest</code> method yet, it doesn't return a value.  So when you try to return the result of <code>SendRequest</code>, you get undefined.</p>\n"}], "owner": {"reputation": 87, "user_id": 1539859, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5e597c7562e984d32ac800e7fb19a6ba?s=128&d=identicon&r=PG", "display_name": "gogcam", "link": "https://stackoverflow.com/users/1539859/gogcam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1340, "favorite_count": 0, "accepted_answer_id": 29280973, "answer_count": 2, "score": 0, "last_activity_date": 1427381296, "creation_date": 1427379457, "question_id": 29280812, "link": "https://stackoverflow.com/questions/29280812/typescript-undefined-is-not-a-function", "title": "TypeScript: undefined is not a function", "body": "<p>I've the following ts-class:</p>\n\n<pre><code>class TrackerManager {\n\npublic _csTrackers: DevExpress.data.CustomStore;\npublic _dbOptions: DevExpress.data.CustomStoreOptions;\nprivate SERVICE_URL_GET_TRACKERS: string = 'xx'\nprivate SERVICE_URL_UPDATE_TRACKER: string = 'xx'\nprivate SERVICE_URL_GET_GPSSYSTEMS: string = 'xx'\n\nconstructor() {\n    this.initTrackersCustomStoreSettings();\n}\n\nprivate initTrackersCustomStoreSettings(): void {\n    this._dbOptions = {\n        load: function (loadOptions):any {\n            debugger;\n            return this.SendRequest(this.SERVICE_URL_GET_TRACKERS, 'GET');\n        },\n        insert: function (params):any {\n            //return dbImpl._sendRequest(SERVICE_URL_UPDATE_TRACKER, 'POST', params);\n        },\n    };\n}\n\npublic SendRequest(myurl: string, t: string): any {\n    //ToDo\n}\n\npublic getTrackerCustomStore(): DevExpress.data.CustomStore {\n    this._csTrackers = new DevExpress.data.CustomStore(this._dbOptions);\n    return this._csTrackers;\n}\n</code></pre>\n\n<p>}</p>\n\n<p>When load is called, can anyone tell me why this.SendRequest is undefined? And what I have to change?</p>\n\n<p>I'm new to typescript.</p>\n\n<p>Thank you very much.\nBest Regards</p>\n"}, {"tags": ["javascript", "typescript", "revealing-module-pattern"], "comments": [{"owner": {"reputation": 91128, "user_id": 1229023, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/75b840909603c238921a81032efd57eb?s=128&d=identicon&r=PG", "display_name": "raina77ow", "link": "https://stackoverflow.com/users/1229023/raina77ow"}, "edited": false, "score": 0, "creation_date": 1427363451, "post_id": 29275307, "comment_id": 46749611, "body": "What&#39;s wrong with making myFunction a private one?"}, {"owner": {"reputation": 4270, "user_id": 2347434, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/nTPXX.jpg?s=128&g=1", "display_name": "gdyrrahitis", "link": "https://stackoverflow.com/users/2347434/gdyrrahitis"}, "reply_to_user": {"reputation": 91128, "user_id": 1229023, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/75b840909603c238921a81032efd57eb?s=128&d=identicon&r=PG", "display_name": "raina77ow", "link": "https://stackoverflow.com/users/1229023/raina77ow"}, "edited": false, "score": 0, "creation_date": 1427363866, "post_id": 29275307, "comment_id": 46749862, "body": "You mean to make the myFunction a private one of the MyOtherConstructor? If that&#39;s the case, I can&#39;t because I want the myFunction to be used into the anonymous function code block independently. I don&#39;t want to create the obj first and then use the function from it. I want to use the myFunction as is into that code block and create a new obj object that has the myFunction method. It will be used later in code."}], "answers": [{"tags": [], "owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "is_accepted": true, "score": 3, "last_activity_date": 1473350747, "last_edit_date": 1473350747, "creation_date": 1427378566, "answer_id": 29280478, "question_id": 29275307, "link": "https://stackoverflow.com/questions/29275307/typescript-code-similar-to-revealing-module-pattern-structure/29280478#29280478", "title": "TypeScript code similar to Revealing Module Pattern structure", "body": "<p>If you need a single object <code>obj</code>, then do not use a class. A namespace is more adapted:</p>\n\n<pre><code>namespace obj {\n    function myFunction() {\n        // ...\n    }\n    export var publicMethod = myFunction;\n}\n</code></pre>\n\n<hr>\n\n<p>If you prefer to keep the class, then here is a more concise code for it:</p>\n\n<pre><code>class MyOtherConstructor {\n    constructor(public publicMethod: () =&gt; void) {\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4270, "user_id": 2347434, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/nTPXX.jpg?s=128&g=1", "display_name": "gdyrrahitis", "link": "https://stackoverflow.com/users/2347434/gdyrrahitis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1507, "favorite_count": 1, "accepted_answer_id": 29280478, "answer_count": 1, "score": 5, "last_activity_date": 1473350747, "creation_date": 1427363280, "question_id": 29275307, "link": "https://stackoverflow.com/questions/29275307/typescript-code-similar-to-revealing-module-pattern-structure", "title": "TypeScript code similar to Revealing Module Pattern structure", "body": "<p>I want to convert some JavaScript code I've written into TypeScript. I'm rather new to TypeScript syntax and way of thinking, as a JavaScript developer.</p>\n\n<p>What is giving me a headache is the hard time I've had to convert some piece of code that uses the Revealing Module Pattern into TypeScript.</p>\n\n<p>One example is the below:</p>\n\n<pre><code>//JS Code\nvar obj;\n\n//code...\n(function(){\n    function myFunction(){\n        //do work\n    }\n\n\n    function MyOtherConstructor(){\n        return {\n            publicMethod: myFunction\n        }\n    }\n\n    obj = new MyOtherConstructor();\n})();\n\n//use obj.publicMethod in code later\n</code></pre>\n\n<p>One workaround I've thought was this:</p>\n\n<pre><code>//TypeScript code\nvar obj;\n\nclass MyOtherConstructor {\n        private callback: any;\n        constructor(f: any){\n            this.callback = f;\n        }\n        publicMethod(): any{\n            this.callback();\n        }\n}\n//code...\n(() =&gt; {\n    function myFunction(){\n        //do work\n        console.log(\"Called myFunction\");\n    }\n    obj = new MyOtherConstructor(myFunction);\n})();\n\n//use obj.publicMethod in code later\n</code></pre>\n\n<p>which works, but it's ugly.</p>\n\n<p>Any suggestion how make this better?</p>\n"}, {"tags": ["javascript", "typescript", "arrow-functions"], "comments": [{"owner": {"reputation": 31954, "user_id": 507784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/746626153d30ebddefbe5d61553a9b39?s=128&d=identicon&r=PG", "display_name": "GregL", "link": "https://stackoverflow.com/users/507784/gregl"}, "edited": false, "score": 3, "creation_date": 1427328697, "post_id": 29268866, "comment_id": 46739080, "body": "Isn&#39;t the main point of arrow functions just a more succinct way of expressing anonymous functions, with the correct <code>this</code> binding? Hence they wouldn&#39;t have names with the JS equivalent anyway."}, {"owner": {"reputation": 699354, "user_id": 218196, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/4P5DY.jpg?s=128&g=1", "display_name": "Felix Kling", "link": "https://stackoverflow.com/users/218196/felix-kling"}, "edited": false, "score": 3, "creation_date": 1427328846, "post_id": 29268866, "comment_id": 46739114, "body": "Looks like you don&#39;t want arrow functions after all, but a named function expression."}, {"owner": {"reputation": 3044, "user_id": 439803, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7676fcbab6019cf9799efe2c87b915a6?s=128&d=identicon&r=PG", "display_name": "ritcoder", "link": "https://stackoverflow.com/users/439803/ritcoder"}, "edited": false, "score": 1, "creation_date": 1427330086, "post_id": 29268866, "comment_id": 46739454, "body": "Nah. Actually I want to use the arrow functions and they are working well. However I&#39;m implementing a piece of code (following a tutorial) that requires that I use the calling function as part of a <code>guarding</code> process. I want to know the way to avoid using arguments.callee while at the same time avoiding having to go and change each function that is affected to a normal javascript function."}, {"owner": {"reputation": 407, "user_id": 1934710, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/eqDql.jpg?s=128&g=1", "display_name": "Askdesigners", "link": "https://stackoverflow.com/users/1934710/askdesigners"}, "edited": false, "score": 0, "creation_date": 1559676820, "post_id": 29268866, "comment_id": 99493731, "body": "named functions are also handy for stack traces aside from needing to reference them"}], "answers": [{"comments": [{"owner": {"reputation": 3044, "user_id": 439803, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7676fcbab6019cf9799efe2c87b915a6?s=128&d=identicon&r=PG", "display_name": "ritcoder", "link": "https://stackoverflow.com/users/439803/ritcoder"}, "edited": false, "score": 0, "creation_date": 1427329353, "post_id": 29268907, "comment_id": 46739251, "body": "Oh ok. So my code is working now because typescript is currently not converting them to es6. Since typescript is converting it to plain javascript, is there a way to get it to assign a name to the function it generates? I have some sample code so will edit the question and add it since it is not well formatted"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 3044, "user_id": 439803, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7676fcbab6019cf9799efe2c87b915a6?s=128&d=identicon&r=PG", "display_name": "ritcoder", "link": "https://stackoverflow.com/users/439803/ritcoder"}, "edited": false, "score": 0, "creation_date": 1427330418, "post_id": 29268907, "comment_id": 46739551, "body": "Sorry I was unclear. <code>arguments</code> are going to be an error irrespective of which version (es6,es5,es3) you are targeting. I&#39;ve updated my answer"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 3044, "user_id": 439803, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7676fcbab6019cf9799efe2c87b915a6?s=128&d=identicon&r=PG", "display_name": "ritcoder", "link": "https://stackoverflow.com/users/439803/ritcoder"}, "edited": false, "score": 0, "creation_date": 1427330613, "post_id": 29268907, "comment_id": 46739609, "body": "@ritcoder I&#39;ve also added a code sample to explain what I meant with assign to a variable"}, {"owner": {"reputation": 3044, "user_id": 439803, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7676fcbab6019cf9799efe2c87b915a6?s=128&d=identicon&r=PG", "display_name": "ritcoder", "link": "https://stackoverflow.com/users/439803/ritcoder"}, "edited": false, "score": 0, "creation_date": 1427330772, "post_id": 29268907, "comment_id": 46739658, "body": "Thanks. I did not know that. I guess I&#39;ll have to use normal functions for those portions then."}, {"owner": {"reputation": 3044, "user_id": 439803, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7676fcbab6019cf9799efe2c87b915a6?s=128&d=identicon&r=PG", "display_name": "ritcoder", "link": "https://stackoverflow.com/users/439803/ritcoder"}, "edited": false, "score": 0, "creation_date": 1427331211, "post_id": 29268907, "comment_id": 46739767, "body": "Yeah. As in your code sample, it actually worked expect that I had to declare a variable outside the function to use it but I&#39;m ok. I&#39;ve edited the question to show the updated code."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 14, "last_activity_date": 1427330682, "last_edit_date": 1427330682, "creation_date": 1427328737, "answer_id": 29268907, "question_id": 29268866, "link": "https://stackoverflow.com/questions/29268866/is-there-a-way-to-name-arrow-functions-in-javascript/29268907#29268907", "title": "Is there a way to name arrow functions in javascript?", "body": "<blockquote>\n  <p>Is there a way to name arrow functions so that a reference can be used from within</p>\n</blockquote>\n\n<p>Not unless you assign it to a variable. For example: </p>\n\n<pre><code>var foo = () =&gt; {\n    console.log(foo);\n}\n</code></pre>\n\n<blockquote>\n  <p>For arrow functions, I'm currently using arguments.callee</p>\n</blockquote>\n\n<p><code>arguments</code> are not supported by arrow functions. TS currently incorrectly allows you to use them. This will be an error in the next version of typescript. <a href=\"https://github.com/Microsoft/TypeScript/issues/1609\" rel=\"noreferrer\">This is to keep typescript arrow functions compatible with the JS Language Specification</a>. </p>\n\n<p><strong>For your use case I would just use a <code>function</code></strong></p>\n"}], "owner": {"reputation": 3044, "user_id": 439803, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7676fcbab6019cf9799efe2c87b915a6?s=128&d=identicon&r=PG", "display_name": "ritcoder", "link": "https://stackoverflow.com/users/439803/ritcoder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5769, "favorite_count": 1, "accepted_answer_id": 29268907, "answer_count": 1, "score": 12, "last_activity_date": 1429520689, "creation_date": 1427328460, "last_edit_date": 1429520689, "question_id": 29268866, "link": "https://stackoverflow.com/questions/29268866/is-there-a-way-to-name-arrow-functions-in-javascript", "title": "Is there a way to name arrow functions in javascript?", "body": "<p>I'm using arrow functions in an app and sometimes there is the need to get a reference to the function itself. For normal javascript functions, I can just name them and use the name from within. For arrow functions, I'm currently using <code>arguments.callee</code>. Is there a way to name arrow functions so that a reference can be used from within?</p>\n\n<p>Sample code</p>\n\n<pre><code>//typescript\nprivate evaluateIf(expr: parserModule.IIfExpression, callback: IEnvCallback) {\n    this.evaluate(expr.condition, proceed=&gt; {\n        guard(arguments.callee, arguments, this);\n        if (proceed !== false) this.evaluate(expr.then, callback);\n        else if (expr.else) this.evaluate(expr.else, callback);\n        else callback(false);\n    });\n}\n\n//javascript\n    Environment.prototype.evaluateIf = function (expr, callback) {\n    var _this = this;\n    this.evaluate(expr.condition, function (proceed) {\n        guard(arguments.callee, arguments, _this);\n        if (proceed !== false)\n            _this.evaluate(expr.then, callback);\n        else if (expr.else)\n            _this.evaluate(expr.else, callback);\n        else\n            callback(false);\n    });\n};\n</code></pre>\n\n<p>What I settled on after the assistance since arguments might not be there forever</p>\n\n<pre><code>private evaluateIf(expr: parserModule.IIfExpression, callback: IEnvCallback) {\n    var fn;\n    this.evaluate(expr.condition, fn = proceed=&gt; {\n        guard(fn, [proceed], this);\n        if (proceed !== false) this.evaluate(expr.then, callback);\n        else if (expr.else) this.evaluate(expr.else, callback);\n        else callback(false);\n    });\n}\n</code></pre>\n"}]