[{"tags": ["google-app-engine", "gradle", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 809, "user_id": 3997741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/30482c8b269411a2ddf47ffd5f9e1487?s=128&d=identicon&r=PG", "display_name": "vonox7", "link": "https://stackoverflow.com/users/3997741/vonox7"}, "edited": false, "score": 2, "creation_date": 1448728656, "post_id": 29513163, "comment_id": 55703683, "body": "As of November 2015, the debugger in Google Developer Console can only debug .java files. Kotlin is not supported for live debugging."}, {"owner": {"reputation": 1739, "user_id": 57357, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/46b892c9b15be26fec41fe9112410d5f?s=128&d=identicon&r=PG", "display_name": "Dan Tanner", "link": "https://stackoverflow.com/users/57357/dan-tanner"}, "edited": false, "score": 1, "creation_date": 1525225134, "post_id": 29513163, "comment_id": 87270061, "body": "Not a full answer, so just adding a comment here to say that the ktor project includes a sample app engine project here: <a href=\"https://github.com/ktorio/ktor-samples/tree/master/deployment/google-appengine-standard\" rel=\"nofollow noreferrer\">github.com/ktorio/ktor-samples/tree/master/deployment/&hellip;</a>"}], "tags": [], "owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "is_accepted": true, "score": 11, "last_activity_date": 1484645790, "last_edit_date": 1484645790, "creation_date": 1428491983, "answer_id": 29513163, "question_id": 29513162, "link": "https://stackoverflow.com/questions/29513162/how-to-use-kotlin-in-appengine-projects-using-gradle/29513163#29513163", "title": "How to use Kotlin in AppEngine projects using Gradle", "body": "<p>Since AppEngine executes compiled .class files, it doesn't care what JVM language produced these. This means we can use Kotlin.</p>\n\n<p>One way to do this is by using Gradle and the <a href=\"https://github.com/GoogleCloudPlatform/gradle-appengine-plugin\" rel=\"nofollow noreferrer\">Gradle App Engine plugin</a>. Create a project with a <code>build.gradle</code> that looks something like <a href=\"https://github.com/GoogleCloudPlatform/gradle-appengine-templates/blob/master/HelloWorld/root/build.gradle.ftl\" rel=\"nofollow noreferrer\">this</a>. Then add the Kotlin dependencies and apply the plugin. The final build file looks something like this:</p>\n\n<pre><code>buildscript {\n    ext.kotlin_version = '1.0.6' //replace with latest Kotlin version\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.32' //Replace with latest GAE plugin version\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n\nrepositories {\n    mavenCentral();\n}\n\napply plugin: 'java'\napply plugin: 'kotlin'\napply plugin: 'war'\napply plugin: 'appengine'\n\nsourceCompatibility = JavaVersion.VERSION_1_7\ntargetCompatibility = JavaVersion.VERSION_1_7\n\ndependencies {\n    appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.32' //Replace with latest GAE SDK version\n    compile 'javax.servlet:servlet-api:2.5'\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n}\n\nappengine {\n    downloadSdk = true\n    appcfg {\n        oauth2 = true\n    }\n}\n</code></pre>\n\n<p>Since M11 you don't need to have a separate directory for Kotlin files so you can just add your .kt files to <code>src/main/java</code>.</p>\n"}], "owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2015, "favorite_count": 4, "accepted_answer_id": 29513163, "answer_count": 1, "score": 12, "last_activity_date": 1484645790, "creation_date": 1428491983, "question_id": 29513162, "link": "https://stackoverflow.com/questions/29513162/how-to-use-kotlin-in-appengine-projects-using-gradle", "title": "How to use Kotlin in AppEngine projects using Gradle", "body": "<p>Like the title says, how can I use Kotlin when developing AppEngine projects? I'm using IntelliJ/Android Studio with Gradle as my build tool.</p>\n"}, {"tags": ["traits", "kotlin"], "comments": [{"owner": {"reputation": 6493, "user_id": 1020900, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab5f80978d59af0204e0986ca41d2c23?s=128&d=identicon&r=PG", "display_name": "bashor", "link": "https://stackoverflow.com/users/1020900/bashor"}, "edited": false, "score": 0, "creation_date": 1428424748, "post_id": 29494071, "comment_id": 47152122, "body": "Please report the issue to <a href=\"https://youtrack.jetbrains.com/newIssue?project=KT\" rel=\"nofollow noreferrer\">the tracker</a>"}, {"owner": {"reputation": 6493, "user_id": 1020900, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab5f80978d59af0204e0986ca41d2c23?s=128&d=identicon&r=PG", "display_name": "bashor", "link": "https://stackoverflow.com/users/1020900/bashor"}, "edited": false, "score": 1, "creation_date": 1428425025, "post_id": 29494071, "comment_id": 47152297, "body": "You can fix your code by using the same property kind(<code>val</code>/<code>var</code>) in both side(trait and data class)."}, {"owner": {"reputation": 14292, "user_id": 2820, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/631713865b68894b6bf525e16d817f58?s=128&d=identicon&r=PG", "display_name": "Onorio Catenacci", "link": "https://stackoverflow.com/users/2820/onorio-catenacci"}, "edited": false, "score": 0, "creation_date": 1428426254, "post_id": 29494071, "comment_id": 47152978, "body": "What&#39;s the purpose of making one <i>offset</i> mutable (var) and the other immutable (val)?  That&#39;s not a minor difference."}, {"owner": {"reputation": 5483, "user_id": 1356130, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/71a884fac9d80ee3171a4018b1eaf660?s=128&d=identicon&r=PG", "display_name": "atok", "link": "https://stackoverflow.com/users/1356130/atok"}, "reply_to_user": {"reputation": 6493, "user_id": 1020900, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab5f80978d59af0204e0986ca41d2c23?s=128&d=identicon&r=PG", "display_name": "bashor", "link": "https://stackoverflow.com/users/1020900/bashor"}, "edited": false, "score": 0, "creation_date": 1428475539, "post_id": 29494071, "comment_id": 47171991, "body": "@bashor You are right. It was my mistake of using &quot;var&quot; what was causing the problem. Thank you! If you submit it as an answer I will accept it."}, {"owner": {"reputation": 6493, "user_id": 1020900, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab5f80978d59af0204e0986ca41d2c23?s=128&d=identicon&r=PG", "display_name": "bashor", "link": "https://stackoverflow.com/users/1020900/bashor"}, "edited": false, "score": 0, "creation_date": 1428486135, "post_id": 29494071, "comment_id": 47178118, "body": "@atok done. Related issue: <a href=\"https://youtrack.jetbrains.com/issue/KT-6759\" rel=\"nofollow noreferrer\">KT-6759</a>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451707461, "post_id": 29494071, "comment_id": 56868647, "body": "The issue mentioned above KT-6759 has been marked dupe of another issue which was marked as fixed.  So the compiler crash shouldn&#39;t happen in this case."}], "answers": [{"tags": [], "owner": {"reputation": 6493, "user_id": 1020900, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab5f80978d59af0204e0986ca41d2c23?s=128&d=identicon&r=PG", "display_name": "bashor", "link": "https://stackoverflow.com/users/1020900/bashor"}, "is_accepted": true, "score": 1, "last_activity_date": 1428485687, "creation_date": 1428485687, "answer_id": 29510972, "question_id": 29494071, "link": "https://stackoverflow.com/questions/29494071/using-traits-with-data-classes-in-kotlin/29510972#29510972", "title": "Using traits with data classes in Kotlin?", "body": "<p>You can fix your code by using the same property kind(<code>val</code>/<code>var</code>) in both side(<code>trait</code> and <code>data class</code>).</p>\n"}, {"tags": [], "owner": {"reputation": 825, "user_id": 1195310, "user_type": "registered", "accept_rate": 31, "profile_image": "https://graph.facebook.com/100000371088350/picture?type=large", "display_name": "John", "link": "https://stackoverflow.com/users/1195310/john"}, "is_accepted": false, "score": 0, "last_activity_date": 1582800972, "creation_date": 1582800972, "answer_id": 60431643, "question_id": 29494071, "link": "https://stackoverflow.com/questions/29494071/using-traits-with-data-classes-in-kotlin/60431643#60431643", "title": "Using traits with data classes in Kotlin?", "body": "<p>I was looking for achieving multiple inheritence in Kotlin, came across trait. But later found that traits do not exist anymore and their semantics have changed significantly once renamed to interfaces to match Java 8 semantics.</p>\n\n<p>The keyword trait was a keyword in Kotlin but now it's removed. It was deprecated on the Kotlin M12 release.</p>\n\n<p>You can find more <a href=\"https://blog.jetbrains.com/kotlin/2015/04/upcoming-changes-and-more/\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 5483, "user_id": 1356130, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/71a884fac9d80ee3171a4018b1eaf660?s=128&d=identicon&r=PG", "display_name": "atok", "link": "https://stackoverflow.com/users/1356130/atok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1144, "favorite_count": 0, "accepted_answer_id": 29510972, "answer_count": 2, "score": 0, "last_activity_date": 1582800972, "creation_date": 1428416957, "last_edit_date": 1428418394, "question_id": 29494071, "link": "https://stackoverflow.com/questions/29494071/using-traits-with-data-classes-in-kotlin", "title": "Using traits with data classes in Kotlin?", "body": "<p>I have two model objects / DTOs defined as data classes</p>\n\n<pre><code>public data class ModelA(val limit: Int, val offset: Int, val someDataA: DataAlpha)\npublic data class ModelB(val limit: Int, val offset: Int, val someDataB: DataBeta)\n</code></pre>\n\n<p>I would like to generalize pagination based on something like <strong>Paginable</strong> trait:</p>\n\n<pre><code>trait Paginable {\n    var limit: Int\n    var offset: Int\n}\n</code></pre>\n\n<p>But making ModelA implement Paginable causes an error: </p>\n\n<p><em>Error: 'offset' hides member of supertype 'Paginable' and needs 'override' modifier</em></p>\n\n<p>Adding <em>override</em>: </p>\n\n<pre><code>public data class ModelB(override val limit: Int, override val offset: Int, val someDataB: DataBeta) : Paginable\n</code></pre>\n\n<p>causes even more interesting error, crashing the compiler:</p>\n\n<pre><code>Error:java.lang.ClassCastException: org.jetbrains.kotlin.psi.JetParameter cannot be cast to org.jetbrains.kotlin.psi.JetProperty\n    at org.jetbrains.kotlin.resolve.OverrideResolver$3.varOverriddenByVal(OverrideResolver.java:562)\n    at org.jetbrains.kotlin.resolve.OverrideResolver.checkOverridesForMemberMarkedOverride(OverrideResolver.java:606)\n    at org.jetbrains.kotlin.resolve.OverrideResolver.checkOverrideForMember(OverrideResolver.java:529)\n    at org.jetbrains.kotlin.resolve.OverrideResolver.checkOverridesInAClass(OverrideResolver.java:269)\n    at org.jetbrains.kotlin.resolve.OverrideResolver.checkOverrides(OverrideResolver.java:260)\n    at org.jetbrains.kotlin.resolve.OverrideResolver.check(OverrideResolver.java:67)\n    at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.java:299)\n    at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeDeclarations(LazyTopDownAnalyzerForTopLevel.java:77)\n    at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeFiles(LazyTopDownAnalyzerForTopLevel.java:69)\n    at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.java:147)\n    at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegrationWithCustomContext(TopDownAnalyzerFacadeForJVM.java:100)\n    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$2.invoke(KotlinToJVMBytecodeCompiler.java:307)\n    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$2.invoke(KotlinToJVMBytecodeCompiler.java:300)\n    at org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.java:232)\n    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinToJVMBytecodeCompiler.java:299)\n    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyzeAndGenerate(KotlinToJVMBytecodeCompiler.java:282)\n    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileBunchOfSources(KotlinToJVMBytecodeCompiler.java:208)\n    at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.java:189)\n    at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.java:49)\n    at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:148)\n    at org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile.callCompiler(Tasks.kt:86)\n    at org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile.compile(Tasks.kt:62)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:63)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.doExecute(AnnotationProcessingTaskFactory.java:218)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:211)\n    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:200)\n    at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:579)\n    at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:562)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\n    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n    at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n    at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\n    at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n    at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:42)\n    at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n    at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\n    at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\n</code></pre>\n\n<p>I'm aware that the trait can be implemented \"manually\" inside of the class body but this will break the data class as <em>equals</em>, <em>hashCode</em> and <em>copy</em> will ignore added properties.</p>\n"}, {"tags": ["java", "android", "kotlin"], "comments": [{"owner": {"reputation": 604, "user_id": 3622901, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/632913115/picture?type=large", "display_name": "trpride", "link": "https://stackoverflow.com/users/3622901/trpride"}, "edited": false, "score": 0, "creation_date": 1428417997, "post_id": 29493546, "comment_id": 47147692, "body": "try cleaning and rebuilding"}], "answers": [{"comments": [{"owner": {"reputation": 23981, "user_id": 2813589, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/9axBj.jpg?s=128&g=1", "display_name": "\u30a2\u30ec\u30c3\u30af\u30b9", "link": "https://stackoverflow.com/users/2813589/%e3%82%a2%e3%83%ac%e3%83%83%e3%82%af%e3%82%b9"}, "edited": false, "score": 0, "creation_date": 1428453197, "post_id": 29502212, "comment_id": 47165306, "body": "are you sure they can&#39;t, do you have the link?"}, {"owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "reply_to_user": {"reputation": 23981, "user_id": 2813589, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/9axBj.jpg?s=128&g=1", "display_name": "\u30a2\u30ec\u30c3\u30af\u30b9", "link": "https://stackoverflow.com/users/2813589/%e3%82%a2%e3%83%ac%e3%83%83%e3%82%af%e3%82%b9"}, "edited": false, "score": 0, "creation_date": 1428491079, "post_id": 29502212, "comment_id": 47181415, "body": "<a href=\"http://kotlinlang.org/docs/reference/java-interop.html#accessing-static-members\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/&hellip;</a> It doesn&#39;t say it explicitely, but it&#39;s how the compiler works anyway."}], "tags": [], "owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "is_accepted": false, "score": 3, "last_activity_date": 1428444369, "creation_date": 1428444369, "answer_id": 29502212, "question_id": 29493546, "link": "https://stackoverflow.com/questions/29493546/listview-choice-mode-single-unresolved-reference/29502212#29502212", "title": "ListView.CHOICE_MODE_SINGLE unresolved reference", "body": "<p>Static variables and methods cannot be called on subclasses in Kotlin. <code>AbsListView.CHOICE_MODE_SINGLE</code> is the correct way to call them.</p>\n"}], "owner": {"reputation": 23981, "user_id": 2813589, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/9axBj.jpg?s=128&g=1", "display_name": "\u30a2\u30ec\u30c3\u30af\u30b9", "link": "https://stackoverflow.com/users/2813589/%e3%82%a2%e3%83%ac%e3%83%83%e3%82%af%e3%82%b9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 340, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1428444369, "creation_date": 1428415542, "question_id": 29493546, "link": "https://stackoverflow.com/questions/29493546/listview-choice-mode-single-unresolved-reference", "title": "ListView.CHOICE_MODE_SINGLE unresolved reference", "body": "<p>This code works well in Java but in Kotlin not:</p>\n\n<pre><code>import android.widget.ListView\n\nmyListView = getListView(....)\nmyListView!!.setChoiceMode(ListView.CHOICE_MODE_SINGLE)\n</code></pre>\n\n<p>The constant <code>CHOICE_MODE_SINGLE</code> isn't found. When I click on <code>ListView</code> it takes me to <code>public class ListView extends AbsListView {</code> which is the right place where <code>ListView</code> is located.</p>\n\n<p>Why is that?</p>\n"}, {"tags": ["android", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "reply_to_user": {"reputation": 105, "user_id": 4608621, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ffbd147861efe7489f6cec035e4f3a3f?s=128&d=identicon&r=PG&f=1", "display_name": "Julys Pablo", "link": "https://stackoverflow.com/users/4608621/julys-pablo"}, "edited": false, "score": 0, "creation_date": 1428533809, "post_id": 29502185, "comment_id": 47207883, "body": "No, just use CameraMetadata.CONTROL_AF_STATE_FOCUSED_LOCKED instead of CaptureResult.CONTROL_AF_STATE_FOCUSED_LOCKED"}, {"owner": {"reputation": 105, "user_id": 4608621, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ffbd147861efe7489f6cec035e4f3a3f?s=128&d=identicon&r=PG&f=1", "display_name": "Julys Pablo", "link": "https://stackoverflow.com/users/4608621/julys-pablo"}, "edited": false, "score": 0, "creation_date": 1428542810, "post_id": 29502185, "comment_id": 47210445, "body": "Thanks! I&#39;ll try your advice."}], "tags": [], "owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "is_accepted": true, "score": 2, "last_activity_date": 1428444262, "creation_date": 1428444262, "answer_id": 29502185, "question_id": 29480242, "link": "https://stackoverflow.com/questions/29480242/kotlin-unresolved-reference-for-constant/29502185#29502185", "title": "Kotlin - unresolved reference for constant", "body": "<p>These variables are declared in CameraMetadata. In Kotlin static variables and methods cannot be called on subclasses.</p>\n"}], "owner": {"reputation": 105, "user_id": 4608621, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ffbd147861efe7489f6cec035e4f3a3f?s=128&d=identicon&r=PG&f=1", "display_name": "Julys Pablo", "link": "https://stackoverflow.com/users/4608621/julys-pablo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1442, "favorite_count": 1, "accepted_answer_id": 29502185, "answer_count": 1, "score": 1, "last_activity_date": 1428444262, "creation_date": 1428356891, "question_id": 29480242, "link": "https://stackoverflow.com/questions/29480242/kotlin-unresolved-reference-for-constant", "title": "Kotlin - unresolved reference for constant", "body": "<p>I'm trying to use the sample code of the new camera hardware API (android.hardware.camera2) for my android app. First, I converted the Java code to Kotlin code by the automatic conversion feature of the Kotlin plugin for Android Studio. Below is a piece of the converted code:</p>\n\n<pre><code>private val mCaptureCallback = object : CameraCaptureSession.CaptureCallback() {\n\n    private fun process(result: CaptureResult) {\n        when (mState) {\n            STATE_PREVIEW -&gt; {\n            }// We have nothing to do when the camera preview is working normally.\n            STATE_WAITING_LOCK -&gt; {\n                val afState = result.get(CaptureResult.CONTROL_AF_STATE)\n                if (CaptureResult.CONTROL_AF_STATE_FOCUSED_LOCKED == afState || CaptureResult.CONTROL_AF_STATE_NOT_FOCUSED_LOCKED == afState) {\n                    // CONTROL_AE_STATE can be null on some devices\n                    val aeState = result.get&lt;Int&gt;(CaptureResult.CONTROL_AE_STATE)\n                    if (aeState == null || aeState == CaptureResult.CONTROL_AE_STATE_CONVERGED) {\n                        mState = STATE_WAITING_NON_PRECAPTURE\n                        captureStillPicture()\n                    } else {\n                        runPrecaptureSequence()\n                    }\n                }\n            }\n            STATE_WAITING_PRECAPTURE -&gt; {\n                // CONTROL_AE_STATE can be null on some devices\n                val aeState = result.get&lt;Int&gt;(CaptureResult.CONTROL_AE_STATE)\n                if (aeState == null || aeState == CaptureResult.CONTROL_AE_STATE_PRECAPTURE || aeState == CaptureRequest.CONTROL_AE_STATE_FLASH_REQUIRED) {\n                    mState = STATE_WAITING_NON_PRECAPTURE\n                }\n            }\n            STATE_WAITING_NON_PRECAPTURE -&gt; {\n                // CONTROL_AE_STATE can be null on some devices\n                val aeState = result.get&lt;Int&gt;(CaptureResult.CONTROL_AE_STATE)\n                if (aeState == null || aeState != CaptureResult.CONTROL_AE_STATE_PRECAPTURE) {\n                    mState = STATE_PICTURE_TAKEN\n                    captureStillPicture()\n                }\n            }\n        }\n    }\n</code></pre>\n\n<p>I'm getting the unresolved reference error for:</p>\n\n<pre><code>CaptureResult.CONTROL_AF_STATE_FOCUSED_LOCKED\nCaptureResult.CONTROL_AF_STATE_NOT_FOCUSED_LOCKED\nCaptureResult.CONTROL_AE_STATE_CONVERGED\nCaptureResult.CONTROL_AE_STATE_PRECAPTURE\nCaptureRequest.CONTROL_AE_STATE_FLASH_REQUIRED\n</code></pre>\n\n<p>But these constants are recognized in the original Java code. There's any solution for these errors?</p>\n"}, {"tags": ["android", "android-recyclerview", "kotlin"], "comments": [{"owner": {"reputation": 1370, "user_id": 2784663, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/87rVp.jpg?s=128&g=1", "display_name": "YLS", "link": "https://stackoverflow.com/users/2784663/yls"}, "edited": false, "score": 0, "creation_date": 1510911399, "post_id": 29424944, "comment_id": 81646647, "body": "how you will call extension function onClick in your activity"}, {"owner": {"reputation": 2169, "user_id": 507142, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/Q06jF.jpg?s=128&g=1", "display_name": "Afzal N", "link": "https://stackoverflow.com/users/507142/afzal-n"}, "reply_to_user": {"reputation": 1370, "user_id": 2784663, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/87rVp.jpg?s=128&g=1", "display_name": "YLS", "link": "https://stackoverflow.com/users/2784663/yls"}, "edited": false, "score": 0, "creation_date": 1516660142, "post_id": 29424944, "comment_id": 83770539, "body": "You set the itemClickListener (itemOnClick in this example) in the constructor of the Adapter. The ViewHolder calls it. In hindsight, this still works and I should probably use this more lol. Keep making a manual onClick method every time these days."}, {"owner": {"reputation": 1384, "user_id": 2243501, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2ecaf511de1e8849be72e40a4dea9799?s=128&d=identicon&r=PG", "display_name": "Dusk", "link": "https://stackoverflow.com/users/2243501/dusk"}, "edited": false, "score": 0, "creation_date": 1542101457, "post_id": 29424944, "comment_id": 93437611, "body": "Also you can take Rx or LiveData approaches to avoid using callbacks for passing around your events."}], "answers": [{"comments": [{"owner": {"reputation": 8612, "user_id": 8874958, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39990cd5d2bd537729f7b2b7a1a724a7?s=128&d=identicon&r=PG&f=1", "display_name": "Kishan Solanki", "link": "https://stackoverflow.com/users/8874958/kishan-solanki"}, "edited": false, "score": 2, "creation_date": 1521871757, "post_id": 29428429, "comment_id": 85926421, "body": "Add full example for better understanding."}], "tags": [], "owner": {"reputation": 4427, "user_id": 4706743, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64b05c3b09628ba8955d6d7a188271af?s=128&d=identicon&r=PG&f=1", "display_name": "D3xter", "link": "https://stackoverflow.com/users/4706743/d3xter"}, "is_accepted": false, "score": 2, "last_activity_date": 1428047954, "creation_date": 1428047954, "answer_id": 29428429, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/29428429#29428429", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>You could try something like:</p>\n\n<pre><code>public class MainActivity : ActionBarActivity() {\n    protected override fun onCreate(savedInstanceState: Bundle?) {\n        [...]\n        val adapter = DrawAdapter(::onItemClick)\n        [...]\n    }\n}\n\nfun onItemClick(view: View, position: Int) {\n    //Do work\n}\n</code></pre>\n\n<p>and SAM convertion just works like in Java 8, so just use a lambda:</p>\n\n<pre><code>public class MainActivity : ActionBarActivity() {\n    protected override fun onCreate(savedInstanceState: Bundle?) {\n        [...]\n        val adapter = DrawAdapter({view, position -&gt; /*Do work*/ })\n        [...]\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3630, "user_id": 2231118, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4127d2dd123892a9b2ec5a647ba59b3c?s=128&d=identicon&r=PG", "display_name": "bpolat", "link": "https://stackoverflow.com/users/2231118/bpolat"}, "edited": false, "score": 13, "creation_date": 1504267704, "post_id": 29428715, "comment_id": 78960021, "body": "This is called in Adapter. How to use this in mainActivity as callback?"}, {"owner": {"reputation": 859, "user_id": 2564630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/692756ed16a80d1a4243d256b2db5cac?s=128&d=identicon&r=PG", "display_name": "pkliang", "link": "https://stackoverflow.com/users/2564630/pkliang"}, "reply_to_user": {"reputation": 3630, "user_id": 2231118, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4127d2dd123892a9b2ec5a647ba59b3c?s=128&d=identicon&r=PG", "display_name": "bpolat", "link": "https://stackoverflow.com/users/2231118/bpolat"}, "edited": false, "score": 0, "creation_date": 1523434496, "post_id": 29428715, "comment_id": 86554669, "body": "@bpolat you can create a call back, for example, MyAdapter(private val itemClickedListener: (String) -&gt; Unit), and call it in the listen function with itemClickedListener.invoke(item). In you activity, you instantiate adapter = MyAdapter { /*handle your cb here*/ }"}, {"owner": {"reputation": 1346, "user_id": 2534612, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/80092c09953205432249cc4ab1003e14?s=128&d=identicon&r=PG", "display_name": "Jarvis", "link": "https://stackoverflow.com/users/2534612/jarvis"}, "edited": false, "score": 0, "creation_date": 1532811287, "post_id": 29428715, "comment_id": 90116107, "body": "how to handle longOnClickListener in same way?"}, {"owner": {"reputation": 532, "user_id": 6799504, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/baYy8.jpg?s=128&g=1", "display_name": "Ponomarenko Oleh", "link": "https://stackoverflow.com/users/6799504/ponomarenko-oleh"}, "edited": false, "score": 0, "creation_date": 1547134241, "post_id": 29428715, "comment_id": 95095137, "body": "By this approach onClick method not every time is called."}, {"owner": {"reputation": 8237, "user_id": 2425851, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/fFyvZ.png?s=128&g=1", "display_name": "NickUnuchek", "link": "https://stackoverflow.com/users/2425851/nickunuchek"}, "edited": false, "score": 0, "creation_date": 1619073779, "post_id": 29428715, "comment_id": 118795404, "body": "I notice that if <code>OnClickListener</code> is added in method <code>onCreateViewHolder</code> then sometimes it doesn&#39;t work. So I suggest to add <code>OnClickListener</code> in method <code>onBindViewHolder</code>"}], "tags": [], "owner": {"reputation": 8433, "user_id": 1456931, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/a5b9a171ecc501424c4fb4fa166fe0cf?s=128&d=identicon&r=PG", "display_name": "Damian Petla", "link": "https://stackoverflow.com/users/1456931/damian-petla"}, "is_accepted": true, "score": 39, "last_activity_date": 1428049387, "creation_date": 1428049387, "answer_id": 29428715, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/29428715#29428715", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>I have a little bit different approach. You can create an extension for your ViewHolder</p>\n\n<pre><code>fun &lt;T : RecyclerView.ViewHolder&gt; T.listen(event: (position: Int, type: Int) -&gt; Unit): T {\n    itemView.setOnClickListener {\n        event.invoke(getAdapterPosition(), getItemViewType())\n    }\n    return this\n}\n</code></pre>\n\n<p>Then use it in adapter like this</p>\n\n<pre><code>class MyAdapter : RecyclerView.Adapter&lt;MyAdapter.MyViewHolder&gt;() {\n\n    val items: MutableList&lt;String&gt; = arrayListOf()\n\n    override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): MyViewHolder? {\n        val inflater = LayoutInflater.from(parent!!.getContext())\n        val view = inflater.inflate(R.layout.item_view, parent, false)\n        return MyViewHolder(view).listen { pos, type -&gt;\n            val item = items.get(pos)\n            //TODO do other stuff here\n        }\n    }\n\n    override fun onBindViewHolder(holder: MyViewHolder?, position: Int) {\n\n    }\n\n    override fun getItemCount(): Int {\n        return items.size()\n    }\n\n\n    class MyViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n\n    }\n}\n</code></pre>\n\n<p>I am working with my colleagues on <a href=\"https://github.com/Schibsted-Tech-Polska/kotlin-kit\" rel=\"noreferrer\">library</a> providing such extensions.</p>\n"}, {"comments": [{"owner": {"reputation": 359, "user_id": 5120346, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Eqcqi.jpg?s=128&g=1", "display_name": "sednanre", "link": "https://stackoverflow.com/users/5120346/sednanre"}, "reply_to_user": {"reputation": 1370, "user_id": 2784663, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/87rVp.jpg?s=128&g=1", "display_name": "YLS", "link": "https://stackoverflow.com/users/2784663/yls"}, "edited": false, "score": 2, "creation_date": 1511025341, "post_id": 44831977, "comment_id": 81689975, "body": "@YLS just edited the post with the update. Check it above :)"}, {"owner": {"reputation": 928, "user_id": 9831902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/382eb1f4b6c3a6b9fbf70a259547deca?s=128&d=identicon&r=PG&f=1", "display_name": "Nanda Z", "link": "https://stackoverflow.com/users/9831902/nanda-z"}, "edited": false, "score": 2, "creation_date": 1564024268, "post_id": 44831977, "comment_id": 100896414, "body": "i like this simple and easy to understand"}, {"owner": {"reputation": 159, "user_id": 9894200, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/N32mY.jpg?s=128&g=1", "display_name": "Maicon Gilton", "link": "https://stackoverflow.com/users/9894200/maicon-gilton"}, "edited": false, "score": 2, "creation_date": 1594772327, "post_id": 44831977, "comment_id": 111241972, "body": "I liked it! Very concise answer."}, {"owner": {"reputation": 926, "user_id": 843001, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/c3b3f16ea2f7025bcb5d51bc54a9ee55?s=128&d=identicon&r=PG", "display_name": "Duna", "link": "https://stackoverflow.com/users/843001/duna"}, "edited": false, "score": 0, "creation_date": 1612771937, "post_id": 44831977, "comment_id": 116860486, "body": "This method should be avoided since the click listener should be set once when holder is created. By doing so you trigger lot of setOnClickListeners"}, {"owner": {"reputation": 53, "user_id": 12080451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3552dfcb0d9690bd48c8ddc50a2e129?s=128&d=identicon&r=PG&f=1", "display_name": "Nadjib Rebahi", "link": "https://stackoverflow.com/users/12080451/nadjib-rebahi"}, "edited": false, "score": 0, "creation_date": 1613163302, "post_id": 44831977, "comment_id": 117001329, "body": "You can use <code>ListAdapter</code> in place of RecyclerView.Adapter and use <code>getItem(position)</code> to retrieve current item insteed of passing the whole list of objects."}], "tags": [], "owner": {"reputation": 359, "user_id": 5120346, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Eqcqi.jpg?s=128&g=1", "display_name": "sednanre", "link": "https://stackoverflow.com/users/5120346/sednanre"}, "is_accepted": false, "score": 16, "last_activity_date": 1511025294, "last_edit_date": 1511025294, "creation_date": 1498758982, "answer_id": 44831977, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/44831977#44831977", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>In case anyone is looking for a more <em>no-frills</em> answer, I tried the following - which is very similar to the solution from <strong>AfzalivE</strong>:</p>\n\n<p>In my Adapter class I passed the <code>clickListener</code> as a parameter. On <code>onBindViewHolder</code>, I've used <code>setOnClickListener</code> to call <code>clickListener</code> and handle click event.</p>\n\n<p><strong>MyAdapter.kt</strong>:</p>\n\n<pre><code>class MyAdapter constructor(objects: ArrayList&lt;MyObject&gt;, val clickListener: (MyObject) -&gt; Unit) : RecyclerView.Adapter&lt;MyAdapter.Holder&gt;() {\n\n    private var mObjects : ArrayList&lt;MyObject&gt; = ArrayList&lt;MyObject&gt;()\n\n    init {\n        mObjects = objects\n    }\n\n    override fun onBindViewHolder(holder: Holder?, position: Int) {\n        var item : MyObject = objects[position]\n\n        // Calling the clickListener sent by the constructor\n        holder?.containerView?.setOnClickListener { clickListener(item) }\n    }\n\n    // More code (ViewHolder definitions and stuff)...\n\n}\n</code></pre>\n\n<p><strong>Note</strong>: I needed a reference from my list item's container (the root view), which in this case is <code>containerView</code></p>\n\n<p>Then I passed my object as parameter without need for searching it on a list again and handle it directly on my <code>Activity</code> class, in the moment I set the adapter:</p>\n\n<p><strong>MyActivity.kt</strong>:</p>\n\n<pre><code>myRecyclerView?.adapter = MyAdapter(mObjects) {\n    Log.e(\"Activity\", \"Clicked on item ${it.itemName}\")\n}  \n</code></pre>\n\n<hr>\n\n<p><strong><em>Update</em></strong></p>\n\n<p>If you need to get the position of the clicked item, just define it as parameter on the callback and then send it back later. Notice the <code>val clickListener: (MyObject, Int) -&gt; Unit</code> below:</p>\n\n<p><strong>MyAdapter.kt</strong></p>\n\n<pre><code>class MyAdapter constructor(objects: ArrayList&lt;MyObject&gt;, val clickListener: (MyObject, Int) -&gt; Unit) : RecyclerView.Adapter&lt;MyAdapter.Holder&gt;() {\n    // Rest of the code...\n</code></pre>\n\n<p>Then on <code>onBindViewHolder()</code> you pass the position when calling the callback method:</p>\n\n<pre><code>override fun onBindViewHolder(holder: Holder?, position: Int) {\n    var item : MyObject = objects[position]\n\n    // Calling the clickListener sent by the constructor\n    holder?.containerView?.setOnClickListener { clickListener(item, position) }\n}\n</code></pre>\n\n<p>And on <strong>MyActivity.kt</strong>, you'll have to change the way you set the adapter so you can get the position. Like this:</p>\n\n<pre><code>myRecyclerView?.adapter = MyAdapter(mObjects) { itemDto: MyObject, position: Int -&gt;\n        Log.e(\"MyActivity\", \"Clicked on item  ${itemDto.someItemPropertyLikeName} at position $position\")\n    }\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1631, "user_id": 5731003, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/BWfLR.jpg?s=128&g=1", "display_name": "phen0menon", "link": "https://stackoverflow.com/users/5731003/phen0menon"}, "edited": false, "score": 0, "creation_date": 1529673947, "post_id": 44838822, "comment_id": 88972479, "body": "Great solution, this one was useful for me. Thanks."}, {"owner": {"reputation": 10231, "user_id": 3152529, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/gZ3qm.jpg?s=128&g=1", "display_name": "Jay Rathod RJ", "link": "https://stackoverflow.com/users/3152529/jay-rathod-rj"}, "edited": false, "score": 0, "creation_date": 1545649082, "post_id": 44838822, "comment_id": 94668660, "body": "What is <i>listViewItem</i> here belongs to ?"}], "tags": [], "owner": {"reputation": 498, "user_id": 6164819, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-NJ0M1AzemT8/AAAAAAAAAAI/AAAAAAAAABc/URQP5QUxzjg/photo.jpg?sz=128", "display_name": "rakesh rajput", "link": "https://stackoverflow.com/users/6164819/rakesh-rajput"}, "is_accepted": false, "score": 2, "last_activity_date": 1529681588, "last_edit_date": 1529681588, "creation_date": 1498798483, "answer_id": 44838822, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/44838822#44838822", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>In RecyclerView you can put click on inflated view inside <code>ViewHolder</code> class and call it from <code>onBindViewHolder</code> callback method for example:</p>\n\n<pre><code>class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n\n    val view = view\n    val tv_message = view.tv_message\n    val tv_address = view.tv_address\n\n    fun bind(listViewItem: ListViewItem) {\n        view.setOnClickListener(View.OnClickListener {\n\n            Toast.makeText(\n                view.context, \n                \"Name: \" + listViewItem.name + \"/n Address: \" + listViewItem.address, \n                Toast.LENGTH_LONG).show()\n            })\n        }\n    }\n}\n</code></pre>\n\n<p>You can call from adapter <code>onBindViewHolder()</code> method:</p>\n\n<pre><code>override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n\n    val listViewItem: ListViewItem = mListViewItems[position]\n    holder.tv_message.text = listViewItem.name\n    holder.tv_address.text = listViewItem.address\n    holder.bind(mListViewItems[position]);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1186, "user_id": 1434047, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/abaa451e2b93ad55c9ff5107be30b5a1?s=128&d=identicon&r=PG", "display_name": "Bink", "link": "https://stackoverflow.com/users/1434047/bink"}, "edited": false, "score": 1, "creation_date": 1549043772, "post_id": 48803135, "comment_id": 95776521, "body": "Would someone please elaborate on why this is a good solution?  I\u2019m new to Android development and this seems very verbose and boilerplate to me."}, {"owner": {"reputation": 2719, "user_id": 1947601, "user_type": "registered", "accept_rate": 42, "profile_image": "https://i.stack.imgur.com/OkoEH.jpg?s=128&g=1", "display_name": "0xMatthewGroves", "link": "https://stackoverflow.com/users/1947601/0xmatthewgroves"}, "edited": false, "score": 1, "creation_date": 1560828121, "post_id": 48803135, "comment_id": 99853319, "body": "It&#39;s a solution, but your instincts are correct - there&#39;s too much boilerplate here. Though it takes a few passes to understand the kotlin syntax, a decent approach can be found here: <a href=\"https://antonioleiva.com/recyclerview-adapter-kotlin/\" rel=\"nofollow noreferrer\">antonioleiva.com/recyclerview-adapter-kotlin</a>"}], "tags": [], "owner": {"reputation": 2070, "user_id": 6831069, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-q7tFkSOSkGI/AAAAAAAAAAI/AAAAAAAAACU/qAgo9WXZUM0/photo.jpg?sz=128", "display_name": "Maxime Jallu", "link": "https://stackoverflow.com/users/6831069/maxime-jallu"}, "is_accepted": false, "score": 8, "last_activity_date": 1561034461, "last_edit_date": 1592644375, "creation_date": 1518684459, "answer_id": 48803135, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/48803135#48803135", "title": "RecyclerView itemClickListener in Kotlin", "body": "<h1>Updated in 05 - 2019</h1>\n<p>I think the most elegant solution is to give this responsibility to recyclerView and not to view or even adapt it.</p>\n<p>for that we need:</p>\n<h1>1: Create RecyclerItemClickListener file</h1>\n<pre><code>class RecyclerItemClickListener(\n        private val mRecycler: RecyclerView,\n        private val clickListener: ((position: Int, view: View) -&gt; Unit)? = null,\n        private val longClickListener: ((position: Int, view: View) -&gt; Unit)? = null\n) : RecyclerView.OnChildAttachStateChangeListener {\n\n    override fun onChildViewDetachedFromWindow(view: View) {\n        view.setOnClickListener(null)\n        view.setOnLongClickListener(null)\n    }\n\n    override fun onChildViewAttachedToWindow(view: View) {\n        view.setOnClickListener { v -&gt; setOnChildAttachedToWindow(v) }\n    }\n\n    private fun setOnChildAttachedToWindow(v: View?) {\n        if (v != null) {\n            val position = mRecycler.getChildLayoutPosition(v)\n            if (position &gt;= 0) {\n                clickListener?.invoke(position, v)\n                longClickListener?.invoke(position, v)\n            }\n        }\n    }\n}\n</code></pre>\n<h1>2: Create/Add extensions for RecyclerView:</h1>\n<pre><code>import android.support.v7.widget.RecyclerView\nimport com.app.manager.internal.common.RecyclerItemClickListener\n                    \n@JvmOverloads\nfun RecyclerView.affectOnItemClicks(onClick: ((position: Int, view: View) -&gt; Unit)? = null, onLongClick: ((position: Int, view: View) -&gt; Unit)? = null) {\n    this.addOnChildAttachStateChangeListener(RecyclerItemClickListener(this, onClick, onLongClick))\n}\n</code></pre>\n<h1>3: And finally the use (i suppose you use kotlinx)</h1>\n<pre><code>import kotlinx.android.synthetic.main.{your_layout_name}.*\n\nclass FragmentName : Fragment() {\n\n    override fun onViewCreated(view: View?, savedInstanceState: Bundle?) {\n        recycler.affectOnItemClick { position, view -&gt; /*todo*/ }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 99, "user_id": 5331376, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-3r3ErqSCF9A/AAAAAAAAAAI/AAAAAAAAYF8/D-xW0dA1qq8/photo.jpg?sz=128", "display_name": "Lucas Montano", "link": "https://stackoverflow.com/users/5331376/lucas-montano"}, "is_accepted": false, "score": 3, "last_activity_date": 1520288276, "creation_date": 1520288276, "answer_id": 49120434, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/49120434#49120434", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p><strong>Adapter constructor declaration</strong>    </p>\n\n<pre><code>class YourAdapter(private val mListener: (ItemObject) -&gt; Unit) : RecyclerView.Adapter&lt;ViewHolder&gt;()\n</code></pre>\n\n<p><strong>Adapter::onBindViewHolder</strong></p>\n\n<pre><code>holder.itemView.setOnClickListener {\n    mListener.invoke(item) // &lt;- item instance of ItemObject\n}\n</code></pre>\n\n<p><strong>How to Use</strong></p>\n\n<pre><code>mTypesWasteAdapter = YourAdapter({ it.something()})\n</code></pre>\n\n<p>Basically, you will receive the ItemObject as <code>it</code> in the lambda argument.</p>\n"}, {"comments": [{"owner": {"reputation": 2169, "user_id": 507142, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/Q06jF.jpg?s=128&g=1", "display_name": "Afzal N", "link": "https://stackoverflow.com/users/507142/afzal-n"}, "edited": false, "score": 3, "creation_date": 1522362256, "post_id": 49480714, "comment_id": 86140101, "body": "Oh nice, I like this one"}, {"owner": {"reputation": 79, "user_id": 9625007, "user_type": "registered", "profile_image": "https://graph.facebook.com/1956585027999992/picture?type=large", "display_name": "Alex Rivas", "link": "https://stackoverflow.com/users/9625007/alex-rivas"}, "edited": false, "score": 0, "creation_date": 1594663918, "post_id": 49480714, "comment_id": 111198442, "body": "Me too it solved an issue when i update UI thanks so much"}, {"owner": {"reputation": 1433, "user_id": 3896874, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/zXlmR.jpg?s=128&g=1", "display_name": "toshkinl", "link": "https://stackoverflow.com/users/3896874/toshkinl"}, "edited": false, "score": 1, "creation_date": 1594897807, "post_id": 49480714, "comment_id": 111291057, "body": "Remember to clear the reference onDestroyView as this may leak."}, {"owner": {"reputation": 476, "user_id": 5756697, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/a145c66f08cd56be066560d2d97f66b2?s=128&d=identicon&r=PG&f=1", "display_name": "gstream79", "link": "https://stackoverflow.com/users/5756697/gstream79"}, "edited": false, "score": 0, "creation_date": 1615802817, "post_id": 49480714, "comment_id": 117794656, "body": "Thanks, @denwehrle. I love this style in iOS too."}], "tags": [], "owner": {"reputation": 1316, "user_id": 3723129, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NWAOy.jpg?s=128&g=1", "display_name": "denwehrle", "link": "https://stackoverflow.com/users/3723129/denwehrle"}, "is_accepted": false, "score": 93, "last_activity_date": 1522010404, "creation_date": 1522010404, "answer_id": 49480714, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/49480714#49480714", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>My solution is like a combination of the previous ones with a super clean call from the activity. </p>\n\n<p><strong>ContactAdapter:</strong> </p>\n\n<pre><code>class ContactAdapter @Inject constructor() : RecyclerView.Adapter&lt;ContactAdapter.ViewHolder&gt;() {\n\n    var onItemClick: ((Contact) -&gt; Unit)? = null\n    var contacts: List&lt;Contact&gt; = emptyList()\n\n    ...\n\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n        val contact = contacts[position]\n\n        holder.email.text = contact.email\n    }\n\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n        val email: TextView = itemView.email\n\n        init {\n            itemView.setOnClickListener {\n                onItemClick?.invoke(contacts[adapterPosition])\n            }\n        }\n    }\n}\n</code></pre>\n\n<p><strong>ContactActivity:</strong></p>\n\n<pre><code>override fun setupRecyclerAdapter() {\n    recyclerView.adapter = contactAdapter\n    recyclerView.layoutManager = LinearLayoutManager(this)\n\n    contactAdapter.onItemClick = { contact -&gt;\n\n        // do something with your item\n        Log.d(\"TAG\", contact.email)\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 480, "user_id": 8793928, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e4a87116ee745bf8fa001a6c4bf2523?s=128&d=identicon&r=PG&f=1", "display_name": "Android Geek", "link": "https://stackoverflow.com/users/8793928/android-geek"}, "is_accepted": false, "score": 0, "last_activity_date": 1528898690, "creation_date": 1528898690, "answer_id": 50839242, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/50839242#50839242", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>Two ways you can have an access to recyclerview in kotlin is first you can directly declare OnClickListener in adapter and make redirection inside it and second way is you can redirect your onclick to fragment/activity where you have set adapter of recycler </p>\n\n<p>1.</p>\n\n<pre><code> class CartAdapter(context: Context) : RecyclerView.Adapter&lt;CartAdapter.ViewHolder&gt;() {\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\n            return ViewHolder(LayoutInflater.from(parent.context).inflate(R.layout.layout_cart, parent, false));\n        }\n\n        override fun getItemCount(): Int {\n            return 10;\n        }\n\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n           holder.itemView.rtbProductRating.setOnClickListener{\n\n            var iNavigation= Intent(context,MainActivity::class.java)\n            iNavigation.flags= Intent.FLAG_ACTIVITY_LAUNCH_ADJACENT\n            context.startActivity(iNavigation)\n\n// directly redirect your activity from adapter\n           }\n\n        }\n\n        class ViewHolder(itemView: View?) : RecyclerView.ViewHolder(itemView)\n    } \n</code></pre>\n\n<p>Second way you can have is redirect your adapter click to fragment/activity and then redirect your activity from there instead of redirecting from adapter</p>\n\n<pre><code> class CartAdapter(context: Context, onClickListener: View.OnClickListener) : RecyclerView.Adapter&lt;CartAdapter.ViewHolder&gt;() {\n        var context = context\n        var onClickListener = onClickListener\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\n            return ViewHolder(LayoutInflater.from(parent.context).inflate(R.layout.layout_cart, parent, false));\n        }\n\n        override fun getItemCount(): Int {\n            return 10;\n        }\n\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n\n//set your position to the view\n            holder.itemView.rtbProductRating.tag = position\n\n//redirect click to the fragment\n            holder.itemView.rtbProductRating.setOnClickListener {\n                onClickListener.onClick(holder.itemView.rtbProductRating)\n\n            }\n    //        holder.itemView.tv_waybill_count.text = holder.itemView.context.getString(R.string.waybills,5)\n        }\n\n        class ViewHolder(itemView: View?) : RecyclerView.ViewHolder(itemView)\n    }\n\n\nYour fragment will look like:\n\nclass CartFragment: BaseFragment(),View.OnClickListener {\n    override val layout= R.layout.frg_cart\n\n     override fun onClick(v: View?) {\n      var position=v?.tag as Int\n\n        if(position==0){\n            var iNavigation= Intent(this,MainActivity::class.java)\n            iNavigation.flag=Intent.FLAG_ACTIVITY_LAUNCH_ADJACENT\n            startActivity(iNavigation)\n        }\n    }\n\n  override fun onActivityCreated(savedInstanceState: Bundle?) {\n        super.onActivityCreated(savedInstanceState)\n        listener()\n    }\n\n    private fun listener() {\n        cart_rv.adapter=CartAdapter(activity,this)\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1910, "user_id": 3977548, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/j6Npf.jpg?s=128&g=1", "display_name": "Peter Graham", "link": "https://stackoverflow.com/users/3977548/peter-graham"}, "edited": false, "score": 3, "creation_date": 1544636455, "post_id": 51007705, "comment_id": 94349557, "body": "simplest answer but the best one!"}, {"owner": {"reputation": 1073, "user_id": 1264210, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/edf92c0a60a1f012340c209e7c4e68a0?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1264210/nick"}, "edited": false, "score": 1, "creation_date": 1581961257, "post_id": 51007705, "comment_id": 106604172, "body": "Perfect! Thanks for sharing!"}, {"owner": {"reputation": 384, "user_id": 4154520, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uVWJN.jpg?s=128&g=1", "display_name": "Raheel Khan", "link": "https://stackoverflow.com/users/4154520/raheel-khan"}, "edited": false, "score": 0, "creation_date": 1586116345, "post_id": 51007705, "comment_id": 108002612, "body": "how do I show Toast or use Intent while using this approach? it throws an error"}, {"owner": {"reputation": 255, "user_id": 779299, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/02cb69e65edc3ab8e5650819f6df7b0e?s=128&d=identicon&r=PG", "display_name": "Mohammad Ashraful Kabir", "link": "https://stackoverflow.com/users/779299/mohammad-ashraful-kabir"}, "reply_to_user": {"reputation": 384, "user_id": 4154520, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uVWJN.jpg?s=128&g=1", "display_name": "Raheel Khan", "link": "https://stackoverflow.com/users/4154520/raheel-khan"}, "edited": false, "score": 1, "creation_date": 1598444109, "post_id": 51007705, "comment_id": 112460005, "body": "@RaheelKhan You need to get the context using <code>holder.itemView.context</code> and then you can use toast and intent as well. For example: <code>Toast.makeText(holder.itemView.context, list[position].toString(), Toast.LENGTH_SHORT).show()</code>"}], "tags": [], "owner": {"reputation": 1675, "user_id": 5653015, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aQJk9.png?s=128&g=1", "display_name": "iOS Lifee", "link": "https://stackoverflow.com/users/5653015/ios-lifee"}, "is_accepted": false, "score": 8, "last_activity_date": 1529824130, "creation_date": 1529824130, "answer_id": 51007705, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/51007705#51007705", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p><strong>Add ClickListener code on onBindViewHolder fun</strong></p>\n\n<pre><code>override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n\n    holder.vieww.textView.setText(arr.get(position))\n\n    holder.vieww.setOnClickListener {(holder.vieww.textView.setTextColor(Color.GREEN))} // click event\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 70518, "user_id": 2413303, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/kLhXq.jpg?s=128&g=1", "display_name": "EpicPandaForce", "link": "https://stackoverflow.com/users/2413303/epicpandaforce"}, "edited": false, "score": 2, "creation_date": 1531947252, "post_id": 51223101, "comment_id": 89793128, "body": "Why do you need a gesture detector and touch event handling when you could just set a click listener on the item view?"}, {"owner": {"reputation": 944, "user_id": 7894033, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/noWo1.jpg?s=128&g=1", "display_name": "Rajesh Naddy", "link": "https://stackoverflow.com/users/7894033/rajesh-naddy"}, "reply_to_user": {"reputation": 70518, "user_id": 2413303, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/kLhXq.jpg?s=128&g=1", "display_name": "EpicPandaForce", "link": "https://stackoverflow.com/users/2413303/epicpandaforce"}, "edited": false, "score": 0, "creation_date": 1532411733, "post_id": 51223101, "comment_id": 89951210, "body": "@EpicPandaForce ,this way of click listener for Activity based click, rather than in an adapter."}, {"owner": {"reputation": 70518, "user_id": 2413303, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/kLhXq.jpg?s=128&g=1", "display_name": "EpicPandaForce", "link": "https://stackoverflow.com/users/2413303/epicpandaforce"}, "edited": false, "score": 0, "creation_date": 1532415257, "post_id": 51223101, "comment_id": 89953034, "body": "I don&#39;t see the benefit to that considering you can just pass in a <code>View.OnClickListener</code> to the adapter from the Activity."}, {"owner": {"reputation": 944, "user_id": 7894033, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/noWo1.jpg?s=128&g=1", "display_name": "Rajesh Naddy", "link": "https://stackoverflow.com/users/7894033/rajesh-naddy"}, "reply_to_user": {"reputation": 5407, "user_id": 5264367, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/VgoyF.jpg?s=128&g=1", "display_name": "Sam", "link": "https://stackoverflow.com/users/5264367/sam"}, "edited": false, "score": 1, "creation_date": 1532498968, "post_id": 51223101, "comment_id": 89992183, "body": "@Sam Thank you for your feedback."}, {"owner": {"reputation": 1569, "user_id": 824068, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d56894accb73569a4974479d648bab3b?s=128&d=identicon&r=PG", "display_name": "MA9H", "link": "https://stackoverflow.com/users/824068/ma9h"}, "edited": false, "score": 1, "creation_date": 1552574560, "post_id": 51223101, "comment_id": 97069917, "body": "This is awesome man, you saved the day for me, and in style too :)"}, {"owner": {"reputation": 353, "user_id": 8403554, "user_type": "registered", "accept_rate": 17, "profile_image": "https://i.stack.imgur.com/hxZtj.jpg?s=128&g=1", "display_name": "Nuwan Withanage", "link": "https://stackoverflow.com/users/8403554/nuwan-withanage"}, "edited": false, "score": 1, "creation_date": 1589998818, "post_id": 51223101, "comment_id": 109518168, "body": "This is great man..."}, {"owner": {"reputation": 51, "user_id": 2649286, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hCvZN.jpg?s=128&g=1", "display_name": "Ravi", "link": "https://stackoverflow.com/users/2649286/ravi"}, "edited": false, "score": 0, "creation_date": 1593920905, "post_id": 51223101, "comment_id": 110943161, "body": "If you want to intercept touch and do something else other than click listener where this recycler view occupies entire screen, it will become tedious job. Either you have to write that logic inside or add some other dummy view on top of this."}], "tags": [], "owner": {"reputation": 944, "user_id": 7894033, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/noWo1.jpg?s=128&g=1", "display_name": "Rajesh Naddy", "link": "https://stackoverflow.com/users/7894033/rajesh-naddy"}, "is_accepted": false, "score": 17, "last_activity_date": 1530965609, "creation_date": 1530965609, "answer_id": 51223101, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/51223101#51223101", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>Sorry for the delay, Got an awesome answer from <a href=\"http://sapandiwakar.in/recycler-view-item-click-handler/\" rel=\"noreferrer\">this</a> link and it was in Java..\nDid some Homework and converted it to Kotlin..</p>\n\n<p>Now it is working Properly.. Here is the Code,</p>\n\n<p>Create a class named RecyclerItemClickListenr,</p>\n\n<pre><code>class RecyclerItemClickListenr(context: Context, recyclerView: RecyclerView, private val mListener: OnItemClickListener?) : RecyclerView.OnItemTouchListener {\n\nprivate val mGestureDetector: GestureDetector\n\ninterface OnItemClickListener {\n    fun onItemClick(view: View, position: Int)\n\n    fun onItemLongClick(view: View?, position: Int)\n}\n\ninit {\n\n    mGestureDetector = GestureDetector(context, object : GestureDetector.SimpleOnGestureListener() {\n        override fun onSingleTapUp(e: MotionEvent): Boolean {\n            return true\n        }\n\n        override fun onLongPress(e: MotionEvent) {\n            val childView = recyclerView.findChildViewUnder(e.x, e.y)\n\n            if (childView != null &amp;&amp; mListener != null) {\n                mListener.onItemLongClick(childView, recyclerView.getChildAdapterPosition(childView))\n            }\n        }\n    })\n}\n\noverride fun onInterceptTouchEvent(view: RecyclerView, e: MotionEvent): Boolean {\n    val childView = view.findChildViewUnder(e.x, e.y)\n\n    if (childView != null &amp;&amp; mListener != null &amp;&amp; mGestureDetector.onTouchEvent(e)) {\n        mListener.onItemClick(childView, view.getChildAdapterPosition(childView))\n    }\n\n    return false\n}\n\noverride fun onTouchEvent(view: RecyclerView, motionEvent: MotionEvent) {}\n\noverride fun onRequestDisallowInterceptTouchEvent(disallowIntercept: Boolean) {}}\n</code></pre>\n\n<p>and access it from Activity/Fragment as</p>\n\n<pre><code>recyclerView.addOnItemTouchListener(RecyclerItemClickListenr(this, recyclerView, object : RecyclerItemClickListenr.OnItemClickListener {\n\n        override fun onItemClick(view: View, position: Int) {\n            //do your work here..\n        }\n        override fun onItemLongClick(view: View?, position: Int) {\n            TODO(\"do nothing\")\n        }\n    }))\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 170, "user_id": 10330156, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tPoUK.png?s=128&g=1", "display_name": "Kunsh Technologies", "link": "https://stackoverflow.com/users/10330156/kunsh-technologies"}, "is_accepted": false, "score": 1, "last_activity_date": 1537260650, "last_edit_date": 1537260650, "creation_date": 1537260315, "answer_id": 52382490, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/52382490#52382490", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p><strong>RecyclerItemClickListener</strong> </p>\n\n<pre><code>package com.mypackage.custom \nimport android.content.Context\nimport android.support.v7.widget.RecyclerView\nimport android.view.GestureDetector\nimport android.view.MotionEvent\nimport android.view.View\n\n\n@Suppress(\"DEPRECATION\")\nclass RecyclerItemClickListener(context: Context, private val mListener: OnItemClickListener?) : RecyclerView.OnItemTouchListener {\n\n    private var mGestureDetector: GestureDetector = GestureDetector(context, object : GestureDetector.SimpleOnGestureListener() {\n        override fun onSingleTapUp(e: MotionEvent): Boolean {\n            return true\n        }\n    })\n\n    interface OnItemClickListener {\n        fun onItemClick(view: View, position: Int)\n    }\n\n    override fun onInterceptTouchEvent(view: RecyclerView, e: MotionEvent): Boolean {\n        val childView = view.findChildViewUnder(e.x, e.y)\n        if (childView != null &amp;&amp; mListener != null &amp;&amp; mGestureDetector.onTouchEvent(e)) {\n            mListener.onItemClick(childView, view.getChildPosition(childView))\n            return true\n        }\n        return false\n    }\n\n    override fun onTouchEvent(view: RecyclerView, motionEvent: MotionEvent) {}\n\n    override fun onRequestDisallowInterceptTouchEvent(disallowIntercept: Boolean) {}\n}\n</code></pre>\n\n<p><strong>For Activity:</strong></p>\n\n<pre><code> recyclerView!!.addOnItemTouchListener(\n                RecyclerItemClickListener(this!!, object : RecyclerItemClickListener.OnItemClickListener {\n                    override fun onItemClick(view: View, position: Int) {\n                        //Write your code here\n                    }\n                })\n</code></pre>\n\n<p><strong>For Fragment:</strong></p>\n\n<pre><code>recyclerView!!.addOnItemTouchListener(\n                RecyclerItemClickListener(this!!.activity!!, object : RecyclerItemClickListener.OnItemClickListener {\n                    override fun onItemClick(view: View, position: Int) {\n                        //Write your code here\n                    }\n                })\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2169, "user_id": 507142, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/Q06jF.jpg?s=128&g=1", "display_name": "Afzal N", "link": "https://stackoverflow.com/users/507142/afzal-n"}, "edited": false, "score": 0, "creation_date": 1538747812, "post_id": 52656221, "comment_id": 92264266, "body": "Great but please don&#39;t use relative layout in there"}], "tags": [], "owner": {"reputation": 2413, "user_id": 2475470, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/1tcOU.png?s=128&g=1", "display_name": "Vector", "link": "https://stackoverflow.com/users/2475470/vector"}, "is_accepted": false, "score": 0, "last_activity_date": 1538693800, "creation_date": 1538693800, "answer_id": 52656221, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/52656221#52656221", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>OH what the heck someone might like this \nWe all place edit and trashcan images in out recyclerview and would like something to happen when they are clicked. Here is our Kotlin example<BR/></p>\n\n<p>This is in a card view that is inflated in the Adapter</p>\n\n<pre><code>    &lt;RelativeLayout\n    android:id=\"@+id/editCLICK\"\n    android:layout_width=\"60dp\"\n    android:layout_height=\"60dp\"\n    android:layout_marginStart=\"370dp\"\n    android:paddingLeft=\"6dp\"\n    android:paddingRight=\"6dp\"\n    android:paddingTop=\"12dp\"&gt;\n\n    &lt;ImageView\n        android:id=\"@+id/ivEdit\"\n        android:layout_width=\"30dp\"\n        android:layout_height=\"30dp\"\n        android:background=\"@color/color_Transparent\"\n        android:src=\"@drawable/ic_edit\"\n        android:tint=\"@color/color_lightBlue\" /&gt;\n\n&lt;/RelativeLayout&gt;\n</code></pre>\n\n<p>then in the Adapter we do some binding <br/></p>\n\n<pre><code>    override fun onBindViewHolder(holder: ParentViewHolder, position: Int) {\n    val items = parentList[position]\n    holder.item.text = items.dept\n\n\n    holder.editCLICK.setOnClickListener {\n        val i = Intent(context, EnterParentActivity::class.java)\n        i.putExtra(\"FROM\", \"U\")\n        i.putExtra(\"MainActId\",items.idD)\n        i.putExtra(\"PFK\",items.fkD)\n        i.putExtra(\"ET\",items.dept)\n        i.flags = Intent.FLAG_ACTIVITY_NEW_TASK\n        context.startActivity(i)\n    }\n}\n\n\ninner class ParentViewHolder(view: View):RecyclerView.ViewHolder(view){\n    var item: TextView = view.findViewById(R.id.tvDept) as TextView\n    var editCLICK: RelativeLayout = view.findViewById(R.id.editCLICK) as RelativeLayout\n}\n</code></pre>\n\n<p>Simple quick and reliable enjoy</p>\n"}, {"tags": [], "owner": {"reputation": 494, "user_id": 9407751, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-gOZxSZGn-QU/AAAAAAAAAAI/AAAAAAAAAmk/vubEBvNQ87s/photo.jpg?sz=128", "display_name": "faskN", "link": "https://stackoverflow.com/users/9407751/faskn"}, "is_accepted": false, "score": 4, "last_activity_date": 1539479415, "creation_date": 1539479415, "answer_id": 52798660, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/52798660#52798660", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>You don't need to write extension function to ViewHolder or something like this.<br>\n Best practice; use <strong>Higher-Order Function</strong> </p>\n\n<h1>MainRecyclerAdapter</h1>\n\n<pre><code>class MainRecyclerAdapter(val news: JSONArray, private val itemClickListener: (Int) -&gt; Unit) : RecyclerView.Adapter&lt;MainRecyclerAdapter.ViewHolder&gt;() {}\n</code></pre>\n\n<p>Just add a Higher-order func. like itemClickListener and then go to the ViewHolder class. Write this function to your bind function as parameter and set this to itemView Like that :</p>\n\n<h2>MainRecyclerAdapter.ViewHolder</h2>\n\n<pre><code> class ViewHolder(val view: View) : RecyclerView.ViewHolder(view) {\n\n        fun bind(newsItem: JSONObject,itemClickListener:(Int)-&gt;Unit) {\n            //Some Stuff here..\n\n            itemView.setOnClickListener { itemClickListener(adapterPosition) }\n\n        }\n    }\n</code></pre>\n\n<p>Use this method onBindViewHolder</p>\n\n<h2>OnBindViewHolder</h2>\n\n<pre><code> override fun onBindViewHolder(holder: MainRecyclerAdapter.ViewHolder, position: Int) {\n\n        holder.bind(news.getJSONObject(position),itemClickListener)\n    }\n</code></pre>\n\n<p>And now you can write your onClick function in any activity or fragments.. Just give as parameter.</p>\n\n<h2>Activity or Fragment</h2>\n\n<pre><code>val itemOnClick: (Int) -&gt; Unit = { position -&gt;\n                newsRecyclerView.adapter!!.notifyDataSetChanged()\n                Toast.makeText(this.context,\"$position. item clicked.\",Toast.LENGTH_SHORT).show()\n            }\n newsRecyclerView.adapter = MainRecyclerAdapter(news,itemClickListener = itemOnClick)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2955, "user_id": 1133106, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/jHnqr.jpg?s=128&g=1", "display_name": "Ronny Kibet", "link": "https://stackoverflow.com/users/1133106/ronny-kibet"}, "is_accepted": false, "score": 1, "last_activity_date": 1540787876, "creation_date": 1540787876, "answer_id": 53038817, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/53038817#53038817", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>Here is my MainActivity.kt class that uses recyclerview to populate location data. It has a simple on item click listener interface that you can implement.</p>\n\n<pre><code>    class MainActivity : AppCompatActivity() {\n\n        private lateinit var recyclerView: RecyclerView\n        private lateinit var viewAdapter: RecyclerView.Adapter&lt;*&gt;\n        private lateinit var viewManager: RecyclerView.LayoutManager\n        private var locationArrayList = arrayListOf&lt;Location&gt;()\n\n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.activity_main)\n\n            //create locations\n            var ny = Location(\"New York\")\n            var la = Location(\"Los Angeles\")\n            locationArrayList.addAll(listOf(ny, la))\n\n            viewManager = LinearLayoutManager(this)\n            viewAdapter = LocationsAdapter(locationArrayList)\n\n            recyclerView = findViewById&lt;RecyclerView&gt;(R.id.recyclerView).apply {\n                // use this setting to improve performance if you know that changes\n                // in content do not change the layout size of the RecyclerView\n                setHasFixedSize(true)\n\n                // use a linear layout manager\n                layoutManager = viewManager\n\n                // specify an viewAdapter \n                adapter = viewAdapter\n\n            }\n\n    //recycler view click listener implement\n            recyclerView.addOnItemClickListener(object: OnItemClickListener {\n                override fun onItemClicked(position: Int, view: View) {\n                    // Your logic\n                    Toast.makeText(this@MainActivity, locationArrayList[position].locationName, Toast.LENGTH_SHORT).show()\n                }\n            })\n\n        }\n\n    //on item click interface\n        interface OnItemClickListener {\n            fun onItemClicked(position: Int, view: View)\n        }\n\n        fun RecyclerView.addOnItemClickListener(onClickListener: OnItemClickListener) {\n            this.addOnChildAttachStateChangeListener(object: RecyclerView.OnChildAttachStateChangeListener {\n                override fun onChildViewDetachedFromWindow(view: View?) {\n                    view?.setOnClickListener(null)\n                }\n\n                override fun onChildViewAttachedToWindow(view: View?) {\n                    view?.setOnClickListener({\n                        val holder = getChildViewHolder(view)\n                        onClickListener.onItemClicked(holder.adapterPosition, view)\n                    })\n                }\n            })\n        }\n//end of interface\n    }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 30613, "user_id": 3496570, "user_type": "registered", "accept_rate": 39, "profile_image": "https://i.stack.imgur.com/fhSKV.jpg?s=128&g=1", "display_name": "AndroidGeek", "link": "https://stackoverflow.com/users/3496570/androidgeek"}, "is_accepted": false, "score": 0, "last_activity_date": 1543323342, "last_edit_date": 1543323342, "creation_date": 1542015122, "answer_id": 53259261, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/53259261#53259261", "title": "RecyclerView itemClickListener in Kotlin", "body": "<blockquote>\n  <p>If someone interested in the old way implementation.. </p>\n</blockquote>\n\n<p>I posted full example which also reduces your adapter code as well. It uses the old pattern of getting callback..</p>\n\n<p><strong>Project level gradle</strong></p>\n\n<pre><code>buildscript {\n    ext.kotlin_version = '1.3.10'\n    repositories {\n        google()\n        mavenCentral()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.2.1'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n        classpath \"org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version\"//newly added\n\n        classpath 'com.google.gms:google-services:4.1.0' // google-services plugin\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n</code></pre>\n\n<p><strong>App level Gradle</strong></p>\n\n<pre><code>apply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\napply plugin: 'kotlin-kapt'\napply plugin: 'kotlin-android-extensions'\napply plugin: 'org.jetbrains.kotlin.android.extensions'//it is used for @Percelize\n\nandroid {\n    compileSdkVersion 28\n    dataBinding {\n        enabled = true\n    }\n    androidExtensions {\n        experimental = true\n    }\n    defaultConfig {\n        applicationId 'broadpeak.firebase.learning'\n        minSdkVersion 19\n        targetSdkVersion 27\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n        multiDexEnabled true\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n    productFlavors {\n    }\n}\n\n/*kapt {\n    generateStubs = true\n}*/\ndependencies {\n    implementation fileTree(include: ['*.jar'], dir: 'libs')\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\n    implementation 'com.android.support:appcompat-v7:28.0.0'\n    implementation 'com.android.support:design:28.0.0'\n    implementation 'com.android.support.constraint:constraint-layout:1.1.3'\n    implementation 'com.google.firebase:firebase-core:16.0.5'\n    implementation 'com.google.firebase:firebase-firestore:17.1.3'\n    implementation 'com.google.firebase:firebase-auth:16.0.5'\n    implementation 'com.google.firebase:firebase-messaging:17.3.4'\n    implementation 'com.google.code.gson:gson:2.8.5'\n\n    implementation 'com.firebaseui:firebase-ui-auth:4.1.0'\n\n    implementation 'com.github.bumptech.glide:glide:4.8.0'\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'\n    ////kapt \"com.android.databinding:compiler:$android_plugin_version\"\\ // not required above 3.2.0\n    ///kapt \"com.android.databinding:compiler:3.1.4\"\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation 'com.android.support.test:runner:1.0.2'\n    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'\n}\n\n// ADD THIS AT THE BOTTOM\napply plugin: 'com.google.gms.google-services'\n</code></pre>\n\n<p><strong>SubjectListActivity.class</strong></p>\n\n<pre><code>class SubjectListActivity : BaseActivity() {\n\n    var subjects = mutableListOf&lt;SubjectBO&gt;()\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.question_list_activity)\n\n        recycler_view.itemAnimator = DefaultItemAnimator()\n        recycler_view.setHasFixedSize(true)\n        recycler_view.layoutManager = LinearLayoutManager(this@SubjectListActivity)\n\n        db.collection(\"tagCollection\").get().addOnSuccessListener { querySnapshot -&gt;\n            if (querySnapshot.isEmpty()) {\n                Log.d(TAG, \"onSuccess: LIST EMPTY\")\n            } else {\n                // Convert the whole Query Snapshot to a list\n                // of objects directly! No need to fetch each document.\n                subjects = querySnapshot.toObjects(SubjectBO::class.java)\n\n                if(subjects.size &gt; 0){\n                    recycler_view.adapter = SubjectAdapter(subjects, object : OnRecyclerItemClickListener {\n                        override fun onItemClicked(view: View?, position: Int) {\n                            var intent = Intent(this@SubjectListActivity,McqActivity::class.java)\n                            intent.putExtra(\"keyTagBO\",subjects.get(position))\n                            startActivity(intent)\n                        }\n                    });\n                }\n\n            }\n        }.addOnFailureListener { exception -&gt;\n            exception.printStackTrace()\n        }\n    }\n</code></pre>\n\n<p><strong>SubjectAdapter.class</strong></p>\n\n<pre><code>class SubjectAdapter(items: List&lt;SubjectBO&gt;, onRecyclerItemClickListener: OnRecyclerItemClickListener)\n    : BaseAdapter&lt;SubjectBO, SubjectViewHolder&gt;(items, onRecyclerItemClickListener) {\n\n    override fun onCreateViewHolder(parent: ViewGroup, p1: Int): SubjectViewHolder {\n        return SubjectViewHolder(parent, R.layout.item_subject, onRecyclerItemClickListener)\n    }\n}\n</code></pre>\n\n<p><strong>SubjectViewHolder.class</strong></p>\n\n<pre><code>class SubjectViewHolder(parent: ViewGroup, itemLayoutId: Int, onRecyclerItemClickListener:\n    OnRecyclerItemClickListener) : BaseViewHolder&lt;SubjectBO&gt;(parent, itemLayoutId, onRecyclerItemClickListener) {\n\n    override fun bindData(data: SubjectBO) {\n        itemView.tvTitle.setText(data.tagName)\n    }\n}\n</code></pre>\n\n<p><strong>BaseAdapter.class</strong></p>\n\n<pre><code>abstract class BaseAdapter&lt;T, U : BaseViewHolder&lt;T&gt;&gt;\n(var items: List&lt;T&gt;, var onRecyclerItemClickListener: OnRecyclerItemClickListener)\n    : RecyclerView.Adapter&lt;U&gt;() {\n\n    override fun getItemCount(): Int {\n        return items.size\n    }\n\n    override fun onBindViewHolder(holder: U, pos: Int) {\n        holder.bindData(items.get(pos))\n    }\n}\n</code></pre>\n\n<p><strong>BaseViewHolder.class</strong></p>\n\n<pre><code>abstract class BaseViewHolder&lt;T : BaseModel&gt;(parent: ViewGroup, @LayoutRes itemLayoutId: Int,\n                                             var onRecyclerItemClickListener: OnRecyclerItemClickListener) :\n        RecyclerView.ViewHolder(LayoutInflater.from(parent.context).inflate(itemLayoutId, parent,\n                false)), View.OnClickListener {\n\n    override fun onClick(v: View?) {\n        onRecyclerItemClickListener.onItemClicked(v, adapterPosition)\n    }\n\n    abstract fun bindData(data: T)\n\n    init {\n        itemView.setOnClickListener(this)\n    }\n}\n</code></pre>\n\n<p><strong>OnRecyclerItemClickListener.class</strong></p>\n\n<pre><code>interface OnRecyclerItemClickListener{\n    fun onItemClicked(view: View?, position: Int)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 332, "user_id": 4375809, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e9fc1850037ebc0b1f7f92cca08436a?s=128&d=identicon&r=PG&f=1", "display_name": "ykonda", "link": "https://stackoverflow.com/users/4375809/ykonda"}, "edited": false, "score": 0, "creation_date": 1558999302, "post_id": 54750648, "comment_id": 99273084, "body": "Unresolved reference: clickable_view"}, {"owner": {"reputation": 4084, "user_id": 6662058, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xHaLT.png?s=128&g=1", "display_name": "Ashwin", "link": "https://stackoverflow.com/users/6662058/ashwin"}, "reply_to_user": {"reputation": 332, "user_id": 4375809, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e9fc1850037ebc0b1f7f92cca08436a?s=128&d=identicon&r=PG&f=1", "display_name": "ykonda", "link": "https://stackoverflow.com/users/4375809/ykonda"}, "edited": false, "score": 1, "creation_date": 1559005720, "post_id": 54750648, "comment_id": 99274149, "body": "@ykonda clickable_view must be the id of your view in R.layout.my_item on which you will be adding click-listener."}], "tags": [], "owner": {"reputation": 4084, "user_id": 6662058, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xHaLT.png?s=128&g=1", "display_name": "Ashwin", "link": "https://stackoverflow.com/users/6662058/ashwin"}, "is_accepted": false, "score": 2, "last_activity_date": 1550504164, "creation_date": 1550504164, "answer_id": 54750648, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/54750648#54750648", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>Finally, here is a nice working solution:</p>\n\n<p><strong>MyRecyclerAdapter.kt</strong></p>\n\n<pre><code>class MyRecyclerAdapter(val context: Context, val items : ArrayList&lt;Item&gt;, val clickListener: (Int) -&gt; Unit) : RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt;() {\n\n    override fun onCreateViewHolder(parent: ViewGroup, p1: Int): RecyclerView.ViewHolder {\n        return MyViewHolder(LayoutInflater.from(context).inflate(R.layout.my_item, parent, false))\n    }\n\n    override fun getItemCount(): Int {\n        return items.size\n    }\n\n    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\n        (holder as MyViewHolder).clickableView.setOnClickListener {\n            clickListener(position)\n        }\n    }\n}\n\nclass MyViewHolder (view: View) : RecyclerView.ViewHolder(view) {\n    val clickableView = view.clickable_view\n}\n</code></pre>\n\n<p><strong>MainActivity.kt</strong></p>\n\n<pre><code>fun appClickListener(position: Int) {\n    // You got the position of ArrayList\n}\n\nmy_recyclerview.adapter = MyRecyclerAdapter(this, myList, clickListener = {\n    appClickListener(it)\n})\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 508, "user_id": 3399666, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/805e87b8e6552dffec58ad450dbf5cfe?s=128&d=identicon&r=PG", "display_name": "mithril_knight", "link": "https://stackoverflow.com/users/3399666/mithril-knight"}, "reply_to_user": {"reputation": 2169, "user_id": 507142, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/Q06jF.jpg?s=128&g=1", "display_name": "Afzal N", "link": "https://stackoverflow.com/users/507142/afzal-n"}, "edited": false, "score": 0, "creation_date": 1574986206, "post_id": 54871709, "comment_id": 104427936, "body": "@AfzalivE, why?"}, {"owner": {"reputation": 2169, "user_id": 507142, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/Q06jF.jpg?s=128&g=1", "display_name": "Afzal N", "link": "https://stackoverflow.com/users/507142/afzal-n"}, "reply_to_user": {"reputation": 508, "user_id": 3399666, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/805e87b8e6552dffec58ad450dbf5cfe?s=128&d=identicon&r=PG", "display_name": "mithril_knight", "link": "https://stackoverflow.com/users/3399666/mithril-knight"}, "edited": false, "score": 0, "creation_date": 1575052303, "post_id": 54871709, "comment_id": 104450551, "body": "@mithril_knight because it leads to leaking the parent class. <a href=\"https://stackoverflow.com/questions/31302341/what-difference-between-static-and-non-static-viewholder-in-recyclerview-adapter\" title=\"what difference between static and non static viewholder in recyclerview adapter\">stackoverflow.com/questions/31302341/&hellip;</a>"}], "tags": [], "owner": {"reputation": 338, "user_id": 5847383, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/klWYi.jpg?s=128&g=1", "display_name": "LiA", "link": "https://stackoverflow.com/users/5847383/lia"}, "is_accepted": false, "score": 8, "last_activity_date": 1551117989, "last_edit_date": 1551117989, "creation_date": 1551116040, "answer_id": 54871709, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/54871709#54871709", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>Slightly different, based on denwehrle</p>\n\n<p>To use on a fragment, inside OnCreateView</p>\n\n<pre><code> adapter.onItemClick = {it -&gt;\n    //do something\n }\n</code></pre>\n\n<p>Add in the adapter class:</p>\n\n<pre><code>var onItemClick: ((Contact)-&gt;Unit) ?= null\n...\n\ninner class contactViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView){\n        val myItemView: TextView = itemView.findViewById(R.id.textView)\n\n        init{\n            itemView.setOnClickListener {\n                onItemClick?.invoke(contact[adapterPosition])\n            }\n        }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1936, "user_id": 8691696, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZOlye.jpg?s=128&g=1", "display_name": "Anga", "link": "https://stackoverflow.com/users/8691696/anga"}, "is_accepted": false, "score": 5, "last_activity_date": 1560950520, "creation_date": 1560950520, "answer_id": 56668693, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/56668693#56668693", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>You can easily achieve this by using an interface</p>\n\n<pre><code>class ExercisesAdapter constructor(val mItemClickListener:ItemClickListener) : RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt;() {\n\n    interface ItemClickListener{\n        fun onItemClick(position: Int)\n        fun onLongClick(position: Int)\n    }\n\n    inner class MyViewHolder(view:View): RecyclerView.ViewHolder(view){\n\n        init {\n            view.setOnClickListener{\n                mItemClickListener.onItemClick(adapterPosition)\n            }\n            view.setOnLongClickListener{\n                mItemClickListener.onLongClick(adapterPosition)\n                return@setOnLongClickListener true\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>From your <strong>MainActivity</strong></p>\n\n<pre><code>public class MainActivity : ActionBarActivity(), ExercisesAdapter.ItemClickListener {\n\n   protected override fun onCreate(savedInstanceState: Bundle?) {\n\n    // set content view etc go above this line\n    mAdapter = ExercisesAdapter(this)\n   }\n\n   override fun onItemClick(position: Int) {\n        Toast.makeText(this@MainActivity, \"TEST: \" + position, Toast.LENGTH_SHORT).show()\n    }\n\n    override fun onLongClick(position: Int) {\n        //do long click here\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 7248226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df94553581cb55fc83c2339803488253?s=128&d=identicon&r=PG&f=1", "display_name": "sanjay sawan", "link": "https://stackoverflow.com/users/7248226/sanjay-sawan"}, "is_accepted": false, "score": 1, "last_activity_date": 1561011416, "last_edit_date": 1561011416, "creation_date": 1561009294, "answer_id": 56679605, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/56679605#56679605", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>//Step 1 make an interface like </p>\n\n<pre><code>interface RecyclerViewClickListener {\n    fun onItemClick(position: String)\n    fun onLongClick(position: Int)\n}\n</code></pre>\n\n<p>Step 2 Inside Adapter class pass one more argument as an interface like </p>\n\n<pre><code>class ModelAdapter(var item_list: ArrayList&lt;UploadDocument&gt;,var mItemClickListener:RecyclerViewClickListener) : RecyclerView.Adapter&lt;ModelAdapter.ViewHolder&gt;() {\n\n\noverride fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ModelAdapter.ViewHolder {\n    // create a new view\n\n    val view = LayoutInflater.from(parent.context).inflate(R.layout.upload_document_row_item, null)\n\n    // create ViewHolder\n\n    return ViewHolder(view)\n}\n\noverride fun onBindViewHolder(holder: ModelAdapter.ViewHolder, position: Int) {\n\n    holder.txtRegistrationDoc?.setText(item_list[position].getdocName())\n    holder.txtCertificate?.setText(item_list[position].getcertificateName())\n    holder.txtFileSize?.setText(item_list[position].getfileSize())\n    holder.txtCreatedOn?.setText(item_list[position].getcreatedOn())\n    holder.txtModifiedOn?.setText(item_list[position].getModifiedDate())\n\n    //holder.chkSelected.isChecked = item_list[position].isSelected()\n\n    holder.chkSelected.tag = item_list[position].getdocName()\n\n\n        holder. chkSelected!!.setOnCheckedChangeListener { buttonView, isChecked -&gt;\n\n            if(isChecked)\n            {\n                System.out.println(\"position&gt;&gt;&gt;\"+buttonView.tag.toString())\n                mItemClickListener.onItemClick(buttonView.tag.toString())\n            }\n\n        }\n\n    //(context as UploadDocumentActivity::class.java).onClickCalled(\"your argument here\")\n\n   /* holder.btn_delete.setOnClickListener(object : View.OnClickListener() {\n        override fun onClick(v: View) {\n\n            deleteItemFromList(v, position)\n\n\n        }\n    })*/\n\n}\n\noverride fun getItemCount(): Int {\n    return item_list.size\n}\n\n\n/*// confirmation dialog box to delete an unit\nprivate fun deleteItemFromList(v: View, position: Int) {\n\n    val builder = AlertDialog.Builder(v.getContext())\n\n    //builder.setTitle(\"Dlete \");\n    builder.setMessage(\"Delete Item ?\")\n        .setCancelable(false)\n        .setPositiveButton(\"CONFIRM\",\n            DialogInterface.OnClickListener { dialog, id -&gt;\n                item_list.remove(position)\n                notifyDataSetChanged()\n            })\n        .setNegativeButton(\"CANCEL\", DialogInterface.OnClickListener { dialog, id -&gt; })\n\n    builder.show()\n\n}*/\n\n\nclass ViewHolder(\n    itemLayoutView: View) : RecyclerView.ViewHolder(itemLayoutView) {\n\n    var item_name: TextView\n    var txtRegistrationDoc: TextViewNormal?=null\n    var txtCertificate: TextViewNormal?=null\n    var txtFileSize: TextViewNormal?=null\n    var txtCreatedOn: TextViewNormal?=null\n    var txtModifiedOn: TextViewNormal?=null\n    var chkSelected: CheckBox\n\n\n    init {\n\n        item_name = itemLayoutView.findViewById(R.id.txt_Name)\n        txtRegistrationDoc = itemLayoutView.findViewById(R.id.txtRegistrationDoc)\n        txtCertificate = itemLayoutView.findViewById(R.id.txtCertificate)\n        txtFileSize = itemLayoutView.findViewById(R.id.txtFileSize)\n        txtCreatedOn = itemLayoutView.findViewById(R.id.txtCreatedOn)\n        txtModifiedOn = itemLayoutView.findViewById(R.id.txtModifiedOn)\n        //btn_delete = itemLayoutView.findViewById(R.id.btn_delete_unit)\n        chkSelected = itemLayoutView.findViewById(R.id.chk_selected)\n\n\n    }\n\n\n\n}\n}\n</code></pre>\n\n<p>//Step 3 Inside your activity/ Frgament</p>\n\n<pre><code>recyclerView?.adapter = ModelAdapter(documentList,object : `in`.mobilepedia.com.gicgwaliarincubationcentre.RecyclerViewClickListener\n        {\n            override fun onItemClick(position: String) {\n\n            System.out.println(\"Position&gt;&gt;&gt;&gt;&gt;\"+position)\n        }\n\n        override fun onLongClick(position: Int) {\n\n        }\n\n    })\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1098, "user_id": 5646794, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/q8nBm.jpg?s=128&g=1", "display_name": "Touhid", "link": "https://stackoverflow.com/users/5646794/touhid"}, "edited": false, "score": 0, "creation_date": 1567313814, "post_id": 57282748, "comment_id": 101925223, "body": "As like java interface previously used for click listener. I wanted this solution for kotlin, Thanks for the code."}], "tags": [], "owner": {"reputation": 75, "user_id": 8299065, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f509cb147e7d0a248c661cd7517d7b5b?s=128&d=identicon&r=PG&f=1", "display_name": "mustofa.id", "link": "https://stackoverflow.com/users/8299065/mustofa-id"}, "is_accepted": false, "score": 2, "last_activity_date": 1564543762, "creation_date": 1564543762, "answer_id": 57282748, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/57282748#57282748", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>My simple solution using higher-order function and <code>let</code> scoping function to set listener only if <code>itemAction</code> has been set</p>\n\n<pre><code>// Adapter\nprivate var itemAction: ((Item) -&gt; Unit)? = null\n\nfun setItemAction(action: (Item) -&gt; Unit) {\n    this.itemAction = action\n}\n\ninner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n    fun setItem(item: Item) {\n\n        // ...\n\n        itemAction?.let {\n            itemView.setOnClickListener { it(item) }\n        }\n    }\n}\n</code></pre>\n\n<p>and in activity/fragment</p>\n\n<pre><code>adapter.setItemAction { // &lt;- it is Item\n  // do something with it\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 12029820, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3359ebaf345a40b43313b8f05f9f5dbb?s=128&d=identicon&r=PG&f=1", "display_name": "MadDogTannen", "link": "https://stackoverflow.com/users/12029820/maddogtannen"}, "is_accepted": false, "score": 0, "last_activity_date": 1567767257, "creation_date": 1567767257, "answer_id": 57820649, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/57820649#57820649", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>I came up with this solution to open an activity when row is clicked, using a companion object and interface. The activity is opened from main activity since I had to save list state before leaving.</p>\n\n<p><strong>Adapter</strong></p>\n\n<pre><code>class MyAdapter(\n    val dataList: List&lt;objects.ListObject&gt;, val listener: ItemClickListener\n) : RecyclerView.Adapter&lt;MyAdapter.ListViewHolder&gt;()\n{\n\n    companion object {\n        var mClickListener: ItemClickListener? = null\n    }\n\n    interface ItemClickListener\n    {\n        fun clickRow(position: Int)\n    }\n\n    override fun onBindViewHolder(holder: MyAdapter.ListViewHolder, position: Int)\n    {\n        holder.bindData(\n            ...\n        )\n\n        mClickListener = listener\n        holder.itemView.setOnClickListener { view -&gt;\n\n            mClickListener?.clickRow(position)\n        }\n    }\n\n    ... \n}\n</code></pre>\n\n<p><strong>Main activity</strong></p>\n\n<pre><code>val context = this\nprivate lateinit var mMyAdapter: MyAdapter\n\nfun initList()\n{\n    mMyAdapter =\n        MyAdapter(dataList, object : MyAdapter.ItemClickListener\n        {\n            override fun clickRow(position: Int)\n            {\n                openActivityListItems(position)\n            }\n        }\n    )\n}\n\nfun openActivityListItems(position : Int)\n{\n    recyclerViewState = mListView.getLayoutManager()?.onSaveInstanceState()\n\n    val intent = Intent(context, ListItems::class.java)\n    intent.putExtra(\"Parameter1\", dataList[position].Parameter1)\n    intent.putExtra(\"Parameter2\", dataList[position].Parameter2)\n    context.startActivity(intent)\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1567, "user_id": 5978720, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/o1hwn.jpg?s=128&g=1", "display_name": "Kanagalingam", "link": "https://stackoverflow.com/users/5978720/kanagalingam"}, "is_accepted": false, "score": 2, "last_activity_date": 1568358085, "creation_date": 1568358085, "answer_id": 57918740, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/57918740#57918740", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p><strong>Kotlin</strong></p>\n\n<p>Make your adapter constructor like this</p>\n\n<pre><code>    class ViewAdapter(\n        private val context: Context,\n        private val mListener: (DataClass) -&gt; Unit\n    ) :\n        RecyclerView.Adapter&lt;WeekRecyclerViewAdapter.ViewHolder&gt;() {\n\n// Your adapter code goes here\n\n}\n</code></pre>\n\n<p>In your <strong>onBindViewHolder</strong>, </p>\n\n<pre><code>holder.binding.parentLayout.setOnClickListener {\n                mListener.invoke(items[position]) // &lt;- item instance of ItemObject\n        }\n</code></pre>\n\n<p>In your <strong>Fragment</strong>, implement like below</p>\n\n<pre><code>class YourFragment : Fragment(), (DataClass) -&gt; Unit {\n    override fun invoke(p1: DataClass) {\n\n        //You will get the selected item here\n\n    }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8612, "user_id": 8874958, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39990cd5d2bd537729f7b2b7a1a724a7?s=128&d=identicon&r=PG&f=1", "display_name": "Kishan Solanki", "link": "https://stackoverflow.com/users/8874958/kishan-solanki"}, "is_accepted": false, "score": 5, "last_activity_date": 1571313535, "creation_date": 1571313535, "answer_id": 58432129, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/58432129#58432129", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p><strong>3 easy steps:</strong></p>\n\n<p><strong>1. pass in argument of your adapter as follow:</strong></p>\n\n<pre><code>class ListAdapter(private val mListener: (ListItemDataClass) -&gt; Unit)\n</code></pre>\n\n<p><strong>2. in <code>onBindViewHolder</code> function, use like this</strong></p>\n\n<pre><code>override fun onBindViewHolder(holder: YourViewHolder, position: Int) {\n\n    val item = getItem(position)\n\n    holder.itemView.setOnClickListener {\n            item?.let { it1 -&gt; mListener.invoke(it1) }\n    }\n}\n</code></pre>\n\n<p><strong>3. and in your activity, use like this</strong></p>\n\n<pre><code>val adapter = ListAdapter {\n        Toast.makeText(this, it.title, Toast.LENGTH_SHORT).show()\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2169, "user_id": 507142, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/Q06jF.jpg?s=128&g=1", "display_name": "Afzal N", "link": "https://stackoverflow.com/users/507142/afzal-n"}, "edited": false, "score": 3, "creation_date": 1575961218, "post_id": 59261768, "comment_id": 104731949, "body": "I wish people would stop answering this question. It doesn&#39;t need 24 answers. Especially seeing how old this question is, back when trait was a thing in Kotlin."}], "tags": [], "owner": {"reputation": 31, "user_id": 9998809, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/K5BtV.png?s=128&g=1", "display_name": "Siele Kim", "link": "https://stackoverflow.com/users/9998809/siele-kim"}, "is_accepted": false, "score": 2, "last_activity_date": 1575960944, "creation_date": 1575960944, "answer_id": 59261768, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin/59261768#59261768", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>Here is a simple approach without using an interface, just in your adapter create an init block within viewholder class.Like this</p>\n\n<pre><code> class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n    init {\n        itemView.setOnClickListener{\n    //your code here---\n      }\n    }\n</code></pre>\n\n<p>}</p>\n"}], "owner": {"reputation": 2169, "user_id": 507142, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/Q06jF.jpg?s=128&g=1", "display_name": "Afzal N", "link": "https://stackoverflow.com/users/507142/afzal-n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103336, "favorite_count": 16, "closed_date": 1576002395, "accepted_answer_id": 29428715, "answer_count": 24, "score": 69, "last_activity_date": 1575960944, "creation_date": 1428023973, "last_edit_date": 1517934216, "question_id": 29424944, "link": "https://stackoverflow.com/questions/29424944/recyclerview-itemclicklistener-in-kotlin", "closed_reason": "Opinion-based", "title": "RecyclerView itemClickListener in Kotlin", "body": "<p>I'm writing my first app in Kotlin after 3 years of experience with Android.\nJust confused as to how to utilize itemClickListener with a RecyclerView in Kotlin.</p>\n\n<p>I have tried the trait (edit: now interface) approach, very Java-like</p>\n\n<pre><code>public class MainActivity : ActionBarActivity() {\n\n  protected override fun onCreate(savedInstanceState: Bundle?) {\n\n    // set content view etc go above this line\n\n    class itemClickListener : ItemClickListener {\n      override fun onItemClick(view: View, position: Int) {\n        Toast.makeText(this@MainActivity, \"TEST: \" + position, Toast.LENGTH_SHORT).show()\n      }\n    }\n\n    val adapter = DrawerAdapter(itemClickListener())\n    mRecyclerView.setAdapter(adapter)\n }\n\n  trait ItemClickListener {\n    fun onItemClick(view: View, position: Int)\n  }\n}\n</code></pre>\n\n<p>That seemed very redundant so I tried the inner class approach:</p>\n\n<pre><code>inner class ItemClickListener {\n    fun onItemClick(view: View, position: Int) {\n        startActivityFromFragmentForResult&lt;SelectExerciseActivity&gt;(SELECT_EXERCISES)\n    }\n}\n</code></pre>\n\n<p>And then just setting the adapter's click listener like this:</p>\n\n<pre><code>val adapter = WorkoutsAdapter(ItemClickListener())\n</code></pre>\n\n<p>But I'm still not satisfied with this because I think there might be a better, cleaner way. I'm trying to essentially achieve something like this:\n<a href=\"https://stackoverflow.com/questions/24471109/recyclerview-onclick/26196831#26196831\">RecyclerView onClick</a></p>\n\n<p>Any suggestions?</p>\n\n<p><strong>Ended up going with a variation of the approved answer</strong></p>\n\n<p>Defined the function in the activity:</p>\n\n<pre><code>val itemOnClick: (View, Int, Int) -&gt; Unit = { view, position, type -&gt;\n    Log.d(TAG, \"test\")\n}\n</code></pre>\n\n<p>Passed the function itself on to the adapter like this:</p>\n\n<pre><code>class ExercisesAdapter(val itemClickListener: (View, Int, Int) -&gt; Unit) : RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt;() {\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\n      // other stuff up here\n      val vhExercise = ExerciseVH(view) // view holder\n      // on to the view holder through the extension function\n      vhExercise.onClick(itemClickListener)\n    }\n}\n</code></pre>\n\n<p>Extension function by Loop in the approved answer below.</p>\n\n<pre><code>fun &lt;T : RecyclerView.ViewHolder&gt; T.onClick(event: (view: View, position: Int, type: Int) -&gt; Unit): T {\n    itemView.setOnClickListener {\n        event.invoke(it, getAdapterPosition(), getItemViewType())\n    }\n    return this\n}\n</code></pre>\n"}]