[{"tags": ["android", "kotlin"], "comments": [{"owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 2, "creation_date": 1447864358, "post_id": 33783613, "comment_id": 55337604, "body": "This is a bug in the Gradle plugin for Kotlin, a fix is almost ready, will be included with the next Beta update."}, {"owner": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "reply_to_user": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 0, "creation_date": 1447865359, "post_id": 33783613, "comment_id": 55338308, "body": "Ah, cool. Is there an issue on YouTrack for this?"}, {"owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 0, "creation_date": 1447945707, "post_id": 33783613, "comment_id": 55380287, "body": "<a href=\"https://youtrack.jetbrains.com/issue/KT-9441\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issue/KT-9441</a>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1452302150, "post_id": 33783613, "comment_id": 57123869, "body": "KT-9441 has been marked as Fixed"}], "answers": [{"comments": [{"owner": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "edited": false, "score": 0, "creation_date": 1458896521, "post_id": 34688635, "comment_id": 60065717, "body": "This still seems to be an issue for Android projects? Using version 1.0.1."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "edited": false, "score": 0, "creation_date": 1459109275, "post_id": 34688635, "comment_id": 60133730, "body": "It was a fix in both Intellij IDEA and Kotlin plugin working together, therefore the Android studio build could be an older version of Intellij IDEA which has the issue."}, {"owner": {"reputation": 1282, "user_id": 874797, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/a9ac62323ad7becd6541362ec72ce6d9?s=128&d=identicon&r=PG", "display_name": "Marcin Bak", "link": "https://stackoverflow.com/users/874797/marcin-bak"}, "edited": false, "score": 0, "creation_date": 1460376787, "post_id": 34688635, "comment_id": 60697288, "body": "I&#39;m also struggling with exactly same issue in Android (Android Studio), with kotlin version &#39;1.0.1-2&#39;. Is it possible that this depends on the IDE?"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 1282, "user_id": 874797, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/a9ac62323ad7becd6541362ec72ce6d9?s=128&d=identicon&r=PG", "display_name": "Marcin Bak", "link": "https://stackoverflow.com/users/874797/marcin-bak"}, "edited": false, "score": 0, "creation_date": 1460380360, "post_id": 34688635, "comment_id": 60700070, "body": "@MarcinBak For bugs, it is best to use <a href=\"https://youtrack.jetbrains.com\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com</a> instead of StackOverflow, as you can add comments and notes to the reported bug, see status, and receive help more directly."}], "tags": [], "owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "is_accepted": true, "score": 1, "last_activity_date": 1452302136, "creation_date": 1452302136, "answer_id": 34688635, "question_id": 33783613, "link": "https://stackoverflow.com/questions/33783613/cannot-access-internal-components-from-test-source-with-android/34688635#34688635", "title": "Cannot access internal components from test source with Android", "body": "<p>This issue existed as bug <a href=\"https://youtrack.jetbrains.com/issue/KT-9441\" rel=\"nofollow\">KT-9441</a> (as noted by @Andrey), and has since been fixed.  There should be no current problem with latest Kotlin and its Gradle plugins.</p>\n"}], "owner": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1729, "favorite_count": 2, "accepted_answer_id": 34688635, "answer_count": 1, "score": 6, "last_activity_date": 1452302136, "creation_date": 1447859433, "last_edit_date": 1447862138, "question_id": 33783613, "link": "https://stackoverflow.com/questions/33783613/cannot-access-internal-components-from-test-source-with-android", "title": "Cannot access internal components from test source with Android", "body": "<p>I have got the following structure:</p>\n\n<pre><code>build.gradle\nsrc\n - main\n   - AndroidManifest.xml\n   - kotlin \n     - pkg\n       - MyClass.kt (internal class MyClass)\n - test\n   - kotlin\n     - pkg\n       - MyClassTest.kt   \n</code></pre>\n\n<p>In <code>MyClassTest.kt</code> I reference the <code>internal class MyClass</code>.</p>\n\n<hr>\n\n<p>The <code>build.gradle</code>:</p>\n\n<pre><code>apply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\n//apply plugin: 'java'\n//apply plugin: 'kotlin'\n\nandroid {\n  compileSdkVersion 23\n  buildToolsVersion \"23.0.2\"\n\n  sourceSets {\n    main.java.srcDirs += 'src/main/kotlin'\n    test.java.srcDirs += 'src/test/kotlin'\n  }\n}\n\ndependencies {\n  testCompile 'junit:junit:4.12'\n  compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n}\n\nbuildscript {\n  ext.kotlin_version = '1.0.0-beta-2423'\n  repositories {\n    mavenCentral()\n  }\n  dependencies {\n    classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n  }\n}\n\nrepositories {\n  mavenCentral()\n}\n</code></pre>\n\n<p>Now when I run <code>./gradlew test</code>, I get the following error:</p>\n\n<blockquote>\n  <p>Cannot access 'MyClass': it is 'internal' in 'pkg'</p>\n</blockquote>\n\n<p>However, when I switch the plugins to use <code>java</code> instead of <code>com.android.application</code>, and <code>kotlin</code> instead of <code>kotlin-android</code>, the tests do succeed.</p>\n\n<p>How can I reference internal classes from my test sources when using the Android plugins?</p>\n"}, {"tags": ["android-studio", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 18360, "user_id": 2911458, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3a6060bc7ace07fa75791cd5dac2d46a?s=128&d=identicon&r=PG", "display_name": "stkent", "link": "https://stackoverflow.com/users/2911458/stkent"}, "edited": false, "score": 1, "creation_date": 1447850225, "post_id": 33774668, "comment_id": 55326762, "body": "Thanks! I turned off the highlighting, which also seemed to turn off the info message shown on hover (I could not find a separate inspection or intention to explicitly disable)."}, {"owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "edited": false, "score": 0, "creation_date": 1447853304, "post_id": 33774668, "comment_id": 55328992, "body": "I believe it is just bad background color for such fields. Changing it to a darker one would make it look better and stop annoying."}, {"owner": {"reputation": 18360, "user_id": 2911458, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3a6060bc7ace07fa75791cd5dac2d46a?s=128&d=identicon&r=PG", "display_name": "stkent", "link": "https://stackoverflow.com/users/2911458/stkent"}, "reply_to_user": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "edited": false, "score": 0, "creation_date": 1447863514, "post_id": 33774668, "comment_id": 55337009, "body": "@SergeyMashkov agree, the color is intense; I just wasn&#39;t sure if there was a &#39;deeper meaning&#39; behind the intensity!"}], "tags": [], "owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "is_accepted": false, "score": 2, "last_activity_date": 1451542639, "last_edit_date": 1451542639, "creation_date": 1447834100, "answer_id": 33774668, "question_id": 33771633, "link": "https://stackoverflow.com/questions/33771633/is-it-considered-idiomatic-to-always-prefer-properties-over-backing-fields/33774668#33774668", "title": "Is it considered idiomatic to always prefer properties over backing fields?", "body": "<p>Nothing to worry about, it's a known issue with the IDE. The highlighting is there simply for your information, cause backing fields require some extra care in certain cases.</p>\n\n<p>If it troubles you, just turn the inspection off. Or change the highlighting to be not so bright.</p>\n"}, {"tags": [], "owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "is_accepted": true, "score": 3, "last_activity_date": 1451182771, "creation_date": 1451182771, "answer_id": 34477063, "question_id": 33771633, "link": "https://stackoverflow.com/questions/33771633/is-it-considered-idiomatic-to-always-prefer-properties-over-backing-fields/34477063#34477063", "title": "Is it considered idiomatic to always prefer properties over backing fields?", "body": "<p>Idiomatic is to use properties without backing properties.  Backing properties are an exception case, as are custom getters and setters. You do need to be aware of the difference between a \"Backing Field\" and \"Backing Property\":</p>\n\n<p>In the Kotlin docs, it talks about <a href=\"https://kotlinlang.org/docs/reference/properties.html#backing-fields\" rel=\"nofollow\">Backing Fields</a> which are something you sometimes access from custom getters/setters and exist for any given property.  There is an implied name for backing fields of <code>field</code>, so in a setter you would access this backing field by that name:</p>\n\n<pre><code>var counter = 0 // the initializer value is written directly to the backing field\n  set(value) {\n    if (value &gt;= 0)\n      field = value\n  }\n</code></pre>\n\n<p>A <a href=\"https://kotlinlang.org/docs/reference/properties.html#backing-properties\" rel=\"nofollow\">Backing Property</a> on the other hand is something that you define to store the value in another private property and of which you have complete control over.  By convention it would be <code>private</code> and be prefixed with an underscore <code>_</code>.  This looks like:</p>\n\n<pre><code>private var _table: Map&lt;String, Int&gt;? = null\n\npublic val table: Map&lt;String, Int&gt;\n  get() {\n    if (_table == null)\n      _table = HashMap() // Type parameters are inferred\n    return _table ?: throw AssertionError(\"Set to null by another thread\")\n  }\n</code></pre>\n"}], "owner": {"reputation": 18360, "user_id": 2911458, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3a6060bc7ace07fa75791cd5dac2d46a?s=128&d=identicon&r=PG", "display_name": "stkent", "link": "https://stackoverflow.com/users/2911458/stkent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 34477063, "answer_count": 2, "score": 2, "last_activity_date": 1451542639, "creation_date": 1447819524, "last_edit_date": 1447850465, "question_id": 33771633, "link": "https://stackoverflow.com/questions/33771633/is-it-considered-idiomatic-to-always-prefer-properties-over-backing-fields", "title": "Is it considered idiomatic to always prefer properties over backing fields?", "body": "<p>I recently converted an Android project from Java to Kotlin using Android Studio's Kotlin plugin. Post-conversion, many fields in my classes were highlighted, and hovering over them displays the message </p>\n\n<blockquote>\n  <p>This property has a backing field</p>\n</blockquote>\n\n<p><a href=\"https://i.stack.imgur.com/Fizgq.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Fizgq.png\" alt=\"Android Studio screenshot showing hover message\"></a></p>\n\n<p>Should I infer from the existence of this message/warning that it is always considered more idiomatic (in Kotlin) to use properties with explicitly-defined getters and/or setters? Or is the IDE being a little over-zealous with the informational messages? Answers that include references to official sources preferred :)</p>\n"}, {"tags": ["equals", "equality", "kotlin"], "comments": [{"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1447772465, "post_id": 33758880, "comment_id": 55287768, "body": "I confirm the behavior. I think that&#39;s a bug. They are messing with that part of the compiler a lot these days"}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1447772584, "post_id": 33758880, "comment_id": 55287857, "body": "Please report it to the bug tracker <a href=\"http://youtrack.jetbrains.com/issues/KT\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issues/KT</a>"}, {"owner": {"reputation": 14366, "user_id": 543875, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e7740aae8e555ec733f3f47d04812802?s=128&d=identicon&r=PG", "display_name": "Lars Blumberg", "link": "https://stackoverflow.com/users/543875/lars-blumberg"}, "reply_to_user": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 1, "creation_date": 1447772850, "post_id": 33758880, "comment_id": 55288034, "body": "Thanks for counter checking. Filed here: <a href=\"https://youtrack.jetbrains.com/issue/KT-10055\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issue/KT-10055</a>"}], "answers": [{"comments": [{"owner": {"reputation": 14366, "user_id": 543875, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e7740aae8e555ec733f3f47d04812802?s=128&d=identicon&r=PG", "display_name": "Lars Blumberg", "link": "https://stackoverflow.com/users/543875/lars-blumberg"}, "edited": false, "score": 1, "creation_date": 1447775933, "post_id": 33761113, "comment_id": 55290395, "body": "Thanks for clarifying. Although <code>BooleanArray</code> was convient to use, I will switch to <code>List&lt;Boolean&gt;</code> now. As Kotlin has reach 1.0 beta status it could be a good time to update the official documentation that I cited."}], "tags": [], "owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "is_accepted": true, "score": 4, "last_activity_date": 1447775394, "last_edit_date": 1447775394, "creation_date": 1447775075, "answer_id": 33761113, "question_id": 33758880, "link": "https://stackoverflow.com/questions/33758880/can-i-add-operators-to-existing-classes/33761113#33761113", "title": "Can I add operators to existing classes?", "body": "<p>The documentation is outdated and this is no longer possible. If you declare your <code>equals</code> extension with that signature, it will never be invoked because <a href=\"https://kotlinlang.org/docs/reference/extensions.html#extensions-are-resolved-statically\" rel=\"nofollow\">member functions always win</a> over extensions, and there is a member function <code>equals</code> in <code>Any</code>. The only way you can provide your own <code>equals</code> is by overriding that member function from <code>Any</code>, but that is of course not possible for arrays. I suggest you try using lists or other data structures with well-defined <code>equals</code> / <code>hashCode</code> behavior rather than arrays.</p>\n"}], "owner": {"reputation": 14366, "user_id": 543875, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e7740aae8e555ec733f3f47d04812802?s=128&d=identicon&r=PG", "display_name": "Lars Blumberg", "link": "https://stackoverflow.com/users/543875/lars-blumberg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "accepted_answer_id": 33761113, "answer_count": 1, "score": 1, "last_activity_date": 1447775394, "creation_date": 1447768881, "last_edit_date": 1447773721, "question_id": 33758880, "link": "https://stackoverflow.com/questions/33758880/can-i-add-operators-to-existing-classes", "title": "Can I add operators to existing classes?", "body": "<p>In Kotlin, I would like to add an <code>equals</code> method to an existing class that hasn't got an <code>equals</code> implementation yet.</p>\n\n<p>In my case I would like to compare two <code>BooleanArray</code> instances. <code>equals</code> (and thus <code>==</code>) should return <code>true</code> for two arrays <code>a1</code> and <code>a2</code> if they are of the same size and if all items are equal. Thus <code>a1[i] === a2[i]</code> for all <code>0 &lt;= i &lt; size</code>.</p>\n\n<p><a href=\"https://kotlinlang.org/docs/reference/operator-overloading.html\" rel=\"nofollow\">The documentation states that operators can be defined by extension methods</a>:</p>\n\n<blockquote>\n  <p>The function must be declared as</p>\n  \n  <p><code>fun equals(other: Any?): Boolean</code></p>\n  \n  <p>Or an extension function with the same parameter list and return type.</p>\n</blockquote>\n\n<p><code>BooleanArray</code> doesn't provide an <code>equals</code> method.</p>\n\n<p>So I wrote:</p>\n\n<pre><code>fun BooleanArray.equals(other: Any?): Boolean { return ... }\n</code></pre>\n\n<p>However this extension gets ignored. When I compare two <code>BooleanArray</code>s such as</p>\n\n<pre><code>BooleanArray(0).equals(BooleanArray(0))\n</code></pre>\n\n<p>it doesn't call the extension method and thus always evaluates to <code>false</code> for two different instances.</p>\n"}, {"tags": ["kotlin"], "answers": [{"comments": [{"owner": {"reputation": 9475, "user_id": 1373258, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/057cb1f71b78244924b7854605d79a9d?s=128&d=identicon&r=PG&f=1", "display_name": "tmn", "link": "https://stackoverflow.com/users/1373258/tmn"}, "edited": false, "score": 1, "creation_date": 1447763234, "post_id": 33749255, "comment_id": 55281398, "body": "Thanks a lot Andrey, I was confused because I was accessing the Kotlin class from Java code (which was showing explicit getters for interoperability). I was expecting it to the same thing when accessing it in straight Kotlin. I get it now, it&#39;s just like C#."}, {"owner": {"reputation": 9475, "user_id": 1373258, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/057cb1f71b78244924b7854605d79a9d?s=128&d=identicon&r=PG&f=1", "display_name": "tmn", "link": "https://stackoverflow.com/users/1373258/tmn"}, "edited": false, "score": 0, "creation_date": 1447763496, "post_id": 33749255, "comment_id": 55281568, "body": "On a side note, thanks again for putting together this great language. This is everything and more of what I wanted Java to be (especially coming from C# as my first language)."}], "tags": [], "owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "is_accepted": true, "score": 9, "last_activity_date": 1447734972, "creation_date": 1447734972, "answer_id": 33749255, "question_id": 33747805, "link": "https://stackoverflow.com/questions/33747805/kotlin-single-instance-of-a-non-singleton-class/33749255#33749255", "title": "Kotlin- Single instance of a non-singleton class?", "body": "<blockquote>\n  <p>Is this pattern I discovered valid and not an anti-pattern?</p>\n</blockquote>\n\n<p>Yes, it's a valid pattern</p>\n\n<blockquote>\n  <p>Also, is there any way to compile getters and encapsulate final properties on the singleton? Or do I implement those methods myself?</p>\n</blockquote>\n\n<p>Kotlin properties are not just fields: they already have getters generated for them, so having <code>database</code> and <code>db()</code> is no better than just <code>database</code>.</p>\n\n<p>If you need to change the behavior of the property later without recompiling the clients, you can write a custom getter:</p>\n\n<pre><code>val database: Database\n    get() = ...\n</code></pre>\n\n<p>This will simply change the body of the getter that is otherwise automatically generated for you</p>\n"}], "owner": {"reputation": 9475, "user_id": 1373258, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/057cb1f71b78244924b7854605d79a9d?s=128&d=identicon&r=PG&f=1", "display_name": "tmn", "link": "https://stackoverflow.com/users/1373258/tmn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1285, "favorite_count": 0, "accepted_answer_id": 33749255, "answer_count": 1, "score": 3, "last_activity_date": 1447734972, "creation_date": 1447724875, "question_id": 33747805, "link": "https://stackoverflow.com/questions/33747805/kotlin-single-instance-of-a-non-singleton-class", "title": "Kotlin- Single instance of a non-singleton class?", "body": "<p>I was doing some experiments with Kotlin and I was playing with singleton patterns. I wanted to persist a single instance of a <code>Database</code> object. Just like in Java, I thought I'd wrap a singleton around it. </p>\n\n<pre><code>import com.github.davidmoten.rx.jdbc.ConnectionProviderFromUrl\nimport com.github.davidmoten.rx.jdbc.Database\n\nobject DbManager {\n    val database : Database =\n            Database.from(ConnectionProviderFromUrl(\"jdbc:sqlite:C:/Users/Thomas/OneDrive/Data/finance_rx.db\").get())\n}\n</code></pre>\n\n<p>What surprised me however is there seems to be no built-in way to compile getters for it (like properties for a class). It was just straight up exposing that <code>database</code> property to the world without any encapsulation, which I did not want. </p>\n\n<p>I could just make it private and explicitly make my own getter (but I'm looking at Kotlin because I'm passionate about being lazy). However, I think I stumbled on another way to do this. </p>\n\n<p>I could create a Kotlin file and declare a private variable and a public function to encapsulate and expose it safely, without putting it in any class or singleton at all!</p>\n\n<pre><code>import com.github.davidmoten.rx.jdbc.ConnectionProviderFromUrl\nimport com.github.davidmoten.rx.jdbc.Database\n\nprivate val database : Database =\n        Database.from(ConnectionProviderFromUrl(\"jdbc:sqlite:C:/Users/Thomas/OneDrive/Data/finance_rx.db\").get())\n\nfun db(): Database = database;\n</code></pre>\n\n<p>The thing is it just feels way too easy. I feel like I'm doing something bad. But at the same time this makes sense. Nobody likes calling <code>MySingleton.getInstance().getDb()</code> a hundred times. Is this pattern I discovered valid and not an anti-pattern?</p>\n\n<p>Also, is there any way to compile getters and encapsulate final properties on the singleton? Or do I implement those methods myself?</p>\n"}, {"tags": ["java", "android", "unit-testing", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 131, "user_id": 2114376, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/94CyG.jpg?s=128&g=1", "display_name": "p__b", "link": "https://stackoverflow.com/users/2114376/p-b"}, "edited": false, "score": 1, "creation_date": 1447744900, "post_id": 33744104, "comment_id": 55270112, "body": "I have it in same gradle project. Classes are in \\app\\src\\main\\kotlin\\pl\\orendi\\bit\\MainActivity.kt and test are in \\app\\src\\androidTest\\java\\pl\\orendi\\bit\\Test.java I&#39;ve used package fields to do field injection and is it possible with kotlin?"}, {"owner": {"reputation": 641, "user_id": 5479247, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-AC0-V9DmUv4/AAAAAAAAAAI/AAAAAAAAFc0/7D0Qqwhjgbg/photo.jpg?sz=128", "display_name": "Eugene Krivenja", "link": "https://stackoverflow.com/users/5479247/eugene-krivenja"}, "reply_to_user": {"reputation": 131, "user_id": 2114376, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/94CyG.jpg?s=128&g=1", "display_name": "p__b", "link": "https://stackoverflow.com/users/2114376/p-b"}, "edited": false, "score": 0, "creation_date": 1447833374, "post_id": 33744104, "comment_id": 55315655, "body": "Try to create a same test as Kotlin class. Because I didn&#39;t find anything exactly described an access of internal Kotlin properties from Java code, assume should be same as from Kotlin code, but may be not."}], "tags": [], "owner": {"reputation": 641, "user_id": 5479247, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-AC0-V9DmUv4/AAAAAAAAAAI/AAAAAAAAFc0/7D0Qqwhjgbg/photo.jpg?sz=128", "display_name": "Eugene Krivenja", "link": "https://stackoverflow.com/users/5479247/eugene-krivenja"}, "is_accepted": false, "score": 1, "last_activity_date": 1447706101, "creation_date": 1447706101, "answer_id": 33744104, "question_id": 33743492, "link": "https://stackoverflow.com/questions/33743492/how-to-access-internal-properties-from-java-test-code/33744104#33744104", "title": "how to access internal properties from java test code", "body": "<p>Both classes (MainActivity and test class) must be in one module. This is a module definition:</p>\n\n<blockquote>\n  <p>More specifically, a module is a set of Kotlin files compiled together:</p>\n  \n  <ul>\n  <li>an IntelliJ IDEA module;  </li>\n  <li>a Maven or Gradle project;  </li>\n  <li>a set of files\n  compiled with one invocation of the Ant task.</li>\n  </ul>\n</blockquote>\n\n<p><a href=\"https://kotlinlang.org/docs/reference/visibility-modifiers.html\" rel=\"nofollow\">https://kotlinlang.org/docs/reference/visibility-modifiers.html</a></p>\n\n<p>It means, check your project structure.</p>\n"}, {"tags": [], "owner": {"reputation": 1455, "user_id": 2649611, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ff3b4b9e7a105dc104f8d76a0b31e92?s=128&d=identicon&r=PG", "display_name": "cakraww", "link": "https://stackoverflow.com/users/2649611/cakraww"}, "is_accepted": false, "score": 0, "last_activity_date": 1531993214, "creation_date": 1531993214, "answer_id": 51419272, "question_id": 33743492, "link": "https://stackoverflow.com/questions/33743492/how-to-access-internal-properties-from-java-test-code/51419272#51419272", "title": "how to access internal properties from java test code", "body": "<p>There are two ways of doing this:</p>\n\n<ul>\n<li>Make the property <code>protected</code>. Note on how Java &amp; Kotlin treat <code>protected</code> differently. In Java it's possible that other classes in the same package access <code>protected</code> members. Thus your test class (in Java) can access it.</li>\n<li>Access the property via its ugly name. It should be sort of like <code>activity.setSomeProperty$production_...</code>. Make use the autocomplete. From <a href=\"https://kotlinlang.org/docs/reference/java-to-kotlin-interop.html#visibility\" rel=\"nofollow noreferrer\">the documentation</a>:\n\n<blockquote>\n  <p>Members of internal classes go through name mangling, to make it\n  harder to accidentally use them from Java and to allow overloading for\n  members with the same signature that don't see each other according to\n  Kotlin rules;</p>\n</blockquote></li>\n</ul>\n"}], "owner": {"reputation": 131, "user_id": 2114376, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/94CyG.jpg?s=128&g=1", "display_name": "p__b", "link": "https://stackoverflow.com/users/2114376/p-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1066, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1531993214, "creation_date": 1447703695, "question_id": 33743492, "link": "https://stackoverflow.com/questions/33743492/how-to-access-internal-properties-from-java-test-code", "title": "how to access internal properties from java test code", "body": "<p>I've got some class with property marked as internal. \nThen I try to set that property from test code which is in java. \nHow can I access those properties? test code and class code are in the same package.</p>\n\n<p>example:</p>\n\n<pre><code>class MainActivity : AppCompatActivity() {\n    interal var someProperty = \"test\"\n}\n</code></pre>\n\n<p>test code:</p>\n\n<pre><code>@Test\npublic void firstStartTest() {\n    val activity = MainActivity() \n    activity.setSomeProperty(\"something\") //does not compile\n\n}\n</code></pre>\n\n<p>Android Studio is suggesting activity.setSomeProperty$production_sources_for_module_app();\nbut this also does not compile. </p>\n"}, {"tags": ["java", "intellij-idea", "kotlin"], "comments": [{"owner": {"reputation": 79983, "user_id": 147024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b35432f97606c0a31da17084d2414966?s=128&d=identicon&r=PG", "display_name": "yole", "link": "https://stackoverflow.com/users/147024/yole"}, "edited": false, "score": 1, "creation_date": 1447688472, "post_id": 33738304, "comment_id": 55246632, "body": "Why are you using Kotlin 0.10? The latest version is 1.0-beta."}, {"owner": {"reputation": 2546, "user_id": 1883183, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0303250dd8c4b0078b6e181ba3c3fef4?s=128&d=identicon&r=PG", "display_name": "Filip Zymek", "link": "https://stackoverflow.com/users/1883183/filip-zymek"}, "reply_to_user": {"reputation": 79983, "user_id": 147024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b35432f97606c0a31da17084d2414966?s=128&d=identicon&r=PG", "display_name": "yole", "link": "https://stackoverflow.com/users/147024/yole"}, "edited": false, "score": 0, "creation_date": 1447690711, "post_id": 33738304, "comment_id": 55248131, "body": "No particular reason. I&#39;ve tried different versions. I thought my problem has something to do with kotlin version."}, {"owner": {"reputation": 79983, "user_id": 147024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b35432f97606c0a31da17084d2414966?s=128&d=identicon&r=PG", "display_name": "yole", "link": "https://stackoverflow.com/users/147024/yole"}, "edited": false, "score": 0, "creation_date": 1447695487, "post_id": 33738304, "comment_id": 55250893, "body": "Well, the stacktrace you have shown contains a class that no longer exists in the latest Kotlin version, so yes, it has something to do with Kotlin version. Please do always use the latest one."}], "answers": [{"comments": [{"owner": {"reputation": 2546, "user_id": 1883183, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0303250dd8c4b0078b6e181ba3c3fef4?s=128&d=identicon&r=PG", "display_name": "Filip Zymek", "link": "https://stackoverflow.com/users/1883183/filip-zymek"}, "edited": false, "score": 0, "creation_date": 1447686633, "post_id": 33738446, "comment_id": 55245391, "body": "I just tried applying <code>idea</code> plugin, but it seems to have no effect. I&#39;ve rebuilded project and even restarted IDE but nothing has changed."}, {"owner": {"reputation": 19246, "user_id": 51577, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/cbfaeb8d0e2ee5da976331d2cb13d0ec?s=128&d=identicon&r=PG", "display_name": "tddmonkey", "link": "https://stackoverflow.com/users/51577/tddmonkey"}, "reply_to_user": {"reputation": 2546, "user_id": 1883183, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0303250dd8c4b0078b6e181ba3c3fef4?s=128&d=identicon&r=PG", "display_name": "Filip Zymek", "link": "https://stackoverflow.com/users/1883183/filip-zymek"}, "edited": false, "score": 0, "creation_date": 1447686898, "post_id": 33738446, "comment_id": 55245574, "body": "How are you importing/building your project?"}, {"owner": {"reputation": 19246, "user_id": 51577, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/cbfaeb8d0e2ee5da976331d2cb13d0ec?s=128&d=identicon&r=PG", "display_name": "tddmonkey", "link": "https://stackoverflow.com/users/51577/tddmonkey"}, "reply_to_user": {"reputation": 2546, "user_id": 1883183, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0303250dd8c4b0078b6e181ba3c3fef4?s=128&d=identicon&r=PG", "display_name": "Filip Zymek", "link": "https://stackoverflow.com/users/1883183/filip-zymek"}, "edited": false, "score": 0, "creation_date": 1447687311, "post_id": 33738446, "comment_id": 55245832, "body": "I&#39;ve taken your <code>build.gradle</code> file, applied the idea plugin, run <code>$ gradle idea</code> and the resulting project has <code>src&#47;main&#47;kotlin</code> marked as a source directory"}, {"owner": {"reputation": 2546, "user_id": 1883183, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0303250dd8c4b0078b6e181ba3c3fef4?s=128&d=identicon&r=PG", "display_name": "Filip Zymek", "link": "https://stackoverflow.com/users/1883183/filip-zymek"}, "edited": false, "score": 0, "creation_date": 1447690823, "post_id": 33738446, "comment_id": 55248214, "body": "I run gradlew clean build to generate jars. I&#39;ll try your solution when I get near my pc :)"}, {"owner": {"reputation": 2546, "user_id": 1883183, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0303250dd8c4b0078b6e181ba3c3fef4?s=128&d=identicon&r=PG", "display_name": "Filip Zymek", "link": "https://stackoverflow.com/users/1883183/filip-zymek"}, "edited": false, "score": 0, "creation_date": 1447748916, "post_id": 33738446, "comment_id": 55272008, "body": "I&#39;ve deleted all intellij and gradle dirs and files and reimported project. Now <code>src&#47;main&#47;kotlin</code> is recognized properly. After adding <code>from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }</code> as @aga suggested, jar file can be run."}], "tags": [], "owner": {"reputation": 19246, "user_id": 51577, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/cbfaeb8d0e2ee5da976331d2cb13d0ec?s=128&d=identicon&r=PG", "display_name": "tddmonkey", "link": "https://stackoverflow.com/users/51577/tddmonkey"}, "is_accepted": false, "score": 4, "last_activity_date": 1447686275, "creation_date": 1447686275, "answer_id": 33738446, "question_id": 33738304, "link": "https://stackoverflow.com/questions/33738304/configuring-gradle-with-kotlin/33738446#33738446", "title": "Configuring Gradle with Kotlin", "body": "<p><strong>Why doesn't my application run?</strong></p>\n\n<p>The Jar you're creating doesn't include the kotlin runtime as Gradle will only build a Jar with <em>your</em> class files in it.  I see you're using the <code>application</code> plugin so either doing <code>$ gradle run</code> or creating a distribution and executing through the provided shell script should work ok.  If you want to ship kotlin with your Jar you'll need to create a fat jar.</p>\n\n<p><strong>Why doesn't IDEA recognise the source directory?</strong></p>\n\n<p>I suspect this is down to the fact you haven't applied the <code>idea</code> plugin in your build file.  I haven't done any work with Kotlin, but with other languages this is required to set up the workspace correctly.</p>\n"}, {"comments": [{"owner": {"reputation": 2546, "user_id": 1883183, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0303250dd8c4b0078b6e181ba3c3fef4?s=128&d=identicon&r=PG", "display_name": "Filip Zymek", "link": "https://stackoverflow.com/users/1883183/filip-zymek"}, "edited": false, "score": 0, "creation_date": 1447711686, "post_id": 33743165, "comment_id": 55259532, "body": "According to doc, &#39;sourceSets&#39; should be updated when not using default dir structure, but this is not my case. I am using default one so I think this does not make sense to add it in &#39;build.gradle&#39;"}, {"owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 1, "creation_date": 1447753458, "post_id": 33743165, "comment_id": 55274792, "body": "Main-Class attribute in your answer would not work because Kotlin wouldn&#39;t generate a class named <code>HelloKotlin.kt</code>. The correct name is <code>HelloKotlinKt</code>."}, {"owner": {"reputation": 25774, "user_id": 885028, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/xJkDj.jpg?s=128&g=1", "display_name": "aga", "link": "https://stackoverflow.com/users/885028/aga"}, "reply_to_user": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 0, "creation_date": 1447753762, "post_id": 33743165, "comment_id": 55274987, "body": "@AlexanderUdalov you&#39;re absolutely right, thanks for comment. :)"}], "tags": [], "owner": {"reputation": 25774, "user_id": 885028, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/xJkDj.jpg?s=128&g=1", "display_name": "aga", "link": "https://stackoverflow.com/users/885028/aga"}, "is_accepted": true, "score": 12, "last_activity_date": 1447753743, "last_edit_date": 1495541900, "creation_date": 1447702389, "answer_id": 33743165, "question_id": 33738304, "link": "https://stackoverflow.com/questions/33738304/configuring-gradle-with-kotlin/33743165#33743165", "title": "Configuring Gradle with Kotlin", "body": "<blockquote>\n  <p>When running gradlew clean build all projects are compiled successfully, but when running java -jar hello-kotlin-1.0-SNAPSHOT.jar I get following error...</p>\n</blockquote>\n\n<pre><code>jar {\n    manifest {\n        attributes 'Main-Class': 'HelloKotlinKt'\n    }\n\n    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }\n}\n</code></pre>\n\n<blockquote>\n  <p>What is more, Intellij seems not to recognize src/main/kotlin directory as source directory (it's not marked in blue)...</p>\n</blockquote>\n\n<pre><code>sourceSets {\n    main.java.srcDirs += 'src/main/kotlin'\n}\n</code></pre>\n\n<p>Documentation and useful resources can be found <a href=\"https://kotlinlang.org/docs/reference/using-gradle.html\" rel=\"noreferrer\">here</a> and <a href=\"https://stackoverflow.com/questions/26469365/building-a-self-executable-jar-with-gradle-and-kotlin\">there</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 54, "user_id": 6916569, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8efe441437e8dfba04bac1c1ac32aebe?s=128&d=identicon&r=PG&f=1", "display_name": "Kirill Bitkov", "link": "https://stackoverflow.com/users/6916569/kirill-bitkov"}, "is_accepted": false, "score": 0, "last_activity_date": 1506022821, "creation_date": 1506022821, "answer_id": 46351999, "question_id": 33738304, "link": "https://stackoverflow.com/questions/33738304/configuring-gradle-with-kotlin/46351999#46351999", "title": "Configuring Gradle with Kotlin", "body": "<p>I just do that documentation says, and all work fine.\n\"Kotlin sources can be mixed with Java sources in the same folder, or in different folders. The default convention is using different folders:</p>\n\n<pre><code>project\n    - src\n        - main (root)\n            - kotlin\n            - java\n</code></pre>\n\n<p>The corresponding sourceSets property should be updated if not using the default convention:</p>\n\n<pre><code>sourceSets {\n    main.kotlin.srcDirs += 'src/main/myKotlin'\n    main.java.srcDirs += 'src/main/myJava'\n}\n</code></pre>\n\n<p>Hope it helps for you.</p>\n"}], "owner": {"reputation": 2546, "user_id": 1883183, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0303250dd8c4b0078b6e181ba3c3fef4?s=128&d=identicon&r=PG", "display_name": "Filip Zymek", "link": "https://stackoverflow.com/users/1883183/filip-zymek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11590, "favorite_count": 3, "accepted_answer_id": 33743165, "answer_count": 3, "score": 19, "last_activity_date": 1506022821, "creation_date": 1447685889, "question_id": 33738304, "link": "https://stackoverflow.com/questions/33738304/configuring-gradle-with-kotlin", "title": "Configuring Gradle with Kotlin", "body": "<p>I am trying to use kotlin with gradle, but I am unable to succesfully create a project with Intellij Idea 15.</p>\n\n<p>I've create simple project with two modules <code>hello-java</code> and <code>hello-kotlin</code>. </p>\n\n<p><code>hello-java</code> is plain java project and it is compiling and running perfectly fine. </p>\n\n<p><code>hello-kotlin</code> is simple kotin module, with just one *.kt file and <code>build.gradle</code> file.<br>\nHere are the sources:</p>\n\n<p>build.gradle</p>\n\n<pre><code>group 'pl.fzymek.kotlin'\nversion '1.0-SNAPSHOT'\n\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:0.10.4\"\n    }\n}\n\napply plugin: 'kotlin'\napply plugin: 'application'\n\nmainClassName = 'HelloKotlinKt'\n\nrepositories {\n    mavenCentral()\n}\n\njar {\n    manifest {\n        attributes 'Main-Class': mainClassName\n    }\n}\n\ndependencies {\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:0.10.4\"\n}\n</code></pre>\n\n<p>HelloKotlin.kt</p>\n\n<pre><code>fun main(args: Array&lt;String&gt;) {\n    println(\"Hello, Kotlin!\")\n}\n</code></pre>\n\n<p>main module settings.gradle</p>\n\n<pre><code>include 'hello-java'\ninclude 'hello-kotlin'\n</code></pre>\n\n<p>When running <code>gradlew clean build</code> all projects are compiled successfully, but when running <code>java -jar hello-kotlin-1.0-SNAPSHOT.jar</code> I get following error:</p>\n\n<pre><code>Exception in thread \"main\" java.lang.NoClassDefFoundError: kotlin/jvm/internal/Intrinsics\n        at HelloKotlinKt.main(HelloKotlin.kt)\nCaused by: java.lang.ClassNotFoundException: kotlin.jvm.internal.Intrinsics\n        at java.net.URLClassLoader.findClass(Unknown Source)\n        at java.lang.ClassLoader.loadClass(Unknown Source)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)\n        at java.lang.ClassLoader.loadClass(Unknown Source)\n        ... 1 more\n</code></pre>\n\n<p>What is more, Intellij seems not to recognize <code>src/main/kotlin</code> directory as source directory (it's not marked in blue) and I am not able to use auto-complete feature when editing HelloKotlin.kt file. </p>\n\n<p>Here's my project structure in Intellij project window</p>\n\n<p><a href=\"https://i.stack.imgur.com/wurvw.png\"><img src=\"https://i.stack.imgur.com/wurvw.png\" alt=\"enter image description here\"></a></p>\n\n<p>I've tried using Intellij option to configure modules with Kotlin(<code>Tools-&gt;Kotlin-&gt;Configure project with Kotlin</code>), but it gives me error that \"All modules with kotlin files are configured\"</p>\n\n<p>Help me stackoverflow, you are my only help. </p>\n"}, {"tags": ["android", "android-layout", "android-fragments", "kotlin", "anko"], "comments": [{"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1447687968, "post_id": 33730097, "comment_id": 55246274, "body": "try to navigate to the <code>verticalLayout</code> method. My guess is that it is defined on <code>Activity</code>, so it works inside it, but not outside it."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1447688065, "post_id": 33730097, "comment_id": 55246339, "body": "If what I said is true, than a solution would be to try assigning the layout to an appropriate property. In your example it kind of hangs in the air"}, {"owner": {"reputation": 4979, "user_id": 670623, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fa40acfdb9af9fea937524a5aef4aaf3?s=128&d=identicon&r=PG", "display_name": "akhy", "link": "https://stackoverflow.com/users/670623/akhy"}, "reply_to_user": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1447730443, "post_id": 33730097, "comment_id": 55265250, "body": "@voddan yes, it&#39;s only available in <code>Activity</code>. Finally, I&#39;ve found a workaround, will post the answer soon"}], "answers": [{"comments": [{"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1447749488, "post_id": 33748644, "comment_id": 55272331, "body": "I recommend you asking more on the intended use of API at the slack channel, #anko thread: <a href=\"http://kotlinslackin.herokuapp.com/\" rel=\"nofollow noreferrer\">kotlinslackin.herokuapp.com</a>. Because for me this inconsistency seems like a bug, but people there know for sure."}, {"owner": {"reputation": 1091, "user_id": 3423539, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99231e6fe7118c7409fdbcedd6d3afcc?s=128&d=identicon&r=PG", "display_name": "yanex", "link": "https://stackoverflow.com/users/3423539/yanex"}, "edited": false, "score": 3, "creation_date": 1447765719, "post_id": 33748644, "comment_id": 55283032, "body": "Yes, it is the right way for the current version of Anko (0.7.3)."}, {"owner": {"reputation": 4324, "user_id": 1259923, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/eSrTO.png?s=128&g=1", "display_name": "Eefret", "link": "https://stackoverflow.com/users/1259923/eefret"}, "reply_to_user": {"reputation": 3667, "user_id": 190148, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/5338ca3693b8a1aaf94b6f791c5842a7?s=128&d=identicon&r=PG", "display_name": "netimen", "link": "https://stackoverflow.com/users/190148/netimen"}, "edited": false, "score": 5, "creation_date": 1458075039, "post_id": 33748644, "comment_id": 59695005, "body": "@netimen just return <code>UI{}.view</code>"}], "tags": [], "owner": {"reputation": 4979, "user_id": 670623, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fa40acfdb9af9fea937524a5aef4aaf3?s=128&d=identicon&r=PG", "display_name": "akhy", "link": "https://stackoverflow.com/users/670623/akhy"}, "is_accepted": true, "score": 13, "last_activity_date": 1447730902, "creation_date": 1447730902, "answer_id": 33748644, "question_id": 33730097, "link": "https://stackoverflow.com/questions/33730097/how-to-use-anko-dsl-inside-a-fragment/33748644#33748644", "title": "How to use Anko DSL inside a Fragment?", "body": "<p>After digging up <code>anko-support-v4</code> source code plus some trial and errors, I have found a workaround although I'm not sure if it's the right/recommended way. It seems a little undocumented.</p>\n\n<p>A sample from my <code>Fragment</code> code:</p>\n\n<pre><code>override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?, savedInstanceState: Bundle?): View? {\n\n    return UI {\n        verticalLayout {\n            linearLayout {\n                avatar = imageView().lparams(width = dip(48), height = dip (48))\n                name = textView().lparams(width = 0, weight = 1f)\n            }\n\n            linearLayout {\n                // ...\n            }\n        }\n    }.toView()\n} \n</code></pre>\n\n<blockquote>\n  <p>I'm returning layout DSL wrapped in <code>UI { ... }.toView()</code> in <code>Fragment.onCreateView(...)</code></p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 5208, "user_id": 4257162, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/GKajj.jpg?s=128&g=1", "display_name": "LeoColman", "link": "https://stackoverflow.com/users/4257162/leocolman"}, "edited": false, "score": 1, "creation_date": 1546715406, "post_id": 34477874, "comment_id": 94944630, "body": "<code>AnkoContext.create(ctx, this)</code> is deprecated. instead of <code>ctx</code> one should use <code>requireContext()</code>"}], "tags": [], "owner": {"reputation": 2840, "user_id": 2565340, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14fe70113561f37381444c923d22051d?s=128&d=identicon&r=PG", "display_name": "RussHWolf", "link": "https://stackoverflow.com/users/2565340/russhwolf"}, "is_accepted": false, "score": 21, "last_activity_date": 1451194354, "creation_date": 1451194354, "answer_id": 34477874, "question_id": 33730097, "link": "https://stackoverflow.com/questions/33730097/how-to-use-anko-dsl-inside-a-fragment/34477874#34477874", "title": "How to use Anko DSL inside a Fragment?", "body": "<p>With Anko 0.8 you can also use an <code>AnkoComponent</code>, if you want to hold your UI in a separate class so you can reuse it elsewhere.</p>\n\n<pre><code>class FragmentUi&lt;T&gt;: AnkoComponent&lt;T&gt; {\n    override fun createView(ui: AnkoContext&lt;T&gt;) = with(ui) {\n        verticalLayout {\n            // ...\n        }\n    }\n}\n</code></pre>\n\n<p>You can call it in your fragment <code>onCreateView()</code> by</p>\n\n<pre><code>override fun onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle?): View\n        = FragmentUi&lt;Fragment&gt;().createView(AnkoContext.create(ctx, this))\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 397, "user_id": 8435023, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/QTP76.png?s=128&g=1", "display_name": "Qube", "link": "https://stackoverflow.com/users/8435023/qube"}, "edited": false, "score": 0, "creation_date": 1540786135, "post_id": 36135808, "comment_id": 92976955, "body": "it says it want it when the ? in LayoutInflater is deleted"}], "tags": [], "owner": {"reputation": 4324, "user_id": 1259923, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/eSrTO.png?s=128&g=1", "display_name": "Eefret", "link": "https://stackoverflow.com/users/1259923/eefret"}, "is_accepted": false, "score": 7, "last_activity_date": 1458575713, "creation_date": 1458575713, "answer_id": 36135808, "question_id": 33730097, "link": "https://stackoverflow.com/questions/33730097/how-to-use-anko-dsl-inside-a-fragment/36135808#36135808", "title": "How to use Anko DSL inside a Fragment?", "body": "<p>As of anko 0.8.1 the correct code would be:</p>\n\n<pre><code>override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?, savedInstanceState: Bundle?): View? {\n    return UI {\n        verticalLayout {\n            linearLayout {\n                // ...\n            }\n            linearLayout {\n                // ...\n            }\n        }\n    }.view\n} \n</code></pre>\n"}], "owner": {"reputation": 4979, "user_id": 670623, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fa40acfdb9af9fea937524a5aef4aaf3?s=128&d=identicon&r=PG", "display_name": "akhy", "link": "https://stackoverflow.com/users/670623/akhy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8486, "favorite_count": 2, "accepted_answer_id": 33748644, "answer_count": 3, "score": 14, "last_activity_date": 1458575713, "creation_date": 1447658013, "question_id": 33730097, "link": "https://stackoverflow.com/questions/33730097/how-to-use-anko-dsl-inside-a-fragment", "title": "How to use Anko DSL inside a Fragment?", "body": "<p>The <a href=\"https://github.com/JetBrains/anko#basics\">Github wiki page</a> show this example to be used in <code>Activity</code> instance:</p>\n\n<pre><code>override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n\n    verticalLayout {\n        padding = dip(30)\n        editText {\n            hint = \"Name\"\n            textSize = 24f\n        }\n        editText {\n            hint = \"Password\"\n            textSize = 24f\n        }\n        button(\"Login\") {\n            textSize = 26f\n        }\n    }\n}\n</code></pre>\n\n<p>How to do the same inside a <code>Fragment</code>? </p>\n\n<p>I tried to put that <code>verticalLayout</code> block in <code>onCreateView</code> but the method cannot be resolved. I have added <code>anko-support-v4</code> dependency, but still no luck. </p>\n"}, {"tags": ["android", "kotlin", "otto"], "comments": [{"owner": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "edited": false, "score": 0, "creation_date": 1447667975, "post_id": 33729288, "comment_id": 55233933, "body": "What is your question?"}, {"owner": {"reputation": 11547, "user_id": 811071, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e2b815d9b4865455e6143abada764cd?s=128&d=identicon&r=PG", "display_name": "piotrpo", "link": "https://stackoverflow.com/users/811071/piotrpo"}, "reply_to_user": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "edited": false, "score": 0, "creation_date": 1447668823, "post_id": 33729288, "comment_id": 55234446, "body": "@nhaarman I&#39;m looking for a way to get stable build process."}, {"owner": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "edited": false, "score": 0, "creation_date": 1447668881, "post_id": 33729288, "comment_id": 55234478, "body": "In my experience, this only happens when converting java files to kotlin. Since this is a one-time transformation, this shouldn&#39;t be a problem when just writing kotlin. Assuming it only happens when converting java to kotlin, that is."}, {"owner": {"reputation": 11547, "user_id": 811071, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e2b815d9b4865455e6143abada764cd?s=128&d=identicon&r=PG", "display_name": "piotrpo", "link": "https://stackoverflow.com/users/811071/piotrpo"}, "reply_to_user": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "edited": false, "score": 0, "creation_date": 1447669863, "post_id": 33729288, "comment_id": 55235059, "body": "Possibly - but I still suffer from this bugs and some builds are still affected with this issue. Do you suggest to rewrite this class from scratch &quot;manually&quot;, instead of using translated one?"}, {"owner": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "edited": false, "score": 0, "creation_date": 1447670249, "post_id": 33729288, "comment_id": 55235275, "body": "Won&#39;t <code>.&#47;gradlew clean build</code> help? My guess is that some compilation step fails due to the transformation - it compiled the java version, but now there is a kt version."}, {"owner": {"reputation": 7455, "user_id": 312161, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/e21cc7396d5879d3812e2a940ebca6cb?s=128&d=identicon&r=PG", "display_name": "neworld", "link": "https://stackoverflow.com/users/312161/neworld"}, "edited": false, "score": 0, "creation_date": 1447671261, "post_id": 33729288, "comment_id": 55235800, "body": "For me <code>Build -&gt; Clean Project</code> or <code>.&#47;gradlew clean</code> fix class not found issues."}, {"owner": {"reputation": 11547, "user_id": 811071, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e2b815d9b4865455e6143abada764cd?s=128&d=identicon&r=PG", "display_name": "piotrpo", "link": "https://stackoverflow.com/users/811071/piotrpo"}, "edited": false, "score": 0, "creation_date": 1447675304, "post_id": 33729288, "comment_id": 55238193, "body": "This issue occurs also on release builds with clean dependancy - issue is quite random. It seems that it&#39;s more probably to occur after changing code of the ProfileCoverFragment. Anyway - I have no 100% path to both reproduce or avoid this issue."}], "owner": {"reputation": 11547, "user_id": 811071, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e2b815d9b4865455e6143abada764cd?s=128&d=identicon&r=PG", "display_name": "piotrpo", "link": "https://stackoverflow.com/users/811071/piotrpo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 275, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1447668775, "creation_date": 1447653381, "last_edit_date": 1447668775, "question_id": 33729288, "link": "https://stackoverflow.com/questions/33729288/class-not-found-exception-with-some-builds", "title": "Class not found exception with some builds", "body": "<p>I translated fragment to Kotlin.\nInside it I have method tagged with Otto's <code>@Subscriebe</code> tag to listen for network communication.\nWhen I run some builds this fragment is created and visible, but when data is downloaded and Otto tries to call this tagged method I got <code>ClassNotFoundException</code>:</p>\n\n<pre><code>Fatal Exception: java.lang.NoClassDefFoundError: Failed resolution of: (...)/app/ui/fragments/ProfileCoverFragment$fillFromUserProfile$1;\n       at (...).ui.fragments.ProfileCoverFragment.fillFromUserProfile(ProfileCoverFragment.kt:136)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:372)\n       at com.squareup.otto.EventHandler.handleEvent(EventHandler.java:89)\n       at com.squareup.otto.Bus.dispatch(Bus.java:386)\n       at com.squareup.otto.Bus.dispatchQueuedEvents(Bus.java:369)\n       at com.squareup.otto.Bus.post(Bus.java:338)\n       at (...).communication.DefaultCallback.success(DefaultCallback.java:32)\n       at (...).app.communication.CommunicationManager$7.success(CommunicationManager.java:463)\n       at (...).app.communication.CommunicationManager$7.success(CommunicationManager.java:459)\n       at retrofit.CallbackRunnable$1.run(CallbackRunnable.java:45)\n       at android.os.Handler.handleCallback(Handler.java:739)\n       at android.os.Handler.dispatchMessage(Handler.java:95)\n       at android.os.Looper.loop(Looper.java:135)\n       at android.app.ActivityThread.main(ActivityThread.java:5257)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:372)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)\n</code></pre>\n\n<p>After rebuild issue is temporarily fixed. But it still can be found in some builds.\nI'm looking for a way to get stable build process with gradle.</p>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1466717089, "post_id": 33727657, "comment_id": 63448314, "body": "There is a lightweight way to protect Kotlin collections as immutable rather than only as read-only, see: <a href=\"http://stackoverflow.com/a/38002121/3679676\">stackoverflow.com/a/38002121/3679676</a>"}], "answers": [{"comments": [{"owner": {"reputation": 9475, "user_id": 1373258, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/057cb1f71b78244924b7854605d79a9d?s=128&d=identicon&r=PG&f=1", "display_name": "tmn", "link": "https://stackoverflow.com/users/1373258/tmn"}, "edited": false, "score": 1, "creation_date": 1447688184, "post_id": 33732403, "comment_id": 55246442, "body": "Interesting approach although it makes sense to ensure interoperability. I may stick with Guava collections because (the last time I checked) the performance is much better."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 4, "creation_date": 1451177848, "post_id": 33732403, "comment_id": 56695072, "body": "Kotlin collections are readonly, not immutable @nhaarman.  I suggested an edit to your answer."}, {"owner": {"reputation": 9976, "user_id": 1369016, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/DkJLX.png?s=128&g=1", "display_name": "Bitcoin Cash - ADA enthusiast", "link": "https://stackoverflow.com/users/1369016/bitcoin-cash-ada-enthusiast"}, "edited": false, "score": 1, "creation_date": 1504069616, "post_id": 33732403, "comment_id": 78862680, "body": "Note that if you create a list using arrayListOf() the list returned is an ArrayList, which is mutable. If you want an immutable list you must use listOf() instead."}], "tags": [], "owner": {"reputation": 89682, "user_id": 675383, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6e7a971eb341ffeaa3efca407239bf3b?s=128&d=identicon&r=PG", "display_name": "nhaarman", "link": "https://stackoverflow.com/users/675383/nhaarman"}, "is_accepted": true, "score": 32, "last_activity_date": 1451177963, "last_edit_date": 1451177963, "creation_date": 1447667299, "answer_id": 33732403, "question_id": 33727657, "link": "https://stackoverflow.com/questions/33727657/kotlin-and-immutable-collections/33732403#33732403", "title": "Kotlin and Immutable Collections?", "body": "<p>Kotlin's <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-list/index.html\" rel=\"noreferrer\"><code>List</code></a> from the standard library is readonly:</p>\n\n<pre><code>interface List&lt;out E&gt; : Collection&lt;E&gt; (source)\n</code></pre>\n\n<blockquote>\n  <p>A generic ordered collection of elements. Methods in this interface\n  support only read-only access to the list; read/write access is\n  supported through the MutableList interface.  </p>\n  \n  <p><strong>Parameters</strong><br>\n  E - the type of elements contained in the list.</p>\n</blockquote>\n\n<p>As mentioned, there is also the <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-mutable-list/index.html\" rel=\"noreferrer\"><code>MutableList</code></a></p>\n\n<pre><code>interface MutableList&lt;E&gt; : List&lt;E&gt;, MutableCollection&lt;E&gt; (source)\n</code></pre>\n\n<blockquote>\n  <p>A generic ordered collection of elements that supports adding and\n  removing elements.  </p>\n  \n  <p><strong>Parameters</strong><br>\n  E - the type of elements contained in the list.</p>\n</blockquote>\n\n<p>Due to this, Kotlin enforces readonly behaviour through its interfaces, instead of throwing Exceptions on runtime like default Java implementations do.</p>\n\n<p>Likewise, there is a <code>MutableCollection</code>, <code>MutableIterable</code>, <code>MutableIterator</code>, <code>MutableListIterator</code>, <code>MutableMap</code>, and <code>MutableSet</code>, see the <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/index.html\" rel=\"noreferrer\">stdlib</a> documentation.</p>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 5, "creation_date": 1451177893, "post_id": 33738910, "comment_id": 56695077, "body": "Kotlin <code>List</code> is readonly, not immutable.  Other callers (Java for example) may change the list.  Kotlin callers might cast the list and change it.  There is no immutable protection."}], "tags": [], "owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "is_accepted": false, "score": 27, "last_activity_date": 1451180922, "last_edit_date": 1451180922, "creation_date": 1447687770, "answer_id": 33738910, "question_id": 33727657, "link": "https://stackoverflow.com/questions/33727657/kotlin-and-immutable-collections/33738910#33738910", "title": "Kotlin and Immutable Collections?", "body": "<p>It is confusing but there are three, not two types of immutability:</p>\n\n<ol>\n<li>Mutable   - you are supposed to change the collection (Kotlin's <code>MutableList</code>)</li>\n<li>Readonly - you are NOT supposed to change it (Kotlin's <code>List</code>) but something may (cast to Mutable, or change from Java)</li>\n<li>Immutable - no one can change it (Guavas's immutable collections)</li>\n</ol>\n\n<p>So in case (2) <code>List</code> is just an interface that does not have mutating methods, but you can change the instance if you cast it to <code>MutableList</code>.</p>\n\n<p>With Guava (case (3)) you are safe from anybody to change the collection, even with a cast or from another thread.</p>\n\n<p>Kotlin chose to be readonly in order to use Java collections directly, so there is no overhead or conversion in using Java collections..</p>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451178195, "post_id": 34027828, "comment_id": 56695123, "body": "Your answer will be true for Kotlin 1.0, immutable collections are not on the table for the 1.0 release."}], "tags": [], "owner": {"reputation": 24586, "user_id": 3255152, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fbd95ef81d0a85310fee8dd46e0f65b0?s=128&d=identicon&r=PG&f=1", "display_name": "mfulton26", "link": "https://stackoverflow.com/users/3255152/mfulton26"}, "is_accepted": false, "score": 8, "last_activity_date": 1451181868, "last_edit_date": 1451181868, "creation_date": 1448995735, "answer_id": 34027828, "question_id": 33727657, "link": "https://stackoverflow.com/questions/33727657/kotlin-and-immutable-collections/34027828#34027828", "title": "Kotlin and Immutable Collections?", "body": "<p>Kotlin 1.0 will not have immutable collections in the standard library. It does, however, have read-only and mutable <em>interfaces</em>.  And nothing prevents you from using third party immutable collection libraries.</p>\n\n<p>Methods in Kotlin's <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-list/index.html\" rel=\"noreferrer\"><code>List</code></a> interface \"support only read-only access to the list\" while methods in its <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-mutable-list/index.html\" rel=\"noreferrer\"><code>MutableList</code></a> interface support \"adding and removing elements\". Both of these, however, are only <strong>interfaces</strong>.</p>\n\n<p>Kotlin's <code>List</code> interface enforces read-only access at compile-time instead of deferring such checks to run-time like <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#unmodifiableList-java.util.List-\" rel=\"noreferrer\"><code>java.util.Collections.unmodifiableList(java.util.List)</code></a> (which \"returns an unmodifiable view of the specified list... [where] attempts to modify the returned list... result in an <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/UnsupportedOperationException.html\" rel=\"noreferrer\"><code>UnsupportedOperationException</code></a>.\" <strong>It does not enforce immutability.</strong></p>\n\n<p>Consider the following Kotlin code:</p>\n\n<pre><code>import com.google.common.collect.ImmutableList\nimport kotlin.test.assertEquals\nimport kotlin.test.assertFailsWith\n\nfun main(args: Array&lt;String&gt;) {\n    val readOnlyList: List&lt;Int&gt; = arrayListOf(1, 2, 3)\n    val mutableList: MutableList&lt;Int&gt; = readOnlyList as MutableList&lt;Int&gt;\n    val immutableList: ImmutableList&lt;Int&gt; = ImmutableList.copyOf(readOnlyList)\n\n    assertEquals(readOnlyList, mutableList)\n    assertEquals(mutableList, immutableList)\n\n    // readOnlyList.add(4) // Kotlin: Unresolved reference: add\n    mutableList.add(4)\n    assertFailsWith(UnsupportedOperationException::class) { immutableList.add(4) }\n\n    assertEquals(readOnlyList, mutableList)\n    assertEquals(mutableList, immutableList)\n}\n</code></pre>\n\n<p>Notice how <code>readOnlyList</code> is a <code>List</code> and methods such as <code>add</code> cannot be resolved (and won't compile), <code>mutableList</code> can naturally be mutated, and <code>add</code> on <code>immutableList</code> (from Google Guava) can also be resolved at compile-time but throws an exception at run-time.</p>\n\n<p>All of the above assertions pass with exception of the last one which results in <code>Exception in thread \"main\" java.lang.AssertionError: Expected &lt;[1, 2, 3, 4]&gt;, actual &lt;[1, 2, 3]&gt;.</code> i.e. We successfully mutated a read-only <code>List</code>!</p>\n\n<p>Note that using <code>listOf(...)</code> instead of <code>arrayListOf(...)</code> returns an effectively immutable list as you cannot cast it to any mutable list type. However, using the <code>List</code> interface for a variable does not prevent a <code>MutableList</code> from being assigned to it (<code>MutableList&lt;E&gt;</code> extends <code>List&lt;E&gt;</code>).</p>\n\n<p>Finally, note that an interface in Kotlin (as well as in Java) cannot enforce immutability as it \"cannot store state\" (see <a href=\"https://kotlinlang.org/docs/reference/interfaces.html\" rel=\"noreferrer\">Interfaces</a>). As such, if you want an immutable collection you need to use something like those provided by Google Guava.</p>\n\n<hr>\n\n<p>See also <a href=\"https://github.com/google/guava/wiki/ImmutableCollectionsExplained\" rel=\"noreferrer\">ImmutableCollectionsExplained \u00b7 google/guava Wiki \u00b7 GitHub</a></p>\n"}, {"tags": [], "owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "is_accepted": false, "score": 17, "last_activity_date": 1496925508, "last_edit_date": 1496925508, "creation_date": 1451180346, "answer_id": 34476880, "question_id": 33727657, "link": "https://stackoverflow.com/questions/33727657/kotlin-and-immutable-collections/34476880#34476880", "title": "Kotlin and Immutable Collections?", "body": "<p>As you see in other answers, Kotlin has readonly interfaces to mutable collections that let you view a collection through a readonly lens.  But the collection can be bypassed via casting or manipulated from Java.  But in cooperative Kotlin code that is fine, most uses do not need truly immutable collections and if your team avoids casts to the mutable form of the collection then maybe you don't need fully immutable collections.</p>\n\n<p>The Kotlin collections allow both copy-on-change mutations, as well as lazy mutations.  So to answer part of your questions, things like <code>filter</code>, <code>map</code>, <code>flatmap</code>, operators <code>+</code> <code>-</code> all create copies when used against non lazy collections.  When used on a <code>Sequence</code> they modify the values as the collection as it is accessed and continue to be lazy (resulting in another <code>Sequence</code>).  Although for a <code>Sequence</code>, calling anything such as <code>toList</code>, <code>toSet</code>, <code>toMap</code> will result in the final copy being made.  By naming convention almost anything that starts with <code>to</code> is making a copy. </p>\n\n<p>In other words, most operators return you the same type as you started with, and if that type is \"readonly\" then you will receive a copy.  If that type is lazy, then you will lazily apply the change until you demand the collection in its entirety.</p>\n\n<p>Some people want them for other reasons, such as parallel processing.  In those cases, it might be best to look at really high performance collections designed just for those purposes.  And only use them in those cases, not in all general cases.  </p>\n\n<p>In the JVM world it is hard to avoid interop with libraries that want standard Java collections, and converting to/from these collections adds a lot of pain and overhead for libraries that do not support the common interfaces.  Kotlin gives a good mix of interop and lack of conversion, with readonly protection by contract.</p>\n\n<p>So if you can't avoid wanting immutable collections, Kotlin easily works with anything from the JVM space:</p>\n\n<ul>\n<li><strong>Guava</strong> (<a href=\"https://github.com/google/guava\" rel=\"noreferrer\">https://github.com/google/guava</a>)</li>\n<li><strong>Dexx</strong> a port of the Scala collections to Java (<a href=\"https://github.com/andrewoma/dexx\" rel=\"noreferrer\">https://github.com/andrewoma/dexx</a>) with Kotlin helpers (<a href=\"https://github.com/andrewoma/dexx/blob/master/kollection/README.md\" rel=\"noreferrer\">https://github.com/andrewoma/dexx/blob/master/kollection/README.md</a>)</li>\n<li><strong>Eclipse Collections</strong> (formerly GS-Collections) a really high performance, JDK compatible, top performer in parallel processing with immutable and mutable variations (home: <a href=\"https://www.eclipse.org/collections/\" rel=\"noreferrer\">https://www.eclipse.org/collections/</a> and Github: <a href=\"https://github.com/eclipse/eclipse-collections\" rel=\"noreferrer\">https://github.com/eclipse/eclipse-collections</a>)</li>\n<li><strong>PCollections</strong> (<a href=\"http://pcollections.org/\" rel=\"noreferrer\">http://pcollections.org/</a>)</li>\n</ul>\n\n<p>Also, the Kotlin team is working on Immutable Collections natively for Kotlin, that effort can be seen here: \n <a href=\"https://github.com/Kotlin/kotlinx.collections.immutable\" rel=\"noreferrer\">https://github.com/Kotlin/kotlinx.collections.immutable</a></p>\n\n<p>There are many other collection frameworks out there for all different needs and constraints, Google is your friend for finding them.  There is no reason the Kotlin team needs to reinvent them for its standard library.  You have a lot of options, and they specialize in different things such as performance, memory use, not-boxing, immutability, etc.  \"Choice is Good\"  ... therefore some others:  <a href=\"https://github.com/carrotsearch/hppc\" rel=\"noreferrer\">HPCC</a>, <a href=\"https://github.com/vsonnier/hppcrt\" rel=\"noreferrer\">HPCC-RT</a>, <a href=\"http://fastutil.di.unimi.it/\" rel=\"noreferrer\">FastUtil</a>, <a href=\"https://github.com/OpenHFT/Koloboke\" rel=\"noreferrer\">Koloboke</a>, <a href=\"http://trove.starlight-systems.com/\" rel=\"noreferrer\">Trove</a> and more...</p>\n\n<p>There are even efforts like Pure4J which since Kotlin supports Annotation processing now, maybe can have a port to Kotlin for similar ideals.</p>\n"}, {"tags": [], "owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "is_accepted": false, "score": 2, "last_activity_date": 1473641729, "last_edit_date": 1495540501, "creation_date": 1466717054, "answer_id": 38002121, "question_id": 33727657, "link": "https://stackoverflow.com/questions/33727657/kotlin-and-immutable-collections/38002121#38002121", "title": "Kotlin and Immutable Collections?", "body": "<p><strong>NOTE:</strong>  <em>This answer is here because the code is simple and open-source and you can use this idea to make your collections that you create immutable.  It is not intended only as an advertisement of the library.</em></p>\n\n<p>In <a href=\"https://github.com/kohesive/klutter\" rel=\"nofollow noreferrer\">Klutter library</a>, are new Kotlin Immutable wrappers that use Kotlin delegation to wrap a existing Kotlin collection interface with a protective layer without any performance hit.  There is then no way to cast the collection, its iterator, or other collections it might return into something that could be modified.  They become in effect Immutable.  </p>\n\n<blockquote>\n  <p>Klutter <code>1.20.0</code> released which adds immutable protectors for existing collections, based on a <a href=\"https://stackoverflow.com/a/37936456/3679676\">SO answer by @miensol</a> provides a light-weight delegate around collections that prevents any avenue of modification including casting to a mutable type then modifying.  And Klutter goes a step further by protecting sub collections such as iterator, listIterator, entrySet, etc.  All of those doors are closed and using Kotlin delegation for most methods you take no hit in performance.    Simply call <code>myCollection.asReadonly()</code> (<em>protect</em>) or <code>myCollection.toImmutable()</code> (<em>copy then protect</em>) and the result is the same interface but protected.</p>\n</blockquote>\n\n<p>Here is an example from the code showing how simply the technique is, by basically delegating the interface to the actual class while overriding mutation methods and any sub-collections returned are wrapped on the fly.</p>\n\n<pre><code>/**\n * Wraps a List with a lightweight delegating class that prevents casting back to mutable type\n */\nopen class ReadOnlyList &lt;T&gt;(protected val delegate: List&lt;T&gt;) : List&lt;T&gt; by delegate, ReadOnly, Serializable {\n    companion object {\n        @JvmField val serialVersionUID = 1L\n    }\n\n    override fun iterator(): Iterator&lt;T&gt; {\n        return delegate.iterator().asReadOnly()\n    }\n\n    override fun listIterator(): ListIterator&lt;T&gt; {\n        return delegate.listIterator().asReadOnly()\n    }\n\n    override fun listIterator(index: Int): ListIterator&lt;T&gt; {\n        return delegate.listIterator(index).asReadOnly()\n    }\n\n    override fun subList(fromIndex: Int, toIndex: Int): List&lt;T&gt; {\n        return delegate.subList(fromIndex, toIndex).asReadOnly()\n    }\n\n    override fun toString(): String {\n        return \"ReadOnly: ${super.toString()}\"\n    }\n\n    override fun equals(other: Any?): Boolean {\n        return delegate.equals(other)\n    }\n\n    override fun hashCode(): Int {\n        return delegate.hashCode()\n    }\n}\n</code></pre>\n\n<p>Along with helper extension functions to make it easy to access:</p>\n\n<pre><code>/**\n * Wraps the List with a lightweight delegating class that prevents casting back to mutable type,\n * specializing for the case of the RandomAccess marker interface being retained if it was there originally\n */\nfun &lt;T&gt; List&lt;T&gt;.asReadOnly(): List&lt;T&gt; {\n    return this.whenNotAlreadyReadOnly {\n        when (it) {\n            is RandomAccess -&gt; ReadOnlyRandomAccessList(it)\n            else -&gt; ReadOnlyList(it)\n        }\n    }\n}\n\n/**\n * Copies the List and then wraps with a lightweight delegating class that prevents casting back to mutable type,\n * specializing for the case of the RandomAccess marker interface being retained if it was there originally\n */\n@Suppress(\"UNCHECKED_CAST\")\nfun &lt;T&gt; List&lt;T&gt;.toImmutable(): List&lt;T&gt; {\n    val copy = when (this) {\n        is RandomAccess -&gt; ArrayList&lt;T&gt;(this)\n        else -&gt; this.toList()\n    }\n    return when (copy) {\n        is RandomAccess -&gt;  ReadOnlyRandomAccessList(copy)\n        else -&gt; ReadOnlyList(copy)\n    }\n}\n</code></pre>\n\n<p>You can see the idea and extrapolate to create the missing classes from this code which repeats the patterns for other referenced types.  Or view the full code here:</p>\n\n<blockquote>\n  <p><a href=\"https://github.com/kohesive/klutter/blob/master/core-jdk6/src/main/kotlin/uy/klutter/core/common/Immutable.kt\" rel=\"nofollow noreferrer\">https://github.com/kohesive/klutter/blob/master/core-jdk6/src/main/kotlin/uy/klutter/core/common/Immutable.kt</a></p>\n</blockquote>\n\n<p>And with tests showing some of the tricks that allowed modifications before, but now do not, along with the blocked casts and calls using these wrappers.</p>\n\n<blockquote>\n  <p><a href=\"https://github.com/kohesive/klutter/blob/master/core-jdk6/src/test/kotlin/uy/klutter/core/collections/TestImmutable.kt\" rel=\"nofollow noreferrer\">https://github.com/kohesive/klutter/blob/master/core-jdk6/src/test/kotlin/uy/klutter/core/collections/TestImmutable.kt</a></p>\n</blockquote>\n"}], "owner": {"reputation": 9475, "user_id": 1373258, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/057cb1f71b78244924b7854605d79a9d?s=128&d=identicon&r=PG&f=1", "display_name": "tmn", "link": "https://stackoverflow.com/users/1373258/tmn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 16116, "favorite_count": 6, "accepted_answer_id": 33732403, "answer_count": 5, "score": 41, "last_activity_date": 1496925508, "creation_date": 1447641080, "question_id": 33727657, "link": "https://stackoverflow.com/questions/33727657/kotlin-and-immutable-collections", "title": "Kotlin and Immutable Collections?", "body": "<p>I am learning Kotlin and it is looking likely I may want to use it as my primary language within the next year. However, I keep getting conflicting research that Kotlin does or does not have immutable collections and I'm trying to figure out if I need to use Google Guava. </p>\n\n<p>Can someone please give me some guidance on this? Does it by default use Immutable collections? What operators return mutable or immutable collections? If not, are there plans to implement them?</p>\n"}, {"tags": ["kotlin"], "answers": [{"comments": [{"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 1, "creation_date": 1447681440, "post_id": 33730070, "comment_id": 55241947, "body": "Thank you. Pity kotlin doesn&#39;t support implementing interfaces externally. Why is that if I may ask?"}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "reply_to_user": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 0, "creation_date": 1447681889, "post_id": 33730070, "comment_id": 55242249, "body": "I fail to even imagine such a thing. Could you provide an example of a language which does that?"}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 0, "creation_date": 1447682878, "post_id": 33730070, "comment_id": 55242880, "body": "OK. I guess I cannot. What I have in mind is like duck-typing. e.g. If you implement <code>close()</code> method for a class, you can use <code>use()</code> extension method. If I wanted to treat a thread pool like an IO resource, I would &#39;extend&#39; the thread pool class, and implement the <code>close()</code> method (since I don&#39;t have the definition file)."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 1, "creation_date": 1451190087, "post_id": 33730070, "comment_id": 56696740, "body": "@WinterYoung You can already do that with some aspects of Kotlin that are built-in.  For example for a <code>for (a in b)</code> style loop you can add a few extension methods to convince the compiler it is &quot;like an iterator&quot; without being one.  <a href=\"https://kotlinlang.org/docs/reference/control-flow.html#for-loops\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/control-flow.html#for-loops</a>  ... You can add feature requests to <a href=\"https://youtrack.jetbrains.com\" rel=\"nofollow noreferrer\">Kotlin issue tracker</a> about other built-ins that would be nice to have.  Or about compiler plugin model that would allow new ones to be created."}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "reply_to_user": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451203488, "post_id": 33730070, "comment_id": 56698969, "body": "@JaysonMinard Thank you for the extended explanation."}, {"owner": {"reputation": 266, "user_id": 2960413, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e97da93585f13f5256be46535dcaf277?s=128&d=identicon&r=PG&f=1", "display_name": "Manas Chaudhari", "link": "https://stackoverflow.com/users/2960413/manas-chaudhari"}, "edited": false, "score": 1, "creation_date": 1489484593, "post_id": 33730070, "comment_id": 72678889, "body": "Swift supports externally implementing interfaces. See <a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html\" rel=\"nofollow noreferrer\">developer.apple.com/library/content/documentation/Swift/&hellip;</a>"}, {"owner": {"reputation": 3069, "user_id": 591922, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/qmZop.png?s=128&g=1", "display_name": "Loic", "link": "https://stackoverflow.com/users/591922/loic"}, "edited": false, "score": 0, "creation_date": 1496563145, "post_id": 33730070, "comment_id": 75705953, "body": "Go too, in a certain way."}], "tags": [], "owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "is_accepted": true, "score": 6, "last_activity_date": 1492488439, "last_edit_date": 1492488439, "creation_date": 1447657834, "answer_id": 33730070, "question_id": 33727634, "link": "https://stackoverflow.com/questions/33727634/does-kotlin-support-making-a-class-implementing-an-interface-outside-of-its-defi/33730070#33730070", "title": "Does kotlin support making a class implementing an interface outside of its definition file?", "body": "<p><strong>No, it is not supported.</strong></p>\n\n<p>You are right, that is only a compiler trick. There are lots of magic applied to the collections to make them right. Fortunately it is not available to the devs. Special paragraph in the docs: <a href=\"https://kotlinlang.org/docs/reference/java-interop.html#mapped-types\" rel=\"nofollow noreferrer\">https://kotlinlang.org/docs/reference/java-interop.html#mapped-types</a></p>\n"}], "owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 744, "favorite_count": 0, "accepted_answer_id": 33730070, "answer_count": 1, "score": 5, "last_activity_date": 1492488439, "creation_date": 1447640842, "question_id": 33727634, "link": "https://stackoverflow.com/questions/33727634/does-kotlin-support-making-a-class-implementing-an-interface-outside-of-its-defi", "title": "Does kotlin support making a class implementing an interface outside of its definition file?", "body": "<p>I see kotlin.List and kotlin.MutableList is implemented by java.util.ArrayList. But where did kotlin put this trick? Compiler or somewhere in stdlib?</p>\n\n<p>If kotlin supports making a class implementing an interface outside of its definition file like the ArrayList case, it will be fascinated.</p>\n"}, {"tags": ["generics", "instantiation", "kotlin"], "comments": [{"owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 0, "creation_date": 1447624398, "post_id": 33725335, "comment_id": 55220348, "body": "Can you please clarify what do you mean by &quot;In C# and Java this task is very simple&quot;? Can you please show a code example?"}, {"owner": {"reputation": 493, "user_id": 1210708, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/ca8708a41734f3de73f2016503b681c7?s=128&d=identicon&r=PG", "display_name": "user1210708", "link": "https://stackoverflow.com/users/1210708/user1210708"}, "reply_to_user": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 0, "creation_date": 1447655344, "post_id": 33725335, "comment_id": 55228186, "body": "Having trouble to enter the code."}, {"owner": {"reputation": 493, "user_id": 1210708, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/ca8708a41734f3de73f2016503b681c7?s=128&d=identicon&r=PG", "display_name": "user1210708", "link": "https://stackoverflow.com/users/1210708/user1210708"}, "edited": false, "score": 0, "creation_date": 1447660910, "post_id": 33725335, "comment_id": 55230241, "body": "Ouch.  It is hard to believe that something this elementary and critical is not yet implemented.  Thanks."}, {"owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 0, "creation_date": 1447672627, "post_id": 33725335, "comment_id": 55236533, "body": "This is not possible for free on the JVM because generic types are not reified at runtime, so I&#39;m not sure how would you do that in Java."}, {"owner": {"reputation": 421, "user_id": 617455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cbde950315f846169dc0b28976102f65?s=128&d=identicon&r=PG", "display_name": "Grigory Katkov", "link": "https://stackoverflow.com/users/617455/grigory-katkov"}, "reply_to_user": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 0, "creation_date": 1447686835, "post_id": 33725335, "comment_id": 55245533, "body": "@AlexanderUdalov what about your last comment in KT-6728? Isn&#39;t that the thing?  <code>inline fun &lt;reified T : Any&gt; create(): T = T::class.primaryConstructor!!.call()</code>"}, {"owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 0, "creation_date": 1447693652, "post_id": 33725335, "comment_id": 55249908, "body": "That is using runtime reflection, which is not &quot;for free&quot; as it is in C# where generic types are reified and which I think the original question was about"}], "owner": {"reputation": 493, "user_id": 1210708, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/ca8708a41734f3de73f2016503b681c7?s=128&d=identicon&r=PG", "display_name": "user1210708", "link": "https://stackoverflow.com/users/1210708/user1210708"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 1, "closed_date": 1447660914, "answer_count": 0, "score": 1, "last_activity_date": 1447656163, "creation_date": 1447623260, "last_edit_date": 1447656163, "question_id": 33725335, "link": "https://stackoverflow.com/questions/33725335/how-to-instantiate-a-kotlin-generic", "closed_reason": "Duplicate", "title": "How to instantiate a Kotlin generic", "body": "<p>In Kotlin, how do one instantiate a generic?  In C# and Java this task is very simple and I feel really stupid for not being able to do this in any way I have tried.</p>\n\n<p>Note that I have no control over the derivation of the \"underlying\" Kotlin generic and hence cannot use variance; that which I can however guarantee is that it is an instantiable Kotlin class (not Java) which does have a zero argument constructor.</p>\n\n<p>Also note that I have read this already (without getting it to work): <a href=\"https://youtrack.jetbrains.com/issue/KT-6728\" rel=\"nofollow\">https://youtrack.jetbrains.com/issue/KT-6728</a></p>\n\n<p>A bit of opinion - really really like Kotlin after a week or two's play.  </p>\n\n<p>C# Code / a very simple example.  Java is very similar:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System;\n\nnamespace GenInstance\n{\n    class MainClass\n    {\n        public static void Main (string[] args)\n        {\n            Console.WriteLine (\"Hello World!\");\n\n            var w = new Instancer&lt;Whatever&gt; ().Map ();\n            Console.WriteLine (w);\n            Console.ReadLine ();\n        }\n    }\n\n    public class Instancer&lt;T&gt; where T : new() {\n        public T Map() {\n            return new T();\n        }\n    }\n\n    public class Whatever {\n        public override string ToString ()\n        {\n            return \"My Instance\";\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["debugging", "intellij-idea", "kotlin"], "comments": [{"owner": {"reputation": 386, "user_id": 3836081, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000265489427/picture?type=large", "display_name": "Natalia Selezneva", "link": "https://stackoverflow.com/users/3836081/natalia-selezneva"}, "edited": false, "score": 0, "creation_date": 1447676213, "post_id": 33718455, "comment_id": 55238714, "body": "Have you added any &#39;Class Filters&#39; to &#39;Any Exception&#39; Breakpoint?"}, {"owner": {"reputation": 14571, "user_id": 1542343, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/0c67fc696612cc6c62a17d8bb2fdd17f?s=128&d=identicon&r=PG", "display_name": "gvlasov", "link": "https://stackoverflow.com/users/1542343/gvlasov"}, "reply_to_user": {"reputation": 386, "user_id": 3836081, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000265489427/picture?type=large", "display_name": "Natalia Selezneva", "link": "https://stackoverflow.com/users/3836081/natalia-selezneva"}, "edited": false, "score": 0, "creation_date": 1447677779, "post_id": 33718455, "comment_id": 55239756, "body": "@NataliaUkhorskaya Nope, I tried fiddling with it, but to no success. This behavior happens with this exact setup that is displayed on the screenshot."}, {"owner": {"reputation": 14571, "user_id": 1542343, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/0c67fc696612cc6c62a17d8bb2fdd17f?s=128&d=identicon&r=PG", "display_name": "gvlasov", "link": "https://stackoverflow.com/users/1542343/gvlasov"}, "reply_to_user": {"reputation": 386, "user_id": 3836081, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000265489427/picture?type=large", "display_name": "Natalia Selezneva", "link": "https://stackoverflow.com/users/3836081/natalia-selezneva"}, "edited": false, "score": 0, "creation_date": 1447677822, "post_id": 33718455, "comment_id": 55239768, "body": "@NataliaUkhorskaya Is this a bug, should I report it?"}, {"owner": {"reputation": 386, "user_id": 3836081, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000265489427/picture?type=large", "display_name": "Natalia Selezneva", "link": "https://stackoverflow.com/users/3836081/natalia-selezneva"}, "edited": false, "score": 0, "creation_date": 1447687950, "post_id": 33718455, "comment_id": 55246259, "body": "I&#39;ve missed that you unchecked &#39;Uncaught exception&#39; checkbox. No, it&#39;s not a bug. If you run tests all exceptions become &#39;caught exceptions&#39; because of JUnit infrastructure. The same way breakpoints in Java Code will work."}], "answers": [{"tags": [], "owner": {"reputation": 14571, "user_id": 1542343, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/0c67fc696612cc6c62a17d8bb2fdd17f?s=128&d=identicon&r=PG", "display_name": "gvlasov", "link": "https://stackoverflow.com/users/1542343/gvlasov"}, "is_accepted": true, "score": 1, "last_activity_date": 1447583212, "creation_date": 1447583212, "answer_id": 33718672, "question_id": 33718455, "link": "https://stackoverflow.com/questions/33718455/cant-stop-at-exception-in-intellij-idea-while-writing-kotlin-code/33718672#33718672", "title": "Can&#39;t stop at exception in IntelliJ IDEA while writing Kotlin code", "body": "<p>Looks like the only way to stop at exception in a JUnit test is to create an exception breakpoint rule for that exception, because JUnit catches any excepiton that occurred in a test. Here is what I did:</p>\n\n<p><a href=\"https://i.stack.imgur.com/uTQHB.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/uTQHB.png\" alt=\"New configuration\"></a></p>\n"}], "owner": {"reputation": 14571, "user_id": 1542343, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/0c67fc696612cc6c62a17d8bb2fdd17f?s=128&d=identicon&r=PG", "display_name": "gvlasov", "link": "https://stackoverflow.com/users/1542343/gvlasov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 563, "favorite_count": 0, "accepted_answer_id": 33718672, "answer_count": 1, "score": 1, "last_activity_date": 1447673347, "creation_date": 1447581680, "question_id": 33718455, "link": "https://stackoverflow.com/questions/33718455/cant-stop-at-exception-in-intellij-idea-while-writing-kotlin-code", "title": "Can&#39;t stop at exception in IntelliJ IDEA while writing Kotlin code", "body": "<p>My code is trowing <code>ArrayIndexOutOfBoundsException</code> in a JUnit 4.12 test, I want to stop at that exception when it is thrown, but I can't for some reason.</p>\n\n<p>Here are my debugger settings:</p>\n\n<p><a href=\"https://i.stack.imgur.com/oGkpL.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/oGkpL.png\" alt=\"Debugger settings\"></a></p>\n\n<p>When I run my code with <em>Debug</em>, the exception is just logged to the console, and the debugger won't stop at the line where it has occurred.</p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["java", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "edited": false, "score": 0, "creation_date": 1447579737, "post_id": 33718079, "comment_id": 55206683, "body": "<code>Sparkot</code> is a Kotlin object, a singleton class."}, {"owner": {"reputation": 436, "user_id": 1205366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bff8054ba86d100a2fbc4b962b452792?s=128&d=identicon&r=PG", "display_name": "Roman Belov", "link": "https://stackoverflow.com/users/1205366/roman-belov"}, "reply_to_user": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "edited": false, "score": 2, "creation_date": 1447580062, "post_id": 33718079, "comment_id": 55206751, "body": "Well, Kotlin supports importing only individual members of objects by name, not a *-import. The IDE helps with it."}, {"owner": {"reputation": 762, "user_id": 1144395, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/46901b51e062c401919d02fc5c5aca4c?s=128&d=identicon&r=PG", "display_name": "naki", "link": "https://stackoverflow.com/users/1144395/naki"}, "edited": false, "score": 3, "creation_date": 1458628367, "post_id": 33718079, "comment_id": 59932758, "body": "It&#39;s helpful to at least hear the thinking behind this decision, but this limitation is the reason I&#39;ve now decided to unconvert a Kotlin conversion back to Java. Kotlin is presented as a language that would help in creating a language plugin for IntelliJ \u2014 and it does \u2014 but this is one place where it certainly doesn&#39;t. Just about anyone who uses an IElementType-holder class WILL want to import all of its symbols in places that heavily use it and for which there are no conflicts (if they value living without carpal tunnel pain, that is). ..."}, {"owner": {"reputation": 762, "user_id": 1144395, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/46901b51e062c401919d02fc5c5aca4c?s=128&d=identicon&r=PG", "display_name": "naki", "link": "https://stackoverflow.com/users/1144395/naki"}, "edited": false, "score": 2, "creation_date": 1458628771, "post_id": 33718079, "comment_id": 59932921, "body": "Instead of helping this particular scenario, IIRC I think I might have even seen a JetBrains-developed plugin flat-out descend from/sub-class their IElementType-holder class just to get around that. Such a workaround is certainly not efficient, and definitely a worse situation than the one that this rationale was trying to avoid. I&#39;m not saying I don&#39;t get the thinking behind the limitation... just discussing how it may hurt more than help."}, {"owner": {"reputation": 762, "user_id": 1144395, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/46901b51e062c401919d02fc5c5aca4c?s=128&d=identicon&r=PG", "display_name": "naki", "link": "https://stackoverflow.com/users/1144395/naki"}, "edited": false, "score": 1, "creation_date": 1458629222, "post_id": 33718079, "comment_id": 59933128, "body": "&quot;descend from/sub-class their IElementType-holder class whenever they needed to use it&quot;*"}], "tags": [], "owner": {"reputation": 436, "user_id": 1205366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bff8054ba86d100a2fbc4b962b452792?s=128&d=identicon&r=PG", "display_name": "Roman Belov", "link": "https://stackoverflow.com/users/1205366/roman-belov"}, "is_accepted": true, "score": 14, "last_activity_date": 1505851971, "last_edit_date": 1505851971, "creation_date": 1447578959, "answer_id": 33718079, "question_id": 33717490, "link": "https://stackoverflow.com/questions/33717490/kotlin-cannot-import-on-demand-from-object/33718079#33718079", "title": "Kotlin: Cannot import-on-demand from object", "body": "<p>Sparkot is your Kotlin class, if I understand it's right.\nObjects may inherit things from supertypes, e.g. <code>equals()</code>, <code>hashCode()</code> will be imported every time you<sup>*</sup> import from an object, and the decision was made that this would be too confusing.</p>\n\n<p><sup>*</sup> - imports work only with Java object.</p>\n"}, {"comments": [{"owner": {"reputation": 110, "user_id": 12232152, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06047a38a129790eda78d5acbc5647d5?s=128&d=identicon&r=PG&f=1", "display_name": "El Sushiboi", "link": "https://stackoverflow.com/users/12232152/el-sushiboi"}, "edited": false, "score": 1, "creation_date": 1596041831, "post_id": 53182056, "comment_id": 111685275, "body": "This imo is the more useful answer"}, {"owner": {"reputation": 1561, "user_id": 1772342, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/pvNgt.jpg?s=128&g=1", "display_name": "breandan", "link": "https://stackoverflow.com/users/1772342/breandan"}, "reply_to_user": {"reputation": 110, "user_id": 12232152, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06047a38a129790eda78d5acbc5647d5?s=128&d=identicon&r=PG&f=1", "display_name": "El Sushiboi", "link": "https://stackoverflow.com/users/12232152/el-sushiboi"}, "edited": false, "score": 0, "creation_date": 1596041885, "post_id": 53182056, "comment_id": 111685308, "body": "@ElSushiboi Glad you found it helpful!"}], "tags": [], "owner": {"reputation": 1561, "user_id": 1772342, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/pvNgt.jpg?s=128&g=1", "display_name": "breandan", "link": "https://stackoverflow.com/users/1772342/breandan"}, "is_accepted": false, "score": 4, "last_activity_date": 1606173658, "last_edit_date": 1606173658, "creation_date": 1541550472, "answer_id": 53182056, "question_id": 33717490, "link": "https://stackoverflow.com/questions/33717490/kotlin-cannot-import-on-demand-from-object/53182056#53182056", "title": "Kotlin: Cannot import-on-demand from object", "body": "<p>Although you cannot <code>import package.KotlinObject.*</code> from a Kotlin object directly, you <em>can</em> <code>import package.*</code>. To avoid unnecessary or ambiguous imports, simply create a new package, declare the classes, variables or extensions you wish to import inside a raw <code>.kt</code> file and then import-on-demand from the parent package.</p>\n"}], "owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4520, "favorite_count": 1, "accepted_answer_id": 33718079, "answer_count": 2, "score": 22, "last_activity_date": 1606173658, "creation_date": 1447573303, "question_id": 33717490, "link": "https://stackoverflow.com/questions/33717490/kotlin-cannot-import-on-demand-from-object", "title": "Kotlin: Cannot import-on-demand from object", "body": "<p>I am trying to make a library where you can call functions of an <code>object</code> through \"static imports\" (import-on-demand in Kotlin). Unfortunately Kotlin seems to have a limitation as seen below.</p>\n\n<p><a href=\"https://i.stack.imgur.com/0bXBb.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/0bXBb.png\" alt=\"enter image description here\"></a></p>\n\n<p>Why is this a limitation? Is there anything I can do to get around it? (I've tried using a class with a companion object and in that case the functions don't even resolve.)</p>\n"}, {"tags": ["java", "generics", "kotlin"], "comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1456836885, "post_id": 33715270, "comment_id": 59121469, "body": "See also: <a href=\"http://stackoverflow.com/a/35722167/3679676\">stackoverflow.com/a/35722167/3679676</a>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1456836970, "post_id": 33715270, "comment_id": 59121529, "body": "In Kotlin 1.0 you should be able to just set the type as <code>List&lt;Int&gt;</code> and it will be fine.  But your <code>toList()</code> call will need to be <code>toList&lt;Int&gt;</code> due to a bug mentioned in the link in the comment above."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1456957010, "post_id": 33715270, "comment_id": 59191852, "body": "your comment at the top ... you can change accepted answer.  The idea of StackOverflow is to help new people reading the posts, not historical accuracy.  Things should always be updated to current.  Thanks for the note at the top, it&#39;ll help users in the meantime!"}, {"owner": {"reputation": 1571, "user_id": 4187837, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/797990d500303b57e9f9042f73ded007?s=128&d=identicon&r=PG&f=1", "display_name": "Gavin", "link": "https://stackoverflow.com/users/4187837/gavin"}, "edited": false, "score": 0, "creation_date": 1457131574, "post_id": 33715270, "comment_id": 59284263, "body": "Begs the question; do all questions and answers get audited for correctness against the current version of the language/software/framework or library they were written about?  Very Interesting."}], "answers": [{"comments": [{"owner": {"reputation": 2115, "user_id": 1333713, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/rbVeL.jpg?s=128&g=1", "display_name": "David Groomes", "link": "https://stackoverflow.com/users/1333713/david-groomes"}, "edited": false, "score": 0, "creation_date": 1447552155, "post_id": 33715338, "comment_id": 55201901, "body": "So, in other (more provocative) words, &quot;Kotlin prohibits Java Collection types&quot;? I&#39;m very curious in learning more specifics."}, {"owner": {"reputation": 1571, "user_id": 4187837, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/797990d500303b57e9f9042f73ded007?s=128&d=identicon&r=PG&f=1", "display_name": "Gavin", "link": "https://stackoverflow.com/users/4187837/gavin"}, "reply_to_user": {"reputation": 2115, "user_id": 1333713, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/rbVeL.jpg?s=128&g=1", "display_name": "David Groomes", "link": "https://stackoverflow.com/users/1333713/david-groomes"}, "edited": false, "score": 0, "creation_date": 1447552551, "post_id": 33715338, "comment_id": 55201977, "body": "Potentially so.  I would have to read the docs to find out.  (I haven&#39;t tried Kotlin/Java inter-op yet)"}, {"owner": {"reputation": 2115, "user_id": 1333713, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/rbVeL.jpg?s=128&g=1", "display_name": "David Groomes", "link": "https://stackoverflow.com/users/1333713/david-groomes"}, "edited": false, "score": 2, "creation_date": 1447552864, "post_id": 33715338, "comment_id": 55202025, "body": "Silly me, it says right in the &quot;Java Interop&quot; section of the docs that some types are automatically mapped between Java and Kotlin. See <a href=\"https://kotlinlang.org/docs/reference/java-interop.html#mapped-types\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/java-interop.html#mapped-types</a>"}], "tags": [], "owner": {"reputation": 1571, "user_id": 4187837, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/797990d500303b57e9f9042f73ded007?s=128&d=identicon&r=PG&f=1", "display_name": "Gavin", "link": "https://stackoverflow.com/users/4187837/gavin"}, "is_accepted": false, "score": 3, "last_activity_date": 1447550258, "creation_date": 1447550258, "answer_id": 33715338, "question_id": 33715270, "link": "https://stackoverflow.com/questions/33715270/unexpected-type-difference-between-equivalent-java-and-kotlin-stream-code/33715338#33715338", "title": "Unexpected type difference between equivalent Java and Kotlin Stream code", "body": "<p>I think it is because <code>List</code> in Java are mutable be default, where as in Kotlin they are immutable. \nIn the code you are using a Java specific utility, <code>Collectors.toList</code> which returns a Java <code>List</code>, which to Kotlin translates as a <code>MutableList</code>, so in effect you are writing the same code, just the type names are different.</p>\n"}, {"tags": [], "owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "is_accepted": true, "score": 1, "last_activity_date": 1456838339, "last_edit_date": 1495541613, "creation_date": 1456837139, "answer_id": 35723615, "question_id": 33715270, "link": "https://stackoverflow.com/questions/33715270/unexpected-type-difference-between-equivalent-java-and-kotlin-stream-code/35723615#35723615", "title": "Unexpected type difference between equivalent Java and Kotlin Stream code", "body": "<p>You can do this in Kotlin 1.0:</p>\n\n\n\n<pre><code>val integerStream : Stream&lt;Int&gt; = Stream.of(1, 2, 3)\nval list : List&lt;Int&gt; = integerStream.collect(Collectors.toList&lt;Int&gt;())\n</code></pre>\n\n<p>or</p>\n\n<pre><code>val integerStream : Stream&lt;Int&gt; = Stream.of(1, 2, 3)\nval list : MutableList&lt;Int&gt; = integerStream.collect(Collectors.toList&lt;Int&gt;())\n</code></pre>\n\n<p>or not care, and let inference decide:</p>\n\n<pre><code>val integerStream = Stream.of(1, 2, 3)\nval list = integerStream.collect(Collectors.toList&lt;Int&gt;())\n</code></pre>\n\n<p><strong>NOTE:</strong> I changed your <code>toList()</code> call into <code>toList&lt;Int&gt;()</code> to work around the issue mentioned in <a href=\"https://stackoverflow.com/a/35722167/3679676\">https://stackoverflow.com/a/35722167/3679676</a></p>\n\n<p>You can also create an extension function:</p>\n\n<pre><code>fun &lt;T: Any&gt; Stream&lt;T&gt;.toList(): List&lt;T&gt; = this.collect(Collectors.toList&lt;T&gt;())\n</code></pre>\n\n<p>And then use it for any <code>Stream&lt;T&gt;</code> to <code>List&lt;T&gt;</code> conversion:</p>\n\n<pre><code>val integerStream = Stream.of(1, 2, 3)\nval list = integerStream.toList()\n\nval stringStream = Stream.of(\"a\", \"b\", \"c\")\nval stringList = stringStream.toList()\n</code></pre>\n\n<p>And this last example is already returning the read only interface of <code>List</code> instead of <code>MutableList</code>.  For the difference between these and other mapped interfaces in Kotlin, see the docs for <a href=\"https://kotlinlang.org/docs/reference/java-interop.html#mapped-types\" rel=\"nofollow noreferrer\">Java Interop, mapped types</a>.</p>\n\n<p>Lastly, one other variant is to convert to a <code>Sequence</code> and stay lazy, since it is the Kotlin equivalent of a <code>Stream</code>.  </p>\n\n<pre><code>fun &lt;T: Any&gt; Stream&lt;T&gt;.asSequence(): Sequence&lt;T&gt; = this.iterator().asSequence()\n</code></pre>\n\n<p>Or <code>Stream.iterator()</code> is similar, but not the same.</p>\n"}], "owner": {"reputation": 2115, "user_id": 1333713, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/rbVeL.jpg?s=128&g=1", "display_name": "David Groomes", "link": "https://stackoverflow.com/users/1333713/david-groomes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 752, "favorite_count": 0, "accepted_answer_id": 35723615, "answer_count": 2, "score": 2, "last_activity_date": 1456861961, "creation_date": 1447549533, "last_edit_date": 1456861961, "question_id": 33715270, "link": "https://stackoverflow.com/questions/33715270/unexpected-type-difference-between-equivalent-java-and-kotlin-stream-code", "title": "Unexpected type difference between equivalent Java and Kotlin Stream code", "body": "<p>EDIT March 1 2016: Fair warning: this question was asked about Kotlin before 1.0.0. Things are different since Kotlin 1.0.0. See @Jayson Minard's writing below for a Kotlin 1.0.0 answer.</p>\n\n<p>In Java 8 code that uses Stream, I write things like </p>\n\n<pre><code>public static void main(String... args) {\n    Stream&lt;Integer&gt; integerStream = Stream.of(1,2,3);\n    List&lt;Integer&gt; integerList = integerStream.collect(Collectors.toList());\n}\n</code></pre>\n\n<p>But in similar code written in Kotlin, I get unexpected results.</p>\n\n<pre><code>public fun main(args: Array&lt;String&gt;) {\n    val integerStream : Stream&lt;Int&gt; = Stream.of(1, 2, 3)\n\n    // this is what I expect to write, like the Java 8 code, but is a compilation error: \n    // \"required: java.util.List&lt;in kotlin.Int&gt; found: kotlin.MutableList&lt;in kotlin.Int!\"\n    // val list : java.util.List&lt;in Int&gt; = integerStream.collect(Collectors.toList()) \n\n    // I must instead write this\n    val list : MutableList&lt;in Int&gt; = integerStream.collect(Collectors.toList())\n}\n</code></pre>\n\n<p>Why would the return value of the <code>Stream#collect</code> expression be of a different list type in the Kotlin code than in the Java code? (I'm guessing it is because of some Java Collections-specific magic in Kotlin)</p>\n"}, {"tags": ["kotlin"], "answers": [{"comments": [{"owner": {"reputation": 1571, "user_id": 4187837, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/797990d500303b57e9f9042f73ded007?s=128&d=identicon&r=PG&f=1", "display_name": "Gavin", "link": "https://stackoverflow.com/users/4187837/gavin"}, "edited": false, "score": 0, "creation_date": 1447540116, "post_id": 33713577, "comment_id": 55199187, "body": "While this works, and I am happy to tick the tick, but then I get a deprecation warning: &#39;get(Any?): V? is deprecated. Use &#39;getRaw&#39; instead.  Is there a way around that?"}, {"owner": {"reputation": 1253, "user_id": 2248578, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba5684497366deaa0b727ca8a662bf59?s=128&d=identicon&r=PG", "display_name": "Mike Hearn", "link": "https://stackoverflow.com/users/2248578/mike-hearn"}, "edited": false, "score": 0, "creation_date": 1447594510, "post_id": 33713577, "comment_id": 55210466, "body": "Yes, always. It&#39;s not happy because there&#39;s a type mismatch, albeit a subtle one that Java would allow. Kotlin allows it temporarily but soon won&#39;t. Sometimes it helps to use the &quot;Specify type explicitly&quot; intention and the show type of expression feature to see what the issue is. Here, it can be fixed by changing &quot;val grouped&quot; to be:  <code>val grouped: Map&lt;KClass&lt;*&gt;, List&lt;Any&gt;&gt; = list.groupBy { it.javaClass.kotlin }</code>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 1571, "user_id": 4187837, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/797990d500303b57e9f9042f73ded007?s=128&d=identicon&r=PG&f=1", "display_name": "Gavin", "link": "https://stackoverflow.com/users/4187837/gavin"}, "edited": false, "score": 0, "creation_date": 1452214350, "post_id": 33713577, "comment_id": 57081396, "body": "@Gavin I think that deprecated warning has gone away, it was temporary to make people aware of type safety between <code>get</code> and <code>getRaw</code> before a change as made to make <code>get</code> typed."}, {"owner": {"reputation": 1571, "user_id": 4187837, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/797990d500303b57e9f9042f73ded007?s=128&d=identicon&r=PG&f=1", "display_name": "Gavin", "link": "https://stackoverflow.com/users/4187837/gavin"}, "edited": false, "score": 0, "creation_date": 1455996080, "post_id": 33713577, "comment_id": 58745117, "body": "Indeed the deprivation warning has gone away, and in fact <code>getRaw</code> is no longer recognised, though IntelliJ is replacing <code>data.get(Type::class)</code> with <code>data[Type::class]</code>"}], "tags": [], "owner": {"reputation": 577, "user_id": 410579, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0eb1e2716f8a9b4aff5bd3458962ae2a?s=128&d=identicon&r=PG", "display_name": "kocka", "link": "https://stackoverflow.com/users/410579/kocka"}, "is_accepted": true, "score": 10, "last_activity_date": 1447536465, "creation_date": 1447536465, "answer_id": 33713577, "question_id": 33712166, "link": "https://stackoverflow.com/questions/33712166/in-kotlin-how-do-i-groupby-type/33713577#33713577", "title": "In Kotlin how do I groupBy type", "body": "<p>You can refer to kotlin class instances as Foo::class</p>\n\n<pre><code>data class Person(\n    val firstName : String,\n    val lastName : String\n)\n\ndata class City(\n    val name : String,\n    val population: Int\n)\n\n\nfun main(args: Array&lt;String&gt;) {\n\n    val list = listOf(\n        Person(\"John\", \"Doe\"),\n        Person(\"Eugene\", \"Cuckoo\"),\n        City(\"London\", 8500000),\n        City(\"Berlin\", 3500000),\n        City(\"H\u00f6ty\u00f6km\u00e1r\u00f3\", 2)\n    )\n\n    val grouped = list.groupBy { it.javaClass.kotlin }\n\n    println(\"Persons: ${grouped[Person::class]}\")\n    println(\"Cities: ${grouped[City::class]}\")\n\n}\n</code></pre>\n"}], "owner": {"reputation": 1571, "user_id": 4187837, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/797990d500303b57e9f9042f73ded007?s=128&d=identicon&r=PG&f=1", "display_name": "Gavin", "link": "https://stackoverflow.com/users/4187837/gavin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6853, "favorite_count": 0, "accepted_answer_id": 33713577, "answer_count": 1, "score": 2, "last_activity_date": 1447536465, "creation_date": 1447527670, "question_id": 33712166, "link": "https://stackoverflow.com/questions/33712166/in-kotlin-how-do-i-groupby-type", "title": "In Kotlin how do I groupBy type", "body": "<p>I would like to group a list by the subtypes of its generic type argument.</p>\n\n<p>That is a have a list with three types of objects all are a subtype of some type A.</p>\n\n<p>The closest I can get is <code>it.javaClass.typeName</code> or <code>it.javaClass.kotlin</code></p>\n\n<p>The former creates keys of Strings which isn't ideal, but I can deal with.  The later creates keys of <code>KClassImpl</code> which I can't actually import let alone create an instance of.</p>\n\n<p>How do you groupBy type, then access the different keys in the resulting map?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 454, "user_id": 3410835, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NRX1V.jpg?s=128&g=1", "display_name": "K Pradeep Kumar Reddy", "link": "https://stackoverflow.com/users/3410835/k-pradeep-kumar-reddy"}, "edited": false, "score": 0, "creation_date": 1595597007, "post_id": 33711884, "comment_id": 111538094, "body": "Did you find a good explanation for your question anywhere ?  All that i understood is properties in kotlin should  be either initialized or declared as lateinit, with some constraints like lateinit is not allowed for primitive types and also not allowed for nullable types."}], "answers": [{"comments": [{"owner": {"reputation": 25774, "user_id": 885028, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/xJkDj.jpg?s=128&g=1", "display_name": "aga", "link": "https://stackoverflow.com/users/885028/aga"}, "edited": false, "score": 3, "creation_date": 1447765945, "post_id": 33718539, "comment_id": 55283180, "body": "&quot;But in Kotlin most of the values are not-nullable, so you can&#39;t initialise them with null&quot; - I asked specifically about the property declared like so: <code>var allBeDefaut: Int?</code>. Clearly, this is the nullable variable and it could be initialized with <code>null</code> by default, as opposed to, say, <code>var someVar: Int</code>."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "reply_to_user": {"reputation": 25774, "user_id": 885028, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/xJkDj.jpg?s=128&g=1", "display_name": "aga", "link": "https://stackoverflow.com/users/885028/aga"}, "edited": false, "score": 0, "creation_date": 1447771826, "post_id": 33718539, "comment_id": 55287298, "body": "@aga But the consistency is very important. Besides default initialisation is somewhat indirect/invisible, a should be avoided anyway. Almost any use case for that has a more elegant solution"}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "reply_to_user": {"reputation": 25774, "user_id": 885028, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/xJkDj.jpg?s=128&g=1", "display_name": "aga", "link": "https://stackoverflow.com/users/885028/aga"}, "edited": false, "score": 0, "creation_date": 1447771888, "post_id": 33718539, "comment_id": 55287352, "body": "And I never saw a good use for default initialisation, in any language that I&#39;ve worked with"}, {"owner": {"reputation": 177928, "user_id": 1103872, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/84b1acc3351c02f560dea7ac7f76ac8d?s=128&d=identicon&r=PG", "display_name": "Marko Topolnik", "link": "https://stackoverflow.com/users/1103872/marko-topolnik"}, "edited": false, "score": 0, "creation_date": 1532716636, "post_id": 33718539, "comment_id": 90094446, "body": "<code>That mechanism basically allows to init a field with null, but then frees you from null assertions.</code> --- this isn&#39;t an accurate description. <code>lateinit</code> allows you to leave the property <i>uninitialized</i>, deferring initialization until some point that precedes the first derefence. If you dereference it too early, you won&#39;t get an NPE but an exception specific to this case: <code>UninitializedPropertyAccessException</code>"}, {"owner": {"reputation": 454, "user_id": 3410835, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NRX1V.jpg?s=128&g=1", "display_name": "K Pradeep Kumar Reddy", "link": "https://stackoverflow.com/users/3410835/k-pradeep-kumar-reddy"}, "edited": false, "score": 0, "creation_date": 1595596120, "post_id": 33718539, "comment_id": 111537607, "body": "I did not understand your explanation. How this code is ok  ?  val x: Int.  I tried this code, without initialization, this will give compiler error saying &quot;property must be initialized or be abstract&quot;. And one more thing,  x is declared as val, we can not reassign  value to it."}], "tags": [], "owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "is_accepted": true, "score": 14, "last_activity_date": 1447582817, "last_edit_date": 1447582817, "creation_date": 1447582417, "answer_id": 33718539, "question_id": 33711884, "link": "https://stackoverflow.com/questions/33711884/why-kotlin-compiler-requires-the-explicit-initializer-of-var-property/33718539#33718539", "title": "Why Kotlin compiler requires the explicit initializer of var property?", "body": "<p>That's simple: in Java default values are <code>0</code> (zero) and <code>null</code>. But in Kotlin most of the values are not-nullable, so you can't initialise them with <code>null</code>. For primitive values there could be a default strategy of initialising with zeros, but it was not done in order to be consistent. But in primitive arrays the default value is zero indeed.</p>\n\n<p>If you really need that initialisation semantic, take a look at <code>lateinit</code> properties: <a href=\"https://kotlinlang.org/docs/reference/properties.html#late-initialized-properties\" rel=\"noreferrer\">https://kotlinlang.org/docs/reference/properties.html#late-initialized-properties</a>.</p>\n\n<p>That mechanism basically allows to init a field with <code>null</code>, but then frees you from null assertions.</p>\n\n<p><strong>ADDITION</strong></p>\n\n<p>Actually Kotlin is <strong>very</strong> clever about initialization. For example that works:</p>\n\n<pre><code>val x: Int\n\nif(something)\n    x = 1\nelse\n    x = 2\n\nprintln(x)\n</code></pre>\n\n<p>Here kotlinc may proove that <code>x</code> is being initialized <em>before</em> it is being used, so the code is OK</p>\n"}, {"tags": [], "owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "is_accepted": false, "score": 3, "last_activity_date": 1451183695, "last_edit_date": 1451183695, "creation_date": 1451183191, "answer_id": 34477086, "question_id": 33711884, "link": "https://stackoverflow.com/questions/33711884/why-kotlin-compiler-requires-the-explicit-initializer-of-var-property/34477086#34477086", "title": "Why Kotlin compiler requires the explicit initializer of var property?", "body": "<p>Kotlin does not do anything implicitly.  It does not convert numeric types without your specific instruction, nor does it set a default or initializing value without it being explicit.  It is a design choice to eliminate common errors that were found in typical Java programs.  It isn't clear to the compiler if you forgot to initialize it or if you meant for a default value to be used.  Since it isn't clear, it is bad.  And therefore likely results in bugs.  </p>\n\n<p>The design choices of Kotlin help eliminate bugs due to code in which the compiler cannot help determine if there is an error.  It is philosophical and consistent in the language.</p>\n\n<p>Kotlin requires initialization before use.  For members that means by the time constructors and initializers are completed, it must have a value.  <code>lateinit</code> modifier on <code>var</code> allows this to be ignored at compile time although at runtime the check is done when you access the variable.  For local variables, any branch of code must initialize the value before access.  For example:</p>\n\n<pre><code>fun stateFromAbbreviation(abbreviation: String?): String {\n    val state: String\n\n    if (abbreviation == null) {\n        state = DEFAULT_STATE\n    }\n    else {\n        state = stateMap.get(abbreviation) ?: throw IllegalStateException(\"Invalid state abbreviation $abbreviation\")\n    }\n\n    return state\n}\n</code></pre>\n\n<p>Here the local variable can be initialized in the <code>if</code> statement assuming all branches initialize the value.  But really, this code would be more idiomatic using the <code>if</code> as an expression, such as:</p>\n\n<pre><code>fun stateFromAbbreviation(abbreviation: String?): String {\n    return if (abbreviation == null) {\n        DEFAULT_STATE\n    }\n    else {\n        stateMap.get(abbreviation) ?: throw IllegalStateException(\"Invalid state abbreviation $abbreviation\")\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 25774, "user_id": 885028, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/xJkDj.jpg?s=128&g=1", "display_name": "aga", "link": "https://stackoverflow.com/users/885028/aga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6441, "favorite_count": 3, "accepted_answer_id": 33718539, "answer_count": 2, "score": 18, "last_activity_date": 1451183695, "creation_date": 1447526132, "question_id": 33711884, "link": "https://stackoverflow.com/questions/33711884/why-kotlin-compiler-requires-the-explicit-initializer-of-var-property", "title": "Why Kotlin compiler requires the explicit initializer of var property?", "body": "<p>I can't understand the following piece of Kotlin documentation:  </p>\n\n<pre><code>The initializer, getter and setter are optional. Property type is optional\nif it can be inferred from the initializer or from the base class member being overridden.\n\nExamples:\nvar allByDefault: Int? // error: explicit initializer required, default \ngetter and setter implied\n</code></pre>\n\n<p>The only explanation of why the compiler requires explicit initializer here (at least the only explanation I can come up with) is that Kotlin does not have default values of properties. Is it right? If so, why? In other words: what is the difference between Kotlin properties and Java fields (which have default values) which doesn't allow us to have default values of properties?</p>\n"}, {"tags": ["kotlin"], "answers": [{"tags": [], "owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "is_accepted": true, "score": 7, "last_activity_date": 1447520342, "creation_date": 1447520342, "answer_id": 33710935, "question_id": 33709975, "link": "https://stackoverflow.com/questions/33709975/kotlin-object-which-way-of-initialization-is-right/33710935#33710935", "title": "Kotlin object. Which way of initialization is right?", "body": "<p>Generally there's no difference at all between property initialization in the assignment or in the <code>init</code> block. You can inspect the generated bytecode with the <code>javap</code> tool to find out that it's exactly the same in both cases, modulo line numbers.</p>\n\n<p>In your example however, there's a difference even from the source code perspective: in the first sample <code>time</code>'s type is declared to be <code>MutableList&lt;Long&gt;</code>, but in the second sample its type is not specified explicitly, so it has the type of the expression assigned to it. <code>arrayListOf&lt;T&gt;</code> returns <code>ArrayList&lt;T&gt;</code>, so <code>time</code>'s type in the second case is <code>ArrayList&lt;Long&gt;</code>. If you specify <code>MutableList&lt;Long&gt;</code> as <code>time</code>'s type in the second example, then indeed the produced outputs will be the same.</p>\n"}], "owner": {"reputation": 426, "user_id": 4775534, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4be4e306232bf0588b910bf84377a7b0?s=128&d=identicon&r=PG&f=1", "display_name": "Dmitry Zlykh", "link": "https://stackoverflow.com/users/4775534/dmitry-zlykh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5186, "favorite_count": 0, "accepted_answer_id": 33710935, "answer_count": 1, "score": 1, "last_activity_date": 1447520342, "creation_date": 1447514874, "question_id": 33709975, "link": "https://stackoverflow.com/questions/33709975/kotlin-object-which-way-of-initialization-is-right", "title": "Kotlin object. Which way of initialization is right?", "body": "<p>is there any difference between initialization of an object? \nWill the time field have different behavior or is it just the same as in Java (split declaration and initialization)? Thanks</p>\n\n<pre><code>object  DataHolder {\nval time : MutableList&lt;Long&gt;\n\ninit {\n    time = arrayListOf()\n} ...\n</code></pre>\n\n<p>and this</p>\n\n<pre><code>object  DataHolder {\nval time = arrayListOf&lt;Long&gt;() ....\n</code></pre>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 2, "creation_date": 1447423506, "post_id": 33690283, "comment_id": 55160330, "body": "It seems Kotlin annotations are final and can be neither instantiated nor subclassed."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 2, "creation_date": 1447493908, "post_id": 33690283, "comment_id": 55185963, "body": "kotlin can&#39;t change the overridability of anything from java"}], "answers": [{"tags": [], "owner": {"reputation": 81, "user_id": 4278810, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-MZzQClFUgTY/AAAAAAAAAAI/AAAAAAAAHIg/1eGuNt0QnbM/photo.jpg?sz=128", "display_name": "Claudiu Dumitrescu", "link": "https://stackoverflow.com/users/4278810/claudiu-dumitrescu"}, "is_accepted": false, "score": 2, "last_activity_date": 1451194542, "last_edit_date": 1451194542, "creation_date": 1447511228, "answer_id": 33709439, "question_id": 33690283, "link": "https://stackoverflow.com/questions/33690283/create-an-annotation-instance-in-kotlin/33709439#33709439", "title": "Create an annotation instance in Kotlin", "body": "<p>This is the solution I might have found but feels like a hack to me and I would prefer to be able to solve it within the language. \nAnyway, for what is worth,it goes like this:</p>\n\n<pre><code>class MyApp {\n    fun getInstanceOfAnnotation(foo: String): ThirdPartyAnnotation {\n        val annotationListener = object : InvocationHandler {\n            override fun invoke(proxy: Any?, method: Method?, args: Array&lt;out Any&gt;?): Any? {\n                return when (method?.name) {\n                    \"foo\" -&gt; foo\n                    else -&gt; FindBy::class.java\n                }\n            }\n        }\n        return Proxy.newProxyInstance(ThirdPartyAnnotation::class.java.classLoader, arrayOf(ThirdPartyAnnotation::class.java), annotationListener) as ThirdPartyAnnotation\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2833, "user_id": 1824898, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2590cf264facfb642d166ab19bcf9035?s=128&d=identicon&r=PG", "display_name": "\u041a\u043b\u0430\u0443\u0441 \u0428\u0432\u0430\u0440\u0446", "link": "https://stackoverflow.com/users/1824898/%d0%9a%d0%bb%d0%b0%d1%83%d1%81-%d0%a8%d0%b2%d0%b0%d1%80%d1%86"}, "is_accepted": false, "score": 3, "last_activity_date": 1530287089, "creation_date": 1530287089, "answer_id": 51105332, "question_id": 33690283, "link": "https://stackoverflow.com/questions/33690283/create-an-annotation-instance-in-kotlin/51105332#51105332", "title": "Create an annotation instance in Kotlin", "body": "<p>You can do this with Kotlin reflection:</p>\n\n<pre><code>val annotation = ThirdPartyAnnotation::class.constructors.first().call(\"fooValue\")\n</code></pre>\n\n<p>In the case of annotation having no-arg constructor (e.g. each annotation field has a default value), you can use following approach:</p>\n\n<pre><code>annotation class SomeAnnotation(\n        val someField: Boolean = false,\n)\nval annotation = SomeAnnotation::class.createInstance()\n</code></pre>\n"}], "owner": {"reputation": 81, "user_id": 4278810, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-MZzQClFUgTY/AAAAAAAAAAI/AAAAAAAAHIg/1eGuNt0QnbM/photo.jpg?sz=128", "display_name": "Claudiu Dumitrescu", "link": "https://stackoverflow.com/users/4278810/claudiu-dumitrescu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2769, "favorite_count": 0, "answer_count": 2, "score": 6, "last_activity_date": 1530287089, "creation_date": 1447409463, "question_id": 33690283, "link": "https://stackoverflow.com/questions/33690283/create-an-annotation-instance-in-kotlin", "title": "Create an annotation instance in Kotlin", "body": "<p>I have a framework written in Java that, using reflection, get the fields on an annotation and make some decisions based on them. At some point I am also able to create an ad-hoc instance of the annotation and set the fields myself. This part looks something like this:\n</p>\n\n<pre><code>public @interface ThirdPartyAnnotation{\n    String foo();\n}\n\nclass MyApp{\n    ThirdPartyAnnotation getInstanceOfAnnotation(final String foo)\n        {\n            ThirdPartyAnnotation annotation = new ThirdPartyAnnotation()\n            {\n                @Override\n                public String foo()\n                {\n                    return foo;\n                }\n\n            }; \n            return annotation;\n        }\n}\n</code></pre>\n\n<p>Now I am trying to do the exact thing in Kotlin. Bear in mind that the annotation is in a third party jar.\nAnyway, here is how I tried it in Kotlin:</p>\n\n<pre><code>class MyApp{\n               fun getAnnotationInstance(fooString:String):ThirdPartyAnnotation{\n                    return ThirdPartyAnnotation(){\n                        override fun foo=fooString\n                }\n    }\n</code></pre>\n\n<p>But the compiler complains about: Annotation class cannot be instantiated</p>\n\n<p>So the question is: how should I do this in Kotlin?</p>\n"}, {"tags": ["class", "constructor", "initialization", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 79983, "user_id": 147024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b35432f97606c0a31da17084d2414966?s=128&d=identicon&r=PG", "display_name": "yole", "link": "https://stackoverflow.com/users/147024/yole"}, "edited": false, "score": 20, "creation_date": 1447409824, "post_id": 33689543, "comment_id": 55152608, "body": "This is not entirely correct. <code>init</code> blocks contain code which is included in the primary constructor. In your example, they are executed because the secondary constructor delegates to the primary constructor using the <code>: this(0)</code> syntax. If a secondary constructor does not delegate to the primary constructor, <code>init</code> blocks will not be executed when the class is initialized using that constructor."}, {"owner": {"reputation": 450, "user_id": 1460067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/879d960d7f28102fa3ba46c9a1de440b?s=128&d=identicon&r=PG", "display_name": "Nigel Eke", "link": "https://stackoverflow.com/users/1460067/nigel-eke"}, "edited": false, "score": 1, "creation_date": 1447413189, "post_id": 33689543, "comment_id": 55154537, "body": "Hi Aga / Yole - thanks for your answers.  I probably should have stated I&#39;m a Kotlin n00b, but that&#39;s probably clear from my question.  I think both your responses come from familiarity with the language.  When I read this definition of Kotlin <a href=\"https://kotlinlang.org/docs/kotlin-docs.pdf\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/kotlin-docs.pdf</a> the only reference I find to init is:  &quot;The primary constructor cannot contain any code. Initialization code can be placed in initializer blocks, which are prefixed with the init keyword&quot;  Nothing is stated about the order of initialisation however. (That I can see)"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451192738, "post_id": 33689543, "comment_id": 56697097, "body": "@aga you can edit your answer based on the feedback so it is clear to new people reading this without having to scan the comments as well.  Editing is here in SO just for that reason, to always create clear answers based on ongoing feedback.  I&#39;ll upvote your answer when it is clearer.  You may want to exclude the secondary constructor from the example, then add an additional note about it.  They aren&#39;t overly common and it confuses the main point of your answer."}, {"owner": {"reputation": 27797, "user_id": 88111, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6a285784d6695c4d2a503c7003f4af0f?s=128&d=identicon&r=PG", "display_name": "Craig Otis", "link": "https://stackoverflow.com/users/88111/craig-otis"}, "reply_to_user": {"reputation": 79983, "user_id": 147024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b35432f97606c0a31da17084d2414966?s=128&d=identicon&r=PG", "display_name": "yole", "link": "https://stackoverflow.com/users/147024/yole"}, "edited": false, "score": 1, "creation_date": 1495253650, "post_id": 33689543, "comment_id": 75187056, "body": "@yole I realize your answer is a bit old, but I&#39;m hoping you can clarify something for me. You mention &quot;If a secondary constructor does not delegate to the primary constructor...&quot; - in what case can this happen? From the Kotlin docs: &quot;If the class has a primary constructor, each secondary constructor needs to delegate to the primary constructor, either directly or indirectly through another secondary constructor(s).&quot; Has this not always been the case?"}, {"owner": {"reputation": 79983, "user_id": 147024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b35432f97606c0a31da17084d2414966?s=128&d=identicon&r=PG", "display_name": "yole", "link": "https://stackoverflow.com/users/147024/yole"}, "edited": false, "score": 0, "creation_date": 1495284032, "post_id": 33689543, "comment_id": 75194182, "body": "The docs are correct. If a class does <i>not</i> have a primary constructor, it can have multiple secondary constructors, each of which can delegate to a different superclass constructor."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6685522"}, "reply_to_user": {"reputation": 79983, "user_id": 147024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b35432f97606c0a31da17084d2414966?s=128&d=identicon&r=PG", "display_name": "yole", "link": "https://stackoverflow.com/users/147024/yole"}, "edited": false, "score": 2, "creation_date": 1495652527, "post_id": 33689543, "comment_id": 75349350, "body": "@yole Your comment is confusing me. What is not entirely correct? You mean init block not execute before constructor all the time?"}, {"owner": {"reputation": 4205, "user_id": 2622118, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/425bb7d5bd7c5370ba53200dc40f11de?s=128&d=identicon&r=PG", "display_name": "mallaudin", "link": "https://stackoverflow.com/users/2622118/mallaudin"}, "edited": false, "score": 0, "creation_date": 1515826758, "post_id": 33689543, "comment_id": 83457740, "body": "I am not defining any primary constructor but still <code>init blocks</code> are being called.      <code>fun main(args: Array&lt;String&gt;) {         val event = Event()     }  class Event {     val name: String     constructor(name: String = &quot;undefined&quot;){         this.name = name         println(&quot;constructor called&quot;)     }     init {         println(&quot;block 1&quot;)     }      init {         println(&quot;block 2&quot;)     } }</code>  Output:  <code>block 1 block 2 constructor called</code>"}], "tags": [], "owner": {"reputation": 25774, "user_id": 885028, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/xJkDj.jpg?s=128&g=1", "display_name": "aga", "link": "https://stackoverflow.com/users/885028/aga"}, "is_accepted": false, "score": 16, "last_activity_date": 1447406971, "creation_date": 1447406971, "answer_id": 33689543, "question_id": 33688821, "link": "https://stackoverflow.com/questions/33688821/what-are-the-kotlin-class-initialisation-semantics/33689543#33689543", "title": "What are the Kotlin class initialisation semantics?", "body": "<blockquote>\n  <p>My expectation would be that properties are initialised before the constructor body is invoked.</p>\n</blockquote>\n\n<p>Well, <code>init</code> block is not a <a href=\"https://kotlinlang.org/docs/reference/classes.html\">constructor</a>. It is a different construct which allows you to perform the initialization of the object and they [init blocks] are performed in the declaration order with the property initializers.</p>\n\n<p>Constructors are a different beast ant they are performed after all the properties were initialized and all init blocks were performed. Look at the following example:  </p>\n\n<pre><code>class A(val value: Int) {\n    constructor(): this(0) {        \n        println(\"Constructor\")\n    }    \n\n    init {\n        println(\"Init block\")\n    }\n}\n\nfun main(args: Array&lt;String&gt;) {\n    val a = A()\n}\n</code></pre>\n\n<p>Output is:  </p>\n\n<pre><code>Init block  \nConstructor\n</code></pre>\n\n<p>You can place the <code>init</code> block wherever you want: before the <code>constructor</code> or after it; it will always be performed <em>before</em> the <code>A</code>'s constructor (secondary constructor, in this example).</p>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451192833, "post_id": 33696625, "comment_id": 56697105, "body": "Can you reword when sure about the ordering and can remove &quot;almost&quot; and &quot;might be&quot; so that it is a decisive answer.  Or defer to the answer from @aga"}], "tags": [], "owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "is_accepted": false, "score": 6, "last_activity_date": 1447429858, "creation_date": 1447429858, "answer_id": 33696625, "question_id": 33688821, "link": "https://stackoverflow.com/questions/33688821/what-are-the-kotlin-class-initialisation-semantics/33696625#33696625", "title": "What are the Kotlin class initialisation semantics?", "body": "<p>Simply put: when an instance of a class is created, (almost) firstly runs the constructor of the parent class (if present), then the primary constructor. </p>\n\n<p>The primary constructor executes code declared in the class body from the top to the bottom. Also the names became available by the same rule:</p>\n\n<pre><code>class Foo(a: String = \"might be first\"\n          val b: String = \"second\" + a) : Boo(a + b + \"third\"){\n    var c = a + \"fourth\" + b\n\n    init {print(\"fifth: $c\")}\n\n    val d = \"sixth\"\n    init {print(\"seventh: the end of the primary constructor\"}\n}\n</code></pre>\n\n<p>If you invoke a secondary constructor, then it works after the primary one as it is composed in the chain (similar to invoking the parent constructors).</p>\n"}], "owner": {"reputation": 450, "user_id": 1460067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/879d960d7f28102fa3ba46c9a1de440b?s=128&d=identicon&r=PG", "display_name": "Nigel Eke", "link": "https://stackoverflow.com/users/1460067/nigel-eke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9610, "favorite_count": 1, "answer_count": 2, "score": 16, "last_activity_date": 1447429858, "creation_date": 1447404498, "question_id": 33688821, "link": "https://stackoverflow.com/questions/33688821/what-are-the-kotlin-class-initialisation-semantics", "title": "What are the Kotlin class initialisation semantics?", "body": "<p>I haven't been able to find anything in the language definition that explains the initialisation of a class in Kotlin.</p>\n\n<pre><code>import java.util.Properties\n\nfun main(args: Array&lt;String&gt;) {\n    val out = MyClass()\n    out.fn()\n}\n\nclass MyClass {\n    private val a = Properties() // 1\n\n    init {\n        fn()\n    }\n\n    public fun fn() {\n        println(\"Fn called.  a = $a\")\n    }\n\n    //  private val a = Properties() // 2\n}\n</code></pre>\n\n<p>The results of running this program change depending whether the property is initialised at (1) or at (2).</p>\n\n<p>I'm surprised that the declaration order is relevant in the language and would like to understand the decisions behind this.  My expectation would be that properties are initialised before the constructor body is invoked.</p>\n"}, {"tags": ["kotlin"], "answers": [{"tags": [], "owner": {"reputation": 3746, "user_id": 756630, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/HyVyq.png?s=128&g=1", "display_name": "Jaja Harris", "link": "https://stackoverflow.com/users/756630/jaja-harris"}, "is_accepted": true, "score": 2, "last_activity_date": 1447429196, "last_edit_date": 1447429196, "creation_date": 1447368195, "answer_id": 33682829, "question_id": 33682588, "link": "https://stackoverflow.com/questions/33682588/how-to-create-re-usable-library/33682829#33682829", "title": "How to create re-usable library", "body": "<p>I had to go into module settings and under dependencies (for the reusable library) I added a library dependency on the kotlin-std-lib.  Everything resolves now and seems to be working.</p>\n"}], "owner": {"reputation": 3746, "user_id": 756630, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/HyVyq.png?s=128&g=1", "display_name": "Jaja Harris", "link": "https://stackoverflow.com/users/756630/jaja-harris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 435, "favorite_count": 0, "accepted_answer_id": 33682829, "answer_count": 1, "score": 4, "last_activity_date": 1505852116, "creation_date": 1447367050, "last_edit_date": 1505852116, "question_id": 33682588, "link": "https://stackoverflow.com/questions/33682588/how-to-create-re-usable-library", "title": "How to create re-usable library", "body": "<p>I want to create a Kotlin library that can be reused across my Android apps.  However I don't want it to be an Android library since I was hoping to hook it up to some testing and mocking frameworks.  </p>\n\n<p>In my Android app, I right-clicked on the top-level app node and did <code>New -&gt; Module</code> and then selected <code>Java Library</code>.  However in the new Java library it seems like Kotlin is only partially being supported. Syntax for the most part works but other things don't.  </p>\n\n<p>For instance, <code>forEach</code> on my <code>HashMap</code> is unresolved as well as attempting to index it such as <code>items[0]</code>.  Am I going about this the right way?  </p>\n"}, {"tags": ["kotlin", "dagger-2"], "answers": [{"tags": [], "owner": {"reputation": 66, "user_id": 5553689, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-LXhiLQmaMhU/AAAAAAAAAAI/AAAAAAAAAJA/fR_byBHsIoc/photo.jpg?sz=128", "display_name": "MatthewFong", "link": "https://stackoverflow.com/users/5553689/matthewfong"}, "is_accepted": true, "score": 5, "last_activity_date": 1447315906, "last_edit_date": 1447315906, "creation_date": 1447315560, "answer_id": 33666785, "question_id": 33663045, "link": "https://stackoverflow.com/questions/33663045/generated-classes-not-found/33666785#33666785", "title": "Generated classes not found", "body": "<p>In your app's build file, make sure you added</p>\n\n<pre><code>kapt {\n    generateStubs = true\n}\n</code></pre>\n\n<p>some example projects can be found here</p>\n\n<p><a href=\"https://github.com/damianpetla/kotlin-dagger-example/tree/master/app\">https://github.com/damianpetla/kotlin-dagger-example/tree/master/app</a>\n<a href=\"https://github.com/burntcookie90/KotlinDaggerDataBinding\">https://github.com/burntcookie90/KotlinDaggerDataBinding</a></p>\n"}], "owner": {"reputation": 53, "user_id": 5552891, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/--ZdgQGXQhh4/AAAAAAAAAAI/AAAAAAAADFs/MUpvK6GVBYk/photo.jpg?sz=128", "display_name": "Nathan", "link": "https://stackoverflow.com/users/5552891/nathan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1015, "favorite_count": 0, "accepted_answer_id": 33666785, "answer_count": 1, "score": 5, "last_activity_date": 1447652153, "creation_date": 1447292330, "last_edit_date": 1447652153, "question_id": 33663045, "link": "https://stackoverflow.com/questions/33663045/generated-classes-not-found", "title": "Generated classes not found", "body": "<p>Using Dagger2 and Kotlin, my component class implementations are not being generated when other calling code exists. When no calling code exists, the implementations are generated.</p>\n\n<p>E.g.</p>\n\n<pre><code>val comp = DaggerMyComponent.create()\n</code></pre>\n\n<p>Causes the build to fail, <code>DaggerMyComponent</code> is not generated and thus cannot be found</p>\n\n<pre><code>// val comp = DaggerMyComponent.create()\n</code></pre>\n\n<p>The <code>DaggerMyComponent</code> class is generate and can be viewed on disk, the build succeeds.</p>\n\n<p>I've tried Dagger 2.0.1, 2.0.2, 2.1-Snapshot, using Kotlin beta-1103.\nI can post my gradle file, source code, or stack trace if needed.</p>\n\n<p>Has anyone encountered this issue before?</p>\n"}]