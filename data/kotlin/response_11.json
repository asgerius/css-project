[{"tags": ["kotlin"], "comments": [{"owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 16, "creation_date": 1427405240, "post_id": 29268526, "comment_id": 46775564, "body": "You can not override Java methods with Kotlin properties at the moment. It would be nice if we could support it, but we don&#39;t know how to do it consistently for mixed hierarchies"}, {"owner": {"reputation": 6474, "user_id": 270143, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tB6Fg.jpg?s=128&g=1", "display_name": "ycomp", "link": "https://stackoverflow.com/users/270143/ycomp"}, "edited": false, "score": 1, "creation_date": 1456545120, "post_id": 29268526, "comment_id": 59010997, "body": "what about adding a more desccriptive error message? saying that you can&#39;t override java methods with properties...it would be less cofusing"}, {"owner": {"reputation": 992, "user_id": 3000729, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/36347f39d882a88aa268907728be29e3?s=128&d=identicon&r=PG", "display_name": "corlaez", "link": "https://stackoverflow.com/users/3000729/corlaez"}, "edited": false, "score": 1, "creation_date": 1465266649, "post_id": 29268526, "comment_id": 62817143, "body": "I guess the best is to rewrite the interface in Kotlin..."}, {"owner": {"reputation": 1561, "user_id": 1772342, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/pvNgt.jpg?s=128&g=1", "display_name": "breandan", "link": "https://stackoverflow.com/users/1772342/breandan"}, "reply_to_user": {"reputation": 992, "user_id": 3000729, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/36347f39d882a88aa268907728be29e3?s=128&d=identicon&r=PG", "display_name": "corlaez", "link": "https://stackoverflow.com/users/3000729/corlaez"}, "edited": false, "score": 1, "creation_date": 1499888500, "post_id": 29268526, "comment_id": 77105768, "body": "Any update on overriding getter/setter methods with Kotlin properties? All these answers feel like workarounds to avoid the name clash issue, and most of the time you just want to return the property anyway.   @lrn2code This will not work either. If you have a Kotlin class <code>class KotlinClass(var name: String) : SomeInterface</code> and a Kotlin interface <code>interface SomeInterface { fun getName(): String }</code>, this will produce the same error during compilation as using the original Java interface."}, {"owner": {"reputation": 1561, "user_id": 1772342, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/pvNgt.jpg?s=128&g=1", "display_name": "breandan", "link": "https://stackoverflow.com/users/1772342/breandan"}, "edited": false, "score": 0, "creation_date": 1499889175, "post_id": 29268526, "comment_id": 77106136, "body": "Ah, I see now. A better solution is to use properties directly in interfaces when rewriting them in Kotlin: <a href=\"https://kotlinlang.org/docs/reference/interfaces.html#properties-in-interfaces\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/&hellip;</a> Still doesn&#39;t help when you need to work with Java."}, {"owner": {"reputation": 774, "user_id": 3834751, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bk53W.jpg?s=128&g=1", "display_name": "Naval Kishor Jha", "link": "https://stackoverflow.com/users/3834751/naval-kishor-jha"}, "edited": false, "score": 0, "creation_date": 1590569450, "post_id": 29268526, "comment_id": 109725667, "body": "look in your code somewhere you have the same function just give a different name to it bcz kotlin give you setter getter as internal implementation so if you literally want setter or getter there is another way to do that like set and get key below the variable and given your implementation. its a name conflict"}], "answers": [{"tags": [], "owner": {"reputation": 4412, "user_id": 1650580, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Su7AM.jpg?s=128&g=1", "display_name": "Mike Buhot", "link": "https://stackoverflow.com/users/1650580/mike-buhot"}, "is_accepted": false, "score": 3, "last_activity_date": 1454150280, "creation_date": 1454150280, "answer_id": 35100736, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/35100736#35100736", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>Another work-around is to declare the properties in an abstract Kotlin class, then write a small java class that extends KotlinClass and implements JavaInterface.</p>\n\n<pre><code>// JavaInterface.java\npublic interface JavaInterface {\n    int getFoo();\n    void setFoo(int value);\n}\n\n// KotlinClass.kt\nabstract class KotlinClass(open var foo : Int = 0) {\n}\n\n// JavaAdapter.java\nclass JavaAdapter extends KotlinClass implements JavaInterface {\n    // all code in KotlinClass, but can't implement JavaInterface there\n    // because kotlin properties cannot override java methods.\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2753, "user_id": 57624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d0f525bca56fcb7107eb4c1138fb57c?s=128&d=identicon&r=PG", "display_name": "Michael Rush", "link": "https://stackoverflow.com/users/57624/michael-rush"}, "edited": false, "score": 1, "creation_date": 1498579403, "post_id": 44719646, "comment_id": 76550664, "body": "I don&#39;t know if that was possible in Kotlin 0.11, but it works in 1.1 and feels better than having different variable names."}, {"owner": {"reputation": 1592, "user_id": 4016254, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/uhcfk.jpg?s=128&g=1", "display_name": "Erlan", "link": "https://stackoverflow.com/users/4016254/erlan"}, "edited": false, "score": 2, "creation_date": 1526544838, "post_id": 44719646, "comment_id": 87788519, "body": "If variable needs to be public?"}, {"owner": {"reputation": 17430, "user_id": 355438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb132c7de803cf864996a922a073e5f2?s=128&d=identicon&r=PG", "display_name": "Lu55", "link": "https://stackoverflow.com/users/355438/lu55"}, "edited": false, "score": 0, "creation_date": 1549629626, "post_id": 44719646, "comment_id": 95981453, "body": "Doesn&#39;t work for me in Kotlin 1.2: &gt; Class &#39;KotlinClass&#39; is not abstract and does not implement abstract member public abstract fun getName(): String! defined in JavaInterface"}], "tags": [], "owner": {"reputation": 606, "user_id": 4668943, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22a6314068fcf240fd03b8b20ff2cd02?s=128&d=identicon&r=PG", "display_name": "LKarma", "link": "https://stackoverflow.com/users/4668943/lkarma"}, "is_accepted": true, "score": 59, "last_activity_date": 1498215147, "creation_date": 1498215147, "answer_id": 44719646, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/44719646#44719646", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>Making that variable <code>private</code> solves the problem.</p>\n\n<p><code>public class KotlinClass(private val name: String?) : JavaInterface</code></p>\n"}, {"tags": [], "owner": {"reputation": 9, "user_id": 1802069, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uJMFO.png?s=128&g=1", "display_name": "Dmitry Handin", "link": "https://stackoverflow.com/users/1802069/dmitry-handin"}, "is_accepted": false, "score": 0, "last_activity_date": 1505801506, "creation_date": 1505801506, "answer_id": 46293074, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/46293074#46293074", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<pre><code>public interface JavaInterface {\n    public String getName();\n}\n\npublic class KotlinClass(val namePrivate: String?) : JavaInterface {\n\nprivate var name = namePrivate\n\n    override fun getName(): String? {\n        return name\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17145, "user_id": 5093961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3736a281ed5cdc18e41f6d3100d76dcc?s=128&d=identicon&r=PG", "display_name": "Steven Spungin", "link": "https://stackoverflow.com/users/5093961/steven-spungin"}, "is_accepted": false, "score": 3, "last_activity_date": 1506600634, "creation_date": 1506600634, "answer_id": 46468802, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/46468802#46468802", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>We have found that to use the same names without clashing, the ctor args must be <strong>private</strong> <em>AND</em> you must <strong>still override</strong> the interfaces methods. You don't need any <em>additional</em> backing fields. Also, your expression body assignment will not recurse, so you can safely use that syntax.</p>\n\n<p>Java Interface</p>\n\n<pre><code>interface IUser {\n    String getUserScope();\n    String getUserId();\n}\n</code></pre>\n\n<p>Kotlin Class</p>\n\n<pre><code>class SampleUser(private val userScope: String, private val userId: String) : IUser {\n    override fun getUserId() = userId\n    override fun getUserScope() = userScope\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 728, "user_id": 1748584, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5iyXq.jpg?s=128&g=1", "display_name": "Robert Liberatore", "link": "https://stackoverflow.com/users/1748584/robert-liberatore"}, "edited": false, "score": 2, "creation_date": 1525490602, "post_id": 46877262, "comment_id": 87387914, "body": "This strikes me as the best answer.  It directly addresses the issue and works for other cases where the accepted answer won&#39;t."}, {"owner": {"reputation": 275, "user_id": 2354975, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2e343a9cb978a7743bb95c2fd6c653d4?s=128&d=identicon&r=PG", "display_name": "tolkinski", "link": "https://stackoverflow.com/users/2354975/tolkinski"}, "reply_to_user": {"reputation": 728, "user_id": 1748584, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5iyXq.jpg?s=128&g=1", "display_name": "Robert Liberatore", "link": "https://stackoverflow.com/users/1748584/robert-liberatore"}, "edited": false, "score": 0, "creation_date": 1582457880, "post_id": 46877262, "comment_id": 106777561, "body": "Exactly, as @RobertLiberatore said this should be the accepted answer."}], "tags": [], "owner": {"reputation": 611, "user_id": 8049084, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-lFpl6l2tRI0/AAAAAAAAAAI/AAAAAAAAAAA/nUibcAKchHE/photo.jpg?sz=128", "display_name": "Renato Garcia", "link": "https://stackoverflow.com/users/8049084/renato-garcia"}, "is_accepted": false, "score": 8, "last_activity_date": 1508694161, "creation_date": 1508694161, "answer_id": 46877262, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/46877262#46877262", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>You could use  @JvmField for instructs the compiler not generate getter/setter, and you can implement your setters and getters. With this your code work well in Java (as attribute getter/setter) and Kotlin as property</p>\n\n<p>Example:\n<strong>JAVA</strong>:</p>\n\n<pre><code>public interface Identifiable&lt;ID extends Serializable&gt; \n{\n   ID getId();\n} \n</code></pre>\n\n<p><strong>KOTLIN</strong>:</p>\n\n<pre><code>class IdentifiableImpl(@JvmField var id: String) :Identifiable&lt;String&gt; \n{\n   override fun getId(): String \n   {\n       TODO(\"not implemented\")\n   }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11854, "user_id": 789933, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/8b613eb1ca2ac175028f8b132e172bbb?s=128&d=identicon&r=PG", "display_name": "Barry Irvine", "link": "https://stackoverflow.com/users/789933/barry-irvine"}, "is_accepted": false, "score": 2, "last_activity_date": 1515164714, "creation_date": 1515164714, "answer_id": 48116184, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/48116184#48116184", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>If you have direct control over the interface then the best approach is to write the interface in Kotlin. You can then write your class</p>\n\n<pre><code>public class KotlinClass(override val name: String?) : KotlinInterface\n</code></pre>\n\n<p>and still reference it from any Java code using the same interface as before. This looks a lot neater than setting all the properties to private and overriding the get function. Obviously if you can't migrate the interface to Java because you don't own it then that seems to be the only solution.</p>\n"}, {"tags": [], "owner": {"reputation": 17430, "user_id": 355438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb132c7de803cf864996a922a073e5f2?s=128&d=identicon&r=PG", "display_name": "Lu55", "link": "https://stackoverflow.com/users/355438/lu55"}, "is_accepted": false, "score": 4, "last_activity_date": 1549625503, "creation_date": 1549625503, "answer_id": 54591510, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/54591510#54591510", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>IMHO most readable combination is field + explicit interface implementation by the single-expression function (combination of @Renato Garcia's and @Steven Spungin's answers):</p>\n\n<p>Java:</p>\n\n<pre><code>public inteface SomeInterface {\n    String getFoo();\n}\n</code></pre>\n\n<p>Kotlin:</p>\n\n<pre><code>class Implementation(@JvmField val foo: String) : SomeInterface {\n    override fun getFoo() = foo\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4198, "user_id": 1397821, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/dwOIp.jpg?s=128&g=1", "display_name": "M. Usman Khan", "link": "https://stackoverflow.com/users/1397821/m-usman-khan"}, "is_accepted": false, "score": 0, "last_activity_date": 1562611312, "creation_date": 1562611312, "answer_id": 56940843, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/56940843#56940843", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>Rename the variable to something else, or make it private if u dont want it to be public.</p>\n"}, {"tags": [], "owner": {"reputation": 6712, "user_id": 6678991, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/vT7P5.jpg?s=128&g=1", "display_name": "Mahdi-Malv", "link": "https://stackoverflow.com/users/6678991/mahdi-malv"}, "is_accepted": false, "score": 1, "last_activity_date": 1575274451, "creation_date": 1575274451, "answer_id": 59134872, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface/59134872#59134872", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>The annotation feature of Kotlin named <code>@JvmName</code> will solve the duplication problem in Java and Kotlin when having the same signature.</p>\n\n<pre><code>fun function(p: String) {\n   // ...\n}\n\n// Signature: function(Ljava/lang/String)\n</code></pre>\n\n<p>With the use of <code>JvmName</code> will be:</p>\n\n<pre><code>@JvmName(\"functionOfKotlin\")\nfun function(p: String) {\n   // ...\n}\n\n// Signature: functionOfKotlin(Ljava/lang/String)\n</code></pre>\n"}], "owner": {"reputation": 2753, "user_id": 57624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d0f525bca56fcb7107eb4c1138fb57c?s=128&d=identicon&r=PG", "display_name": "Michael Rush", "link": "https://stackoverflow.com/users/57624/michael-rush"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 20941, "favorite_count": 10, "accepted_answer_id": 44719646, "answer_count": 9, "score": 61, "last_activity_date": 1575274451, "creation_date": 1427326435, "question_id": 29268526, "link": "https://stackoverflow.com/questions/29268526/how-to-overcome-same-jvm-signature-error-when-implementing-a-java-interface", "title": "How to overcome &quot;same JVM signature&quot; error when implementing a Java interface?", "body": "<p>With the code below, I am getting the following error in IntelliJ IDEA 13.1.6 and Kotlin plugin 0.11.91.AndroidStudio.3:</p>\n\n<pre><code>Platform declaration clash: The following declarations have the same JVM signature (getName()Ljava/lang/String;):\n  \u2022 public open fun getName(): kotlin.String?\n  \u2022 internal final fun &lt;get-name&gt;(): kotlin.String?\n</code></pre>\n\n<p>Java class, <code>JavaInterface.java</code>:</p>\n\n<pre><code>public interface JavaInterface {\n  public String getName();\n}\n</code></pre>\n\n<p>Kotlin class, <code>KotlinClass.kt</code></p>\n\n<pre><code>public class KotlinClass(val name: String?) : JavaInterface\n</code></pre>\n\n<p>I've tried overriding the 'getter' method by\nadding <code>override fun getName(): String? = name</code>, but that produces the same error.</p>\n\n<p>I can see one workaround by doing this instead:</p>\n\n<pre><code>public class KotlinClass(val namePrivate: String?) : JavaInterface {\n  override fun getName(): String? = namePrivate\n}\n</code></pre>\n\n<p>But in my real-world case I have a number of properties to implement and need setters too. Doing this for each property doesn't seem very Kotlin-ish. What am I missing?</p>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 6493, "user_id": 1020900, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab5f80978d59af0204e0986ca41d2c23?s=128&d=identicon&r=PG", "display_name": "bashor", "link": "https://stackoverflow.com/users/1020900/bashor"}, "edited": false, "score": 0, "creation_date": 1427306993, "post_id": 29261741, "comment_id": 46728543, "body": "Could you please share your code?"}], "answers": [{"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451703226, "post_id": 29266877, "comment_id": 56867973, "body": "This is because <code>inv()</code> is an extension function on <code>Int</code> and therefore must be called in the form of <code>someInt.inv()</code> or in the case of this example called on the results of the expression that produces the <code>Int</code> value.  In the API reference are docs for this and other <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html\" rel=\"nofollow noreferrer\"><code>Int</code> Extension functions</a>"}], "tags": [], "owner": {"reputation": 6493, "user_id": 1020900, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab5f80978d59af0204e0986ca41d2c23?s=128&d=identicon&r=PG", "display_name": "bashor", "link": "https://stackoverflow.com/users/1020900/bashor"}, "is_accepted": true, "score": 3, "last_activity_date": 1427318894, "creation_date": 1427318894, "answer_id": 29266877, "question_id": 29261741, "link": "https://stackoverflow.com/questions/29261741/kotlin-0-11-91-unresolved-reference-inv/29266877#29266877", "title": "Kotlin 0.11.91 Unresolved Reference: inv()", "body": "<p>Try to rewrite your code in the following ways:</p>\n\n<pre><code>var h = hash + (hash shl 9).inv()\n</code></pre>\n"}], "owner": {"reputation": 247, "user_id": 1368947, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7585909b0ee2e2db6eb7d06b8f553cb5?s=128&d=identicon&r=PG", "display_name": "sublixt", "link": "https://stackoverflow.com/users/1368947/sublixt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 417, "favorite_count": 0, "accepted_answer_id": 29266877, "answer_count": 1, "score": 0, "last_activity_date": 1428957485, "creation_date": 1427302325, "last_edit_date": 1428957485, "question_id": 29261741, "link": "https://stackoverflow.com/questions/29261741/kotlin-0-11-91-unresolved-reference-inv", "title": "Kotlin 0.11.91 Unresolved Reference: inv()", "body": "<p>I'm using Kotlin 0.11.91 and getting an unresolved reference on the bitwise inversion function inv(). No other functions are having this problem.</p>\n\n<pre><code>var h = hash + inv(hash shl 9)\n</code></pre>\n"}, {"tags": ["kotlin"], "answers": [{"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451703305, "post_id": 29229099, "comment_id": 56867979, "body": "You can now have a main per Kotlin file.  Kotlin no longer generates a package level container class for all of the top-level functions, and instead creates a class per file.  If the filename is <code>App</code> and is in package <code>foo.bar</code> with your <code>main()</code> function, then the class name will be <code>foo.bar.AppKT</code> containing that <code>main()</code>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451703332, "post_id": 29229099, "comment_id": 56867982, "body": "can you update your answer to be current, see comment above)"}, {"owner": {"reputation": 16077, "user_id": 97777, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/fb95aca1c80de718bbfa01447220633b?s=128&d=identicon&r=PG", "display_name": "Duncan McGregor", "link": "https://stackoverflow.com/users/97777/duncan-mcgregor"}, "edited": false, "score": 0, "creation_date": 1505660548, "post_id": 29229099, "comment_id": 79493630, "body": "If you do, then all but one main function has to be private, otherwise there will be a name clash. Or am I missing something?"}], "tags": [], "owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "is_accepted": true, "score": 17, "last_activity_date": 1552392331, "last_edit_date": 1552392331, "creation_date": 1427189621, "answer_id": 29229099, "question_id": 29228423, "link": "https://stackoverflow.com/questions/29228423/why-does-kotlin-lang-allow-only-single-main-function-in-project/29229099#29229099", "title": "Why does Kotlin lang allow only single main function in project?", "body": "<p><strong>UPDATE</strong>: recent versions of Kotlin allow multiple <code>main</code> functions even in the same package (if they are in different files). </p>\n\n<p>You can have multiple main functions in your project but only one main function per <strong>package</strong></p>\n\n<p>The reason why you can't make multiple main functions in package is that all functions in package are stored in Package class so you can't have multiple functions in a class with same signatures.</p>\n\n<p>So if you want multiple main functions you <strong>have to define them in different packages</strong></p>\n"}, {"tags": [], "owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "is_accepted": false, "score": 19, "last_activity_date": 1452859421, "last_edit_date": 1452859421, "creation_date": 1427190792, "answer_id": 29229476, "question_id": 29228423, "link": "https://stackoverflow.com/questions/29228423/why-does-kotlin-lang-allow-only-single-main-function-in-project/29229476#29229476", "title": "Why does Kotlin lang allow only single main function in project?", "body": "<p>In addition to Sergey Mashkov's comment: you can put a <code>main</code> inside an object and mark it <a href=\"http://kotlinlang.org/docs/reference/java-interop.html#static-methods-and-fields\" rel=\"noreferrer\"><code>@JvmStatic</code></a>:</p>\n\n<pre><code>object Main {\n    @JvmStatic \n    fun main(args: Array&lt;String&gt;) {\n        println(\"Hello, world!\")\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1315, "user_id": 812906, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/uy9sl.jpg?s=128&g=1", "display_name": "Dragonborn", "link": "https://stackoverflow.com/users/812906/dragonborn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3615, "favorite_count": 2, "accepted_answer_id": 29229099, "answer_count": 2, "score": 8, "last_activity_date": 1552392331, "creation_date": 1427187469, "last_edit_date": 1447047421, "question_id": 29228423, "link": "https://stackoverflow.com/questions/29228423/why-does-kotlin-lang-allow-only-single-main-function-in-project", "title": "Why does Kotlin lang allow only single main function in project?", "body": "<p>Doesn't this take away the feature of having multiple main entry points in java which can be called as and when required.</p>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 8433, "user_id": 1456931, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/a5b9a171ecc501424c4fb4fa166fe0cf?s=128&d=identicon&r=PG", "display_name": "Damian Petla", "link": "https://stackoverflow.com/users/1456931/damian-petla"}, "edited": false, "score": 1, "creation_date": 1427378799, "post_id": 29223898, "comment_id": 46758927, "body": "Why don&#39;t you use non nullable Int for age? Is age at some point set to null?"}, {"owner": {"reputation": 6546, "user_id": 1347816, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/k5aTp.jpg?s=128&g=1", "display_name": "LEMUEL  ADANE", "link": "https://stackoverflow.com/users/1347816/lemuel-adane"}, "reply_to_user": {"reputation": 8433, "user_id": 1456931, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/a5b9a171ecc501424c4fb4fa166fe0cf?s=128&d=identicon&r=PG", "display_name": "Damian Petla", "link": "https://stackoverflow.com/users/1456931/damian-petla"}, "edited": false, "score": 0, "creation_date": 1427444672, "post_id": 29223898, "comment_id": 46787818, "body": "I need nullable Int here for some reason."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451703423, "post_id": 29223898, "comment_id": 56867993, "body": "The answer from @sergey below is correct and is a good solution.  Can you review it and if good, accept it.  If not, then please leave additional comments."}], "answers": [{"comments": [{"owner": {"reputation": 564, "user_id": 290853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5574f25a6272bc09cde2c26014d003b2?s=128&d=identicon&r=PG", "display_name": "withoutclass", "link": "https://stackoverflow.com/users/290853/withoutclass"}, "edited": false, "score": 0, "creation_date": 1539199312, "post_id": 29226495, "comment_id": 92419301, "body": "This answer checks for null twice which is not necessary. By virtue of the first check the compiler knows <code>age</code> is not nullable in the else block."}], "tags": [], "owner": {"reputation": 6546, "user_id": 1347816, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/k5aTp.jpg?s=128&g=1", "display_name": "LEMUEL  ADANE", "link": "https://stackoverflow.com/users/1347816/lemuel-adane"}, "is_accepted": false, "score": 0, "last_activity_date": 1427199452, "last_edit_date": 1427199452, "creation_date": 1427179658, "answer_id": 29226495, "question_id": 29223898, "link": "https://stackoverflow.com/questions/29223898/what-is-the-right-way-of-using-greater-than-less-than-comparison-on-nullabl/29226495#29226495", "title": "What is the right way of using &quot;greater than&quot;, &quot;less than&quot; comparison on nullable integers in Kotlin?", "body": "<p>I used the null coalescing operator to convert from nullable Int? to non-nullable Int:</p>\n\n<pre><code>var age: Int? = 0\n\npublic var isAdult: Boolean? = null\n   get() = if(age == null) null else (age ?: 0 &gt;= 18)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "is_accepted": true, "score": 26, "last_activity_date": 1562087004, "last_edit_date": 1562087004, "creation_date": 1427189107, "answer_id": 29228948, "question_id": 29223898, "link": "https://stackoverflow.com/questions/29223898/what-is-the-right-way-of-using-greater-than-less-than-comparison-on-nullabl/29228948#29228948", "title": "What is the right way of using &quot;greater than&quot;, &quot;less than&quot; comparison on nullable integers in Kotlin?", "body": "<pre><code>var age : Int? = 0\n\npublic val isAdult : Boolean?\n    get() = age?.let { it &gt;= 18 }\n</code></pre>\n\n<p>The other solution would be using delegates:</p>\n\n<pre><code>var age : Int by Delegates.notNull()\npublic val isAdult : Boolean\n    get () = age &gt;= 18\n</code></pre>\n\n<p>So if you try to get age or check isAdult before age was actually assigned then you'll get exception instead of null.</p>\n\n<p>Anyway I believe age = 0 is some kind magic that one day may lead to issue (even prod issue).</p>\n"}, {"tags": [], "owner": {"reputation": 11149, "user_id": 706628, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/NICFY.jpg?s=128&g=1", "display_name": "Barry Fruitman", "link": "https://stackoverflow.com/users/706628/barry-fruitman"}, "is_accepted": false, "score": 8, "last_activity_date": 1565829421, "creation_date": 1565829421, "answer_id": 57503610, "question_id": 29223898, "link": "https://stackoverflow.com/questions/29223898/what-is-the-right-way-of-using-greater-than-less-than-comparison-on-nullabl/57503610#57503610", "title": "What is the right way of using &quot;greater than&quot;, &quot;less than&quot; comparison on nullable integers in Kotlin?", "body": "<p>Kotlin could sure use an extension function on <code>Int</code> for this, but until they do:</p>\n\n<pre><code>fun Int?.isGreaterThan(other: Int?) =\n    this != null &amp;&amp; other != null &amp;&amp; this &gt; other\n\nfun Int?.isLessThan(other: Int?) =\n    this != null &amp;&amp; other != null &amp;&amp; this &lt; other\n</code></pre>\n\n<p>My methods returns <code>false</code>, not <code>null</code> if either operand is <code>null</code>. That makes more sense to me.</p>\n"}, {"tags": [], "owner": {"reputation": 4741, "user_id": 517733, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4e0b5b9443d08bdacd6087648dab3e0c?s=128&d=identicon&r=PG", "display_name": "Mike6679", "link": "https://stackoverflow.com/users/517733/mike6679"}, "is_accepted": false, "score": 0, "last_activity_date": 1576590176, "creation_date": 1576590176, "answer_id": 59375557, "question_id": 29223898, "link": "https://stackoverflow.com/questions/29223898/what-is-the-right-way-of-using-greater-than-less-than-comparison-on-nullabl/59375557#59375557", "title": "What is the right way of using &quot;greater than&quot;, &quot;less than&quot; comparison on nullable integers in Kotlin?", "body": "<p>Also can try this:</p>\n\n<pre><code>var position = 100\n\n    mArrayList?.let {\n\n                if (it.size &gt; 0 &amp;&amp; position &gt;= 0 ) \n                     return true\n\n            }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3030, "user_id": 443836, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/6a1767f6664b99900d9f7d93be9a6dbe?s=128&d=identicon&r=PG", "display_name": "Marco Eckstein", "link": "https://stackoverflow.com/users/443836/marco-eckstein"}, "is_accepted": false, "score": 0, "last_activity_date": 1605574313, "last_edit_date": 1605574313, "creation_date": 1605571721, "answer_id": 64867535, "question_id": 29223898, "link": "https://stackoverflow.com/questions/29223898/what-is-the-right-way-of-using-greater-than-less-than-comparison-on-nullabl/64867535#64867535", "title": "What is the right way of using &quot;greater than&quot;, &quot;less than&quot; comparison on nullable integers in Kotlin?", "body": "<p>You could possibly use the built-in function <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.comparisons/compare-values.html\" rel=\"nofollow noreferrer\">compareValue</a>:</p>\n<pre><code>fun &lt;T : Comparable&lt;*&gt;&gt; compareValues(a: T?, b: T?): Int\n</code></pre>\n<pre><code>public var isAdult: Boolean = false\n   get() = compareValues(_age, 18) &gt;= 0\n</code></pre>\n<p>or</p>\n<pre><code>public var isAdult: Boolean = false\n   get() = compareValues(18, _age) &lt;= 0\n</code></pre>\n<p>Note however that <em>null is considered less than any value</em>, which may suit your case, but may lead to undesired behavior in other cases. E.g., think of <code>var grantMinorsDiscount</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 3030, "user_id": 443836, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/6a1767f6664b99900d9f7d93be9a6dbe?s=128&d=identicon&r=PG", "display_name": "Marco Eckstein", "link": "https://stackoverflow.com/users/443836/marco-eckstein"}, "is_accepted": false, "score": 1, "last_activity_date": 1615084074, "last_edit_date": 1615084074, "creation_date": 1605574276, "answer_id": 64867827, "question_id": 29223898, "link": "https://stackoverflow.com/questions/29223898/what-is-the-right-way-of-using-greater-than-less-than-comparison-on-nullabl/64867827#64867827", "title": "What is the right way of using &quot;greater than&quot;, &quot;less than&quot; comparison on nullable integers in Kotlin?", "body": "<p>A generic and flexible solution would be:</p>\n<pre><code>infix fun &lt;T : Comparable&lt;T&gt;&gt; T?.isGreaterThan(other: T?): Boolean? =\n    if (this != null &amp;&amp; other != null) this &gt; other else null\n\ninfix fun &lt;T : Comparable&lt;T&gt;&gt; T?.isGreaterThanOrEqual(other: T?): Boolean? =\n    if (this != null &amp;&amp; other != null) this &gt;= other else null\n\ninfix fun &lt;T : Comparable&lt;T&gt;&gt; T?.isLessThan(other: T?): Boolean? =\n    if (this != null &amp;&amp; other != null) this &lt; other else null\n\ninfix fun &lt;T : Comparable&lt;T&gt;&gt; T?.isLessThanOrEqual(other: T?): Boolean? =\n    if (this != null &amp;&amp; other != null) this &lt;= other else null\n\n</code></pre>\n<p>Depending on your needs, you could use it as:</p>\n<pre><code>public var isAdult: Boolean? = false\n    get() = _age isGreaterThanOrEqual 18\n</code></pre>\n<p>or:</p>\n<pre><code>public var isAdult: Boolean = false\n    get() = _age isGreaterThanOrEqual 18 == true\n</code></pre>\n<p>Edit: Now available in <a href=\"https://github.com/marco-eckstein/kotlin-lib\" rel=\"nofollow noreferrer\">kotlin-lib</a>.</p>\n"}], "owner": {"reputation": 6546, "user_id": 1347816, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/k5aTp.jpg?s=128&g=1", "display_name": "LEMUEL  ADANE", "link": "https://stackoverflow.com/users/1347816/lemuel-adane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 16602, "favorite_count": 2, "accepted_answer_id": 29228948, "answer_count": 6, "score": 30, "last_activity_date": 1615084074, "creation_date": 1427163471, "question_id": 29223898, "link": "https://stackoverflow.com/questions/29223898/what-is-the-right-way-of-using-greater-than-less-than-comparison-on-nullabl", "title": "What is the right way of using &quot;greater than&quot;, &quot;less than&quot; comparison on nullable integers in Kotlin?", "body": "<pre><code>var _age: Int? = 0\n\npublic var isAdult: Boolean? = false\n   get() = _age?.compareTo(18) &gt;= 0 \n</code></pre>\n\n<p>This still gives me a null-safety, compile error, but how can I use >, &lt;, >= or &lt;= in this matter?</p>\n"}, {"tags": ["arrays", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 8, "creation_date": 1427089989, "post_id": 29201484, "comment_id": 46619293, "body": "Alternatively list?.forEach {it.delete() ...}"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 2, "creation_date": 1451703568, "post_id": 29201484, "comment_id": 56868025, "body": "<code>list?.forEach { ... }</code> handles the null (as mentioned above, just adding the code block around it)"}], "tags": [], "owner": {"reputation": 1023, "user_id": 450110, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/9d4006a80c81c9d47fa06d7dbb18ccf0?s=128&d=identicon&r=PG", "display_name": "naixx", "link": "https://stackoverflow.com/users/450110/naixx"}, "is_accepted": true, "score": 57, "last_activity_date": 1427070257, "last_edit_date": 1427070257, "creation_date": 1427069592, "answer_id": 29201484, "question_id": 29201182, "link": "https://stackoverflow.com/questions/29201182/kotlin-for-loop-must-have-an-iterator-method-is-this-a-bug/29201484#29201484", "title": "Kotlin: For-loop must have an iterator method - is this a bug?", "body": "<p>Your <code>ArrayList</code> is of nullable type. So, you have to resolve this. There are several options:</p>\n\n<pre><code>for (p2 in list.orEmpty()) { ... }\n</code></pre>\n\n<p>or</p>\n\n<pre><code> list?.let {\n    for (p2 in it) {\n\n    }\n}\n</code></pre>\n\n<p>or you can just return an empty list</p>\n\n<pre><code>public fun findSomeLikeThis(): List&lt;T&gt; //Do you need mutable ArrayList here?\n    = (Db4o.objectContainer()!!.queryByExample&lt;T&gt;(this as T) as Collection&lt;T&gt;)?.toList().orEmpty()\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 42863, "user_id": 5381331, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/be17225d9277060275486934d07d7a72?s=128&d=identicon&r=PG&f=1", "display_name": "Phan Van Linh", "link": "https://stackoverflow.com/users/5381331/phan-van-linh"}, "is_accepted": false, "score": 0, "last_activity_date": 1542591967, "creation_date": 1542591967, "answer_id": 53367283, "question_id": 29201182, "link": "https://stackoverflow.com/questions/29201182/kotlin-for-loop-must-have-an-iterator-method-is-this-a-bug/53367283#53367283", "title": "Kotlin: For-loop must have an iterator method - is this a bug?", "body": "<p>I also face this problem when I loop on some thing it is not an array.<br>\nExample</p>\n\n<pre><code>fun maximum(prices: Array&lt;Int&gt;){\n    val sortedPrices = prices.sort()\n    for(price in sortedPrices){ // it will display for-loop range must have iterator here (because `prices.sort` don't return Unit not Array)\n\n    }\n}\n</code></pre>\n\n<p>This is different case to this question but hope it help</p>\n"}, {"tags": [], "owner": {"reputation": 7069, "user_id": 267680, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/7c9b0a8d7e3dfaaef677e873ce2f6ad9?s=128&d=identicon&r=PG", "display_name": "Dhiraj Gupta", "link": "https://stackoverflow.com/users/267680/dhiraj-gupta"}, "is_accepted": false, "score": 0, "last_activity_date": 1603739876, "creation_date": 1603739876, "answer_id": 64543636, "question_id": 29201182, "link": "https://stackoverflow.com/questions/29201182/kotlin-for-loop-must-have-an-iterator-method-is-this-a-bug/64543636#64543636", "title": "Kotlin: For-loop must have an iterator method - is this a bug?", "body": "<p>This can also happen in Android when you read from shared preferences and are getting a (potentially) nullable iterable object back like <code>StringSet</code>. Even when you provide a default, the compiler is not able to determine that the returned value will never actually be null. The only way I've found around this is by asserting that the returned expression is not null using <code>!!</code> operator, like this:</p>\n<pre><code>val prefs = PreferenceManager.getDefaultSharedPreferences(appContext)\nval searches = prefs.getStringSet(&quot;saved_searches&quot;, setOf())!!\nfor (search in searches){\n    ...\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 380, "user_id": 11319773, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bZ4_ENIpF3Y/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd0woEiR5ylqC2yg2aF6GwuiJvkKw/mo/photo.jpg?sz=128", "display_name": "Axes Grinds", "link": "https://stackoverflow.com/users/11319773/axes-grinds"}, "edited": false, "score": 0, "creation_date": 1618954558, "post_id": 67009656, "comment_id": 118758328, "body": "This should be the accepted answer. This is the only one that worked for me."}], "tags": [], "owner": {"reputation": 21, "user_id": 11761482, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-46AXzpXxkZo/AAAAAAAAAAI/AAAAAAAABPo/NuqqieInM0c/photo.jpg?sz=128", "display_name": "Sumanth Hegde", "link": "https://stackoverflow.com/users/11761482/sumanth-hegde"}, "is_accepted": false, "score": 1, "last_activity_date": 1617905623, "creation_date": 1617905623, "answer_id": 67009656, "question_id": 29201182, "link": "https://stackoverflow.com/questions/29201182/kotlin-for-loop-must-have-an-iterator-method-is-this-a-bug/67009656#67009656", "title": "Kotlin: For-loop must have an iterator method - is this a bug?", "body": "<p>try</p>\n<pre><code>for(p2 in 0 until list.count()) {\n    ...\n    ...\n} \n</code></pre>\n"}], "owner": {"reputation": 6546, "user_id": 1347816, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/k5aTp.jpg?s=128&g=1", "display_name": "LEMUEL  ADANE", "link": "https://stackoverflow.com/users/1347816/lemuel-adane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 22612, "favorite_count": 0, "accepted_answer_id": 29201484, "answer_count": 4, "score": 34, "last_activity_date": 1617905623, "creation_date": 1427067302, "last_edit_date": 1520417904, "question_id": 29201182, "link": "https://stackoverflow.com/questions/29201182/kotlin-for-loop-must-have-an-iterator-method-is-this-a-bug", "title": "Kotlin: For-loop must have an iterator method - is this a bug?", "body": "<p>I have the following code:</p>\n\n<pre><code>public fun findSomeLikeThis(): ArrayList&lt;T&gt;? {\n    val result = Db4o.objectContainer()!!.queryByExample&lt;T&gt;(this as T) as Collection&lt;T&gt;\n    if (result == null) return null\n    return ArrayList(result)\n}\n</code></pre>\n\n<p>If I call this like:</p>\n\n<pre><code>var list : ArrayList&lt;Person&gt;? = p1.findSomeLikeThis()\n\nfor (p2 in list) {\n    p2.delete()\n    p2.commit()\n}\n</code></pre>\n\n<p>It would give me the error:</p>\n\n<blockquote>\n  <p>For-loop range must have an 'iterator()' method</p>\n</blockquote>\n\n<p>Am I missing something here?</p>\n"}, {"tags": ["intellij-idea", "kotlin"], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 799859, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc0665da83db376bccae4dd2114b35e?s=128&d=identicon&r=PG", "display_name": "geevee", "link": "https://stackoverflow.com/users/799859/geevee"}, "is_accepted": false, "score": 1, "last_activity_date": 1426857465, "creation_date": 1426857465, "answer_id": 29167431, "question_id": 29165307, "link": "https://stackoverflow.com/questions/29165307/kotlin-m11-suppress-function-is-never-used-in-intellij-14-1/29167431#29167431", "title": "Kotlin M11: Suppress &quot;Function is never used&quot; in IntelliJ 14.1", "body": "<p>You can go to Preferences \u2192 Editor \u2192 Inspections \u2192 Kotlin \u2192 Unused Symbol (faster is to search \"unused symbol\" in Preferences search bar). There you can configure annotations to suppress this warning (this setting is shared among analogous inspections for Java)</p>\n\n<p>For Kotlin, warning suppression now works only for compiler diagnostics\n, not for IDE-only inspections. I have filed an issue for it: <a href=\"https://youtrack.jetbrains.com/issue/KT-7060\" rel=\"nofollow\">KT-7060</a></p>\n"}], "owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1523, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1426857465, "creation_date": 1426850398, "question_id": 29165307, "link": "https://stackoverflow.com/questions/29165307/kotlin-m11-suppress-function-is-never-used-in-intellij-14-1", "title": "Kotlin M11: Suppress &quot;Function is never used&quot; in IntelliJ 14.1", "body": "<p>I'm using Android Studio 1.2 Preview which is based on IntelliJ 14.1 EAP and recently updated to Kotlin M11. For a certain method, the IDE reports that it is unused. I was used to having an intention that says \"Suppress warning for element/method/class\" but it seems to be gone now.</p>\n\n<p>How can I suppress the warning, at least manually?</p>\n"}, {"tags": ["markdown", "kotlin"], "comments": [{"owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 0, "creation_date": 1426764565, "post_id": 29137206, "comment_id": 46509756, "body": "According to this commit <a href=\"https://github.com/JetBrains/kotlin/commit/853fce4b7191e52ba6277972851e731c0c2d1802\" rel=\"nofollow noreferrer\">github.com/JetBrains/kotlin/commit/&hellip;</a> markdown will be supported shortly, maybe in the next milestone release."}, {"owner": {"reputation": 3495, "user_id": 923820, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/49c33d2b536b9d15e46920a9026f4a2a?s=128&d=identicon&r=PG", "display_name": "Alexey Dmitriev", "link": "https://stackoverflow.com/users/923820/alexey-dmitriev"}, "reply_to_user": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 0, "creation_date": 1426770619, "post_id": 29137206, "comment_id": 46513518, "body": "Looks like it&#39;s going that way."}], "answers": [{"tags": [], "owner": {"reputation": 79983, "user_id": 147024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b35432f97606c0a31da17084d2414966?s=128&d=identicon&r=PG", "display_name": "yole", "link": "https://stackoverflow.com/users/147024/yole"}, "is_accepted": true, "score": 4, "last_activity_date": 1426772547, "creation_date": 1426772547, "answer_id": 29146193, "question_id": 29137206, "link": "https://stackoverflow.com/questions/29137206/kotlin-which-format-to-use-for-documentation/29146193#29146193", "title": "Kotlin: which format to use for documentation?", "body": "<p>The just published M11 release of Kotlin officially supports a new documentation format based on a combination of Markdown and JavaDoc. You can find the full documentation for it <a href=\"http://kotlinlang.org/docs/reference/kotlin-doc.html\" rel=\"nofollow\">here</a>.</p>\n\n<p>The new documentation generation tool will be officially released in a very short while. Right now it's available in a Git repository <a href=\"https://github.com/orangy/dokka\" rel=\"nofollow\">here</a>.</p>\n"}], "owner": {"reputation": 3495, "user_id": 923820, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/49c33d2b536b9d15e46920a9026f4a2a?s=128&d=identicon&r=PG", "display_name": "Alexey Dmitriev", "link": "https://stackoverflow.com/users/923820/alexey-dmitriev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 345, "favorite_count": 0, "accepted_answer_id": 29146193, "answer_count": 1, "score": 1, "last_activity_date": 1426772547, "creation_date": 1426739285, "last_edit_date": 1495540745, "question_id": 29137206, "link": "https://stackoverflow.com/questions/29137206/kotlin-which-format-to-use-for-documentation", "title": "Kotlin: which format to use for documentation?", "body": "<p>According to <a href=\"https://stackoverflow.com/questions/28527838/kotlin-kdoc-documentation\">Kotlin KDoc: Documentation?</a> and <a href=\"https://devnet.jetbrains.com/thread/458339\" rel=\"nofollow noreferrer\">https://devnet.jetbrains.com/thread/458339</a>, KDoc is stalled, and there is another documentation processing engine being developed, but it is not ready yet.</p>\n\n<p><strong>Question</strong>: as of now, is there any agreed format of documentation which will be fully supported by doc generator and by Kotlin plugin for IDEA?</p>\n\n<p>P.S. Just don't want to rewrite docs I've been written so far (in Markdown).</p>\n"}]