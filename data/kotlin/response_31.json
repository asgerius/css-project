[{"tags": ["kotlin"], "comments": [{"owner": {"reputation": 4427, "user_id": 4706743, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64b05c3b09628ba8955d6d7a188271af?s=128&d=identicon&r=PG&f=1", "display_name": "D3xter", "link": "https://stackoverflow.com/users/4706743/d3xter"}, "edited": false, "score": 1, "creation_date": 1439214200, "post_id": 31920640, "comment_id": 51754890, "body": "Have you tried to find @Nullable annotations?"}, {"owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "reply_to_user": {"reputation": 4427, "user_id": 4706743, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64b05c3b09628ba8955d6d7a188271af?s=128&d=identicon&r=PG&f=1", "display_name": "D3xter", "link": "https://stackoverflow.com/users/4706743/d3xter"}, "edited": false, "score": 0, "creation_date": 1439216412, "post_id": 31920640, "comment_id": 51756571, "body": "@D3xter this won&#39;t work because the Nullable annotation used by Kotlin is not retained at runtime."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1452055120, "post_id": 31920640, "comment_id": 56997190, "body": "This is now currently possible using Kotlin reflection since M13 release"}], "answers": [{"comments": [{"owner": {"reputation": 5483, "user_id": 1356130, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/71a884fac9d80ee3171a4018b1eaf660?s=128&d=identicon&r=PG", "display_name": "atok", "link": "https://stackoverflow.com/users/1356130/atok"}, "edited": false, "score": 0, "creation_date": 1439237385, "post_id": 31922156, "comment_id": 51768646, "body": "Thank you. Without returnType the API was a little incomplete."}], "tags": [], "owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "is_accepted": true, "score": 9, "last_activity_date": 1439229383, "last_edit_date": 1439229383, "creation_date": 1439216689, "answer_id": 31922156, "question_id": 31920640, "link": "https://stackoverflow.com/questions/31920640/find-nullable-properties-through-reflection/31922156#31922156", "title": "Find nullable properties through reflection", "body": "<p>The API you're looking for was introduced in latest Kotlin builds (0.13.213+). You can now take the type of a property and find out if it was marked as nullable in the source code:</p>\n\n<pre><code>val property = ...\nif (property.returnType.isMarkedNullable) {\n    ...\n}\n</code></pre>\n"}], "owner": {"reputation": 5483, "user_id": 1356130, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/71a884fac9d80ee3171a4018b1eaf660?s=128&d=identicon&r=PG", "display_name": "atok", "link": "https://stackoverflow.com/users/1356130/atok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 31922156, "answer_count": 1, "score": 5, "last_activity_date": 1439229383, "creation_date": 1439212640, "question_id": 31920640, "link": "https://stackoverflow.com/questions/31920640/find-nullable-properties-through-reflection", "title": "Find nullable properties through reflection", "body": "<p>Is there a way to list all properties of an object that are allowed to return nulls?</p>\n\n<pre><code>val cls = javaClass&lt;T&gt;().kotlin\n\nfor(property in cls.properties) {\n    if(property.accessible) {\n        //Is it nullable?\n\n    }\n}\n</code></pre>\n"}, {"tags": ["android", "gradle", "kotlin"], "comments": [{"owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 0, "creation_date": 1439245565, "post_id": 31920502, "comment_id": 51772280, "body": "This looks very much like a bug, and the best place for it would be our issue tracker: <a href=\"https://youtrack.jetbrains.com/issues/KT\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issues/KT</a>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1452055088, "post_id": 31920502, "comment_id": 56997180, "body": "@Ardi, did you create an issue in YouTrack, if so what is the issue number to track progress on this?"}], "answers": [{"tags": [], "owner": {"reputation": 73, "user_id": 5058310, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0d7eb801bfc4354bdabcf6b36e5a6f?s=128&d=identicon&r=PG&f=1", "display_name": "Cheng", "link": "https://stackoverflow.com/users/5058310/cheng"}, "is_accepted": false, "score": 0, "last_activity_date": 1459941434, "creation_date": 1459941434, "answer_id": 36449551, "question_id": 31920502, "link": "https://stackoverflow.com/questions/31920502/assertionerror-root-package-must-be-initialized/36449551#36449551", "title": "AssertionError: Root package must be initialized", "body": "<p>I believe this is because of the version of your Android Studio IDE. I had the same issue when I was using 1.2 and after I upgraded to 1.5, problem solved.</p>\n"}], "owner": {"reputation": 1621, "user_id": 4311759, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/9xRdP.png?s=128&g=1", "display_name": "Ardi", "link": "https://stackoverflow.com/users/4311759/ardi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1459941434, "creation_date": 1439212229, "last_edit_date": 1439212817, "question_id": 31920502, "link": "https://stackoverflow.com/questions/31920502/assertionerror-root-package-must-be-initialized", "title": "AssertionError: Root package must be initialized", "body": "<p>I open my Kotlin project on another computer in Android Studio and met error in Event Log:</p>\n\n<blockquote>\n  <p>AssertionError: Root package must be initialized</p>\n</blockquote>\n\n<pre><code>Root package must be initialized\njava.lang.AssertionError: Root package must be initialized\nat org.jetbrains.kotlin.resolve.lazy.ResolveSession.getAllPackages(ResolveSession.java:329)\nat org.jetbrains.kotlin.resolve.lazy.ResolveSession.forceResolveAll(ResolveSession.java:350)\nat org.jetbrains.kotlin.idea.references.BuiltInsReferenceResolver$2.run(BuiltInsReferenceResolver.java:121)\nat com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:872)\nat org.jetbrains.kotlin.idea.references.BuiltInsReferenceResolver$3.run(BuiltInsReferenceResolver.java:141)\nat com.intellij.openapi.application.impl.ApplicationImpl$8.run(ApplicationImpl.java:400)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\nat java.lang.Thread.run(Thread.java:745)\nat org.jetbrains.ide.PooledThreadExecutor$1$1.run(PooledThreadExecutor.java:56)\n</code></pre>\n\n<p>Project main structure:</p>\n\n<p><a href=\"https://i.stack.imgur.com/rLBM8.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/rLBM8.png\" alt=\"enter image description here\"></a></p>\n\n<p>build.gradle</p>\n\n<pre><code>apply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\n\nandroid {\ncompileSdkVersion 22\nbuildToolsVersion \"22.0.1\"\n\ndefaultConfig {\n    applicationId \"taskmoney\"\n    minSdkVersion 15\n    targetSdkVersion 22\n    versionCode 1\n    versionName \"1.0\"\n}\nbuildTypes {\n    release {\n        minifyEnabled false\n        proguardFiles getDefaultProguardFile('proguard-android.txt'),     'proguard-rules.pro'\n    }\n}\nsourceSets {\n    main.java.srcDirs += 'src/main/kotlin'\n    local.java.srcDirs += 'src/local/kotlin'\n    }\n}\n\ndependencies {\ncompile fileTree(dir: 'libs', include: ['*.jar'])\n//dependencies list\n}\n\nbuildscript {\next.kotlin_version = '0.12.1230'\nrepositories {\n    jcenter()\n}\ndependencies {\n    classpath 'com.android.tools.build:gradle:1.2.3'\n    classpath \"org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version\"\n    classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n</code></pre>\n\n<p>So, can't open any .kt file.</p>\n\n<p>Guess I miss something simple... Thanks</p>\n"}, {"tags": ["java", "android", "rx-java", "android-testing", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 5483, "user_id": 1356130, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/71a884fac9d80ee3171a4018b1eaf660?s=128&d=identicon&r=PG", "display_name": "atok", "link": "https://stackoverflow.com/users/1356130/atok"}, "edited": false, "score": 0, "creation_date": 1438954131, "post_id": 31877951, "comment_id": 51675529, "body": "I tend to reduce the number of dependencies needed to answer my question ie make it readable for non-kotlin programmers."}], "tags": [], "owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "is_accepted": true, "score": 3, "last_activity_date": 1438951207, "creation_date": 1438951207, "answer_id": 31877951, "question_id": 31875893, "link": "https://stackoverflow.com/questions/31875893/android-junit-test-blocks-indefinitely-when-observable-observed-on-androidschedu/31877951#31877951", "title": "Android JUnit test blocks indefinitely when Observable observed on AndroidSchedulers.mainThread()", "body": "<p>I guess it is a bug mentioned here: <a href=\"https://github.com/ReactiveX/RxAndroid/issues/50\" rel=\"nofollow\">https://github.com/ReactiveX/RxAndroid/issues/50</a></p>\n\n<p>btw why don't you use <a href=\"https://github.com/ReactiveX/RxKotlin\" rel=\"nofollow\">RxKotlin</a>?</p>\n\n<p>You example will look much better:</p>\n\n<pre><code>    val returnedObservable = observable&lt;String&gt; { subscriber -&gt;\n        subscriber.onNext(\"hello\")\n        subscriber.onCompleted()\n    }\n    .subscribeOn(Schedules.io())\n    .observeOn(AndroidSchedulers.mainThread())\n</code></pre>\n"}], "owner": {"reputation": 5483, "user_id": 1356130, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/71a884fac9d80ee3171a4018b1eaf660?s=128&d=identicon&r=PG", "display_name": "atok", "link": "https://stackoverflow.com/users/1356130/atok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 367, "favorite_count": 0, "accepted_answer_id": 31877951, "answer_count": 1, "score": 3, "last_activity_date": 1438951207, "creation_date": 1438944540, "question_id": 31875893, "link": "https://stackoverflow.com/questions/31875893/android-junit-test-blocks-indefinitely-when-observable-observed-on-androidschedu", "title": "Android JUnit test blocks indefinitely when Observable observed on AndroidSchedulers.mainThread()", "body": "<p>I'm writing a simple test that is equivalent to:</p>\n\n<pre><code>Test fun testObservable() {\n    val returnedObservable = Observable.create(object : Observable.OnSubscribe&lt;String&gt; {\n        override fun call(t: Subscriber&lt;in String&gt;) {\n            t.onNext(\"hello\")\n            t.onCompleted()\n        }\n\n    }).subscribeOn(Schedulers.io())\n            .observeOn(AndroidSchedulers.mainThread())\n\n    val result = returnedObservable.toBlocking().first()\n    assertEquals(\"hello\", result)\n}\n</code></pre>\n\n<p>The test blocks indefinitely on <code>returnedObservable.toBlocking().first()</code> when <code>.observeOn(AndroidSchedulers.mainThread())</code> is present. </p>\n\n<p>Is there a way to transform the observable to return the result?</p>\n\n<p>The <code>returnedObservable</code> is returned from method call with .subscribeOn and .observeOn already applied so removing those is not an option. </p>\n"}, {"tags": ["java", "reactive-programming", "rx-java", "kotlin"], "comments": [{"owner": {"reputation": 9976, "user_id": 1369016, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/DkJLX.png?s=128&g=1", "display_name": "Bitcoin Cash - ADA enthusiast", "link": "https://stackoverflow.com/users/1369016/bitcoin-cash-ada-enthusiast"}, "edited": false, "score": 0, "creation_date": 1574297199, "post_id": 31875514, "comment_id": 104186150, "body": "Singles don&#39;t have doOnNext because they don&#39;t have an onNext in the first place. However, they have a doOnSuccess (because Singles have an onSuccess instead of onNext)"}], "answers": [{"comments": [{"owner": {"reputation": 5483, "user_id": 1356130, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/71a884fac9d80ee3171a4018b1eaf660?s=128&d=identicon&r=PG", "display_name": "atok", "link": "https://stackoverflow.com/users/1356130/atok"}, "edited": false, "score": 2, "creation_date": 1438954187, "post_id": 31877663, "comment_id": 51675564, "body": "Wouldn&#39;t it be a step back from using Single in the first place?"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 3, "creation_date": 1452055012, "post_id": 31877663, "comment_id": 56997164, "body": "will you post a code example so that the solution doesn&#39;t need to be inferred?"}], "tags": [], "owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "is_accepted": false, "score": 2, "last_activity_date": 1438950324, "creation_date": 1438950324, "answer_id": 31877663, "question_id": 31875514, "link": "https://stackoverflow.com/questions/31875514/how-to-create-caching-hot-version-of-rx-single/31877663#31877663", "title": "How to create caching/hot version of rx.Single?", "body": "<p>You need <a href=\"http://reactivex.io/documentation/subject.html\" rel=\"nofollow\">RxJava Subject</a>: <code>BehaviorSubject</code> or <code>AsyncSubject</code></p>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1452055004, "post_id": 32342220, "comment_id": 56997158, "body": "This seems more like a comment than answer because there is no definitive suggestion here other than &quot;learn more about the cache operator&quot;"}, {"owner": {"reputation": 1109, "user_id": 852671, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e32a85ec42654bef784c23c32edb6ce3?s=128&d=identicon&r=PG", "display_name": "Arkadiusz Konior", "link": "https://stackoverflow.com/users/852671/arkadiusz-konior"}, "edited": false, "score": 0, "creation_date": 1455870811, "post_id": 32342220, "comment_id": 58692826, "body": "<code>rx.Single</code> don&#39;t have <code>cache()</code> method."}], "tags": [], "owner": {"reputation": 110088, "user_id": 2196460, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mAcQx.png?s=128&g=1", "display_name": "hotkey", "link": "https://stackoverflow.com/users/2196460/hotkey"}, "is_accepted": false, "score": 0, "last_activity_date": 1441149068, "last_edit_date": 1441149068, "creation_date": 1441148761, "answer_id": 32342220, "question_id": 31875514, "link": "https://stackoverflow.com/questions/31875514/how-to-create-caching-hot-version-of-rx-single/32342220#32342220", "title": "How to create caching/hot version of rx.Single?", "body": "<p>Please check the <a href=\"http://reactivex.io/RxJava/javadoc/rx/Observable.html#cache()\" rel=\"nofollow\"><code>cache()</code> operator</a>.\nIt's supposed to cache the emissions from the <code>Observable</code> and reproduce them to the subsequent <code>Subscriber</code>s.</p>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1452054952, "post_id": 32583611, "comment_id": 56997146, "body": "will you post a code example so that the solution doesn&#39;t need to be inferred?"}, {"owner": {"reputation": 13134, "user_id": 5115932, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TUPjU.jpg?s=128&g=1", "display_name": "Bryan", "link": "https://stackoverflow.com/users/5115932/bryan"}, "edited": false, "score": 0, "creation_date": 1488387860, "post_id": 32583611, "comment_id": 72211202, "body": "None of those classes have a <code>toSingle()</code> method. Though, you can create a <code>Single.fromObservable()</code>; which a <code>Subject</code> inherits from."}], "tags": [], "owner": {"reputation": 329, "user_id": 3843929, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8dac1c944cd1651e7aabc471a4e46ac?s=128&d=identicon&r=PG", "display_name": "MrBigglesworth", "link": "https://stackoverflow.com/users/3843929/mrbigglesworth"}, "is_accepted": false, "score": 0, "last_activity_date": 1442312566, "creation_date": 1442312566, "answer_id": 32583611, "question_id": 31875514, "link": "https://stackoverflow.com/questions/31875514/how-to-create-caching-hot-version-of-rx-single/32583611#32583611", "title": "How to create caching/hot version of rx.Single?", "body": "<p>You can create a BehaviorSubject/ReplaySubject/AsyncSubject - and then call toSingle on it.</p>\n"}, {"tags": [], "owner": {"reputation": 18638, "user_id": 981715, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6d6386f73f30139271b8f38facf57776?s=128&d=identicon&r=PG", "display_name": "Eugen Martynov", "link": "https://stackoverflow.com/users/981715/eugen-martynov"}, "is_accepted": false, "score": 0, "last_activity_date": 1469041950, "last_edit_date": 1469041950, "creation_date": 1469031939, "answer_id": 38485918, "question_id": 31875514, "link": "https://stackoverflow.com/questions/31875514/how-to-create-caching-hot-version-of-rx-single/38485918#38485918", "title": "How to create caching/hot version of rx.Single?", "body": "<p>I made workaround, that I'm not happy with it but it works:</p>\n\n<pre><code>public class Network {\n   private Object data;\n   private Single&lt;Object&gt; dataSingle;\n\n   public Single&lt;Object&gt; getData {\n      if (data == null) {\n         if (dataSingle == null) {\n            dataSingle = Single.create(...)\n             .doOnSuccess( data -&gt; this.data = data;)\n             .sibscribeOn(..);\n         }\n         return dataSingle;\n      } else {\n         return Single.just(data);\n      }\n   }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1115, "user_id": 330083, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eOn98.jpg?s=128&g=1", "display_name": "Gawcio", "link": "https://stackoverflow.com/users/330083/gawcio"}, "is_accepted": false, "score": 2, "last_activity_date": 1479311441, "last_edit_date": 1479311441, "creation_date": 1474661440, "answer_id": 39668806, "question_id": 31875514, "link": "https://stackoverflow.com/questions/31875514/how-to-create-caching-hot-version-of-rx-single/39668806#39668806", "title": "How to create caching/hot version of rx.Single?", "body": "<p>I just needed similar behavior and found some solution. </p>\n\n<p>You can convert <code>Single</code> to <code>Observable</code> apply <code>cache()</code> and then convert it back to <code>Single</code>.</p>\n\n<pre><code>yourSingle.toObservable().cacheWithInitialCapacity(1).toSingle()\n</code></pre>\n\n<p>I use <code>cacheWithInitialCapacity(1)</code> instead of just <code>cache()</code> as an optimization - <code>Single</code> will never emit more than one item.</p>\n\n<p>&nbsp;</p>\n\n<p>It is also good idea to provide <code>Transformer</code> implementation</p>\n\n<pre><code>public class SingleUtils {\n\n    public static &lt;T&gt; Single.Transformer&lt;T, T&gt; cached() {\n        return single -&gt; single.toObservable()\n            .cacheWithInitialCapacity(1)\n            .toSingle();\n    }\n}\n</code></pre>\n\n<p>so you can use caching wherever you want by calling just</p>\n\n<pre><code>yourSingle.compose(SingleUtils.cached())\n</code></pre>\n\n<p><strong>Edit:</strong>\nStarting from rxJava 1.2.2 it has been added (<a href=\"https://github.com/ReactiveX/RxJava/releases/tag/v1.2.2\" rel=\"nofollow noreferrer\">https://github.com/ReactiveX/RxJava/releases/tag/v1.2.2</a>) </p>\n\n<p>Implemented exactly this way\n(<a href=\"https://github.com/ReactiveX/RxJava/pull/4757\" rel=\"nofollow noreferrer\">https://github.com/ReactiveX/RxJava/pull/4757</a>)</p>\n"}], "owner": {"reputation": 5483, "user_id": 1356130, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/71a884fac9d80ee3171a4018b1eaf660?s=128&d=identicon&r=PG", "display_name": "atok", "link": "https://stackoverflow.com/users/1356130/atok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4151, "favorite_count": 5, "answer_count": 5, "score": 20, "last_activity_date": 1479311441, "creation_date": 1438943189, "question_id": 31875514, "link": "https://stackoverflow.com/questions/31875514/how-to-create-caching-hot-version-of-rx-single", "title": "How to create caching/hot version of rx.Single?", "body": "<p>The RxJava <a href=\"https://github.com/ReactiveX/RxJava/releases/tag/v1.0.13\">v1.0.13</a> introduced new type of an Observable: <strong>rx.Single</strong>. It fits great the request-response model but lacks the standard side-effects introducing operators like doOnNext(). So, it's much harder to make multiple things happen as a result.</p>\n\n<p>My idea was to replace doOnNext() with multiple subscriptions to the same Single instance. But this can cause the underlaying work to be done multiple times: once per every subscription.</p>\n\n<p>Example rx.Single implementation:</p>\n\n<pre><code>private class WorkerSubscribe&lt;SomeData&gt;() : Single.OnSubscribe&lt;SomeData&gt; {\n    override fun call(sub: SingleSubscriber&lt;in SomeData&gt;) {\n        try {\n            val result = fetchSomeData()\n            sub.onSuccess(result)\n        } catch(t: Throwable) {\n            sub.onError(t)\n        }\n    }\n}\n\nval single = Single.create&lt;SomeData&gt;(WorkerSubscribe())\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>single.subscribe({}, {})\nsingle.subscribe({}, {})   // Data is fetched for the second time\n</code></pre>\n\n<p>Is it possible to create a instance of Single that will not fetchSomeData() multiple times even when single.subscribe() is called multiple times, but cache and return the same result?</p>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 0, "creation_date": 1438860565, "post_id": 31854533, "comment_id": 51628589, "body": "Polymorphism is about not knowing the subclasses. You&#39;re achieving the opposite of polymorphism by explicitly defining the type of the getter."}, {"owner": {"reputation": 838, "user_id": 1128600, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c57e379c176b460cf48ff3eb61a408da?s=128&d=identicon&r=PG", "display_name": "Steffen Funke", "link": "https://stackoverflow.com/users/1128600/steffen-funke"}, "reply_to_user": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 0, "creation_date": 1438860662, "post_id": 31854533, "comment_id": 51628672, "body": "Please read carefully, I want the getter to return the base type, not the implementation."}, {"owner": {"reputation": 838, "user_id": 1128600, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c57e379c176b460cf48ff3eb61a408da?s=128&d=identicon&r=PG", "display_name": "Steffen Funke", "link": "https://stackoverflow.com/users/1128600/steffen-funke"}, "reply_to_user": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 0, "creation_date": 1438860962, "post_id": 31854533, "comment_id": 51628831, "body": "@cypressious sorry for maybe being unclear, I edited and explicitely added that the property with the implementation should be private, only the getter with the base type should be public"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1452054884, "post_id": 31854533, "comment_id": 56997129, "body": "You have a lot of options: <a href=\"http://stackoverflow.com/a/34625698/3679676\">stackoverflow.com/a/34625698/3679676</a>"}], "answers": [{"comments": [{"owner": {"reputation": 838, "user_id": 1128600, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c57e379c176b460cf48ff3eb61a408da?s=128&d=identicon&r=PG", "display_name": "Steffen Funke", "link": "https://stackoverflow.com/users/1128600/steffen-funke"}, "edited": false, "score": 0, "creation_date": 1452162072, "post_id": 31857294, "comment_id": 57050214, "body": "Thank you, somehow I forgot about my own question. From a distance, it is now clear to me. I think I was not aware at that time that properties don&#39;t exactly work like member variables. So yes, point taken is that if the property is private, so will be the getter."}], "tags": [], "owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "is_accepted": true, "score": 7, "last_activity_date": 1438868228, "creation_date": 1438868228, "answer_id": 31857294, "question_id": 31854533, "link": "https://stackoverflow.com/questions/31854533/property-getter-typed-on-supertype-instead-of-implementation-in-kotlin/31857294#31857294", "title": "Property getter typed on Supertype instead of Implementation in Kotlin", "body": "<p>If the property is private, so will be the getter. In this case, it doesn't matter what type it will have. If you want to have a public property of base type, you'll need to declare it separately:</p>\n\n<pre><code>private val _myType = Impl()\n\npublic val myType : Base\n    get() = _myType\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 838, "user_id": 1128600, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c57e379c176b460cf48ff3eb61a408da?s=128&d=identicon&r=PG", "display_name": "Steffen Funke", "link": "https://stackoverflow.com/users/1128600/steffen-funke"}, "edited": false, "score": 0, "creation_date": 1452161845, "post_id": 34625698, "comment_id": 57050059, "body": "Thank you for taking the time and the thorough answer! I don&#39;t know my exact usecase at that time anymore. Anyway, your Test2/Test3 seems to fulfill the requirements I was after (private implementation, public getter typed as base), and, as it is basically the same as cypressious answer above, I hope you don&#39;t mind if I mark his answer as green, but give you an upvote and kudos for being helpful :)"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 838, "user_id": 1128600, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c57e379c176b460cf48ff3eb61a408da?s=128&d=identicon&r=PG", "display_name": "Steffen Funke", "link": "https://stackoverflow.com/users/1128600/steffen-funke"}, "edited": false, "score": 0, "creation_date": 1452168558, "post_id": 34625698, "comment_id": 57054589, "body": "All good, its not about the points, but about making sure when other people read this they have good coverage and content.  @cypressious does good work!  Thanks!"}, {"owner": {"reputation": 6144, "user_id": 317027, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/LoS8w.jpg?s=128&g=1", "display_name": "hba", "link": "https://stackoverflow.com/users/317027/hba"}, "edited": false, "score": 0, "creation_date": 1590856165, "post_id": 34625698, "comment_id": 109841986, "body": "@JaysonMinard This situation comes up a lot in android/kotlin dev using observable.  The view model has a private mutable-observable, and exposes a public immutable-observable.  The mutable-observable is a subtype of the immutable observable.  I&#39;ve seen the Test3 option used to address the situation.  I was just trying to see if I could do the same thing using a delegate but no cigar :-)"}], "tags": [], "owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "is_accepted": false, "score": 1, "last_activity_date": 1452054846, "creation_date": 1452054846, "answer_id": 34625698, "question_id": 31854533, "link": "https://stackoverflow.com/questions/31854533/property-getter-typed-on-supertype-instead-of-implementation-in-kotlin/34625698#34625698", "title": "Property getter typed on Supertype instead of Implementation in Kotlin", "body": "<p>You would code this the same as you did in Java, using two different properties.  Unless you are ok with <code>Impl</code> never being specialized in the class.  So here are many options:</p>\n\n\n\n<pre><code>// if you don't need Impl typed as Impl then just hold it as base\nclass Test1 {\n    public val base: Base = Impl()\n}\n\n// have both with pointing one reference at the other\nclass Test2 {\n    private val _impl = Impl()\n    public val base: Base = _impl\n}\n\n// have both, second one is a getter (no real benefit over Test2)\nclass Test3 {\n    private val _impl = Impl()\n    public val base: Base\n       get() = _impl\n}\n\n// use a function to do basically a cast\nclass Test4 {\n    private val _impl = Impl()\n    public fun asBase(): Base = _impl\n} \n</code></pre>\n\n<p>Or don't worry about this other property, any use of grabbing the Impl can hold it as type Base:</p>\n\n<pre><code>class Test5 {\n    public val impl: Impl = Impl()\n}\n\n// later\nval thing: Base = Test5().impl\n</code></pre>\n\n<p>Maybe you are looking to build this in a way with a common interface to get the base implementation?</p>\n\n<pre><code>open class Base {}\n\n// a common way to get the implementation from within a class\ninterface Based {\n    val base: Base\n}\n\nclass ImplAbc : Base()\nclass ImplXyz : Base()\n\nclass TestAbc : Based {\n    override val base: Base = ImplAbc()\n}\n\nclass TestXyz : Based {\n    private val _impl = ImplXyz()\n    override val base: Base = _impl\n}\n</code></pre>\n"}], "owner": {"reputation": 838, "user_id": 1128600, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c57e379c176b460cf48ff3eb61a408da?s=128&d=identicon&r=PG", "display_name": "Steffen Funke", "link": "https://stackoverflow.com/users/1128600/steffen-funke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1158, "favorite_count": 0, "accepted_answer_id": 31857294, "answer_count": 2, "score": 6, "last_activity_date": 1452054846, "creation_date": 1438860345, "last_edit_date": 1438860885, "question_id": 31854533, "link": "https://stackoverflow.com/questions/31854533/property-getter-typed-on-supertype-instead-of-implementation-in-kotlin", "title": "Property getter typed on Supertype instead of Implementation in Kotlin", "body": "<p>Suppose I have two classes, a <code>Base</code>and a <code>Impl</code>which extends <code>Base</code>.</p>\n\n<pre><code>package mypackage\n\nopen class Base\nclass Impl : Base()\n</code></pre>\n\n<p>How would I create a <strong>private property for the concrete <code>Impl</code>-Type (for internal use)</strong>, with a <strong>public getter typed as the <code>Base</code>-Type</strong>, to achieve polymorphism? My initial approach was like this:</p>\n\n<pre><code>class Test {\n    private val myType = Impl()\n        get():Base\n}\n</code></pre>\n\n<p>However, the Kotlin compiler complains:</p>\n\n<p><em>Error:(30, 11) Kotlin: Getter return type must be equal to the type of the property, i.e. 'mypackage.Impl'</em></p>\n\n<p>Basically, this is what it would look like in plain Java:</p>\n\n<pre><code>public class Test {\n    private Impl myImpl = new Impl();\n\n    public Base getBase() {\n        return myImpl;\n    }\n}\n</code></pre>\n\n<p>How could one achieve this? Am I missing something?</p>\n\n<p>P.S. I am aware of Backing Fields and creating custom methods as a workaround for getter, I was just curious on how to approach this in an elegant, Kotlin style manner.</p>\n"}, {"tags": ["gradle", "kotlin"], "comments": [{"owner": {"reputation": 3034, "user_id": 681159, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/cc450e2d8db7b8d5dcc656a1c301034e?s=128&d=identicon&r=PG", "display_name": "Jeel Shah", "link": "https://stackoverflow.com/users/681159/jeel-shah"}, "edited": false, "score": 0, "creation_date": 1510788110, "post_id": 31847292, "comment_id": 81589160, "body": "Hi! How did you end up solving this problem? :D"}, {"owner": {"reputation": 11933, "user_id": 471744, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/GDzVT.jpg?s=128&g=1", "display_name": "spierce7", "link": "https://stackoverflow.com/users/471744/spierce7"}, "reply_to_user": {"reputation": 3034, "user_id": 681159, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/cc450e2d8db7b8d5dcc656a1c301034e?s=128&d=identicon&r=PG", "display_name": "Jeel Shah", "link": "https://stackoverflow.com/users/681159/jeel-shah"}, "edited": false, "score": 0, "creation_date": 1510799896, "post_id": 31847292, "comment_id": 81592373, "body": "I asked this a few years ago. My need to get this working went away. Looking at the gradle plugin documentation <a href=\"http://kotlinlang.org/docs/reference/using-gradle.html\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/using-gradle.html</a> I see that there is a new <code>freeCompilerArgs</code> that I might use to pass the necessary arguments. If I couldn&#39;t get that working I&#39;d look into building a fat jar or something similar."}], "answers": [{"comments": [{"owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "reply_to_user": {"reputation": 2964, "user_id": 2246380, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/piBvo.png?s=128&g=1", "display_name": "Ram", "link": "https://stackoverflow.com/users/2246380/ram"}, "edited": false, "score": 0, "creation_date": 1438957663, "post_id": 31878157, "comment_id": 51677895, "body": "You can see it in kotlin&#39;s plugin tests for example: <a href=\"https://github.com/JetBrains/kotlin/search?l=gradle&amp;q=compileKotlin&amp;utf8=%E2%9C%93\" rel=\"nofollow noreferrer\">github.com/JetBrains/kotlin/&hellip;</a>"}, {"owner": {"reputation": 11933, "user_id": 471744, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/GDzVT.jpg?s=128&g=1", "display_name": "spierce7", "link": "https://stackoverflow.com/users/471744/spierce7"}, "edited": false, "score": 0, "creation_date": 1438962146, "post_id": 31878157, "comment_id": 51680888, "body": "@SergeyMashkov This appears not to work for the command <code>.&#47;gradlew clean assemble</code>. Is there a command that it does work for? On the above comment you left a link to show examples of this being used. I&#39;ve gone through all the links, and there are no examples of anyone using the code you posted."}], "tags": [], "owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "is_accepted": false, "score": 2, "last_activity_date": 1439212688, "last_edit_date": 1439212688, "creation_date": 1438951822, "answer_id": 31878157, "question_id": 31847292, "link": "https://stackoverflow.com/questions/31847292/how-to-pass-compiler-arguments-to-kotlin-compiler-with-gradle/31878157#31878157", "title": "How to pass compiler arguments to Kotlin Compiler with Gradle", "body": "<p>Try this:</p>\n\n<pre><code>compileKotlin {\n    kotlinOptions.includeRuntime = true\n}\n</code></pre>\n\n<p><strong>UPD</strong> btw this exact option <code>includeRuntime</code> couldn't work because it is not Gradle way. There are many options to build jar with dependencies in Gradle: <a href=\"http://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/\" rel=\"nofollow\">Gradle \u2013 Create a Jar file with dependencies</a>, <a href=\"https://github.com/johnrengelman/shadow\" rel=\"nofollow\">Gradle Shadow</a></p>\n"}, {"comments": [{"owner": {"reputation": 3034, "user_id": 681159, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/cc450e2d8db7b8d5dcc656a1c301034e?s=128&d=identicon&r=PG", "display_name": "Jeel Shah", "link": "https://stackoverflow.com/users/681159/jeel-shah"}, "edited": false, "score": 0, "creation_date": 1510788062, "post_id": 44626301, "comment_id": 81589136, "body": "Hi, is this added to the project level gradle file or the module level gradle file?"}, {"owner": {"reputation": 11933, "user_id": 471744, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/GDzVT.jpg?s=128&g=1", "display_name": "spierce7", "link": "https://stackoverflow.com/users/471744/spierce7"}, "edited": false, "score": 0, "creation_date": 1510799937, "post_id": 44626301, "comment_id": 81592385, "body": "It would be for the module that you are applying the kotlin plugin too."}, {"owner": {"reputation": 4447, "user_id": 3050249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yz2yy.jpg?s=128&g=1", "display_name": "Miha_x64", "link": "https://stackoverflow.com/users/3050249/miha-x64"}, "reply_to_user": {"reputation": 3044, "user_id": 926568, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/mOOGR.png?s=128&g=1", "display_name": "deviant", "link": "https://stackoverflow.com/users/926568/deviant"}, "edited": false, "score": 0, "creation_date": 1549051755, "post_id": 44626301, "comment_id": 95779706, "body": "@deviant, you&#39;re right, API is changed. Now <code>kotlinOptions</code> are available on <code>KotlinCompile</code> tasks, so I&#39;ve updated my answer."}], "tags": [], "owner": {"reputation": 4447, "user_id": 3050249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yz2yy.jpg?s=128&g=1", "display_name": "Miha_x64", "link": "https://stackoverflow.com/users/3050249/miha-x64"}, "is_accepted": true, "score": 32, "last_activity_date": 1549051714, "last_edit_date": 1549051714, "creation_date": 1497863010, "answer_id": 44626301, "question_id": 31847292, "link": "https://stackoverflow.com/questions/31847292/how-to-pass-compiler-arguments-to-kotlin-compiler-with-gradle/44626301#44626301", "title": "How to pass compiler arguments to Kotlin Compiler with Gradle", "body": "<p>You can specify compiler args inside <code>kotlinOptions</code> closure on tasks of <code>KotlinCompile</code> type. For all of them, for instance:</p>\n\n<pre><code>allprojects {\n    ...\n\n    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {\n        kotlinOptions {\n            jvmTarget = '1.6'\n            freeCompilerArgs += '-include-runtime'\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://kotlinlang.org/docs/reference/using-gradle.html\" rel=\"noreferrer\">Kotlin docs: using Gradle</a></p>\n"}, {"tags": [], "owner": {"reputation": 422, "user_id": 3681304, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e7e1701f763fd52ee2fd8807173f9420?s=128&d=identicon&r=PG&f=1", "display_name": "user3681304", "link": "https://stackoverflow.com/users/3681304/user3681304"}, "is_accepted": false, "score": 0, "last_activity_date": 1588166918, "last_edit_date": 1588166918, "creation_date": 1588166409, "answer_id": 61502768, "question_id": 31847292, "link": "https://stackoverflow.com/questions/31847292/how-to-pass-compiler-arguments-to-kotlin-compiler-with-gradle/61502768#61502768", "title": "How to pass compiler arguments to Kotlin Compiler with Gradle", "body": "<p>If anyone is using the kotlin DSL you can try this too: </p>\n\n<pre><code>import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nval compileKotlin: KotlinCompile by tasks\ncompileKotlin.kotlinOptions.includeRuntime = true\n</code></pre>\n"}], "owner": {"reputation": 11933, "user_id": 471744, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/GDzVT.jpg?s=128&g=1", "display_name": "spierce7", "link": "https://stackoverflow.com/users/471744/spierce7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9880, "favorite_count": 2, "accepted_answer_id": 44626301, "answer_count": 3, "score": 29, "last_activity_date": 1588166918, "creation_date": 1438837955, "question_id": 31847292, "link": "https://stackoverflow.com/questions/31847292/how-to-pass-compiler-arguments-to-kotlin-compiler-with-gradle", "title": "How to pass compiler arguments to Kotlin Compiler with Gradle", "body": "<p>I'm compiling a Kotlin library jar with Gradle using the Kotlin gradle plugin:</p>\n\n<p><code>apply plugin: 'kotlin'</code></p>\n\n<p>I'm trying to find a way to pass a simple <code>-include-runtime</code> compiler arguments to the kotlin compiler. I can't seem to find any documentation on this at all. I tried mimicking the java plugin, but that didn't seem to work. <a href=\"http://kotlinlang.org/docs/tutorials/command-line.html\" rel=\"noreferrer\">Here</a> is some documentation about working with the command line compiler, but the gradle documentation doesn't mention anything about passing compiler arguments.</p>\n"}]