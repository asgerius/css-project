[{"tags": ["java", "maven", "kotlin"], "comments": [{"owner": {"reputation": 17929, "user_id": 166589, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/l9PYX.jpg?s=128&g=1", "display_name": "Lyubomyr Shaydariv", "link": "https://stackoverflow.com/users/166589/lyubomyr-shaydariv"}, "edited": false, "score": 0, "creation_date": 1450882322, "post_id": 34438113, "comment_id": 56617244, "body": "What if you add the <code>maven-compiler-plugin</code> plugin element just after the <code>kotlin-maven-plugin</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 23586, "user_id": 5606016, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/7o0W4.png?s=128&g=1", "display_name": "A_Di-Matteo", "link": "https://stackoverflow.com/users/5606016/a-di-matteo"}, "is_accepted": false, "score": 1, "last_activity_date": 1450882740, "last_edit_date": 1450882740, "creation_date": 1450882320, "answer_id": 34438245, "question_id": 34438113, "link": "https://stackoverflow.com/questions/34438113/how-to-specify-maven-compiler-plugin-order/34438245#34438245", "title": "how to specify maven compiler plugin order", "body": "<p>A simple but effective solution would be to change the two phases (the <code>&lt;phase&gt;</code> element) applied to the executions of the Kotlin Maven Plugin, from <code>compile</code> to <code>process-sources</code> and from <code>test-compile</code> to <code>process-test-sources</code>.  </p>\n\n<p>You want the Kotlin part to be executed before the Java one. Maven by default will invoke the Maven Compiler Plugin as part of the <code>compile</code> phase for source code, and <code>test-compile</code> for test code. Moving the Kotlin part to their previous phases would then make the flow as you wished.</p>\n\n<p>If you wanted the opposite (first Java then Kotlin), then you could have moved the Kotlin part to the next phases (as an example: from <code>compile</code> to <code>process-classes</code> and from <code>test-compile</code> to <code>process-test-classes</code>).</p>\n\n<p>For further details about Maven phases, check the <a href=\"https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference\" rel=\"nofollow\">official documentation</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 8784, "user_id": 786223, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fi4pw.jpg?s=128&g=1", "display_name": "Chris Nauroth", "link": "https://stackoverflow.com/users/786223/chris-nauroth"}, "is_accepted": true, "score": 7, "last_activity_date": 1450882405, "creation_date": 1450882405, "answer_id": 34438270, "question_id": 34438113, "link": "https://stackoverflow.com/questions/34438113/how-to-specify-maven-compiler-plugin-order/34438270#34438270", "title": "how to specify maven compiler plugin order", "body": "<p>The Kotlin documentation on <a href=\"https://kotlinlang.org/docs/reference/using-maven.html\" rel=\"noreferrer\">Using Maven</a> suggests explicitly binding the <code>kotlin-maven-plugin</code> execution to the <code>process-sources</code> phase.  Since <code>maven-compiler-plugin</code> is bound to the <code>compile</code> phase, binding <code>kotlin-maven-plugin</code> to the <code>process-sources</code> phase makes it run first.</p>\n\n<pre><code>&lt;plugin&gt;\n    &lt;artifactId&gt;kotlin-maven-plugin&lt;/artifactId&gt;\n    &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;\n    &lt;version&gt;${kotlin.version}&lt;/version&gt;\n\n    &lt;executions&gt;\n        &lt;execution&gt;\n            &lt;id&gt;compile&lt;/id&gt;\n            &lt;phase&gt;process-sources&lt;/phase&gt;\n            &lt;goals&gt; &lt;goal&gt;compile&lt;/goal&gt; &lt;/goals&gt;\n        &lt;/execution&gt;\n\n        &lt;execution&gt;\n            &lt;id&gt;test-compile&lt;/id&gt;\n            &lt;phase&gt;process-test-sources&lt;/phase&gt;\n            &lt;goals&gt; &lt;goal&gt;test-compile&lt;/goal&gt; &lt;/goals&gt;\n        &lt;/execution&gt;\n    &lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 14934, "user_id": 162410, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/97a472a751e503a7f8e5d88ba087a87c?s=128&d=identicon&r=PG", "display_name": "Cedric Beust", "link": "https://stackoverflow.com/users/162410/cedric-beust"}, "is_accepted": false, "score": 1, "last_activity_date": 1451059881, "creation_date": 1451059881, "answer_id": 34464370, "question_id": 34438113, "link": "https://stackoverflow.com/questions/34438113/how-to-specify-maven-compiler-plugin-order/34464370#34464370", "title": "how to specify maven compiler plugin order", "body": "<p>In case you are open to using a different build system, dependent projects are easy to set up with <a href=\"http://beust.com/kobalt\" rel=\"nofollow\">Kobalt</a>:</p>\n\n<pre><code>val p1 = javaProject { ... }\n\nval p2 = kotlinProject(p1) { ... }\n</code></pre>\n\n<p>This makes project <code>p2</code> depend on <code>p1</code>. You can also mix Java and Kotlin projects.</p>\n"}, {"comments": [{"owner": {"reputation": 17430, "user_id": 355438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb132c7de803cf864996a922a073e5f2?s=128&d=identicon&r=PG", "display_name": "Lu55", "link": "https://stackoverflow.com/users/355438/lu55"}, "edited": false, "score": 0, "creation_date": 1613917515, "post_id": 35093361, "comment_id": 117218326, "body": "Important note for those, who use <b>Tiles Maven Plugin</b>. It <a href=\"https://github.com/repaint-io/maven-tiles#execution-ids\" rel=\"nofollow noreferrer\">changes execution IDs</a> inside the tile to reflect tile GAV coordinates. So in order for <code>maven-compiler-plugin</code> executions override to work <code>&lt;configuration tiles-keep-id=&quot;true&quot; &#47;&gt;</code> tags should be added to the <code>default-compile</code> and <code>default-testCompile</code> executions to preserve specified IDs."}], "tags": [], "owner": {"reputation": 18947, "user_id": 2646526, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3618d0d22a0a8d282c9d46b4c0874020?s=128&d=identicon&r=PG", "display_name": "heenenee", "link": "https://stackoverflow.com/users/2646526/heenenee"}, "is_accepted": false, "score": 6, "last_activity_date": 1454098929, "creation_date": 1454098929, "answer_id": 35093361, "question_id": 34438113, "link": "https://stackoverflow.com/questions/34438113/how-to-specify-maven-compiler-plugin-order/35093361#35093361", "title": "how to specify maven compiler plugin order", "body": "<p>Although it's more verbose, you can compile both Java and Kotlin sources in the <code>compile</code> phase with the following configuration:</p>\n\n<pre><code>&lt;plugin&gt;\n    &lt;artifactId&gt;kotlin-maven-plugin&lt;/artifactId&gt;\n    &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;\n    &lt;version&gt;${kotlin.version}&lt;/version&gt;\n    &lt;executions&gt;\n        &lt;execution&gt;\n            &lt;id&gt;kotlin-compile&lt;/id&gt;\n            &lt;phase&gt;compile&lt;/phase&gt;\n            &lt;goals&gt;\n                &lt;goal&gt;compile&lt;/goal&gt;\n            &lt;/goals&gt;\n        &lt;/execution&gt;\n        &lt;execution&gt;\n            &lt;id&gt;kotlin-test-compile&lt;/id&gt;\n            &lt;phase&gt;test-compile&lt;/phase&gt;\n            &lt;goals&gt;\n                &lt;goal&gt;test-compile&lt;/goal&gt;\n            &lt;/goals&gt;\n        &lt;/execution&gt;\n    &lt;/executions&gt;\n&lt;/plugin&gt;\n&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n    &lt;version&gt;3.5&lt;/version&gt;\n    &lt;executions&gt;\n        &lt;execution&gt;\n            &lt;id&gt;default-compile&lt;/id&gt;\n            &lt;phase&gt;none&lt;/phase&gt;\n        &lt;/execution&gt;\n        &lt;execution&gt;\n            &lt;id&gt;default-testCompile&lt;/id&gt;\n            &lt;phase&gt;none&lt;/phase&gt;\n        &lt;/execution&gt;\n        &lt;execution&gt;\n            &lt;id&gt;java-compile&lt;/id&gt;\n            &lt;phase&gt;compile&lt;/phase&gt;\n            &lt;goals&gt;\n                &lt;goal&gt;compile&lt;/goal&gt;\n            &lt;/goals&gt;\n        &lt;/execution&gt;\n        &lt;execution&gt;\n            &lt;id&gt;java-test-compile&lt;/id&gt;\n            &lt;phase&gt;test-compile&lt;/phase&gt;\n            &lt;goals&gt;\n                &lt;goal&gt;testCompile&lt;/goal&gt;\n            &lt;/goals&gt;\n        &lt;/execution&gt;\n    &lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>\n\n<p>Normally, plugins are executed in the order they are declared in the POM, but the executions of <code>default-compile</code> and <code>default-testCompile</code> are special because they're built-in, so they always go first.  The above configuration gets around that by disabling the default compile executions, and declaring <code>maven-compiler-plugin</code> with new compilation executions after the <code>kotlin-maven-plugin</code>.  In this way, you can get all compilation to properly occur during the <code>compile</code> phase of the build lifecycle.</p>\n"}], "owner": {"reputation": 14564, "user_id": 997851, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/63c8b0590595c3de58406678ef99a6bf?s=128&d=identicon&r=PG", "display_name": "sockeqwe", "link": "https://stackoverflow.com/users/997851/sockeqwe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2023, "favorite_count": 3, "accepted_answer_id": 34438270, "answer_count": 4, "score": 5, "last_activity_date": 1454098929, "creation_date": 1450881871, "question_id": 34438113, "link": "https://stackoverflow.com/questions/34438113/how-to-specify-maven-compiler-plugin-order", "title": "how to specify maven compiler plugin order", "body": "<p>I'm working on a mixed java and kotlin project by using maven.</p>\n\n<p>The problem I'm facing right now is, <code>maven-compiler-plugin</code> runs before compiling <code>kotlin-maven-plugin</code>.</p>\n\n<pre><code>[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @annotation --- \n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 11 source files to /Users/hannes/workspace/tikxml/annotation/target/classes \n[INFO] --- kotlin-maven-plugin:1.0.0-beta-4583:compile (compile) @ annotation \n[INFO] Kotlin Compiler version 1.0.0-beta-4583\n</code></pre>\n\n<p>In my java source code I'm referencing classes written in kotlin. But javac runs before kotlinc. Hence, maven interrupts with compiler errors. </p>\n\n<p>My pom (parent pom, I use submodules) looks like this:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;parent&gt;\n        &lt;groupId&gt;org.sonatype.oss&lt;/groupId&gt;\n        &lt;artifactId&gt;oss-parent&lt;/artifactId&gt;\n        &lt;version&gt;7&lt;/version&gt;\n    &lt;/parent&gt;\n\n    ...\n\n    &lt;modules&gt;\n        &lt;module&gt;core&lt;/module&gt;\n        &lt;module&gt;annotation&lt;/module&gt;\n        &lt;module&gt;processor&lt;/module&gt;\n    &lt;/modules&gt;\n\n\n    &lt;properties&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;java.version&gt;1.7&lt;/java.version&gt;\n        &lt;kotlin.version&gt;1.0.0-beta-4583&lt;/kotlin.version&gt;\n    &lt;/properties&gt;\n\n\n    &lt;build&gt;\n        &lt;pluginManagement&gt;\n            &lt;plugins&gt;\n\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                    &lt;version&gt;3.0&lt;/version&gt;\n                    &lt;configuration&gt;\n                        &lt;source&gt;${java.version}&lt;/source&gt;\n                        &lt;target&gt;${java.version}&lt;/target&gt;\n                    &lt;/configuration&gt;\n                &lt;/plugin&gt;\n            &lt;/plugins&gt;\n\n\n        &lt;/pluginManagement&gt;\n\n        &lt;plugins&gt;\n\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;\n                &lt;artifactId&gt;kotlin-maven-plugin&lt;/artifactId&gt;\n                &lt;version&gt;${kotlin.version}&lt;/version&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;compile&lt;/id&gt;\n                        &lt;phase&gt;compile&lt;/phase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;compile&lt;/goal&gt;\n                        &lt;/goals&gt;\n                        &lt;configuration&gt;\n                            &lt;sourceDirs&gt;\n                                &lt;source&gt;src/main/java&lt;/source&gt;\n                            &lt;/sourceDirs&gt;\n                        &lt;/configuration&gt;\n                    &lt;/execution&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;test-compile&lt;/id&gt;\n                        &lt;phase&gt;test-compile&lt;/phase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;test-compile&lt;/goal&gt;\n                        &lt;/goals&gt;\n                        &lt;configuration&gt;\n                            &lt;sourceDirs&gt;\n                                &lt;source&gt;src/test/java&lt;/source&gt;\n                            &lt;/sourceDirs&gt;\n                        &lt;/configuration&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre>\n"}, {"tags": ["gson", "kotlin"], "comments": [{"owner": {"reputation": 5494, "user_id": 342947, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/a737f13056e480e90f1b8bb943bc3cb1?s=128&d=identicon&r=PG", "display_name": "Fabian Zeindl", "link": "https://stackoverflow.com/users/342947/fabian-zeindl"}, "edited": false, "score": 0, "creation_date": 1513147693, "post_id": 34437052, "comment_id": 82535181, "body": "Would you mind changing the accepted answer to mine, which is more up-to-date and has a lot more votes?"}, {"owner": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "reply_to_user": {"reputation": 5494, "user_id": 342947, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/a737f13056e480e90f1b8bb943bc3cb1?s=128&d=identicon&r=PG", "display_name": "Fabian Zeindl", "link": "https://stackoverflow.com/users/342947/fabian-zeindl"}, "edited": false, "score": 1, "creation_date": 1513154652, "post_id": 34437052, "comment_id": 82538557, "body": "Sure @FabianZeindl"}], "answers": [{"comments": [{"owner": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "edited": false, "score": 0, "creation_date": 1450882055, "post_id": 34437845, "comment_id": 56617058, "body": "I copied your code, registered the ExclusionStrategy to Gson, marked the lazy field with the annotation @GsonTransient -&gt; no effect. Did I miss something?"}, {"owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "reply_to_user": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "edited": false, "score": 0, "creation_date": 1450882112, "post_id": 34437845, "comment_id": 56617104, "body": "perhaps you forgot to set it to gson builder"}, {"owner": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "edited": false, "score": 0, "creation_date": 1450882281, "post_id": 34437845, "comment_id": 56617207, "body": "Hint: f.getAnnotation is called for the field, but returns null"}, {"owner": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "edited": false, "score": 1, "creation_date": 1450883620, "post_id": 34437845, "comment_id": 56617963, "body": "Looking at the bytecode, the <code>GsonTransient</code> annotation is attached to a static method <code>myLazyProp$annotations()</code> but not to the java field <code>myLazyProp$delegate</code> so this cannot work"}, {"owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "reply_to_user": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "edited": false, "score": 1, "creation_date": 1450957250, "post_id": 34437845, "comment_id": 56645922, "body": "@clemp6r you are right, ok, then we better to always exclude delegate fields, see updated example"}, {"owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 0, "creation_date": 1450957625, "post_id": 34437845, "comment_id": 56646069, "body": "This makes serialization work but after deserialization the instance is incomplete and accessing the lazy field will throw a <code>IllegalArgumentException: Parameter specified as non-null is null: method kotlin.LazyKt.getValue, parameter $receiver</code>"}, {"owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "reply_to_user": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 0, "creation_date": 1450957913, "post_id": 34437845, "comment_id": 56646170, "body": "@cypressious same as it was before and only if there is no no-arg constructor"}, {"owner": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "edited": false, "score": 0, "creation_date": 1450969914, "post_id": 34437845, "comment_id": 56651024, "body": "Ignoring fields finishing by $delegate worked, thanks."}, {"owner": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "reply_to_user": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 0, "creation_date": 1450970185, "post_id": 34437845, "comment_id": 56651141, "body": "@cypressious I had the same problem, as a workaround I added default values to each constructor parameter so the Kotlin compiler can create a no-arg constructor. This way Gson calls this no-arg constructor when creating the object, and the lazy field is initialized properly."}, {"owner": {"reputation": 5494, "user_id": 342947, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/a737f13056e480e90f1b8bb943bc3cb1?s=128&d=identicon&r=PG", "display_name": "Fabian Zeindl", "link": "https://stackoverflow.com/users/342947/fabian-zeindl"}, "edited": false, "score": 1, "creation_date": 1472472048, "post_id": 34437845, "comment_id": 65750409, "body": "There is a much simpler way, see my answer: <a href=\"http://stackoverflow.com/a/39205748/342947\">stackoverflow.com/a/39205748/342947</a>"}, {"owner": {"reputation": 951, "user_id": 3404519, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Yj4Jv.jpg?s=128&g=1", "display_name": "AliAvci", "link": "https://stackoverflow.com/users/3404519/aliavci"}, "edited": false, "score": 0, "creation_date": 1525873229, "post_id": 34437845, "comment_id": 87527173, "body": "When attempting to serialize the lazy values, a casting errror occurs: <code>java.lang.ClassCastException: java.lang.Class cannot be cast to java.lang.reflect.ParameterizedType</code>. Are you getting this too?"}], "tags": [], "owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "is_accepted": false, "score": 11, "last_activity_date": 1450960109, "last_edit_date": 1495541873, "creation_date": 1450880974, "answer_id": 34437845, "question_id": 34437052, "link": "https://stackoverflow.com/questions/34437052/deserializing-classes-with-lazy-properties-using-gson-and-kotlin-1-0-beta-4/34437845#34437845", "title": "Deserializing classes with lazy properties using Gson and Kotlin 1.0 beta 4", "body": "<p>The reason is that the <code>delegate</code> field is not a backing field actually so it was forbidden. One of the workarounds is to implement <code>ExclusionStrategy</code>: <a href=\"https://stackoverflow.com/a/27986860/1460833\">https://stackoverflow.com/a/27986860/1460833</a></p>\n\n<p>Something like that:</p>\n\n<pre><code>@Retention(AnnotationRetention.RUNTIME)\n@Target(AnnotationTarget.FIELD, AnnotationTarget.PROPERTY)\nannotation class GsonTransient\n\nobject TransientExclusionStrategy : ExclusionStrategy {\n    override fun shouldSkipClass(type: Class&lt;*&gt;): Boolean = false\n    override fun shouldSkipField(f: FieldAttributes): Boolean = \n            f.getAnnotation(GsonTransient::class.java) != null\n                || f.name.endsWith(\"\\$delegate\")\n}\n\nfun gson() = GsonBuilder()\n        .setExclusionStrategies(TransientExclusionStrategy)\n        .create()\n</code></pre>\n\n<p>See related ticket <a href=\"https://youtrack.jetbrains.com/issue/KT-10502\" rel=\"noreferrer\">https://youtrack.jetbrains.com/issue/KT-10502</a></p>\n\n<p>The other workaround is to serialize lazy values as well:</p>\n\n<pre><code>object SDForLazy : JsonSerializer&lt;Lazy&lt;*&gt;&gt;, JsonDeserializer&lt;Lazy&lt;*&gt;&gt; {\n    override fun serialize(src: Lazy&lt;*&gt;, typeOfSrc: Type, context: JsonSerializationContext): JsonElement =\n            context.serialize(src.value)\n    override fun deserialize(json: JsonElement, typeOfT: Type, context: JsonDeserializationContext): Lazy&lt;*&gt; = \n            lazyOf&lt;Any?&gt;(context.deserialize(json, (typeOfT as ParameterizedType).actualTypeArguments[0]))\n}\n\nclass KotlinNamingPolicy(val delegate: FieldNamingStrategy = FieldNamingPolicy.IDENTITY) : FieldNamingStrategy {\n    override fun translateName(f: Field): String = \n            delegate.translateName(f).removeSuffix(\"\\$delegate\")\n}\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>data class C(val o: Int) {\n    val f by lazy { 1 }\n}\n\nfun main(args: Array&lt;String&gt;) {\n    val gson = GsonBuilder()\n            .registerTypeAdapter(Lazy::class.java, SDForLazy)\n            .setFieldNamingStrategy(KotlinNamingPolicy())\n            .create()\n\n    val s = gson.toJson(C(0))\n    println(s)\n    val c = gson.fromJson(s, C::class.java)\n    println(c)\n    println(c.f)\n}\n</code></pre>\n\n<p>that will produce the following output:</p>\n\n<pre><code>{\"f\":1,\"o\":0}\nC(o=0)\n1\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 29866, "user_id": 930450, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/se3CE.png?s=128&g=1", "display_name": "Ixx", "link": "https://stackoverflow.com/users/930450/ixx"}, "edited": false, "score": 24, "creation_date": 1527488478, "post_id": 39205748, "comment_id": 88130902, "body": "I (still) get this: <code>java.lang.NullPointerException: Attempt to invoke interface method &#39;java.lang.Object kotlin.Lazy.getValue()&#39; on a null object reference</code>. Using a non-lazy (computed) variable works."}], "tags": [], "owner": {"reputation": 5494, "user_id": 342947, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/a737f13056e480e90f1b8bb943bc3cb1?s=128&d=identicon&r=PG", "display_name": "Fabian Zeindl", "link": "https://stackoverflow.com/users/342947/fabian-zeindl"}, "is_accepted": true, "score": 45, "last_activity_date": 1472472120, "last_edit_date": 1472472120, "creation_date": 1472471756, "answer_id": 39205748, "question_id": 34437052, "link": "https://stackoverflow.com/questions/34437052/deserializing-classes-with-lazy-properties-using-gson-and-kotlin-1-0-beta-4/39205748#39205748", "title": "Deserializing classes with lazy properties using Gson and Kotlin 1.0 beta 4", "body": "<p>Since Kotlin 1.0 simply mark the field like this to ignore it during de/serialization:</p>\n\n<pre><code>@delegate:Transient \nval field by lazy { ... }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 158, "user_id": 2753837, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce8c1681b9280edf85b625b0a1e04fdc?s=128&d=identicon&r=PG&f=1", "display_name": "jsallaberry", "link": "https://stackoverflow.com/users/2753837/jsallaberry"}, "is_accepted": false, "score": 1, "last_activity_date": 1588014341, "creation_date": 1588014341, "answer_id": 61466489, "question_id": 34437052, "link": "https://stackoverflow.com/questions/34437052/deserializing-classes-with-lazy-properties-using-gson-and-kotlin-1-0-beta-4/61466489#61466489", "title": "Deserializing classes with lazy properties using Gson and Kotlin 1.0 beta 4", "body": "<p>As explained by other answers, the delegate field should not be serialized.</p>\n\n<p>You can achieve this with <code>transient</code> in the delegate field, as proposed by @Fabian Zeindl:</p>\n\n<pre><code>@delegate:Transient \nval field by lazy { ... }\n</code></pre>\n\n<p>or skipping all delegate fields in the <code>GsonBuilder</code>, as proposed by @Sergey Mashkov:</p>\n\n<pre><code>GsonBuilder().setExclusionStrategies(object : ExclusionStrategy {\n    override fun shouldSkipClass(type: Class&lt;*&gt;): Boolean = false\n    override fun shouldSkipField(f: FieldAttributes): Boolean = f.name.endsWith(\"\\$delegate\")\n}\n</code></pre>\n\n<p>However, you may face a <code>NullPointerException</code> if your class doesn't have a no-argument constructor.</p>\n\n<p>It happens because when Gson doesn't find the no-argument constructor, it will use a <code>ObjectConstructor</code> with an <code>UnsafeAllocator</code> using Reflection to construct your object. (see <a href=\"https://stackoverflow.com/a/18645370\">https://stackoverflow.com/a/18645370</a>). This will erase the Kotlin creation of the delegate field.</p>\n\n<p>To fix it, either create a no-argument constructor in your class, or use Gson <code>InstanceCreator</code> to provide Gson with a default object.</p>\n\n<pre><code>GsonBuilder().registerTypeAdapter(YourClass::class, object : InstanceCreator&lt;YourClass&gt; {\n    override fun createInstance(type: Type?) = YourClass(\"defaultValue\")\n})\n</code></pre>\n"}], "owner": {"reputation": 3386, "user_id": 307735, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/4z7bq.jpg?s=128&g=1", "display_name": "clemp6r", "link": "https://stackoverflow.com/users/307735/clemp6r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6305, "favorite_count": 2, "accepted_answer_id": 39205748, "answer_count": 3, "score": 29, "last_activity_date": 1588014341, "creation_date": 1450878294, "last_edit_date": 1450886389, "question_id": 34437052, "link": "https://stackoverflow.com/questions/34437052/deserializing-classes-with-lazy-properties-using-gson-and-kotlin-1-0-beta-4", "title": "Deserializing classes with lazy properties using Gson and Kotlin 1.0 beta 4", "body": "<p>Using Gson, I want to deserialize a Kotlin class that contains a lazy property.</p>\n\n<p>With Kotlin 1.0 beta 4 I get the following error during object deserialization:</p>\n\n<pre><code>Caused by: java.lang.InstantiationException: can't instantiate class kotlin.Lazy\n</code></pre>\n\n<p>With Kotlin 1.0 beta 2, I used to mark the property with the @Transient annotaiton to tell Gson to skip it. With beta 4 this is not possible anymore, as the annotation causes a compile error.</p>\n\n<pre><code>This annotation is not applicable to target 'member property without backing field'\n</code></pre>\n\n<p>I can\u2019t figure out how to fix this. Any ideas?</p>\n\n<p>Edit: the lazy property is serialized to JSON (<code>\"my_lazy_prop$delegate\":{}</code>), but this is not what I want as it is computed from other properties. I suppose if I find a way to prevent the property from being serialized the deserialization crash would be fixed.</p>\n"}, {"tags": ["kotlin"], "answers": [{"tags": [], "owner": {"reputation": 195, "user_id": 1825161, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UbvQw.jpg?s=128&g=1", "display_name": "Aaron Sarazan", "link": "https://stackoverflow.com/users/1825161/aaron-sarazan"}, "is_accepted": true, "score": 5, "last_activity_date": 1450835634, "creation_date": 1450835634, "answer_id": 34427371, "question_id": 34427101, "link": "https://stackoverflow.com/questions/34427101/how-to-get-the-class-of-an-any-val/34427371#34427371", "title": "How to get the class of an Any val", "body": "<p>You'll want to call <code>item.javaClass</code>. The reason is that you're not calling on a class literal, you're calling on an actual object instance.</p>\n"}], "owner": {"reputation": 942, "user_id": 657341, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/1e6769cac2a341fc0a3abcbd320e6082?s=128&d=identicon&r=PG", "display_name": "martyglaubitz", "link": "https://stackoverflow.com/users/657341/martyglaubitz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 34427371, "answer_count": 1, "score": 0, "last_activity_date": 1450835634, "creation_date": 1450833379, "question_id": 34427101, "link": "https://stackoverflow.com/questions/34427101/how-to-get-the-class-of-an-any-val", "title": "How to get the class of an Any val", "body": "<p>I'm trying to translate a class from java to kotlin which uses a lot of raw types and accesses the Class of objects.</p>\n\n<p>How can i get this to work:</p>\n\n<pre><code>val item: Any = items[position]\nitem::class.java // compiler complains about \"Unresolved reference: item\"\n</code></pre>\n"}, {"tags": ["kotlin", "kotlin-logging"], "comments": [{"owner": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "edited": false, "score": 1, "creation_date": 1450793199, "post_id": 34416869, "comment_id": 56576348, "body": "Not posting this as an answer cause it&#39;s far away from the Java way, but I have considered writing an extension function on Any for logging. You need to cache the Loggers of course, but I think this would be a nice way to do it."}, {"owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "reply_to_user": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "edited": false, "score": 1, "creation_date": 1450999901, "post_id": 34416869, "comment_id": 56659620, "body": "@mhlz Wouldn&#39;t that extension function be statically resolved? As in, it wouldn&#39;t be applied to all objects, only to those of type <code>Any</code> (thus needing a cast)?"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "edited": false, "score": 1, "creation_date": 1451058017, "post_id": 34416869, "comment_id": 56670133, "body": "@mhlz an extension function doesn&#39;t make sense because it won&#39;t have state to keep a logger around.  It could be an extension to return a logger, but why have that on every known class in the system?  Putting extensions on Any tend to become sloppy noise in the IDE later.  @Jire the extension will apply to all descendants of Any, will still return the correct <code>this.javaClass</code> for each.  But I&#39;m not recommending it as a solution."}], "answers": [{"comments": [{"owner": {"reputation": 629, "user_id": 2104648, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/422a99817d5df8fce3ed70457ffbe79d?s=128&d=identicon&r=PG", "display_name": "Caelum", "link": "https://stackoverflow.com/users/2104648/caelum"}, "edited": false, "score": 0, "creation_date": 1450793567, "post_id": 34417066, "comment_id": 56576574, "body": "Top-level is also known as package-level."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451044957, "post_id": 34417066, "comment_id": 56666978, "body": "A top level variable is like saying &quot;use global variables&quot; and I think would only be applicable if you had other top level functions that needed to use a logger.  At that point though, it might be better to pass in a logger to any utility function that wants to log."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "reply_to_user": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451045360, "post_id": 34417066, "comment_id": 56667082, "body": "@JaysonMinard I think passing logger as a parameter would be an anti-pattern, because your logging should never affect your API, external or internal"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451045734, "post_id": 34417066, "comment_id": 56667168, "body": "Ok, then back to my point, for class level logging put the logger in the class, not a top level function."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1451045954, "post_id": 34417066, "comment_id": 56667234, "body": "Well, logging by its nature is something &quot;global&quot; and &quot;top-level&quot;, so a package-level singleton makes a perfect fit. See my edit."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451049136, "post_id": 34417066, "comment_id": 56668016, "body": "He was specifically asking about idiomatic class level logging.  His sample is class level logging.   You start off by saying you don&#39;t know the idiomatic answer.  Anyway, I&#39;ll leave my vote as-is."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "reply_to_user": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451103368, "post_id": 34417066, "comment_id": 56678807, "body": "@JaysonMinard, sorry, but I can&#39;t see how the question is about &quot;class level logging&quot;. If Java has not an alternative, does not mean one shouldn&#39;t consider it."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451103849, "post_id": 34417066, "comment_id": 56678886, "body": "@voddan at least provide a complete example of what type of logger you are creating.  <code>val log = what?!?</code>  ... creating a logger by name?  Ignoring the fact the question showed he was wanting to create a logger for a specific class <code>LoggerFactory.getLogger(Foo.class);</code>"}], "tags": [], "owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "is_accepted": false, "score": 1, "last_activity_date": 1596887655, "last_edit_date": 1596887655, "creation_date": 1450791163, "answer_id": 34417066, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/34417066#34417066", "title": "Idiomatic way of logging in Kotlin", "body": "<p>I have heard of no idiom in this regard.\nThe simpler the better, so I would use a top-level property</p>\n<pre><code>val logger = Logger.getLogger(&quot;package_name&quot;)\n</code></pre>\n<p>This practice serves well in Python, and as different as Kotlin and Python might appear, I believe they are quite similar in their &quot;spirit&quot; (speaking of idioms).</p>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451045028, "post_id": 34424034, "comment_id": 56667000, "body": "A companion object is not a static, it is a singleton that can hold members which may become static if you use <code>JvmStatic</code> annotation.  And in the future there may be more than one allowed.  Plus this answer isn&#39;t very helpful without more information or a sample."}, {"owner": {"reputation": 1254, "user_id": 3362350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e4500858d24434055bd01b57bdc734f?s=128&d=identicon&r=PG", "display_name": "Jacob Zimmerman", "link": "https://stackoverflow.com/users/3362350/jacob-zimmerman"}, "reply_to_user": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451370797, "post_id": 34424034, "comment_id": 56753067, "body": "I didn&#39;t say it was a static. I said it was for replacing statics. And why would there be more than one allowed? That doesn&#39;t make sense. Lastly, I was in a hurry, and I thought that pointing in the right direction would be helpful enough."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451399685, "post_id": 34424034, "comment_id": 56767032, "body": "A companion object isn&#39;t for replacing statics, but it can also make elements of it static.  Kotlin supported more than on companion for a time, and allows them to have other names.  Once you start naming them they act less like statics.  And it is left open in the future to have more than one named companion.  For example, one might be <code>Factory</code> and another <code>Helpers</code>"}], "tags": [], "owner": {"reputation": 1254, "user_id": 3362350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e4500858d24434055bd01b57bdc734f?s=128&d=identicon&r=PG", "display_name": "Jacob Zimmerman", "link": "https://stackoverflow.com/users/3362350/jacob-zimmerman"}, "is_accepted": false, "score": 0, "last_activity_date": 1450816554, "creation_date": 1450816554, "answer_id": 34424034, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/34424034#34424034", "title": "Idiomatic way of logging in Kotlin", "body": "<p>That's what companion objects are for, in general: replacing static stuff.</p>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451044869, "post_id": 34424382, "comment_id": 56666956, "body": "This answer is Android specific, and the question did not mention nor have an Android tag."}, {"owner": {"reputation": 110088, "user_id": 2196460, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mAcQx.png?s=128&g=1", "display_name": "hotkey", "link": "https://stackoverflow.com/users/2196460/hotkey"}, "reply_to_user": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451056255, "post_id": 34424382, "comment_id": 56669712, "body": "@JaysonMinard why is it? This approach is general purpose since, for example, having an unique logging tag for every class is useful in non-Android projects as well."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451057605, "post_id": 34424382, "comment_id": 56670021, "body": "It isn&#39;t clear you are saying &quot;implement something similar to what Anko did&quot; and instead seems more like &quot;use Anko&quot; ... which then requires an Android library called Anko.  Which has an interface that has extension functions that call <code>android.util.Log</code> to do logging.   Which was your intent?  use Anko?  Of build something similar while using Anko as an example (it is better if you just put the suggested code inline and fix it for non-Android instead of saying &quot;port this to non-Android, here&#39;s the link&quot;.  Instead you add sample code calling Anko)"}, {"owner": {"reputation": 110088, "user_id": 2196460, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mAcQx.png?s=128&g=1", "display_name": "hotkey", "link": "https://stackoverflow.com/users/2196460/hotkey"}, "reply_to_user": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451080529, "post_id": 34424382, "comment_id": 56675470, "body": "@JaysonMinard, thanks for your comments, I&#39;ve rewritten the post so that it now explains the approach rather than references Anko."}], "tags": [], "owner": {"reputation": 110088, "user_id": 2196460, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mAcQx.png?s=128&g=1", "display_name": "hotkey", "link": "https://stackoverflow.com/users/2196460/hotkey"}, "is_accepted": false, "score": 7, "last_activity_date": 1451086475, "last_edit_date": 1451086475, "creation_date": 1450818194, "answer_id": 34424382, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/34424382#34424382", "title": "Idiomatic way of logging in Kotlin", "body": "<p>As a good example of logging implementation I'd like to mention <a href=\"https://github.com/Kotlin/anko\" rel=\"nofollow\">Anko</a> which uses a special interface <code>AnkoLogger</code> which a class that needs logging should implement. Inside the interface there's code that generates a logging tag for the class. Logging is then done via extension functions which can be called inside the interace implementation without prefixes or even logger instance creation.</p>\n\n<p>I don't think this is <em>idiomatic</em>, but it seems a good approach as it requires minimum code, just adding the interface to a class declaration, and you get logging with different tags for different classes.</p>\n\n<p><hr>\nThe code below is basically <a href=\"https://github.com/Kotlin/anko/blob/master/dsl/static/src/common/Logger.kt\" rel=\"nofollow\">AnkoLogger</a>, simplified and rewritten for Android-agnostic usage.</p>\n\n<p>First, there's an interface which behaves like a marker interface:</p>\n\n<pre><code>interface MyLogger {\n    val tag: String get() = javaClass.simpleName\n}\n</code></pre>\n\n<p>It lets its implementation use the extensions functions for <code>MyLogger</code> inside their code just calling them on <code>this</code>. And it also contains logging tag.</p>\n\n<p>Next, there is a general entry point for different logging methods:</p>\n\n<pre><code>private inline fun log(logger: MyLogger,\n                       message: Any?,\n                       throwable: Throwable?,\n                       level: Int,\n                       handler: (String, String) -&gt; Unit,\n                       throwableHandler: (String, String, Throwable) -&gt; Unit\n) {\n    val tag = logger.tag\n    if (isLoggingEnabled(tag, level)) {\n        val messageString = message?.toString() ?: \"null\"\n        if (throwable != null)\n            throwableHandler(tag, messageString, throwable)\n        else\n            handler(tag, messageString)\n    }\n}\n</code></pre>\n\n<p>It will be called by logging methods. It gets a tag from <code>MyLogger</code> implementation, checks logging settings and then calls one of two handlers, the one with <code>Throwable</code> argument and the one without.</p>\n\n<p>Then you can define as many logging methods as you like, in this way:</p>\n\n<pre><code>fun MyLogger.info(message: Any?, throwable: Throwable? = null) =\n        log(this, message, throwable, LoggingLevels.INFO,\n            { tag, message -&gt; println(\"INFO: $tag # $message\") },\n            { tag, message, thr -&gt; \n                println(\"INFO: $tag # $message # $throwable\");\n                thr.printStackTrace()\n            })\n</code></pre>\n\n<p>These are defined once for both logging just a message and logging a <code>Throwable</code> as well, this is done with optional <code>throwable</code> parameter.</p>\n\n<p>The functions that are passed as <code>handler</code> and <code>throwableHandler</code> can be different for different logging methods, for example, they can write the log to file or upload it somewhere. <code>isLoggingEnabled</code> and <code>LoggingLevels</code> are omitted for brevity, but using them  provides even more flexibility.</p>\n\n<p><hr>\nIt allows for the following usage: </p>\n\n<pre><code>class MyClass : MyLogger {\n    fun myFun() {\n        info(\"Info message\")\n    }\n}\n</code></pre>\n\n<p>There is a small drawback: a logger object will be needed for logging in package-level functions:</p>\n\n<pre><code>private object MyPackageLog : MyLogger\n\nfun myFun() {\n    MyPackageLog.info(\"Info message\")\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451045419, "post_id": 34458828, "comment_id": 56667094, "body": "This answer needs more explanation, if the person asking doesn&#39;t understand companion objects, they probably haven&#39;t gotten to delegates, and therefore won&#39;t know what this is doing.  Plus there is very little savings in code using this model.   And I doubt the caching in the companion object is really a performance gain other than in a restricted system with small CPU such as Android."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451046048, "post_id": 34458828, "comment_id": 56667263, "body": "What this code above is showing is the creation of a class that acts as a Delegate (see <a href=\"https://kotlinlang.org/docs/reference/delegated-properties.html\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/delegated-properties.html</a>) which is the first class <code>LoggerDelegate</code>   And then it is creating a top level function that is making it easier to create an instance of the delegate (not much easier, but a little).  And that function should be changed to be <code>inline</code>.  Then it uses the delegate to provide a logger whenever one is desired.  But it provides one for the companion <code>Foo.Companion</code> and not for the class <code>Foo</code> so is maybe not as intended."}, {"owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "reply_to_user": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451124416, "post_id": 34458828, "comment_id": 56682170, "body": "@JaysonMinard I agree but I&#39;ll leave the answer up for future viewers who want a &quot;quick fix&quot; or an example of how to apply this to their own projects. I don&#39;t understand why the <code>logger()</code> function should be <code>inline</code> if no lambdas are present. IntelliJ suggests inlining in this case is unnecessary: <a href=\"http://i.imgur.com/YQH3NB1.png\" rel=\"nofollow noreferrer\">i.imgur.com/YQH3NB1.png</a>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451137151, "post_id": 34458828, "comment_id": 56684925, "body": "I incorporated your answer into mine, and simplified it by removing the custom delegate class and used a wrapper around <code>Lazy</code> instead.  With a trick to get it to know what class it is within."}], "tags": [], "owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "is_accepted": false, "score": 4, "last_activity_date": 1451000351, "creation_date": 1451000351, "answer_id": 34458828, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/34458828#34458828", "title": "Idiomatic way of logging in Kotlin", "body": "<p>Would something like this work for you?</p>\n\n<pre><code>class LoggerDelegate {\n\n    private var logger: Logger? = null\n\n    operator fun getValue(thisRef: Any?, property: KProperty&lt;*&gt;): Logger {\n        if (logger == null) logger = Logger.getLogger(thisRef!!.javaClass.name)\n        return logger!!\n    }\n\n}\n\nfun logger() = LoggerDelegate()\n\nclass Foo { // (by the way, everything in Kotlin is public by default)\n    companion object { val logger by logger() }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451046430, "post_id": 34462577, "comment_id": 56667351, "body": "Some dependency injection frameworks use delegates like you see in another answer here.  They look like ` val log: Logger by injectLogger()` and allow the logging system to be injected and unknown to the using code.  (My injection framework showing this is at <a href=\"https://github.com/kohesive/injekt\" rel=\"nofollow noreferrer\">github.com/kohesive/injekt</a>)"}, {"owner": {"reputation": 2882, "user_id": 544454, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/ieSjS.png?s=128&g=1", "display_name": "mchlstckl", "link": "https://stackoverflow.com/users/544454/mchlstckl"}, "edited": false, "score": 10, "creation_date": 1451149854, "post_id": 34462577, "comment_id": 56688265, "body": "Thanks for the extensive answer. Very informative. I particularly like the  <b>Property Delegates (common, most elegant)</b> implementation."}, {"owner": {"reputation": 13177, "user_id": 411965, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/UVUN2.jpg?s=128&g=1", "display_name": "oshai", "link": "https://stackoverflow.com/users/411965/oshai"}, "edited": false, "score": 6, "creation_date": 1456604060, "post_id": 34462577, "comment_id": 59028510, "body": "I think there was a change in kotlin syntax. and the unwrap should be <code>ofClass.enclosingClass.kotlin.objectInstance?.javaClass</code> instead of <code>ofClass.enclosingClass.kotlin.companionObject?.java</code>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 13177, "user_id": 411965, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/UVUN2.jpg?s=128&g=1", "display_name": "oshai", "link": "https://stackoverflow.com/users/411965/oshai"}, "edited": false, "score": 0, "creation_date": 1456669940, "post_id": 34462577, "comment_id": 59044917, "body": "@oshai No, unwrap is not trying to compare to the singleton instance of a <code>object</code> declaration, but rather find out if it is the companion object of a class.  The code above is correct.  <code>objectInstance</code> is something else unrelated to companion object."}, {"owner": {"reputation": 13177, "user_id": 411965, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/UVUN2.jpg?s=128&g=1", "display_name": "oshai", "link": "https://stackoverflow.com/users/411965/oshai"}, "edited": false, "score": 0, "creation_date": 1456731646, "post_id": 34462577, "comment_id": 59065325, "body": "@JaysonMinard thanks, however it is not compiled in my intellij. maybe an import I am missing?"}, {"owner": {"reputation": 481, "user_id": 617232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1fd29e558765db544be2245cf953912?s=128&d=identicon&r=PG", "display_name": "Hoang Tran", "link": "https://stackoverflow.com/users/617232/hoang-tran"}, "edited": false, "score": 0, "creation_date": 1465716329, "post_id": 34462577, "comment_id": 63011662, "body": "hello, it seems that importing companionObject like oshai suggest doesn&#39;t work now. Any suggestion?"}, {"owner": {"reputation": 481, "user_id": 617232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1fd29e558765db544be2245cf953912?s=128&d=identicon&r=PG", "display_name": "Hoang Tran", "link": "https://stackoverflow.com/users/617232/hoang-tran"}, "edited": false, "score": 1, "creation_date": 1465716976, "post_id": 34462577, "comment_id": 63011803, "body": "ah, never mind, as stated here <a href=\"https://kotlinlang.org/docs/reference/reflection.html\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/reflection.html</a> the reflect jar is shipped separately from the stdlib, for gradle we need this: <code>compile &#39;org.jetbrains.kotlin:kotlin-reflect:1.0.2&#39;</code>"}, {"owner": {"reputation": 16758, "user_id": 444639, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/76bfe9645715492707b67ed7d04bc73a?s=128&d=identicon&r=PG", "display_name": "Mike Rylander", "link": "https://stackoverflow.com/users/444639/mike-rylander"}, "edited": false, "score": 1, "creation_date": 1505918982, "post_id": 34462577, "comment_id": 79611147, "body": "The code for creating the &#39;Property Delegates&#39; and the &#39;Extension Functions&#39; appear to be the same except for the return type. The code sample for the Property Delegate (<code>public fun &lt;R : Any&gt; R.logger(): Lazy&lt;Logger&gt; { return lazy{Logger.getLogger(unwrapCompanionClass(this.javaClass).n&zwnj;&#8203;ame)}}</code>) appears to create an extension function such that <code>&quot;&quot;.logger()</code> is now a thing, is this supposed behave this way?"}, {"owner": {"reputation": 421, "user_id": 1966794, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LG9m1.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/1966794/casper"}, "edited": false, "score": 0, "creation_date": 1510586532, "post_id": 34462577, "comment_id": 81486065, "body": "Great answer! Only thing I&#39;d like to change is the, imo, slightly more idiomatic way to write unwrapCompanionClass:  <code>fun &lt;T : Any&gt; unwrapCompanionClass(ofClass: Class&lt;T&gt;): Class&lt;*&gt; {     return ofClass.enclosingClass?.takeIf { ofClass.enclosingClass.kotlin.companionObject?.java == ofClass }             ?: ofClass }</code>"}, {"owner": {"reputation": 866, "user_id": 701285, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4ae4ad6f62b0b8972c4af1748d2ea75c?s=128&d=identicon&r=PG", "display_name": "randomUser56789", "link": "https://stackoverflow.com/users/701285/randomuser56789"}, "reply_to_user": {"reputation": 16758, "user_id": 444639, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/76bfe9645715492707b67ed7d04bc73a?s=128&d=identicon&r=PG", "display_name": "Mike Rylander", "link": "https://stackoverflow.com/users/444639/mike-rylander"}, "edited": false, "score": 0, "creation_date": 1521124006, "post_id": 34462577, "comment_id": 85605856, "body": "@MikeRylander would like to second this. Indeed there seems to be no difference in terms of namespace pollution."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 421, "user_id": 1966794, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LG9m1.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/1966794/casper"}, "edited": false, "score": 0, "creation_date": 1521597263, "post_id": 34462577, "comment_id": 85795596, "body": "Thanks @Casper, changing"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 16758, "user_id": 444639, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/76bfe9645715492707b67ed7d04bc73a?s=128&d=identicon&r=PG", "display_name": "Mike Rylander", "link": "https://stackoverflow.com/users/444639/mike-rylander"}, "edited": false, "score": 0, "creation_date": 1521597950, "post_id": 34462577, "comment_id": 85795761, "body": "@MikeRylander , yes that is a side effect, but it is specifically designed to work as a delegate that can automatically know the class it is contained within, and so it is required that it secretly is an extension function on the class in which you are using it, which allows it to be a drop in delegate.  There used to be a way to only allow it to extend classes that had companion objects but that does not exist anymore and therefore it can pollute the namespace if you do not restrict R by some marker interface or base class.  If I think of a better drop-in way, I&#39;ll update it."}, {"owner": {"reputation": 4908, "user_id": 2013835, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/mppN1.jpg?s=128&g=1", "display_name": "JJ86", "link": "https://stackoverflow.com/users/2013835/jj86"}, "edited": false, "score": 0, "creation_date": 1530796288, "post_id": 34462577, "comment_id": 89365998, "body": "Awesome answer, thank you! I learned a lot, but may I suggest to change <i>unwrapCompanionClass(forClass).name</i> to <i>unwrapCompanionClass(forClass).simpleName</i> ? Just in case the class is hidden in package and tag length is more then 23 characters."}], "tags": [], "owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "is_accepted": true, "score": 271, "last_activity_date": 1557067641, "last_edit_date": 1557067641, "creation_date": 1451044196, "answer_id": 34462577, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/34462577#34462577", "title": "Idiomatic way of logging in Kotlin", "body": "<p>In the majority of mature Kotlin code, you will find one of these patterns below.  The approach using <strong>Property Delegates</strong> takes advantage of the power of Kotlin to produce the smallest code.  </p>\n\n<p><em>Note: the code here is for <code>java.util.Logging</code> but the same theory applies to any logging library</em></p>\n\n<p><strong>Static-like</strong> (common, equivalent of your Java code in the question)</p>\n\n<p>If you cannot trust in the performance of that hash lookup inside the logging system, you can get similar behavior to your Java code by using a companion object which can hold an instance and feel like a static to you.   </p>\n\n<pre><code>class MyClass {\n    companion object {\n        val LOG = Logger.getLogger(MyClass::class.java.name) \n    }\n\n    fun foo() {\n        LOG.warning(\"Hello from MyClass\")\n    }\n}  \n</code></pre>\n\n<p>creating output:</p>\n\n<blockquote>\n  <p>Dec 26, 2015 11:28:32 AM <code>org.stackoverflow.kotlin.test.MyClass</code> foo\n  INFO: Hello from MyClass</p>\n</blockquote>\n\n<p>More on companion objects here: <a href=\"https://kotlinlang.org/docs/reference/classes.html#companion-objects\" rel=\"noreferrer\">Companion Objects</a>   ... Also note that in the sample above <code>MyClass::class.java</code> gets the instance of type <code>Class&lt;MyClass&gt;</code> for the logger, whereas <code>this.javaClass</code> would get the instance of type <code>Class&lt;MyClass.Companion&gt;</code>. </p>\n\n<p><strong>Per Instance of a Class</strong> (common)</p>\n\n<p>But, there is really no reason to avoid calling and getting a logger at the instance level.   The idiomatic Java way you mentioned is outdated and based on fear of performance, whereas the logger per class is already cached by almost any reasonable logging system on the planet.   Just create a member to hold the logger object.   </p>\n\n<pre><code>class MyClass {\n  val LOG = Logger.getLogger(this.javaClass.name)\n\n  fun foo() {\n        LOG.warning(\"Hello from MyClass\")\n  }\n} \n</code></pre>\n\n<p>creating output:</p>\n\n<blockquote>\n  <p>Dec 26, 2015 11:28:44 AM org.stackoverflow.kotlin.test.MyClass foo\n  INFO: Hello from MyClass</p>\n</blockquote>\n\n<p>You can performance test both per instance and per class variations and see if there is a realistic difference for most apps.</p>\n\n<p><strong>Property Delegates</strong> (common, most elegant)</p>\n\n<p>Another approach, which is suggested by @Jire in another answer, is to create a property delegate, which you can then use to do the logic uniformly in any other class that you want.  There is a simpler way to do this since Kotlin provides a <code>Lazy</code> delegate already, we can just wrap it in a function.  One trick here is that if we want to know the type of the class currently using the delegate, we make it an extension function on any class:</p>\n\n<pre><code>fun &lt;R : Any&gt; R.logger(): Lazy&lt;Logger&gt; {\n    return lazy { Logger.getLogger(unwrapCompanionClass(this.javaClass).name) }\n}\n// see code for unwrapCompanionClass() below in \"Putting it all Together section\"\n</code></pre>\n\n<p>This code also makes sure that if you use it in a Companion Object that the logger name will be the same as if you used it on the class itself.  Now you can simply:</p>\n\n<pre><code>class Something {\n    val LOG by logger()\n\n    fun foo() {\n        LOG.info(\"Hello from Something\")\n    }\n}\n</code></pre>\n\n<p>for per class instance, or if you want it to be more static with one instance per class:</p>\n\n<pre><code>class SomethingElse {\n    companion object {\n        val LOG by logger()\n\n    }\n\n    fun foo() {\n        LOG.info(\"Hello from SomethingElse\")\n    }\n}\n</code></pre>\n\n<p>And your output from calling <code>foo()</code> on both of these classes would be:</p>\n\n<blockquote>\n  <p>Dec 26, 2015 11:30:55 AM org.stackoverflow.kotlin.test.Something foo\n  INFO: Hello from Something</p>\n  \n  <p>Dec 26, 2015 11:30:55 AM org.stackoverflow.kotlin.test.SomethingElse foo\n  INFO: Hello from SomethingElse</p>\n</blockquote>\n\n<p><strong>Extension Functions</strong> (uncommon in this case because of \"pollution\" of Any namespace)</p>\n\n<p>Kotlin has a few hidden tricks that let you make some of this code even smaller.  You can create extension functions on classes and therefore give them additional functionality.  One suggestion in the comments above was to extend <code>Any</code> with a logger function.  This can create noise anytime someone uses code-completion in their IDE in any class.  But there is a secret benefit to extending <code>Any</code> or some other marker interface:  you can imply that you are extending your own class and therefore detect the class you are within.  Huh?  To be less confusing, here is the code:</p>\n\n<pre><code>// extend any class with the ability to get a logger\nfun &lt;T: Any&gt; T.logger(): Logger {\n     return Logger.getLogger(unwrapCompanionClass(this.javaClass).name)\n}\n</code></pre>\n\n<p>Now within a class (or companion object), I can simply call this extension on my own class:</p>\n\n<pre><code>class SomethingDifferent {\n    val LOG = logger()\n\n    fun foo() {\n        LOG.info(\"Hello from SomethingDifferent\")\n    }\n}\n</code></pre>\n\n<p>Producing output:</p>\n\n<blockquote>\n  <p>Dec 26, 2015 11:29:12 AM org.stackoverflow.kotlin.test.SomethingDifferent foo\n  INFO: Hello from SomethingDifferent</p>\n</blockquote>\n\n<p>Basically, the code is seen as a call to extension <code>Something.logger()</code>.  The problem is that the following could also be true creating \"pollution\" on other classes:</p>\n\n<pre><code>val LOG1 = \"\".logger()\nval LOG2 = Date().logger()\nval LOG3 = 123.logger()\n</code></pre>\n\n<p><strong>Extension Functions on Marker Interface</strong> (not sure how common, but common model for \"traits\")</p>\n\n<p>To make the use of extensions cleaner and reduce \"pollution\", you could use a marker interface to extend:</p>\n\n<pre><code>interface Loggable {} \n\nfun Loggable.logger(): Logger {\n     return Logger.getLogger(unwrapCompanionClass(this.javaClass).name)\n}    \n</code></pre>\n\n<p>Or even make the method part of the interface with a default implementation:</p>\n\n<pre><code>interface Loggable {\n    public fun logger(): Logger {\n        return Logger.getLogger(unwrapCompanionClass(this.javaClass).name)\n    }\n}\n</code></pre>\n\n<p>And use either of these variations in your class:</p>\n\n<pre><code>class MarkedClass: Loggable {\n    val LOG = logger()\n}\n</code></pre>\n\n<p>Producing output:</p>\n\n<blockquote>\n  <p>Dec 26, 2015 11:41:01 AM org.stackoverflow.kotlin.test.MarkedClass foo\n  INFO: Hello from MarkedClass</p>\n</blockquote>\n\n<p>If you wanted to force the creation of a uniform field to hold the logger, then while using this interface you could easily require the implementer to have a field such as <code>LOG</code>:</p>\n\n<pre><code>interface Loggable {\n    val LOG: Logger  // abstract required field\n\n    public fun logger(): Logger {\n        return Logger.getLogger(unwrapCompanionClass(this.javaClass).name)\n    }\n}\n</code></pre>\n\n<p>Now the implementer of the interface must look like this:</p>\n\n<pre><code>class MarkedClass: Loggable {\n    override val LOG: Logger = logger()\n}\n</code></pre>\n\n<p>Of course, an abstract base class can do the same, having the option of both the interface and an abstract class implementing that interface allows flexibility and uniformity:</p>\n\n<pre><code>abstract class WithLogging: Loggable {\n    override val LOG: Logger = logger()\n}\n\n// using the logging from the base class\nclass MyClass1: WithLogging() {\n    // ... already has logging!\n}\n\n// providing own logging compatible with marker interface\nclass MyClass2: ImportantBaseClass(), Loggable {\n    // ... has logging that we can understand, but doesn't change my hierarchy\n    override val LOG: Logger = logger()\n}\n\n// providing logging from the base class via a companion object so our class hierarchy is not affected\nclass MyClass3: ImportantBaseClass() {\n    companion object : WithLogging() {\n       // we have the LOG property now!\n    }\n}\n</code></pre>\n\n<p><strong>Putting it All Together</strong> (A small helper library)</p>\n\n<p>Here is a small helper library to make any of the options above easy to use.  It is common in Kotlin to extend API's to make them more to your liking.  Either in extension or top-level functions.  Here is a mix to give you options for how to create loggers, and a sample showing all variations:</p>\n\n<pre><code>// Return logger for Java class, if companion object fix the name\nfun &lt;T: Any&gt; logger(forClass: Class&lt;T&gt;): Logger {\n    return Logger.getLogger(unwrapCompanionClass(forClass).name)\n}\n\n// unwrap companion class to enclosing class given a Java Class\nfun &lt;T : Any&gt; unwrapCompanionClass(ofClass: Class&lt;T&gt;): Class&lt;*&gt; { \n   return ofClass.enclosingClass?.takeIf { \n      ofClass.enclosingClass.kotlin.companionObject?.java == ofClass \n   } ?: ofClass \n}\n\n// unwrap companion class to enclosing class given a Kotlin Class\nfun &lt;T: Any&gt; unwrapCompanionClass(ofClass: KClass&lt;T&gt;): KClass&lt;*&gt; {\n   return unwrapCompanionClass(ofClass.java).kotlin\n}\n\n// Return logger for Kotlin class\nfun &lt;T: Any&gt; logger(forClass: KClass&lt;T&gt;): Logger {\n    return logger(forClass.java)\n}\n\n// return logger from extended class (or the enclosing class)\nfun &lt;T: Any&gt; T.logger(): Logger {\n    return logger(this.javaClass)\n}\n\n// return a lazy logger property delegate for enclosing class\nfun &lt;R : Any&gt; R.lazyLogger(): Lazy&lt;Logger&gt; {\n    return lazy { logger(this.javaClass) }\n}\n\n// return a logger property delegate for enclosing class\nfun &lt;R : Any&gt; R.injectLogger(): Lazy&lt;Logger&gt; {\n    return lazyOf(logger(this.javaClass))\n}\n\n// marker interface and related extension (remove extension for Any.logger() in favour of this)\ninterface Loggable {}\nfun Loggable.logger(): Logger = logger(this.javaClass)\n\n// abstract base class to provide logging, intended for companion objects more than classes but works for either\nabstract class WithLogging: Loggable {\n    val LOG = logger()\n}\n</code></pre>\n\n<p>Pick whichever of those you want to keep, and here are all of the options in use:</p>\n\n<pre><code>class MixedBagOfTricks {\n    companion object {\n        val LOG1 by lazyLogger()          // lazy delegate, 1 instance per class\n        val LOG2 by injectLogger()        // immediate, 1 instance per class\n        val LOG3 = logger()               // immediate, 1 instance per class\n        val LOG4 = logger(this.javaClass) // immediate, 1 instance per class\n    }\n\n    val LOG5 by lazyLogger()              // lazy delegate, 1 per instance of class\n    val LOG6 by injectLogger()            // immediate, 1 per instance of class\n    val LOG7 = logger()                   // immediate, 1 per instance of class\n    val LOG8 = logger(this.javaClass)     // immediate, 1 instance per class\n}\n\nval LOG9 = logger(MixedBagOfTricks::class)  // top level variable in package\n\n// or alternative for marker interface in class\nclass MixedBagOfTricks : Loggable {\n    val LOG10 = logger()\n}\n\n// or alternative for marker interface in companion object of class\nclass MixedBagOfTricks {\n    companion object : Loggable {\n        val LOG11 = logger()\n    }\n}\n\n// or alternative for abstract base class for companion object of class\nclass MixedBagOfTricks {\n    companion object: WithLogging() {} // instance 12\n\n    fun foo() {\n       LOG.info(\"Hello from MixedBagOfTricks\")\n    }\n}\n\n// or alternative for abstract base class for our actual class\nclass MixedBagOfTricks : WithLogging() { // instance 13\n    fun foo() {\n       LOG.info(\"Hello from MixedBagOfTricks\")\n    }\n}\n</code></pre>\n\n<p>All 13 instances of the loggers created in this sample will produce the same logger name, and output:</p>\n\n<blockquote>\n  <p>Dec 26, 2015 11:39:00 AM org.stackoverflow.kotlin.test.MixedBagOfTricks foo\n  INFO: Hello from MixedBagOfTricks</p>\n</blockquote>\n\n<p><em>Note:</em>  The <code>unwrapCompanionClass()</code> method ensures that we do not generate a logger named after the companion object but rather the enclosing class.  This is the current recommended way to find the class containing the companion object.  Stripping \"<strong>$Companion</strong>\" from the name using <code>removeSuffix()</code> does not work since companion objects can be given custom names.</p>\n"}, {"comments": [{"owner": {"reputation": 129, "user_id": 4880698, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0ngSY.png?s=128&g=1", "display_name": "IPat", "link": "https://stackoverflow.com/users/4880698/ipat"}, "edited": false, "score": 1, "creation_date": 1521043489, "post_id": 35857042, "comment_id": 85567622, "body": "If I&#39;m right, you&#39;re able to avoid typing out the class name in the first solution you provided by changing the method signature to T.logger()"}, {"owner": {"reputation": 12732, "user_id": 430128, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c2aa2c9f527afea12a7fef458588b2a1?s=128&d=identicon&r=PG", "display_name": "Raman", "link": "https://stackoverflow.com/users/430128/raman"}, "reply_to_user": {"reputation": 129, "user_id": 4880698, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0ngSY.png?s=128&g=1", "display_name": "IPat", "link": "https://stackoverflow.com/users/4880698/ipat"}, "edited": false, "score": 1, "creation_date": 1521065539, "post_id": 35857042, "comment_id": 85580010, "body": "@IPat yup, the first solution intentionally does not do that to remain close to the &quot;java way&quot;. The second part of the answer covers the extension case <code>T.logger()</code> -- see the bottom of the code sample."}], "tags": [], "owner": {"reputation": 12732, "user_id": 430128, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c2aa2c9f527afea12a7fef458588b2a1?s=128&d=identicon&r=PG", "display_name": "Raman", "link": "https://stackoverflow.com/users/430128/raman"}, "is_accepted": false, "score": 6, "last_activity_date": 1546669516, "last_edit_date": 1546669516, "creation_date": 1457398572, "answer_id": 35857042, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/35857042#35857042", "title": "Idiomatic way of logging in Kotlin", "body": "<h1>KISS: For Java Teams Migrating to Kotlin</h1>\n\n<p>If you don't mind providing the class name on each instantiation of the logger (just like java), you can keep it simple by defining this as a top-level function somewhere in your project:</p>\n\n<pre><code>import org.slf4j.LoggerFactory\n\ninline fun &lt;reified T:Any&gt; logger() = LoggerFactory.getLogger(T::class.java)\n</code></pre>\n\n<p>This uses a Kotlin <a href=\"https://kotlinlang.org/docs/reference/inline-functions.html#reified-type-parameters\" rel=\"nofollow noreferrer\">reified type parameter</a>.</p>\n\n<p>Now, you can use this as follows:</p>\n\n<pre><code>class SomeClass {\n  // or within a companion object for one-instance-per-class\n  val log = logger&lt;SomeClass&gt;()\n  ...\n}\n</code></pre>\n\n<p>This approach is super-simple and close to the java equivalent, but just adds some syntactical sugar. </p>\n\n<h1>Next Step: Extensions or Delegates</h1>\n\n<p>I personally prefer going one step further and using the extensions or delegates approach. This is nicely summarized in @JaysonMinard's answer, but here is the TL;DR for the \"Delegate\" approach with the log4j2 API (<strong>UPDATE</strong>: no need to write this code manually any more, as it has been released as an official module of the log4j2 project, see below).  Since log4j2, unlike slf4j, supports logging with <code>Supplier</code>'s, I've also added a delegate to make using these methods simpler.</p>\n\n<pre><code>import org.apache.logging.log4j.LogManager\nimport org.apache.logging.log4j.Logger\nimport org.apache.logging.log4j.util.Supplier\nimport kotlin.reflect.companionObject\n\n/**\n * An adapter to allow cleaner syntax when calling a logger with a Kotlin lambda. Otherwise calling the\n * method with a lambda logs the lambda itself, and not its evaluation. We specify the Lambda SAM type as a log4j2 `Supplier`\n * to avoid this. Since we are using the log4j2 api here, this does not evaluate the lambda if the level\n * is not enabled.\n */\nclass FunctionalLogger(val log: Logger): Logger by log {\n  inline fun debug(crossinline supplier: () -&gt; String) {\n    log.debug(Supplier { supplier.invoke() })\n  }\n\n  inline fun debug(t: Throwable, crossinline supplier: () -&gt; String) {\n    log.debug(Supplier { supplier.invoke() }, t)\n  }\n\n  inline fun info(crossinline supplier: () -&gt; String) {\n    log.info(Supplier { supplier.invoke() })\n  }\n\n  inline fun info(t: Throwable, crossinline supplier: () -&gt; String) {\n    log.info(Supplier { supplier.invoke() }, t)\n  }\n\n  inline fun warn(crossinline supplier: () -&gt; String) {\n    log.warn(Supplier { supplier.invoke() })\n  }\n\n  inline fun warn(t: Throwable, crossinline supplier: () -&gt; String) {\n    log.warn(Supplier { supplier.invoke() }, t)\n  }\n\n  inline fun error(crossinline supplier: () -&gt; String) {\n    log.error(Supplier { supplier.invoke() })\n  }\n\n  inline fun error(t: Throwable, crossinline supplier: () -&gt; String) {\n    log.error(Supplier { supplier.invoke() }, t)\n  }\n}\n\n/**\n * A delegate-based lazy logger instantiation. Use: `val log by logger()`.\n */\n@Suppress(\"unused\")\ninline fun &lt;reified T : Any&gt; T.logger(): Lazy&lt;FunctionalLogger&gt; =\n  lazy { FunctionalLogger(LogManager.getLogger(unwrapCompanionClass(T::class.java))) }\n\n// unwrap companion class to enclosing class given a Java Class\nfun &lt;T : Any&gt; unwrapCompanionClass(ofClass: Class&lt;T&gt;): Class&lt;*&gt; {\n  return if (ofClass.enclosingClass != null &amp;&amp; ofClass.enclosingClass.kotlin.companionObject?.java == ofClass) {\n    ofClass.enclosingClass\n  } else {\n    ofClass\n  }\n}\n</code></pre>\n\n<h1>Log4j2 Kotlin Logging API</h1>\n\n<p>Most of the previous section has been directly adapted to produce the <a href=\"https://logging.apache.org/log4j/kotlin/index.html\" rel=\"nofollow noreferrer\">Kotlin Logging API</a> module, which is now an official part of Log4j2 (disclaimer: I am the primary author). You can download this <a href=\"https://logging.apache.org/log4j/kotlin/download.html\" rel=\"nofollow noreferrer\">directly from Apache</a>, or via <a href=\"https://search.maven.org/search?q=a:log4j-api-kotlin\" rel=\"nofollow noreferrer\">Maven Central</a>.</p>\n\n<p><a href=\"https://logging.apache.org/log4j/kotlin/usage.html\" rel=\"nofollow noreferrer\">Usage</a> is basically as describe above, but the module supports both interface-based logger access, a <code>logger</code> extension function on <code>Any</code> for use where <code>this</code> is defined, and a named logger function for use where no <code>this</code> is defined (such as top-level functions).</p>\n"}, {"tags": [], "owner": {"reputation": 3549, "user_id": 59724, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/50954aec029a724824dca5a32a1c00fa?s=128&d=identicon&r=PG", "display_name": "Graham", "link": "https://stackoverflow.com/users/59724/graham"}, "is_accepted": false, "score": 1, "last_activity_date": 1464870537, "creation_date": 1464870537, "answer_id": 37591899, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/37591899#37591899", "title": "Idiomatic way of logging in Kotlin", "body": "<p>What about an extension function on Class instead? That way you end up with:</p>\n\n<pre><code>public fun KClass.logger(): Logger = LoggerFactory.getLogger(this.java)\n\nclass SomeClass {\n    val LOG = SomeClass::class.logger()\n}\n</code></pre>\n\n<p>Note - I've not tested this at all, so it might not be quite right.</p>\n"}, {"tags": [], "owner": {"reputation": 50303, "user_id": 170842, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/c2ea72b8d001d81fb6ce3f356e45eb3a?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/170842/michael"}, "is_accepted": false, "score": 1, "last_activity_date": 1465380065, "creation_date": 1465380065, "answer_id": 37699314, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/37699314#37699314", "title": "Idiomatic way of logging in Kotlin", "body": "<p>First, you can add extension functions for logger creation.</p>\n\n<pre><code>inline fun &lt;reified T : Any&gt; getLogger() = LoggerFactory.getLogger(T::class.java)\nfun &lt;T : Any&gt; T.getLogger() = LoggerFactory.getLogger(javaClass)\n</code></pre>\n\n<p>Then you will be able to create a logger using the following code.</p>\n\n<pre><code>private val logger1 = getLogger&lt;SomeClass&gt;()\nprivate val logger2 = getLogger()\n</code></pre>\n\n<p>Second, you can define an interface that provides a logger and its mixin implementation.</p>\n\n<pre><code>interface LoggerAware {\n  val logger: Logger\n}\n\nclass LoggerAwareMixin(containerClass: Class&lt;*&gt;) : LoggerAware {\n  override val logger: Logger = LoggerFactory.getLogger(containerClass)\n}\n\ninline fun &lt;reified T : Any&gt; loggerAware() = LoggerAwareMixin(T::class.java)\n</code></pre>\n\n<p>This interface can be used in the following way.</p>\n\n<pre><code>class SomeClass : LoggerAware by loggerAware&lt;SomeClass&gt;() {\n  // Now you can use a logger here.\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 9549, "user_id": 317522, "user_type": "registered", "accept_rate": 11, "profile_image": "https://i.stack.imgur.com/y7DXx.jpg?s=128&g=1", "display_name": "Paulo Merson", "link": "https://stackoverflow.com/users/317522/paulo-merson"}, "edited": false, "score": 0, "creation_date": 1587394366, "post_id": 38192491, "comment_id": 108487572, "body": "May I suggest you edit your answer to show the <i>output</i> of <code>logger.info()</code> calls, as Jayson did in his accepted answer."}], "tags": [], "owner": {"reputation": 13177, "user_id": 411965, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/UVUN2.jpg?s=128&g=1", "display_name": "oshai", "link": "https://stackoverflow.com/users/411965/oshai"}, "is_accepted": false, "score": 36, "last_activity_date": 1534962553, "last_edit_date": 1534962553, "creation_date": 1467668055, "answer_id": 38192491, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/38192491#38192491", "title": "Idiomatic way of logging in Kotlin", "body": "<p>Have a look at the <a href=\"https://github.com/MicroUtils/kotlin-logging\" rel=\"noreferrer\">kotlin-logging</a> library.<br>\nIt allows logging like that:</p>\n\n<pre><code>private val logger = KotlinLogging.logger {}\n\nclass Foo {\n  logger.info{\"wohoooo $wohoooo\"}\n}\n</code></pre>\n\n<p>Or like that:  </p>\n\n<pre><code>class FooWithLogging {\n  companion object: KLogging()\n  fun bar() {\n    logger.info{\"wohoooo $wohoooo\"}\n  }\n}\n</code></pre>\n\n<p>I also wrote a blog post comparing it to <code>AnkoLogger</code>: <a href=\"https://medium.com/@OhadShai/logging-in-android-ankologger-vs-kotlin-logging-bb693671442a\" rel=\"noreferrer\">Logging in Kotlin &amp; Android: AnkoLogger vs kotlin-logging</a> </p>\n\n<p>Disclaimer: I am the maintainer of that library.</p>\n\n<p>Edit: kotlin-logging now has multiplatform support: <a href=\"https://github.com/MicroUtils/kotlin-logging/wiki/Multiplatform-support\" rel=\"noreferrer\">https://github.com/MicroUtils/kotlin-logging/wiki/Multiplatform-support</a></p>\n"}, {"tags": [], "owner": {"reputation": 167, "user_id": 1215998, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QBgjs.jpg?s=128&g=1", "display_name": "Liu Dong", "link": "https://stackoverflow.com/users/1215998/liu-dong"}, "is_accepted": false, "score": 0, "last_activity_date": 1467778476, "last_edit_date": 1467778476, "creation_date": 1467777292, "answer_id": 38216092, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/38216092#38216092", "title": "Idiomatic way of logging in Kotlin", "body": "<p>Slf4j example, same for others. This even works for creating package level logger</p>\n\n<pre><code>/**  \n  * Get logger by current class name.  \n  */ \n\nfun getLogger(c: () -&gt; Unit): Logger = \n        LoggerFactory.getLogger(c.javaClass.enclosingClass)\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>val logger = getLogger { }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17986, "user_id": 4730812, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d336a10204c1cd2e7fa47071ed629669?s=128&d=identicon&r=PG&f=1", "display_name": "piotrek1543", "link": "https://stackoverflow.com/users/4730812/piotrek1543"}, "is_accepted": false, "score": 4, "last_activity_date": 1521716409, "last_edit_date": 1521716409, "creation_date": 1471434332, "answer_id": 38995728, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/38995728#38995728", "title": "Idiomatic way of logging in Kotlin", "body": "<h3>Anko</h3>\n\n<p>You can use <a href=\"https://github.com/Kotlin/anko\" rel=\"nofollow noreferrer\"><code>Anko</code></a> library to do it. You would have code like below:</p>\n\n<pre><code>class MyActivity : Activity(), AnkoLogger {\n    private fun someMethod() {\n        info(\"This is my first app and it's awesome\")\n        debug(1234) \n        warn(\"Warning\")\n    }\n}\n</code></pre>\n\n<h3>kotlin-logging</h3>\n\n<p>kotlin-logging(<a href=\"https://github.com/MicroUtils/kotlin-logging\" rel=\"nofollow noreferrer\">Github project - kotlin-logging</a> ) library allows you to write logging code like below:</p>\n\n<pre><code>class FooWithLogging {\n  companion object: KLogging()\n  fun bar() {\n    logger.info{\"Item $item\"}\n  }\n}\n</code></pre>\n\n<h3>StaticLog</h3>\n\n<p>or you can also use this small written in Kotlin library called <a href=\"https://github.com/jupf/staticlog\" rel=\"nofollow noreferrer\"><code>StaticLog</code></a> then your code would looks like:</p>\n\n<pre><code>Log.info(\"This is an info message\")\nLog.debug(\"This is a debug message\")\nLog.warn(\"This is a warning message\",\"WithACustomTag\")\nLog.error(\"This is an error message with an additional Exception for output\", \"AndACustomTag\", exception )\n\nLog.logLevel = LogLevel.WARN\nLog.info(\"This message will not be shown\")\\\n</code></pre>\n\n<p>The second solution might better if you would like to define an output format for logging method like:</p>\n\n<pre><code>Log.newFormat {\n    line(date(\"yyyy-MM-dd HH:mm:ss\"), space, level, text(\"/\"), tag, space(2), message, space(2), occurrence)\n}\n</code></pre>\n\n<p>or use filters, for example:</p>\n\n<pre><code>Log.filterTag = \"filterTag\"\nLog.info(\"This log will be filtered out\", \"otherTag\")\nLog.info(\"This log has the right tag\", \"filterTag\")\n</code></pre>\n\n<h3>timberkt</h3>\n\n<p>If you'd already used Jake Wharton's <code>Timber</code> logging library check <a href=\"https://github.com/ajalt/timberkt\" rel=\"nofollow noreferrer\"><code>timberkt</code></a>.</p>\n\n<blockquote>\n  <p>This library builds on Timber with an API that's easier to use from Kotlin. Instead of using formatting parameters, you pass a lambda that is only evaluated if the message is logged.</p>\n</blockquote>\n\n<p>Code example:</p>\n\n<pre><code>// Standard timber\nTimber.d(\"%d %s\", intVar + 3, stringFun())\n\n// Kotlin extensions\nTimber.d { \"${intVar + 3} ${stringFun()}\" }\n// or\nd { \"${intVar + 3} ${stringFun()}\" }\n</code></pre>\n\n<p>Check also: <a href=\"https://medium.com/@OhadShai/logging-in-android-ankologger-vs-kotlin-logging-bb693671442a#.ngk3r66et\" rel=\"nofollow noreferrer\">Logging in Kotlin &amp; Android: AnkoLogger vs kotlin-logging</a></p>\n\n<p>Hope it will help</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 9747307, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "cleaning agent", "link": "https://stackoverflow.com/users/9747307/cleaning-agent"}, "is_accepted": false, "score": 1, "last_activity_date": 1525576149, "creation_date": 1525576149, "answer_id": 50195914, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/50195914#50195914", "title": "Idiomatic way of logging in Kotlin", "body": "<p>create companion object and mark the appropriate fields with @JvmStatic annotation</p>\n"}, {"tags": [], "owner": {"reputation": 41, "user_id": 5293266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39505e76af5b3171af22c34d62b68ff0?s=128&d=identicon&r=PG&f=1", "display_name": "tritot", "link": "https://stackoverflow.com/users/5293266/tritot"}, "is_accepted": false, "score": 0, "last_activity_date": 1534830740, "creation_date": 1534830740, "answer_id": 51942373, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/51942373#51942373", "title": "Idiomatic way of logging in Kotlin", "body": "<pre><code>fun &lt;R : Any&gt; R.logger(): Lazy&lt;Logger&gt; = lazy { \n    LoggerFactory.getLogger((if (javaClass.kotlin.isCompanion) javaClass.enclosingClass else javaClass).name) \n}\n\nclass Foo {\n    val logger by logger()\n}\n\nclass Foo {\n    companion object {\n        val logger by logger()\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 6150, "user_id": 297331, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/0a9b8c1333a7ad0dddf85bf84e6622c3?s=128&d=identicon&r=PG", "display_name": "Niel de Wet", "link": "https://stackoverflow.com/users/297331/niel-de-wet"}, "is_accepted": false, "score": 1, "last_activity_date": 1540458398, "creation_date": 1540458398, "answer_id": 52985474, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/52985474#52985474", "title": "Idiomatic way of logging in Kotlin", "body": "<p>There are many great answers here already, but all of them concern adding a logger to a class, but how would you do that to do logging in Top Level Functions?</p>\n\n<p>This approach is generic and simple enough to work well in both classes, companion objects and Top Level Functions:</p>\n\n<pre><code>package nieldw.test\n\nimport org.apache.logging.log4j.LogManager\nimport org.apache.logging.log4j.Logger\nimport org.junit.jupiter.api.Test\n\nfun logger(lambda: () -&gt; Unit): Lazy&lt;Logger&gt; = lazy { LogManager.getLogger(getClassName(lambda.javaClass)) }\nprivate fun &lt;T : Any&gt; getClassName(clazz: Class&lt;T&gt;): String = clazz.name.replace(Regex(\"\"\"\\$.*$\"\"\"), \"\")\n\nval topLog by logger { }\n\nclass TopLevelLoggingTest {\n    val classLog by logger { }\n\n    @Test\n    fun `What is the javaClass?`() {\n        topLog.info(\"THIS IS IT\")\n        classLog.info(\"THIS IS IT\")\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61, "user_id": 2485733, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc0efc764adf63c786852083dc1d2d42?s=128&d=identicon&r=PG", "display_name": "Leandro", "link": "https://stackoverflow.com/users/2485733/leandro"}, "is_accepted": false, "score": 0, "last_activity_date": 1550925808, "creation_date": 1550925808, "answer_id": 54841730, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/54841730#54841730", "title": "Idiomatic way of logging in Kotlin", "body": "<p>This is still WIP (almost finished) so I'd like to share it: \n<a href=\"https://github.com/leandronunes85/log-format-enforcer#kotlin-soon-to-come-in-version-14\" rel=\"nofollow noreferrer\">https://github.com/leandronunes85/log-format-enforcer#kotlin-soon-to-come-in-version-14</a></p>\n\n<p>The main goal of this library is to enforce a certain log style across a project. By having it generate Kotlin code I'm trying to address some of the issues mentioned in this question. With regards to the original question what I usually tend to do is to simply:</p>\n\n<pre><code>private val LOG = LogFormatEnforcer.loggerFor&lt;Foo&gt;()\nclass Foo {\n\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 8910250, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bf39a3a622209ce52d785cb1f936505f?s=128&d=identicon&r=PG", "display_name": "rocammo", "link": "https://stackoverflow.com/users/8910250/rocammo"}, "is_accepted": false, "score": 0, "last_activity_date": 1587248189, "creation_date": 1587248189, "answer_id": 61297003, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/61297003#61297003", "title": "Idiomatic way of logging in Kotlin", "body": "<p>You can simply build your own \"library\" of utilities. You don't need a large library for this task which will make your project heavier and complex.</p>\n\n<p>For instance, you can use Kotlin Reflection to get the name, type and value of any class property.</p>\n\n<p>First of all, make sure you have the meta-dependency settled in your build.gradle:</p>\n\n<pre><code>dependencies {\n    implementation \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\"\n}\n</code></pre>\n\n<p>Afterwards, you can simply copy and paste this code into your project:</p>\n\n<pre class=\"lang-kotlin prettyprint-override\"><code>import kotlin.reflect.full.declaredMemberProperties\n\nclass LogUtil {\n    companion object {\n        /**\n         * Receives an [instance] of a class.\n         * @return the name and value of any member property.\n         */\n        fun classToString(instance: Any): String {\n            val sb = StringBuilder()\n\n            val clazz = instance.javaClass.kotlin\n            clazz.declaredMemberProperties.forEach {\n                sb.append(\"${it.name}: (${it.returnType}) ${it.get(instance)}, \")\n            }\n\n            return marshalObj(sb)\n        }\n\n        private fun marshalObj(sb: StringBuilder): String {\n            sb.insert(0, \"{ \")\n            sb.setLength(sb.length - 2)\n            sb.append(\" }\")\n\n            return sb.toString()\n        }\n    }\n}\n</code></pre>\n\n<p>Example of usage:</p>\n\n<pre class=\"lang-kotlin prettyprint-override\"><code>data class Actor(val id: Int, val name: String) {\n    override fun toString(): String {\n        return classToString(this)\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 15127246, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/i2rCF.jpg?s=128&g=1", "display_name": "Reed Ellsworth", "link": "https://stackoverflow.com/users/15127246/reed-ellsworth"}, "is_accepted": false, "score": 0, "last_activity_date": 1612245731, "last_edit_date": 1612245731, "creation_date": 1612236841, "answer_id": 66003284, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin/66003284#66003284", "title": "Idiomatic way of logging in Kotlin", "body": "<p>For Kotlin Multiplaform logging I could not find a library that had all the features I needed so I ended up writing one. Please check out <a href=\"https://github.com/LighthouseGames/KmLogging\" rel=\"nofollow noreferrer\">KmLogging</a>. The features it implements is:</p>\n<ul>\n<li>Uses platform specific logging on each platform: Log on Android, os_log on iOS, and console on JavaScript.</li>\n<li>High performance. Only 1 boolean check when disabled. I like to put in lots of logging and want all of it turned off when release and do not want to pay much overhead for having lots of logging. Also, when logging is on it needs to be really performant.</li>\n<li>Extensible. Need to be able add other loggers such as logging to Crashlytics, etc.</li>\n<li>Each logger can log at a different level. For example, you may only want info and above going to Crashlytics and all other loggers disabled in production.</li>\n</ul>\n<p>To use:</p>\n<pre class=\"lang-kotlin prettyprint-override\"><code>val log = logging()\nlog.i { &quot;some message&quot; }\n</code></pre>\n"}], "owner": {"reputation": 2882, "user_id": 544454, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/ieSjS.png?s=128&g=1", "display_name": "mchlstckl", "link": "https://stackoverflow.com/users/544454/mchlstckl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 37478, "favorite_count": 59, "accepted_answer_id": 34462577, "answer_count": 17, "score": 176, "last_activity_date": 1612245731, "creation_date": 1450790433, "last_edit_date": 1500100353, "question_id": 34416869, "link": "https://stackoverflow.com/questions/34416869/idiomatic-way-of-logging-in-kotlin", "title": "Idiomatic way of logging in Kotlin", "body": "<p>Kotlin doesn't have the same notion of static fields as used in Java. In Java, the generally accepted way of doing logging is:</p>\n\n<pre><code>public class Foo {\n    private static final Logger LOG = LoggerFactory.getLogger(Foo.class);\n}\n</code></pre>\n\n<p><strong>Question</strong> is what is the idiomatic way of performing logging in Kotlin?</p>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 0, "creation_date": 1450710105, "post_id": 34398570, "comment_id": 56538290, "body": "I&#39;m worried about this because I have seen a lot language constructs like &quot;trait&quot; have changed since the milestone releases."}, {"owner": {"reputation": 79299, "user_id": 589259, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1", "display_name": "Maarten Bodewes", "link": "https://stackoverflow.com/users/589259/maarten-bodewes"}, "edited": false, "score": 0, "creation_date": 1450734773, "post_id": 34398570, "comment_id": 56551695, "body": "I&#39;m voting this down - not because I am not interested in the answer or that I dislike the question. I do however think that the only authoritative source will be the Kotlin web-page, and the answer can only quote from there. Given that the answer may also change in time, repeating it here does not make much sense."}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "reply_to_user": {"reputation": 79299, "user_id": 589259, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1", "display_name": "Maarten Bodewes", "link": "https://stackoverflow.com/users/589259/maarten-bodewes"}, "edited": false, "score": 2, "creation_date": 1450741246, "post_id": 34398570, "comment_id": 56554261, "body": "@MaartenBodewes I disagree. Because Jetbrains is watching this tag. It&#39;s reasonable to ask this question here. In fact my previous questions about Kotlin were mostly if not all, anwsered by Jetbrains guys. Also compatibility policy is not something that&#39;s going to change in time. Once it&#39;s done it&#39;s done. So I think it&#39;s better to let everyone know it here."}, {"owner": {"reputation": 79299, "user_id": 589259, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1", "display_name": "Maarten Bodewes", "link": "https://stackoverflow.com/users/589259/maarten-bodewes"}, "edited": false, "score": 0, "creation_date": 1450746251, "post_id": 34398570, "comment_id": 56555676, "body": "Good point, although the answer still seems to be directly from Kotlin&#39;s site. Let me change some things around"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451048391, "post_id": 34398570, "comment_id": 56667854, "body": "This is a bad question, if he was reading Kotlin blogs and public information he would have seen it noted in the beta 1 announcement, and the beta 4 announcement with complete clarity the plan for backwards compatibility."}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 1, "creation_date": 1451060320, "post_id": 34398570, "comment_id": 56670715, "body": "Oh really? Like I should be watching kotlin blog every f**king day? Google &quot;kotlin compatibility policy&quot; yourself, see what is the first item. And try to find the blog in the first page, then come back here to say this is a bad question."}], "answers": [{"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451048308, "post_id": 34398829, "comment_id": 56667828, "body": "You can see the official strategy laid out nicely in this blog post for Beta 4 in the &quot;What\u2019s next&quot; section:  <a href=\"http://blog.jetbrains.com/kotlin/2015/12/kotlin-1-0-beta-4-is-out/\" rel=\"nofollow noreferrer\">blog.jetbrains.com/kotlin/2015/12/kotlin-1-0-beta-4-is-out</a>  ... binary compatibility post 1.0 is the short answer.  And 1.0 is very soon."}, {"owner": {"reputation": 3820, "user_id": 425943, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/df2378b35292cebde2b60c9365b0aa1b?s=128&d=identicon&r=PG", "display_name": "lyomi", "link": "https://stackoverflow.com/users/425943/lyomi"}, "edited": false, "score": 0, "creation_date": 1476210337, "post_id": 34398829, "comment_id": 67246863, "body": "Where does the source say the &quot;forever&quot; part? I wonder if they&#39;ll break binary compatibility (like Scala) in Kotlin 2.0 for example."}, {"owner": {"reputation": 3820, "user_id": 425943, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/df2378b35292cebde2b60c9365b0aa1b?s=128&d=identicon&r=PG", "display_name": "lyomi", "link": "https://stackoverflow.com/users/425943/lyomi"}, "edited": false, "score": 1, "creation_date": 1476210637, "post_id": 34398829, "comment_id": 67247027, "body": "Just noticed <a href=\"https://blog.jetbrains.com/kotlin/2015/12/kotlin-1-0-beta-4-is-out/#comment-41068\" rel=\"nofollow noreferrer\">this comment</a> that says breaking changes (if any) will happen very slowly."}], "tags": [], "owner": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "is_accepted": true, "score": 9, "last_activity_date": 1473282547, "last_edit_date": 1473282547, "creation_date": 1450710705, "answer_id": 34398829, "question_id": 34398570, "link": "https://stackoverflow.com/questions/34398570/whats-kotlins-compatibility-policy/34398829#34398829", "title": "What&#39;s Kotlin&#39;s compatibility policy?", "body": "<p>Kotlin isn't out yet (UPD: <a href=\"https://blog.jetbrains.com/kotlin/2016/02/kotlin-1-0-released-pragmatic-language-for-jvm-and-android/\" rel=\"nofollow\">now it is</a>). Changes to the language are to be expected (even changes that break code and binary compatibility).</p>\n\n<p>With the Beta release the binary format was finalized, so we shouldn't expect changes there anymore (but they might still happen if bugs have to be fixed).</p>\n\n<p>After 1.0 gets released the language and the binary format is supposed to be backwards compatible forever.</p>\n\n<p>Source: <a href=\"http://blog.jetbrains.com/kotlin/2015/11/the-kotlin-language-1-0-beta-is-here/\" rel=\"nofollow\">http://blog.jetbrains.com/kotlin/2015/11/the-kotlin-language-1-0-beta-is-here/</a></p>\n"}], "owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 504, "favorite_count": 0, "accepted_answer_id": 34398829, "answer_count": 1, "score": 9, "last_activity_date": 1473282547, "creation_date": 1450709881, "last_edit_date": 1450746319, "question_id": 34398570, "link": "https://stackoverflow.com/questions/34398570/whats-kotlins-compatibility-policy", "title": "What&#39;s Kotlin&#39;s compatibility policy?", "body": "<p>Once Kotlin 1.0 is out, what will be the compatibility policy? As a user, I hope Kotlin would keep its compatibility, either in source or binary. Just as serious as Java.</p>\n\n<p>On contrast, Scala is a bad example. Failing to keep its binary compatibility between minor versions drove me away. And I believe a lot of users have left Scala partly because of its compatibility issue. This caused many libraries (including SBT at my time) cannot provide a complete suite of distributions for the whole series of Scala versions. This is just binary compatibility issue. Imagine if source compatibility was broken.</p>\n\n<p>I have decided to use Kotlin in my company's commercial project. So I really need to be sure Kotlin is <strong>serious</strong> about keeping compatibility, instead of pursuing beauty.</p>\n"}, {"tags": ["spring", "asynchronous", "callback", "spring-boot", "kotlin"], "comments": [{"owner": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "edited": false, "score": 1, "creation_date": 1450710879, "post_id": 34394998, "comment_id": 56538829, "body": "Have you tried just throwing your exception in your service class? That seems more logical than using forExecutionException. I don&#39;t know anything about Spring-Async though, so I could be totallly wrong here."}, {"owner": {"reputation": 2882, "user_id": 544454, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/ieSjS.png?s=128&g=1", "display_name": "mchlstckl", "link": "https://stackoverflow.com/users/544454/mchlstckl"}, "reply_to_user": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "edited": false, "score": 0, "creation_date": 1450711999, "post_id": 34394998, "comment_id": 56539624, "body": "Then the exception propagates back to the caller - <code>UserController</code> where I can catch it. If that is the intended behaviour, what is the use-case for the failure callback that I <i>have</i> to implement?"}, {"owner": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "edited": false, "score": 1, "creation_date": 1450712081, "post_id": 34394998, "comment_id": 56539684, "body": "Hmm, are you sure the function is actually being executed asynchronously? You could check what thread you&#39;re in with a debugger"}, {"owner": {"reputation": 2882, "user_id": 544454, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/ieSjS.png?s=128&g=1", "display_name": "mchlstckl", "link": "https://stackoverflow.com/users/544454/mchlstckl"}, "reply_to_user": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "edited": false, "score": 0, "creation_date": 1450714239, "post_id": 34394998, "comment_id": 56541046, "body": "I&#39;ve tested with &#39;@Async&#39; and without. Tested with <code>Future</code> and <code>ListenableFuture</code> as return type. No difference, all executed on same &quot;http-nio-8080-exec-XXX&quot; thread. Followed the example here: <a href=\"https://spring.io/guides/gs/async-method/\" rel=\"nofollow noreferrer\">spring.io/guides/gs/async-method</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2882, "user_id": 544454, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/ieSjS.png?s=128&g=1", "display_name": "mchlstckl", "link": "https://stackoverflow.com/users/544454/mchlstckl"}, "edited": false, "score": 0, "creation_date": 1451916102, "post_id": 34415290, "comment_id": 56930756, "body": "Should mention that doing a &quot;clean&quot; helps too."}], "tags": [], "owner": {"reputation": 2882, "user_id": 544454, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/ieSjS.png?s=128&g=1", "display_name": "mchlstckl", "link": "https://stackoverflow.com/users/544454/mchlstckl"}, "is_accepted": true, "score": 2, "last_activity_date": 1451985085, "last_edit_date": 1451985085, "creation_date": 1450784989, "answer_id": 34415290, "question_id": 34394998, "link": "https://stackoverflow.com/questions/34394998/async-spring-boot-using-kotlin-not-working/34415290#34415290", "title": "Async Spring Boot using Kotlin not working", "body": "<p>This all works if:</p>\n\n<p>A) the method <code>fetchUser</code> is declared <code>open</code>, i.e. not final so that Spring can proxy the call</p>\n\n<p>...or...</p>\n\n<p>B) you create an interface <code>IUserClientService</code> and use that in the constructor of the <code>UserController</code>:</p>\n\n<pre><code>interface IUserClientService {\n    fun fetchUser(email: String): ListenableFuture&lt;User&gt;\n}\n</code></pre>\n\n<p>Now the <code>UserClientService</code> implements the interface:</p>\n\n<pre><code>@Service\nopen class UserClientService : IUserClientService {\n\n    @Async\n    override fun fetchUser(email: String): ListenableFuture&lt;User&gt; {\n// ... rest as shown in question ...\n</code></pre>\n\n<p>And finally the <code>UserController</code>:</p>\n\n<pre><code>@RestController\n@RequestMapping(\"/users\")\nclass UserController @Autowired constructor(\n    val client: IUserClientService\n) {\n    @RequestMapping(method = arrayOf(RequestMethod.GET))\n    fun getUser(@RequestParam(value = \"email\") email: String): DeferredResult&lt;ResponseEntity&lt;User&gt;&gt; {\n// ... rest as shown in question ...\n</code></pre>\n\n<p>Not sure if this is because I'm using Kotlin. The examples that I've seen don't require implementing an interface.</p>\n"}], "owner": {"reputation": 2882, "user_id": 544454, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/ieSjS.png?s=128&g=1", "display_name": "mchlstckl", "link": "https://stackoverflow.com/users/544454/mchlstckl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3103, "favorite_count": 0, "accepted_answer_id": 34415290, "answer_count": 1, "score": 0, "last_activity_date": 1451985085, "creation_date": 1450698530, "last_edit_date": 1450780754, "question_id": 34394998, "link": "https://stackoverflow.com/questions/34394998/async-spring-boot-using-kotlin-not-working", "title": "Async Spring Boot using Kotlin not working", "body": "<p>I'm trying to create a Spring Service that performs an operation asynchronously and returns a <code>ListenableFuture</code>. I want the failure callback to be triggered when the operation fails - my attempt to do this is to use <code>AsyncResult.forExecutionException</code> as seen below:</p>\n\n<pre><code>@Service\nopen class UserClientService {\n\n    @Async\n    fun fetchUser(email: String): ListenableFuture&lt;User&gt; {\n        val uri = buildUri(email)\n        val headers = buildHeaders()\n        try {\n            val result = restTemplate.exchange(uri, HttpMethod.GET, HttpEntity&lt;Any&gt;(headers), User::class.java)\n            return AsyncResult.forValue(result.body)\n        } catch (e: RestClientException) {\n            return AsyncResult.forExecutionException(e)\n        }\n    }\n}\n</code></pre>\n\n<p>The entry-point:</p>\n\n<pre><code>@SpringBootApplication\n@EnableAsync\nopen class UserProxyApplication\n\nfun main(args: Array&lt;String&gt;) {\n    SpringApplication.run(UserProxyApplication::class.java, *args)\n} \n</code></pre>\n\n<p>The Spring RestController implementation is as follows:</p>\n\n<pre><code>@RestController\n@RequestMapping(\"/users\")\nclass UserController @Autowired constructor(\n        val client: UserClientService\n) {\n    @RequestMapping(method = arrayOf(RequestMethod.GET))\n    fun getUser(@RequestParam(value = \"email\") email: String): DeferredResult&lt;ResponseEntity&lt;User&gt;&gt; {\n        val result = DeferredResult&lt;ResponseEntity&lt;User&gt;&gt;(TimeUnit.SECONDS.toMillis(10))\n        client.fetchUser(email).addCallback(\n                { success -&gt; result.setResult(ResponseEntity.ok(success)) },\n                { failure -&gt; result.setResult(ResponseEntity(HttpStatus.NOT_FOUND)) }\n        )\n        return result;\n    }\n}\n</code></pre>\n\n<p><strong>Problem</strong> is that the failure callback in the <code>UserController</code> is never triggered when an exception is thrown in the <code>UserClientService</code> REST call. Instead, the success callback is triggered with <code>success</code> argument being <code>null</code>. </p>\n\n<p>In Kotlin, I can check if success is null by using <code>success!!</code> - this throws an exception that then <em>does</em> trigger the failure callback with <code>failure</code> argument being the NPE.</p>\n\n<p><strong>Question</strong> is how can I trigger the failure callback in the <code>UserController</code> when an exception has occurred in the <code>UserClientService</code>?</p>\n\n<p><strong>Update A</strong> it seems that everything is executed on the same thread \"http-nio-8080-exec-XXX\" regardless of whether I use <code>@Async</code> or not -- see comments.</p>\n"}, {"tags": ["kotlin", "kotlin-extension"], "comments": [{"owner": {"reputation": 641, "user_id": 5479247, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-AC0-V9DmUv4/AAAAAAAAAAI/AAAAAAAAFc0/7D0Qqwhjgbg/photo.jpg?sz=128", "display_name": "Eugene Krivenja", "link": "https://stackoverflow.com/users/5479247/eugene-krivenja"}, "edited": false, "score": 0, "creation_date": 1450690922, "post_id": 34391255, "comment_id": 56526481, "body": "Can you show more code? Class declaration with this property?"}, {"owner": {"reputation": 147, "user_id": 2388775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c7f157fb2f88191e968dd5ef011dc268?s=128&d=identicon&r=PG", "display_name": "Motorro", "link": "https://stackoverflow.com/users/2388775/motorro"}, "reply_to_user": {"reputation": 641, "user_id": 5479247, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-AC0-V9DmUv4/AAAAAAAAAAI/AAAAAAAAFc0/7D0Qqwhjgbg/photo.jpg?sz=128", "display_name": "Eugene Krivenja", "link": "https://stackoverflow.com/users/5479247/eugene-krivenja"}, "edited": false, "score": 0, "creation_date": 1450692965, "post_id": 34391255, "comment_id": 56527737, "body": "@EugeneKrivenja, that is a top-level property. Intended to use it in Activity subclass methods to create dagger module. So it is defined in a separate file. Something like <a href=\"https://github.com/Kotlin/anko/blob/a9109b510d362dbf133aa68d793fb1ebf1fdbd7b/dsl/static/src/common/Intents.kt\" rel=\"nofollow noreferrer\">that</a>"}, {"owner": {"reputation": 21048, "user_id": 603516, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40895ef337d0a2eb7d538f5f8b3e6d58?s=128&d=identicon&r=PG", "display_name": "Vadzim", "link": "https://stackoverflow.com/users/603516/vadzim"}, "edited": false, "score": 0, "creation_date": 1469630324, "post_id": 34391255, "comment_id": 64618286, "body": "See also <a href=\"https://youtrack.jetbrains.com/issue/KT-13053\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issue/KT-13053</a> with one possible workaround"}], "answers": [{"comments": [{"owner": {"reputation": 17307, "user_id": 869184, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/58a3657cee7bdb5f537020660d9711e0?s=128&d=identicon&r=PG&f=1", "display_name": "Ilya", "link": "https://stackoverflow.com/users/869184/ilya"}, "edited": false, "score": 0, "creation_date": 1450711315, "post_id": 34393382, "comment_id": 56539119, "body": "What instance of type <code>T</code> would you expect should be passed as a receiver to initializer?"}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "reply_to_user": {"reputation": 17307, "user_id": 869184, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/58a3657cee7bdb5f537020660d9711e0?s=128&d=identicon&r=PG&f=1", "display_name": "Ilya", "link": "https://stackoverflow.com/users/869184/ilya"}, "edited": false, "score": 0, "creation_date": 1450713265, "post_id": 34393382, "comment_id": 56540469, "body": "@Ilya I think <code>thisRef as T</code> should be the receiver: <a href=\"https://kotlinlang.org/docs/reference/delegated-properties.html\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/delegated-properties.html</a>"}, {"owner": {"reputation": 17307, "user_id": 869184, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/58a3657cee7bdb5f537020660d9711e0?s=128&d=identicon&r=PG&f=1", "display_name": "Ilya", "link": "https://stackoverflow.com/users/869184/ilya"}, "edited": false, "score": 1, "creation_date": 1450713611, "post_id": 34393382, "comment_id": 56540682, "body": "So this lazy implementation would be limitied to returing values of the same type as the receiver?"}, {"owner": {"reputation": 147, "user_id": 2388775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c7f157fb2f88191e968dd5ef011dc268?s=128&d=identicon&r=PG", "display_name": "Motorro", "link": "https://stackoverflow.com/users/2388775/motorro"}, "edited": false, "score": 0, "creation_date": 1450725331, "post_id": 34393382, "comment_id": 56547041, "body": "Thanks guys! Anyway that does not do the trick with a top-level extension property as there is no &#39;this&#39; value and &#39;thisRef&#39; when defining initializer. So you come to the same result. Ended up with extension function."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "reply_to_user": {"reputation": 147, "user_id": 2388775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c7f157fb2f88191e968dd5ef011dc268?s=128&d=identicon&r=PG", "display_name": "Motorro", "link": "https://stackoverflow.com/users/2388775/motorro"}, "edited": false, "score": 0, "creation_date": 1450742857, "post_id": 34393382, "comment_id": 56554760, "body": "@Motorro of course there is, the stdlib just needs to be rewritten. I reported your problem to the kotlin team"}, {"owner": {"reputation": 147, "user_id": 2388775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c7f157fb2f88191e968dd5ef011dc268?s=128&d=identicon&r=PG", "display_name": "Motorro", "link": "https://stackoverflow.com/users/2388775/motorro"}, "edited": false, "score": 0, "creation_date": 1450753571, "post_id": 34393382, "comment_id": 56557376, "body": "@voddan could you please share a link to report?"}, {"owner": {"reputation": 147, "user_id": 2388775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c7f157fb2f88191e968dd5ef011dc268?s=128&d=identicon&r=PG", "display_name": "Motorro", "link": "https://stackoverflow.com/users/2388775/motorro"}, "edited": false, "score": 1, "creation_date": 1450754155, "post_id": 34393382, "comment_id": 56557514, "body": "@voddan I&#39;ve created a gist <a href=\"https://gist.github.com/motorro/e650bfb3942728226bb5\" rel=\"nofollow noreferrer\">here</a> with a basic implementation. It&#39;ll be great if you could comment it and point out how would you create a top-level property with initializer above."}], "tags": [], "owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "is_accepted": false, "score": 1, "last_activity_date": 1466562273, "last_edit_date": 1466562273, "creation_date": 1450693221, "answer_id": 34393382, "question_id": 34391255, "link": "https://stackoverflow.com/questions/34391255/this-reference-in-a-lazy-initializer-of-kotlin-extension-property/34393382#34393382", "title": "this reference in a lazy initializer of kotlin extension property", "body": "<p>I think there is no way to access the <code>Activity</code> from the body of <code>lazy</code>, at least with the current signature\\implementation: <code>fun &lt;T&gt; lazy(initializer: () -&gt; T): Lazy&lt;T&gt;</code></p>\n\n<p>To do that the signature would have to look like </p>\n\n<pre><code>fun &lt;A, T&gt; lazy(initializer: A.() -&gt; T): Lazy2&lt;A, T&gt;\n</code></pre>\n\n<p>You can implement such an extended function yourself, or\\and report this as an issue with stdlib </p>\n"}, {"tags": [], "owner": {"reputation": 641, "user_id": 5479247, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-AC0-V9DmUv4/AAAAAAAAAAI/AAAAAAAAFc0/7D0Qqwhjgbg/photo.jpg?sz=128", "display_name": "Eugene Krivenja", "link": "https://stackoverflow.com/users/5479247/eugene-krivenja"}, "is_accepted": true, "score": 4, "last_activity_date": 1450693441, "creation_date": 1450693441, "answer_id": 34393444, "question_id": 34391255, "link": "https://stackoverflow.com/questions/34391255/this-reference-in-a-lazy-initializer-of-kotlin-extension-property/34393444#34393444", "title": "this reference in a lazy initializer of kotlin extension property", "body": "<p>The <code>lazy</code> delegate in Kotlin doesn't have reference to a property member class.  </p>\n\n<p>I see two solutions:  </p>\n\n<ol>\n<li>transform it to extension function  </li>\n<li>implement own delegate  </li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 147, "user_id": 2388775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c7f157fb2f88191e968dd5ef011dc268?s=128&d=identicon&r=PG", "display_name": "Motorro", "link": "https://stackoverflow.com/users/2388775/motorro"}, "edited": false, "score": 0, "creation_date": 1450725085, "post_id": 34400419, "comment_id": 56546912, "body": "Indeed. Didn&#39;t get it the right way. As soon as top-level is resolved statically - the only one instance will be created"}], "tags": [], "owner": {"reputation": 17307, "user_id": 869184, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/58a3657cee7bdb5f537020660d9711e0?s=128&d=identicon&r=PG&f=1", "display_name": "Ilya", "link": "https://stackoverflow.com/users/869184/ilya"}, "is_accepted": false, "score": 3, "last_activity_date": 1510682261, "last_edit_date": 1510682261, "creation_date": 1450715967, "answer_id": 34400419, "question_id": 34391255, "link": "https://stackoverflow.com/questions/34391255/this-reference-in-a-lazy-initializer-of-kotlin-extension-property/34400419#34400419", "title": "this reference in a lazy initializer of kotlin extension property", "body": "<p><code>lazy</code> calls <code>initializer</code> function when it is accessed first time and then stores the value returned by the <code>initializer</code> to return that value on successive accesses.</p>\n\n<p>An instance of <code>Lazy</code> is capable of storing exactly one value. When you delegate extension property to a <code>Lazy</code> instance, you're getting a single instance of <code>Lazy</code> serving <code>getValue</code> requests from all instances of the receiver type, in your case it's <code>Activity</code>. This results in <code>Lazy</code> computing value only for first <code>Activity</code> and using that value on all subsequent calls for other instances of <code>Activity</code>.</p>\n\n<p>Therefore while it's syntactically possible to pass an <code>Activity</code> to initializer as a receiver and refer it as <code>this</code> inside as @voddan suggests in <a href=\"https://stackoverflow.com/a/34393382#34393382\">this answer</a>, the <code>Lazy</code> itself is not capable of storing different value for different receivers.</p>\n\n<p>An ability to have an external storage for extension properties may likely be covered by \"Attached properties\" feature <a href=\"https://youtrack.jetbrains.com/issue/KT-7210\" rel=\"nofollow noreferrer\">KT-7210</a>.\nI don't think <code>Lazy</code> should have this ability as it complicates significantly its implementation.</p>\n"}, {"tags": [], "owner": {"reputation": 11620, "user_id": 2898715, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LWv1Z.jpg?s=128&g=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/2898715/eric"}, "is_accepted": false, "score": 8, "last_activity_date": 1467143245, "last_edit_date": 1495535326, "creation_date": 1467142753, "answer_id": 38084930, "question_id": 34391255, "link": "https://stackoverflow.com/questions/34391255/this-reference-in-a-lazy-initializer-of-kotlin-extension-property/38084930#38084930", "title": "this reference in a lazy initializer of kotlin extension property", "body": "<p>Other answers here have pointed out that it is impossible to reference <code>this</code> within the stdlib's current implementation of the <code>lazy</code> receiver, and that one could implement their own delegate. So I decided to implement it and post it here...:</p>\n\n<pre><code>class LazyWithReceiver&lt;This,Return&gt;(val initializer:This.()-&gt;Return)\n{\n    private val values = WeakHashMap&lt;This,Return&gt;()\n\n    @Suppress(\"UNCHECKED_CAST\")\n    operator fun getValue(thisRef:Any,property:KProperty&lt;*&gt;):Return = synchronized(values)\n    {\n        thisRef as This\n        return values.getOrPut(thisRef) {thisRef.initializer()}\n    }\n}\n</code></pre>\n\n<p><a href=\"https://github.com/ericytsang/lib.delegates/blob/d01dce85723f65864f739944a1e90882cae19bca/src/test/kotlin/com/github/ericytsang/lib/delegates/LazyWithReceiverTest.kt\" rel=\"noreferrer\">Here is some code showing how to use it.</a></p>\n\n<p>This implementation uses a weak hash map to store a separate value for each receiver...this comes with a couple of implications...:</p>\n\n<ul>\n<li><p>distinct instances that are <a href=\"https://stackoverflow.com/questions/16266229/test-if-two-objects-are-structurally-equal\">structurally equal</a> will share the same value.</p></li>\n<li><p>in some cases, values that have already been initialized for some receiver could be garbage collected which means that the initializer might be called again to re-initialize the value if it is accessed again.</p></li>\n</ul>\n"}], "owner": {"reputation": 147, "user_id": 2388775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c7f157fb2f88191e968dd5ef011dc268?s=128&d=identicon&r=PG", "display_name": "Motorro", "link": "https://stackoverflow.com/users/2388775/motorro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2147, "favorite_count": 2, "accepted_answer_id": 34393444, "answer_count": 4, "score": 10, "last_activity_date": 1510682261, "creation_date": 1450684993, "last_edit_date": 1495664898, "question_id": 34391255, "link": "https://stackoverflow.com/questions/34391255/this-reference-in-a-lazy-initializer-of-kotlin-extension-property", "title": "this reference in a lazy initializer of kotlin extension property", "body": "<p>I'm trying Kotlin and want to implement a lazy extension property for Activity:</p>\n\n<pre><code>/**\n * Activity module\n */\nval Activity.activityModule: ActivityModule by lazy {\n    ActivityModule(this)\n}\n</code></pre>\n\n<p>The compiler errors with:</p>\n\n<pre><code>'this' is not defined in this context\n</code></pre>\n\n<p>How can I qualify this as Activity this? I have read <a href=\"https://kotlinlang.org/docs/reference/this-expressions.html\" rel=\"noreferrer\">a guide</a> but can't get it. <code>this@Activity</code> says the reference is unresolved.</p>\n"}, {"tags": ["android", "firebase", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 783, "user_id": 4672864, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/8b39e83fd6dbd1932b93f29f31cd1c60?s=128&d=identicon&r=PG&f=1", "display_name": "user38725", "link": "https://stackoverflow.com/users/4672864/user38725"}, "edited": false, "score": 0, "creation_date": 1450637091, "post_id": 34384182, "comment_id": 56510276, "body": "Thank you for testing! So the problem is the count()-call! If I replace the <code>children.count()</code> with <code>snapshot.children.count()</code>, the code works correctly... strange! If I had to guess it&#39;s somekind of iterator (caching?) issue?"}, {"owner": {"reputation": 4016, "user_id": 1460833, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc4821b9c16457694f503b42831198f1?s=128&d=identicon&r=PG", "display_name": "Sergey Mashkov", "link": "https://stackoverflow.com/users/1460833/sergey-mashkov"}, "reply_to_user": {"reputation": 783, "user_id": 4672864, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/8b39e83fd6dbd1932b93f29f31cd1c60?s=128&d=identicon&r=PG&f=1", "display_name": "user38725", "link": "https://stackoverflow.com/users/4672864/user38725"}, "edited": false, "score": 2, "creation_date": 1451310418, "post_id": 34384182, "comment_id": 56730839, "body": "@fluxi I&#39;am not familiar with firebase but I guess the reason is that you can iterate over children only once (at second attempt you get none). The function <code>count</code> iterates over all elements for <code>Iterator</code> so I guess it is not so efficient as you consume the data twice. It is very common approach for databases and other storages, so the Firebase does the same as well"}, {"owner": {"reputation": 783, "user_id": 4672864, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/8b39e83fd6dbd1932b93f29f31cd1c60?s=128&d=identicon&r=PG&f=1", "display_name": "user38725", "link": "https://stackoverflow.com/users/4672864/user38725"}, "edited": false, "score": 0, "creation_date": 1451311238, "post_id": 34384182, "comment_id": 56731210, "body": "Ah, that makes sense!"}, {"owner": {"reputation": 7191, "user_id": 262852, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/e4e17e45f2e8cc967a8695131910f365?s=128&d=identicon&r=PG", "display_name": "Thufir", "link": "https://stackoverflow.com/users/262852/thufir"}, "edited": false, "score": 0, "creation_date": 1509020786, "post_id": 34384182, "comment_id": 80855578, "body": "is that a &quot;public&quot; type firebase db which anyone can read/write?"}], "tags": [], "owner": {"reputation": 411025, "user_id": 209103, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/12d378e6a9788ab9c94bbafe242b82b4?s=128&d=identicon&r=PG", "display_name": "Frank van Puffelen", "link": "https://stackoverflow.com/users/209103/frank-van-puffelen"}, "is_accepted": true, "score": 4, "last_activity_date": 1451316733, "last_edit_date": 1451316733, "creation_date": 1450635243, "answer_id": 34384182, "question_id": 34378547, "link": "https://stackoverflow.com/questions/34378547/firebase-retrieving-elements/34384182#34384182", "title": "Firebase &amp; Retrieving Elements", "body": "<p>This works for me:</p>\n\n<pre><code>val firebase: Firebase = Firebase(\"https://stackoverflow.firebaseio.com/34378547\")\n\nfun main(args: Array&lt;String&gt;) {\n    list(3)\n    Thread.sleep(5000)\n}\n\nfun list(count: Int) {\n    val playersRef = firebase.child(\"players\")\n    val queryRef = playersRef.orderByChild(\"rank\").limitToFirst(count)\n    queryRef.addListenerForSingleValueEvent(object : ValueEventListener {\n\n        override fun onCancelled(error: FirebaseError?) {\n            println(error!!.message)\n        }\n\n        override fun onDataChange(snapshot: DataSnapshot?) {\n            val children = snapshot!!.children\n            // This returns the correct child count...\n            println(\"count: \"+snapshot.children.count().toString())\n            children.forEach {\n                println(it.toString())\n            }\n        }\n    })\n}\n</code></pre>\n\n<p>Output: </p>\n\n<pre><code>count: 2\nDataSnapshot { key = -K6-Zs5P1FJLk4zSgNZn, value = {wins=13, name=fluxi, rank=1, losses=1} }\nDataSnapshot { key = -K6-ZtdotHkkBzs5on9X, value = {wins=10, name=puf, rank=2, losses=42} }\n</code></pre>\n\n<h2>Update</h2>\n\n<p>In the comments there was some discussion about why <code>snapshot.children.count()</code> works, while <code>children.count()</code> doesn't. The problem is caused by two facts:</p>\n\n<ol>\n<li>Firebase's <code>DataSnapshot.getChildren()</code> returns an <code>Iterable</code>, which can be iterated forward only (as is the contract of an <code>Iterable</code>). </li>\n<li>The Kotlin <code>count()</code> loops over the <code>Iterable</code> to count its items.</li>\n</ol>\n\n<p>So after Kotlin's <code>count()</code> is done, the <code>Iterable</code> is at the end of the sequence. The subsequent <code>for</code> loop has nothing to loop over anymore. In my snippet I call <code>snapshot.children</code> separately to get a separate iterator to get the count.</p>\n\n<p>Knowing how Kotlin implements <code>count()</code> it is better to use Firebase's built-in <code>childrenCount</code>:</p>\n\n<pre><code>println(\"count: \"+snapshot.childrenCount)\n</code></pre>\n"}], "owner": {"reputation": 783, "user_id": 4672864, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/8b39e83fd6dbd1932b93f29f31cd1c60?s=128&d=identicon&r=PG&f=1", "display_name": "user38725", "link": "https://stackoverflow.com/users/4672864/user38725"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5032, "favorite_count": 0, "accepted_answer_id": 34384182, "answer_count": 1, "score": 4, "last_activity_date": 1611175897, "creation_date": 1450593031, "last_edit_date": 1450630824, "question_id": 34378547, "link": "https://stackoverflow.com/questions/34378547/firebase-retrieving-elements", "title": "Firebase &amp; Retrieving Elements", "body": "<p>I'm trying to read x amount of elements from Firebase, but I have a feeling I'm misunderstanding something...</p>\n\n<p>DataSnapshot returns the correct child count, however when I try to loop through the children, the loop never executes.</p>\n\n<p>Note: Code in Kotlin</p>\n\n<pre><code>fun list(count: Int, callback: ListCallback) {\n    val playersRef = firebase.child(\"players\")\n    val queryRef = playersRef.orderByChild(\"rank\").limitToFirst(count)\n    queryRef.addListenerForSingleValueEvent(object : ValueEventListener {\n\n        override fun onCancelled(error: FirebaseError?) {\n            Log.e(\"firebase\", error!!.message)\n        }\n\n        override fun onDataChange(snapshot: DataSnapshot?) {\n            val children = snapshot!!.children\n            // This returns the correct child count...\n            Log.i(\"firebase\", children.count().toString())\n            val list = ArrayList&lt;Entry&gt;()\n            // However, this loop never executes\n            children.forEach {\n                val e = Entry()\n                e.name = it.child(\"name\").value as String\n                e.rank = it.child(\"rank\").value as Long\n                e.wins = it.child(\"wins\").value as Long\n                e.losses = it.child(\"losses\").value as Long\n                Log.i(\"firebase\", e.toString())\n                list.add(e)\n            }\n            callback.onList(list)\n        }\n    })\n}\n</code></pre>\n"}, {"tags": ["batch-file", "kotlin"], "comments": [{"owner": {"reputation": 24586, "user_id": 3255152, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fbd95ef81d0a85310fee8dd46e0f65b0?s=128&d=identicon&r=PG&f=1", "display_name": "mfulton26", "link": "https://stackoverflow.com/users/3255152/mfulton26"}, "edited": false, "score": 0, "creation_date": 1450640360, "post_id": 34378127, "comment_id": 56511354, "body": "Can you provide the YouTrack issue tracking the bug?"}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "reply_to_user": {"reputation": 24586, "user_id": 3255152, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fbd95ef81d0a85310fee8dd46e0f65b0?s=128&d=identicon&r=PG&f=1", "display_name": "mfulton26", "link": "https://stackoverflow.com/users/3255152/mfulton26"}, "edited": false, "score": 0, "creation_date": 1450664264, "post_id": 34378127, "comment_id": 56517456, "body": "@mfulton26 <a href=\"https://youtrack.jetbrains.com/issue/KT-9370\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issue/KT-9370</a>"}, {"owner": {"reputation": 24586, "user_id": 3255152, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fbd95ef81d0a85310fee8dd46e0f65b0?s=128&d=identicon&r=PG&f=1", "display_name": "mfulton26", "link": "https://stackoverflow.com/users/3255152/mfulton26"}, "edited": false, "score": 0, "creation_date": 1451190373, "post_id": 34378127, "comment_id": 56696783, "body": "You might post that link as an answer to your own question. That way you can accept it and this question will no longer show up as &quot;unanswered&quot;, etc. Thanks for the link!"}], "answers": [{"comments": [{"owner": {"reputation": 5882, "user_id": 1338797, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ced463f5bf7534144c2d3d8fcb5f6d81?s=128&d=identicon&r=PG", "display_name": "Tomasz Gandor", "link": "https://stackoverflow.com/users/1338797/tomasz-gandor"}, "edited": false, "score": 1, "creation_date": 1543926646, "post_id": 34379635, "comment_id": 94086796, "body": "There are some typos here. And the length of an array is called <code>size</code>."}, {"owner": {"reputation": 21048, "user_id": 603516, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40895ef337d0a2eb7d538f5f8b3e6d58?s=128&d=identicon&r=PG", "display_name": "Vadzim", "link": "https://stackoverflow.com/users/603516/vadzim"}, "edited": false, "score": 0, "creation_date": 1556290392, "post_id": 34379635, "comment_id": 98400241, "body": "Via <a href=\"https://discuss.kotlinlang.org/t/do-scripts-accept-arguments-parameters-is-there-a-way-to-pass-objects-to-them/998\" rel=\"nofollow noreferrer\">discuss.kotlinlang.org/t/&hellip;</a> and <a href=\"https://github.com/JetBrains/kotlin/blob/master/compiler/testData/codegen/script/parameter.kts\" rel=\"nofollow noreferrer\">github.com/JetBrains/kotlin/blob/master/compiler/testData/&hellip;</a> this the correct answer to the question &quot;How to accept kotlin script arguments&quot; )"}], "tags": [], "owner": {"reputation": 11834, "user_id": 1538877, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/N9qfZ.jpg?s=128&g=1", "display_name": "Ruslan", "link": "https://stackoverflow.com/users/1538877/ruslan"}, "is_accepted": false, "score": 3, "last_activity_date": 1557748518, "last_edit_date": 1557748518, "creation_date": 1450604165, "answer_id": 34379635, "question_id": 34378127, "link": "https://stackoverflow.com/questions/34378127/how-to-pass-arguments-to-kotlin-script/34379635#34379635", "title": "How to pass arguments to kotlin script?", "body": "<p>Think like your code wrapped in main function. Then you can access to variables thought args array:</p>\n\n<pre><code>// call script with command line arguments\nkotlinc -script ...kts \"option1\" \"option2\"\n\n// use this statement inside script\nprintln(args.lenght) // will output 2\n</code></pre>\n\n<p>upd. Try quotes to pass -h parameter</p>\n\n<pre><code>kotlinc -script ...kts \"%*\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "is_accepted": true, "score": 3, "last_activity_date": 1451203339, "creation_date": 1451203339, "answer_id": 34478661, "question_id": 34378127, "link": "https://stackoverflow.com/questions/34378127/how-to-pass-arguments-to-kotlin-script/34478661#34478661", "title": "How to pass arguments to kotlin script?", "body": "<p>As @mfulton suggested, <a href=\"http://youtrack.jetbrains.com/issue/KT-9370\" rel=\"nofollow\">this issue</a> describes the problem, so I will close this question.</p>\n"}, {"tags": [], "owner": {"reputation": 91, "user_id": 7915392, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SGsoF.jpg?s=128&g=1", "display_name": "Ercan Akk&#246;k", "link": "https://stackoverflow.com/users/7915392/ercan-akk%c3%b6k"}, "is_accepted": false, "score": 1, "last_activity_date": 1554749539, "creation_date": 1554749539, "answer_id": 55579986, "question_id": 34378127, "link": "https://stackoverflow.com/questions/34378127/how-to-pass-arguments-to-kotlin-script/55579986#55579986", "title": "How to pass arguments to kotlin script?", "body": "<p>If your code would be:</p>\n\n<pre><code>fun main(args: Array&lt;String&gt;){\n    println(args[0])\n}\n</code></pre>\n\n<p>Then you could compile it with:</p>\n\n<pre><code>kotlinc HelloWorld.kt\n</code></pre>\n\n<p>And run with:</p>\n\n<pre><code>kotlin HelloWorldKt 'Hello'\n</code></pre>\n\n<p>So, the output is:</p>\n\n<pre><code>Hello\n</code></pre>\n"}], "owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2907, "favorite_count": 0, "accepted_answer_id": 34478661, "answer_count": 3, "score": 3, "last_activity_date": 1557748518, "creation_date": 1450587539, "last_edit_date": 1450620233, "question_id": 34378127, "link": "https://stackoverflow.com/questions/34378127/how-to-pass-arguments-to-kotlin-script", "title": "How to pass arguments to kotlin script?", "body": "<p>I have a windows batch</p>\n\n<pre><code>@echo off\n\nsetlocal\n  call kotlinc-jvm -cp \"%~dp0\\lib\\commons-cli-1.3.1.jar\" -script \"%~dp0\\RmMvnRepo.kts\" %*\nendlocal\n</code></pre>\n\n<p>If I pass \"-h\" option to the batch, kotlinc-jvm own's help will display. But I want my <code>RmMvnRepo.kts</code> to receive the option. How to do that?</p>\n\n<hr>\n\n<p>EDIT: No need to answer this question anymore. I've found a bug in kotlinc related to this.</p>\n"}, {"tags": ["kotlin", "dagger-2"], "comments": [{"owner": {"reputation": 9794, "user_id": 1481408, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/929196ae336bbd9c18ad01f934b66e7a?s=128&d=identicon&r=PG", "display_name": "Deividi Cavarzan", "link": "https://stackoverflow.com/users/1481408/deividi-cavarzan"}, "edited": false, "score": 2, "creation_date": 1450570846, "post_id": 34376061, "comment_id": 56495230, "body": "did you have <code>kapt &#39;com.google.dagger:dagger-compiler:2.0.2&#39;</code> in build.gradle?"}, {"owner": {"reputation": 175, "user_id": 1344655, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9f8cd47504b7a2eb62749fee483c296b?s=128&d=identicon&r=PG", "display_name": "Devishankar", "link": "https://stackoverflow.com/users/1344655/devishankar"}, "edited": false, "score": 0, "creation_date": 1513178588, "post_id": 34376061, "comment_id": 82553987, "body": "Follwing will also works well to fix this issue  with plugins  <code>apply plugin: &#39;kotlin-android&#39; apply plugin: &#39;kotlin-kapt&#39;</code>  and dependencies  <code>implementation &quot;com.google.dagger:dagger:$dagger_version&quot; implementation &quot;com.google.dagger:dagger-android:$dagger_version&quot; implementation &quot;com.google.dagger:dagger-android-support:$dagger_version&quot; kapt &quot;com.google.dagger:dagger-compiler:$dagger_version&quot;     kapt &quot;com.google.dagger:dagger-android-processor:$dagger_version&quot;</code>"}], "answers": [{"comments": [{"owner": {"reputation": 2899, "user_id": 2539472, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/0475d27157bbb03085abda1ac6446b53?s=128&d=identicon&r=PG", "display_name": "homerman", "link": "https://stackoverflow.com/users/2539472/homerman"}, "edited": false, "score": 0, "creation_date": 1471097033, "post_id": 34376905, "comment_id": 65222837, "body": "where&#39;d you learn about the &quot;generateStubs&quot; configuration? i was missing this bit and luckily stumbled across this answer."}, {"owner": {"reputation": 726, "user_id": 3577664, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9843887a40dc67dee3666ea3034abde4?s=128&d=identicon&r=PG", "display_name": "JuniperPhoton", "link": "https://stackoverflow.com/users/3577664/juniperphoton"}, "edited": false, "score": 0, "creation_date": 1497324654, "post_id": 34376905, "comment_id": 76016499, "body": "Did the sequence of items in <code>dependencies</code> count? First it didn&#39;t work for me because <code>compile &quot;org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version&quot;</code> were added to the end of dependencies list. Then I move it to top and it worked."}, {"owner": {"reputation": 175, "user_id": 1344655, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9f8cd47504b7a2eb62749fee483c296b?s=128&d=identicon&r=PG", "display_name": "Devishankar", "link": "https://stackoverflow.com/users/1344655/devishankar"}, "edited": false, "score": 0, "creation_date": 1513178410, "post_id": 34376905, "comment_id": 82553870, "body": "Follwing will also works well to fix this issue  with plugins  <code>apply plugin: &#39;kotlin-android&#39; apply plugin: &#39;kotlin-kapt&#39;</code>  and dependencies  <code>implementation &quot;com.google.dagger:dagger:$dagger_version&quot; implementation &quot;com.google.dagger:dagger-android:$dagger_version&quot; implementation &quot;com.google.dagger:dagger-android-support:$dagger_version&quot; kapt &quot;com.google.dagger:dagger-compiler:$dagger_version&quot;     kapt &quot;com.google.dagger:dagger-android-processor:$dagger_version&quot;</code>"}, {"owner": {"reputation": 411, "user_id": 4053857, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/04fb1d791f346f84009d943b1a85dcf8?s=128&d=identicon&r=PG&f=1", "display_name": "Ashok", "link": "https://stackoverflow.com/users/4053857/ashok"}, "edited": false, "score": 0, "creation_date": 1553167002, "post_id": 34376905, "comment_id": 97288161, "body": "If it is java based android project, what we should give in gradle file?"}], "tags": [], "owner": {"reputation": 9794, "user_id": 1481408, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/929196ae336bbd9c18ad01f934b66e7a?s=128&d=identicon&r=PG", "display_name": "Deividi Cavarzan", "link": "https://stackoverflow.com/users/1481408/deividi-cavarzan"}, "is_accepted": true, "score": 101, "last_activity_date": 1523683082, "last_edit_date": 1523683082, "creation_date": 1450572110, "answer_id": 34376905, "question_id": 34376061, "link": "https://stackoverflow.com/questions/34376061/dagger-and-kotlin-dagger-doesnt-generate-component-classes/34376905#34376905", "title": "Dagger and Kotlin. Dagger doesn&#39;t generate component classes", "body": "<p>You need to have the <a href=\"http://blog.jetbrains.com/kotlin/2015/05/kapt-annotation-processing-for-kotlin/\" rel=\"noreferrer\">kapt processor</a> in build.gradle:</p>\n\n<pre><code>kapt {\n    generateStubs = true\n}\n\ndependencies {\n    ...\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n    compile 'com.google.dagger:dagger:2.0.2'\n    kapt 'com.google.dagger:dagger-compiler:2.0.2'\n    ...\n}\n</code></pre>\n\n<p>This extension will generate the code for dagger.</p>\n\n<p>Additionally, for newer gradle versions, you can also apply the plugin in your build.gradle:</p>\n\n<pre><code>apply plugin: 'kotlin-kapt'\n\ndependencies {\n    ...\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n    compile 'com.google.dagger:dagger:2.0.2'\n    kapt 'com.google.dagger:dagger-compiler:2.0.2'\n    ...\n}\n</code></pre>\n\n<p>You can check <a href=\"https://github.com/damianpetla/kotlin-dagger-example\" rel=\"noreferrer\">this project</a> for reference </p>\n"}, {"comments": [{"owner": {"reputation": 1455, "user_id": 969478, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/mLNKv.jpg?s=128&g=1", "display_name": "Giszmo", "link": "https://stackoverflow.com/users/969478/giszmo"}, "edited": false, "score": 1, "creation_date": 1493441910, "post_id": 43670496, "comment_id": 74429848, "body": "thanks for finding this just yesterday :D do you have any source for this? how did you find out?"}, {"owner": {"reputation": 834, "user_id": 1923879, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/Bhz6h.jpg?s=128&g=1", "display_name": "charlag", "link": "https://stackoverflow.com/users/1923879/charlag"}, "edited": false, "score": 1, "creation_date": 1500388297, "post_id": 43670496, "comment_id": 77307504, "body": "To make it clear: <code>apply plugin: &#39;kotlin-kapt&#39;</code> should be in your <i>module</i> build.gradle"}, {"owner": {"reputation": 387, "user_id": 6761960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2253e9b7d3317eb1172b9fd23b60377d?s=128&d=identicon&r=PG&f=1", "display_name": "Plumbus", "link": "https://stackoverflow.com/users/6761960/plumbus"}, "reply_to_user": {"reputation": 834, "user_id": 1923879, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/Bhz6h.jpg?s=128&g=1", "display_name": "charlag", "link": "https://stackoverflow.com/users/1923879/charlag"}, "edited": false, "score": 0, "creation_date": 1511193150, "post_id": 43670496, "comment_id": 81745002, "body": "Thanks @charlag. Updated the answer."}], "tags": [], "owner": {"reputation": 387, "user_id": 6761960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2253e9b7d3317eb1172b9fd23b60377d?s=128&d=identicon&r=PG&f=1", "display_name": "Plumbus", "link": "https://stackoverflow.com/users/6761960/plumbus"}, "is_accepted": false, "score": 21, "last_activity_date": 1508806552, "last_edit_date": 1508806552, "creation_date": 1493343053, "answer_id": 43670496, "question_id": 34376061, "link": "https://stackoverflow.com/questions/34376061/dagger-and-kotlin-dagger-doesnt-generate-component-classes/43670496#43670496", "title": "Dagger and Kotlin. Dagger doesn&#39;t generate component classes", "body": "<p>I don't know when this change happened, but on 1.1.2 of the Kotlin gradle plugin you replace this (in your module's <code>build.gradle</code>):</p>\n\n<pre><code>kapt {\n    generateStubs = true\n}\n</code></pre>\n\n<p>with this:</p>\n\n<pre><code>apply plugin: 'kotlin-kapt'\n</code></pre>\n\n<p>and then make sure to replace dependencies that use <code>annotationProcessor</code> with <code>kapt</code>.</p>\n\n<p>For example, the old way would be to use:</p>\n\n<pre><code>annotationProcessor (\n    'some.library:one:1.0'\n    ...\n    'some.library.n:n.0'\n)\n</code></pre>\n\n<p>and now you use:</p>\n\n<pre><code>kapt (\n    'some.library:one:1.0'\n    ...\n    'some.library.n:n.0'\n)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 8055, "user_id": 706387, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/SiTPw.jpg?s=128&g=1", "display_name": "kosiara - Bartosz Kosarzycki", "link": "https://stackoverflow.com/users/706387/kosiara-bartosz-kosarzycki"}, "edited": false, "score": 0, "creation_date": 1516056438, "post_id": 43830540, "comment_id": 83527265, "body": "Works. Remember to add <code>kapt &#39;com.google.dagger:dagger-android-processor:2.14.1&#39;</code>  and  <code>kapt &#39;com.google.dagger:dagger-compiler:2.14.1&#39;</code> in the dependencies"}, {"owner": {"reputation": 13958, "user_id": 689723, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/rQNO2.jpg?s=128&g=1", "display_name": "cesards", "link": "https://stackoverflow.com/users/689723/cesards"}, "edited": false, "score": 0, "creation_date": 1612301449, "post_id": 43830540, "comment_id": 116723293, "body": "This is deprecated."}], "tags": [], "owner": {"reputation": 463, "user_id": 5591781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e6fc676ea6aeafd6c8d7349d5fafe89?s=128&d=identicon&r=PG&f=1", "display_name": "Minis", "link": "https://stackoverflow.com/users/5591781/minis"}, "is_accepted": false, "score": -1, "last_activity_date": 1494153907, "creation_date": 1494153907, "answer_id": 43830540, "question_id": 34376061, "link": "https://stackoverflow.com/questions/34376061/dagger-and-kotlin-dagger-doesnt-generate-component-classes/43830540#43830540", "title": "Dagger and Kotlin. Dagger doesn&#39;t generate component classes", "body": "<p>If u have problem withe <code>DaggerComponent</code>, You should add </p>\n\n<pre><code>apply plugin: 'kotlin-kapt'\n\nkapt {\n    generateStubs = true\n}\n</code></pre>\n\n<p>to <code>build.gradle</code>it will generate <code>kotlin</code> code for <code>dagger 2</code> otherwise project will only build on <code>Rebuild</code></p>\n"}, {"tags": [], "owner": {"reputation": 4683, "user_id": 3870025, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/a0fd762141547dc47fbf1fd5b9b389fc?s=128&d=identicon&r=PG&f=1", "display_name": "solidak", "link": "https://stackoverflow.com/users/3870025/solidak"}, "is_accepted": false, "score": 14, "last_activity_date": 1507819738, "creation_date": 1507819738, "answer_id": 46712642, "question_id": 34376061, "link": "https://stackoverflow.com/questions/34376061/dagger-and-kotlin-dagger-doesnt-generate-component-classes/46712642#46712642", "title": "Dagger and Kotlin. Dagger doesn&#39;t generate component classes", "body": "<h2>UPDATE FOR KOTLIN 1.1.4</h2>\n\n<p><code>generateStubs</code> does not work anymore. Feel free to make a build with the latest Kotlin and it would tell you in the <em>Messages</em> section of Android Studio that it is not necessary anymore. Here's an up-to-date list of dependencies for <a href=\"https://github.com/google/dagger#android-gradle\" rel=\"noreferrer\">Dagger2 for Android</a> and Kotlin</p>\n\n<pre><code>apply plugin: 'kotlin-kapt'\n\n//...\n// Other Gradle stuff\n//...\n\ndependencies {\n    compile \"org.jetbrains.kotlin:kotlin-stdlib-jre7:1.1.4-3\"\n\n    compile 'com.google.dagger:dagger-android:2.12'\n    kapt 'com.google.dagger:dagger-android-processor:2.12'\n    compileOnly 'com.google.dagger:dagger:2.12'\n    kapt 'com.google.dagger:dagger-compiler:2.12'\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2542, "user_id": 857681, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f216a3266f78ea7b1500dbe0f065740?s=128&d=identicon&r=PG", "display_name": "speedynomads", "link": "https://stackoverflow.com/users/857681/speedynomads"}, "edited": false, "score": 0, "creation_date": 1552470145, "post_id": 47796821, "comment_id": 97017681, "body": "Have you been able to get this working in an android library project?"}, {"owner": {"reputation": 175, "user_id": 1344655, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9f8cd47504b7a2eb62749fee483c296b?s=128&d=identicon&r=PG", "display_name": "Devishankar", "link": "https://stackoverflow.com/users/1344655/devishankar"}, "reply_to_user": {"reputation": 2542, "user_id": 857681, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f216a3266f78ea7b1500dbe0f065740?s=128&d=identicon&r=PG", "display_name": "speedynomads", "link": "https://stackoverflow.com/users/857681/speedynomads"}, "edited": false, "score": 0, "creation_date": 1563028315, "post_id": 47796821, "comment_id": 100570652, "body": "Yes @speedynomads"}, {"owner": {"reputation": 1085, "user_id": 5895188, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-nHvEdDqqAKg/AAAAAAAAAAI/AAAAAAAAA8s/msBvoAO4E7w/photo.jpg?sz=128", "display_name": "Saurabh Singh", "link": "https://stackoverflow.com/users/5895188/saurabh-singh"}, "edited": false, "score": 0, "creation_date": 1604768128, "post_id": 47796821, "comment_id": 114450150, "body": "adding  &quot;kapt &quot;com.google.dagger:dagger-android-processor:2.+&quot;  apart from others for dagger worked for me."}], "tags": [], "owner": {"reputation": 175, "user_id": 1344655, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9f8cd47504b7a2eb62749fee483c296b?s=128&d=identicon&r=PG", "display_name": "Devishankar", "link": "https://stackoverflow.com/users/1344655/devishankar"}, "is_accepted": false, "score": 6, "last_activity_date": 1513179192, "creation_date": 1513179192, "answer_id": 47796821, "question_id": 34376061, "link": "https://stackoverflow.com/questions/34376061/dagger-and-kotlin-dagger-doesnt-generate-component-classes/47796821#47796821", "title": "Dagger and Kotlin. Dagger doesn&#39;t generate component classes", "body": "<p>This issue can be fixed with the bellow change which is different from original answer</p>\n\n<p>Following will also work well to fix this issue</p>\n\n<p>with plugins</p>\n\n<pre><code>apply plugin: 'kotlin-android'\napply plugin: 'kotlin-kapt'\n</code></pre>\n\n<p>and dependencies</p>\n\n<pre><code>implementation \"com.google.dagger:dagger:$dagger_version\"\nimplementation \"com.google.dagger:dagger-android:$dagger_version\"\nimplementation \"com.google.dagger:dagger-android-support:$dagger_version\" \nkapt \"com.google.dagger:dagger-compiler:$dagger_version\"\nkapt \"com.google.dagger:dagger-android-processor:$dagger_version\"\n</code></pre>\n\n<p>For reference check out this <a href=\"https://github.com/satorufujiwara/kotlin-architecture-components/blob/master/app/build.gradle\" rel=\"noreferrer\">Gist</a></p>\n"}], "owner": {"reputation": 555, "user_id": 4564530, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TnXH6aUu1tI/AAAAAAAAAAI/AAAAAAAAAwk/24cWrMW9hV8/photo.jpg?sz=128", "display_name": "Leo", "link": "https://stackoverflow.com/users/4564530/leo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 18415, "favorite_count": 4, "accepted_answer_id": 34376905, "answer_count": 5, "score": 43, "last_activity_date": 1557861015, "creation_date": 1450564263, "last_edit_date": 1557861015, "question_id": 34376061, "link": "https://stackoverflow.com/questions/34376061/dagger-and-kotlin-dagger-doesnt-generate-component-classes", "title": "Dagger and Kotlin. Dagger doesn&#39;t generate component classes", "body": "<p>I'm new with kotlin and Dagger. I have a little problem that I do not how to solve and I don't find a solution.</p>\n\n<p>So this is what I have:</p>\n\n<pre><code>@Module\nclass AppModule (app: Application) {\n    private var application: Application;\n\n    init {\n        this.application = app;\n    }\n\n    @Provides fun provideApplication(): Application? {\n        return application;\n    }\n\n    @Provides fun provideResources(): Resources? {\n        return application.resources;\n    }\n}\n\n@Singleton\n@Component(modules =  arrayOf(AppModule::class))\ninterface AppComponent: AppComponentBase {\n\n    public class Initializer {\n        private constructor(){}\n\n        companion object {\n            fun Init(app: Application): AppComponent? {\n                return DaggerAppComponent.builder().appModule(AppModule(app)).build()\n            }\n        }\n    }\n}\n</code></pre>\n\n<p><code>AppComponentBase</code>: This interface contain all the methods needed by this component.</p>\n\n<p>Now, the problem is that this <code>DaggerAppComponent</code> class is not generated by Dagger if I do this <code>DaggerAppComponent.builder().appModule(AppModule(app)).build()</code> invocation within the <code>companion object</code>.\nIf a invoke the same line any were by the <code>companion object</code> dagger generate de class without any problem.</p>\n\n<p>An other thing I did look for a solution was create an other different class with the same structure, and importe the <code>DaggerAppComponent</code> as internal object, and I the same result happened. </p>\n\n<p>I don't what to have the initialization of the component outside. So, there any other alternative solution, or what am I doing wrong?.</p>\n"}, {"tags": ["android", "realm", "kotlin", "data-class"], "comments": [{"owner": {"reputation": 8011, "user_id": 3830694, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/6TotP.jpg?s=128&g=1", "display_name": "Krupal Shah", "link": "https://stackoverflow.com/users/3830694/krupal-shah"}, "edited": false, "score": 0, "creation_date": 1450600277, "post_id": 34368374, "comment_id": 56499960, "body": "I also experienced this issue with SugarORM....Jetbrains have asked for feedback on it... You can post cooments to this post though: <a href=\"http://blog.jetbrains.com/kotlin/2015/09/feedback-request-limitations-on-data-classes/\" rel=\"nofollow noreferrer\">blog.jetbrains.com/kotlin/2015/09/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "is_accepted": false, "score": 2, "last_activity_date": 1450524723, "creation_date": 1450524723, "answer_id": 34370203, "question_id": 34368374, "link": "https://stackoverflow.com/questions/34368374/kotlin-data-class-of-realmobject/34370203#34370203", "title": "Kotlin data class of RealmObject", "body": "<p>Any Kotlin property in <strong>any</strong> class has a getter and a setter. So I believe you code should just work as yourself suggested (without <code>data</code> modifier). </p>\n\n<p><a href=\"https://kotlinlang.org/docs/reference/data-classes.html#data-classes\" rel=\"nofollow\">https://kotlinlang.org/docs/reference/data-classes.html#data-classes</a>\n<a href=\"https://kotlinlang.org/docs/reference/java-to-kotlin-interop.html#properties\" rel=\"nofollow\">https://kotlinlang.org/docs/reference/java-to-kotlin-interop.html#properties</a></p>\n\n<p>P.S. I agree that the docs on properties are unclear on the subject </p>\n"}, {"comments": [{"owner": {"reputation": 4435, "user_id": 812598, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ad6c769fb4cb6525f4ea6c6e7bf8983a?s=128&d=identicon&r=PG", "display_name": "GoRoS", "link": "https://stackoverflow.com/users/812598/goros"}, "edited": false, "score": 2, "creation_date": 1489754627, "post_id": 34390815, "comment_id": 72821764, "body": "Do we have any update on this? In Realm 3.0.0 I see final fields are still not allowed (that&#39;s why you use open), but thus you lose those derived methods data classes automatically provide."}, {"owner": {"reputation": 19323, "user_id": 1389357, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uy7DP.jpg?s=128&g=1", "display_name": "Christian Melchior", "link": "https://stackoverflow.com/users/1389357/christian-melchior"}, "reply_to_user": {"reputation": 4435, "user_id": 812598, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ad6c769fb4cb6525f4ea6c6e7bf8983a?s=128&d=identicon&r=PG", "display_name": "GoRoS", "link": "https://stackoverflow.com/users/812598/goros"}, "edited": false, "score": 5, "creation_date": 1489754935, "post_id": 34390815, "comment_id": 72821982, "body": "Data classes are fundamentally problematic since they essentially do what AutoValue does, so It is doubtful we can ever support data classes as RealmObjects. See e.g <a href=\"https://github.com/realm/realm-java/issues/4291\" rel=\"nofollow noreferrer\">github.com/realm/realm-java/issues/4291</a> which describes our current thinking. (Search for AutoValue, it is a quite long text)."}, {"owner": {"reputation": 11620, "user_id": 2898715, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LWv1Z.jpg?s=128&g=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/2898715/eric"}, "reply_to_user": {"reputation": 4435, "user_id": 812598, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ad6c769fb4cb6525f4ea6c6e7bf8983a?s=128&d=identicon&r=PG", "display_name": "GoRoS", "link": "https://stackoverflow.com/users/812598/goros"}, "edited": false, "score": 0, "creation_date": 1589302635, "post_id": 34390815, "comment_id": 109237748, "body": "@GoRoS although the example code has been updated to remove the <code>open</code> modifier on kotlin properties, i think it&#39;s still necessary to keep them, because when they are accessed from Kotlin code, it seemed to still be getting the raw field value in some cases."}], "tags": [], "owner": {"reputation": 19323, "user_id": 1389357, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uy7DP.jpg?s=128&g=1", "display_name": "Christian Melchior", "link": "https://stackoverflow.com/users/1389357/christian-melchior"}, "is_accepted": true, "score": 37, "last_activity_date": 1450683011, "creation_date": 1450683011, "answer_id": 34390815, "question_id": 34368374, "link": "https://stackoverflow.com/questions/34368374/kotlin-data-class-of-realmobject/34390815#34390815", "title": "Kotlin data class of RealmObject", "body": "<p>Realm doesn't support Data classes currently. You can see an example of how to write Realm compatible model classes in Kotlin here: <a href=\"https://github.com/realm/realm-java/tree/master/examples/kotlinExample/src/main/kotlin/io/realm/examples/kotlin/model\">https://github.com/realm/realm-java/tree/master/examples/kotlinExample/src/main/kotlin/io/realm/examples/kotlin/model</a></p>\n\n<pre><code>public open class Person(\n        @PrimaryKey public open var name: String = \"\",\n        public open var age: Int = 0,\n        public open var dog: Dog? = null,\n        public open var cats: RealmList&lt;Cat&gt; = RealmList(),\n        @Ignore public open var tempReference: Int = 0,\n        public open var id: Long = 0\n) : RealmObject() {\n</code></pre>\n"}], "owner": {"reputation": 1358, "user_id": 5218585, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/gtN7e.jpg?s=128&g=1", "display_name": "Allen Vork", "link": "https://stackoverflow.com/users/5218585/allen-vork"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10910, "favorite_count": 5, "accepted_answer_id": 34390815, "answer_count": 2, "score": 33, "last_activity_date": 1505854828, "creation_date": 1450509649, "last_edit_date": 1505854828, "question_id": 34368374, "link": "https://stackoverflow.com/questions/34368374/kotlin-data-class-of-realmobject", "title": "Kotlin data class of RealmObject", "body": "<p>I'm using Kotlin and Realm to write a data class </p>\n\n<pre><code>data class AuthToken(val register: Boolean,\n                     val token: String,\n                     val tokenSecret: String,\n                     val user: AuthUser)\n</code></pre>\n\n<p>I have to save the data to db, so I use Realm to save it. But as we know, if I want to save the class to Realm, the <code>AuthToken</code> class has to extend <code>RealmObject</code>.</p>\n\n<p>That's the problem, Kotlin says data classes can't extend classes.\nso I give up data class, just using a normal Kotlin class as a model then another question comes:</p>\n\n<p>Kotlin class has no getter or setter. As we know Realm class have to set all the property private and write getter and setter.</p>\n\n<p>Now i'm wondering how to solve the problem.</p>\n"}, {"tags": ["java", "spring", "spring-mvc", "spring-boot", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 26657, "user_id": 404201, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fd9932a584c0d67b5e017cc49305ccb7?s=128&d=identicon&r=PG", "display_name": "Jasper Blues", "link": "https://stackoverflow.com/users/404201/jasper-blues"}, "edited": false, "score": 0, "creation_date": 1452750711, "post_id": 34379940, "comment_id": 57309495, "body": "I tried this, but didn&#39;t follow. Ended up using the approach in my answer. Not sure if it is a good one."}], "tags": [], "owner": {"reputation": 11834, "user_id": 1538877, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/N9qfZ.jpg?s=128&g=1", "display_name": "Ruslan", "link": "https://stackoverflow.com/users/1538877/ruslan"}, "is_accepted": true, "score": 3, "last_activity_date": 1450606671, "creation_date": 1450606671, "answer_id": 34379940, "question_id": 34366964, "link": "https://stackoverflow.com/questions/34366964/spring-boot-controlleradvice-exception-handler-not-firing/34379940#34379940", "title": "Spring Boot @ControllerAdvice exception handler not firing", "body": "<blockquote>\n  <p>I also have a Spring Security filter that evaluates API-Key and Access-Token header credentials. @ControllerAdvice doesn't work here - fair enough, given we're not dealing with a controller endpoint! </p>\n</blockquote>\n\n<p>Use EntryPoint and AcessDeniedHandler to handle exceptions from security filters. There are can be configured inside:</p>\n\n<pre><code>.exceptionHandling()\n</code></pre>\n\n<p>And configure FailureHandler if you extends AbstractAuthenticationProcessingFilter in your filter. </p>\n\n<pre><code> setAuthenticationFailureHandler()\n</code></pre>\n\n<p>Afaik ErrorController will be overwritten if you will deploy your application under application server.</p>\n"}], "owner": {"reputation": 26657, "user_id": 404201, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fd9932a584c0d67b5e017cc49305ccb7?s=128&d=identicon&r=PG", "display_name": "Jasper Blues", "link": "https://stackoverflow.com/users/404201/jasper-blues"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5942, "favorite_count": 0, "accepted_answer_id": 34379940, "answer_count": 1, "score": 9, "last_activity_date": 1450606671, "creation_date": 1450495867, "last_edit_date": 1450504531, "question_id": 34366964, "link": "https://stackoverflow.com/questions/34366964/spring-boot-controlleradvice-exception-handler-not-firing", "title": "Spring Boot @ControllerAdvice exception handler not firing", "body": "<p>I had the following controller advice set up, to return an APIs contract for error conditions: </p>\n\n<pre><code>@ControllerAdvice\npublic class ExceptionHandler : ResponseEntityExceptionHandler()\n{\n    @ExceptionHandler(Throwable::class)\n    @ResponseBody\n    public fun onException(ex: Throwable): ResponseEntity&lt;ErrorResponse&gt;\n    {\n        val errorResponse = ErrorResponse(\n           response = ResponseHeader(ex.responseCode(), ex.message))\n        return ResponseEntity(errorResponse, HttpStatus.UNAUTHORIZED);\n    }\n\n}\n</code></pre>\n\n<p>It <em>was</em> working fine and then stopped working. Now all exceptions are routed to <code>BasicErrorController</code>, which returns the following format: </p>\n\n<pre><code>{\n  \"timestamp\" : 1450495303166,\n  \"status\" : 403,\n  \"error\" : \"Forbidden\",\n  \"message\" : \"Access Denied\",\n  \"path\" : \"/profile/candidates\"\n}\n</code></pre>\n\n<p>The above is a nice opinionated starting point, but now it won't get out of the way. </p>\n\n<ul>\n<li>I've tried replacing the error handlers with one instance of <code>ExceptionHandlerExceptionResolver</code> but that didn't work. </li>\n<li>I've tried making my own CustomErrorHandler, but that also wasn't suitable since the original exception is no longer in the <code>HttpServletRequest</code> by the time it re-routes to the custom error controller. This information is needed in order to return an appropriate response to the client. </li>\n</ul>\n\n<p><strong>How to I:</strong></p>\n\n<ul>\n<li>Make SpringBoot <em>not</em> forward exceptions to an exception controller. </li>\n<li>Restore @ControllerAdvice exception handlers, so that I can just return an appropriate response body and status code. </li>\n</ul>\n\n<p>On startup spring logs: </p>\n\n<pre><code>main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionHandler\nmain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in responseEntityExceptionHandler\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p>After reading through the Spring Boot docs, I under stand now that the BasicErrorController is only supposed to fire for any exceptions <em>not</em> handled by a <code>@ControllerAdvice</code>. This appears not to be happening. So the question is why? </p>\n"}, {"tags": ["kotlin", "anko"], "answers": [{"tags": [], "owner": {"reputation": 425, "user_id": 2612509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/00a1cfb57dd4f05e0c81cff2577e11e7?s=128&d=identicon&r=PG", "display_name": "Gustorn", "link": "https://stackoverflow.com/users/2612509/gustorn"}, "is_accepted": false, "score": 8, "last_activity_date": 1450507750, "creation_date": 1450507750, "answer_id": 34368147, "question_id": 34351584, "link": "https://stackoverflow.com/questions/34351584/anko-0-8-unresolved-lparams-reference/34368147#34368147", "title": "Anko 0.8 - unresolved lparams reference", "body": "<p>Apparently <code>lparams</code> is still there, but cannot be used as an extension function for the outermost layout:</p>\n\n<p>So the following code fails: </p>\n\n<pre><code>override fun createView(ui: AnkoContext&lt;ReviewsFragment&gt;) = ui.apply {\n    verticalLayout {\n        // Layout elements here\n    }.lparams { \n        // Layout params here\n    }\n}.view\n</code></pre>\n\n<p>But this compiles fine:</p>\n\n<pre><code>override fun createView(ui: AnkoContext&lt;ReviewsFragment&gt;) = ui.apply {\n    verticalLayout {\n        lparams {\n            // Layout params here\n        }\n\n        // Layout elements here\n        verticalLayout { }.lparams {\n            // lparams works fine if there is a parent layout\n        }\n    } \n}.view\n</code></pre>\n\n<p>It's worth noting that using the non-tailing version of <code>lparams</code> is discouraged for inner layouts: it will create the wrong sublass of <code>LayoutParams</code> when the nested layouts are of different types. For a complete discussion, see this <a href=\"https://github.com/Kotlin/anko/issues/68\">GitHub Issue</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 69, "user_id": 3495177, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/quLvg.jpg?s=128&g=1", "display_name": "Lucas Albuquerque", "link": "https://stackoverflow.com/users/3495177/lucas-albuquerque"}, "is_accepted": false, "score": 1, "last_activity_date": 1465492237, "last_edit_date": 1465492237, "creation_date": 1465441546, "answer_id": 37716135, "question_id": 34351584, "link": "https://stackoverflow.com/questions/34351584/anko-0-8-unresolved-lparams-reference/37716135#37716135", "title": "Anko 0.8 - unresolved lparams reference", "body": "<p>Why don't you use the most recent way to write <code>createView()</code> method?\nI think the following solves your problem:</p>\n\n<pre><code>override fun createView(ui: AnkoContext&lt;ReviewsFragment&gt;) : View = with(ui) { \n    return verticalLayout { \n    // Layout elements here \n    }.lparams { \n    // Layout params here \n    } \n}\n</code></pre>\n"}], "owner": {"reputation": 425, "user_id": 2612509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/00a1cfb57dd4f05e0c81cff2577e11e7?s=128&d=identicon&r=PG", "display_name": "Gustorn", "link": "https://stackoverflow.com/users/2612509/gustorn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1165, "favorite_count": 1, "answer_count": 2, "score": 6, "last_activity_date": 1465492237, "creation_date": 1450428234, "question_id": 34351584, "link": "https://stackoverflow.com/questions/34351584/anko-0-8-unresolved-lparams-reference", "title": "Anko 0.8 - unresolved lparams reference", "body": "<p>The main question is: is <code>lparams</code> simply gone from Anko, or am I doing something terribly wrong? The following snippet fails to compile:</p>\n\n<pre><code>verticalLayout {\n}.lparams(width = matchParent, height = matchParent) {\n    topMargin = dip(10)\n}\n</code></pre>\n\n<p>While this works without any problems:</p>\n\n<pre><code>verticalLayout {\n    layoutParams = LinearLayout.LayoutParams(matchParent, matchParent).apply {\n        topMargin = dip(10)\n    }\n}\n</code></pre>\n\n<p>I wouldn't mind the second option too much, but you have to specify the layout type when generating the params, which can get a bit tiresome (and is also more brittle than the original solution).</p>\n\n<p>I haven't found anything on the <code>Anko</code> GitHub page, the changelog, or by skimming recent commits. Here's the full UI class for reference:</p>\n\n<pre><code>class ReviewsFragmentUi(ctx: AnkoContext&lt;ReviewsFragment&gt;) : AnkoComponent&lt;ReviewsFragment&gt; {\n    override fun createView(ui: AnkoContext&lt;ReviewsFragment&gt;) = ui.apply {\n        verticalLayout {\n            layoutParams = LinearLayout.LayoutParams(matchParent, matchParent).apply {\n                topMargin = dip(10)\n            }\n        }\n    }.view\n}\n</code></pre>\n\n<p>Relevant Gradle entries (I'm using Kotlin 1.0.0-beta-3595):</p>\n\n<pre><code>ext.versions = [\n    anko : '0.8.1',\n]\n\ncompile \"org.jetbrains.anko:anko-common:$versions.anko\",\ncompile \"org.jetbrains.anko:anko-sdk21:$versions.anko\",\ncompile \"org.jetbrains.anko:anko-support-v4:$versions.anko\",\ncompile \"org.jetbrains.anko:anko-design:$versions.anko\",\ncompile \"org.jetbrains.anko:anko-appcompat-v7:$versions.anko\",\ncompile \"org.jetbrains.anko:anko-cardview-v7:$versions.anko\",\ncompile \"org.jetbrains.anko:anko-recyclerview-v7:$versions.anko\",\ncompile \"org.jetbrains.anko:anko-gridlayout-v7:$versions.anko\",\n</code></pre>\n\n<p>As a follow-up question: if <code>lparams</code> is indeed gone, then is there a more elegant replacement than what I'm already doing?</p>\n"}, {"tags": ["android", "kotlin"], "answers": [{"comments": [{"owner": {"reputation": 3925, "user_id": 3806331, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ab7f221d4245947fd3260c364ffd0645?s=128&d=identicon&r=PG&f=1", "display_name": "johnny_crq", "link": "https://stackoverflow.com/users/3806331/johnny-crq"}, "edited": false, "score": 0, "creation_date": 1450433751, "post_id": 34347410, "comment_id": 56447929, "body": "ok thank you! That seems a lot of code for such an easy stuff. let&#39;s see if we can&#39;t find a better alternative tho, if not i&#39;ll acept ur ans"}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 4, "creation_date": 1450475705, "post_id": 34347410, "comment_id": 56471529, "body": "maybe it should be in stdlib?"}], "tags": [], "owner": {"reputation": 9794, "user_id": 1481408, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/929196ae336bbd9c18ad01f934b66e7a?s=128&d=identicon&r=PG", "display_name": "Deividi Cavarzan", "link": "https://stackoverflow.com/users/1481408/deividi-cavarzan"}, "is_accepted": true, "score": 11, "last_activity_date": 1450405567, "last_edit_date": 1450405567, "creation_date": 1450403896, "answer_id": 34347410, "question_id": 34346966, "link": "https://stackoverflow.com/questions/34346966/kotlin-lazy-default-property/34347410#34347410", "title": "Kotlin lazy default property", "body": "<p>You can create your own delegate method:</p>\n\n<pre><code>private class ColorDelegate&lt;T&gt;(initializer: () -&gt; T) : ReadWriteProperty&lt;Any?, T&gt; {\n\n    private var initializer: (() -&gt; T)? = initializer\n\n    private var value: T? = null\n\n    override fun getValue(thisRef: Any?, property: KProperty&lt;*&gt;): T {\n        return value ?: initializer!!()\n    }\n\n    override fun setValue(thisRef: Any?, property: KProperty&lt;*&gt;, value: T) {\n        this.value = value\n    }\n}\n</code></pre>\n\n<p>Declare in some delegate:</p>\n\n<pre><code>object DelegatesExt {\n    fun &lt;T&gt; lazyColor(initializer: () -&gt; T): ReadWriteProperty&lt;Any?, T&gt; = ColorDelegate(initializer)\n}\n</code></pre>\n\n<p>And use as follow:</p>\n\n<pre><code>var toolbarColor by DelegatesExt.lazyColor {\n    // you can have access to your current context here.\n    // return the default color to be used\n    resources.getColor(R.color.your_color)\n}\n\n...\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    // some fun code\n    // toolbarColor at this point will be R.color.your_color\n    // but you can set it a new value\n    toolbarColor = resources.getColor(R.color.new_color)\n    // now toolbarColor has the new value that you provide.\n}\n</code></pre>\n\n<p>I think this could be a cleaner way to do, but I don't know yet (starting with kotlin few days ago). I will take a look and see if this could be done with less code. </p>\n"}, {"comments": [{"owner": {"reputation": 9794, "user_id": 1481408, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/929196ae336bbd9c18ad01f934b66e7a?s=128&d=identicon&r=PG", "display_name": "Deividi Cavarzan", "link": "https://stackoverflow.com/users/1481408/deividi-cavarzan"}, "edited": false, "score": 0, "creation_date": 1450494028, "post_id": 34363256, "comment_id": 56475904, "body": "Using hashmap like this, can I use context in initializer?"}, {"owner": {"reputation": 24586, "user_id": 3255152, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fbd95ef81d0a85310fee8dd46e0f65b0?s=128&d=identicon&r=PG&f=1", "display_name": "mfulton26", "link": "https://stackoverflow.com/users/3255152/mfulton26"}, "reply_to_user": {"reputation": 9794, "user_id": 1481408, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/929196ae336bbd9c18ad01f934b66e7a?s=128&d=identicon&r=PG", "display_name": "Deividi Cavarzan", "link": "https://stackoverflow.com/users/1481408/deividi-cavarzan"}, "edited": false, "score": 0, "creation_date": 1450498144, "post_id": 34363256, "comment_id": 56476542, "body": "I&#39;m not sure I understand your question. What do you mean by &quot;use context&quot;?"}], "tags": [], "owner": {"reputation": 24586, "user_id": 3255152, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fbd95ef81d0a85310fee8dd46e0f65b0?s=128&d=identicon&r=PG&f=1", "display_name": "mfulton26", "link": "https://stackoverflow.com/users/3255152/mfulton26"}, "is_accepted": false, "score": 1, "last_activity_date": 1450472229, "last_edit_date": 1450472229, "creation_date": 1450469549, "answer_id": 34363256, "question_id": 34346966, "link": "https://stackoverflow.com/questions/34346966/kotlin-lazy-default-property/34363256#34363256", "title": "Kotlin lazy default property", "body": "<p>You can <a href=\"https://kotlinlang.org/docs/reference/delegated-properties.html#storing-properties-in-a-map\" rel=\"nofollow\">store your property in a map</a> to basically create a mutable lazy. You need a mutable map (like a <code>HashMap&lt;K, V&gt;</code>) with a default function to delegate to:</p>\n\n<pre><code>var toolbarColor by hashMapOf&lt;String, Any?&gt;()\n        .withDefault { toolbarColor = R.color.colorPrimary; toolbarColor }\n</code></pre>\n\n<p>You'll also need to import some extension functions: <code>import kotlin.properties.getValue</code> and <code>import kotlin.properties.setValue</code>.</p>\n\n<p>It would be nice if Kotlin provided something built-in and optimized for this (like a <code>mutableLazy</code> or something). As such, I've created <a href=\"https://youtrack.jetbrains.com/issue/KT-10451\" rel=\"nofollow\">KT-10451</a>.</p>\n"}], "owner": {"reputation": 3925, "user_id": 3806331, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ab7f221d4245947fd3260c364ffd0645?s=128&d=identicon&r=PG&f=1", "display_name": "johnny_crq", "link": "https://stackoverflow.com/users/3806331/johnny-crq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3452, "favorite_count": 3, "accepted_answer_id": 34347410, "answer_count": 2, "score": 11, "last_activity_date": 1505852211, "creation_date": 1450400384, "last_edit_date": 1505852211, "question_id": 34346966, "link": "https://stackoverflow.com/questions/34346966/kotlin-lazy-default-property", "title": "Kotlin lazy default property", "body": "<p>In Kotlin, how do i define a <code>var</code> that has a lazy default value ?</p>\n\n<p>for example, a <code>val</code> would be something like this:</p>\n\n<pre><code>val toolbarColor  by lazy {color(R.color.colorPrimary)}\n</code></pre>\n\n<p>What i want to do is, have a default value for some property (<code>toolbarColor</code>), and i can change that value for anything else. Is it possible? </p>\n\n<p>EDIT: This does the partial trick. </p>\n\n<pre><code>var toolbarColor = R.color.colorPrimary\n    get() = color(field)\n    set(value){\n        field = value\n    }\n</code></pre>\n\n<p>Is it possible to ease this by writing </p>\n\n<pre><code>var toolbarColor = color(R.color.colorPrimary)\n    set(value){\n        field = value\n    }\n</code></pre>\n\n<p>in a way that the default value is computed lazily? At the moment it won't work because <code>color()</code> needs a <code>Context</code> that is only initialized later.</p>\n"}, {"tags": ["generics", "operator-overloading", "operator-keyword", "kotlin", "jvm-languages"], "comments": [{"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 1, "creation_date": 1450400212, "post_id": 34342741, "comment_id": 56435567, "body": "Wait, what does <code>val works: Boolean = ex.unaryMinus()</code> mean? How can that work?"}, {"owner": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 2, "creation_date": 1450455933, "post_id": 34342741, "comment_id": 56461547, "body": "This is a bug, please report at <a href=\"https://youtrack.jetbrains.com/issues/KT\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issues/KT</a>"}, {"owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "reply_to_user": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1450468336, "post_id": 34342741, "comment_id": 56468137, "body": "@voddan What do you mean? The type is inferred from the value&#39;s type. Alternatively <code>val works = ex.&lt;Boolean&gt;unaryMinus()</code>  @AlexanderUdalov Will do. Thanks for your confirmation."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1450468798, "post_id": 34342741, "comment_id": 56468378, "body": "Oh, ok.  My bad, sorry"}, {"owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "reply_to_user": {"reputation": 25812, "user_id": 288456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf294ff6d86cc587dec43e2af34a9532?s=128&d=identicon&r=PG", "display_name": "Alexander Udalov", "link": "https://stackoverflow.com/users/288456/alexander-udalov"}, "edited": false, "score": 0, "creation_date": 1450519697, "post_id": 34342741, "comment_id": 56480837, "body": "@AlexanderUdalov <a href=\"https://youtrack.jetbrains.com/issueMobile/KT-10453\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issueMobile/KT-10453</a>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 1, "creation_date": 1451048563, "post_id": 34342741, "comment_id": 56667898, "body": "@jire when this bug is resolved can you please update the question to state it was a bug, and what version resolved it.  thanks."}], "answers": [{"tags": [], "owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "is_accepted": true, "score": 0, "last_activity_date": 1453630387, "creation_date": 1453630387, "answer_id": 34974529, "question_id": 34342741, "link": "https://stackoverflow.com/questions/34342741/kotlin-compiler-doesnt-infer-generic-type-for-some-operators/34974529#34974529", "title": "Kotlin: Compiler doesn&#39;t infer generic type for some operators", "body": "<p>This is unfortunately the result of a bug: <a href=\"https://youtrack.jetbrains.com/issue/KT-10453\" rel=\"nofollow\">https://youtrack.jetbrains.com/issue/KT-10453</a></p>\n"}], "owner": {"reputation": 7656, "user_id": 1938929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/OeAme.png?s=128&g=1", "display_name": "Jire", "link": "https://stackoverflow.com/users/1938929/jire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 428, "favorite_count": 0, "accepted_answer_id": 34974529, "answer_count": 1, "score": 2, "last_activity_date": 1453630387, "creation_date": 1450380639, "question_id": 34342741, "link": "https://stackoverflow.com/questions/34342741/kotlin-compiler-doesnt-infer-generic-type-for-some-operators", "title": "Kotlin: Compiler doesn&#39;t infer generic type for some operators", "body": "<p>Why can't Kotlin's compiler infer the generic type with some operator calls? For example:</p>\n\n<pre><code>class Example {\n\n    operator inline fun &lt;reified T : Any&gt; unaryMinus(): T {\n        ...\n    }\n\n}\n</code></pre>\n\n<p>Using it in a main method...</p>\n\n<pre><code>fun main(args: Array&lt;String&gt;) {\n    val ex = Example()\n\n    val works: Boolean = ex.unaryMinus()\n    val doesntWork: Boolean = -ex\n}\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/VrOK6.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/VrOK6.png\" alt=\"enter image description here\"></a></p>\n"}, {"tags": ["kotlin", "kotlin-null-safety"], "answers": [{"comments": [{"owner": {"reputation": 6474, "user_id": 270143, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tB6Fg.jpg?s=128&g=1", "display_name": "ycomp", "link": "https://stackoverflow.com/users/270143/ycomp"}, "edited": false, "score": 3, "creation_date": 1456246629, "post_id": 34342561, "comment_id": 58853726, "body": "what does it mean when the <code>!!</code> is at the end of a statement? IJ auto-convert to Kotlin did that for me <code>val price = sale.latest!!</code>"}, {"owner": {"reputation": 110088, "user_id": 2196460, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mAcQx.png?s=128&g=1", "display_name": "hotkey", "link": "https://stackoverflow.com/users/2196460/hotkey"}, "reply_to_user": {"reputation": 6474, "user_id": 270143, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tB6Fg.jpg?s=128&g=1", "display_name": "ycomp", "link": "https://stackoverflow.com/users/270143/ycomp"}, "edited": false, "score": 9, "creation_date": 1456249584, "post_id": 34342561, "comment_id": 58855723, "body": "@ycomp, it means that <code>sale.latest</code> can contain <code>null</code>; the assignment will succeed only if <code>sale.latest</code> is not null and will throw NPE otherwise. This gives null-safety for <code>val price</code>: its type will be non-null. See <a href=\"https://kotlinlang.org/docs/reference/null-safety.html\" rel=\"nofollow noreferrer\">kotlinlang.org/docs/reference/null-safety.html</a>"}, {"owner": {"reputation": 1376, "user_id": 1262131, "user_type": "registered", "accept_rate": 37, "profile_image": "https://www.gravatar.com/avatar/2815cbd1f59f5aba6443a9dd16796661?s=128&d=identicon&r=PG&f=1", "display_name": "Aada", "link": "https://stackoverflow.com/users/1262131/aada"}, "edited": false, "score": 2, "creation_date": 1534162353, "post_id": 34342561, "comment_id": 90597983, "body": "@hotkey: So what is the difference between getting NPE  - here OR when latest method is accessed on null object?"}, {"owner": {"reputation": 2856, "user_id": 1505146, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/614b839bf2b7905efbdd192ffa8fa21c?s=128&d=identicon&r=PG", "display_name": "Tasos P.", "link": "https://stackoverflow.com/users/1505146/tasos-p"}, "reply_to_user": {"reputation": 1376, "user_id": 1262131, "user_type": "registered", "accept_rate": 37, "profile_image": "https://www.gravatar.com/avatar/2815cbd1f59f5aba6443a9dd16796661?s=128&d=identicon&r=PG&f=1", "display_name": "Aada", "link": "https://stackoverflow.com/users/1262131/aada"}, "edited": false, "score": 3, "creation_date": 1547212154, "post_id": 34342561, "comment_id": 95125401, "body": "@Aada, it&#39;s common problem to debug an NPE and have a hard time locating the line / execution path that set the value to null. This null assignment could happen on a different context, class or even day! By using <code>!!</code> you can fail-fast and locate the root cause of a NPE. I wish Java had a similar feature (that is, w/o ugly <code>if</code> statements and/or <code>assert</code>ions)."}, {"owner": {"reputation": 494, "user_id": 9611330, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ViEMZ.jpg?s=128&g=1", "display_name": "Parisa Baastani", "link": "https://stackoverflow.com/users/9611330/parisa-baastani"}, "edited": false, "score": 0, "creation_date": 1607428409, "post_id": 34342561, "comment_id": 115263675, "body": "As Kotlin is Null safe programming language, to prevent throwing <code>NullPointerException</code> , use <code>let</code>. <code>T?.let{ it.addMarker() } </code>. By this way, you are safe."}], "tags": [], "owner": {"reputation": 110088, "user_id": 2196460, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mAcQx.png?s=128&g=1", "display_name": "hotkey", "link": "https://stackoverflow.com/users/2196460/hotkey"}, "is_accepted": true, "score": 255, "last_activity_date": 1576737801, "last_edit_date": 1576737801, "creation_date": 1450380039, "answer_id": 34342561, "question_id": 34342413, "link": "https://stackoverflow.com/questions/34342413/what-is-the-kotlin-double-bang-operator/34342561#34342561", "title": "What is the Kotlin double-bang (!!) operator?", "body": "<p>This is unsafe nullable type (<code>T?</code>) conversion to a non-nullable type (<code>T</code>),\n<code>!!</code> will throw <code>NullPointerException</code> if the value is <code>null</code>.</p>\n\n<p>It is documented <a href=\"https://kotlinlang.org/docs/reference/null-safety.html#the--operator\" rel=\"noreferrer\">here</a> along with Kotlin means of null-safety.</p>\n"}, {"comments": [{"owner": {"reputation": 152, "user_id": 4773879, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e6922e139262bd0571f04d2232ef7215?s=128&d=identicon&r=PG&f=1", "display_name": "Sam", "link": "https://stackoverflow.com/users/4773879/sam"}, "edited": false, "score": 6, "creation_date": 1535986789, "post_id": 44248897, "comment_id": 91254690, "body": "So, why would people use &#39;!!&#39; even though it is unsafe because an app will be terminated when that variable has null?"}, {"owner": {"reputation": 129, "user_id": 6613711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba080a0e1fbed397ac475ce4e6b2432d?s=128&d=identicon&r=PG&f=1", "display_name": "FMK", "link": "https://stackoverflow.com/users/6613711/fmk"}, "reply_to_user": {"reputation": 152, "user_id": 4773879, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e6922e139262bd0571f04d2232ef7215?s=128&d=identicon&r=PG&f=1", "display_name": "Sam", "link": "https://stackoverflow.com/users/4773879/sam"}, "edited": false, "score": 3, "creation_date": 1536828801, "post_id": 44248897, "comment_id": 91567057, "body": "@david you can use it only when you are 100% sure that the variable is not null (e.g. you explicitly checked it) and you need non-nullable variable"}, {"owner": {"reputation": 152, "user_id": 4773879, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e6922e139262bd0571f04d2232ef7215?s=128&d=identicon&r=PG&f=1", "display_name": "Sam", "link": "https://stackoverflow.com/users/4773879/sam"}, "reply_to_user": {"reputation": 129, "user_id": 6613711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba080a0e1fbed397ac475ce4e6b2432d?s=128&d=identicon&r=PG&f=1", "display_name": "FMK", "link": "https://stackoverflow.com/users/6613711/fmk"}, "edited": false, "score": 8, "creation_date": 1536830784, "post_id": 44248897, "comment_id": 91568239, "body": "@FMK I get it, thanks! I understand that double bang is used to make it possible that the values of nullable type variable to go into non-nullable types variable, right?"}, {"owner": {"reputation": 129, "user_id": 6613711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba080a0e1fbed397ac475ce4e6b2432d?s=128&d=identicon&r=PG&f=1", "display_name": "FMK", "link": "https://stackoverflow.com/users/6613711/fmk"}, "reply_to_user": {"reputation": 152, "user_id": 4773879, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e6922e139262bd0571f04d2232ef7215?s=128&d=identicon&r=PG&f=1", "display_name": "Sam", "link": "https://stackoverflow.com/users/4773879/sam"}, "edited": false, "score": 2, "creation_date": 1536834919, "post_id": 44248897, "comment_id": 91570687, "body": "@david yes, exactly."}, {"owner": {"reputation": 2949, "user_id": 532489, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/2z9ZS.png?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/532489/jeremy"}, "edited": false, "score": 0, "creation_date": 1612474482, "post_id": 44248897, "comment_id": 116786079, "body": "I get the reasoning, but if you think about it, if we know that the value of a variable will not be null and we are 100% sure of the fact, then to use a &#39;!!&#39; is in theory 100% of no use as we already are 100% sure that the variable in question will not be null, ever. Surely the usage is when we are not 100% sure that the variable in question may be null and we want an error to be thrown if it is null so we can fix the root cause?"}], "tags": [], "owner": {"reputation": 6041, "user_id": 5138921, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/5f202e6926526d8b4ad819de30504e1f?s=128&d=identicon&r=PG&f=1", "display_name": "Alf Moh", "link": "https://stackoverflow.com/users/5138921/alf-moh"}, "is_accepted": false, "score": 95, "last_activity_date": 1521461460, "last_edit_date": 1521461460, "creation_date": 1496083963, "answer_id": 44248897, "question_id": 34342413, "link": "https://stackoverflow.com/questions/34342413/what-is-the-kotlin-double-bang-operator/44248897#44248897", "title": "What is the Kotlin double-bang (!!) operator?", "body": "<p>Here is an example to make things clearer.\nSay you have this function</p>\n\n<pre><code>fun main(args: Array&lt;String&gt;) {\n    var email: String\n    email = null\n    println(email)\n}\n</code></pre>\n\n<p>This will produce the following compilation error.</p>\n\n<pre><code>Null can not be a value of a non-null type String\n</code></pre>\n\n<p>Now you can prevent that by adding a question mark to the <code>String</code> type to make it nullable.</p>\n\n<p>So we have</p>\n\n<pre><code>fun main(args: Array&lt;String&gt;) {\n    var email: String?\n    email = null\n    println(email)\n}\n</code></pre>\n\n<p>This produces a result of </p>\n\n<p><code>null</code></p>\n\n<p>Now if we want the function to throw an exception when the value of email is null, we can add two exclamations at the end of email. Like this</p>\n\n<pre><code>fun main(args: Array&lt;String&gt;) {\n    var email: String?\n    email = null\n    println(email!!)\n}\n</code></pre>\n\n<p>This will throw a <code>KotlinNullPointerException</code></p>\n"}, {"comments": [{"owner": {"reputation": 1969, "user_id": 1283501, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ccddd369227d688fdb62ee65b21a88d2?s=128&d=identicon&r=PG", "display_name": "Wolf359", "link": "https://stackoverflow.com/users/1283501/wolf359"}, "edited": false, "score": 2, "creation_date": 1557785465, "post_id": 54137223, "comment_id": 98873907, "body": "Asking as a beginner: why would I want to convert any value to a non-null type ?"}, {"owner": {"reputation": 1650, "user_id": 4130619, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/4fc6ed0802004cefbf1f629d638af022?s=128&d=identicon&r=PG&f=1", "display_name": "reducing activity", "link": "https://stackoverflow.com/users/4130619/reducing-activity"}, "reply_to_user": {"reputation": 1969, "user_id": 1283501, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ccddd369227d688fdb62ee65b21a88d2?s=128&d=identicon&r=PG", "display_name": "Wolf359", "link": "https://stackoverflow.com/users/1283501/wolf359"}, "edited": false, "score": 5, "creation_date": 1562912210, "post_id": 54137223, "comment_id": 100535426, "body": "@Wolf359 It allows you to be 100% sure that its value is not null. (&quot;it&#39;s common problem to debug an NPE and have a hard time locating the line / execution path that set the value to null. This null assignment could happen on a different context, class or even day!&quot; by Cascader)"}], "tags": [], "owner": {"reputation": 25953, "user_id": 6599590, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/qLSDJ.jpg?s=128&g=1", "display_name": "Andy", "link": "https://stackoverflow.com/users/6599590/andy"}, "is_accepted": false, "score": 16, "last_activity_date": 1576741229, "last_edit_date": 1576741229, "creation_date": 1547156003, "answer_id": 54137223, "question_id": 34342413, "link": "https://stackoverflow.com/questions/34342413/what-is-the-kotlin-double-bang-operator/54137223#54137223", "title": "What is the Kotlin double-bang (!!) operator?", "body": "<p><strong>Double-bang operator</strong> is an excellent option for fans of <code>NullPointerException</code> (or NPE for short). </p>\n\n<blockquote>\n  <p>The <strong>not-null assertion operator</strong> <strong><code>!!</code></strong> converts any value to a <strong>non-null type</strong> and throws an exception if the value is null. </p>\n</blockquote>\n\n<pre><code>val nonNull = a!!.length\n</code></pre>\n\n<p>So you can write <strong><code>a!!</code></strong>, and this will return a non-null value of <strong><code>a</code></strong> (a <code>String</code> here for example) or throw an NPE if <strong><code>a</code></strong> is null.</p>\n\n<p>If you want an NPE, you can have it, but you have to ask for it explicitly. <strong>This operator should be used in cases where the developer is guaranteeing \u2013 the value will never be null</strong>.</p>\n"}], "owner": {"reputation": 2487, "user_id": 3069849, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52c250fccbdaf1eb1300d6846baa9f4b?s=128&d=identicon&r=PG", "display_name": "mbr_at_ml", "link": "https://stackoverflow.com/users/3069849/mbr-at-ml"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81055, "favorite_count": 25, "accepted_answer_id": 34342561, "answer_count": 3, "score": 214, "last_activity_date": 1576741229, "creation_date": 1450379419, "last_edit_date": 1516465217, "question_id": 34342413, "link": "https://stackoverflow.com/questions/34342413/what-is-the-kotlin-double-bang-operator", "title": "What is the Kotlin double-bang (!!) operator?", "body": "<p>I'm converting Java to Kotlin with Android Studio. I get double bang after the instance variable. What is the double bang and more importantly where is this documented?</p>\n\n<pre><code>mMap!!.addMarker(MarkerOptions().position(london).title(\"Marker in London\"))\n</code></pre>\n"}, {"tags": ["kotlin"], "answers": [{"comments": [{"owner": {"reputation": 33145, "user_id": 40013, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/92c80ad799d0788de9ec7a4e3a26f98d?s=128&d=identicon&r=PG", "display_name": "Jesse Wilson", "link": "https://stackoverflow.com/users/40013/jesse-wilson"}, "edited": false, "score": 2, "creation_date": 1531921276, "post_id": 34340492, "comment_id": 89777977, "body": "Note that this doesn\u2019t work for primitive types like <code>char</code>."}, {"owner": {"reputation": 813, "user_id": 920849, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/81b87d446580566b0ab1f7ac2f715107?s=128&d=identicon&r=PG", "display_name": "Stephen Talley", "link": "https://stackoverflow.com/users/920849/stephen-talley"}, "edited": false, "score": 0, "creation_date": 1550454366, "post_id": 34340492, "comment_id": 96261279, "body": "It also doesn&#39;t work for types auto-converted types like java.util.List, kotlin.collections.Collection, kotlin.collections.Iterable, kotlin.Any, etc.  To get a KClass for those types, you need to call Class.forName() with their Java counterparts (java.util.List, java.util.Collection, java.lang.Iterable, java.lang.Object).  This is obviously not an exhaustive list."}], "tags": [], "owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "is_accepted": true, "score": 65, "last_activity_date": 1505852353, "last_edit_date": 1505852353, "creation_date": 1450372505, "answer_id": 34340492, "question_id": 34340450, "link": "https://stackoverflow.com/questions/34340450/how-to-get-a-kotlin-kclass-from-a-package-class-name-string/34340492#34340492", "title": "How to get a Kotlin KClass from a package class name string?", "body": "<p>You can use Java's method of getting a <code>Class</code> instance <code>Class.forName</code> and then convert it to a <code>KClass</code> using the <code>.kotlin</code> extension property. The code then looks like this:</p>\n\n<pre><code>val kClass = Class.forName(\"mypackage.MyClass\").kotlin\n</code></pre>\n\n<p>A more direct way may be added at some point. The issue is located <a href=\"https://youtrack.jetbrains.com/issue/KT-10440\" rel=\"noreferrer\">here</a></p>\n"}], "owner": {"reputation": 1536, "user_id": 1028906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/faed3d6465f07ef235e4a96aaa9eb41e?s=128&d=identicon&r=PG", "display_name": "Josh Rosen", "link": "https://stackoverflow.com/users/1028906/josh-rosen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 15557, "favorite_count": 1, "accepted_answer_id": 34340492, "answer_count": 1, "score": 37, "last_activity_date": 1505852353, "creation_date": 1450372371, "last_edit_date": 1505852308, "question_id": 34340450, "link": "https://stackoverflow.com/questions/34340450/how-to-get-a-kotlin-kclass-from-a-package-class-name-string", "title": "How to get a Kotlin KClass from a package class name string?", "body": "<p>If I have a string like <code>\"mypackage.MyClass\"</code>, how can I get the corresponding <code>KClass</code> at runtime (from the JVM)?</p>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 35078, "user_id": 615306, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/5a11940d70233031c01ead6c0b62c990?s=128&d=identicon&r=PG", "display_name": "Kirill Rakhman", "link": "https://stackoverflow.com/users/615306/kirill-rakhman"}, "edited": false, "score": 6, "creation_date": 1450799287, "post_id": 34332072, "comment_id": 56580324, "body": "As a side note, there is also the <code>.not()</code> function which you can use with the safe call operator, e.g. <code>SpUtils.loadEMail()?.isEmpty()?.not()</code>"}], "answers": [{"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451048709, "post_id": 34332589, "comment_id": 56667932, "body": "See the note from @cypressious for the <code>.not()</code> option.  Otherwise you have to always consider operator precedence when you construct an expression."}, {"owner": {"reputation": 914, "user_id": 4266287, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-RlDob41Dh4I/AAAAAAAAAAI/AAAAAAAAGJ0/02d7vjk_Nfs/photo.jpg?sz=128", "display_name": "Douglas Kazumi", "link": "https://stackoverflow.com/users/4266287/douglas-kazumi"}, "edited": false, "score": 0, "creation_date": 1603238054, "post_id": 34332589, "comment_id": 113972448, "body": "The <a href=\"https://kotlinlang.org/docs/reference/coding-conventions.html#using-nullable-boolean-values-in-conditions\" rel=\"nofollow noreferrer\">recommended convention</a> is to compare to the literal boolean:  <code>SpUtils.loadEMail()?.isEmpty() == false</code>"}], "tags": [], "owner": {"reputation": 11834, "user_id": 1538877, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/N9qfZ.jpg?s=128&g=1", "display_name": "Ruslan", "link": "https://stackoverflow.com/users/1538877/ruslan"}, "is_accepted": true, "score": 10, "last_activity_date": 1450349657, "last_edit_date": 1450349657, "creation_date": 1450349047, "answer_id": 34332589, "question_id": 34332072, "link": "https://stackoverflow.com/questions/34332072/how-to-negate-a-boolean-expression-when-using-the-elvis-operator-in-kotlin/34332589#34332589", "title": "How to negate a boolean expression when using the elvis operator in kotlin?", "body": "<p>You have problem with nullable reference.</p>\n\n<pre><code> SpUtils.loadEMail()?.isEmpty()\n</code></pre>\n\n<p>This code produces value of type <strong>Boolean?</strong> that's mean expression can return an instance of <strong>Boolean</strong> or <strong>null</strong>.</p>\n\n<p>I suggest following code to solve your problem:</p>\n\n<pre><code>return !(SpUtils().loadEMail()?.isEmpty() ?: false);\n</code></pre>\n\n<p>You trying negate <strong>Boolean?</strong> instead of <strong>Boolean</strong>, that <a href=\"https://kotlinlang.org/docs/reference/null-safety.html#elvis-operator\" rel=\"noreferrer\">elvis</a> operator returns!</p>\n"}, {"comments": [{"owner": {"reputation": 3121, "user_id": 3699808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f0af2052e664e9f832421cb56590b935?s=128&d=identicon&r=PG", "display_name": "mhlz", "link": "https://stackoverflow.com/users/3699808/mhlz"}, "edited": false, "score": 1, "creation_date": 1450789703, "post_id": 34333682, "comment_id": 56574201, "body": "You don&#39;t need the second elvis operator in your last example anymore. The left side is already <code>Boolean</code> and not <code>Boolean?</code>, or am I overlooking something?"}], "tags": [], "owner": {"reputation": 25774, "user_id": 885028, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/xJkDj.jpg?s=128&g=1", "display_name": "aga", "link": "https://stackoverflow.com/users/885028/aga"}, "is_accepted": false, "score": 3, "last_activity_date": 1450790373, "last_edit_date": 1450790373, "creation_date": 1450352345, "answer_id": 34333682, "question_id": 34332072, "link": "https://stackoverflow.com/questions/34332072/how-to-negate-a-boolean-expression-when-using-the-elvis-operator-in-kotlin/34333682#34333682", "title": "How to negate a boolean expression when using the elvis operator in kotlin?", "body": "<p><code>?.</code> is a <a href=\"http://kotlinlang.org/docs/reference/null-safety.html#safe-calls\" rel=\"nofollow\">safe call operator</a>.</p>\n\n<p>In this case it returns you:  </p>\n\n<ul>\n<li>boolean value if the result of <code>loadEmail()</code> invocation <strong>is not</strong> <code>null</code>  </li>\n<li><code>null</code> otherwise</li>\n</ul>\n\n<p><code>!</code> is a <a href=\"http://kotlinlang.org/docs/reference/basic-types.html#booleans\" rel=\"nofollow\">built-in</a> boolean operation which invokes the <code>package.Boolean</code>'s operator called <code>not()</code> which works only on non-nullable references. The result of <code>?.</code>  is <code>Boolean?</code>, thus you get your error.  </p>\n\n<p>If you want to negate the whole expression, you can stick to the iRus answer:  </p>\n\n<pre><code>!(SpUtils().loadEMail()?.isEmpty() ?: false)\n</code></pre>\n\n<p>If you want to negate <strong>just</strong> the <code>SpUtils().loadEMail()?.isEmpty()</code> part then the correct variant will be:</p>\n\n<pre><code>!(SpUtils().loadEMail()?.isEmpty() ?: true)\n</code></pre>\n\n<p>If the result of <code>?.</code> will be null (there is no mail) then the elvis operator will return you <code>true</code> (no e-mail) and you'll negate it.</p>\n"}, {"tags": [], "owner": {"reputation": 6305, "user_id": 389649, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7fc842fef375d0c258c3762684d149d1?s=128&d=identicon&r=PG", "display_name": "Cristan", "link": "https://stackoverflow.com/users/389649/cristan"}, "is_accepted": false, "score": 1, "last_activity_date": 1525816261, "creation_date": 1525816261, "answer_id": 50242741, "question_id": 34332072, "link": "https://stackoverflow.com/questions/34332072/how-to-negate-a-boolean-expression-when-using-the-elvis-operator-in-kotlin/50242741#50242741", "title": "How to negate a boolean expression when using the elvis operator in kotlin?", "body": "<p><code>!(SpUtils().loadEMail()?.isEmpty() ?: false)</code> would work, but it's really difficult to see when this would actually return <code>true</code>.</p>\n\n<p>It returns <code>true</code> when the result of <code>SpUtils().loadEMail()</code> is null or not empty. With this knowledge, we can easily make something readable:</p>\n\n<p><code>return SpUtils().loadEMail()?.isNotEmpty() ?: true</code></p>\n\n<p>You can expand it for even better readability:</p>\n\n<pre><code>val email = SpUtils().loadEMail()\nif (email == null || email.isNotEmpty()) {\n    return true\n}\nreturn false\n</code></pre>\n"}], "owner": {"reputation": 6473, "user_id": 2660462, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/e7866e763430b8848f14ffdacb61b99f?s=128&d=identicon&r=PG", "display_name": "Lukas Lechner", "link": "https://stackoverflow.com/users/2660462/lukas-lechner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8419, "favorite_count": 2, "accepted_answer_id": 34332589, "answer_count": 3, "score": 14, "last_activity_date": 1525816261, "creation_date": 1450347605, "last_edit_date": 1450799198, "question_id": 34332072, "link": "https://stackoverflow.com/questions/34332072/how-to-negate-a-boolean-expression-when-using-the-elvis-operator-in-kotlin", "title": "How to negate a boolean expression when using the elvis operator in kotlin?", "body": "<p>I want to negate the following expression:</p>\n\n<p><code>return SpUtils.loadEMail()?.isEmpty() ?: false</code></p>\n\n<p>If i add a ! before the expression, like</p>\n\n<p><code>return !SpUtils.loadEMail()?.isEmpty() ?: false</code></p>\n\n<p>The IDE(Android Studio) tells me </p>\n\n<blockquote>\n  <p>Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable receiver of type kotlin.Boolean?</p>\n</blockquote>\n\n<p>How do I negate this kinds of expressions?</p>\n"}, {"tags": ["kotlin"], "comments": [{"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1450400626, "post_id": 34327982, "comment_id": 56435673, "body": "What particular problem does that causes you on the use site?"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451048835, "post_id": 34327982, "comment_id": 56667953, "body": "This is a badly written question, and should be updated to say what was expected vs. actually happened.  The lack of this caused confusion in answers and comments.  Can you edit your question for clarity?"}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 0, "creation_date": 1451060143, "post_id": 34327982, "comment_id": 56670658, "body": "I don&#39;t think I need to. This question has been answered well. What was expected was stated in the question (title), &quot;turn off use site covariance&quot;. Denis Zharkov obviously had no problem understanding that."}], "answers": [{"comments": [{"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1450373570, "post_id": 34330163, "comment_id": 56422974, "body": "why is it a bug? Should not it be that way?"}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "reply_to_user": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1450403386, "post_id": 34330163, "comment_id": 56436318, "body": "@voddan I have explained the problem in the <a href=\"https://youtrack.jetbrains.com/issue/KT-10412\" rel=\"nofollow noreferrer\">issue</a>."}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 0, "creation_date": 1450403484, "post_id": 34330163, "comment_id": 56436338, "body": "@DenisZharkov Thank you. &quot;Next public release&quot;, do you mean beta 4?"}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1450403795, "post_id": 34330163, "comment_id": 56436410, "body": "@wintetYoung what you said is not a problem. In what (bad) the way does that affect your code /project?"}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "reply_to_user": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1450404235, "post_id": 34330163, "comment_id": 56436512, "body": "@voddan It a compatibility issue. Kotlin declares 100% java compatibility. I have elaborated the situation in that detail in the issue, and you don&#39;t see it as a problem? The description I filed in the issue is what I am encountering in my project. I cannot share my project code, it&#39;s proprietary. But I really think I have done my best to explain it."}, {"owner": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 0, "creation_date": 1450406872, "post_id": 34330163, "comment_id": 56437153, "body": "ok, so it is a <b>binary</b> compatibility issue, not a bug. Mind you that In the sources all should be good. As @denis said, an annotation is it what is gonna solve this"}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "reply_to_user": {"reputation": 25728, "user_id": 3144601, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/94FMr.jpg?s=128&g=1", "display_name": "voddan", "link": "https://stackoverflow.com/users/3144601/voddan"}, "edited": false, "score": 1, "creation_date": 1450408179, "post_id": 34330163, "comment_id": 56437421, "body": "@voddan I don&#39;t think it&#39;s a binary compatibility issue. The java source referencing the method does not compile. Why it&#39;s so hard to admit it&#39;s a bug, I don&#39;t understand... Anyway, it&#39;s been fixed."}, {"owner": {"reputation": 81, "user_id": 5690112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc58bf427ea1b60b38efcfe5c096269e?s=128&d=identicon&r=PG&f=1", "display_name": "Denis Zharkov", "link": "https://stackoverflow.com/users/5690112/denis-zharkov"}, "reply_to_user": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 1, "creation_date": 1450437569, "post_id": 34330163, "comment_id": 56450357, "body": "@WinterYoung Yes, I mean Beta 4"}, {"owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 0, "creation_date": 1450922790, "post_id": 34330163, "comment_id": 56634741, "body": "@DenisZharkov Beta 4 is out. I&#39;m wondering why <code>Map&lt;K, V&gt;</code> generates bytecode of <code>Map&lt;K, ? extend V&gt;</code>. This still breaks compatibility, doesn&#39;t it?"}, {"owner": {"reputation": 81, "user_id": 5690112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc58bf427ea1b60b38efcfe5c096269e?s=128&d=identicon&r=PG&f=1", "display_name": "Denis Zharkov", "link": "https://stackoverflow.com/users/5690112/denis-zharkov"}, "reply_to_user": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "edited": false, "score": 1, "creation_date": 1451027353, "post_id": 34330163, "comment_id": 56663561, "body": "@WinterYoung Yes, there will be wildcard if V can effectively have subtypes, but now you can use <code>@JvmSuppressWildcards</code> annotation.  You can find some explanation about variance generics in the <a href=\"https://github.com/JetBrains/kotlin-web-site/blob/4d6ca1b9193700c653b09cb0cc42dc5b0db8f971/docs/reference/java-to-kotlin-interop.md\" rel=\"nofollow noreferrer\">document</a>"}], "tags": [], "owner": {"reputation": 81, "user_id": 5690112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc58bf427ea1b60b38efcfe5c096269e?s=128&d=identicon&r=PG&f=1", "display_name": "Denis Zharkov", "link": "https://stackoverflow.com/users/5690112/denis-zharkov"}, "is_accepted": true, "score": 3, "last_activity_date": 1450342021, "creation_date": 1450342021, "answer_id": 34330163, "question_id": 34327982, "link": "https://stackoverflow.com/questions/34327982/is-there-a-way-to-turn-off-use-site-covariance-in-kotlin/34330163#34330163", "title": "Is there a way to turn off use site covariance in Kotlin?", "body": "<p>The problem has been fixed in out dev-branch and will be available within next public release.\nAlso there will be <code>JvmSuppressWildcards</code>/<code>JvmWildcard</code> annotations allowing to control generic signature.</p>\n\n<p>As a temporary workaround you can use <code>MutableList&lt;String&gt;</code> in Kotlin declaration</p>\n"}], "owner": {"reputation": 711, "user_id": 4033886, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1187066202/picture?type=large", "display_name": "Winter Young", "link": "https://stackoverflow.com/users/4033886/winter-young"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "accepted_answer_id": 34330163, "answer_count": 1, "score": 1, "last_activity_date": 1451575236, "creation_date": 1450333727, "last_edit_date": 1451575236, "question_id": 34327982, "link": "https://stackoverflow.com/questions/34327982/is-there-a-way-to-turn-off-use-site-covariance-in-kotlin", "title": "Is there a way to turn off use site covariance in Kotlin?", "body": "<p>Note: As of Kotlin beta 4, this problem is fixed.</p>\n\n<hr>\n\n<pre><code>fun test(a: List&lt;String&gt;) { }\n</code></pre>\n\n<p>The above Kotlin code generates byte code:</p>\n\n<pre><code>public static final void test(@NotNull List&lt;? extends String&gt; a)\n{\n    Intrinsics.checkParameterIsNotNull(a, \"a\");\n}\n</code></pre>\n\n<p>I have submitted an <a href=\"https://youtrack.jetbrains.com/issue/KT-10412\" rel=\"nofollow\">issue</a>, but I need to circumvent this bug temporarily. Is there a way to mark <code>a</code> as invariant?</p>\n"}]