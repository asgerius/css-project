[{"tags": ["android-studio", "kotlin"], "comments": [{"owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 1, "creation_date": 1421252444, "post_id": 27941225, "comment_id": 44290098, "body": "This is a bug in the Kotlin IDE plugin. Please report it to our issue tracker: <a href=\"https://youtrack.jetbrains.com/issues/KT\" rel=\"nofollow noreferrer\">youtrack.jetbrains.com/issues/KT</a>"}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "reply_to_user": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 0, "creation_date": 1451567044, "post_id": 27941225, "comment_id": 56835358, "body": "All compiler internal errors should be reported as @AndreyBreslav mentions, you can do so then add the issue number / link here so others (including yourself) can track the status."}, {"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451567054, "post_id": 27941225, "comment_id": 56835360, "body": "This issue was fixed, and does not occur in current Kotlin"}], "answers": [{"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451567070, "post_id": 28751787, "comment_id": 56835373, "body": "That version is M10 and beyond."}], "tags": [], "owner": {"reputation": 750, "user_id": 2990802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yd6kI.jpg?s=128&g=1", "display_name": "0wl", "link": "https://stackoverflow.com/users/2990802/0wl"}, "is_accepted": true, "score": 1, "last_activity_date": 1424981269, "creation_date": 1424981269, "answer_id": 28751787, "question_id": 27941225, "link": "https://stackoverflow.com/questions/27941225/access-of-r-drawable-in-android-studio-throws-a-kotlinfrontendexception/28751787#28751787", "title": "Access of R.drawable in Android Studio throws a KotlinFrontEndException", "body": "<p>Works fine in 0.10.206.7 version of kotlin plugin</p>\n"}], "owner": {"reputation": 308, "user_id": 2051386, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4TDwP.png?s=128&g=1", "display_name": "Tony J Stark", "link": "https://stackoverflow.com/users/2051386/tony-j-stark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 835, "favorite_count": 0, "accepted_answer_id": 28751787, "answer_count": 1, "score": 4, "last_activity_date": 1424981269, "creation_date": 1421232911, "question_id": 27941225, "link": "https://stackoverflow.com/questions/27941225/access-of-r-drawable-in-android-studio-throws-a-kotlinfrontendexception", "title": "Access of R.drawable in Android Studio throws a KotlinFrontEndException", "body": "<p>For Android development I use Kotlin with the Kotlin plugin 0.10.206. When I try to access a resource via R.drawable. Android Studio (1.0.2) shows in the Event log that a KotlinFrontEndException occoured every time I do something in that file (add code/delete code/scroll). Am I doing something wrong or is it a bug in the plugin? Does anybody know a solution?</p>\n\n<p>Here is one of the code parts that causes the Exception:</p>\n\n<pre><code>val notification = notificationBuilder\n                .extend(NotificationCompat.WearableExtender().addPage(secondPageNotification)\n                        .setBackground(loadBitmapFromAsset(R.drawable.clock_background))\n                )\n                .build()\n</code></pre>\n\n<p>Here is the Exception description:</p>\n\n<pre><code>Exception in processing references for copy paste in file MainActivity.kt}: Exception while analyzing expression at (218,60) in /Users/jp/AndroidStudioProjects/.../MainActivity.kt:\n         R.drawable.clock_background\n\nat org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:167)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:103)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:173)\n    at org.jetbrains.jet.lang.resolve.calls.ArgumentTypeResolver.getArgumentTypeInfo(ArgumentTypeResolver.java:187)\n    at org.jetbrains.jet.lang.resolve.calls.ArgumentTypeResolver.analyzeArgumentsAndRecordTypes(ArgumentTypeResolver.java:254)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.doResolveCall(CallResolver.java:423)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:359)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:312)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.java:79)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.java:184)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfo(CallExpressionResolver.java:167)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitCallExpression(BasicExpressionTypingVisitor.java:689)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitCallExpression(BasicExpressionTypingVisitor.java:88)\n    at org.jetbrains.jet.lang.psi.JetCallExpression.accept(JetCallExpression.java:35)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:249)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:36)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:162)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitReferenceExpression(JetVisitor.java:178)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitCallExpression(JetVisitor.java:254)\n    at org.jetbrains.jet.lang.psi.JetCallExpression.accept(JetCallExpression.java:35)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:136)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:103)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:173)\n    at org.jetbrains.jet.lang.resolve.calls.ArgumentTypeResolver.getArgumentTypeInfo(ArgumentTypeResolver.java:187)\n    at org.jetbrains.jet.lang.resolve.calls.ArgumentTypeResolver.analyzeArgumentsAndRecordTypes(ArgumentTypeResolver.java:254)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.doResolveCall(CallResolver.java:423)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:359)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:312)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.java:79)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.java:184)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getSelectorReturnTypeInfo(CallExpressionResolver.java:267)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getQualifiedExpressionTypeInfo(CallExpressionResolver.java:296)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:683)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:88)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:270)\n    at org.jetbrains.jet.lang.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:249)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:36)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:162)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitQualifiedExpression(JetVisitor.java:262)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:270)\n    at org.jetbrains.jet.lang.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:136)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:103)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:173)\n    at org.jetbrains.jet.lang.resolve.calls.ArgumentTypeResolver.getArgumentTypeInfo(ArgumentTypeResolver.java:187)\n    at org.jetbrains.jet.lang.resolve.calls.ArgumentTypeResolver.analyzeArgumentsAndRecordTypes(ArgumentTypeResolver.java:254)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.doResolveCall(CallResolver.java:423)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:359)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:312)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.java:79)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.java:184)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getSelectorReturnTypeInfo(CallExpressionResolver.java:267)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getQualifiedExpressionTypeInfo(CallExpressionResolver.java:296)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:683)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:88)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:270)\n    at org.jetbrains.jet.lang.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:249)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:36)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:162)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitQualifiedExpression(JetVisitor.java:262)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:270)\n    at org.jetbrains.jet.lang.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:136)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:103)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:173)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getQualifiedExpressionTypeInfo(CallExpressionResolver.java:287)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:683)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:88)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:270)\n    at org.jetbrains.jet.lang.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:249)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:36)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:162)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitQualifiedExpression(JetVisitor.java:262)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:270)\n    at org.jetbrains.jet.lang.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:136)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:103)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:168)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getType(ExpressionTypingServices.java:178)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.safeGetType(ExpressionTypingServices.java:161)\n    at org.jetbrains.jet.lang.resolve.DescriptorResolver.resolveInitializerType(DescriptorResolver.java:1168)\n    at org.jetbrains.jet.lang.resolve.DescriptorResolver.getVariableType(DescriptorResolver.java:1066)\n    at org.jetbrains.jet.lang.resolve.DescriptorResolver.resolveLocalVariableDescriptor(DescriptorResolver.java:884)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorForStatements.visitProperty(ExpressionTypingVisitorForStatements.java:124)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorForStatements.visitProperty(ExpressionTypingVisitorForStatements.java:52)\n    at org.jetbrains.jet.lang.psi.JetProperty.accept(JetProperty.java:57)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:136)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:111)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getBlockReturnedTypeWithWritableScope(ExpressionTypingServices.java:308)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getBlockReturnedType(ExpressionTypingServices.java:244)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getBlockReturnedType(ExpressionTypingServices.java:210)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorForStatements.visitBlockExpression(ExpressionTypingVisitorForStatements.java:385)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorForStatements.visitBlockExpression(ExpressionTypingVisitorForStatements.java:52)\n    at org.jetbrains.jet.lang.psi.JetBlockExpression.accept(JetBlockExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:136)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:113)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.checkFunctionReturnType(ExpressionTypingServices.java:205)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.checkFunctionReturnType(ExpressionTypingServices.java:190)\n    at org.jetbrains.jet.lang.resolve.BodyResolver.resolveFunctionBody(BodyResolver.java:618)\n    at org.jetbrains.jet.lang.resolve.BodyResolver.resolveFunctionBodies(BodyResolver.java:592)\n    at org.jetbrains.jet.lang.resolve.BodyResolver.resolveBehaviorDeclarationBodies(BodyResolver.java:124)\n    at org.jetbrains.jet.lang.resolve.BodyResolver.resolveBodies(BodyResolver.java:135)\n    at org.jetbrains.jet.lang.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.java:330)\n    at org.jetbrains.jet.plugin.caches.resolve.KotlinResolveDataProvider.analyze(KotlinResolveCache.kt:258)\n    at org.jetbrains.jet.plugin.caches.resolve.PerFileAnalysisCache.analyze(KotlinResolveCache.kt:179)\n    at org.jetbrains.jet.plugin.caches.resolve.PerFileAnalysisCache.analyze$b$2(KotlinResolveCache.kt:126)\n    at org.jetbrains.jet.plugin.caches.resolve.PerFileAnalysisCache.getAnalysisResults(KotlinResolveCache.kt:164)\n    at org.jetbrains.jet.plugin.caches.resolve.KotlinResolveCache.getAnalysisResultsForElements(KotlinResolveCache.kt:114)\n    at org.jetbrains.jet.plugin.caches.resolve.KotlinCacheService$getResolutionFacade$1.analyzeFullyAndGetResult(KotlinCacheService.kt:66)\n    at org.jetbrains.jet.plugin.caches.resolve.ResolvePackage$resolutionApi$859eb6cc.analyzeFullyAndGetResult(resolutionApi.kt:58)\n    at org.jetbrains.jet.plugin.highlighter.JetPsiChecker.annotate(JetPsiChecker.kt:63)\n    at org.jetbrains.jet.plugin.highlighter.JetPsiCheckerAndHighlightingUpdater.annotate(JetPsiCheckerAndHighlightingUpdater.java:29)\n    at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.runAnnotators(DefaultHighlightVisitor.java:160)\n    at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.visit(DefaultHighlightVisitor.java:103)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$5.run(GeneralHighlightingPass.java:312)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:397)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$300(GeneralHighlightingPass.java:64)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$6.run(GeneralHighlightingPass.java:403)\n    at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.analyze(DefaultHighlightVisitor.java:87)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:400)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$300(GeneralHighlightingPass.java:64)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$6.run(GeneralHighlightingPass.java:403)\n    at com.intellij.codeInsight.daemon.impl.RefCountHolder.analyze(RefCountHolder.java:318)\n    at com.intellij.codeInsight.daemon.impl.analysis.HighlightVisitorImpl.analyze(HighlightVisitorImpl.java:173)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:400)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectHighlights(GeneralHighlightingPass.java:388)\n    at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectInformationWithProgress(GeneralHighlightingPass.java:230)\n    at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:86)\n    at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:62)\n    at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1$1.run(PassExecutorService.java:380)\n    at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1154)\n    at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1.run(PassExecutorService.java:371)\n    at com.intellij.openapi.progress.ProgressManager.executeProcessUnderProgress(ProgressManager.java:209)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:212)\n    at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:368)\n    at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:344)\n    at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask.exec(JobLauncherImpl.java:193)\n    at jsr166e.ForkJoinTask.doExec(ForkJoinTask.java:260)\n    at jsr166e.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:858)\n    at jsr166e.ForkJoinPool.scan(ForkJoinPool.java:1687)\n    at jsr166e.ForkJoinPool.runWorker(ForkJoinPool.java:1642)\n    at jsr166e.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:109)\nCaused by: java.lang.IllegalArgumentException: invalid identifier: \n    at org.jetbrains.jet.lang.resolve.name.Name.identifier(Name.java:56)\n    at org.jetbrains.jet.lang.resolve.java.structure.impl.JavaMemberImpl.getName(JavaMemberImpl.java:43)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.ClassMemberIndex$fields$1.invoke(MemberIndex.kt:48)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.ClassMemberIndex$fields$1.invoke(MemberIndex.kt:41)\n    at org.jetbrains.jet.utils.UtilsPackage$collections$8c8c85b0.valuesToMap(collections.kt:29)\n    at org.jetbrains.jet.utils.UtilsPackage.valuesToMap(Unknown Source)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.ClassMemberIndex.&lt;init&gt;(MemberIndex.kt:48)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.LazyJavaStaticClassScope.computeMemberIndex(LazyJavaStaticClassScope.kt:35)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.LazyJavaMemberScope$memberIndex$1.invoke(LazyJavaMemberScope.kt:68)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.LazyJavaMemberScope$memberIndex$1.invoke(LazyJavaMemberScope.kt:51)\n    at org.jetbrains.jet.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:314)\n    at org.jetbrains.jet.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:355)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.LazyJavaMemberScope$properties$1.invoke(LazyJavaMemberScope.kt:229)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.LazyJavaMemberScope$properties$1.invoke(LazyJavaMemberScope.kt:51)\n    at org.jetbrains.jet.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:385)\n    at org.jetbrains.jet.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:428)\n    at org.jetbrains.jet.lang.resolve.java.lazy.descriptors.LazyJavaMemberScope.getProperties(LazyJavaMemberScope.kt:292)\n    at org.jetbrains.jet.lang.resolve.scopes.JetScopeSelectorUtil$5.get(JetScopeSelectorUtil.java:92)\n    at org.jetbrains.jet.lang.resolve.scopes.JetScopeSelectorUtil.getFromAllScopes(JetScopeSelectorUtil.java:123)\n    at org.jetbrains.jet.lang.resolve.scopes.ChainedScope.getProperties(ChainedScope.kt:42)\n    at org.jetbrains.jet.lang.resolve.scopes.ChainedScope.getProperties(ChainedScope.kt:27)\n    at org.jetbrains.jet.lang.resolve.calls.tasks.collectors.VariableCollector.getNonExtensionsByName(CallableDescriptorCollectors.kt:109)\n    at org.jetbrains.jet.lang.resolve.calls.tasks.collectors.FilteredCollector.getNonExtensionsByName(CallableDescriptorCollectors.kt:156)\n    at org.jetbrains.jet.lang.resolve.calls.tasks.TaskPrioritizer.addCandidatesForNoReceiver(TaskPrioritizer.kt:229)\n    at org.jetbrains.jet.lang.resolve.calls.tasks.TaskPrioritizer.doComputeTasks(TaskPrioritizer.kt:102)\n    at org.jetbrains.jet.lang.resolve.calls.tasks.TaskPrioritizer.computePrioritizedTasks(TaskPrioritizer.kt:75)\n    at org.jetbrains.jet.lang.resolve.calls.CallResolver.resolveSimpleProperty(CallResolver.java:123)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getVariableType(CallExpressionResolver.java:101)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getSimpleNameExpressionTypeInfo(CallExpressionResolver.java:137)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getSelectorReturnTypeInfo(CallExpressionResolver.java:271)\n    at org.jetbrains.jet.lang.resolve.calls.CallExpressionResolver.getQualifiedExpressionTypeInfo(CallExpressionResolver.java:296)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:683)\n    at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:88)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:270)\n    at org.jetbrains.jet.lang.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:249)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:36)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:162)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitQualifiedExpression(JetVisitor.java:262)\n    at org.jetbrains.jet.lang.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:270)\n    at org.jetbrains.jet.lang.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)\n    at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:136)\n    ... 144 more\n</code></pre>\n"}, {"tags": ["javascript", "kotlin"], "comments": [{"owner": {"reputation": 14671, "user_id": 2317490, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ypoen.png?s=128&g=1", "display_name": "dandavis", "link": "https://stackoverflow.com/users/2317490/dandavis"}, "edited": false, "score": 1, "creation_date": 1421179892, "post_id": 27930010, "comment_id": 44258584, "body": "document.getElementById(&quot;container&quot;).appendChild(fragment) works if the element is present when called"}, {"owner": {"reputation": 7500, "user_id": 159679, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/450f7e984216da4c72cd521fcbaf8316?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/159679/alex"}, "reply_to_user": {"reputation": 14671, "user_id": 2317490, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ypoen.png?s=128&g=1", "display_name": "dandavis", "link": "https://stackoverflow.com/users/2317490/dandavis"}, "edited": false, "score": 0, "creation_date": 1421180952, "post_id": 27930010, "comment_id": 44259209, "body": "@dandavis right, I just figured it out..."}], "answers": [{"comments": [{"owner": {"reputation": 73428, "user_id": 3679676, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG", "display_name": "Jayson Minard", "link": "https://stackoverflow.com/users/3679676/jayson-minard"}, "edited": false, "score": 0, "creation_date": 1451562254, "post_id": 27930992, "comment_id": 56833483, "body": "The dom element must have been created by the browser before it is accessed.  Your moving of script placement accomplishes this, but you could also have it be above assuming you had the code in an event such as <code>window.onLoad</code> or <code>($document).ready()</code>.  It is about order of execution which assuming your code doesn&#39;t do anything to change the order (such as hooking an event to fire later), then it is executed as the script is read and processed."}], "tags": [], "owner": {"reputation": 7500, "user_id": 159679, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/450f7e984216da4c72cd521fcbaf8316?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/159679/alex"}, "is_accepted": true, "score": 3, "last_activity_date": 1421181181, "creation_date": 1421181181, "answer_id": 27930992, "question_id": 27930010, "link": "https://stackoverflow.com/questions/27930010/how-to-attach-an-html-element-or-a-documentfragment-to-the-dom/27930992#27930992", "title": "How to attach an HTML element or a DocumentFragment to the DOM?", "body": "<p>I just figured out that the JS output of the compiled app needs to be below the element that is referenced inside the app.</p>\n\n<p>I\u2019ve created a <a href=\"https://github.com/loxal/kotlin-javascript-hello-world/tree/Show-how-HTML5-DOM-access-works\" rel=\"nofollow\">demo case that illustrates this</a>:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;meta charset=\"utf-8\"/&gt;\n&lt;script src=\"lib/kotlin.js\"&gt;&lt;/script&gt;\n\n&lt;p&gt;Look inside the JavaScript Console of your browser\u2026&lt;/p&gt;\n&lt;div id=\"container\"&gt;&lt;/div&gt;\n&lt;script&gt;\n    console.log(\"Native JavaScript\");\n&lt;/script&gt;\n&lt;!-- This script tag was misplaced. It needs to be placed after all elements you want to access in your DOM --&gt;\n&lt;script src=\"kotlin-javascript-hello-world.js\"&gt;&lt;/script&gt;\n</code></pre>\n"}], "owner": {"reputation": 7500, "user_id": 159679, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/450f7e984216da4c72cd521fcbaf8316?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/159679/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 431, "favorite_count": 0, "accepted_answer_id": 27930992, "answer_count": 1, "score": 0, "last_activity_date": 1421181181, "creation_date": 1421177328, "question_id": 27930010, "link": "https://stackoverflow.com/questions/27930010/how-to-attach-an-html-element-or-a-documentfragment-to-the-dom", "title": "How to attach an HTML element or a DocumentFragment to the DOM?", "body": "<p>I\u2019ve got an HTML fragment like <code>&lt;p&gt;Hello, World!&lt;/p&gt;</code> and want to attach it to the <a href=\"https://github.com/loxal/kotlin-javascript-hello-world/blob/100d375078de495b68b56e8f403929b1fcedc3ec/out/production/kotlin-javascript-hello-world/index.html\" rel=\"nofollow\">container HTML page</a> that includes </p>\n\n<pre><code>&lt;script src=\"lib/kotlin.js\"&gt;&lt;/script&gt;\n&lt;script src=\"my-app.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>There are two package that came to my mind:</p>\n\n<ul>\n<li>kotlin.js.dom.html.window.document.* </li>\n<li>kotlin.browser.document.*</li>\n</ul>\n\n<p>Which should I use and how do I access the document\u2019s root? I\u2019ve already tried <code>document.getElementById(\"container\")</code> whereby container is the id of a DIV. But this returns <code>null</code>. I also tried <code>document.appendChild(node)</code>... </p>\n\n<p>Also which of the above packages should I prefer?</p>\n"}, {"tags": ["jakarta-ee", "jax-rs", "kotlin"], "comments": [{"owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 0, "creation_date": 1420928413, "post_id": 27855963, "comment_id": 44165262, "body": "Kotlin can work with classes with &quot;$&quot; in their names, use backticks for escaping: <code>Foo$Proxy</code>"}, {"owner": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 0, "creation_date": 1420928652, "post_id": 27855963, "comment_id": 44165325, "body": "I&#39;d suggest that you reproduce the same behavior in Java. It is likely that this issue is not connected to Kotlin at all."}, {"owner": {"reputation": 2161, "user_id": 597222, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/095ab4c60b8c191068a5d4a07cc314f4?s=128&d=identicon&r=PG", "display_name": "zdenda.online", "link": "https://stackoverflow.com/users/597222/zdenda-online"}, "reply_to_user": {"reputation": 20424, "user_id": 445715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3824489df267d3bf86bbc678b9745ac4?s=128&d=identicon&r=PG", "display_name": "Andrey Breslav", "link": "https://stackoverflow.com/users/445715/andrey-breslav"}, "edited": false, "score": 0, "creation_date": 1421004704, "post_id": 27855963, "comment_id": 44183262, "body": "I agree that this may not be Kotlin issue. That is why I didn&#39;t put it in name of question. I already disucussed it in the JIRA. I will try what they suggested and update this thread retrospectively"}], "answers": [{"tags": [], "owner": {"reputation": 2161, "user_id": 597222, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/095ab4c60b8c191068a5d4a07cc314f4?s=128&d=identicon&r=PG", "display_name": "zdenda.online", "link": "https://stackoverflow.com/users/597222/zdenda-online"}, "is_accepted": true, "score": 2, "last_activity_date": 1421057346, "last_edit_date": 1421057346, "creation_date": 1421052987, "answer_id": 27898257, "question_id": 27855963, "link": "https://stackoverflow.com/questions/27855963/jax-rs-apache-cxf-context-injection-via-setter/27898257#27898257", "title": "JAX-RS (Apache CXF) Context injection via setter", "body": "<p>Thanks to guys commenting CXF Jira issue, I managed to solve this.\nTo make setter injection working with CXF, you have to define setter also in your interface (not only on implementing class) and annotate it with @Context there (on interface). I'm unsure if this is really according to specification but it seems that CXF requires it that way.</p>\n\n<p>Like this:</p>\n\n<pre><code>public MyInterface {\n   @Context\n   public void setRequest(HttpServletRequest req);\n}\n\npublic MyClass implements MyInterface {\n   private HttpServletRequest req;\n\n   public void setRequest(HttpServletRequest req) {\n      this.req = req;\n   }\n}\n</code></pre>\n\n<p>The explanation from Sergey from CXF Jira is:</p>\n\n<blockquote>\n  <p>This is not a standard specific issue, it is all down to the fact that\n  the service object provided to the runtime is a proxy, and moving the\n  setter to the interface ensures that this setter is part of the proxy.\n  In my tests I do not have these setters on the main interface\n  representing the service but on the the dedicated interface like\n  Injectable.Alternatively, with Spring at least, enabling Cglib proxy\n  mode can help.</p>\n</blockquote>\n"}], "owner": {"reputation": 2161, "user_id": 597222, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/095ab4c60b8c191068a5d4a07cc314f4?s=128&d=identicon&r=PG", "display_name": "zdenda.online", "link": "https://stackoverflow.com/users/597222/zdenda-online"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1167, "favorite_count": 0, "accepted_answer_id": 27898257, "answer_count": 1, "score": 1, "last_activity_date": 1421057346, "creation_date": 1420789408, "last_edit_date": 1421053111, "question_id": 27855963, "link": "https://stackoverflow.com/questions/27855963/jax-rs-apache-cxf-context-injection-via-setter", "title": "JAX-RS (Apache CXF) Context injection via setter", "body": "<p>I'm trying to inject HttpServletRequest to my JAX-RS resource (Apache CXF implementation)  via @Context annotation in Kotlin. It works fine if I inject it via method parameter. But I don't want to \"mess\" my interfaces with that so I'd like to inject it via field/setter.</p>\n\n<p>The thing with plain field injection is that the proxy has $ in its name which is an issue for kotlin as it is not able work with class names with dollar in name.</p>\n\n<p>So I'm trying to do it via setter with this simple method:</p>\n\n<pre><code>var req : HttpServletRequest? = null\n\nContext\nfun setRequest(req : HttpServletRequest) {\n    this.req = req\n}\n</code></pre>\n\n<p>The thing is (and I believe it should be an issue in Java too), that the setter is called via reflection in org.apache.cxf.jaxrs.utils.InjectionUtils in method injectThroughMethod that throws java.lang.IllegalArgumentException: object is not an instance of declaring class</p>\n\n<p>I tried to google this issue but with no luck. Did anyone had similar issue or is there something I'm doing wrong?</p>\n\n<p>Btw I also created an <a href=\"https://issues.apache.org/jira/browse/CXF-6190\" rel=\"nofollow\">issue</a> in JIRA of CXF.</p>\n"}]