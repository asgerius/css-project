[{"tags": ["haskell", "matrix-multiplication", "typechecking", "existential-type"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1528924572, "post_id": 50846314, "comment_id": 88696298, "body": "I have a matrix, but won&#39;t tell you its dimensions. How would you multiply it by a vector of length 5? I&#39;d argue that this is harder than defining multiplication between a 12x34 matrix and a 5-vector, since in this case we also know the dimensions. But the latter is impossible to reasonably define, hence the former is as well."}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 2, "last_activity_date": 1528964791, "last_edit_date": 1528964791, "creation_date": 1528926288, "answer_id": 50846734, "question_id": 50846314, "link": "https://stackoverflow.com/questions/50846314/how-to-implement-dimension-agnostic-matrix-vector-multiplication-in-haskell/50846734#50846734", "title": "How to implement dimension agnostic matrix-vector multiplication in Haskell?", "body": "<p>First let me remark that I find this whole idea quite dubious: why do you bother fixing dimensions through the type system if you then throw it away again with the existential wrapper?</p>\n\n<p>Since you don't know the domain dimension of that linear mapping, the only vector you can apply it to is one that <em>can have any dimension on demand</em>. That's pretty crazy, but it can be expressed in Haskell using <code>-XRank2Types</code>. Also you don't know the codomain dimension, so the result must again be existentially wrapped. The existential wrappers must contain a <code>KnownNat</code> constraint, else you won't be able to do anything with the vectors at all. Like</p>\n\n<pre><code>{-# LANGUAGE GADTs, Rank2Types, UnicodeSyntax #-}\n\n-- | This is really just a pretentious replacement for Data.Vector.Vector\ndata Array :: * -&gt; * where\n  Array :: KnownNat n =&gt; Vector n a -&gt; Mat a\n\ndata Mat :: * -&gt; * where\n  Mat :: (KnownNat n, KnownNat m) =&gt; (Vector m :.: Vector n) a -&gt; Mat a\n\nlapply :: Num a =&gt; Mat a -&gt; (\u2200 n . KnownNat n =&gt; Vector n a) -&gt; Array a\nlapply (Mat m) v = Array $ VS.map (dot v) mat\n</code></pre>\n\n<p>Will this be useful for anything? Not sure. You could actually create such a length-agnostic vector if what you really want to express is a <em>continuous function</em> that's PCM-sampled on a uniform grid (what the Matlab folks use all day, instead of having proper function types...). The sampling would automatically be adjusted to whatever resolution the matrix demands.</p>\n\n<p>But, at runtime this just means your input \u201cvector\u201d is actually a function that takes a resolution-argument. There's not much the whole type-level-number foo buys you here.</p>\n\n<p>IMO, when you find yourself dealing with such \u201cvariable length vectors\u201d it's usually a sign that you're really working in an <em>infinite-dimensional vector space</em>, like usually such a function space. (The most widely-used such space is the <a href=\"https://en.wikipedia.org/wiki/Lp_space\" rel=\"nofollow noreferrer\"><em>L</em><sup>2</sup> Hilbert space</a>.) This can't really be expressed with any array-based approach, but it can be expressed if you ditch the <em>dimension/element</em> decomposition and instead use vector spaces <em>as a typeclass</em>. <a href=\"http://hackage.haskell.org/package/vector-space\" rel=\"nofollow noreferrer\">Conal Elliott's package</a> for this has been around for a long time now; it may seem a bit dated but is actually quite practically useful still. I spend some effort building upon it <a href=\"http://hackage.haskell.org/package/linearmap-category-0.3.4.0/docs/Math-LinearMap-Category.html\" rel=\"nofollow noreferrer\">a proper category of linear maps</a>, haven't really gotten to the point of making it fully usable for infinite-dimensional spaces though.</p>\n"}], "owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 298, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1528964791, "creation_date": 1528924175, "question_id": 50846314, "link": "https://stackoverflow.com/questions/50846314/how-to-implement-dimension-agnostic-matrix-vector-multiplication-in-haskell", "title": "How to implement dimension agnostic matrix-vector multiplication in Haskell?", "body": "<p>I defined a matrix type with existentially hidden dimensions, so I could form lists of arbitrarily sized matrices:</p>\n\n<pre><code>import qualified Data.Vector.Sized as VS\nimport           Data.Vector.Sized (Vector)\n\n-- | A matrix with existentially hidden dimensions.\ndata Mat :: * -&gt; * where\n  Mat :: (Vector m :.: Vector n) a -&gt; Mat a\n</code></pre>\n\n<p>But, now, I can't figure out how to define my matrix-vector multiplication function in a way that type checks.\nTrying this:</p>\n\n<pre><code>| Matrix-vector multiplication for existentially typed matrices.\n(^*^)\n  :: (KnownNat m, KnownNat n, Num a)\n  =&gt; Mat a       -- ^ transform matrix\n  -&gt; Vector n a  -- ^ input vector\n  -&gt; Vector m a\nMat (Comp1 mat) ^*^ v = VS.map (dot v) mat\n\ndot :: (KnownNat n, Num a) =&gt; Vector n a -&gt; Vector n a -&gt; a\nu `dot` v = VS.sum $ VS.zipWith (*) u v\n</code></pre>\n\n<p>results in:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018m1\u2019 with \u2018m\u2019\n  \u2018m1\u2019 is a rigid type variable bound by\n    a pattern with constructor:\n      Mat :: forall a (m :: Nat) (n :: Nat).\n             (:.:) (Vector m) (Vector n) a -&gt; Mat a,\n    in an equation for \u2018^*^\u2019\n    at src/RL/MulES.hs:89:1-15\n  \u2018m\u2019 is a rigid type variable bound by\n    the type signature for:\n      (^*^) :: forall (m :: Nat) (n :: Nat) a.\n               (KnownNat m, KnownNat n) =&gt;\n               Mat a -&gt; Vector n a -&gt; Vector m a\n    at src/RL/MulES.hs:(84,1)-(88,15)\n  Expected type: Vector m a\n    Actual type: Vector m1 a\n\u2022 In the expression: VS.map (dot v) mat\n  In an equation for \u2018^*^\u2019:\n      Mat (Comp1 mat) ^*^ v = VS.map (dot v) mat\n\u2022 Relevant bindings include\n    mat :: Vector m1 (Vector n8 a) (bound at src/RL/MulES.hs:89:12)\n    (^*^) :: Mat a -&gt; Vector n a -&gt; Vector m a\n      (bound at src/RL/MulES.hs:89:17)\n   |\n89 | Mat (Comp1 mat) ^*^ v = VS.map (dot v) mat\n   |                         ^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["scala", "haskell", "partial-functions"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528923207, "post_id": 50846059, "comment_id": 88695730, "body": "By &#39;defined&#39; do you mean &#39;not <code>undefined</code>&#39;? Why not just use <code>Maybe</code>?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1528924261, "post_id": 50846059, "comment_id": 88696174, "body": "It is, by design, not possible to catch exceptions in Haskell without using <code>IO</code>. As you say, partial functions are strongly discouraged; if you write a partial function you should consider your responsibility to make sure it will never actually be called outside of its domain. If that can&#39;t be guaranteed up front, you should make it explicit that the function can fail through a suitable result type."}, {"owner": {"reputation": 305, "user_id": 3315928, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/085d0ebe8f6fbb01dbcc2223a9e7a397?s=128&d=identicon&r=PG&f=1", "display_name": "Gurmeet Singh", "link": "https://stackoverflow.com/users/3315928/gurmeet-singh"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1529101271, "post_id": 50846059, "comment_id": 88768746, "body": "@leftaroundabout I know and completely understand what you are saying, but still this negative attitude towards partial functions seem a bit dogmatic to me. There are good reasons to use partial functions, for example head and tail functions. And using Maybe in co-domain in many such cases doesn&#39;t seems honest, as when someone thinks of head function, s/he thinks of it as a function NOT defined on empty list, so I do want my program to crash if I ask her to compute &#39;head []&#39; with the error saying it&#39;s not defined, preferably."}], "answers": [{"comments": [{"owner": {"reputation": 305, "user_id": 3315928, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/085d0ebe8f6fbb01dbcc2223a9e7a397?s=128&d=identicon&r=PG&f=1", "display_name": "Gurmeet Singh", "link": "https://stackoverflow.com/users/3315928/gurmeet-singh"}, "edited": false, "score": 0, "creation_date": 1529101234, "post_id": 50846229, "comment_id": 88768739, "body": "Thanks Daniel for the suggestion. I&#39;m accepting your answer as it&#39;s good enough for me, but I was thinking if there is a way to converting the non-exhaustively defined function (which, let&#39;s say, I already have in code and don&#39;t want to change) to a Partial. I can&#39;t seem to find one. And if there is no way then what&#39;s the reason for it."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 13, "last_activity_date": 1528939709, "last_edit_date": 1528939709, "creation_date": 1528923751, "answer_id": 50846229, "question_id": 50846059, "link": "https://stackoverflow.com/questions/50846059/scalas-partial-functions-in-haskell/50846229#50846229", "title": "Scala&#39;s Partial Functions in Haskell", "body": "<p>I recommend that, like in Scala, you use a separate type for partial functions.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Control.Arrow\nimport Data.Maybe\n\ntype Partial = Kleisli Maybe\n\nisDefinedAt :: Partial a b -&gt; a -&gt; Bool\nisDefinedAt f x = isJust $ runKleisli f x\n-- laziness should save some of the work, if possible\n\norElse :: Partial a b -&gt; Partial a b -&gt; Partial a b\norElse = (&lt;+&gt;)\n\nandThen :: Partial a b -&gt; Partial b c -&gt; Partial a c\nandThen = (&gt;&gt;&gt;)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 0, "creation_date": 1529128710, "post_id": 50853782, "comment_id": 88772506, "body": "I think the OP is more interested in the properties of the <code>PartialFunction</code> <i>type</i> rather than the <code>PartialFunction</code> <i>literal</i>."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 0, "creation_date": 1529139172, "post_id": 50853782, "comment_id": 88774364, "body": "And it&#39;s an important property of <code>PartialFunction</code> type that <code>isDefinedAt</code> result value has no connection to whether <code>apply</code> will throw exception."}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 0, "last_activity_date": 1529139528, "last_edit_date": 1529139528, "creation_date": 1528967451, "answer_id": 50853782, "question_id": 50846059, "link": "https://stackoverflow.com/questions/50846059/scalas-partial-functions-in-haskell/50853782#50853782", "title": "Scala&#39;s Partial Functions in Haskell", "body": "<p>Your versions of <code>isDefinedAt</code> are not what Scala does (even in signature); it's very possible (though discouraged) for a <code>PartialFunction</code> to throw an exception when <code>isDefinedAt</code> is true. Or, when you define one explicitly (not using a literal), vice versa: <code>apply</code> doesn't have to throw when <code>isDefinedAt</code> is false, it's user responsibility not to call it then. So the direct equivalent would just be</p>\n\n<pre><code>data PartialFunction a b = PartialFunction { apply :: a -&gt; b, isDefinedAt :: a -&gt; Boolean }\n</code></pre>\n\n<p>which isn't particularly useful.</p>\n\n<p><code>apply</code> and <code>isDefinedAt</code> are only really linked in Scala for <code>PartialFunction</code> literals which requires compiler support:</p>\n\n<blockquote>\n  <p><a href=\"https://www.scala-lang.org/files/archive/spec/2.12/06-expressions.html#translation\" rel=\"nofollow noreferrer\">A PartialFunction's value receives an additional isDefinedAt member, which is derived from the pattern match in the function literal, with each case's body being replaced by true, and an added default (if none was given) that evaluates to false.</a></p>\n</blockquote>\n\n<p>You can emulate this by using Template Haskell, I believe, but I honestly think using the more Haskell-like approach as described in Daniel Wagner's answer is better. As he mentions, laziness helps. </p>\n\n<p>Though it works even better if you make sure <code>runKleisli f x</code> is executed only once; optimizing cases where you have both <code>isDefinedAt</code> and <code>runKleisli</code> requires Common Subexpression Elimination, and the compiler is cautious about doing that, see <a href=\"https://stackoverflow.com/questions/40694437/under-what-circumstances-could-common-subexpression-elimination-affect-the-lazin\">Under what circumstances could Common Subexpression Elimination affect the laziness of a Haskell program?</a></p>\n"}], "owner": {"reputation": 305, "user_id": 3315928, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/085d0ebe8f6fbb01dbcc2223a9e7a397?s=128&d=identicon&r=PG&f=1", "display_name": "Gurmeet Singh", "link": "https://stackoverflow.com/users/3315928/gurmeet-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 240, "favorite_count": 0, "accepted_answer_id": 50846229, "answer_count": 2, "score": 5, "last_activity_date": 1529139528, "creation_date": 1528923016, "last_edit_date": 1528924062, "question_id": 50846059, "link": "https://stackoverflow.com/questions/50846059/scalas-partial-functions-in-haskell", "title": "Scala&#39;s Partial Functions in Haskell", "body": "\n\n<p>Scala has a very nice support of partial functions, mainly because in Scala when you define a partial function it also defines an <code>isDefinedAt</code> function for it. And also Scala has <code>orElse</code> and <code>andThen</code> functions to work with partial functions.</p>\n\n<p>Haskell does support partial functions by simply non-exhaustively defining a function (though they are strongly discouraged in Haskell community). But to define <code>isDefinedAt</code> function in general you have to use some sort of exception handling, which I'm not being able to figure out. Once <code>isDefinedAt</code> function is defined then it can be used to define <code>orElse</code> and <code>andThen</code> function is already there as <code>(.)</code>.</p>\n\n<p>In short, I want to define a function,</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>isDefinedAt :: (a -&gt; b) -&gt; a -&gt; Bool\nisDefinedAt f x = -- returns True if f is defined at x else False\n</code></pre>\n\n<p>Can anyone please tell me how such a function can be written.</p>\n\n<p>Note, I can define a function with signature</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>isDefinedAt :: (a -&gt; b) -&gt; a -&gt; IO Bool\n</code></pre>\n\n<p>for generic <code>b</code>. But I want a function without IO in co-domain.</p>\n\n<p>A nice article on Scala's Partial Functions is - <a href=\"https://alvinalexander.com/scala/how-to-define-use-partial-functions-in-scala-syntax-examples\" rel=\"nofollow noreferrer\">How to create and use partial functions in Scala By Alvin Alexander</a></p>\n"}, {"tags": ["haskell", "optimization"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1528927870, "post_id": 50844444, "comment_id": 88697503, "body": "Have you tried it with a non-indexed datatype? ie <code>data MyList a where { Nil :: MyList a; Cons :: a -&gt; MyList a -&gt; MyList a }</code>. Just trying to narrow down what might have gone wrong"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1528939322, "post_id": 50844444, "comment_id": 88699951, "body": "@BenjaminHodgson Well, <code>[]</code> definitely works. Writing out my own <code>List</code> and functions also works (even when I implement <code>buildList</code> with a <code>newtype</code> to simulate the dance for <code>Vect</code>) (but only if the function where fusion is expected is in a different module (cue big WTF from me)). I&#39;ve been testing the <code>Vect</code> version with two different modules, too (edited that in)."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1530498858, "post_id": 51125762, "comment_id": 89241866, "body": "I wonder how reliable this will be. GHC likes to simplify coercions away."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1530502102, "post_id": 51125762, "comment_id": 89242399, "body": "@dfeuer Once the <code>RULE</code> is made, it should work always. The issue was because GHC had eta-expanded the function inside the <code>RULE</code>, forcing it to be a specific kind of lambda abstraction. Now, I see that it&#39;s a variable, which will match any expression, and therefore always work. Thus, <i>in this case</i>, it should be fine. The real question is whether using a <code>newtype</code> will work for <i>all</i> such <code>RULES</code> that otherwise break this way. My gut feeling is &quot;yes&quot;, considering that this case is pretty &quot;bad&quot; and yet works out, but compilers are dark beasts."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 1, "last_activity_date": 1530475411, "last_edit_date": 1530475411, "creation_date": 1530468350, "answer_id": 51125762, "question_id": 50844444, "link": "https://stackoverflow.com/questions/50844444/fusion-for-length-indexed-linked-lists/51125762#51125762", "title": "Fusion for length-indexed linked lists", "body": "<p>As usual, <code>newtype</code>s save the day whenever the compiler is being bullheaded:</p>\n\n<pre><code>module Vect where\n-- everything else the same...\nnewtype VectBuilder n a = VectBuilder { runVectBuilder :: forall (p :: Nat -&gt; Type).\n                                                          p Z -&gt;\n                                                          (forall m. a -&gt; p m -&gt; p (S m)) -&gt;\n                                                          p n\n                                      }\n\nbuildVect' :: forall n a. VectBuilder n a -&gt; Vect n a\nbuildVect' f = unFVect $\n                runVectBuilder f (FVect VNil) $ \\x (FVect xs) -&gt; FVect $ x `VCons` xs\n{-# INLINE [0] buildVect' #-}\nbuildVect :: forall n a.\n             (forall (p :: Nat -&gt; Type).\n              p Z -&gt;\n              (forall m. a -&gt; p m -&gt; p (S m)) -&gt;\n              p n\n             ) -&gt; Vect n a\nbuildVect f = buildVect' (VectBuilder f)\n{-# INLINE buildVect #-}\n\n{-# RULES \"foldVect/buildVect'\" forall (nil :: p Z)\n                                       (cons :: forall m. a -&gt; p m -&gt; p (S m))\n                                       (f :: VectBuilder n a).\n                                foldVect nil cons (buildVect' f) = runVectBuilder f nil cons\n  #-}\n-- compiler no longer has a chance to muck up the LHS by eta expanding f because\n-- f \"isn't\" a function anymore\n\n-- rule for mapVect goes unchanged, so I guess that's evidence that this is totally transparent\n</code></pre>\n\n\n\n<pre><code>module Test where\nimport Vect\ntest :: Vect n Int -&gt; Vect n Int\ntest = fmap (*5) . fmap (+2)\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Rec {\n-- RHS size: {terms: 19, types: 31, coercions: 13, joins: 0/0}\nTest.test_go [Occ=LoopBreaker]\n  :: forall (l :: Nat). Vect l Int -&gt; FVect Int l\n[GblId, Arity=1, Caf=NoCafRefs, Str=&lt;S,1*U&gt;]\nTest.test_go\n  = \\ (@ (l_a14W :: Nat)) (ds_d1jk :: Vect l_a14W Int) -&gt;\n      case ds_d1jk of {\n        VNil co_a14Y -&gt; (Vect.$WVNil @ Int) `cast` &lt;Co:4&gt;;\n        VCons @ n2_a151 co_a152 x_aYE xs_aYF -&gt;\n          (Vect.VCons\n             @ ('S n2_a151)\n             @ Int\n             @ n2_a151\n             @~ &lt;Co:2&gt;\n             (case x_aYE of { GHC.Types.I# x1_a1xr -&gt;\n              GHC.Types.I# (GHC.Prim.*# (GHC.Prim.+# x1_a1xr 2#) 5#) -- success!\n              })\n             ((Test.test_go @ n2_a151 xs_aYF) `cast` &lt;Co:3&gt;))\n          `cast` &lt;Co:4&gt;\n      }\nend Rec }\n\n-- RHS size: {terms: 4, types: 5, coercions: 0, joins: 0/0}\nTest.test1 :: forall (n :: Nat). Vect n Int -&gt; FVect Int n\n[GblId,\n Arity=1,\n Caf=NoCafRefs,\n Str=&lt;S,1*U&gt;,\n Unf=Unf{Src=&lt;vanilla&gt;, TopLvl=True, Value=True, ConLike=True,\n         WorkFree=True, Expandable=True,\n         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)}]\nTest.test1\n  = \\ (@ (n_a1wd :: Nat)) (x_X1xa :: Vect n_a1wd Int) -&gt;\n      Test.test_go @ n_a1wd x_X1xa\n\n-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}\ntest :: forall (n :: Nat). Vect n Int -&gt; Vect n Int\n[GblId,\n Arity=1,\n Caf=NoCafRefs,\n Str=&lt;S,1*U&gt;,\n Unf=Unf{Src=&lt;vanilla&gt;, TopLvl=True, Value=True, ConLike=True,\n         WorkFree=True, Expandable=True,\n         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)}]\ntest = Test.test1 `cast` &lt;Co:9&gt;\n</code></pre>\n\n<p>Moral of the story: sufficiently highly ranked types make the <code>RULES</code> system implode, so give GHC some help with <code>newtype</code>s, even if they aren't otherwise necessary.</p>\n"}], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 51125762, "answer_count": 1, "score": 5, "last_activity_date": 1530475411, "creation_date": 1528916442, "last_edit_date": 1529278522, "question_id": 50844444, "link": "https://stackoverflow.com/questions/50844444/fusion-for-length-indexed-linked-lists", "title": "Fusion for length-indexed linked lists", "body": "<p>I have the standard <code>Vect</code> type:</p>\n\n<pre><code>module Vect where\n\ndata Nat = Z | S Nat\ndata Vect (n :: Nat) (a :: Type) where\n  VNil :: Vect Z a\n  VCons :: a -&gt; Vect n a -&gt; Vect (S n) a\n</code></pre>\n\n<p>And I have these functions on it:</p>\n\n<pre><code>foldVect :: forall (p :: Nat -&gt; Type) n a.\n            p Z -&gt;\n            (forall m. a -&gt; p m -&gt; p (S m)) -&gt;\n            Vect n a -&gt; p n\nfoldVect n c = go\n  where go :: forall l. Vect l a -&gt; p l\n        go VNil = n\n        go (VCons x xs) = x `c` go xs\n\nnewtype FVect a n = FVect { unFVect :: Vect n a }\nbuildVect :: forall n a.\n             (forall (p :: Nat -&gt; Type).\n              p Z -&gt;\n              (forall m. a -&gt; p m -&gt; p (S m)) -&gt;\n              p n\n             ) -&gt; Vect n a\nbuildVect f = unFVect $ f (FVect VNil) $ \\x (FVect xs) -&gt; FVect $ x `VCons` xs\n</code></pre>\n\n<p>I attempted to recreate (part of) the machinery from <code>base</code> that allows for list fusion:</p>\n\n<pre><code>instance Functor (Vect n) where\n    fmap = mapVect\n    {-# INLINE fmap #-}\n\nmapVect :: forall n a b. (a -&gt; b) -&gt; (Vect n a -&gt; Vect n b)\nmapVect _f VNil = VNil\nmapVect f (VCons x xs) = f x `VCons` mapVect f xs\nmapFB :: forall (p :: Nat -&gt; Type) n a b. (forall m. b -&gt; p m -&gt; p (S m)) -&gt; (a -&gt; b) -&gt; a -&gt; p n -&gt; p (S n)\nmapFB cons f = \\x ys -&gt; cons (f x) ys\n{-# INLINE [0] mapFB #-}\n{-# NOINLINE [0] mapVect #-}\n{-# RULES \"mapVect\" [~1] forall f xs. mapVect f xs = buildVect (\\nil cons -&gt; foldVect nil (mapFB cons f) xs) #-}\n\n{-# INLINE [0] foldVect #-}\n-- base has this; I don't think it does anything without a \"refolding\" rule on mapVect\n{-# INLINE [0] buildVect #-}\n{-# RULES \"foldVect/buildVect\" forall (nil :: p Z)\n                                      (cons :: forall m. a -&gt; p m -&gt; p (S m))\n                                      (f :: forall (q :: Nat -&gt; Type).\n                                            q Z -&gt;\n                                            (forall m. a -&gt; q m -&gt; q (S m)) -&gt;\n                                            q n\n                                      ).\n          foldVect nil cons (buildVect f) = f nil cons\n  #-}\n</code></pre>\n\n<p>And then</p>\n\n<pre><code>module Test where\nimport Vect\n\ntest :: Vect n Int -&gt; Vect n Int\ntest = fmap (*5) . fmap (+2)\n</code></pre>\n\n<p>No fusion happens. If I pass <code>-ddump-simpl</code>, I see that <code>foldVect</code> and <code>buildVect</code> have already been inlined, but...</p>\n\n<ol>\n<li>The <code>INLINE</code>s are phased so that they don't interfere with fusion anyway. (After all, this is how <code>base</code> does it for <code>[]</code>)</li>\n<li><p>Replacing the <code>INLINE [0]</code>s with <code>NOINLINE</code> paints a rather stunning image:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test\n  = \\ (@ (n_a141 :: Nat)) (x_X1lK :: Vect n_a141 Int) -&gt;\n      buildVect\n        @ n_a141\n        @ Int\n        (\\ (@ (p_X1jl :: Nat -&gt; *))\n           (nil_X11K [OS=OneShot] :: p_X1jl 'Z)\n           (cons_X11M [OS=OneShot]\n              :: forall (m :: Nat). Int -&gt; p_X1jl m -&gt; p_X1jl ('S m)) -&gt;\n           foldVect\n             @ p_X1jl\n             @ n_a141\n             @ Int\n             nil_X11K\n             (\\ (@ (m_a1i5 :: Nat))\n                (x1_aYI :: Int)\n                (ys_aYJ [OS=OneShot] :: p_X1jl m_a1i5) -&gt;\n                cons_X11M\n                  @ m_a1i5\n                  (case x1_aYI of { GHC.Types.I# x2_a1l5 -&gt;\n                   GHC.Types.I# (GHC.Prim.*# x2_a1l5 5#)\n                   })\n                  ys_aYJ)\n             (buildVect\n                @ n_a141\n                @ Int\n                (\\ (@ (p1_a1i0 :: Nat -&gt; *))\n                   (nil1_a10o [OS=OneShot] :: p1_a1i0 'Z)\n                   (cons1_a10p [OS=OneShot]\n                      :: forall (m :: Nat). Int -&gt; p1_a1i0 m -&gt; p1_a1i0 ('S m)) -&gt;\n                   foldVect\n                     @ p1_a1i0\n                     @ n_a141\n                     @ Int\n                     nil1_a10o\n                     (\\ (@ (m_a1i5 :: Nat))\n                        (x1_aYI :: Int)\n                        (ys_aYJ [OS=OneShot] :: p1_a1i0 m_a1i5) -&gt;\n                        cons1_a10p\n                          @ m_a1i5\n                          (case x1_aYI of { GHC.Types.I# x2_a1lh -&gt;\n                           GHC.Types.I# (GHC.Prim.+# x2_a1lh 2#)\n                           })\n                          ys_aYJ)\n                     x_X1lK)))\n</code></pre>\n\n<p>Everything is <em>right there</em>, but the simplifier is just not having it.</p></li>\n</ol>\n\n<p>If I inspect the rule itself, I see this</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"foldVect/buildVect\"\n    forall (@ (p_aYG :: Nat -&gt; *))\n           (@ (n_aYJ :: Nat))\n           (@ a_aYH)\n           (nil_aYD :: p_aYG 'Z)\n           (cons_aYE :: forall (m :: Nat). a_aYH -&gt; p_aYG m -&gt; p_aYG ('S m))\n           (f_aYF\n              :: forall (q :: Nat -&gt; *).\n                 q 'Z -&gt; (forall (m :: Nat). a_aYH -&gt; q m -&gt; q ('S m)) -&gt; q n_aYJ).\n      foldVect @ p_aYG\n               @ n_aYJ\n               @ a_aYH\n               nil_aYD\n               cons_aYE\n               (buildVect\n                  @ n_aYJ\n                  @ a_aYH\n                  (\\ (@ (p1_a156 :: Nat -&gt; *))\n                     (ds_d1io :: p1_a156 'Z)\n                     (ds1_d1ip\n                        :: forall (m :: Nat). a_aYH -&gt; p1_a156 m -&gt; p1_a156 ('S m)) -&gt;\n                     f_aYF @ p1_a156 ds_d1io ds1_d1ip))\n      = f_aYF @ p_aYG nil_aYD cons_aYE\n</code></pre>\n\n<p>It appears that the issue is that the argument to <code>buildVect</code> needs to be a lambda abstraction of a very specific form, and I'm having trouble constructing a system of rewrites where that ends up happening.</p>\n\n<p>How do I get fusion to work?</p>\n\n<p>(I don't know if this is useful or even correct; I'm just doing this to see if I can.)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1528916174, "post_id": 50844042, "comment_id": 88692182, "body": "&quot;So that join just drop the outermost structure [...]&quot; -- At value level, <code>join</code> doesn&#39;t merely drop the outer layer; it merges it with the inner layer."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1528917303, "post_id": 50844042, "comment_id": 88692716, "body": "yeah I can see the logic for squashing 2 structures together in an Applicative, but I don&#39;t see what the merge does concretely in a Monad, this is why I said drop.. The &#39;merge&#39; looks like a blackbox to me so far..."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1528918335, "post_id": 50844042, "comment_id": 88693254, "body": "It may help to consider a few concrete examples. For instance, what would dropping the outer layer mean for <code>IO</code>? Once you perform the outer <code>IO</code> computation to &quot;get information from it&quot;, there is no turning back -- no way to undo or otherwise discard it."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1528918600, "post_id": 50844042, "comment_id": 88693399, "body": "In any case, this is an interesting question. For a related discussion, cf. <a href=\"https://stackoverflow.com/a/49703783/2751851\">winitzki&#39;s answer to <i>Good examples of Not a Functor/Functor/Applicative/Monad?</i></a>"}], "answers": [{"tags": [], "owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "is_accepted": false, "score": 0, "last_activity_date": 1528947312, "last_edit_date": 1528947312, "creation_date": 1528938666, "answer_id": 50848281, "question_id": 50844042, "link": "https://stackoverflow.com/questions/50844042/how-could-we-know-that-an-applicative-cant-be-a-monad/50848281#50848281", "title": "How could we know that an applicative can&#39;t be a Monad?", "body": "<p>This isn't really an answer, but it's too long for a comment.</p>\n\n<p><a href=\"https://stackoverflow.com/q/24112786/176841\">This</a> and other referenced discussions in that thread are relevant. I think the question is posed sort of backwards: all <code>Monad</code>s naturally give rise to an <code>Applicative</code> (where <code>pure = return</code>, etc); the issue is that most users expect/assume that (where a type is instance <code>Monad</code>) <em>the <code>Applicative</code> instance is semantically equivalent to the instance to which the Monad gives rise</em>.</p>\n\n<p>This is documented in the <code>Applicative</code> class as a sort of law, but I'm not totally convinced it's justified. The argument seems to be that having an <code>Applicative</code> and <code>Monad</code> that don't agree in this way is confusing.</p>\n\n<p>My experience using <code>Validation</code> is that it's a nightmare to do anything large with it, both because the notation becomes a mess and because you find you have some data dependencies (e.g. you need to parse and validate one section based on the parse of a previous section). You end up defining <code>bindV</code> which behave like an <code>Error</code> monad <code>&gt;&gt;=</code> since a proper <code>Monad</code> instance is considered dubious.</p>\n\n<p>And yet using a <code>Monad</code>/<code>Applicative</code> pair like this does what you want: especially when using <code>ApplicativeDo</code> (I imagine; haven't tried this), the effect of writing your parser (e.g.) in Monadic style is that you can accumulate as many errors as possible at every level, based on the data dependencies of your parsing code. <code>Haxl</code> arguably fudges this \"law\" in a similar way. </p>\n\n<p>I don't have enough experience with other types that are <code>Applicative</code> but not <code>Monad</code> to know whether there's a sensible rule for when it's \"okay\" for the Applicative to disagree in this way. Maybe it's totally arbitrary that <code>Validation</code> seems to work sensibly.</p>\n\n<h2>In any case...</h2>\n\n<p>I'm not sure how to directly answer your question. I think you start by taking the laws documented at the bottom of <code>Applicative</code> class docs, and flip them, so you get:</p>\n\n<pre><code> return = pure\n ap m1 m2 = m1 &lt;*&gt; m2\n</code></pre>\n\n<p>If <code>ap</code> were a method of <code>Monad</code> and the above was a minimal complete definition then you'd simply have to test whether the above passed the <code>Monad</code> laws to answer your question for any <code>Applicative</code>, but that's not the case of course.</p>\n"}], "owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 148, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1528947312, "creation_date": 1528914910, "last_edit_date": 1528921027, "question_id": 50844042, "link": "https://stackoverflow.com/questions/50844042/how-could-we-know-that-an-applicative-cant-be-a-monad", "title": "How could we know that an applicative can&#39;t be a Monad?", "body": "<p>From the example of Validation (<a href=\"https://hackage.haskell.org/package/Validation\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/Validation</a>), I'm trying to get an intuition of detecting how/why an applicative could not be a Monad (<a href=\"https://stackoverflow.com/questions/40539650/why-can-accvalidation-not-have-a-monad-instance\">Why can AccValidation not have a Monad instance?</a>)</p>\n\n<p>Could you challenge my reasoning ?</p>\n\n<p>I think about a monad in the way we handle behind the join (m ( m b) -> m b), let's develop my understanding with an example like Validation:</p>\n\n<p>in <code>data Validation err a</code>, the functor structure is (Validation err). When you look at the definition of the bind for Monad and specializing the types  for Validation you get the following :</p>\n\n<pre><code>(&gt;&gt;=)  :: m a -&gt; (a -&gt; m b) -&gt; m b\n(&gt;&gt;=)  :: (Validation err) a -&gt; (  a -&gt; (Validation err) b) -&gt; (Validation err) b\n</code></pre>\n\n<p>if you beta reduce (>>=) you'll get :</p>\n\n<pre><code>m a -&gt; (a -&gt; m b) -&gt; m b // if we apply (m a) in the monadic function  \nm ( m b) -&gt; m b\n</code></pre>\n\n<p>then to get the result of (>>=) which is m b, you'll use join :  </p>\n\n<pre><code>join              :: (Monad m) =&gt; m (m a) -&gt; m a\njoin x            =  x &gt;&gt;= id\n</code></pre>\n\n<p>If you play with the types you'll get :</p>\n\n<pre><code>join m ( m b ) = m ( m b) &gt;&gt;= (\\(m b) -&gt; m b -&gt; m b) which gives m b\n</code></pre>\n\n<p>So that join just drop the outermost structure, only the value in the innermost type (the value of the innermost functor) is kept/transmitted through the sequence.  </p>\n\n<p>In a monad we can't pass some information from the functor structure (e.g Validation err) to the next 'action', the only think we can pass is the value. The only think you could do with that structure is short-circuiting the sequence to get information from it.</p>\n\n<p>You can't perform a sequence of action on the information from the functor structure (e.g accumulating something like error..)</p>\n\n<p>So I would say that an applicative that is squashing its structure with some logic on its structure could be suspicious as not being able to become a Monad ?</p>\n"}, {"tags": ["haskell", "recursion-schemes", "catamorphism", "anamorphism"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1528913551, "post_id": 50843622, "comment_id": 88690885, "body": "What is odd about that?"}, {"owner": {"reputation": 49, "user_id": 7759374, "user_type": "registered", "profile_image": "https://graph.facebook.com/587280678132828/picture?type=large", "display_name": "Jo&#227;o Pimentel", "link": "https://stackoverflow.com/users/7759374/jo%c3%a3o-pimentel"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528913964, "post_id": 50843622, "comment_id": 88691076, "body": "My idea was to check if the head is in the tail, like aux(a,t) =&gt; checks if a appears in t, but when i try to do it, apparently I&#39;m building a list of Bools"}, {"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528914160, "post_id": 50843622, "comment_id": 88691189, "body": "You are mistaken, the function does what you said it should."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 3, "last_activity_date": 1528928110, "last_edit_date": 1528928110, "creation_date": 1528914453, "answer_id": 50843914, "question_id": 50843622, "link": "https://stackoverflow.com/questions/50843622/repetitions-as-an-hylomorphism/50843914#50843914", "title": "Repetitions as an Hylomorphism", "body": "<p>Well a <em>hylomoprhism</em> is a function <em>h : A &rightarrow; C</em> that can be defined in an anamoprhism (<em>g</em> and <em>p</em>) and catamorphism (<em>c</em> and <em>&oplus;</em>) part.</p>\n\n<p>The anamorphism part consists of a function <em>g : A &rightarrow; B &times; A</em> that \"unfolds\" the object into smaller parts, and <em>p : A &rightarrow; Bool</em> a predicate that determines if we are done unfolding.</p>\n\n<p>The <em>catamorphism</em> part consists of a value <em>c &in; C</em> and an operator <em>&oplus; : B &times; C &rightarrow; C</em>.</p>\n\n<p>(this text is a slightly modified version of the <a href=\"https://en.wikipedia.org/wiki/Hylomorphism_(computer_science)#Formal_definition\" rel=\"nofollow noreferrer\"><em>Wikipedia page</em></a>)</p>\n\n<p>In your case the <em>unfolding</em> means that we unfold a list in some value (of type <em>B</em>, and a <em>recursive</em> part, that is here the <em>tail</em> of the list.</p>\n\n<p>The predicate <em>p</em> can be derived out of your definition: if the list is empty, then we have terminated. It is clear that in that case we return <code>True</code>, so that means <em>c</em> is <code>True</code>.</p>\n\n<p>So now what would the <em>B</em> part be? Well if we look at your function we need access to both the <em>head</em> and the <em>tail</em> of the list, so <em>B</em> can be seen as a 2-tuple containing the head (as first element), and a tail (as second element).</p>\n\n<p>So now the remaining question is what <em>&oplus;</em> does? It takes as input a 2-tuple of type <em>E&times;[E]</em> (pseudo-Haskell notation), and a boolean (type <em>C</em> which is a <code>Bool</code>). As we can see, it checks if the head is en element of the tail. If that is the case, it returns <code>False</code>, and ignores the recursive part, otherwise it returns the recursive part.</p>\n\n<p>So we can write this in Haskell like:</p>\n\n<pre><code>-- types\ntype A e = [e]\ntype B e = (e, [e])\ntype C = Bool\n\n-- functions\np :: A e -&gt; Bool\np [] = True\np (_:_) = False\n\ng :: A e -&gt; (B e, A e)\ng (h:t) = ((h, t), t)\n\nc :: C\nc = True\n\nplus :: Eq e =&gt; B e -&gt; C -&gt; C\nplus (h, t) r | elem h t = False\n              | otherwise = r\n\nhylo :: Eq e =&gt; A e -&gt; C\nhylo a | p a = c\n       | otherwise = plus b (hylo a')\n    where (b, a') = g a\n</code></pre>\n\n<p><code>hylo</code> is thus a straighforward implementation based on the definition where we thus take the functions <code>p</code>, <code>c</code>, <code>plus</code> and <code>g</code> as \"building blocks\".</p>\n"}], "owner": {"reputation": 49, "user_id": 7759374, "user_type": "registered", "profile_image": "https://graph.facebook.com/587280678132828/picture?type=large", "display_name": "Jo&#227;o Pimentel", "link": "https://stackoverflow.com/users/7759374/jo%c3%a3o-pimentel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1528928110, "creation_date": 1528913308, "last_edit_date": 1528913396, "question_id": 50843622, "link": "https://stackoverflow.com/questions/50843622/repetitions-as-an-hylomorphism", "title": "Repetitions as an Hylomorphism", "body": "<p>So I've been trying to convert this Haskell function thats checks if a list doesn't have any repetitions into an Hylomorphism, but there's something odd about it.</p>\n\n<pre><code>valid :: [a] -&gt; Bool\nvalid [] = True\nvalid (h:t) = if (not (elem h t)) then valid t else False  \n</code></pre>\n\n<p>I'll be glad if anyone can help! Thx</p>\n"}, {"tags": ["csv", "haskell", "dataframe", "template-haskell", "haskell-frames"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1528910431, "post_id": 50842180, "comment_id": 88689346, "body": "Please post the actual code you are using.  As it stands 1. Your indentation is broken 2. Your csv file isn&#39;t formatted correctly 3. There is no <code>main</code> function in module <code>Main</code> so it won&#39;t load and 4. Fixing all these I can not reproduce your issue, seeing instead <code>type Todo = Record &#39;[&quot;Desc&quot; :-&gt; Text, &quot;Status&quot; :-&gt; Text]</code>."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1528910516, "post_id": 50842180, "comment_id": 88689388, "body": "Also it is usually wise to make sure you are using the newest version of the library in question so you aren&#39;t bitten by any known/fixed bug."}, {"owner": {"reputation": 711, "user_id": 1023733, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/2495649dc156081879843944795860d5?s=128&d=identicon&r=PG", "display_name": "user1023733", "link": "https://stackoverflow.com/users/1023733/user1023733"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1528926263, "post_id": 50842180, "comment_id": 88696973, "body": "Please could you be more specific about the csv file being incorrectly formatted?( I can open it as is in Libreoffice...)"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1528933632, "post_id": 50842180, "comment_id": 88698906, "body": "It is now correctly formatted thanks to the edit.  I still can not reproduce your issue and see the information in my above comment for <code>:info Todo</code>."}, {"owner": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "edited": false, "score": 0, "creation_date": 1528975702, "post_id": 50842180, "comment_id": 88715299, "body": "Maybe LibreOffice is being less strict about the formatting of the file than the Frames library. You may have to look at the nonprinting characters in the file. If you&#39;re running OS X or Linux you can run <code>cat -e todo.csv</code>. I get <code>Desc,Status$</code> on the first line and <code>&quot;CT3&quot;,&quot;undone&quot;$</code> on the next line. Frames parses it fine. Additionally, as the first commenter specified, can you mention the version of Frames you&#39;re using? I&#39;m using Frames-0.3.0.2"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user3956566"}, "edited": false, "score": 0, "creation_date": 1539784431, "post_id": 50972486, "comment_id": 92628229, "body": "@tylerweir listen to  GhostCat. They&#39;re trying to help you. It&#39;s the only way a regular user has to contact you if you&#39;re making a mistake. So please learn from this."}, {"owner": {"reputation": 1177, "user_id": 456551, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba7024df9e050fec69022dbbb02c49e0?s=128&d=identicon&r=PG", "display_name": "tylerweir", "link": "https://stackoverflow.com/users/456551/tylerweir"}, "edited": false, "score": 0, "creation_date": 1539786536, "post_id": 50972486, "comment_id": 92629692, "body": "I decided what I thought was the appropriate label for a question was in Triage.  I did not make a mistake, as it&#39;s an interpretation.  GhostCat disagreed with me and made it public."}], "tags": [], "owner": {"reputation": 1177, "user_id": 456551, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba7024df9e050fec69022dbbb02c49e0?s=128&d=identicon&r=PG", "display_name": "tylerweir", "link": "https://stackoverflow.com/users/456551/tylerweir"}, "is_accepted": false, "score": 0, "last_activity_date": 1529595402, "creation_date": 1529595402, "answer_id": 50972486, "question_id": 50842180, "link": "https://stackoverflow.com/questions/50842180/frames-library-can-only-find-1-column-of-my-csv-file/50972486#50972486", "title": "Frames library can only find 1 column of my CSV file", "body": "<p>I am working on a project with Frames right now, so I recreated your example.  Below are my results with Frames 0.3.0.2:</p>\n\n<pre><code>Ok, one module loaded.\nH&gt; main\nit :: ()\n(0.00 secs, 329,800 bytes)\nH&gt; :i Todo \ntype Todo = Record '[\"Desc\" :-&gt; Text, \"Status\" :-&gt; Text]\n</code></pre>\n\n<p>If you put up a repo someplace, I can take another look.</p>\n"}], "owner": {"reputation": 711, "user_id": 1023733, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/2495649dc156081879843944795860d5?s=128&d=identicon&r=PG", "display_name": "user1023733", "link": "https://stackoverflow.com/users/1023733/user1023733"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1529595402, "creation_date": 1528907546, "last_edit_date": 1528926072, "question_id": 50842180, "link": "https://stackoverflow.com/questions/50842180/frames-library-can-only-find-1-column-of-my-csv-file", "title": "Frames library can only find 1 column of my CSV file", "body": "<p>Using the following .csv file:</p>\n\n<pre><code>Desc,Status\n\"CT3\",\"undone\"\n</code></pre>\n\n<p>I have written the following program:</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}    \n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE QuasiQuotes #-}\n\nmodule Main where\n\nimport Data.Text\nimport Frames\n\ntableTypes \"Todo\" \"todo.csv\"\n\nmain = return ()\n</code></pre>\n\n<p>However, when I load the program into GHCI I get the following:</p>\n\n<pre><code>*Main&gt; :i Todo\ntype Todo = Record '[\"Desc\" :-&gt; Text]\n</code></pre>\n\n<p>Why does Frames not find the status column from the csv file?</p>\n\n<p>-Eric M.</p>\n"}, {"tags": ["haskell", "function-composition", "pointfree"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1528900377, "post_id": 50839828, "comment_id": 88683405, "body": "That&#39;s actually the left operand."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1528900946, "post_id": 50839828, "comment_id": 88683813, "body": "<code>.</code> is just like any other operator. <code>f . g == (.) f g</code>, and you can define sections like <code>(f .)</code> and <code>(. g)</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1528904291, "post_id": 50839828, "comment_id": 88685976, "body": "What do you mean by &quot;is it possible to curry the function composition&quot; ?"}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1528914484, "post_id": 50839828, "comment_id": 88691360, "body": "I thought that given a function <code>f</code> and a function <code>g</code>  they both must accept a parameter.In this case its more like <code>f</code> accepts 3 parameters ,of which 2 are already fixed and 1 is taken from <code>g</code> x - where x is the third parameter."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1529138613, "post_id": 50839828, "comment_id": 88774268, "body": "(to your question&#39;s last sentence:) no, you can do <code>( f(x1...xn-1) . g(y1...yn) ) (k)</code> as long as <code>g(y1...yn)(k) = xn</code>. ---- also, it probably should have been <code>enclose begin end input = char begin &lt;&gt; input &lt;&gt; char end</code>."}], "answers": [{"comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1528914398, "post_id": 50840029, "comment_id": 88691320, "body": "Oh but i thought that in point free notation you cant have  f(p1,p2,p3) . g(p4,p5,p6)  p7.I mean you can compose functions on the same common parameter but the methods can have other parameters as well ?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1528916627, "post_id": 50840029, "comment_id": 88692395, "body": "I&#39;m not sure I understand what you&#39;re asking there (perhaps you should flesh it out to a separate question), but generally, you can partially apply any number of arguments. If <code>f :: A -&gt; B -&gt; C</code> and <code>g :: D -&gt; E -&gt; B</code>, then you can write <code>f a . g d $ e</code> instead of <code>f a (g d e)</code>."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1528917738, "post_id": 50840029, "comment_id": 88692936, "body": "Thank you that was what i needed to understand !"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 5, "last_activity_date": 1528900859, "creation_date": 1528900859, "answer_id": 50840029, "question_id": 50839828, "link": "https://stackoverflow.com/questions/50839828/function-composition-partial-application/50840029#50840029", "title": "Function composition partial application", "body": "<p>There's nothing very exciting going on here. The function you quoted is just</p>\n\n<pre><code>series open close item = enclose open close . fsep . punctuate (char ',') . map item\n</code></pre>\n\n<p>with a line break after the <code>enclose open close</code> for readability (which changes nothing about how this is parsed). I.e. the operands to the <code>.</code> you asked about are <code>enclose open close</code> and <code>fsep</code><sup>\u2020</sup>.</p>\n\n<p>Here, <code>enclose open close</code> is a partial application of the <code>enclose</code> function:</p>\n\n<pre><code>enclose :: Char -&gt; Char -&gt; Doc -&gt; Doc\nenclose open   ::  Char -&gt; Doc -&gt; Doc\nenclose open close   ::    Doc -&gt; Doc\n</code></pre>\n\n<p>thus you're composing a <code>Doc -&gt; Doc</code> function before a function that yields a <code>Doc</code>.</p>\n\n<hr>\n\n<p><sup>\u2020</sup>Actually that's technically not quite true: because <code>.</code> is <em>right</em>-associative, the right operand is actually <em>everything</em> to its right, i.e.</p>\n\n<pre><code>     (enclose open close) . (fsep . punctuate (char ',') . map item)\n</code></pre>\n\n<p>but due to <code>f . (g . h) \u2261 (f . g) . h</code> this doesn't matter.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 50840029, "answer_count": 1, "score": 1, "last_activity_date": 1528914727, "creation_date": 1528900298, "last_edit_date": 1528914727, "question_id": 50839828, "link": "https://stackoverflow.com/questions/50839828/function-composition-partial-application", "title": "Function composition partial application", "body": "<p>Hello can someone explain to me this example from Real World Haskell of function composiiton: </p>\n\n<pre><code>data Doc = ToBeDefined deriving (Show) \n\n(&lt;&gt;) :: Doc -&gt; Doc -&gt; Doc\na &lt;&gt; b = undefined\n\nseries :: Char -&gt; Char -&gt; (a -&gt; Doc) -&gt; [a] -&gt; Doc\nseries open close item = enclose open close\n                         . fsep . punctuate (char ',') . map item\n                         -- Who does fsep compose with?\n\nenclose :: Char -&gt; Char -&gt; Doc -&gt; Doc\nenclose begin end input = char begin &lt;&gt; input &lt;&gt; char &lt;&gt; end\n</code></pre>\n\n<p>I do not understand how who is the right operand of the <code>. fsep</code> expression.</p>\n\n<pre><code>( . ) [who is here ]  fsep \n</code></pre>\n\n<p>Because from the looks of it close and open are just a characters.Can you compose a function with a data type (in our case a character)? </p>\n\n<p><strong>P.S</strong> Is it possible to curry the function composition? </p>\n\n<p>so <code>enclose</code> accepts 3 parameters: 2 of them are already fixed <code>open</code> and <code>close</code> and the third one is the result of <code>fsep</code>.</p>\n\n<p>Basically you can do <code>f(x1...xn-1 xn) . g(y1....yn)(k)</code>  as long as <code>g(y1...yn)(k)</code>=xn .</p>\n"}, {"tags": ["sql", "haskell", "esqueleto"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528896060, "post_id": 50838271, "comment_id": 88680393, "body": "Could you include more of that error? What line does it complain about?"}, {"owner": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "edited": false, "score": 0, "creation_date": 1528986395, "post_id": 50838271, "comment_id": 88722206, "body": "This link might be useful for anyone trying to get esqueleto to build while trying to reproduce the error: <a href=\"https://github.com/bitemyapp/esqueleto/issues/88\" rel=\"nofollow noreferrer\">github.com/bitemyapp/esqueleto/issues/88</a>"}, {"owner": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "edited": false, "score": 0, "creation_date": 1529038155, "post_id": 50838271, "comment_id": 88740188, "body": "I&#39;m not 100% sure but I think the error can be deduced by looking at the type signatures of <code>(^.)</code> and <code>extractYear</code>. From GHCi, <code>(^.) :: (PersistField typ, PersistEntity val, Esqueleto query expr backend) =&gt; expr (Entity val) -&gt; EntityField val typ -&gt; expr (Value typ)</code> and from your code, <code>extractYear :: UnsafeSqlFunctionArgument a =&gt; a -&gt; SqlExpr (Value Integer)</code> where <code>a</code> is going to be <code>expr (Value typ)</code>. This means there are <i>no guarantees</i> that <code>expr</code> is an instance of <code>UnsafeSqlFunctionArgument</code> so you get a <code>Could not deduce...</code> error. I don&#39;t think <code>UTCTime</code> matters here."}], "owner": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 95, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1528896397, "creation_date": 1528895780, "last_edit_date": 1528896397, "question_id": 50838271, "link": "https://stackoverflow.com/questions/50838271/extracting-the-year-from-a-timestamp-field-inside-an-esqueleto-query", "title": "Extracting the year from a timestamp field inside an Esqueleto query", "body": "<p>I am trying to make use of the <code>unsafeSqlExtractSubField</code> from Esqueleto to create one that will extract the year from a date, such as:</p>\n\n<pre><code>data ReportRow = ReportRow Text\n\nuserSignupData :: MonadIO m =&gt; Key User -&gt; SqlPersistT m [ReportRow]\nuserSignupData _ = fmap toRow &lt;$&gt; select (from query)\n  where\n    query s =\n      pure $ (extractYear $ s ^. UserCreatedAt)\n\n    toRow yearVal = ReportRow (showText . unValue $ yearVal)\n\nextractYear :: UnsafeSqlFunctionArgument a =&gt; a -&gt; SqlExpr (Value Integer)\nextractYear =\n  unsafeSqlExtractSubField \"year\"\n\nshowText :: Show a =&gt; a -&gt; Text\nshowText = T.pack . show\n</code></pre>\n\n<p>But I am getting the error:</p>\n\n<pre><code>Could not deduce\n  (UnsafeSqlFunctionArgument\n    (expr0 (Value UTCTime)))\n\n  arising from a use of \u2018query\u2019\nfrom the context: MonadIO m\n  bound by the type signature for:\n    userSignupData :: forall (m :: * -&gt; *).\n                      MonadIO m =&gt;\n                      Key User -&gt; SqlPersistT m [ReportRow]\n\nThe type variable \u2018expr0\u2019 is ambiguous\n\n   |\n20 | userSignupData _ = fmap toRow &lt;$&gt; select (from query)\n   |                                                ^^^^^\n</code></pre>\n\n<p>Do I need to define an instance of <code>UnsafeSqlFunctionArgument</code> for <code>UTCTime</code> here or am I trying to fit a square peg into a round hole ?</p>\n\n<p>I'm not after answers that state that I could extract the date at the haskell level, I'd like to get the year inside the query so that I can perform an SQL <code>GROUP BY</code> inside the query.</p>\n"}, {"tags": ["haskell", "types", "syntax"], "comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1528884347, "post_id": 50830838, "comment_id": 88672777, "body": "What kinds of cases do you think might be added in the future? Would all of them share the same pattern of <code>MatchingSomething String</code> or not? If so, then what people have already suggested\u2014such as separating the <code>Head</code>/<code>Body</code>/<code>Tail</code> tag from the <code>String</code> condition\u2014would work fine. What is the context where you want to use <code>extractCondition</code>? There may be a better way to write it, depending on the actual problem you\u2019re trying to solve."}], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1528880216, "post_id": 50831084, "comment_id": 88669989, "body": "We have just as many <code>extractCondition</code> lines as before, they&#39;re just in a different place"}, {"owner": {"reputation": 393, "user_id": 2176528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/136af1bfd8b8c1582d2e56ac08bfcd94?s=128&d=identicon&r=PG", "display_name": "kishlaya", "link": "https://stackoverflow.com/users/2176528/kishlaya"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1529295255, "post_id": 50831084, "comment_id": 88804961, "body": "@luqui Yes, and does this way of writing the <code>MatchingCondition</code> data type guarantee type-safety?"}, {"owner": {"reputation": 393, "user_id": 2176528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/136af1bfd8b8c1582d2e56ac08bfcd94?s=128&d=identicon&r=PG", "display_name": "kishlaya", "link": "https://stackoverflow.com/users/2176528/kishlaya"}, "reply_to_user": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1529295301, "post_id": 50831084, "comment_id": 88804967, "body": "@mb14 We can&#39;t omit <code>String</code>. We need to specify the type in each case."}], "tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": false, "score": 4, "last_activity_date": 1528873875, "creation_date": 1528873875, "answer_id": 50831084, "question_id": 50830838, "link": "https://stackoverflow.com/questions/50830838/extracting-fields-from-a-data-type-in-haskell/50831084#50831084", "title": "Extracting fields from a data type in Haskell", "body": "<p>One way to do that is using records:</p>\n\n<pre><code>data MatchingCondition = MatchingHead { extractCondition :: String }\n                       | MatchingBody { extractCondition :: String }\n                       | MatchingTail { extractCondition :: String }\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 393, "user_id": 2176528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/136af1bfd8b8c1582d2e56ac08bfcd94?s=128&d=identicon&r=PG", "display_name": "kishlaya", "link": "https://stackoverflow.com/users/2176528/kishlaya"}, "edited": false, "score": 0, "creation_date": 1529295412, "post_id": 50831162, "comment_id": 88804985, "body": "This technique looks interesting. Besides, can you point out at an example where using records inside sum types is dangerous?"}, {"owner": {"reputation": 393, "user_id": 2176528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/136af1bfd8b8c1582d2e56ac08bfcd94?s=128&d=identicon&r=PG", "display_name": "kishlaya", "link": "https://stackoverflow.com/users/2176528/kishlaya"}, "edited": false, "score": 0, "creation_date": 1529295524, "post_id": 50831162, "comment_id": 88804997, "body": "&quot;The record-based solution in the other answer is also a valid solution&quot; - Is that a better way rather than writing an <code>extractCondition</code> function separately?"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 393, "user_id": 2176528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/136af1bfd8b8c1582d2e56ac08bfcd94?s=128&d=identicon&r=PG", "display_name": "kishlaya", "link": "https://stackoverflow.com/users/2176528/kishlaya"}, "edited": false, "score": 0, "creation_date": 1529301133, "post_id": 50831162, "comment_id": 88806300, "body": "@kishlaya You can see simple example about using record fields inside data types on this slide from my Haskell lecture: <a href=\"http://slides.com/fp-ctd/lecture-3#/19\" rel=\"nofollow noreferrer\">slides.com/fp-ctd/lecture-3#/19</a> RE record solution from another answer: it&#39;s better while all your constructors have <code>String</code> field. Writing function of type <code>MatchingCondition -&gt; Maybe MyField</code> is a good way to go. There exist some techniques like lenses and prisms where you don&#39;t need to write those functions manually, they can be generated for you but that&#39;s another advanced topic."}], "tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": true, "score": 8, "last_activity_date": 1528888187, "last_edit_date": 1528888187, "creation_date": 1528874112, "answer_id": 50831162, "question_id": 50830838, "link": "https://stackoverflow.com/questions/50830838/extracting-fields-from-a-data-type-in-haskell/50831162#50831162", "title": "Extracting fields from a data type in Haskell", "body": "<p>Would be a nice thing to be possible to write underscore for constructors:</p>\n\n<pre><code>extractCondition (_ x) = x\n</code></pre>\n\n<p>Unfortunately you cannot write such code in Haskell.</p>\n\n<p>But you can always refactor your code to move tag into separate field:</p>\n\n<pre><code>data MatchingType = Head | Body | Tail\ndata MatchingCondition = Match MatchingType String\n\nextractCondition (Match _ x) = x\n</code></pre>\n\n<p>There exist techniques where you just write something like <code>extract @String myMatching</code>, which will automatically return the <code>String</code> from every constructor. And you don't need to write any code at all! (see <a href=\"https://wiki.haskell.org/Scrap_your_boilerplate\" rel=\"nofollow noreferrer\"><em>Scrap your boilerplate</em></a>). Though it's probably not what you want.</p>\n\n<p>The record-based solution in the other answer is also a valid solution. Though you should be careful with having records inside sum types. This can be dangerous!</p>\n\n<p>Re <em>type-safety defeat</em>: better ask your friend since he said this. But it's hard to tell what he means without looking at the whole code.</p>\n"}, {"comments": [{"owner": {"reputation": 393, "user_id": 2176528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/136af1bfd8b8c1582d2e56ac08bfcd94?s=128&d=identicon&r=PG", "display_name": "kishlaya", "link": "https://stackoverflow.com/users/2176528/kishlaya"}, "edited": false, "score": 0, "creation_date": 1529297154, "post_id": 50833538, "comment_id": 88805306, "body": "Yeah, I&#39;ve done some JAVA programming in the past and so I am familiar with that method (but I don&#39;t find it to be very elegant). Although, using <code>Maybe</code> is an excellent option."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 6, "last_activity_date": 1528895624, "last_edit_date": 1528895624, "creation_date": 1528881599, "answer_id": 50833538, "question_id": 50830838, "link": "https://stackoverflow.com/questions/50830838/extracting-fields-from-a-data-type-in-haskell/50833538#50833538", "title": "Extracting fields from a data type in Haskell", "body": "<p>I'll only cover this point:</p>\n\n<blockquote>\n  <p>Besides, when my friend saw this code, he commented: this seems like it is defeating the type-safety introduced by the sum-type in the first place.</p>\n  \n  <p>Can somebody explain what does this exactly mean?</p>\n</blockquote>\n\n<p>Your friend is probably worried that in the future you will add some constructor without a <code>String</code> inside.</p>\n\n<p>Consider:</p>\n\n<pre><code>data T = A String | B String\n\ngetString :: T -&gt; String\ngetString (A s) = s\ngetString (B s) = s\n</code></pre>\n\n<p>There's nothing wrong with this, as long as <code>T</code> is set into stone.</p>\n\n<p>If, instead, later on <code>T</code> is changed, we might end up with</p>\n\n<pre><code>data T = A String | B String | C NotAString\n\ngetString :: T -&gt; String\ngetString (A s) = s\ngetString (B s) = s\ngetString (C n) = error \"not a string, let's make the program crash!\"\n</code></pre>\n\n<p>If <code>T</code> becomes extended in such way, <code>getString</code> becomes a <em>partial</em> function, which should be avoided. Having such a function around one is tempted to write code such as</p>\n\n<pre><code>foo :: T -&gt; ...\nfoo t = use (getString t)\n</code></pre>\n\n<p>and \"forget\" about the non-string case, potentially crashing the program. If instead <code>foo</code> has to pattern match on all constructors, we would remember that case as well.</p>\n\n<p>When <code>T</code> is extended, the type <code>getString :: T -&gt; String</code> becomes a lie to the user. It is telling them that a <code>String</code> will always be produced but that's not the case.\nTypical solutions include removing <code>getString</code> and let <code>foo</code> do all the pattern matching, or, if \"most\" of the cases have a string, keep <code>getString</code> but change it to <code>getString :: T -&gt; Maybe String</code> so that <code>foo</code> now will be forced to handle the \"no string\" case.</p>\n\n<p>I'll also mention a common design error to avoid, which is a case of \"boolean blindness\". Some programmers are tempted to keep <code>getString :: T -&gt; String</code> partial, and add a helper function</p>\n\n<pre><code>hasString :: T -&gt; Bool\n</code></pre>\n\n<p>with the intention of using</p>\n\n<pre><code>foo t = if hasString t\n   then use (getString t)\n   else handleNoString\n</code></pre>\n\n<p>The issue here is that the used has to remember that each <code>getString</code> call must be guarded by <code>hasString</code>. The compiler does not help the programmer of that. This puts more burden on the programmer, who has to actively avoid dangerous cases. This issue would not be there if we used <code>Maybe</code> instead.</p>\n\n<pre><code>foo t = case getString t of\n   Just s  -&gt; use s     -- now use (getString t) would be a type error, and rightly so!\n   Nothing -&gt; handleNoString\n</code></pre>\n\n<p>This design is present in some Java library, which probably contributed to it becoming widespread. (I was told that many Java programmers now consider it a bad design.)</p>\n"}], "owner": {"reputation": 393, "user_id": 2176528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/136af1bfd8b8c1582d2e56ac08bfcd94?s=128&d=identicon&r=PG", "display_name": "kishlaya", "link": "https://stackoverflow.com/users/2176528/kishlaya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 743, "favorite_count": 0, "accepted_answer_id": 50831162, "answer_count": 3, "score": 4, "last_activity_date": 1528895624, "creation_date": 1528872992, "question_id": 50830838, "link": "https://stackoverflow.com/questions/50830838/extracting-fields-from-a-data-type-in-haskell", "title": "Extracting fields from a data type in Haskell", "body": "<p>(I am fairly new to Haskell) I made a data type like this -</p>\n\n<p><code>data MatchingCondition = MatchingHead String | MatchingBody String | MatchingTail String</code></p>\n\n<p>Now I want to write a function <code>extractCondition :: MatchingCondition -&gt; String</code> which extracts the string out of this data type. </p>\n\n<p>One way to do this is to explicitly write</p>\n\n<pre><code>extractCondition (MatchingHead x) = x\nextractCondition (MatchingBody x) = x\nextractCondition (MatchingTail x) = x\n</code></pre>\n\n<p>Right now, the cases were few so I could easily write down this function but it would become a huge pain if there were more cases or if in future I were to add more conditions to my data type. So is there any easy way to do this.</p>\n\n<p>Besides, when my friend saw this code, he commented: this seems like it is defeating the type-safety introduced by the sum-type in the first place.</p>\n\n<p>Can somebody explain what does this exactly mean?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 7, "creation_date": 1528865189, "post_id": 50829178, "comment_id": 88662700, "body": "<code>zip = zipWith (,)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 133, "user_id": 2159471, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6ba03bcf5c19e5dd23f98da34fc17348?s=128&d=identicon&r=PG", "display_name": "user2159471", "link": "https://stackoverflow.com/users/2159471/user2159471"}, "edited": false, "score": 1, "creation_date": 1528873609, "post_id": 50829376, "comment_id": 88666177, "body": "Thank you so much for elegant and thought provoking explanation."}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 8, "last_activity_date": 1528866257, "creation_date": 1528866257, "answer_id": 50829376, "question_id": 50829178, "link": "https://stackoverflow.com/questions/50829178/writing-zip-in-terms-of-zipwith/50829376#50829376", "title": "Writing zip in terms of zipWith", "body": "<p>The only difference between <code>myzip1</code> and <code>myZipWith</code> is</p>\n\n<pre><code>myzip1      (x:xs) (y:ys) =   (x,y) : myzip1      xs ys\nmyZipWith f (x:xs) (y:ys) = (f x y) : myZipWith f xs ys\n</code></pre>\n\n<p>Perhaps <code>myzip1</code> and <code>myZipWith f</code> are the same for some <code>f</code>.</p>\n\n<pre><code>myzip1 = myZipWith f\n</code></pre>\n\n<p>What would <code>f</code> be so that</p>\n\n<pre><code>(f x y) = (x, y)\n</code></pre>\n"}], "owner": {"reputation": 133, "user_id": 2159471, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6ba03bcf5c19e5dd23f98da34fc17348?s=128&d=identicon&r=PG", "display_name": "user2159471", "link": "https://stackoverflow.com/users/2159471/user2159471"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 337, "favorite_count": 0, "accepted_answer_id": 50829376, "answer_count": 1, "score": 1, "last_activity_date": 1528866257, "creation_date": 1528864753, "last_edit_date": 1528865219, "question_id": 50829178, "link": "https://stackoverflow.com/questions/50829178/writing-zip-in-terms-of-zipwith", "title": "Writing zip in terms of zipWith", "body": "<p>I am learning Haskell through Chris Allen and Julie Moronuki's Haskell Programming book. Need help on one of the exercises for Zipping list. The exercise has 3 parts, first two are about writing our own implementation of zip and zipWith which i was able to.</p>\n\n<pre><code>myzip1 :: [a] -&gt; [b] -&gt; [(a,b)]\nmyzip1 _ [] = []\nmyzip1 [] _ = []\nmyzip1 (x:xs) (y:ys) = (x,y) : myzip1 xs ys\n\nmyZipWith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]\nmyZipWith _ _ [] = []\nmyZipWith _ [] _ = []\nmyZipWith f (x:xs) (y:ys) = (f x y) : myZipWith f xs ys\n</code></pre>\n\n<p>The last part asks to write zip in terms of zipWith. I am not able to come up with a solution. Honestly, i am not able to grasp the question completely (writing one function in terms of second, when function application of second is not required as it has all arguments first would require) .\nThanks for the help.</p>\n"}, {"tags": ["haskell", "ghc", "typeclass"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 5, "creation_date": 1528885767, "post_id": 50826535, "comment_id": 88673691, "body": "Possibly related: <a href=\"https://www.schoolofhaskell.com/user/sloan/reifying-instance-resolution\" rel=\"nofollow noreferrer\">Reifying Instance Resolution</a>"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1528898911, "post_id": 50836496, "comment_id": 88682399, "body": "For users new to this kind of output (like me!), could you write your interpretation of what each of these lines means?"}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1528902742, "post_id": 50836496, "comment_id": 88685033, "body": "@DanielWagner I updated the answer. Unfortunately I can&#39;t describe the dump line by line, because I simply don&#39;t know enough."}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": true, "score": 7, "last_activity_date": 1528903736, "last_edit_date": 1528903736, "creation_date": 1528890497, "answer_id": 50836496, "question_id": 50826535, "link": "https://stackoverflow.com/questions/50826535/how-do-i-determine-why-ghc-is-looking-for-a-particular-type-class-instance/50836496#50836496", "title": "How do I determine why ghc is looking for a particular type class instance?", "body": "<p>You can try <code>-ddump-cs-trace</code> option, though it is aimed to help GHC devs when debugging constrains solving code, but it could be useful for you too. Here is the output for your example:</p>\n\n<pre><code>Step 1[l:2,d:0] Kept as inert:\n    [G] $dMyClass3_a1rt {0}:: MyClass3 c_a1rs[sk:2]\nStep 2[l:2,d:0] Dict equal (keep):\n    [WD] $dMyClass3_a1rv {0}:: MyClass3 c_a1rs[sk:2]\nConstraint solver steps = 2\nStep 1[l:1,d:0] Top react: Dict/Top (solved wanted):\n    [WD] $dMyClass3_a2uc {0}:: MyClass3 (MyType2 (MyType1 Int))\nStep 2[l:1,d:1] Top react: Dict/Top (solved wanted):\n    [WD] $dMyClass2_a2up {1}:: MyClass2 (MyType1 Int)\nStep 3[l:1,d:2] Kept as inert:\n    [WD] $dMyClass1_a2uq {2}:: MyClass1 Int\nStep 4[l:2,d:0] Kept as inert:\n    [G] $dMyClass3_a1rB {0}:: MyClass3 c_a1rz[sk:2]\nStep 5[l:2,d:0] Wanted CallStack IP:\n    [WD] $dIP_a2u8 {0}:: ?callStack::GHC.Stack.Types.CallStack\nStep 6[l:2,d:0] Kept as inert:\n    [WD] $dIP_a2uA {0}:: ?callStack::GHC.Stack.Types.CallStack\nStep 7[l:2,d:0] Kept as inert:\n    [G] $dMyClass2_a2uh {0}:: MyClass2 a_a2ug[ssk:2]\nStep 8[l:2,d:0] Kept as inert:\n    [G] $dMyClass1_a2ul {0}:: MyClass1 a_a2uk[ssk:2]\nConstraint solver steps = 8\n</code></pre>\n\n<p>It is not easy to extract useful information from this dump, but AFAIK it is the only available option right now. Few related tickets: <a href=\"https://ghc.haskell.org/trac/ghc/ticket/13443\" rel=\"nofollow noreferrer\">13443</a>, <a href=\"https://ghc.haskell.org/trac/ghc/ticket/15044\" rel=\"nofollow noreferrer\">15044</a></p>\n\n<p>ADDED:\nI'll try to explain a bit what the dump means. I'm not actually familiar with GHC internals, so it is just my (probably wrong) understanding.</p>\n\n<p>The relevant bit is the next:</p>\n\n<pre><code>Step 1[l:1,d:0] Top react: Dict/Top (solved wanted):\n    [WD] $dMyClass3_a2uc {0}:: MyClass3 (MyType2 (MyType1 Int))\nStep 2[l:1,d:1] Top react: Dict/Top (solved wanted):\n    [WD] $dMyClass2_a2up {1}:: MyClass2 (MyType1 Int)\nStep 3[l:1,d:2] Kept as inert:\n    [WD] $dMyClass1_a2uq {2}:: MyClass1 Int\n</code></pre>\n\n<p>Here <code>d</code> stands for \"depth\", <code>WD</code> is \"wanted derived\" constraint. So we have something like a stack trace of wanted constraints: initially we wanted <code>MyClass3 (MyType2 (MyType1 Int))</code>, then we found the <code>MyClass3</code> instance for <code>MyType2</code>, and now we want <code>MyClass2 (MyType1 Int)</code> to satisfy it. Then we found the <code>MyClass2</code> instance for <code>MyType1</code>, now we want <code>MyClass1 Int</code> to satisfy it. I know, the explanation is vague, but that is all I have for you, sorry.</p>\n"}], "owner": {"reputation": 847, "user_id": 82928, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/bace01b8bbaf96073d0caf8780197f07?s=128&d=identicon&r=PG", "display_name": "user82928", "link": "https://stackoverflow.com/users/82928/user82928"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 3, "accepted_answer_id": 50836496, "answer_count": 1, "score": 20, "last_activity_date": 1528903736, "creation_date": 1528841480, "question_id": 50826535, "link": "https://stackoverflow.com/questions/50826535/how-do-i-determine-why-ghc-is-looking-for-a-particular-type-class-instance", "title": "How do I determine why ghc is looking for a particular type class instance?", "body": "<p>When conditional type class instances run deep, it can be difficult to figure out why ghc is complaining about a missing type class instance. For instance:</p>\n\n<pre><code>class MyClass1 c\nclass MyClass2 c\nclass MyClass3 c\n\ndata MyType1 a\ndata MyType2 a\n\ninstance MyClass1 a =&gt; MyClass2 (MyType1 a)\ninstance MyClass2 a =&gt; MyClass3 (MyType2 a)\n\nfoo :: (MyClass3 c) =&gt; c\nfoo = undefined\n\nbar :: MyType2 (MyType1 Int)\nbar = foo\n</code></pre>\n\n<p>GHC gives the following error:</p>\n\n<pre><code>Example.hs:149:7-9: error:\n    \u2022 No instance for (MyClass1 Int) arising from a use of \u2018foo\u2019\n    \u2022 In the expression: foo\n      In an equation for \u2018bar\u2019: bar = foo\n    |\n149 | bar = foo\n    |       ^^^\n</code></pre>\n\n<p>Supposing I only wrote the definitions for <code>foo</code> and <code>bar</code>, and everything else was imported code which I did not write, I may be very confused as to why ghc is attempting to find a <code>MyClass1</code> instance for <code>Int</code>. This might even be the first time I've ever heard of the <code>MyClass1</code> class, if so far I've been relying on imported instances. It would be nice if ghc could give me a \"stack trace\" of the type class instance chain, e.g.</p>\n\n<pre><code>Sought (MyClass2 (MyType1 Int)) to satisfy (MyClass3 (MyType2 (MyType1 Int))) from conditional type class instance OtherModule.hs:37:1-18\nSought (MyClass1 Int) to satisfy (MyClass2 (MyType1 Int)) from conditional type class instance OtherModule.hs:36:1-18\n</code></pre>\n\n<p>Does ghc have a command line option for this? If not, how do I debug this?</p>\n\n<p>Keep in mind that my real problem is much more complicated than this simple example. e.g.</p>\n\n<pre><code>Search.hs:110:31-36: error:\n    \u2022 Could not deduce (Ord\n                          (Vars (DedupingMap (Rep (Index gc)) (IndexedProblem ac))))\n        arising from a use of \u2018search\u2019\n      from the context: (PP gc (IndexedProblem ac),\n                         Show (Vars (DedupingMap (Rep (Index gc)) (IndexedProblem ac))),\n                         Foldable f, MonadNotify m)\n        bound by the type signature for:\n                   searchIndexedReplicaProblem :: forall gc ac (f :: * -&gt; *) (m :: *\n                                                                                   -&gt; *).\n                                                  (PP gc (IndexedProblem ac),\n                                                   Show\n                                                     (Vars\n                                                        (DedupingMap\n                                                           (Rep (Index gc)) (IndexedProblem ac))),\n                                                   Foldable f, MonadNotify m) =&gt;\n                                                  f (Index\n                                                       (Clzs\n                                                          (PartitionedProblem\n                                                             gc (IndexedProblem ac))))\n                                                  -&gt; m (Maybe\n                                                          (Vars\n                                                             (PartitionedProblem\n                                                                gc (IndexedProblem ac))))\n        at Search.hs:(103,1)-(109,131)\n    \u2022 In the expression: search\n      In an equation for \u2018searchIndexedReplicaProblem\u2019:\n          searchIndexedReplicaProblem = search\n    |\n110 | searchIndexedReplicaProblem = search\n    |                               ^^^^^^\n</code></pre>\n\n<p>There are five coverage conditions for PP, and I'm using type families and undecidable instances, so it's extremely not obvious why ghc is giving me its error. What tools can I use to track down the problem?</p>\n"}, {"tags": ["haskell", "syntax", "scheme", "monads", "interpreter"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1528838552, "post_id": 50825923, "comment_id": 88656852, "body": "What specifically is confusing you about reading this? If you&#39;re asking for an explanation of <code>&gt;&gt;=</code>, this probably isn&#39;t the place."}, {"owner": {"reputation": 68611, "user_id": 53897, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG", "display_name": "Thorbj&#248;rn Ravn Andersen", "link": "https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528876137, "post_id": 50825923, "comment_id": 88667642, "body": "@AJFarmar I have a hard time making the leap from the previous version of this (which was simpler because it didn&#39;t do error handling in monads) to even understanding what these instructions mean."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1528892805, "post_id": 50825923, "comment_id": 88678160, "body": "the link to the correct page is <a href=\"https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/Error_Checking_and_Exceptions\" rel=\"nofollow noreferrer\">en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "is_accepted": false, "score": 2, "last_activity_date": 1528880065, "last_edit_date": 1528880065, "creation_date": 1528839123, "answer_id": 50826116, "question_id": 50825923, "link": "https://stackoverflow.com/questions/50825923/understanding-this-assignment/50826116#50826116", "title": "Understanding this assignment?", "body": "<p><code>&gt;&gt;=</code> builds a computation that <em>may fail at either end</em>: its left argument can be an empty monad, in which case it does not even happen, otherwise its result can be empty as well. It has type</p>\n\n<pre><code>&gt;&gt;= :: m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>See, its arguments are: value(s) immersed into monad and a function that accepts a pure value and returns an immersed result. This operator is a monadic version of what is known as <code>flatMap</code> in Scala, for instance; in Haskell, its particular implementation for lists is known as <code>concatMap</code>. If you have a list <code>l</code>, then <code>l &gt;&gt;= f</code> works as follows: for each element of <code>l</code>, <code>f</code> is applied to this element and returns a list; and all those resultant lists are concatenated to produce result.</p>\n\n<p>Consider a code in Java:</p>\n\n<pre><code>try {\n    function1();\n    function2();\n}\ncatch(Exception e) {\n}\n</code></pre>\n\n<p>What happens when <code>function2</code> is called? See, after the call to <code>function1</code> the program is probably in a valid state, so <code>function2()</code> is an operator that transforms this current state into some different next one. But the call to <code>function1()</code> could result in an exception thrown, so the control would immediately transfer to the <code>catch</code>-block\u2014this can be regarded as null state, so there's nothing to apply <code>function2</code> to. In other words, we have the following possible control paths:</p>\n\n<pre><code>[S0]  --- function1() --&gt;  [S1]  --- function2() --&gt;  [S2]\n[S0]  --- function1() --&gt;  []    --&gt; catch\n</code></pre>\n\n<p>(For simplicity, exceptions thrown from <code>function2</code> are not considered in this diagram.)</p>\n\n<p>So, either <code>[S1]</code> is a (non-empty) valid machine state, and <code>function2</code> transforms it further to a (non-empty) valid <code>[S2]</code>, or it is empty, and thus <code>function2()</code> is a no-op and never run. This can be summarized in pseudo-code as</p>\n\n<pre><code>S2 &lt;- [S0] &gt;&gt;= function1 &gt;&gt;= function2\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "is_accepted": false, "score": 5, "last_activity_date": 1528912611, "last_edit_date": 1528912611, "creation_date": 1528840852, "answer_id": 50826439, "question_id": 50825923, "link": "https://stackoverflow.com/questions/50825923/understanding-this-assignment/50826439#50826439", "title": "Understanding this assignment?", "body": "<p>Your question is about syntax, so I'll just talk about how to parse that expression. Haskell's syntax is pretty simple. Informally:</p>\n\n<ul>\n<li>identifiers separated by spaces are function application (the first identifier applied to the rest)</li>\n<li>except identifiers that use non-alphanumeric chatracters (e.g. <code>&gt;&gt;=</code>, or <code>.</code>) are infix (i.e. their first argument is to the left of the identifier)</li>\n<li>the first type of function application above (non-infix) binds more tightly than the second</li>\n<li>operators can associate either to the left or right, and have different precedence (defined with an <code>infix...</code> declaration)</li>\n</ul>\n\n<p>So only knowing this, if I see:</p>\n\n<pre><code>mapM unpackNum params &gt;&gt;= return . Number . foldl1 op\n</code></pre>\n\n<p>To begin with I know that it must be parse like</p>\n\n<pre><code>(mapM unpackNum params) &gt;&gt;= return . Number . (foldl1 op)\n</code></pre>\n\n<p>To go further we need to inspect the fixity/precedence of the two operators we see in this expression:</p>\n\n<pre><code>Prelude&gt; :info (.)\n(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c   -- Defined in \u2018GHC.Base\u2019\ninfixr 9 .\nPrelude&gt; :info (&gt;&gt;=)\nclass Applicative m =&gt; Monad (m :: * -&gt; *) where\n  (&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b\n  ...\n    -- Defined in \u2018GHC.Base\u2019\ninfixl 1 &gt;&gt;=\n</code></pre>\n\n<p><code>(.)</code> has a higher precedence (<code>9</code> vs <code>1</code> for <code>&gt;&gt;=</code>), so its arguments will bind more tightly (i.e. we parenthesize them first). But how do we know which of these is correct?</p>\n\n<pre><code>(mapM unpackNum params) &gt;&gt;= ((return . Number) . (foldl1 op))\n(mapM unpackNum params) &gt;&gt;= (return . (Number . (foldl1 op)))\n</code></pre>\n\n<p>...? Because <code>(.)</code> was declared <code>infixr</code> it associates to the right, meaning the second parse above is correct.</p>\n\n<p>As Will Ness points out in the comments, <code>(.)</code> is associative (like e.g. addition) so both of these happen to be semantically equivalent.</p>\n\n<p>With a little experience with a library (or the <code>Prelude</code> in this case) you learn to parse expressions with operators correctly without thinking too much.</p>\n\n<p>If after doing this exercise you want to understand <em>what</em> a function does or how it works, then you can click through to the source of the functions you're interested in and replace occurrences of left-hand sides with right-hand sides (i.e. inline the bodies of the functions and terms). Obviously you can do this in your head or in an editor.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 8, "last_activity_date": 1528903518, "last_edit_date": 1528903518, "creation_date": 1528842891, "answer_id": 50826756, "question_id": 50825923, "link": "https://stackoverflow.com/questions/50825923/understanding-this-assignment/50826756#50826756", "title": "Understanding this assignment?", "body": "<p>Essentially,</p>\n\n<pre><code>mapM unpackNum params &gt;&gt;= return . Number . foldl1 op\n</code></pre>\n\n<p>is made of two parts.</p>\n\n<p><code>mapM unpackNum params</code> means: take the list of parameters <code>params</code>. On each item, apply <code>unpackNum</code>: this will produce an <code>Integer</code> wrapped inside the <code>ThrowsError</code> monad. So, it's not exactly a plain <code>Integer</code>, since it has a chance to error out. Anyway, using <code>unpackNum</code> on each item either successfully produces all <code>Integers</code>, or throws some error. In the first case, we produce a new list of type <code>[Integer]</code>, in the second one we (unsurprisingly) throw the error. So, the resulting type for this part is <code>ThrowsError [Integer]</code>.</p>\n\n<p>The second part is <code>... &gt;&gt;= return . Number . foldl1 op</code>. Here <code>&gt;&gt;=</code> means: if the first part threw some error, the whole expression throws that error as well. If the part succeeded in producing <code>[Integer]</code> then proceed with <code>foldl1 op</code>, wrap the result as a <code>Number</code>, and finally use <code>return</code> to inject this value as a successful computation.</p>\n\n<p>Overall there are monadic computations, but you should not think about those too much. The monadic stuff here is only propagating the errors around, or store plain values if the computation is successful. With a bit of experience, one can concentrate on the successful values only, and let <code>mapM,&gt;&gt;=,return</code> handle the error cases.</p>\n\n<p>By the way, note that while the book uses code like <code>action &gt;&gt;= return . f</code>, this is arguably a bad style. One can use, to the same effect, <code>fmap f action</code> or <code>f &lt;$&gt; action</code>, which is a more direct way to express the same computation. E.g.</p>\n\n<pre><code>Number . foldl1 op &lt;$&gt; mapM unpackNum params\n</code></pre>\n\n<p>which is very close to a non-monadic code which ignores the error cases</p>\n\n<pre><code>-- this would work if there was no monad around, and errors did not have to be handled\nNumber . foldl1 op $ map unpackNum params\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1528901480, "post_id": 50827410, "comment_id": 88684188, "body": "I&#39;m pretty sure the last line of your desugaring should be &quot;return $ Number $ foldl1 op x&quot;"}, {"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "reply_to_user": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1528908758, "post_id": 50827410, "comment_id": 88688425, "body": "@PaulJohnson Data constructors, such as <code>Number</code> are just functions. Don&#39;t see why this would be invalid. <code>return . Just</code> works"}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1528909101, "post_id": 50827410, "comment_id": 88688603, "body": "Ahh, yes. &quot;(return . Number) $ stuff&quot; is equivalent to &quot;return $ Number $ stuff&quot;, and (.) has higher precedence. I see now."}], "tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": false, "score": 4, "last_activity_date": 1528886564, "last_edit_date": 1528886564, "creation_date": 1528848035, "answer_id": 50827410, "question_id": 50825923, "link": "https://stackoverflow.com/questions/50825923/understanding-this-assignment/50827410#50827410", "title": "Understanding this assignment?", "body": "<p>You could \"sugar this up\" with a more beginner-friendly syntax, with the do notation. Your function, <code>numericBinop op params = mapM unpackNum params &gt;&gt;= return . Number . foldl1 op</code> would become:</p>\n\n<pre><code>numericBinop op params = do\n    x &lt;- mapM unpackNum params -- \"&lt;-\" translates to \"&gt;&gt;=\", the bind operator\n    return . Number $ foldl1 op x\n</code></pre>\n\n<p>Well now the most mysterious is the <code>mapM</code> function, that is <code>sequence . fmap</code>, and it simply takes a function, <em>fmaps</em> it over the container, and <em>flips the type</em>, in this case (I presume) from <code>[Number Integer]</code> to <code>ThrowsError [Integer]</code>, while preserving any errors (side effects) that may arise during the flipping, or in other words, if the 'flipping' caused any error, it would be represented in the result. </p>\n\n<p>Not the simplest example, and you probably would be better off seeing how <code>mapM (fmap (+1)) [Just 2, Just 3]</code> differs from <code>mapM (fmap (+1)) [Just 2, Nothing]</code>. For more insights look into <code>Traversable</code> typeclass.</p>\n\n<p>After that, you <em>bind</em> the <code>[Integer]</code> out of the <code>ThrowsError</code> monad and feed it to the function that takes care of doing the computation on the list, resulting in a single <code>Integer</code>, which in turn you need to re-embed into the <code>ThrowsError</code> monad with the <code>return</code> function after you wrap it into a <code>Number</code>. </p>\n\n<p>If you still have trouble understanding monads, I suggest you take a look at the still relevant <a href=\"http://learnyouahaskell.com/a-fistful-of-monads#getting-our-feet-wet-with-maybe\" rel=\"nofollow noreferrer\">LYAH chapter</a> that will gently introduce you to monads</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1528894381, "last_edit_date": 1528894381, "creation_date": 1528889306, "answer_id": 50836092, "question_id": 50825923, "link": "https://stackoverflow.com/questions/50825923/understanding-this-assignment/50836092#50836092", "title": "Understanding this assignment?", "body": "<p>First, syntax. Whitespace is <em>application</em>, semantically:</p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f x = f $ x  -- \"call\" f with an argument x\n</code></pre>\n\n<p>so your expression is actually</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>numericBinop op params = ((mapM unpackNum) params) &gt;&gt;= return . Number . (foldl1 op)\n</code></pre>\n\n<p>Next, the operators are built from non-alphanumerical characters, without any whitespace. Here, there's <code>.</code> and <code>&gt;&gt;=</code>. Running <code>:i (.)</code> and <code>:i (&gt;&gt;=)</code> at GHCi reveals their <em>fixity</em> specs are <code>infixl 9 .</code> and <code>infixr 1 &gt;&gt;=</code>. <code>9</code> is above <code>1</code> so <code>.</code> is stronger than <code>&gt;&gt;=</code>; thus</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>                       = ((mapM unpackNum) params) &gt;&gt;= (return . Number . (foldl1 op))\n</code></pre>\n\n<p><code>infixl 9 .</code> means <code>.</code> associates to the right, thus, finally, it is</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>                       = ((mapM unpackNum) params) &gt;&gt;= (return . (Number . (foldl1 op)))\n</code></pre>\n\n<p>The <code>(.)</code> is defined as <code>(f . g) x = f (g x)</code>, thus <code>(f . (g . h)) x = f ((g . h) x) = f (g (h x)) = (f . g) (h x) = ((f . g) . h) x</code>; by eta-reduction we have</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(f . (g . h)) = ((f . g) . h) \n</code></pre>\n\n<p>thus <code>(.)</code> is associative, and so parenthesization is optional. We'll drop  the explicit parens with the \"whitespace\" application from now on as well. Thus we have</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>numericBinop op params = (mapM unpackNum params)  &gt;&gt;= \n          (\\ x -&gt; return (Number (foldl1 op x)))   -- '\\' is for '/\\'ambda\n</code></pre>\n\n<p>Monadic sequences are easier written with <code>do</code>, and the above is equivalent to</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>      = do \n          {  x &lt;- mapM unpackNum params        -- { ; } are optional, IF all 'do'\n          ;  return (Number (foldl1 op x)))    --   lines are indented at the same level\n          }\n</code></pre>\n\n<p>Next, <code>mapM</code> can be defined as</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>    mapM f [] = return []\n    mapM f (x:xs) = do { x  &lt;- f x ;\n                         xs &lt;- mapM f xs ;\n                         return (x : xs) }\n</code></pre>\n\n<p>and the Monad Laws demand that</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>      do { r &lt;- do { x ;       ===      do { x ;\n                     y } ;                   r &lt;- y ;  \n           foo r                             foo r \n         }                                 }\n</code></pre>\n\n<p>(you can find an overview of <code>do</code> notation e.g. in <a href=\"https://stackoverflow.com/a/50815136/849891\">this recent answer</a> of mine); thus,</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>numericBinop op [a, b, ..., z] =\n   do {\n         a &lt;- unpackNum a ;\n         b &lt;- unpackNum b ;\n         ...........\n         z &lt;- unpackNum z ;\n         return (Number (foldl1 op [a, b, ..., z]))\n      }\n</code></pre>\n\n<p>(you may have noticed my use of <code>x &lt;- x</code> bindings -- we <em>can</em> use the same variable name on both sides of <code>&lt;-</code>, because monadic bindings are <em>not</em> recursive -- thus introducing shadowing.)</p>\n\n<p>This is now clearer, hopefully.</p>\n\n<p>But, I said \"<em>first</em>, syntax\". So now, the meaning of it. By same Monad Laws,</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>numericBinop op [a, b, ..., y, z] =\n   do {\n         xs &lt;- do { a &lt;- unpackNum a ;\n                    b &lt;- unpackNum b ;\n                    ...........\n                    y &lt;- unpackNum y ;\n                    return [a, b, ..., y] } ;\n         z &lt;- unpackNum z ;\n         return (Number (op (foldl1 op xs) z))\n      }\n</code></pre>\n\n<p>thus, we need only understand the sequencing of <em>two</em> \"computations\", <code>c</code> and <code>d</code>,</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>do { a &lt;- c ; b &lt;- d ; return (foo a b) }\n=\n          c &gt;&gt;= (\\ a -&gt;\n                   d &gt;&gt;= (\\ b -&gt;     \n                       return (foo a b) ))\n</code></pre>\n\n<p>for a particular monad involved, which is determined by the <em>bind</em> <code>(&gt;&gt;=</code>) operator's implementation for a given monad. </p>\n\n<p>Monads are EDSLs for generalized function composition. The sequencing of computations involves not only the explicit expressions appearing in the <code>do</code> sequence, but also the implicit effects peculiar to the particular monad in question, performed in principled and consistent manner behind the scenes. Which is the whole point to having monads in the first place (well, one of the main points, at least).</p>\n\n<p>Here the monad involved appears to concern itself with the possibility of failure, and early bail-outs in the event that failure indeed happens.  </p>\n\n<p>So, with the <code>do</code> code we write the <em>essence</em> of what we intend to happen, and the possibility of intermittent failure is automatically taken care of, for us, behind the scenes. </p>\n\n<p>In other words, if one of <code>unpackNum</code> computations <em>fails</em>, so will the whole of the combined <em>computation</em> fail, without attempting any of the subsequent <code>unpackNum</code> sub-computations. But if all of them succeed, so will the combined computation.</p>\n"}], "owner": {"reputation": 68611, "user_id": 53897, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG", "display_name": "Thorbj&#248;rn Ravn Andersen", "link": "https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "answer_count": 5, "score": 8, "last_activity_date": 1528912611, "creation_date": 1528838091, "last_edit_date": 1528882588, "question_id": 50825923, "link": "https://stackoverflow.com/questions/50825923/understanding-this-assignment", "title": "Understanding this assignment?", "body": "<p>In order to refresh my 20 year old experience with Haskell I am walking through <a href=\"https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/Adding_Variables_and_Assignment\" rel=\"noreferrer\">https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/Adding_Variables_and_Assignment</a> and at one point the following line is introduced to apply <code>op</code> to all the params.  This is to implement e.g. <code>(+ 1 2 3 4)</code></p>\n\n<pre><code>numericBinop op params = mapM unpackNum params &gt;&gt;= return . Number . foldl1 op\n</code></pre>\n\n<p>I do not understand the syntax, and the explanation in the text is a bit vague.</p>\n\n<p>I understand what <code>foldl1</code> does and how to dot functions (<code>unpackNum</code> is a helper function), but using Monads and the <code>&gt;&gt;=</code> operator leaves me a bit confused.</p>\n\n<p>How is this to be read?</p>\n"}, {"tags": ["haskell", "currying", "type-signature"], "answers": [{"tags": [], "owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "is_accepted": false, "score": 5, "last_activity_date": 1528836097, "last_edit_date": 1528836097, "creation_date": 1528834039, "answer_id": 50825092, "question_id": 50825036, "link": "https://stackoverflow.com/questions/50825036/still-confuse-how-type-signature-with-multiple-arrows-work/50825092#50825092", "title": "Still confuse how type signature with multiple arrows work", "body": "<p>To think of this from a more common view where functions can have multiple parameters, the last type in the signature is the return type. Everything before it is the types of the parameters.</p>\n\n<p>In this example, your parameter types are <code>(a -&gt; b -&gt; b)</code>, <code>b</code>, and <code>[a]</code>: a function taking an <code>a</code> and a <code>b</code> and returning a <code>b</code>, a <code>b</code>, and a list of <code>a</code>s.</p>\n\n<p>The return type is the last type in the signature <code>[b]</code>: a list of <code>b</code>s.</p>\n"}, {"tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": false, "score": 4, "last_activity_date": 1528834127, "creation_date": 1528834127, "answer_id": 50825107, "question_id": 50825036, "link": "https://stackoverflow.com/questions/50825036/still-confuse-how-type-signature-with-multiple-arrows-work/50825107#50825107", "title": "Still confuse how type signature with multiple arrows work", "body": "<p>Read type signatures as a transformation <code>... -&gt; to</code>, where the \"rest in the middle\" are the arguments. </p>\n\n<p>eg. <code>myscanr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; [b]</code> \"takes\" a function <code>(a -&gt; b -&gt; b)</code>, a <code>b</code>, a list of a <code>[a]</code> and returns you a list of b <code>[b]</code></p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 11, "last_activity_date": 1528871403, "last_edit_date": 1528871403, "creation_date": 1528834340, "answer_id": 50825166, "question_id": 50825036, "link": "https://stackoverflow.com/questions/50825036/still-confuse-how-type-signature-with-multiple-arrows-work/50825166#50825166", "title": "Still confuse how type signature with multiple arrows work", "body": "<p>Well conceptually, a function in Haskell has always <em>exactly one</em> parameter. Indeed, in fact the signature:</p>\n\n<pre><code>myscanr :: (a -&gt;  b -&gt; b ) -&gt;  b -&gt;  [a] -&gt; [b]\n</code></pre>\n\n<p>is short for:</p>\n\n<pre><code>myscanr :: (a -&gt; (b -&gt; b)) -&gt; (b -&gt; ([a] -&gt; [b]))\n</code></pre>\n\n<p>So there is always <em>one</em> parameter, but the result can be a <em>function</em> as well, and we can then provide an argument for that function to obtain a value, or another result, so this is some sort of \"chaining\".</p>\n\n<p>You could compare it to a programming language like Python where instead of having a function that accepts several parameters, it each time accepts a single parameter. For example:</p>\n\n<pre><code># python\n\ndef add(x):\n    def addx(y):\n        return x + y\n    return addx</code></pre>\n\n<p>So here we have a function <code>add</code>. We can call it with a single parameter <code>x</code>. If we do that, with for example <code>x=4</code>, then it will return another function (where <code>x</code> is scoped). It is only if we then call that function with a parameter (for example <code>y=3</code>), that we get the outcome, like:</p>\n\n<pre><code>&gt;&gt;&gt; add(4)\n&lt;function add.&lt;locals&gt;.addx at 0x7f1c519e7b70&gt;\n&gt;&gt;&gt; add(4)(3)\n7\n</code></pre>\n\n<p>Well in Haskell, this model is the standard: every function accepts only a single parameter. But since that is the case, the syntax can be improved. Instead of having to write <code>((myscanr((+)))(0))([1, 4, 2, 5])</code>, we can write <code>myscanr (+) 0 [1, 4, 2, 5]</code>, and Haskell will automatically interpret this as a function call with <code>myscanr</code> as function and <code>(+)</code> as parameter, another function call with as function the result of the previous call and <code>0</code> as parameter, and then another function call with as function the outcome of the previous call with <code>[1, 4, 2, 5]</code> as parameter.</p>\n\n<p>Since syntactically it looks a bit like we have made a call with <em>three</em> parameters, one could say that the <code>(a -&gt; b -&gt; b)</code>, <code>b</code> and <code>[a]</code> are the types of the \"<em>three parameters</em>\". But strictly speaking, that is wrong.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 50825166, "answer_count": 3, "score": 3, "last_activity_date": 1528871403, "creation_date": 1528833802, "question_id": 50825036, "link": "https://stackoverflow.com/questions/50825036/still-confuse-how-type-signature-with-multiple-arrows-work", "title": "Still confuse how type signature with multiple arrows work", "body": "<p>I checked a <a href=\"https://stackoverflow.com/questions/20459981/why-do-haskell-type-signature-declarations-have-multiple-arrows\">post</a> before and seems understand. I know </p>\n\n<pre><code>f :: a -&gt; b -&gt; c \n</code></pre>\n\n<p>is the curry form of</p>\n\n<pre><code>g :: (a, b) -&gt; c\n</code></pre>\n\n<p>But as the type signature gets longer than 2 arrows, I feel confused again. </p>\n\n<pre><code>myscanr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; [b]\nmyscanr op z [] = [z]\nmyscanr op z (x:xs) = op x (head qs) : qs\n  where\n    qs = myscanr op z xs\n</code></pre>\n\n<p>Are <code>(a -&gt; b -&gt; b)</code> and <code>[b]</code> the input and output? What are the rest in the middle then?</p>\n"}, {"tags": ["haskell", "functional-programming"], "answers": [{"comments": [{"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528822344, "post_id": 50821949, "comment_id": 88649154, "body": "what is the reason for the backstricks ? What are their function ?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 1, "creation_date": 1528822425, "post_id": 50821949, "comment_id": 88649192, "body": "@onurcanbektas: to write it as an <i>infix</i> operator, such that <code>[&quot;A&quot;, &quot;E&quot;]</code> is seen as the <i>second</i> parameter, and we thens till need to provide the first, but we can use <code>flip</code> as well."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1528824471, "post_id": 50821949, "comment_id": 88650281, "body": "<code>(||) &lt;$&gt; (&#47;= &quot;A&quot;) &lt;*&gt; (&#47;= &quot;E&quot;)</code> but actually as written, the simplest way is <code>const True</code>, so the question is probably wrong."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1528827819, "post_id": 50821949, "comment_id": 88652049, "body": "@dfeuer: well I think using a <code>Functor</code> will probably only confuse most readers. But you are correct that there was a semantical error (somehow I&#39;ve overlooked that). This should now be fixed (and documented)."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1528830410, "post_id": 50821949, "comment_id": 88653348, "body": "The <code>Functor</code> approach doesn&#39;t really require fully understanding <i>why</i> functions are functors, though. Knowing that <code>(&amp;&amp;) a b</code> is another way to write <code>a &amp;&amp; b</code> is a good start, and pretending that <code>(&amp;&amp;) &lt;$&gt; f &lt;*&gt; g</code> is just syntactic sugar for <code>\\x -&gt; (&amp;&amp;) (f x) (g x)</code> will get you pretty far."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1528829205, "last_edit_date": 1528829205, "creation_date": 1528821180, "answer_id": 50821949, "question_id": 50821849, "link": "https://stackoverflow.com/questions/50821849/can-the-condition-given-to-takewhile-function-contain-or-operator/50821949#50821949", "title": "Can the condition given to takeWhile function contain or operator?", "body": "<p>That's not possible that way. First of all, you made a syntax error: by writing <code>(/=\"E\"<b>||/</b>=\"A\")</code> Haskell sees the <code>||/=</code> part as a <em>single</em> operator.</p>\n\n<p>We can fix the syntax error, and write:</p>\n\n<pre><code>takeWhile (<b>(/=\"E\") || (/=\"A\")</b>) ls</code></pre>\n\n<p>But this is still invalid, since <code>||</code> expects <em>two</em> <code>Bool</code>eans, and here the operands are <code>String -&gt; Bool</code>s.</p>\n\n<p>Nevertheless we can solve this, for example with a <em>lambda</em> expression:</p>\n\n<pre><code>takeWhile (<b>\\x -&gt;</b> (<b>x</b> /=\"E\") || (<b>x</b> /=\"A\")) ls</code></pre>\n\n<p>There is also a <em>semantical</em> error. A test like <code>x /= c1 || x /= c2</code> where <code>c1 /= c2</code> is <em>always</em> <code>True</code>. Indeed. The first test fails in case <code>x == c1</code>, but if <code>c1 /= c2</code>, then we know that <code>x /= c2</code>, hence it would always result in <code>True</code>. So you probably want to use:</p>\n\n<pre><code>takeWhile (\\x -> ( x/=\"E\") <b>&&</b> (/=\"A\")) ls</code></pre>\n\n<p>we can also use the <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Prelude.html#v:notElem\" rel=\"nofollow noreferrer\"><strong><code>notElem :: Eq a =&gt; a -&gt; [a] -&gt; Bool</code></strong></a> function, which makes the code more self explaining:</p>\n\n<pre><code>takeWhile (<b>`notElem` [\"A\", \"E\"]</b>) ls</code></pre>\n\n<p>or with <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:flip\" rel=\"nofollow noreferrer\"><strong><code>flip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c</code></strong></a>:</p>\n\n<pre><code>takeWhile (<b>flip notElem</b> [\"A\", \"E\"]) ls</code></pre>\n"}], "owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 324, "favorite_count": 0, "accepted_answer_id": 50821949, "answer_count": 1, "score": 1, "last_activity_date": 1528829205, "creation_date": 1528820741, "last_edit_date": 1528822300, "question_id": 50821849, "link": "https://stackoverflow.com/questions/50821849/can-the-condition-given-to-takewhile-function-contain-or-operator", "title": "Can the condition given to takeWhile function contain or operator?", "body": "<p>I'm trying to compute the value</p>\n\n<pre><code>takeWhile (/=\"E\"||/=\"A\") ls\n</code></pre>\n\n<p>where </p>\n\n<pre><code>ls = [\"EVENT\",\"6010\",\"A\",\"CHECK_PROMOTION_ELIGIBLE\",\"-1\",\"E\",\"RUN_EVENT\",\"6020\"]\n</code></pre>\n\n<p>However, ghci complines as</p>\n\n<blockquote>\n<pre><code>Variable not in scope: (||/=) :: [Char] -&gt; [Char] -&gt; [Char]\n</code></pre>\n</blockquote>\n\n<p>Is there a syntax problem, or just can't we use <code>||</code> operator while specifying to condition for <code>takeWhile</code> function ?</p>\n\n<p>I have tried to remove the <em>||/=\"A\"</em> part, then there is no error.</p>\n"}, {"tags": ["parsing", "haskell", "packet", "pcap"], "answers": [{"comments": [{"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "edited": false, "score": 0, "creation_date": 1528981248, "post_id": 50844136, "comment_id": 88718874, "body": "Thanks, this looks good but I&#39;m unable to compile. What version of ghc-prim are you using? It will be difficult for me to go past 0.5.0.0?"}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "edited": false, "score": 0, "creation_date": 1528983743, "post_id": 50844136, "comment_id": 88720484, "body": "Sorry, I added a version for ghc-8.0.x (prim-0.5.0.0) as well. The difference is the type of <code>runRW#</code>."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 1, "last_activity_date": 1528983745, "last_edit_date": 1528983745, "creation_date": 1528915284, "answer_id": 50844136, "question_id": 50821578, "link": "https://stackoverflow.com/questions/50821578/efficiently-convert-foreign-ptr-word8-or-bytestring-to-uarray-int-word8/50844136#50844136", "title": "Efficiently convert Foreign.Ptr Word8 (or ByteString) to UArray Int Word8", "body": "<p><code>ByteString</code> and <code>Ptr Word8</code> point to external heap, while <code>UArray</code> is on GHC heap, so any conversion function must copy over the data.</p>\n\n<p>I have not found any direct conversion function in libraries, but fortunately there's a GHC primitive which does exactly what we want, called <a href=\"https://hackage.haskell.org/package/ghc-prim-0.5.2.0/docs/GHC-Prim.html#v:copyAddrToByteArray-35-\" rel=\"nofollow noreferrer\"><code>copyAddrToByteArray#</code></a>. This lets us convert with the bare minimum overhead:</p>\n\n<pre><code>{-# language MagicHash, UnboxedTuples #-}\n\nimport qualified Data.ByteString as B\nimport qualified Data.ByteString.Internal as B\nimport qualified Data.Array.Base as A\n\nimport GHC.Types\nimport GHC.Prim\nimport GHC.Magic (runRW#)\nimport GHC.ForeignPtr\nimport Data.Word\n\n-- when using GHC 8.2.x or later:\nbyteStringToUArray :: B.ByteString -&gt; A.UArray Int Word8\nbyteStringToUArray (B.PS (ForeignPtr addr _) (I# start) (I# len)) =\n  runRW# $ \\s -&gt; case newByteArray# len s of\n    (# s, marr #) -&gt; case copyAddrToByteArray# (plusAddr# addr start) marr 0# len s of\n      s -&gt; case unsafeFreezeByteArray# marr s of\n        (# _, arr #) -&gt; A.UArray 0 (I# (len -# 1#)) (I# len) arr\n{-# inline byteStringToUArray #-}\n\n-- when using GHC 8.0.x:\nbyteStringToUArray :: B.ByteString -&gt; A.UArray Int Word8\nbyteStringToUArray (B.PS (ForeignPtr addr _) (I# start) (I# len)) =\n  case (runRW# $ \\s -&gt; case newByteArray# len s of\n    (# s, marr #) -&gt; case copyAddrToByteArray# (plusAddr# addr start) marr 0# len s of\n      s -&gt; case unsafeFreezeByteArray# marr s of\n        (# s, arr #) -&gt; (# s, A.UArray 0 (I# (len -# 1#)) (I# len) arr #)) of\n    (# _, res #) -&gt; res\n{-# inline byteStringToUArray #-}\n</code></pre>\n\n<p>But in general, you're right that <code>array</code> is outdated and rarely used now.</p>\n"}], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 50844136, "answer_count": 1, "score": 5, "last_activity_date": 1528983745, "creation_date": 1528819760, "question_id": 50821578, "link": "https://stackoverflow.com/questions/50821578/efficiently-convert-foreign-ptr-word8-or-bytestring-to-uarray-int-word8", "title": "Efficiently convert Foreign.Ptr Word8 (or ByteString) to UArray Int Word8", "body": "<p>I'm doing some Network capture with <code>Network.Pcap</code> (<a href=\"http://hackage.haskell.org/package/pcap-0.4.5.2/docs/Network-Pcap.html\" rel=\"noreferrer\">pcap</a>) and plan to do some inspection using <code>Net.PacketParsing</code> (<a href=\"http://hackage.haskell.org/package/network-house-0.1.0.2/docs/Net-PacketParsing.html\" rel=\"noreferrer\">network-house</a>). To do so, it looks like i have to put my packet parsing in either </p>\n\n<pre><code>Pcap.Callback :: PktHdr -&gt; Ptr Word8 -&gt; IO ()\n</code></pre>\n\n<p>or </p>\n\n<pre><code>Pcap.CallbackBS :: PktHdr -&gt; ByteString -&gt; IO ().\n</code></pre>\n\n<p>And work on the packet as either a 'Ptr Word8' or 'ByteString'. On the packet parsing side, I have:</p>\n\n<pre><code>Net.Packet.toInPack :: UArray Int Word8 -&gt; InPacket\n</code></pre>\n\n<p>to get to the <code>InPacket</code> type that's needed for the parsing. So, what's left for me is to convert the 'Ptr' or 'ByteString' to 'UArray'--either purely or in IO. I suppose I can unpack the <code>ByteString</code> to <code>[Word8]</code>, and from there to the <code>UArray</code>, but there seems like there must be a better way.</p>\n\n<p>I'm also concerned about my choice of libraries. I've used network-house in the past and found it quite nice, but it is getting old and uses UArray, which itself seems a little archaic. So suggestions for a better starting point are welcome. </p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1528817138, "post_id": 50820687, "comment_id": 88646734, "body": "What should happen if - like here - one constructor takes one <code>Integer</code> whereas the other takes <i>two</i> <code>Integer</code>s. That would mean the type of <code>stringToTerm</code> depends on the value (at runtime). Since Haskell is <i>statically typed</i>. The types should be known at <i>compile time</i>."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528817355, "post_id": 50820687, "comment_id": 88646844, "body": "@WillemVanOnsem <i>stringToTerm</i> only takes the parameter as the name of the event, in particular &quot;RUN_EVENT&quot;.  I will take of the parameters of the event separately. I mean I just want <i>stringToTerm</i> to convert &quot;EVENT_NAME&quot; to an actualy term <i>EVENT_NAME</i> in the code."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528817403, "post_id": 50820687, "comment_id": 88646879, "body": "yes, but what would be the <i>output</i> type? <code>Integer -&gt; EventType</code>, well what if it is <code>&quot;GIVE_ITEM&quot;</code>? <code>Integer -&gt; Integer -&gt; EventType</code>, then what will you do with the second parameter in case of a <code>&quot;RUN_EVENT&quot;</code>?"}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528817403, "post_id": 50820687, "comment_id": 88646880, "body": "@WillemVanOnsem To be clear, the type signature of <b>stringToTerm</b> is :: String -&gt; EventType"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528817471, "post_id": 50820687, "comment_id": 88646923, "body": "If it is anything, it is <i>not</i> <code>EventType</code>, since the construct needs <i>parameters</i> to construct a real <code>EventType</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1528817571, "post_id": 50820687, "comment_id": 88646974, "body": "In my opinion, the only reasonable type would be <code>[String] -&gt; EventType</code>, and thus let the function handle an entire &quot;row&quot; of parameters that need to be parsed."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528817603, "post_id": 50820687, "comment_id": 88646992, "body": "@WillemVanOnsem Those parameters are already set in the data, so I&#39;m just going to pass them to as the parameters of <i>EVENT_NAME</i>. As  I said, the stringToTerm will just take String - event name - and give a term of type <i>EventType</i>."}, {"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1528817612, "post_id": 50820687, "comment_id": 88646997, "body": "<code>RUN_EVENT</code> does not have type <code>EventType</code>, it has type <code>Integer -&gt; EventType</code>. Similarly, <code>GIVE_ITEM</code> has type <code>Integer -&gt; Integer -&gt; EventType</code>. These have different types so you can&#39;t return them from the same function."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1528817709, "post_id": 50820687, "comment_id": 88647053, "body": "@Lee Well... you are right. Any  suggestion then ?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528817721, "post_id": 50820687, "comment_id": 88647060, "body": "@onurcanbektas: no those can not be set, since the <code>stringToTerm</code> should - depending on the <i>value</i>, return an <code>Integer -&gt; EventType</code>, or an <code>Integer -&gt; Integer -&gt; EventType</code>."}, {"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 3, "creation_date": 1528817840, "post_id": 50820687, "comment_id": 88647134, "body": "It sounds to me like you want to write a parser e.g. <code>[String] -&gt; Either ParseError EventType</code>."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1528817927, "post_id": 50820687, "comment_id": 88647182, "body": "@Lee Yeah, basically, but no idea how to go from &quot;RUN_EVENT&quot; to <i>RUN_EVENT</i> :)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528818076, "post_id": 50820687, "comment_id": 88647288, "body": "@onurcanbektas: by writing a function like <code>f &quot;RUN_EVENT&quot; = RUN_EVENT; f &quot;SOME_CONSTRUCTOR&quot; = SOME_CONSTRUCTOR</code>. But those have to have the <i>same</i> type, or you have to pass some parameters, to handle the initialization (at least partially) such that the output type is the same."}], "answers": [{"tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": false, "score": 0, "last_activity_date": 1528818424, "creation_date": 1528818424, "answer_id": 50821140, "question_id": 50820687, "link": "https://stackoverflow.com/questions/50820687/how-to-convert-string-to-an-actual-term-in-haskell/50821140#50821140", "title": "How to convert string to an actual term in Haskell?", "body": "<p>Hacky solution, with <code>-XViewPatterns</code> for the added clarity </p>\n\n<pre><code>stringToTerm [] = []\nstringToTerm (\"EVENT\":(read -&gt; num):xs) = EVENT num : stringToTerm xs\nstringToTerm (\"RUN_EVENT\":(read -&gt; num1):(read -&gt; num2):xs) = RUN_EVENT num1 num2 : stringToTerm xs\n</code></pre>\n\n<p>This allows you not to write a real parser, thus saving you the trouble, but will blow up if there's incorrect data</p>\n"}, {"tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": false, "score": 0, "last_activity_date": 1528818668, "creation_date": 1528818668, "answer_id": 50821228, "question_id": 50820687, "link": "https://stackoverflow.com/questions/50820687/how-to-convert-string-to-an-actual-term-in-haskell/50821228#50821228", "title": "How to convert string to an actual term in Haskell?", "body": "<p>A direct implementation of your question might be:</p>\n\n<pre><code>parseEventType :: [String] -&gt; EventType\nparseEventType [\"EVENT\", _, _, \"RUN_EVENT\", i] = RUN_EVENT (read i)\nparseEventType [\"EVENT\", i, _, \"GIVE_ITEM\", j] = GIVE_ITEM (read i) (read j)\nparseEventType x = error (\"parseEventType: could not parse \" ++ show x)\n</code></pre>\n\n<p>The GIVE_ITEM case might not be correct but it should give you an idea.</p>\n\n<p>However, this has some issues, mainly around error handling: What do you do if arguments are not integers or if the shape of the list doesn't match up with one of your types? It would be easiest to use <code>Maybe</code>:</p>\n\n<pre><code>parseEventType :: [String] -&gt; Maybe EventType\nparseEventType [\"EVENT\", _, _, \"RUN_EVENT\", i] = RUN_EVENT &lt;$&gt; readMay i\nparseEventType [\"EVENT\", i, _, \"GIVE_ITEM\", j] = GIVE_ITEM &lt;$&gt; readMay i &lt;*&gt; readMay j\nparseEventType x = Nothing\n</code></pre>\n\n<p>This shows off the applicative style.</p>\n"}, {"comments": [{"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528819200, "post_id": 50821360, "comment_id": 88647956, "body": "How would you use it on a list of Terms with their arguments, as requested by OP?"}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "reply_to_user": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528883641, "post_id": 50821360, "comment_id": 88672273, "body": "If data is retrieve the same format always, the you can define stringToTerm by pattern matching the stringEvent variable. If not, I guess you should define your own parser with parsec library."}, {"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528886411, "post_id": 50821360, "comment_id": 88674039, "body": "Then what&#39;s the point of the Read instance? You have arrived at the same function as I did."}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "reply_to_user": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528894049, "post_id": 50821360, "comment_id": 88679000, "body": "The point is to partially apply the function stringToTerm so stringToTerm &quot;RUN_EVENT&quot; is itself a funciton for parsing the RUN_EVENT constructor . But yes, It is pretty close to your answer."}], "tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 1, "last_activity_date": 1528819034, "creation_date": 1528819034, "answer_id": 50821360, "question_id": 50820687, "link": "https://stackoverflow.com/questions/50820687/how-to-convert-string-to-an-actual-term-in-haskell/50821360#50821360", "title": "How to convert string to an actual term in Haskell?", "body": "<p>Derive your data from Read type class. Then define the function as follows</p>\n\n<pre><code>    data EventType = RUN_EVENT Integer | GIVE_ITEM Integer Integer ... deriving (Show, Read) \n\n    stringToTerm :: String -&gt; Integer -&gt; EventType\n    stringToTerm stringEvent n = read $ stringEvent ++ \" \" ++ show n\n</code></pre>\n\n<p>Keep in mind that the type annotation is important because of the read instance. The function stringToTerm can be partially applied to get what you want</p>\n\n<p>Regards</p>\n"}, {"comments": [{"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 0, "creation_date": 1528894196, "post_id": 50825436, "comment_id": 88679096, "body": "Nice solution actually"}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 3, "last_activity_date": 1528920914, "last_edit_date": 1528920914, "creation_date": 1528835639, "answer_id": 50825436, "question_id": 50820687, "link": "https://stackoverflow.com/questions/50820687/how-to-convert-string-to-an-actual-term-in-haskell/50825436#50825436", "title": "How to convert string to an actual term in Haskell?", "body": "<p>Here is a debatably hacky solution using <code>Read</code></p>\n\n<pre><code>import Text.Read (readMaybe)\n\ndata EventType = RUN_EVENT Integer | GIVE_ITEM Integer Integer ... \n     deriving (Read, Show)\n\nparseChunk :: [String] -&gt; Maybe EventType\nparseChunk = readMaybe . unwords\n</code></pre>\n\n<p>This will work like</p>\n\n<pre><code>parseChunk [\"RUN_EVENT\",\"4\"]     --&gt;  Just (RUN_EVENT 4)\nparseChunk [\"GIVE_ITEM\",\"1\",\"2\"] --&gt;  Just (GIVE_ITEM 1 2)\nparseChunk [\"RUN_EVENT\",\"4\",\"5\"] --&gt;  Nothing  -- too many arguments\n</code></pre>\n\n<p>The reason it is hacky is that it relies on string manipulation to convert your data stream into a Haskell expression (which <code>read</code> parses).  If your parser grows in complexity, the approach may break down, or the hackiness of it might get out of hand. Imagine that one of your constructors takes a list, then you have to start inserting <code>\"[\"</code> and <code>\",\"</code> into the stream before you <code>read</code> it.</p>\n\n<p>If you want more control, the better way is to write a proper parser, maybe using <a href=\"http://hackage.haskell.org/package/parsec-3.1.13.0/docs/Text-Parsec.html\" rel=\"nofollow noreferrer\">Parsec</a> or its ilk.  But you will either have to list all the cases manually or generate the cases using <a href=\"http://hackage.haskell.org/package/syb-0.7/docs/Data-Generics.html\" rel=\"nofollow noreferrer\">generics</a>.  My own aesthetic would allow the <code>read</code> solution to stand for now, but then switch to a formal parser if it looked like it was getting at all messy.</p>\n"}], "owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 463, "favorite_count": 0, "answer_count": 4, "score": 1, "last_activity_date": 1528920914, "creation_date": 1528816973, "question_id": 50820687, "link": "https://stackoverflow.com/questions/50820687/how-to-convert-string-to-an-actual-term-in-haskell", "title": "How to convert string to an actual term in Haskell?", "body": "<p>I have defined the following data type</p>\n\n<pre><code>data EventType = RUN_EVENT Integer | GIVE_ITEM Integer Integer ... deriving (Show) \n</code></pre>\n\n<p>and from some test, I'm retrieving data as below</p>\n\n<blockquote>\n  <p>[\"EVENT\",\"6001\",\"E\",\"RUN_EVENT\",\"6010\"]</p>\n</blockquote>\n\n<p>and when I process the data, if, for example, after \"E\", I get \"RUN_EVENT\", I would like to construct a data of type <em>EventType</em> having the value <em>RUN_EVENT 6010</em>.</p>\n\n<p>To do that, I can create a huge list that basically says that if I face with \"RUN_EVENT\" then construct a value with value <em>RUN_EVENT</em>, but this would not be efficient, so is there any way to convert \"RUN_EVENT\" to a term <em>RUN_EVENT</em> so that I can use it as</p>\n\n<pre><code>exec = (stringToTerm \"RUN_EVENT\") 6010\n</code></pre>\n"}, {"tags": ["haskell", "haskell-beam"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1528864620, "post_id": 50819936, "comment_id": 88662529, "body": "Please include the full errors -- it is not a problem that it is long. In particular, the part of the error posted here is missing information about which bit of the code is causing the error."}], "answers": [{"comments": [{"owner": {"reputation": 507, "user_id": 4966887, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2b2d9b78341809c8b9b01ac9ae3f3c72?s=128&d=identicon&r=PG&f=1", "display_name": "Chirs", "link": "https://stackoverflow.com/users/4966887/chirs"}, "edited": false, "score": 1, "creation_date": 1529051075, "post_id": 50848863, "comment_id": 88744969, "body": "Thank you very much for your answer. This is definitely solving my problem. Interestingly, the generated SQL query is using a subquery exactly in the way I intended, despite it looking more like a join with a temporary table... Cool."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 2, "last_activity_date": 1529118278, "last_edit_date": 1529118278, "creation_date": 1528944005, "answer_id": 50848863, "question_id": 50819936, "link": "https://stackoverflow.com/questions/50819936/subqueries-with-beam/50848863#50848863", "title": "Subqueries with Beam", "body": "<p>This being my first time using Beam, I found it easier to, instead of fixing the code here, start from scratch, using <a href=\"https://tathougies.github.io/beam/user-guide/queries/aggregates/#the-having-clause\" rel=\"nofollow noreferrer\">the examples involving aggregates in the user guide</a> as a reference:</p>\n\n<pre><code>tablePercentile =\n  aggregate_ (\\(student, student') -&gt; (group_ (_studentId student), countAll_))\n    . filter_ (\\(student, student') -&gt; (_score student &lt;=. _score student'))\n    $ (,) &lt;$&gt; all_ (_students schoolDb) &lt;*&gt; all_ (_students schoolDb)\n</code></pre>\n\n<p>This amounts to an inner join of the table with itself, with <code>filter_</code> setting up the join condition and <code>aggregate_</code> handling the grouping and counting. Note that this query only retrieves the student ids, as opposed to the full records. That is due to the usual impossibility of getting more than aggregates and the columns used for grouping from a <code>GROUP BY</code>-using query. One way to deal with that is using a subquery to pass the ids on:</p>\n\n<pre><code>tablePercentile = do\n  (sid, cou) &lt;- aggregate_ (\\(student, student') -&gt; (group_ (_studentId student), countAll_))\n    . filter_ (\\(student, student') -&gt; (_score student &lt;=. _score student'))\n    $ (,) &lt;$&gt; all_ (_students schoolDb) &lt;*&gt; all_ (_students schoolDb)\n  (\\student -&gt; (student, cou))\n    &lt;$&gt; filter_ (\\student -&gt; _studentId student ==. sid) (all_ (_students schoolDb))\n-- N.B.: The last line of the do-block might be written as\n-- (,) &lt;$&gt; filter_ (\\student -&gt; _studentId student ==. sid) (all_ (_students schoolDb)) &lt;*&gt; pure cou\n</code></pre>\n\n<p>This works as intended:</p>\n\n<pre><code>sqlite&gt; SELECT * from Students;\nId|Name|Score\n1|Alice|9\n2|Bob|7\n3|Carol|6\n4|David|8\n5|Esther|10\n6|Francis|6\n</code></pre>\n\n\n\n<pre><code>GHCi&gt; :main\nSELECT \"t1\".\"id\" AS \"res0\", \"t1\".\"name\" AS \"res1\", \"t1\".\"score\" AS \"res2\", \"t0\".\"res1\" AS \"res3\" FROM (SELECT \"t0\".\"id\" AS \"res0\", COUNT(*) AS \"res1\" FROM \"students\" AS \"t0\" INNER JOIN \"students\" AS \"t1\" WHERE (\"t0\".\"score\")&lt;=(\"t1\".\"score\") GROUP BY \"t0\".\"id\") AS \"t0\" INNER JOIN \"students\" AS \"t1\" WHERE (\"t1\".\"id\")=(\"t0\".\"res0\");\n-- With values: []\n(StudentT {_studentId = 1, _studentName = \"Alice\", _score = 9},2)\n(StudentT {_studentId = 2, _studentName = \"Bob\", _score = 7},4)\n(StudentT {_studentId = 3, _studentName = \"Carol\", _score = 6},6)\n(StudentT {_studentId = 4, _studentName = \"David\", _score = 8},3)\n(StudentT {_studentId = 5, _studentName = \"Esther\", _score = 10},1)\n(StudentT {_studentId = 6, _studentName = \"Francis\", _score = 6},6)\n</code></pre>\n\n<p>On a closing note, the error in your code appears, as far as I understand it, to have to do with attempting to compare incomparable things in the <code>(&lt;=.)</code> condition. Your original code (using a monadic bind for <code>percentile</code>) compiles if the <code>filter_</code> is commented out. It may have something to do with the <code>GROUP BY</code> issue I mentioned, though I'm not sure about it.</p>\n"}], "owner": {"reputation": 507, "user_id": 4966887, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2b2d9b78341809c8b9b01ac9ae3f3c72?s=128&d=identicon&r=PG&f=1", "display_name": "Chirs", "link": "https://stackoverflow.com/users/4966887/chirs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 284, "favorite_count": 0, "accepted_answer_id": 50848863, "answer_count": 1, "score": 3, "last_activity_date": 1529118278, "creation_date": 1528814598, "last_edit_date": 1528884675, "question_id": 50819936, "link": "https://stackoverflow.com/questions/50819936/subqueries-with-beam", "title": "Subqueries with Beam", "body": "<p>I'm trying to run a subquery on each row of a table. Here is a minimally working example with one table \"students\".</p>\n\n<pre><code>data StudentT  f\n  = StudentT\n  { _studentId   :: C f Int\n  , _studentName :: C f String\n  , _score       :: C f Int\n  } deriving Generic\n\ntype Student = StudentT Identity\ntype StudentId = PrimaryKey StudentT Identity\n\nderiving instance Show Student\n\ninstance Beamable StudentT\ninstance Beamable (PrimaryKey StudentT)\n\ninstance Table StudentT where\n  data PrimaryKey StudentT f = StudentId (Columnar f Int) deriving Generic\n\ndata SchoolDb f\n  = SchoolDb\n  { _students :: f (TableEntity StudentT)\n  } deriving Generic\n\ninstance Database be SchoolDb\n\nschoolDb :: DatabaseSettings be SchoolDb\nschoolDb = defaultDbSettings\n</code></pre>\n\n<p>What I'm trying to achieve is a query like this:</p>\n\n<pre><code>SELECT s.id,\n       s.name,\n       s.score,\n       (SELECT COUNT(*) FROM students AS t where s.score &gt;= t.score) AS percentile \nFROM students as S\n</code></pre>\n\n<p>My attempt is the following:</p>\n\n<pre><code>main = do\n  conn &lt;- open \"test.db\"\n  runBeamSqliteDebug putStrLn conn $ do\n    (students :: [(Student, Int)]) &lt;- runSelectReturningList $ select tablePercentile\n    liftIO $ mapM_ print students\n\n\ntablePercentile :: Q _ _ _ _\ntablePercentile = do\n  student &lt;- all_ (_students schoolDb)\n  let percentile =  subquery_ $ aggregate_ (const countAll_) $ filter_ (\\s -&gt; _score s &lt;=. (_score student)) (all_ (_students schoolDb))\n  return (student, percentile)\n</code></pre>\n\n<p>Can someone point me into the right direction? </p>\n\n<p>Edit: Here is the full error message. I figured that <code>subquery_</code> returns a <code>QGenExpr</code>, so instead of binding it (<code>&lt;-</code>) I put it into a let statement. That simplified the error messages a little.</p>\n\n<pre><code>src/Main.hs:52:71: error:\n    \u2022 Couldn't match type \u2018Database.Beam.Query.Internal.QNested s0\u2019\n                     with \u2018Database.Beam.Query.QueryInaccessible\u2019\n      Expected type: Q SqliteSelectSyntax\n                       SchoolDb\n                       Database.Beam.Query.QueryInaccessible\n                       (StudentT\n                          (QExpr\n                             Database.Beam.Sqlite.Syntax.SqliteExpressionSyntax\n                             (Database.Beam.Query.Internal.QNested s0)),\n                        QGenExpr\n                          QValueContext\n                          (Database.Beam.Backend.SQL.SQL92.Sql92SelectTableExpressionSyntax\n                             (Database.Beam.Backend.SQL.SQL92.Sql92SelectSelectTableSyntax\n                                SqliteSelectSyntax))\n                          s0\n                          Int)\n        Actual type: Q SqliteSelectSyntax\n                       SchoolDb\n                       (Database.Beam.Query.Internal.QNested s0)\n                       (StudentT\n                          (QExpr\n                             (Database.Beam.Backend.SQL.SQL92.Sql92SelectTableExpressionSyntax\n                                (Database.Beam.Backend.SQL.SQL92.Sql92SelectSelectTableSyntax\n                                   SqliteSelectSyntax))\n                             (Database.Beam.Query.Internal.QNested s0)),\n                        QGenExpr\n                          QValueContext\n                          (Database.Beam.Backend.SQL.SQL92.Sql92SelectTableExpressionSyntax\n                             (Database.Beam.Backend.SQL.SQL92.Sql92SelectSelectTableSyntax\n                                SqliteSelectSyntax))\n                          s0\n                          Int)\n    \u2022 In the first argument of \u2018select\u2019, namely \u2018tablePercentile\u2019\n      In the second argument of \u2018($)\u2019, namely \u2018select tablePercentile\u2019\n      In a stmt of a 'do' block:\n        (students :: [(Student, Int)]) &lt;- runSelectReturningList\n                                            $ select tablePercentile\n   |\n52 |     (students :: [(Student, Int)]) &lt;- runSelectReturningList $ select tablePercentile\n   |                                                                       ^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1528810247, "post_id": 50818254, "comment_id": 88642011, "body": "It seems your executables are both called <code>multiexes-exe</code>. I suspect that is causing problems."}, {"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1528813210, "post_id": 50818254, "comment_id": 88644153, "body": "Thanks for the catch. I updated, but is still causing the same problem"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1528827752, "post_id": 50818254, "comment_id": 88652019, "body": "duplicate of <a href=\"https://stackoverflow.com/q/50659327/1100107\">stackoverflow.com/q/50659327/1100107</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 0, "creation_date": 1528832720, "post_id": 50822884, "comment_id": 88654350, "body": "Then the answer is impossible? I can&#39;t rename <code>SomeFunc2</code> to <code>Main</code>, because there is <code>Main.hs</code> exist already.  But if I can&#39;t define multiple executables in <code>packages.yaml</code>, then it doesn&#39;t make sense that the section is called executable<code>s</code>, which sounds as if it supported multiple executables."}, {"owner": {"reputation": 34861, "user_id": 110081, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/cSvwm.jpg?s=128&g=1", "display_name": "Roman Cheplyaka", "link": "https://stackoverflow.com/users/110081/roman-cheplyaka"}, "reply_to_user": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 0, "creation_date": 1528834171, "post_id": 50822884, "comment_id": 88655025, "body": "It is possible; I updated the answer to make it more clear. Also, if you really want to name both files <code>Main.hs</code>, you could place them in different directories (different <code>source-dirs</code>)."}, {"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 1, "creation_date": 1528839217, "post_id": 50822884, "comment_id": 88657041, "body": "No. It doesn&#39;t work. If I change the <code>SomeFunc2.hs</code> to be <code>module Main where</code>, I get the following error:       File name does not match module name:     Saw: \u2018Main\u2019     Expected: \u2018SomeFunc2\u2019   | 1 | module Main where"}], "tags": [], "owner": {"reputation": 34861, "user_id": 110081, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/cSvwm.jpg?s=128&g=1", "display_name": "Roman Cheplyaka", "link": "https://stackoverflow.com/users/110081/roman-cheplyaka"}, "is_accepted": false, "score": 1, "last_activity_date": 1528834082, "last_edit_date": 1528834082, "creation_date": 1528825317, "answer_id": 50822884, "question_id": 50818254, "link": "https://stackoverflow.com/questions/50818254/cant-define-multiple-executables/50822884#50822884", "title": "can&#39;t define multiple executables", "body": "<p>The module that contains the main function and is supposed to become an executable must be named <code>Main</code>, as in</p>\n\n<pre><code>module Main (main) where\n</code></pre>\n\n<p>You can also omit the module declaration altogether to the same effect. Your problem is in</p>\n\n<pre><code>module SomeFunc2 where\n</code></pre>\n\n<p>This convention is specified in <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch5.html#x11-980005\" rel=\"nofollow noreferrer\">the Haskell report</a>, and while GHC <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/phases.html#ghc-flag--main-is%20%E2%9F%A8thing%E2%9F%A9\" rel=\"nofollow noreferrer\">allows to change the module name</a> containing <code>main</code>, Cabal <a href=\"https://github.com/haskell/cabal/pull/5122/files\" rel=\"nofollow noreferrer\">does not</a>.</p>\n\n<p>To quote from the last link:</p>\n\n<blockquote>\n  <p>Further, while the name of the file may\n     vary, the module itself must be named <code>Main</code>.</p>\n</blockquote>\n\n<p>So in this case it's fine to name the module <code>Main</code> (or omit the module name declaration) even though the file itself is not called <code>Main.hs</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "is_accepted": false, "score": 6, "last_activity_date": 1528868961, "creation_date": 1528868961, "answer_id": 50829857, "question_id": 50818254, "link": "https://stackoverflow.com/questions/50818254/cant-define-multiple-executables/50829857#50829857", "title": "can&#39;t define multiple executables", "body": "<p>Found a solution, if I create a folder for each executable and have a <code>Main.hs</code> in each folder, then it works.</p>\n\n<pre><code>app/\n|-- Main.hs\nsomefunc2/\n|-- Main.hs\n</code></pre>\n\n<p>In package.yaml, change the source-dirs to be those folders:</p>\n\n<pre><code>executables:\n  multiexes-exe:\n    main:                Main.hs\n    source-dirs:         app\n    ghc-options:\n    - -threaded\n    - -rtsopts\n    - -with-rtsopts=-N\n    dependencies:\n    - multiexes\n\n  somefunc2-exe:\n    main:                Main.hs\n    source-dirs:         somefunc2\n    ghc-options:\n    - -threaded\n    - -rtsopts\n    - -with-rtsopts=-N\n    dependencies:\n    - multiexes\n</code></pre>\n"}], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 681, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1528868961, "creation_date": 1528809506, "last_edit_date": 1528813174, "question_id": 50818254, "link": "https://stackoverflow.com/questions/50818254/cant-define-multiple-executables", "title": "can&#39;t define multiple executables", "body": "<p>I have two files in <code>app</code> folder</p>\n\n<pre><code>app/\n|-- Main.hs\n|-- SomeFunc2.hs\n</code></pre>\n\n<p>The <code>SomeFunc2.hs</code> is just to print a different string</p>\n\n<pre><code>module SomeFunc2 where\n\nimport Lib\n\nmain :: IO ()\nmain = putStrLn \"someFunc2\"\n</code></pre>\n\n<p>When I define multiple executables in <code>package.yaml</code> like this</p>\n\n<pre><code>executables:\n  multiexes-exe:\n    main:                Main.hs\n    source-dirs:         app\n    ghc-options:\n    - -threaded\n    - -rtsopts\n    - -with-rtsopts=-N\n    dependencies:\n    - multiexes\n\n  somefunc2-exe:\n    main:                SomeFunc2.hs\n    source-dirs:         app\n    ghc-options:\n    - -threaded\n    - -rtsopts\n    - -with-rtsopts=-N\n    dependencies:\n    - multiexes\n</code></pre>\n\n<p>I got error:</p>\n\n<pre><code>\u25b8 stack build\nBuilding all executables for `multiexes' once. After a successful build of all of them, only specified executables will be rebuilt.\nmultiexes-0.1.0.0: configure (lib + exe)\nConfiguring multiexes-0.1.0.0...\nmultiexes-0.1.0.0: build (lib + exe)\nPreprocessing library for multiexes-0.1.0.0..\nBuilding library for multiexes-0.1.0.0..\n[2 of 2] Compiling Lib              ( src/Lib.hs, .stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/Lib.o )\nPreprocessing executable 'multiexes-exe' for multiexes-0.1.0.0..\nBuilding executable 'multiexes-exe' for multiexes-0.1.0.0..\n[1 of 3] Compiling Main             ( app/Main.hs, .stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/multiexes-exe/multiexes-exe-tmp/Main.o ) [Lib changed]\n[3 of 3] Compiling SomeFunc2        ( app/SomeFunc2.hs, .stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/multiexes-exe/multiexes-exe-tmp/SomeFunc2.o )\nLinking .stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/multiexes-exe/multiexes-exe ...\nPreprocessing executable 'somefunc2-exe' for multiexes-0.1.0.0..\nBuilding executable 'somefunc2-exe' for multiexes-0.1.0.0..\nWarning: Enabling workaround for Main module 'Main' listed in 'other-modules'\nillegaly!\n[1 of 2] Compiling Paths_multiexes  ( .stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/somefunc2-exe/autogen/Paths_multiexes.hs, .stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/somefunc2-exe/somefunc2-exe-tmp/Paths_multiexes.o )\n[2 of 2] Compiling SomeFunc2        ( app/SomeFunc2.hs, .stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/somefunc2-exe/somefunc2-exe-tmp/SomeFunc2.o )\n\n&lt;no location info&gt;: error:\n    output was redirected with -o, but no output will be generated\nbecause there is no Main module.\n\n\n--  While building custom Setup.hs for package multiexes-0.1.0.0 using:\n      /Users/leo/.stack/setup-exe-cache/x86_64-osx/Cabal-simple_mPHDZzAJ_2.0.1.0_ghc-8.2.2 --builddir=.stack-work/dist/x86_64-osx/Cabal-2.0.1.0 build lib:multiexes exe:multiexes-exe exe:somefunc2-exe --ghc-options \" -ddump-hi -ddump-to-file -fdiagnostics-color=always\"\n    Process exited with code: ExitFailure 1\n</code></pre>\n\n<p>How to fix it? Thanks!</p>\n"}, {"tags": ["haskell", "fold"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1528800611, "creation_date": 1528800611, "answer_id": 50815367, "question_id": 50815175, "link": "https://stackoverflow.com/questions/50815175/why-switch-the-lists-order-when-we-try-to-append-two-lists-by-using-foldr/50815367#50815367", "title": "Why switch the lists order when we try to append two lists by using foldr?", "body": "<p>The intuition is that <code>foldr c n list</code> \"replaces\" every <code>:</code> in <code>list</code> with <code>c</code> and the final <code>[]</code> with <code>n</code>.</p>\n\n<p>To append <code>xs</code> with <code>ys</code>, one needs to \"replace\" the final <code>[]</code> inside <code>xs</code> with <code>ys</code>. Instead <code>:</code> should be replaced with itself.</p>\n\n<p>Hence, we get <code>foldr (:) ys xs</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "edited": false, "score": 0, "creation_date": 1528801970, "post_id": 50815655, "comment_id": 88636249, "body": "Oh, get it. Thank you. Yea, I&#39;m also looking at the <code>foldr</code> document. But I need a more detail example. So is <code>&#39;f&#39;</code> the same function as <code>f</code>?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "edited": false, "score": 0, "creation_date": 1528802145, "post_id": 50815655, "comment_id": 88636370, "body": "@user8314628 <code>f</code> with backticks around it is just applying <code>f</code> as an infix operator. I could&#39;ve just as well written <code>f x (foldr f z xs&#39;)</code>, but I thought it would be clearer in infix notation because <code>:</code> is an infix operator."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 4, "last_activity_date": 1528801597, "last_edit_date": 1592644375, "creation_date": 1528801597, "answer_id": 50815655, "question_id": 50815175, "link": "https://stackoverflow.com/questions/50815175/why-switch-the-lists-order-when-we-try-to-append-two-lists-by-using-foldr/50815655#50815655", "title": "Why switch the lists order when we try to append two lists by using foldr?", "body": "<blockquote>\n<p>The first move would be</p>\n<pre><code>[y,x] (\\x y -&gt; x:y) foldr (\\x y -&gt; x:y) ys' xs'\n</code></pre>\n</blockquote>\n<p>That's not a valid Haskell expression, but I think what you mean to express here is that you take one element from each list and then insert them in front somehow. That's not how <code>foldr</code> works - it does not iterate over the elements of the <code>z</code> argument (<code>ys</code> in this case) - in fact that argument doesn't even have to be a list.</p>\n<p>Instead <code>foldr f z (x:xs')</code> expands like this:</p>\n<pre><code>x `f` foldr f z xs'\n</code></pre>\n<p>and <code>foldr f z []</code> expands to <code>z</code>.</p>\n<p>So in your case, the first step would be:</p>\n<pre><code>x : foldr (\\x y -&gt; x:y) ys xs'\n</code></pre>\n<p>This will continue until we get to the empty list, in which case <code>ys</code> will be the result. So:</p>\n<pre><code>  foldr (\\x y -&gt; x:y) ys [x1, x2, ..., xn]\n= x1 : foldr (\\x y -&gt; x:y) ys [x2, ..., xn]\n= x1 : x2 : foldr (\\x y -&gt; x:y) ys [..., xn]\n= ...\n= x1 : x2 : ... : xn : foldr (\\x y -&gt; x:y) ys []\n= x1 : x2 : ... : xn : ys\n</code></pre>\n<p>And from this you can see that the elements of <code>xs</code> are put in front of <code>ys</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 2, "last_activity_date": 1528802029, "creation_date": 1528802029, "answer_id": 50815799, "question_id": 50815175, "link": "https://stackoverflow.com/questions/50815175/why-switch-the-lists-order-when-we-try-to-append-two-lists-by-using-foldr/50815799#50815799", "title": "Why switch the lists order when we try to append two lists by using foldr?", "body": "<p>The first move wouldn't be that. Check the type of foldr</p>\n\n<pre><code>    ghci&gt;:t foldr\n    foldr :: Foldable t =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\n</code></pre>\n\n<p>Just for simplifying let's assume <code>t</code> to be <code>[]</code>. In that case, foldr is:</p>\n\n<p>Give me a function <code>f</code> which takes an <code>a</code> and a <code>b</code> and returns a <code>b</code>. Give me an initial element and a list of <code>a</code>. I will produce a <code>b</code>. </p>\n\n<p>So, the way it works is: take the last element of the list and apply f to that element and the initial value producing a <code>b</code>. Take the new last value of the list and apply f to that and the previous result... and so on.</p>\n\n<p>In your case, the initial element is actually a list and that's messy. But check this computation. Keep in mind that [1,2,3] is used as initial value, so we don't \"loop\" over it</p>\n\n<pre><code>    foldr (\\x y -&gt; x:y) [1,2,3] [4,5,6]\n    foldr (\\x y -&gt; x:y) 6:[1,2,3] [4,5]\n    foldr (\\x y -&gt; x:y) 5:6:[1,2,3] [4]\n    foldr (\\x y -&gt; x:y) 4:5:6:[1,2,3] []\n</code></pre>\n\n<p>Hope it helps!</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 50815655, "answer_count": 3, "score": 0, "last_activity_date": 1528802029, "creation_date": 1528800001, "last_edit_date": 1528800568, "question_id": 50815175, "link": "https://stackoverflow.com/questions/50815175/why-switch-the-lists-order-when-we-try-to-append-two-lists-by-using-foldr", "title": "Why switch the lists order when we try to append two lists by using foldr?", "body": "<p>I see a <a href=\"https://softwareengineering.stackexchange.com/questions/173559/using-foldr-to-append-two-lists-together-haskell\">post</a> explaining how to append two lists using foldr.</p>\n\n<p>But I don't understand why we have to switch the lists' order.</p>\n\n<pre><code>append xs ys = foldr (\\x y -&gt; x:y) ys xs\n</code></pre>\n\n<p>The first move would be</p>\n\n<pre><code>[y,x] (\\x y -&gt; x:y) foldr (\\x y -&gt; x:y) ys' xs'\n</code></pre>\n\n<p>Am I correct? Will the result then put ys in front of xs?</p>\n\n<p>Shouldn't it be</p>\n\n<pre><code>append xs ys = foldr (\\x y -&gt; x:y) xs ys\n</code></pre>\n"}, {"tags": ["c", "haskell", "posix", "mutex", "ghc"], "comments": [{"owner": {"reputation": 362, "user_id": 2890057, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57ce508983a0e0cff147c3c2c06f756f?s=128&d=identicon&r=PG", "display_name": "artem", "link": "https://stackoverflow.com/users/2890057/artem"}, "edited": false, "score": 0, "creation_date": 1528790672, "post_id": 50809983, "comment_id": 88629529, "body": "Also, please, comment if you don&#39;t know what the problem is, but managed (or not managed) to reproduce the bug on your machine (and tell OS/kernel version)."}, {"owner": {"reputation": 6006, "user_id": 239558, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/2362bc1c423993bbdb8548a3a059702c?s=128&d=identicon&r=PG", "display_name": "user239558", "link": "https://stackoverflow.com/users/239558/user239558"}, "edited": false, "score": 0, "creation_date": 1528796219, "post_id": 50809983, "comment_id": 88632724, "body": "have you used a bound thread? is your ffi code guaranteed to return using the same OS thread when it blocks?"}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1528796886, "post_id": 50809983, "comment_id": 88633195, "body": "have you taken a look  at <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Signals\" rel=\"nofollow noreferrer\">ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Signals</a> with regards to signals?"}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1528797225, "post_id": 50809983, "comment_id": 88633408, "body": "In particular, consider using <code>pthread_sigmask()</code> ?"}, {"owner": {"reputation": 362, "user_id": 2890057, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57ce508983a0e0cff147c3c2c06f756f?s=128&d=identicon&r=PG", "display_name": "artem", "link": "https://stackoverflow.com/users/2890057/artem"}, "reply_to_user": {"reputation": 6006, "user_id": 239558, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/2362bc1c423993bbdb8548a3a059702c?s=128&d=identicon&r=PG", "display_name": "user239558", "link": "https://stackoverflow.com/users/239558/user239558"}, "edited": false, "score": 0, "creation_date": 1528801518, "post_id": 50809983, "comment_id": 88635952, "body": "@user239558 yes, I tried first <code>forkIO</code>, then changed it to <code>forkOS</code>. Not sure for the latter question; could you elaborate? My FFI code does not do any thread manipulation - only mutex functions."}, {"owner": {"reputation": 362, "user_id": 2890057, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57ce508983a0e0cff147c3c2c06f756f?s=128&d=identicon&r=PG", "display_name": "artem", "link": "https://stackoverflow.com/users/2890057/artem"}, "reply_to_user": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1528801694, "post_id": 50809983, "comment_id": 88636061, "body": "@sclv , thanks for suggestion. Yes, I looked at that and tried to play with <code>pthread_sigmask</code>, but I am afraid don&#39;t have enough experience with <code>pthread</code> to understand well the commentary and write a proper signal masking/unmasking. I am also afraid it can break <code>interruptible</code> behavior."}], "answers": [{"tags": [], "owner": {"reputation": 362, "user_id": 2890057, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57ce508983a0e0cff147c3c2c06f756f?s=128&d=identicon&r=PG", "display_name": "artem", "link": "https://stackoverflow.com/users/2890057/artem"}, "is_accepted": true, "score": 2, "last_activity_date": 1528960949, "creation_date": 1528960949, "answer_id": 50851790, "question_id": 50809983, "link": "https://stackoverflow.com/questions/50809983/pthread-cond-timedwait-does-not-return-in-ghc-ffi/50851790#50851790", "title": "pthread_cond_timedwait does not return in GHC FFI", "body": "<p>Well, as expected, this was my fault - a very C-beginner error.\nAs one can see from the initialization snippet, I keep the mutex and the condition variables in a structure.\nWhat one cannot see from the snippet here, but can see by the links I gave (on github), is that I am copying that structure to a shared memory. Not only that is not allowed for mutexes, but I also stupidly copy it before I initialize everything in the structure.</p>\n\n<p>That is, I just <a href=\"https://github.com/achirkin/interprocess/blob/mvar-fail/src/StoredMVar.c#L116\" rel=\"nofollow noreferrer\">copied a C structure</a> where I should have set a pointer.</p>\n\n<p>The most surprising here is that the code still works sometimes.\n<a href=\"https://github.com/achirkin/interprocess/blob/mvar-fail/src/StoredMVar.c#L111-L155\" rel=\"nofollow noreferrer\">Here is the link to the erroneous code.</a></p>\n"}], "owner": {"reputation": 362, "user_id": 2890057, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57ce508983a0e0cff147c3c2c06f756f?s=128&d=identicon&r=PG", "display_name": "artem", "link": "https://stackoverflow.com/users/2890057/artem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 0, "accepted_answer_id": 50851790, "answer_count": 1, "score": 8, "last_activity_date": 1528960949, "creation_date": 1528782305, "last_edit_date": 1528888197, "question_id": 50809983, "link": "https://stackoverflow.com/questions/50809983/pthread-cond-timedwait-does-not-return-in-ghc-ffi", "title": "pthread_cond_timedwait does not return in GHC FFI", "body": "<p>I've tried to implement Haskell <code>Control.Concurrent.MVar</code> that resides in shared memory and allows communicating between multiple independent processes/programs using POSIX functionality.\nBut I have failed with lots of deadlocks.</p>\n\n<p>The problem is that <code>pthread_cond_timedwait</code> sometimes does not return being called within GHC FFI (albeit <code>interruptible</code> or <code>unsafe</code>).\nAfter a few days of desperate attempts to resolve the problem, I decided to minify the code and ask community to help. Unfortunately, I could not condense the problem into a few lines of code pastable in here. Therefore, I stored the (as small as possible) code on github together with the instructions on how to replicate the problem <a href=\"https://github.com/achirkin/interprocess/tree/fc886146dc5eb5600857d6885e31501d562c9c1d\" rel=\"nofollow noreferrer\">here is a permalink</a> to the current state of it (<code>mvar-fail</code> branch).</p>\n\n<p>In the essence, the functions to take and put mvar look like this:</p>\n\n<pre><code>int mvar_take(MVar *mvar, ...) {\n   pthread_mutex_timedlock(&amp;(mvar-&gt;statePtr-&gt;mvMut), &amp;timeToWait);\n   while ( !(mvar-&gt;statePtr-&gt;isFull) ) {\n     pthread_cond_signal(&amp;(mvar-&gt;statePtr-&gt;canPutC));\n     pthread_cond_timedwait(&amp;(mvar-&gt;statePtr-&gt;canTakeC), &amp;(mvar-&gt;statePtr-&gt;mvMut), &amp;timeToWait);\n   }\n   memcpy(localDataPtr, mvar-&gt;dataPtr, mvar-&gt;statePtr-&gt;dataSize);\n   mvar-&gt;statePtr-&gt;isFull = 0;\n   pthread_mutex_unlock(&amp;(mvar-&gt;statePtr-&gt;mvMut));\n}\n\nint mvar_put(MVar *mvar, ...) {\n   pthread_mutex_timedlock(&amp;(mvar-&gt;statePtr-&gt;mvMut), &amp;timeToWait);\n   while ( mvar-&gt;statePtr-&gt;isFull ) {\n     pthread_cond_signal(&amp;(mvar-&gt;statePtr-&gt;canTakeC));\n     pthread_cond_timedwait(&amp;(mvar-&gt;statePtr-&gt;canPutC), &amp;(mvar-&gt;statePtr-&gt;mvMut), &amp;timeToWait);\n   }\n   memcpy(mvar-&gt;dataPtr, localDataPtr, mvar-&gt;statePtr-&gt;dataSize);\n   mvar-&gt;statePtr-&gt;isFull = 1;\n   pthread_mutex_unlock(&amp;(mvar-&gt;statePtr-&gt;mvMut));\n}\n</code></pre>\n\n<p>(Plus error checking and printfs after every command).\n<a href=\"https://github.com/achirkin/interprocess/blob/76e109552aee60d4aea7510e9feb5ffc944c59be/src/StoredMVar.c#L274\" rel=\"nofollow noreferrer\">Full code for <code>mvar_take</code>.</a>\nThe initialization happens as follows:</p>\n\n<pre><code>pthread_mutexattr_init(&amp;(s.mvMAttr));\npthread_mutexattr_settype(&amp;(s.mvMAttr), PTHREAD_MUTEX_ERRORCHECK);\npthread_mutexattr_setpshared(&amp;(s.mvMAttr), PTHREAD_PROCESS_SHARED);\npthread_mutex_init(&amp;(s.mvMut), &amp;(s.mvMAttr));\npthread_condattr_init(&amp;(s.condAttr));\npthread_condattr_setpshared(&amp;(s.condAttr), PTHREAD_PROCESS_SHARED);\npthread_cond_init(&amp;(s.canPutC), &amp;(s.condAttr));\npthread_cond_init(&amp;(s.canTakeC), &amp;(s.condAttr));\n</code></pre>\n\n<p><a href=\"https://github.com/achirkin/interprocess/blob/76e109552aee60d4aea7510e9feb5ffc944c59be/src/StoredMVar.c#L128\" rel=\"nofollow noreferrer\">Full code.</a>\nThe Haskell part looks like this:</p>\n\n<pre><code>foreign import ccall interruptible \"mvar_take\"\n  mvar_take :: Ptr StoredMVarT -&gt; Ptr a -&gt; CInt -&gt; IO CInt\nforeign import ccall interruptible \"mvar_put\"\n  mvar_put :: Ptr StoredMVarT -&gt; Ptr a -&gt; CInt -&gt; IO CInt\n\ntakeMVar :: Storable a =&gt; StoredMVar a -&gt; IO a\ntakeMVar (StoredMVar _ fp) = withForeignPtr fp $ \\p -&gt; alloca $ \\lp -&gt; do\n    r &lt;- mvar_take p lp\n    if r == 0\n    then peek lp\n    else throwErrno $ \"takeMVar failed with code \" ++ show r\n\nputMVar :: Storable a =&gt; StoredMVar a -&gt; a -&gt; IO ()\nputMVar (StoredMVar _ fp) x = withForeignPtr fp $ \\p -&gt; alloca $ \\lp -&gt; do\n    poke lp x\n    r &lt;- mvar_put p lp\n    unless (r == 0)\n      $ throwErrno $ \"putMVar failed with code \" ++ show r\n</code></pre>\n\n<p><a href=\"https://github.com/achirkin/interprocess/blob/76e109552aee60d4aea7510e9feb5ffc944c59be/src/wait-mvar.hs#L174-L214\" rel=\"nofollow noreferrer\">Full code.</a>\nChanging FFI from <code>interruptible</code> to <code>unsafe</code> does not prevent the deadlock.\nSometimes the deadlock happens every second run, sometimes it happens after 50 runs only (and the rest is executed as expected).</p>\n\n<p>My guess is that GHC might interfere the work of POSIX mutexes with some OS signal handling, but I don't know GHC internals enough to verify it.</p>\n\n<p>Is that me doing something stupidly wrong, or do I need to add some special tricks to make it work inside GHC FFI?</p>\n\n<p><strong>P.S.:</strong> the last version of README with my investigations is available at <a href=\"https://github.com/achirkin/interprocess/blob/mvar-fail/README.md\" rel=\"nofollow noreferrer\"><code>interprocess mvar-fail</code></a>.</p>\n\n<p><strong>UPDATE 13.06.2018</strong>:\nI tried to temporarily block all OS signals by surrounding function code with following:</p>\n\n<pre><code>sigset_t mask, omask;\nsigfillset(&amp;mask);\nsigprocmask(SIG_SETMASK, &amp;mask, &amp;omask);\n...\nsigprocmask(SIG_SETMASK, &amp;omask, NULL);\n</code></pre>\n\n<p>This did not help.</p>\n"}, {"tags": ["haskell", "authorization", "yesod", "type-families"], "answers": [{"tags": [], "owner": {"reputation": 705, "user_id": 2648019, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wBjZ5.jpg?s=128&g=1", "display_name": "Daiwen", "link": "https://stackoverflow.com/users/2648019/daiwen"}, "is_accepted": true, "score": 5, "last_activity_date": 1528796725, "last_edit_date": 1528796725, "creation_date": 1528794800, "answer_id": 50813428, "question_id": 50808477, "link": "https://stackoverflow.com/questions/50808477/yesodauthemail-could-not-deduce-m-handlerfor-site0/50813428#50813428", "title": "YesodAuthEmail could not deduce m ~ HandlerFor site0", "body": "<p>The type of <a href=\"https://www.stackage.org/haddock/lts-11.13/yesod-persistent-1.6.0/Yesod-Persist-Core.html#v:runDB\" rel=\"noreferrer\"><code>runDB</code></a> is:</p>\n\n<pre><code>runDB :: YesodDB site a -&gt; HandlerFor site a \n</code></pre>\n\n<p>in order to call it in <code>AuthHandler</code> you need to lift it to <code>HandlerFor</code>.</p>\n\n<p>If I am not mistaken this is what the <a href=\"https://www.stackage.org/haddock/lts-11.13/yesod-core-1.6.5/Yesod-Core.html#v:liftHandler\" rel=\"noreferrer\"><code>liftHandler</code></a> method from <code>MonadHandler</code> is for.</p>\n\n<p>If you compose your <code>runDB</code> call with it, it should work:</p>\n\n<pre><code>addUnverified email verkey =\n    liftHandler . runDB $ insert $ User email Nothing\n</code></pre>\n\n<p>I found a detailed answer to your question <a href=\"https://groups.google.com/forum/#!topic/yesodweb/XR4UQHkmQ4A\" rel=\"noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 1518, "user_id": 802500, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/54cb6e5f1e23129af9e91ea9b31eaace?s=128&d=identicon&r=PG", "display_name": "Justin Blank", "link": "https://stackoverflow.com/users/802500/justin-blank"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 1, "closed_date": 1528996301, "accepted_answer_id": 50813428, "answer_count": 1, "score": 3, "last_activity_date": 1528796725, "creation_date": 1528770736, "question_id": 50808477, "link": "https://stackoverflow.com/questions/50808477/yesodauthemail-could-not-deduce-m-handlerfor-site0", "closed_reason": "Duplicate", "title": "YesodAuthEmail could not deduce m ~ HandlerFor site0", "body": "<p>I'm trying to add </p>\n\n<pre><code>instance YesodAuthEmail App \n</code></pre>\n\n<p>to the <code>Yesod-Postgres</code> scaffolding (yesod version 1.6) and getting stuck on a compile error. </p>\n\n<p>The relevant code is:</p>\n\n<pre><code>instance YesodAuth App where\n     type AuthId App = UserId\n     ....\n     authPlugins :: App -&gt; [AuthPlugin App]\n     authPlugins app = [authOpenId Claimed []] ++ extraAuthPlugins\n         where extraAuthPlugins = [ authEmail ]\n\ninstance YesodAuthEmail App where\n    type AuthEmailId App = UserId\n\n    afterPasswordRoute _ = HomeR\n\n    addUnverified email verkey =\n        runDB $ insert $ User email Nothing \n</code></pre>\n\n<p>The error I receive is:</p>\n\n<p><code>\n/home/justin/code/yesodemail/src/Foundation.hs:273:11: error:<br>\n    \u2022 Could not deduce: m ~ HandlerFor site0 from the context: MonadAuthHandler App m\n    bound by the type signature for:\n        addUnverified :: Yesod.Auth.Email.Email -&gt; VerKey -&gt; AuthHandler App (AuthEmailId App)\n....<br>\n      Expected type: m (AuthEmailId App)\n      Actual type: HandlerFor site0 (Key User)\n</code></p>\n\n<p>Based on the types, </p>\n\n<pre><code>getEmail :: AuthEmailId site -&gt; AuthHandler site (Maybe Email) \ntype MonadAuthHandler master m = (MonadHandler m, YesodAuth master, master ~ HandlerSite m, Auth ~ SubHandlerSite m, MonadUnliftIO m)\ntype AuthHandler master a = forall m. MonadAuthHandler master m =&gt; m a\n</code></pre>\n\n<p>I would have thought this would compile. What I am misunderstanding?</p>\n\n<p>P.S. I've tried to include everything relevant, but the full Foundation.hs is at <a href=\"https://gist.github.com/hyperpape/39d4d2baf67d3bdbdba45a943e7e0425\" rel=\"nofollow noreferrer\">https://gist.github.com/hyperpape/39d4d2baf67d3bdbdba45a943e7e0425</a></p>\n"}, {"tags": ["haskell", "ghc", "haskell-stack"], "comments": [{"owner": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "edited": false, "score": 1, "creation_date": 1528788349, "post_id": 50807955, "comment_id": 88628229, "body": "I think anyone trying to answer the question might want to know how to reproduce the issue. Have you tried upgrading projects from lower to higher LTS releases before with similar unsuccessful results?"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1528794715, "post_id": 50807955, "comment_id": 88631812, "body": "Did you try <code>stack clean --full</code> and then <code>stack build --test</code> again?"}, {"owner": {"reputation": 143, "user_id": 2714494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd4bc54ab71e91c4b30a13a005905627?s=128&d=identicon&r=PG&f=1", "display_name": "SimpleGuy", "link": "https://stackoverflow.com/users/2714494/simpleguy"}, "reply_to_user": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1528810371, "post_id": 50807955, "comment_id": 88642112, "body": "@Shersh yes I have done both multiple times."}, {"owner": {"reputation": 143, "user_id": 2714494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd4bc54ab71e91c4b30a13a005905627?s=128&d=identicon&r=PG&f=1", "display_name": "SimpleGuy", "link": "https://stackoverflow.com/users/2714494/simpleguy"}, "reply_to_user": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "edited": false, "score": 0, "creation_date": 1528810388, "post_id": 50807955, "comment_id": 88642125, "body": "@KartikSabharwal  I have tried upgrading before to a previous LTS version (I think it was 8.1...) which led me to discovering a bug in GHC. Since then I have not attempted it again since I wanted to give GHC and libs more time to mature. I am now making another attempt. I guess since the issue is not obvious I will start removing things and then adding back."}, {"owner": {"reputation": 143, "user_id": 2714494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd4bc54ab71e91c4b30a13a005905627?s=128&d=identicon&r=PG&f=1", "display_name": "SimpleGuy", "link": "https://stackoverflow.com/users/2714494/simpleguy"}, "edited": false, "score": 0, "creation_date": 1528811746, "post_id": 50807955, "comment_id": 88643110, "body": "Also not sure if this is relevant, but it seems that stack rebuilds the entire project even if I only change a test file. I don&#39;t recalls this being the previous behavior. It also seems to build the lib twice. It builds a non-test version and a test version but outputs the object files to the same place which seems weird to me. This really makes build times excessive..."}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1528816530, "post_id": 50807955, "comment_id": 88646371, "body": "A complete guess is that you have overlapping source directories. We&#39;d need to see the contents of your <code>.cabal</code> file and/or <code>package.yaml</code> file to know for sure though."}, {"owner": {"reputation": 143, "user_id": 2714494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd4bc54ab71e91c4b30a13a005905627?s=128&d=identicon&r=PG&f=1", "display_name": "SimpleGuy", "link": "https://stackoverflow.com/users/2714494/simpleguy"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1528816796, "post_id": 50807955, "comment_id": 88646515, "body": "@MichaelSnoyman I found the issue and its a regression, have filed bug: <a href=\"https://github.com/commercialhaskell/stack/issues/4081\" rel=\"nofollow noreferrer\">github.com/commercialhaskell/stack/issues/4081</a>"}], "owner": {"reputation": 143, "user_id": 2714494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd4bc54ab71e91c4b30a13a005905627?s=128&d=identicon&r=PG&f=1", "display_name": "SimpleGuy", "link": "https://stackoverflow.com/users/2714494/simpleguy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 75, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1528836960, "creation_date": 1528765501, "last_edit_date": 1528836960, "question_id": 50807955, "link": "https://stackoverflow.com/questions/50807955/haskell-stack-generating-duplicate-dependency", "title": "Haskell Stack Generating Duplicate Dependency?", "body": "<p>So I am in the process of updating my Haskell project from LTS 9.21 (GHC 8.0.2) to LTS 11.12 (GHC 8.2.2) and one of my existing projects  no longer compiles properly (OS: archlinux). Specifically the test binary for a library fails to compile (the library under testing compiles fine). The test binary seems to find two instances of a data type declaration which makes me think that maybe the library under testing is being duplicated? I receive the following error message:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018MyLib-0.2.1.0:MyLib.Foo.BarType\u2019\n                 with \u2018BarType\u2019\n  NB: \u2018BarType\u2019\n        is defined in \u2018MyLib.Foo\u2019 in package \u2018MyLib-0.2.1.0\u2019\n      \u2018MyLib-0.2.1.0:MybLib.Foo.BarType\u2019\n        is defined in \u2018MyLib.Foo\u2019 in package \u2018MyLib-0.2.1.0\u2019\n  Expected type: IO (V.Vector BarType)\n    Actual type: IO\n                   (V.Vector MyLib-0.2.1.0:MyLib.Foo.BarType)\n</code></pre>\n\n<p>Possibly further supporting my theory of a duplicate dependency is the fact that underneath the .stack-work directory there exists two copies of 'MyLib' with different hash suffixes</p>\n\n<pre><code>$ ls .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.0.1.0/build\nautogen     libHSMyLib-0.2.1.0-GDttEQSehxfEGK2MpHGnkk.a            \nlibHSMyLib-0.2.1.0-KMd8aF0sABi30EkTXjcRNo-ghc8.2.2.so\nMyLib-tests  libHSMyLib-0.2.1.0-GDttEQSfhxfEFK2MwHGnkk-ghc8.2.2.so\nMyLib       libHSMyLib-0.2.1.0-KMg8aF0jABi10EkJXjcRNo.a\n</code></pre>\n\n<p>Any suggestions would be welcome.</p>\n"}, {"tags": ["haskell", "template-haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1528748119, "post_id": 50805358, "comment_id": 88616720, "body": "You can do this with <i>template Haskell</i>."}, {"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528748182, "post_id": 50805358, "comment_id": 88616736, "body": "@WillemVanOnsem do you maybe have a link to something similar to what I&#39;m asking"}, {"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528748194, "post_id": 50805358, "comment_id": 88616743, "body": "You might be looking for Free Monads, although it is not precisely what you described."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528748518, "post_id": 50805358, "comment_id": 88616883, "body": "Well unfortunately, template Haskell is rather complicated. It is Haskell that writes Haskell syntax so to speak. So you can &quot;generate&quot; a specific <code>iterate&#39; :: Int -&gt; Name -&gt; Exp</code> function, and then <code>iterate&#39;</code> will &quot;<i>generate</i>&quot;, Haskell code for that."}], "answers": [{"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 9, "last_activity_date": 1528752156, "last_edit_date": 1528752156, "creation_date": 1528748624, "answer_id": 50805473, "question_id": 50805358, "link": "https://stackoverflow.com/questions/50805358/is-it-possible-to-iterate-the-application-of-a-non-endomorphism/50805473#50805473", "title": "Is it possible to iterate the application of a non-endomorphism?", "body": "<p>You can do it with template haskell, if you know the number at compile time (but unless the number is pretty large I don't think it's worth the hassle).  If you don't know the number yet at compile time, you need to correctly model the return type, which we can do using a non-regular type:</p>\n\n<pre><code>data Iter f a = Iter0 a | IterS (Iter f (f a))\n\niterate' :: Int -&gt; (forall x. x -&gt; f x) -&gt; a -&gt; Iter f a\niterate' 0 f x = Iter0 x\niterate' n f x = IterS (iterate' (n-1) f (f x))\n</code></pre>\n\n<p><code>Iter</code> is essentially a way of expressing the data type <code>a | f a | f (f a) | f (f (f a)) | ...</code>.  To use the result you need to recurse on <code>Iter</code>.  Also the function has to be of the form <code>a -&gt; f a</code> for some type constructor <code>f</code>, so you may need to do some newtype wrapping to get there.  So... it's kind of a pain either way.</p>\n"}, {"tags": [], "owner": {"reputation": 34861, "user_id": 110081, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/cSvwm.jpg?s=128&g=1", "display_name": "Roman Cheplyaka", "link": "https://stackoverflow.com/users/110081/roman-cheplyaka"}, "is_accepted": true, "score": 14, "last_activity_date": 1528758058, "last_edit_date": 1528758058, "creation_date": 1528755422, "answer_id": 50806798, "question_id": 50805358, "link": "https://stackoverflow.com/questions/50805358/is-it-possible-to-iterate-the-application-of-a-non-endomorphism/50806798#50806798", "title": "Is it possible to iterate the application of a non-endomorphism?", "body": "<p>It is possible with a minor tweak to the syntax you proposed: <code>iterate' @3 Just</code> instead of <code>iterate' 3 Just</code>.</p>\n\n<p>This is because the result type depends on the number, so the number has to be a <em>type literal</em>, not a <em>value literal</em>. As you correctly note, doing this with arbitrary numbers would require dependent types[1], which Haskell doesn't have.</p>\n\n<pre><code>{-# OPTIONS_GHC -Wall #-}\n{-# LANGUAGE TypeFamilies, KindSignatures, DataKinds,\n    FlexibleInstances, UndecidableInstances, ScopedTypeVariables,\n    FunctionalDependencies, TypeApplications, RankNTypes, FlexibleContexts,\n    AllowAmbiguousTypes #-}\n\nimport qualified GHC.TypeLits as Lit\n\n-- from type-natural\nimport Data.Type.Natural\nimport Data.Type.Natural.Builtin\n\nclass Iterate (n :: Nat) (f :: * -&gt; *) (a :: *) (r :: *)\n  | n f a -&gt; r\n  where\n  iterate_peano :: Sing n -&gt; (forall b . b -&gt; f b) -&gt; a -&gt; r\n\ninstance Iterate 'Z f a a where\n  iterate_peano SZ _ = id\ninstance Iterate n f (f a) r =&gt; Iterate ('S n) f a r where\n  iterate_peano (SS n) f x = iterate_peano n f (f x)\n\niterate'\n  :: forall (n :: Lit.Nat) f a r .\n     (Iterate (ToPeano n) f a r, SingI n)\n  =&gt; (forall b . b -&gt; f b) -&gt; a -&gt; r\niterate' f a = iterate_peano (sToPeano (sing :: Sing n)) f a\n</code></pre>\n\n<p>If you load this in ghci, you can say</p>\n\n<pre><code>*Main&gt; :t iterate' @3 Just\niterate' @3 Just :: a -&gt; Maybe (Maybe (Maybe a))\n*Main&gt; iterate' @3 Just True\nJust (Just (Just True))\n</code></pre>\n\n<p>This code uses two different type-level naturals: the built-in <code>Nat</code> from <code>GHC.TypeLits</code> and the classic Peano numerals from <code>Data.Type.Natural</code>. The former are needed to provide the nice <code>iterate' @3</code> syntax, the latter are needed to perform the recursion (which happens in the <code>Iterate</code> class). I used <code>Data.Type.Natural.Builtin</code> to convert from a literal to the corresponding Peano numeral.</p>\n\n<p>[1] However, given a specific way to consume the iterated values (e.g. if you know in advance that you'll only want to <code>show</code> them), you probably could adapt this code to work even for dynamic values of <code>n</code>. There's nothing in the type of <code>iterate'</code> that requires a statically known <code>Nat</code>; the only challenge is to prove that the result of the iteration satisfies the constraints you need.</p>\n"}, {"tags": [], "owner": {"reputation": 1001, "user_id": 983883, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e529b9e0fbcbee96a20a1b9bb2629ea7?s=128&d=identicon&r=PG", "display_name": "hololeap", "link": "https://stackoverflow.com/users/983883/hololeap"}, "is_accepted": false, "score": 1, "last_activity_date": 1615484132, "creation_date": 1615484132, "answer_id": 66587640, "question_id": 50805358, "link": "https://stackoverflow.com/questions/50805358/is-it-possible-to-iterate-the-application-of-a-non-endomorphism/66587640#66587640", "title": "Is it possible to iterate the application of a non-endomorphism?", "body": "<p>You can do this without Template Haskell or type-level Nats. The kind of variable-depth recursive type you are building actually fits perfectly into the model of a free monad. We can use the <a href=\"https://hackage.haskell.org/package/free/docs/Control-Monad-Free.html#v:unfold\" rel=\"nofollow noreferrer\"><code>unfold</code></a> function from the <a href=\"https://hackage.haskell.org/package/free\" rel=\"nofollow noreferrer\"><code>free</code></a> package to build up a <code>Free</code> structure and short-circuit when our counter reaches <code>0</code>.</p>\n<pre><code>-- This extension is enabled so we can have nice type annotations\n{-# Language ScopedTypeVariables #-}\n\nimport Control.Monad.Free (Free)\nimport qualified Control.Monad.Free as Free\n\niterate' :: forall f a. Functor f =&gt; Int -&gt; (a -&gt; f a) -&gt; a -&gt; Free f a\niterate' counter0 f x0 = Free.unfold run (counter0, x0)\n  where\n\n    -- If counter is 0, short circuit with current result\n    -- Otherwise, continue computation with modified counter\n    run :: (Int, a) -&gt; Either a (f (Int, a))\n    run (0      , x) = Left x\n    run (counter, x) = Right (countDown counter &lt;$&gt; f x)\n\n    countDown :: Int -&gt; a -&gt; (Int, a)\n    countDown counter x = (counter - 1, x)\n</code></pre>\n<hr />\n<p>Now, it's easy to create and digest these types of values for any Functor.</p>\n<pre><code>&gt; iterate' 3 Just True\nFree (Just (Free (Just (Free (Just (Pure True))))))\n\n&gt; let f i = if i == 1 then Left &quot;abort&quot; else Right (i+1)\n\n&gt; iterate' 0 f 0\nPure 0\n&gt; iterate' 1 f 0\nFree (Right (Pure 1))\n&gt; iterate' 2 f 0\nFree (Right (Free (Left &quot;abort&quot;)))\n</code></pre>\n<hr />\n<p>If your Functor also happens to be a Monad, you can use <a href=\"https://hackage.haskell.org/package/free/docs/Control-Monad-Free.html#v:retract\" rel=\"nofollow noreferrer\"><code>retract</code></a> to collapse the recursive structure.</p>\n<pre><code>&gt; Free.retract (iterate' 3 Just True)\nJust True\n&gt; Free.retract (iterate' 0 f 0)\nRight 0\n&gt; Free.retract (iterate' 1 f 0)\nRight 1\n&gt; Free.retract (iterate' 2 f 0)\nLeft &quot;abort&quot;\n</code></pre>\n<hr />\n<p>I suggest reading the docs for <code>Control.Monad.Free</code> so you can get an idea for how these structures are created/consumed.</p>\n<hr />\n<p>(Just as an aside, <code>a -&gt; Maybe a</code> <em>is</em> an endomorphism, but it's an endomorphism in the Kleisli category of Maybe.)</p>\n"}], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 2, "accepted_answer_id": 50806798, "answer_count": 3, "score": 15, "last_activity_date": 1615484132, "creation_date": 1528748049, "last_edit_date": 1528754190, "question_id": 50805358, "link": "https://stackoverflow.com/questions/50805358/is-it-possible-to-iterate-the-application-of-a-non-endomorphism", "title": "Is it possible to iterate the application of a non-endomorphism?", "body": "<p>In Haskell if I want to repeatedly apply an endomorphism <code>a -&gt; a</code> to a value of type <code>a</code> I can just use <code>iterate</code>.</p>\n\n<p>What about a function that is not an endomorphisms, but generic enough to work correctly on its return type?</p>\n\n<p>Consider for example <code>Just :: a -&gt; Maybe a</code>;  I can write</p>\n\n<pre><code>Just . Just . Just ...\n</code></pre>\n\n<p>as many times as I want. Is there a way to write this shortly with something like</p>\n\n<pre><code>iterate' 3 Just :: a -&gt; Maybe (Maybe (Maybe a))\n</code></pre>\n\n<p>or do we need something like dependent types to do this?</p>\n"}, {"tags": ["haskell", "scope", "functional-programming", "monads", "do-notation"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1528743233, "post_id": 50804295, "comment_id": 88614601, "body": "<code>do</code>-blocks are not statements, they are values. What do you think this is supposed to do? Like I said in your last question, <i>please</i> study monads before using them!"}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528743238, "post_id": 50804295, "comment_id": 88614602, "body": "@WillemVanOnsem I have used to that kind of words. What I meant is that I want to declare a new value of type [String] from the value of type IO [String]."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528743349, "post_id": 50804295, "comment_id": 88614646, "body": "@AJFarmar I&#39;m just somehow trying to comply that last 2 line of code in the definition of the function, that is it."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1528743374, "post_id": 50804295, "comment_id": 88614658, "body": "to deal with indentation, you can use <code>do { x ; y ; z }</code> explicit syntax."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 2, "creation_date": 1528743481, "post_id": 50804295, "comment_id": 88614708, "body": "Change your function to be <code>[String] -&gt; [[String]]</code> and then just use <code>fmap</code> to lift it into the <code>IO</code> monad."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528743545, "post_id": 50804295, "comment_id": 88614736, "body": "@AJFarmar Before learning the inner workings of the language, I would like to knock my head againts the constraints of the language a bit. Without it, there is a little motivation to learn."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1528743678, "post_id": 50804295, "comment_id": 88614798, "body": "you can&#39;t use a variable bound in your do block (i.e. <code>words&#39;</code>) outside the do block (i.e. in a guard). you will have to restructure your code."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1528743979, "post_id": 50804295, "comment_id": 88614948, "body": "@onurcanbektas Monads are not <i>&#39;the inner workings of the language&#39;</i>, they are a vital feature of Haskell that <i>defines</i> its I/O constraints. Without an understanding of monads, you will not be able to write good Haskell. Learn about monads!"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1528744305, "post_id": 50804295, "comment_id": 88615099, "body": "@AJFarmar while true, a do notation can be mastered on its own, as a DSL in its own right, with few rules to follow. this could be a first, smaller step to master. (also, including all the optional parens, braces and semicolons everywhere (do, case, $, ...) can really help a beginner by removing any additional uncertainty with the syntax they might still have)."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528744388, "post_id": 50804295, "comment_id": 88615144, "body": "@AJFarmar The reason why I haven&#39;t learned monads is that I&#39;m math student, and I would first like to learn Category theory, and then come back and learn monads etc."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1528744513, "post_id": 50804295, "comment_id": 88615197, "body": "@onurcanbektas I&#39;m also a math student, and I learned monads way before I began. Trust me, you&#39;re not losing out. If you&#39;re continuing to use Haskell, learn monads."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528861758, "post_id": 50804295, "comment_id": 88661965, "body": "What is the reason for the downvote ?"}], "answers": [{"tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": false, "score": 5, "last_activity_date": 1528743493, "creation_date": 1528743493, "answer_id": 50804391, "question_id": 50804295, "link": "https://stackoverflow.com/questions/50804295/do-statement-under-a-where-clause/50804391#50804391", "title": "Do statement under a where clause", "body": "<p>You cannot <em>convert</em> for IO String to a String.</p>\n\n<p>What you can do, however, is bind the contents of IO String to a 'variable', but that will still result in the whole computation being embedded inside IO.</p>\n\n<pre><code>foo = do\n   x &lt;- baz -- here baz is the IO String\n   let x' = doStuff x\n   return x' -- embeds the String inside IO, as otherwise the computation would result in IO ()\n</code></pre>\n\n<p>To answer your question</p>\n\n<pre><code>foo x = baz x -- x here is your 'IO String'\n  where\n    baz x = do\n      x' &lt;- x\n      return $ doStuff x'\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528744175, "post_id": 50804450, "comment_id": 88615032, "body": "I just directly copy-paste the code, but it throws 2 errors becuase in (<i>:</i>) it is expected [String], and not IO [String]; this is at least what ghci says."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528744285, "post_id": 50804450, "comment_id": 88615087, "body": "Ah, this is a flaw due to the original definition, updating now. (Updated now)"}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528744685, "post_id": 50804450, "comment_id": 88615271, "body": "But still the argument of <i>decompEventBlocks</i> in rest &lt;- ... is [String ]?"}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528813026, "post_id": 50804450, "comment_id": 88643994, "body": "By the way, the code is giving error (which is the reason for the my question above.)"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528816538, "post_id": 50804450, "comment_id": 88646376, "body": "@onurcanbektas I get no error when running this code verbatim. If you&#39;re getting an error, find the code causing it and post another question elsewhere."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528817080, "post_id": 50804450, "comment_id": 88646696, "body": "Ok, thanks for the answer. (PS: I have decided to get rid of IO&#39;s and edit my orijinal code with the style of your code.)"}], "tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": true, "score": 4, "last_activity_date": 1528744886, "last_edit_date": 1528744886, "creation_date": 1528743765, "answer_id": 50804450, "question_id": 50804295, "link": "https://stackoverflow.com/questions/50804295/do-statement-under-a-where-clause/50804450#50804450", "title": "Do statement under a where clause", "body": "<p>Remember: <code>do</code>-blocks are <a href=\"https://en.wikipedia.org/wiki/Syntactic_sugar\" rel=\"nofollow noreferrer\">syntactic sugar</a> for monadic notation. This means the following applies:</p>\n\n<pre><code>do {a; b} = a &gt;&gt; b\ndp {a &lt;- b; c} = b &gt;&gt;= \\a -&gt; c\n</code></pre>\n\n<p>In other words, when using <code>do</code>-notation, you are actually producing values. This is why you can't just have a <code>do</code>-block in the top level of your <code>where</code> statement. </p>\n\n<p>The way to solve this is to put the function into a <code>do</code>-block:</p>\n\n<pre><code>decompEventBlocks :: IO [String] -&gt; IO [[String]]\ndecompEventBlocks words = do\n    -- We unwrap the IO [String], but we keep it in the do-block,\n    -- because it must be kept in a monadic context!\n    words' &lt;- words \n    let block = (takeWhile (/=\"END\") words')\n    -- This is equivalent to the guards you had in your function.\n    -- NB return :: Monad m =&gt; a -&gt; m a, to keep it in a monadic context!\n    if not $ null words'\n        then do \n          -- Since the recursion is monadic, we must bind it too:\n          rest &lt;- decompEventBlocks $ return $ drop (length block) words'\n          return $ block : rest\n        else return []\n</code></pre>\n\n<p>To learn about monads, <code>do</code>-notation, <code>&gt;&gt;=</code>, and <code>&gt;&gt;</code>, I highly reccommend reading <a href=\"http://learnyouahaskell.com/a-fistful-of-monads#getting-our-feet-wet-with-maybe\" rel=\"nofollow noreferrer\">the LYAH chapters</a> to gain a good understanding before attempting more monadic code.</p>\n"}, {"comments": [{"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528772082, "post_id": 50807290, "comment_id": 88622866, "body": "So, <code>words&#39; &lt;- words</code> is not a declaration ? but why ?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1528790916, "post_id": 50807290, "comment_id": 88629646, "body": "@onurcanbektas Becase <code>words&#39; &lt;- words; b</code> is syntactic sugar for <code>words &gt;&gt;= \\words&#39; -&gt; b</code>. I explained this in my answer."}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 0, "last_activity_date": 1528759403, "last_edit_date": 1528759403, "creation_date": 1528759032, "answer_id": 50807290, "question_id": 50804295, "link": "https://stackoverflow.com/questions/50804295/do-statement-under-a-where-clause/50807290#50807290", "title": "Do statement under a where clause", "body": "<p>As a slightly different angle on AJFarmar's answer: The only things you can have in a <code>where</code> are declarations. <code>do</code> blocks aren't declarations, they are expressions. I.e. this is the same as if you tried to write <code>where 2+5</code>. If you want to declare <code>block</code> in a <code>where</code>, it <em>must</em> be</p>\n\n<pre><code>where\n  // can have other declarations, even mutually recursive\n  block = ...\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 0, "last_activity_date": 1528960367, "last_edit_date": 1528960367, "creation_date": 1528799848, "answer_id": 50815136, "question_id": 50804295, "link": "https://stackoverflow.com/questions/50804295/do-statement-under-a-where-clause/50815136#50815136", "title": "Do statement under a where clause", "body": "<p><em>Do</em> notation is used to write expressions of the general form</p>\n\n<pre><code>ex :: Monad m =&gt; m t\nlet ex = do \n          {  x &lt;- foo         -- foo        :: Monad m =&gt; m a,   x :: a\n          ;  y &lt;- bar x       -- bar  x     :: Monad m =&gt; m b,   y :: b\n          ;  z &lt;- baz x y     -- baz  x y   :: Monad m =&gt; m c,   z :: c\n          ;  quux x y z       -- quux x y z :: Monad m =&gt; m t\n          }\n</code></pre>\n\n<p>Notice all the <code>m</code>s are the same, and <code>a</code>, <code>b</code>, <code>c</code>, ... can be different, though the <code>t</code> in the last <em>do</em> sub-expression's type and the overall <em>do</em> expression's type is the same.</p>\n\n<p>The <em>do</em> notation variables are said to be \"bound\" by the <code>&lt;-</code> construct. They come into scope at their introduction (to the left of <code>&lt;-</code>) and remain in scope for all the subsequent <em>do</em> sub-expressions.</p>\n\n<p>One built-in monadic expression available for any monad is <code>return :: Monad m =&gt; a -&gt; m a</code>. Thus <code>x &lt;- return v</code> <em>binds</em> <code>x</code> to <code>v</code>, so that <code>x</code> will be available in the subsequent sub-expressions, and will have the value of <code>v</code>.</p>\n\n<p>All the <em>do</em> variables are <em>confined</em> to that <em><code>do</code></em> block, and <em>can not</em> be used outside it. Each variable's scope is all the code in the same <code>do</code> block, below / after the variable's binding. </p>\n\n<p>This also means that <code>&lt;-</code>'s is a non-recursive binding, since the variable can't go on its right hand side as well as the left: it will be two <em>different</em> variables with the same name, in that case, and the variable on the right will have to have been established somewhere above that point.</p>\n\n<p>There are a few general patterns here:</p>\n\n<pre><code>do { _ &lt;- p ; _ &lt;- q ; r }    ===   do { p ; q ; r }\ndo { x &lt;- p ; return x }      ===   do { p }          ===   p\ndo { x &lt;- return v ; foo x }  ===   do { foo v }      ===   foo v\ndo { p ; q ; r }              ===   do { p ; do { q ; r } }\n                              ===   do { do { p ; q } ; r }\ndo { x &lt;- p ;                 ===   do { x &lt;- p ;\n     y &lt;- q x ;                          z &lt;- do { y &lt;- q x ;\n     return (foo x y) }                            return (foo x y) } ;\n                                         return z }\n</code></pre>\n\n<p>All the <code>Monad m =&gt; m a</code> expressions are just that, expressions, and so can in particular be an <code>if - then - else</code> expressions with both the consequent and the alternative branches being of the same monadic type (which is often confusing for beginners):</p>\n\n<pre><code>    do { x &lt;- p ;\n         y &lt;- if (pred x) then (foo x) else (bar x) ;\n         return (baz x y) }\n</code></pre>\n\n<p><em>update:</em> One of the main points of the monad is its total separation of effects from the pure calculations. Once <em>in</em> a monad, you can't <em>\"get out\"</em>. Monadic computations can use pure calculations, but not vice versa.</p>\n"}], "owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 695, "favorite_count": 0, "accepted_answer_id": 50804450, "answer_count": 4, "score": -1, "last_activity_date": 1528960367, "creation_date": 1528743092, "last_edit_date": 1528959439, "question_id": 50804295, "link": "https://stackoverflow.com/questions/50804295/do-statement-under-a-where-clause", "title": "Do statement under a where clause", "body": "<p>I'm trying to convert <em><code>IO [String]</code></em> to <code>[String]</code> with <em><code>&lt;-</code></em> binding; however, I need to use a <code>do</code> block to do that under a <code>where</code> statement, but Haskell complains about the indentation all the time. Here is the code:</p>\n\n<pre><code>decompEventBlocks :: IO [String] -&gt; IO [[String]]\ndecompEventBlocks words\n | words' /= [] = block : (decompEventBlocks . drop $ (length block) words')\n | otherwise = []\n  where \n   do\n    words' &lt;- words\n    let block = (takeWhile (/=\"END\") words')\n</code></pre>\n\n<p>What is the reason for that ? And how can we use <em><code>do</code></em> block in a <em><code>where</code></em> statement ? Moreover, is there any chance that we can have some statements before the guards ?</p>\n"}, {"tags": ["haskell", "type-level-computation"], "answers": [{"tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 3, "last_activity_date": 1528741747, "creation_date": 1528741747, "answer_id": 50803963, "question_id": 50803671, "link": "https://stackoverflow.com/questions/50803671/index-a-heterogeneous-list/50803963#50803963", "title": "Index a Heterogeneous List", "body": "<p>The cases of your <code>fromIndex</code> have different types! They need to be inside the instances</p>\n\n<pre><code>class IndexType (n :: Nat) (xs :: [Type]) (i :: Type) | n xs -&gt; i where\n   fromIndex :: Natural n -&gt; HList xs -&gt; i\n\n instance IndexType Z (x ': xs) x where\n   fromIndex Zero (Cons x _) = x\n\n instance IndexType n xs a =&gt; IndexType (S n) (x ': xs) a where\n   fromIndex (Succ n) (Cons _ xs) = fromIndex n xs\n</code></pre>\n\n<p>(I've shuffled around slightly the type of <code>fromIndex :: Natural n -&gt; HList xs -&gt; i</code>. That doesn't actually change anything - your solution works just as well, albeit with more confusing error messages if you call <code>fromIndex</code> in an unexpected context.) </p>\n"}, {"tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 0, "last_activity_date": 1554344264, "last_edit_date": 1554344264, "creation_date": 1528763608, "answer_id": 50807768, "question_id": 50803671, "link": "https://stackoverflow.com/questions/50803671/index-a-heterogeneous-list/50807768#50807768", "title": "Index a Heterogeneous List", "body": "<p>I'd define the following:</p>\n\n<pre><code>-- The type of numbers n such that xs !! n = x\n-- Compare to Nat\ndata Elem (x :: k) (xs :: [k]) where\n  Here  :: Elem x (x : xs)\n  There :: Elem x xs -&gt; Elem x (y : xs)\n</code></pre>\n\n<p>And then you find that <code>HList</code>s are isomorphic to \"indexing functions\" (in the same way <code>Vect n a</code> is isomorphic to <code>Fin n -&gt; a</code>) involving this type:</p>\n\n<pre><code>indexHList :: forall xs. HList xs -&gt; (forall x. Elem x xs -&gt; x)\nindexHList (Cons x _) Here = x\nindexHList (Cons _ xs) (There i) = indexHList xs i\nindexHList Singleton impossible = case impossible of {}\n\n-- unindexHList ::ish forall xs. (forall x. Elem x xs -&gt; x) -&gt; HList xs\n-- is a bit more work (and doesn't really have that type)\n-- but is conceptually the other half of the isomorphism.\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>xs :: HList [Int, String, HList '[]]\nxs = Cons 5 $ Cons \"hello\" $ Cons Singleton $ Singleton\n-- Here :: Elem Int (Int:_)\nindexHList xs Here == 5\n-- Here :: Elem String (String:_)\n-- There Here :: Elem String (_:String:_)\nindexHList xs (There Here) == \"hello\"\n</code></pre>\n\n<p>Compared to your <code>class</code>-based technique, <code>Elem x xs</code> is basically <code>exists n. (Natural n, IndexType (Natural n) (HList xs) x)</code>. Being a data type that you can inspect, it is easier to manipulate than the class.</p>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 193, "favorite_count": 0, "accepted_answer_id": 50803963, "answer_count": 2, "score": 1, "last_activity_date": 1554344264, "creation_date": 1528740380, "question_id": 50803671, "link": "https://stackoverflow.com/questions/50803671/index-a-heterogeneous-list", "title": "Index a Heterogeneous List", "body": "<p>I built a heterogeneous List in Haskell using some type level programming.</p>\n\n<pre><code>data HList a where\n  Singleton :: HList '[]\n  Cons :: h -&gt; HList t -&gt; HList (h ': t)\n</code></pre>\n\n<p>Now I would like to be able to index this list, however there are some problems with types that are making this very difficult for me.  I can get the head or tail of this list very easily</p>\n\n<pre><code>head :: HList (h ': t) -&gt; h\nhead (Cons a _) = a\n\ntail :: HList (h ': t) -&gt; HList t\ntail (Cons _ b) = b\n</code></pre>\n\n<p>However indexing the list is very different because the type of the output depends on what index we pass.  So na\u00efvely our type would look something like:</p>\n\n<pre><code>fromIndex :: (Num a) =&gt; a -&gt; (HList b) -&gt; ???\n</code></pre>\n\n<p>However determining the <code>???</code> is rather hard.  So instead of taking a <code>Num</code> we are going to have to take something else.  My idea (code below) was to make a new <code>Natural</code> and an <code>IndexType</code> class with a functional dependency which would allow us to find the type of the result just from the types of the input.</p>\n\n<pre><code>{-# Language GADTs, DataKinds, TypeOperators, FunctionalDependencies, FlexibleInstances, FlexibleContexts, UndecidableInstances #-}\n\ndata Nat = Z | S Nat\n\ndata Natural a where\n  Zero :: Natural 'Z\n  Succ :: Natural a -&gt; Natural ('S a)\n\ndata HList a where\n Singleton :: HList '[]\n Cons :: h -&gt; HList t -&gt; HList (h ': t)\n\nclass IndexType a b c | a b -&gt; c\ninstance IndexType (Natural 'Z) (HList (h ': t)) h\ninstance IndexType (Natural n) (HList t) a =&gt; IndexType (Natural ('S n)) (HList (h ': t)) a\n\nfromIndex :: (IndexType (Natural n) (HList l) a) =&gt; (Natural n) -&gt; (HList l) -&gt; a\nfromIndex (Zero) (Cons x Singleton) = x\nfromIndex (Succ a) (Cons _ (xs)) = fromIndex a xs\n</code></pre>\n\n<p>Our <code>IndexType</code> class does work.  If I test just the type class</p>\n\n<pre><code>class Test a | -&gt; a\n  where test :: a\ninstance (IndexType (Natural ('S ('S ('S 'Z)))) (HList (Int ': String ': Char ': (Int -&gt; String) ': Int ': '[])) a) =&gt; Test a\n</code></pre>\n\n<p>We get the correct result:</p>\n\n<pre><code>*Main&gt; :t test\ntest :: Int -&gt; String\n</code></pre>\n\n<p>However ghc is unable to verify our type signature and we get the rather monolithic error:</p>\n\n<pre><code>test.hs:28:39: error:\n    \u2022 Could not deduce: h ~ a\n      from the context: n ~ 'Z\n        bound by a pattern with constructor: Zero :: Natural 'Z,\n                 in an equation for \u2018fromIndex\u2019\n        at test.hs:28:12-15\n      or from: l ~ (h : t)\n        bound by a pattern with constructor:\n                   Cons :: forall h (t :: [*]). h -&gt; HList t -&gt; HList (h : t),\n                 in an equation for \u2018fromIndex\u2019\n        at test.hs:28:19-34\n      or from: t ~ '[]\n        bound by a pattern with constructor: Singleton :: HList '[],\n                 in an equation for \u2018fromIndex\u2019\n        at test.hs:28:26-34\n      \u2018h\u2019 is a rigid type variable bound by\n        a pattern with constructor:\n          Cons :: forall h (t :: [*]). h -&gt; HList t -&gt; HList (h : t),\n        in an equation for \u2018fromIndex\u2019\n        at test.hs:28:19-34\n      \u2018a\u2019 is a rigid type variable bound by\n        the type signature for:\n          fromIndex :: forall (n :: Nat) (l :: [*]) a.\n                       IndexType (Natural n) (HList l) a =&gt;\n                       Natural n -&gt; HList l -&gt; a\n        at test.hs:27:1-81\n    \u2022 In the expression: x\n      In an equation for \u2018fromIndex\u2019:\n          fromIndex (Zero) (Cons x Singleton) = x\n    \u2022 Relevant bindings include\n        x :: h (bound at test.hs:28:24)\n        fromIndex :: Natural n -&gt; HList l -&gt; a (bound at test.hs:28:1)\n   |\n28 | fromIndex (Zero) (Cons x Singleton) = x\n   |                                       ^\n\ntest.hs:29:36: error:\n    \u2022 Could not deduce (IndexType (Natural a1) (HList t) a)\n        arising from a use of \u2018fromIndex\u2019\n      from the context: IndexType (Natural n) (HList l) a\n        bound by the type signature for:\n                   fromIndex :: forall (n :: Nat) (l :: [*]) a.\n                                IndexType (Natural n) (HList l) a =&gt;\n                                Natural n -&gt; HList l -&gt; a\n        at test.hs:27:1-81\n      or from: n ~ 'S a1\n        bound by a pattern with constructor:\n                   Succ :: forall (a :: Nat). Natural a -&gt; Natural ('S a),\n                 in an equation for \u2018fromIndex\u2019\n        at test.hs:29:12-17\n      or from: l ~ (h : t)\n        bound by a pattern with constructor:\n                   Cons :: forall h (t :: [*]). h -&gt; HList t -&gt; HList (h : t),\n                 in an equation for \u2018fromIndex\u2019\n        at test.hs:29:21-31\n    \u2022 In the expression: fromIndex a xs\n      In an equation for \u2018fromIndex\u2019:\n          fromIndex (Succ a) (Cons _ (xs)) = fromIndex a xs\n   |\n29 | fromIndex (Succ a) (Cons _ (xs)) = fromIndex a xs\n   |                                    ^^^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>Can the index function be built?  Is there a way to get GHC to deduce that my type signature is correct?</p>\n"}, {"tags": ["haskell", "cabal", "cabal-install"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1528736961, "post_id": 50801998, "comment_id": 88611662, "body": "I suspect this information might be in <code>.cabal&#47;config</code>, but I haven&#39;t found anything yet."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1528737697, "post_id": 50801998, "comment_id": 88611981, "body": "You can ask with <code>ghc-pkg list --global</code> to get the location of the package list and <code>ghc-pkg describe --global &lt;package-name&gt;</code> to get further details on the files created for that package."}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 2, "last_activity_date": 1528742075, "creation_date": 1528742075, "answer_id": 50804040, "question_id": 50801998, "link": "https://stackoverflow.com/questions/50801998/where-does-cabal-install-a-package-globally-in-mac/50804040#50804040", "title": "Where does cabal install a package globally in mac?", "body": "<p>There is no one place GHC stores global data - it depends on configuration and that will vary by where you got GHC from (nixpkgs, brew, ports, raw from GHCHQ, etc).  For your particular case you can get information as described by @DanielWagner:</p>\n\n<pre><code>$ ghc-pkg describe unix --global\n</code></pre>\n\n<p>And some simple shell scripting can extract the specific information you desire:</p>\n\n<pre><code>ghc-pkg describe unix --global | egrep '^pkgroot' | cut -d' ' -f2\n\"/usr/local/Cellar/ghc/8.4.1/lib/ghc-8.4.1\"\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>% nix-shell -p ghc\n$ ghc-pkg describe unix --global | egrep '^pkgroot' | cut -d' ' -f2\n\"/nix/store/z0ypzmbhn6m0l2adzm8szcd72z7kwy04-ghc-8.0.2/lib/ghc-8.0.2\"\n</code></pre>\n"}], "owner": {"reputation": 792, "user_id": 1262612, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/1c99783dc7545216b0a5baf9b9948c37?s=128&d=identicon&r=PG", "display_name": "Bruno", "link": "https://stackoverflow.com/users/1262612/bruno"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 512, "favorite_count": 0, "accepted_answer_id": 50804040, "answer_count": 1, "score": 0, "last_activity_date": 1528742075, "creation_date": 1528733570, "question_id": 50801998, "link": "https://stackoverflow.com/questions/50801998/where-does-cabal-install-a-package-globally-in-mac", "title": "Where does cabal install a package globally in mac?", "body": "<p>In MacOS, if I execute</p>\n\n<pre><code>cabal install foo --global\n</code></pre>\n\n<p>where does <code>cabal</code> install the foo package?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1528733443, "post_id": 50801920, "comment_id": 88609870, "body": "But the error that is shown, is not in your code."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1528733543, "post_id": 50801920, "comment_id": 88609930, "body": "Post the full code leading to the error. Also, why do you use <code>do</code> notation for lists -- it&#39;s not wrong but quite uncommon. Finally, note that <code>return a ++ b</code> parses as <code>(return a) ++ (b)</code> which in your case is equivalent to <code>a : b</code>."}, {"owner": {"reputation": 61, "user_id": 9859056, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9420a1f0129fedfa2637cd2740b1d653?s=128&d=identicon&r=PG", "display_name": "Peter", "link": "https://stackoverflow.com/users/9859056/peter"}, "edited": false, "score": 0, "creation_date": 1528733847, "post_id": 50801920, "comment_id": 88610079, "body": "Williem: my bad, it&#39;s the correct error now. chi: I just think it looks tidy, how would you style it? Thanks for the return thing, corrected that, still get the error though"}, {"owner": {"reputation": 61, "user_id": 9859056, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9420a1f0129fedfa2637cd2740b1d653?s=128&d=identicon&r=PG", "display_name": "Peter", "link": "https://stackoverflow.com/users/9859056/peter"}, "edited": false, "score": 0, "creation_date": 1528734121, "post_id": 50801920, "comment_id": 88610212, "body": "Not using do solved the problem.... Not sure why"}], "answers": [{"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 3, "last_activity_date": 1528735608, "creation_date": 1528735608, "answer_id": 50802545, "question_id": 50801920, "link": "https://stackoverflow.com/questions/50801920/haskell-lists-error/50802545#50802545", "title": "Haskell lists error", "body": "<p>When you have</p>\n\n<pre><code>v &lt;- expr\n</code></pre>\n\n<p>in a <code>do</code> block, then <code>expr</code> must have type <code>m a</code> (for some monad <code>m</code> and type <code>a</code>) and <code>v</code> then has type <code>a</code>.</p>\n\n<p>For example, in</p>\n\n<pre><code>str &lt;- getLine\n</code></pre>\n\n<p><code>getLine :: IO String</code> and <code>str :: String</code> (our monad <code>m</code> is played by <code>IO</code>, our <code>a</code> is played by <code>String</code>).</p>\n\n<p>In your code you have</p>\n\n<pre><code>dupE &lt;- varCheck d\n</code></pre>\n\n<p>We get <code>varCheck d :: [Error]</code>. <code>[Error]</code> is the same as <code>[] Error</code>, so <code>m = []</code> and <code>a = Error</code>; thus <code>dupE :: Error</code>.</p>\n\n<p>If you just want to concatenate the lists returned from <code>varCheck</code> and <code>nameChecking</code>, there's no point in using <code>&lt;-</code>, which is used specifically to \"extract\" a single element from a list (or loop over all elements, really). Instead you can do</p>\n\n<pre><code>checkProgram (Program n d b) = do\n  let dupE = varCheck d\n  let undefE = nameChecking d b\n  undefE ++ dupE\n</code></pre>\n\n<p>But now you're not using <code>&lt;-</code> at all, so why bother with a <code>do</code> block?</p>\n\n<pre><code>checkProgram (Program n d b) =\n  let dupE   = varCheck d\n      undefE = nameChecking d b\n  in\n  undefE ++ dupE\n</code></pre>\n\n<p>Or, if you prefer <code>where</code>:</p>\n\n<pre><code>checkProgram (Program n d b) = undefE ++ dupE\n  where dupE   = varCheck d\n        undefE = nameChecking d b\n</code></pre>\n"}], "owner": {"reputation": 61, "user_id": 9859056, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9420a1f0129fedfa2637cd2740b1d653?s=128&d=identicon&r=PG", "display_name": "Peter", "link": "https://stackoverflow.com/users/9859056/peter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "accepted_answer_id": 50802545, "answer_count": 1, "score": -2, "last_activity_date": 1528735608, "creation_date": 1528733310, "last_edit_date": 1528733594, "question_id": 50801920, "link": "https://stackoverflow.com/questions/50801920/haskell-lists-error", "title": "Haskell lists error", "body": "<p>I have this:</p>\n\n<pre><code>varCheck :: Defs -&gt; [Error]\nnameChecking :: Defs -&gt; Body -&gt; [Error]\n\ncheckProgram :: Program -&gt; [Error]\ncheckProgram (Program n d b)  = do\n  dupE &lt;- varCheck d\n  undefE &lt;- nameChecking d b\n  return undefE ++ dupE\n</code></pre>\n\n<p>And when i Try to compile i get this error:</p>\n\n<pre><code>Couldn't match expected type \u2018[Error]\u2019 with actual type \u2018Error\u2019\nIn the second argument of \u2018(++)\u2019, namely \u2018dupE\u2019\nIn a stmt of a 'do' block: return undefE ++ dupE\n</code></pre>\n\n<p>I really dont underestand why it treats dupE as a single element.\nThanks!</p>\n"}, {"tags": ["haskell", "monad-transformers"], "answers": [{"comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1528729582, "post_id": 50800738, "comment_id": 88607558, "body": "Ah, that makes sense. I hope I don&#39;t bother you too much with my stupid questions."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1528731853, "post_id": 50800738, "comment_id": 88608939, "body": "No problem! These are very good questions, both in matter and form."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 3, "last_activity_date": 1528729238, "creation_date": 1528729238, "answer_id": 50800738, "question_id": 50800466, "link": "https://stackoverflow.com/questions/50800466/not-recognizing-a-type-as-an-associated-type-of-a-monad-inside-a-transformer-sta/50800738#50800738", "title": "Not recognizing a type as an associated type of a monad inside a transformer stack", "body": "<p><code>initMenuArt</code> is using <code>GLFW.defaultWindowConfig</code>, which is a GLFW function.</p>\n\n<p><code>GPipe</code> defines an interface parameterized by a <code>ctx</code> type, and <code>GPipe-GLFW</code> implements that interface by instantiating <code>ctx</code> with <code>GLFW.Handle</code>.</p>\n\n<p>Thus <code>initMenuArt</code> should be specialized accordingly:</p>\n\n<pre><code>initMenuArt\n    :: (ArtState os a)\n    =&gt; Maybe a \n    -&gt; Processor GLFW.Handle os (Either String (MenuArt os))\n</code></pre>\n"}], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 34, "favorite_count": 0, "accepted_answer_id": 50800738, "answer_count": 1, "score": 3, "last_activity_date": 1528729238, "creation_date": 1528728480, "question_id": 50800466, "link": "https://stackoverflow.com/questions/50800466/not-recognizing-a-type-as-an-associated-type-of-a-monad-inside-a-transformer-sta", "title": "Not recognizing a type as an associated type of a monad inside a transformer stack", "body": "<p>I'm playing around with OpenGL in general and Haskell library named GPipe in particular. I have a monad transformer stack with <code>IO</code> at the bottom, then the <code>ContextT</code> transformer from the library, then a <code>StateT</code> because some state is required, and finally a <code>newtype Processor</code> because simple <code>type</code> would produce hideous error messages for such a stack. That's the general idea. However, the code below doesn't typecheck:</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE PackageImports #-}\n{-# LANGUAGE TemplateHaskell #-}\nmodule Main where\n\nimport Control.Lens\nimport Control.Monad.State\nimport Control.Monad.Trans\nimport Control.Monad.Except\n\nimport qualified \"GPipe\" Graphics.GPipe as GP\nimport qualified \"GPipe-GLFW\" Graphics.GPipe.Context.GLFW as GLFW\n\n---- State and Processor types ----\n\nclass ArtState os as | as -&gt; os where\n    event :: GP.ContextHandler ctx =&gt; as -&gt; Processor ctx os (as, Maybe e)\n    present :: GP.ContextHandler ctx =&gt; as -&gt; Processor ctx os as\n    window :: Lens' as (WindowType os)\n\ndata ProgramState = ProgramState\n\nnewtype GP.ContextHandler ctx =&gt; Processor ctx os a = Processor {\n    runProcessor :: StateT ProgramState (GP.ContextT ctx os IO) a\n}\n\n---- MenuArt things ----\n\ntype WindowType os = GP.Window os GP.RGBFloat GP.Depth\n\ndata MenuArt os = MenuArt {\n    _maWindow :: WindowType os\n}\n\nmakeLenses ''MenuArt\n\ninstance ArtState os (MenuArt os) where\n    event ms = Processor $ return (ms, Nothing)\n    present ms = Processor $ return ms\n    window = maWindow\n\ninitMenuArt :: (ArtState os a, GP.ContextHandler ctx) =&gt;\n       Maybe a \n    -&gt; Processor ctx os (Either String (MenuArt os))\ninitMenuArt Nothing = Processor $ do\n    win &lt;- lift $ GP.newWindow (GP.WindowFormatColorDepth GP.RGB8 GP.Depth16)\n                               (GLFW.defaultWindowConfig \"foobar\")\n    return $ Right $ MenuArt {\n        _maWindow = win\n    }\ninitMenuArt (Just from) = Processor $ do\n    return $ Right $ MenuArt {\n        _maWindow = from ^. window\n    }\n\n---- events ----\n\ndata UserEvent = CloseWindow\n</code></pre>\n\n<p>The error message is as follows:</p>\n\n<pre><code>/tmp/testing/app/Main.hs:49:33: error:\n    \u2022 Couldn't match expected type \u2018GP.WindowParameters ctx\u2019\n                  with actual type \u2018GLFW.WindowConfig\u2019\n    \u2022 In the second argument of \u2018GP.newWindow\u2019, namely\n        \u2018(GLFW.defaultWindowConfig \"foobar\")\u2019\n      In the second argument of \u2018($)\u2019, namely\n        \u2018GP.newWindow\n           (GP.WindowFormatColorDepth GP.RGB8 GP.Depth16)\n           (GLFW.defaultWindowConfig \"foobar\")\u2019\n      In a stmt of a 'do' block:\n        win &lt;- lift\n                 $ GP.newWindow\n                     (GP.WindowFormatColorDepth GP.RGB8 GP.Depth16)\n                     (GLFW.defaultWindowConfig \"foobar\")\n    \u2022 Relevant bindings include\n        initMenuArt :: Maybe a\n                       -&gt; Processor ctx os (Either String (MenuArt os))\n          (bound at app/Main.hs:47:1)\n   |\n49 |                                (GLFW.defaultWindowConfig \"foobar\")\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>From what I could understand, the <code>newWindow</code> expects a <code>WindowParameters ctx</code> as its second argument, which is an associated type for the <code>ContextHandler</code> class. But the compiler doesn't see that <code>GLFW.WindowConfig</code> is <code>WindowParameters</code> for this stack for some reason. Throwing away <code>StateT</code> and <code>Processor</code> from the stack (as in the tutorial I'm working through) works, this compiles:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  GP.runContextT GLFW.defaultHandleConfig $ do\n    win &lt;- GP.newWindow (GP.WindowFormatColor GP.RGB8) (GLFW.defaultWindowConfig \"foobar\")\n    return ()\n  return ()\n</code></pre>\n\n<p>I'm doing something wrong, but can't figure out what.</p>\n"}, {"tags": ["haskell", "conduit"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1528785694, "post_id": 50800250, "comment_id": 88626790, "body": "What is that you are trying to do ?"}], "answers": [{"tags": [], "owner": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "is_accepted": false, "score": 2, "last_activity_date": 1528800691, "creation_date": 1528800691, "answer_id": 50815393, "question_id": 50800250, "link": "https://stackoverflow.com/questions/50800250/conduit-http-streaming-to-file-sinkfile-avoid-file-creation-when-http-returns/50815393#50815393", "title": "conduit http streaming to file (sinkFile) avoid file creation when http returns error", "body": "<p>From what I understand, you want to pipe the response body to some conduit if the response was successful and an alternate conduit in case the response wasn't successful.</p>\n\n<p>I believe that the easiest solution would involve \"choosing\" a conduit using the <code>if ... then ... else</code> you already have in your code - something like</p>\n\n<pre><code>module Main where\n\nimport Conduit ( printC\n               )\nimport Data.Conduit ( runConduitRes\n                    , (.|)\n                    , yield\n                    )\nimport Data.Conduit.Binary ( sinkFile\n                           )\nimport Network.HTTP.Simple ( parseRequest\n                           , httpSource\n                           , getResponseStatus\n                           , getResponseBody\n                           )\nimport Network.HTTP.Types.Status ( statusIsSuccessful\n                                 )\n\nmain :: IO ()\nmain = do\n  requestText &lt;- init &lt;$&gt; readFile \"notes/request.txt\"\n  downloadURL requestText \"notes/sink.txt\"\n\ndownloadURL :: String -&gt; FilePath -&gt; IO ()\ndownloadURL url location = do\n  request &lt;- parseRequest url\n  runConduitRes (httpSource request processResponse)\n    where\n  processResponse response =\n    if statusIsSuccessful (getResponseStatus response)\n    then (getResponseBody response) .| sinkFile location \n    else yield \"an alternate operation\" .| printC\n</code></pre>\n\n<p>You can replace the <code>yield \"an alternate operation\" .| printC</code> with another conduit that does what you actually want.</p>\n\n<p>Note that now <code>sinkFile location</code> is only executed in the success case so the failure case doesn't create any files.</p>\n"}, {"tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": true, "score": 1, "last_activity_date": 1528816428, "creation_date": 1528816428, "answer_id": 50820524, "question_id": 50800250, "link": "https://stackoverflow.com/questions/50800250/conduit-http-streaming-to-file-sinkfile-avoid-file-creation-when-http-returns/50820524#50820524", "title": "conduit http streaming to file (sinkFile) avoid file creation when http returns error", "body": "<p>Kartin's solution should work just fine. Another approach you could take would be to use <code>sinkFileCautious</code> instead of <code>sinkFile</code>, and throw a runtime exception on an invalid status code. In fact, you could replace <code>parseRequest</code> with <a href=\"https://www.stackage.org/haddock/lts-11.13/http-client-0.5.12.1/Network-HTTP-Client.html#v:parseUrlThrow\" rel=\"nofollow noreferrer\"><code>parseUrlThrow</code></a> to automatically get this behavior.</p>\n"}], "owner": {"reputation": 43, "user_id": 1600337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f785a8d919e3bbd109ece18cb69b87a9?s=128&d=identicon&r=PG", "display_name": "Barak", "link": "https://stackoverflow.com/users/1600337/barak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 50820524, "answer_count": 2, "score": 0, "last_activity_date": 1528816428, "creation_date": 1528727786, "question_id": 50800250, "link": "https://stackoverflow.com/questions/50800250/conduit-http-streaming-to-file-sinkfile-avoid-file-creation-when-http-returns", "title": "conduit http streaming to file (sinkFile) avoid file creation when http returns error", "body": "<p>What is a value that I need to return from the getSrc when the http code is unsuccessful and I wish <strong>not</strong> to create a file (by <em>sinkFile</em>)<br>\nIf i just return <em>getResponseBody res</em> the http error itself is saved into the file.</p>\n\n<pre><code>downloadURL :: String -&gt; FilePath -&gt; IO ()\ndownloadURL url location = do\n  request &lt;- parseRequest url\n  runResourceT\n         $ runConduit$  httpSource request getSrc\n         .| sinkFile location\n   where\n     getSrc res = do\n         let success = statusIsSuccessful . getResponseStatus $ res\n         if success then\n            getResponseBody res\n         else\n            ???\n</code></pre>\n"}, {"tags": ["haskell", "functional-programming"], "answers": [{"comments": [{"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 2, "creation_date": 1528727111, "post_id": 50799993, "comment_id": 88605921, "body": "You are right. I wasn&#39;t seeing that lamda expression as a whole function. I mean if the auhor were to write &quot;flip f = (\\ x y -&gt; f y x)&quot;, there would be ne problem for me.Thanks for the answer."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1528756183, "post_id": 50799993, "comment_id": 88619634, "body": "Just try to see the parentheses every time after <code>=</code>."}], "tags": [], "owner": {"reputation": 619, "user_id": 8514005, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/318a3ae487b2140f9d08079450b6903d?s=128&d=identicon&r=PG&f=1", "display_name": "JohEker", "link": "https://stackoverflow.com/users/8514005/joheker"}, "is_accepted": true, "score": 6, "last_activity_date": 1528726960, "creation_date": 1528726960, "answer_id": 50799993, "question_id": 50799888, "link": "https://stackoverflow.com/questions/50799888/how-does-myflip-f-x-y-f-y-x-work/50799993#50799993", "title": "How does myFlip f = \\ x y -&gt; f y x work?", "body": "<p>it is a lambda function. it matches the input. Like a <code>map (\\x -&gt; x+1) [1..10]</code> would match every x in the list. </p>\n\n<p>So if the function is instead of this form <code>(\\x y -&gt; f x y) p q</code> it matches on two input elements instead.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 5, "last_activity_date": 1528727589, "creation_date": 1528727589, "answer_id": 50800196, "question_id": 50799888, "link": "https://stackoverflow.com/questions/50799888/how-does-myflip-f-x-y-f-y-x-work/50800196#50800196", "title": "How does myFlip f = \\ x y -&gt; f y x work?", "body": "<p>As you have defined <code>myFlip f = \ud835\udc52\ud835\udc61\ud835\udc50\u060c\ud835\udc52\ud835\udc61\ud835\udc50\u060c</code>, you can whenever you see <code>myFlip f</code> somewhere replace it with the definition (if the parameter is called something different from <code>f</code>, you'll of course need to substitute it).</p>\n\n<p>So, the definition <code>flippedF = myFlip f</code> is equivalent to <code>flippedF = \\x y -&gt; f y x</code>, or as we'd normally write it</p>\n\n<pre><code>flippedF x y = f y x\n</code></pre>\n\n<p>(which is really just syntactic sugar for the lambda formulation). If you then evaluate <code>flippedF p q</code>, the <code>x</code> and <code>y</code> parameters are replaced with <code>p</code> and <code>q</code>, respectively, just like they would in any other function invocation.</p>\n\n<pre><code>flippedF p q \u2261 (let x = p; y = q in f y x)\n             \u2261 f q p\n</code></pre>\n"}], "owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 0, "accepted_answer_id": 50799993, "answer_count": 2, "score": 1, "last_activity_date": 1528865190, "creation_date": 1528726584, "last_edit_date": 1528865190, "question_id": 50799888, "link": "https://stackoverflow.com/questions/50799888/how-does-myflip-f-x-y-f-y-x-work", "title": "How does myFlip f = \\ x y -&gt; f y x work?", "body": "<p>In the Haskell book of Allen and Moronuki, at page 240, it is given as the implementation of the <em>flip</em> function as that</p>\n\n<pre><code>myFlip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c\nmyFlip f = \\ x y -&gt; f y x\n</code></pre>\n\n<p>However, I do not understand how does this work ? In particular, when I supply two arguments to <em>f</em> as</p>\n\n<pre><code>flippedF = flip f\nflippedF p q\n</code></pre>\n\n<p>how does Haskell matches <em>p</em> and <em>q</em> with <em>x</em> and <em>y</em> in the implementation ?</p>\n"}, {"tags": ["performance", "haskell", "stream", "monads", "ffi"], "comments": [{"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1528730527, "post_id": 50791698, "comment_id": 88608108, "body": "I&#39;d try to localize the slow part down at the FFI level. E.g. let the FFI-called function be ultimatey trivial, returning 0. Does calling it still cost a lot? How much repackaging the arguments cost? Etc."}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "reply_to_user": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1528775447, "post_id": 50791698, "comment_id": 88623544, "body": "you mean calling only <code>void f(...)</code> functions? I.e. repackaging the getters?"}, {"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1528826306, "post_id": 50791698, "comment_id": 88651259, "body": "Yes. Maybe it&#39;s the access to the arguments, or packaging the return value, what is killing the performance; for a <code>void nothing() {}</code> it might be visible. OTOH calling an external procedure just for a side effect (not passing or receiving data) would make little sense even if stream fusion is achieved, so my point may be moot."}], "answers": [{"tags": [], "owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "is_accepted": true, "score": 1, "last_activity_date": 1528816923, "last_edit_date": 1528816923, "creation_date": 1528815559, "answer_id": 50820268, "question_id": 50791698, "link": "https://stackoverflow.com/questions/50791698/squeezing-more-performance-out-of-monadic-streams-in-haskell/50820268#50820268", "title": "Squeezing more performance out of monadic streams in Haskell", "body": "<p>After deciphering GHC's assembly product for <code>RunRepeat.hs</code> I'm coming to this conclusion: GHC won't inline the call to the C function <code>step_lfsr(state_t*)</code>, whereas the C compiler will, and this makes all the difference <strong>for this toy problem</strong>.</p>\n\n<p>I can demonstrate this by forbidding inlining with the <code>__attribute__ ((noinline))</code> pragma. Overall, the C executable gets slower, hence the gap between Haskell and C closes.</p>\n\n<p>Here are the results:</p>\n\n<pre><code>=== RunRepeat =======\n#iter:    100000000\nBaseline: 0.334414\nIO:       0.325433\nfactor:   0.9731440669349967\n=== RunRepeatAlloca =======\n#iter:    100000000\nBaseline: 0.330629\nIO:       0.333735\nfactor:   1.0093942152684732\n=== RunRepeatLoop =====\n#iter:    100000000\nBaseline: 0.33195399999999997\nIO:       0.33791\nfactor:   1.0179422450098508\n</code></pre>\n\n<p>I.e. there is no penalty for FFI calls to <code>lfsr_step</code> anymore.</p>\n\n<pre><code>=== RunAvg =========\n#iter:    10000000\nBaseline: 3.4072e-2\nIO:       1.3602589999999999\nfactor:   39.92307466541442\n=== RunAvgStreaming ===\n#iter:    50000000\nBaseline: 0.191264\nIO:       0.666438\nfactor:   3.484388070938598\n</code></pre>\n\n<p>Good old lists don't fuse, hence the huge performance hit, and the <code>streaming</code> library also isn't optimal. But <code>Data.Vector.Fusion.Stream.Monadic</code> gets within 20% of the C performance:</p>\n\n<pre><code>=== RunVector =========\n#iter:    200000000\nBaseline: 0.705265\nIO:       0.843916\nfactor:   1.196594188000255\n</code></pre>\n\n<p>It has been observed already that GHC doesn't inline FFI calls: <a href=\"https://stackoverflow.com/questions/14199402/how-to-force-ghc-to-inline-ffi-calls\">\"How to force GHC to inline FFI calls?\"\n</a>.</p>\n\n<p>For situations where the benefit of inlining is so high, i.e. the workload per FFI call is so low, it might be worth looking into <a href=\"http://hackage.haskell.org/package/inline-c\" rel=\"nofollow noreferrer\"><code>inline-c</code></a>.</p>\n"}], "owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 6, "accepted_answer_id": 50820268, "answer_count": 1, "score": 12, "last_activity_date": 1528816923, "creation_date": 1528699070, "last_edit_date": 1528776971, "question_id": 50791698, "link": "https://stackoverflow.com/questions/50791698/squeezing-more-performance-out-of-monadic-streams-in-haskell", "title": "Squeezing more performance out of monadic streams in Haskell", "body": "<p>The most straightforward monadic 'stream' is just a list of monadic actions <code>Monad m =&gt; [m a]</code>. The <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Monad.html#v:sequence\" rel=\"nofollow noreferrer\"><code>sequence :: [m a] -&gt; m [a]</code></a> function evaluates each monadic action and collects the results. As it turns out, <code>sequence</code> is not very efficient, though, because it operates on lists, and the monad is an obstacle to achieving fusion in anything but the simplest cases.</p>\n\n<p><strong>The question is: What is the most efficient approach for monadic streams?</strong></p>\n\n<p>To investigate this, I provide a toy problem along with a few attempts to improve performance. The source code can be found on <a href=\"https://github.com/mcmayer/haskell-lfsr\" rel=\"nofollow noreferrer\">github</a>. The singular benchmark presented below may be misleading for more realistic problems, although I think it is a worst-case scenario of sorts, i.e. the most possible overhead per useful computation.</p>\n\n<p><strong>The toy problem</strong></p>\n\n<p>is a maximum length 16-bit <a href=\"https://en.wikipedia.org/wiki/Linear-feedback_shift_register\" rel=\"nofollow noreferrer\"><strong>L</strong>inear <strong>F</strong>eedback <strong>S</strong>hift <strong>R</strong>egister</a> (LFSR), implemented in C in a somewhat over-elaborate way, with a Haskell wrapper in the <code>IO</code> monad. 'Over-elaborate' refers to the unnecessary use of a <code>struct</code> and its <code>malloc</code> - the purpose of this complication is to make it more similar to realistic situations where all you have is a Haskell wrapper around a FFI to a C <code>struct</code> with OO-ish <code>new</code>, <code>set</code>, <code>get</code>, <code>operate</code> semantics (i.e. very much the imperative style). A typical Haskell program looks like this:</p>\n\n<pre><code>import LFSR\n\nmain = do\n    lfsr &lt;- newLFSR            -- make a LFSR object\n    setLFSR lfsr 42            -- initialise it with 42 \n    stepLFSR lfsr              -- do one update\n    getLFSR lfsr &gt;&gt;= print     -- extract the new value and print\n</code></pre>\n\n<p>The default task is to calculate the average of the values (doubles) of 10'000'000 iterations of the LFSR. This task could be part of a suite of tests to analyse the 'randomness` of this stream of 16-bit integers.</p>\n\n<p><strong>0. Baseline</strong></p>\n\n<p>The baseline is the C implementation of the average over <code>n</code> iterations:</p>\n\n<pre><code>double avg(state_t* s, int n) {\n    double sum = 0;\n    for(int i=0; i&lt;n; i++, sum += step_get_lfsr(s));\n    return sum / (double)n;\n}\n</code></pre>\n\n<p>The C implementation isn't meant to be particularly good, or fast. It just provides a meaningful computation.</p>\n\n<p><strong>1. Haskell lists</strong></p>\n\n<p>Compared to the C baseline, on this task Haskell lists are 73x slower.</p>\n\n<pre><code>=== RunAvg =========\nBaseline: 1.874e-2\nIO:       1.382488\nfactor:   73.77203842049093\n</code></pre>\n\n<p>This is the implementation (<a href=\"https://github.com/mcmayer/haskell-lfsr/blob/master/RunAvg.hs\" rel=\"nofollow noreferrer\"><code>RunAvg.hs</code></a>):</p>\n\n<pre><code>step1 :: LFSR -&gt; IO Word32\nstep1 lfsr = stepLFSR lfsr &gt;&gt; getLFSR lfsr\n\navg :: LFSR -&gt; Int -&gt; IO Double\navg lfsr n = mean &lt;$&gt; replicateM n (step1 lfsr) where\n    mean :: [Word32] -&gt; Double\n    mean vs = (sum $ fromIntegral &lt;$&gt; vs) / (fromIntegral n)\n</code></pre>\n\n<p><strong>2. Using the <a href=\"http://hackage.haskell.org/package/streaming\" rel=\"nofollow noreferrer\"><code>streaming</code></a> library</strong></p>\n\n<p>This gets us to within 9x of the baseline,</p>\n\n<pre><code>=== RunAvgStreaming ===\nBaseline: 1.9391e-2\nIO:       0.168126\nfactor:   8.670310969006241\n</code></pre>\n\n<p>(Note that the benchmarks are rather inaccurate at these short execution times.)</p>\n\n<p>This is the implementation (<a href=\"https://github.com/mcmayer/haskell-lfsr/blob/master/RunAvgStreaming.hs\" rel=\"nofollow noreferrer\"><code>RunAvgStreaming.hs</code></a>):</p>\n\n<pre><code>import qualified Streaming.Prelude as S\navg :: LFSR -&gt; Int -&gt; IO Double\navg lfsr n = do\n    let stream = S.replicateM n (fromIntegral &lt;$&gt; step1 lfsr :: IO Double)\n    (mySum :&gt; _) &lt;- S.sum stream\n    return (mySum / fromIntegral n)\n</code></pre>\n\n<p><strong>3. Using <a href=\"http://hackage.haskell.org/package/vector-0.12.0.1/docs/Data-Vector-Fusion-Stream-Monadic.html\" rel=\"nofollow noreferrer\"><code>Data.Vector.Fusion.Stream.Monadic</code></a></strong></p>\n\n<p>This gives the best performance so far, within 3x of baseline,</p>\n\n<pre><code>=== RunVector =========\nBaseline: 1.9986e-2\nIO:       4.9146e-2\nfactor:   2.4590213149204443\n</code></pre>\n\n<p>As usual, here is the implementation (<a href=\"https://github.com/mcmayer/haskell-lfsr/blob/master/RunAvgVector.hs\" rel=\"nofollow noreferrer\"><code>RunAvgVector.hs</code></a>):</p>\n\n<pre><code>import qualified Data.Vector.Fusion.Stream.Monadic as V\navg :: LFSR -&gt; Int -&gt; IO Double\navg lfsr n = do\n   let stream = V.replicateM n (step1' lfsr)\n   V.foldl (+) 0.0 stream\n</code></pre>\n\n<p>I didn't expect to find a good monadic stream implementation under <code>Data.Vector</code>. Other than providing <code>fromVector</code> and <code>concatVectors</code>, <code>Data.Vector.Fusion.Stream.Monadic</code> has very little to do with <code>Vector</code> from <code>Data.Vector</code>.</p>\n\n<p>A look at the profiling report shows that <code>Data.Vector.Fusion.Stream.Monadic</code> has a considerable space leak, but that doesn't sound right. </p>\n\n<p><strong>4. Lists aren't necessarily slow</strong></p>\n\n<p>For very simple operations lists aren't terrible at all:</p>\n\n<pre><code>=== RunRepeat =======\nBaseline: 1.8078e-2\nIO:       3.6253e-2\nfactor:   2.0053656377917912\n</code></pre>\n\n<p>Here, the for loop is done in Haskell instead of pushing it down to C (<a href=\"https://github.com/mcmayer/haskell-lfsr/blob/master/RunRepeat.hs\" rel=\"nofollow noreferrer\"><code>RunRepeat.hs</code></a>):</p>\n\n<pre><code>do\n   setLFSR lfsr 42\n   replicateM_ nIter (stepLFSR lfsr)\n   getLFSR lfsr\n</code></pre>\n\n<p>This is just a repetition of calls to <code>stepLFSR</code> without passing the result back to the Haskell layer. It gives an indication of what impact the overhead for calling the wrapper and the FFI has. </p>\n\n<p><strong>Analysis</strong></p>\n\n<p>The <code>repeat</code> example above shows that most, but not all (?), of the performance penalty comes from overhead of calling the wrapper and/or the FFI. But I'm not sure where to look for tweaks, now. Maybe this is just as good as it gets with regards to monadic streams, and in fact this is all about trimming down the FFI, now...</p>\n\n<p><strong>Sidenotes</strong></p>\n\n<ol>\n<li>The fact that LFSRs are chosen as a toy problem does not imply that Haskell isn't able to do these efficiently - see the SO question <a href=\"https://stackoverflow.com/questions/43601927/efficient-bit-fiddling-in-a-lfsr-implementation\">\"Efficient bit-fiddling in a LFSR implementation\n\"</a>.</li>\n<li>Iterating a 16-bit LFSR 10M times is a rather silly thing to do. It will take <em>at most</em> 2^16-1 iterations to reach the starting state again. In a maximum length LFSR it will take <em>exactly</em> 2^16-1 iterations.</li>\n</ol>\n\n<p><strong>Update 1</strong></p>\n\n<p>An attempt to remove the <code>withForeignPtr</code> calls can be made by introducing a\n<code>Storable</code> and then using <code>alloca :: Storable a =&gt; (Ptr a -&gt; IO b) -&gt; IO b</code> </p>\n\n<pre><code>repeatSteps :: Word32 -&gt; Int -&gt; IO Word32\nrepeatSteps start n = alloca rep where\n    rep :: Ptr LFSRStruct' -&gt; IO Word32\n    rep p = do\n        setLFSR2 p start\n        (sequence_ . (replicate n)) (stepLFSR2 p)\n        getLFSR2 p\n</code></pre>\n\n<p>where <code>LFSRStruct'</code> is </p>\n\n<pre><code>data LFSRStruct' = LFSRStruct' CUInt\n</code></pre>\n\n<p>and the wrapper is</p>\n\n<pre><code>foreign import ccall unsafe \"lfsr.h set_lfsr\"\n    setLFSR2 :: Ptr LFSRStruct' -&gt; Word32 -&gt; IO ()\n\n-- likewise for setLFSR2, stepLFSR2, ...\n</code></pre>\n\n<p>See <a href=\"https://github.com/mcmayer/haskell-lfsr/blob/master/RunRepeatAlloca.hs\" rel=\"nofollow noreferrer\">RunRepeatAlloca.hs</a> and <a href=\"https://github.com/mcmayer/haskell-lfsr/blob/master/src/LFSR.hs\" rel=\"nofollow noreferrer\">src/LFSR.hs</a>. Performance-wise this makes no difference (within timing variance).</p>\n\n<pre><code>=== RunRepeatAlloca =======\nBaseline: 0.19811199999999998\nIO:       0.33433\nfactor:   1.6875807623970283\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 2, "last_activity_date": 1528716242, "creation_date": 1528716242, "answer_id": 50796607, "question_id": 50790121, "link": "https://stackoverflow.com/questions/50790121/is-there-a-way-to-prevent-data-generics-alloy-geninstances-from-scanning-data-te/50796607#50796607", "title": "Is there a way to prevent Data.Generics.Alloy.GenInstances from scanning Data.Text.Internal?", "body": "<p>Maybe try this trick: we parameterize the <code>Expr</code> type to override the <code>Data</code> instance used for <code>Text</code> when deriving instances with alloy.</p>\n\n<pre><code>data Expr_ text\n  = BinExpr { beOp    :: BinaryOp\n            , beLeft  :: Expr_ text\n            , beRight :: Expr_ text }\n  | Name text\n  ...\n  | StringLit text\n</code></pre>\n\n<p>The rest of the code base can use this synonym, hopefully without breaking too much with type inference issues.</p>\n\n<pre><code>type Expr = Expr_ Text\n</code></pre>\n\n<p>But for <code>Data</code>-generic operations, we use a <code>newtype</code> wrapper around <code>Text</code> and make it behave like a nullary constructor, hoping alloy doesn't need the result of <code>gunfold</code> (or perhaps you could make it behave like a string using pattern synonyms).</p>\n\n<pre><code>newtype DataText = DataText Text\n\ninstance Data DataText where\n  gunfold _ f _ = f undefined\n  ...\n</code></pre>\n\n<p><code>autoGen</code> will then specialize everything at <code>DummyText</code>.</p>\n\n<p>Use <code>Data.Coerce.coerce</code> to easily convert between functions on <code>Expr_ DataText</code> and <code>Expr</code>. </p>\n\n<pre><code>coerce :: Expr_ DataText -&gt; Expr\ncoerce :: Expr -&gt; Expr_ DataText\ncoerce :: (Expr_ DataText -&gt; Expr_ DataText) -&gt; Expr -&gt; Expr\n</code></pre>\n\n<p>This might be used to write instances of alloy's type classes for <code>Expr</code>, based on the instances that were derived from you. It's a bit of boilerplate, but hopefully it can be contained and hidden without affecting the rest of the code.</p>\n"}], "owner": {"reputation": 645, "user_id": 1152525, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aRcMw.png?s=128&g=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/1152525/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47, "favorite_count": 0, "accepted_answer_id": 50796607, "answer_count": 1, "score": 5, "last_activity_date": 1528716242, "creation_date": 1528687259, "last_edit_date": 1528688039, "question_id": 50790121, "link": "https://stackoverflow.com/questions/50790121/is-there-a-way-to-prevent-data-generics-alloy-geninstances-from-scanning-data-te", "title": "Is there a way to prevent Data.Generics.Alloy.GenInstances from scanning Data.Text.Internal?", "body": "<p>I need to do transformations on an AST; here's a portion of the AST:</p>\n\n<pre><code>data Expr\n  = BinExpr { beOp    :: BinaryOp\n            , beLeft  :: Expr\n            , beRight :: Expr }\n  | Name Text\n  | IntegerLit Integer\n  | StringLit Text\n  deriving (Data, Typeable)\n</code></pre>\n\n<p>And this is a fairly complex AST, so there are many types involved.</p>\n\n<p>I'm using <a href=\"http://hackage.haskell.org/package/alloy-1.2.2\" rel=\"noreferrer\">alloy</a> to generate the generic transformations, specifically:</p>\n\n<pre><code>autoGen :: IO ()\nautoGen = do\n  createDirectoryIfMissing True baseDir\n  writeInstancesTo inst doc imports targetFile\n  where\n    inst = allInstances GenWithoutOverlapped\n    doc = [genInstance (undefined :: Doc)]\n    imports = header ++ instanceImports\n</code></pre>\n\n<p>Now, this was fine when using String, but I'm trying to migrate to Data.Text. When the code generation runs, it's reading into the internals of Data.Text like so:</p>\n\n<pre><code>instance (Alloy ([(GHC.Types.Char)]) (f :- ops) BaseOp) =&gt;\n     Alloy ((Data.Text.Internal.Text)) BaseOp (f :- ops) where\n  transform _ ops (Data.Text.Internal.pack a0)\n      =  Data.Text.Internal.pack\n     (transform ops BaseOp (a0))\n</code></pre>\n\n<p>I believe <code>pack</code> is tied to GHC internals so that's not a valid pattern match, and regardless, having the code mucking with the internals of a Data.Text is liable to break the invariants. (Edit: it looks like there's an <code>instance Data Text where gfoldl f z txt = z pack</code>f<code>(unpack txt)</code> declaration, but regardless, I don't need/want to traverse Text values.)</p>\n\n<p>Is there a way to force Alloy to treat a type as atomic? I'm hoping to avoid a newtype to wrap Text as all the code working with ASTs would need to deal with it, which rather defeats the purpose of using generics to avoid boilerplate.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528666410, "post_id": 50788238, "comment_id": 88582782, "body": "Well a multiway-if is iimply those guards, without the if."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1528667089, "post_id": 50788238, "comment_id": 88582936, "body": "If you really want to use that, you can turn on that extension putting <code>{-# LANGUAGE MultiWayIf #-}</code> at the top of your file. (You can also turn it on in the  stack config file -- I always forget the exact syntax, though)"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1528730429, "post_id": 50788265, "comment_id": 88608049, "body": "His file works fine as-is (no edits needed) with <code>-XMultiWayIf</code> turned on, as suggested by the error message."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1528816490, "post_id": 50788265, "comment_id": 88646348, "body": "I believe the <code>-X</code> flags should only be used for GHCi. When compiling a proper module, you should use <code>LANGUAGE</code> pragmas or <i>maybe</i> a <code>default-extensions</code> field in a <code>.cabal</code> file. The latter is useful when your package uses a lot of extensions and uses them everywhere, but it makes it a bit harder for readers to see what extensions are in play in a module."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 14, "last_activity_date": 1528730740, "last_edit_date": 1528730740, "creation_date": 1528666568, "answer_id": 50788265, "question_id": 50788238, "link": "https://stackoverflow.com/questions/50788238/haskell-multi-way-if-expressions-need-multiwayif-turned-on/50788265#50788265", "title": "Haskell: Multi-way if-expressions need MultiWayIf turned on", "body": "<p>Well in Haskell there is only an <code>if</code>-<code>then</code>-<code>else</code> clause. If you want these \"<em>multi-if</em>\" statements, you use a <em>guard</em>.</p>\n\n<h1>Using <em>guards</em></h1>\n\n<p>Your syntax is already rather close to a guard, except that it does <em>not</em> have an <strong><code>if</code></strong> keyword, and that the equality sign (<strong><code>=</code></strong>) is used to denote what the output is in that case.</p>\n\n<p>So you should rewrite it to:</p>\n\n<pre><code>analyzeGold :: Int -&gt; String\nanalyzeGold standard\n    | standard == 999 <b>=</b> \"Wow! 999 standard!\"\n    | standard == 750 <b>=</b> \"Great! 750 standard.\"\n    | standard == 585 <b>=</b> \"Not bad! 585 standard.\"\n    | otherwise <b>=</b> \"I don't know such a standard...\"</code></pre>\n\n<p>See <a href=\"http://learnyouahaskell.com/syntax-in-functions#guards-guards\" rel=\"noreferrer\">here [lyah]</a> for some information about the syntax and use of guards.</p>\n\n<h1>Using <em>pattern</em>s</h1>\n\n<p>Since your checks each time check equality of integer literals, we can actually move the checks from the guards to the patterns, like:</p>\n\n<pre><code>analyzeGold :: Int -&gt; String\nanalyzeGold <b>999</b> = \"Wow! 999 standard!\"\nanalyzeGold <b>750</b> = \"Great! 750 standard.\"\nanalyzeGold <b>585</b> = \"Not bad! 585 standard.\"\nanalyzeGold <b>_</b> = \"I don't know such a standard...\"</code></pre>\n\n<p>Here the underscore (<code>_</code>) acts as a <em>wildcard</em> that matches all values (well all patterns that are not matched by earlier clauses).</p>\n\n<h1>Using the <code>MultiWayIf</code> extension</h1>\n\n<p>You can also enable a GHCi extension to enable this extension, by writing a pragma in the head of the file, or by using <code>-XMultiWayIf</code> when invoking the interpreter. So:</p>\n\n<pre><code><b>{-# LANGUAGE MultiWayIf #-}</b>\n\nanalyzeGold :: Int -&gt; String\nanalyzeGold standard =\n    if | standard == 999 -&gt; \"Wow! 999 standard!\"\n       | standard == 750 -&gt; \"Great! 750 standard.\"\n       | standard == 585 -&gt; \"Not bad! 585 standard.\"\n       | otherwise -&gt; \"I don't know such a standard...\"</code></pre>\n\n<p>Or:</p>\n\n<pre><code>$ ghci <b>-XMultiWayIf</b>\nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; :{\nPrelude| analyzeGold :: Int -&gt; String\nPrelude| analyzeGold standard =\nPrelude|     if | standard == 999 -&gt; \"Wow! 999 standard!\"\nPrelude|        | standard == 750 -&gt; \"Great! 750 standard.\"\nPrelude|        | standard == 585 -&gt; \"Not bad! 585 standard.\"\nPrelude|        | otherwise -&gt; \"I don't know such a standard...\"\nPrelude| :}</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 7436491, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9416a59b4c1f652a650de5b07cfdebf?s=128&d=identicon&r=PG&f=1", "display_name": "Diyor Ismatullaev", "link": "https://stackoverflow.com/users/7436491/diyor-ismatullaev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2455, "favorite_count": 0, "accepted_answer_id": 50788265, "answer_count": 1, "score": 1, "last_activity_date": 1528730740, "creation_date": 1528666370, "question_id": 50788238, "link": "https://stackoverflow.com/questions/50788238/haskell-multi-way-if-expressions-need-multiwayif-turned-on", "title": "Haskell: Multi-way if-expressions need MultiWayIf turned on", "body": "<p>Trying to build with \"stack build\":</p>\n\n<pre><code>module Main where\n\n\nanalyzeGold :: Int -&gt; String\nanalyzeGold standard =\n  if | standard == 999 -&gt; \"Wow! 999 standard!\"\n     | standard == 750 -&gt; \"Great! 750 standard.\"\n     | standard == 585 -&gt; \"Not bad! 585 standard.\"\n     | otherwise -&gt; \"I don't know such a standard...\"\n\nmain :: IO ()\nmain = do\n  putStrLn (analyzeGold 999)\n</code></pre>\n\n<p>And I got: </p>\n\n<pre><code>    Multi-way if-expressions need MultiWayIf turned on\n  |\n6 |   if | standard == 999 -&gt; \"Wow! 999 standard!\"\n  |   ^^\n</code></pre>\n\n<p>How to fix it?</p>\n\n<p>stack 1.7.1, GHC 8.2.2</p>\n"}, {"tags": ["haskell", "dependent-type", "type-theory"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1528664243, "post_id": 50787796, "comment_id": 88582279, "body": "At least until somewhat recently, this kind of stuff didn&#39;t even work properly with GHC&#39;s built-in type-level numbers. Pragmatically speaking, this might still be one of the places where an <code>unsafeCoerce</code> is the most sensible fix."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1528672498, "post_id": 50787796, "comment_id": 88583981, "body": "@leftaroundabout The questioneer isn&#39;t using <code>TypeLits</code>."}], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 2, "creation_date": 1528666362, "post_id": 50788119, "comment_id": 88582773, "body": "Note that this is inefficient. <code>(:~:)</code> is a singleton type, but these proofs walk around the <code>Nat</code>s involved quite a bit before terminating. In real code, I\u2019d rename <code>sumComm</code> to something else (but still <i>have</i> it so the compiler checks it), and write <code>sumComm :: forall n m. n + m :~: m + n; sumComm = unsafeCoerce Refl -- proof at ...</code>. Note the singleton arguments have been nixed. This also one of the nice-ish things about &quot;Hasochism&quot;. You have very specific control over &quot;erasure&quot;: everything is erased unless you reify it."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1528666806, "post_id": 50788119, "comment_id": 88582871, "body": "@HTNW Agreed. I wish GHC would perform this optimization itself (after having run a termination checker on the proofs)."}, {"owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 0, "creation_date": 1528668844, "post_id": 50788119, "comment_id": 88583325, "body": "this sure does seem to do the trick! I always kind of get a bit disappointed when I delve into dependent types and it turns out that to do anything really interesting it seems you have to resort to singletons which seem really hacky to me. I guess this is as good an excuse as any to start looking more at idris or agda maybe ^^"}, {"owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 0, "creation_date": 1528668889, "post_id": 50788119, "comment_id": 88583335, "body": "I will say though, it&#39;s really cool to see how closely this code resembles the theorems and proofs we went through in my class on first order logic last semester!"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1528672676, "post_id": 50788119, "comment_id": 88584011, "body": "&quot;To do anything really interesting it seems you have to resort to singletons which seem really hacky to me.&quot; The GHC team agrees with you, which is why they&#39;re working on adding full dependent types to the language... some time in the next 5 years or so"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1528672870, "post_id": 50788119, "comment_id": 88584042, "body": "It&#39;s also worth noting that Haskell&#39;s types have a key difference to first order logic: that every statement is provable (using eg <code>let x = x in x</code>). Languages designed for theorem proving like Coq and Agda typically come equipped with a termination checker because &quot;everything&#39;s true&quot; is not a very desirable quality for a theorem prover"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1528673047, "post_id": 50788119, "comment_id": 88584071, "body": "@HNTW Richard Eisenberg suggests using rewrite rules to implement your <code>unsafeCoerce</code> idea, so you don&#39;t need to duplicate and rename your proofs. <a href=\"https://typesandkinds.wordpress.com/2016/07/24/dependent-types-in-haskell-progress-report/\" rel=\"nofollow noreferrer\">typesandkinds.wordpress.com/2016/07/24/&hellip;</a>"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1528677732, "post_id": 50788119, "comment_id": 88584787, "body": "@BenjaminHodgson That would keep the singleton arguments around, meaning that e.g. <code>append</code> above would still need to pass arguments to <code>sumComm</code>. Whether the arguments are actually used depends on optimization level, so it is never safe to dummy them out. It just seems harder uglier than keeping everything at the type level. Another (unimplemented) idea that I have is an (overloaded) function <code>proof :: (Sing t1 -&gt; ... -&gt; l :~: r) -&gt; l :~: r; proof _ = unsafeCoerce Refl</code> with usage like <code>sumComm :: forall n m. (n + m) :~: (m + n); sumComm = proof $ \\(n :: SNat n) (m :: SNat m) -&gt; _</code>"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 7, "last_activity_date": 1528665881, "last_edit_date": 1528665881, "creation_date": 1528665456, "answer_id": 50788119, "question_id": 50787796, "link": "https://stackoverflow.com/questions/50787796/proving-commutativity-of-type-level-addition-of-natural-numbers/50788119#50788119", "title": "Proving commutativity of type level addition of natural numbers", "body": "<p>Here's a full solution. Warning: includes some hasochism.</p>\n\n<p>We start as in the original code.</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies, DataKinds, TypeOperators, GADTs, PolyKinds #-}\n{-# OPTIONS -Wall -O2 #-}\nmodule CommutativeSum where\n\ndata Nat where\n    Z :: Nat\n    S :: Nat -&gt; Nat\n\ntype family (a :: Nat) + (b :: Nat) :: Nat where\n    'Z + n = n\n    'S m + n = 'S (m + n)\n\ndata Vector (n :: Nat) a where\n    Nil :: Vector 'Z a\n    Cons :: a -&gt; Vector n a -&gt; Vector ('S n) a\n</code></pre>\n\n<p>The old append which type checks immediately.</p>\n\n<pre><code>append :: Vector m a -&gt; Vector n a -&gt; Vector (m + n) a\nappend Nil xs         = xs\nappend (Cons x xs) ys = x `Cons` append xs ys\n</code></pre>\n\n<p>For the other append, we need to prove that addition is commutative.\nWe start by defining equality at the type level, exploiting a GADT.</p>\n\n<pre><code>-- type equality, also works on Nat because of PolyKinds\ndata a :~: b where\n   Refl :: a :~: a\n</code></pre>\n\n<p>We introduce a singleton type, so that we can pass <code>Nat</code>s and also pattern match on them.</p>\n\n<pre><code>-- Nat singleton, to reify type level parameters\ndata NatI (n :: Nat) where\n  ZI :: NatI 'Z\n  SI :: NatI n -&gt; NatI ('S n)\n</code></pre>\n\n<p>We can associate to each vector its length as a singleton <code>NatI</code>.</p>\n\n<pre><code>-- length of a vector as a NatI\nvecLengthI :: Vector n a -&gt; NatI n\nvecLengthI Nil = ZI\nvecLengthI (Cons _ xs) = SI (vecLengthI xs)\n</code></pre>\n\n<p>Now the core part. We need to prove <code>n + m = m + n</code> by induction. This requires a few lemmas for some arithmetic laws.</p>\n\n<pre><code>-- inductive proof of: n + Z = n  \nsumZeroRight :: NatI n -&gt; (n + 'Z) :~: n\nsumZeroRight ZI = Refl\nsumZeroRight (SI n') = case sumZeroRight n' of\n   Refl -&gt; Refl\n\n-- inductive proof of: n + S m = S (n + m)\nsumSuccRight :: NatI n -&gt; NatI m -&gt; (n + 'S m) :~: 'S (n + m)\nsumSuccRight ZI _m = Refl\nsumSuccRight (SI n') m  = case sumSuccRight n' m of\n   Refl -&gt; Refl\n\n-- inductive proof of commutativity: n + m = m + n\nsumComm :: NatI n -&gt; NatI m -&gt; (n + m) :~: (m + n)\nsumComm ZI m = case sumZeroRight m of Refl -&gt; Refl\nsumComm (SI n') m = case (sumComm n' m, sumSuccRight m n') of\n   (Refl, Refl) -&gt; Refl\n</code></pre>\n\n<p>Finally, we can exploit the proof above to convince GHC to type <code>append</code> as we wanted. Note that we can reuse the implementation with the old type, and then convince GHC that it can also use the new one.</p>\n\n<pre><code>-- append, with the wanted type\nappend2 :: Vector m a -&gt; Vector n a -&gt; Vector (n + m) a\nappend2 xs ys = case sumComm (vecLengthI xs) (vecLengthI ys) of\n   Refl -&gt; append xs ys\n</code></pre>\n\n<p>Final remarks. Compared to a fully dependently typed language (say, like Coq), we had to introduce singletons and spend some more effort to make them work (the \"pain\" part of Hasochism). In return, we can simply pattern match with <code>Refl</code> and let GHC figure out how to use the deduced equations, without messing with dependent matching (the \"pleasure\" part). </p>\n\n<p>Overall, I think it's still a little easier to work with full dependent types. If/when GHC gets non-erased type quantifiers (<code>pi n. ...</code> beyond <code>forall n. ...</code>), probably Haskell will become more convenient.</p>\n"}], "owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 495, "favorite_count": 2, "accepted_answer_id": 50788119, "answer_count": 1, "score": 12, "last_activity_date": 1528665881, "creation_date": 1528662805, "question_id": 50787796, "link": "https://stackoverflow.com/questions/50787796/proving-commutativity-of-type-level-addition-of-natural-numbers", "title": "Proving commutativity of type level addition of natural numbers", "body": "<p>I'm playing around with what tools haskell offers for dependently typed programming. I have promoted a GADT representing natural numbers to the kind level and made a type family for addition of natural numbers. I have also made your standard \"baby's first dependently typed datatype\" vector, parameterized over both its length and the type it contains. The code is as follows:</p>\n\n<pre><code>data Nat where\n    Z :: Nat\n    S :: Nat -&gt; Nat\n\ntype family (a :: Nat) + (b :: Nat) :: Nat where\n    Z + n = n\n    S m + n = S (m + n)\n\ndata Vector (n :: Nat) a where\n    Nil :: Vector Z a\n    Cons :: a -&gt; Vector n a -&gt; Vector (S n) a\n</code></pre>\n\n<p>Furthermore I have made an <code>append</code> function that takes an m-vector, an n-vetor and return an (m+n)-vector. This works as well as one might hope. However, just for the heck of it, I tried to flip it around so it returns an (n+m)-vector. This produces a compiler error though, because GHC can't prove that my addition is commutative. I'm still relatively new to type families, so I'm not sure how to write this proof myself, or if that's even something you can do in haskell.</p>\n\n<p>My initial thought was to somehow utilize a type equality constraint, but I'm not sure how to move forward.</p>\n\n<p>So to be clear: I want to write this function</p>\n\n<pre><code>append :: Vector m a -&gt; Vector n a -&gt; Vector (n + m) a\nappend Nil xs         = xs\nappend (Cons x xs) ys = x `Cons` append xs ys\n</code></pre>\n\n<p>but it fails to compile with</p>\n\n<pre><code>    * Could not deduce: (n + 'Z) ~ n\n      from the context: m ~ 'Z\n        bound by a pattern with constructor: Nil :: forall a. Vector 'Z a,\n                 in an equation for `append'\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 10159, "user_id": 509824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c62e65b86aabdffdd1c628aad1fefe3?s=128&d=identicon&r=PG", "display_name": "Alberto Garcia-Raboso", "link": "https://stackoverflow.com/users/509824/alberto-garcia-raboso"}, "is_accepted": true, "score": 3, "last_activity_date": 1528652858, "last_edit_date": 1528652858, "creation_date": 1528652014, "answer_id": 50786327, "question_id": 50786112, "link": "https://stackoverflow.com/questions/50786112/instance-declaration-for-datatype-mylist-to-class-semigroup-and-class-monoid/50786327#50786327", "title": "Instance declaration for datatype MyList to Class Semigroup and Class Monoid", "body": "<p>The error message tells you <em>where</em> the problem is:</p>\n\n<pre><code>* In the expression: concat'\nIn an equation for `&lt;&gt;': (&lt;&gt;) = concat'\nIn the instance declaration for `Semigroup (MyList a)'\n</code></pre>\n\n<p>That is here:</p>\n\n<pre><code>instance Semigroup (MyList a) where\n    (&lt;&gt;) = concat'\n</code></pre>\n\n<p>It also tells you <em>what</em> the problem is:</p>\n\n<pre><code>* No instance for (Eq a) arising from a use of concat'\nPossible fix: add (Eq a) to the context of the instance declaration\n</code></pre>\n\n<p>Indeed, you are using <code>concat'</code> to define <code>(&lt;&gt;)</code>, but your definition of <code>concat'</code> requires an instance of <code>Eq a</code> that is not present as a context for the instance declaration of <code>Semigroup (MyList a)</code>&mdash;in other words, you are defining <code>instance Semigroup (MyList a)</code>, not <code>instance Eq a =&gt; Semigroup (MyList a)</code>. You could add that context, but there is a more principled solution: drop the (unnecessary) <code>Eq a</code> constraint from the definition of <code>concat'</code> (and also <code>last'</code>) by using pattern matching:</p>\n\n<pre><code>concat' :: MyList a -&gt; MyList a -&gt; MyList a\nconcat' x Leer              = x\nconcat' (Element x Leer) ys = Element x ys\nconcat' (Element x xs) ys   = concat' (Element x (deletelst xs)) (w ys (last' xs))\n\nlast' :: MyList a -&gt; a\nlast' Leer             = undefined\nlast' (Element x Leer) = x\nlast' (Element x xs)   = last' xs\n</code></pre>\n"}], "owner": {"reputation": 205, "user_id": 9710552, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8578fe2900e52ee3bd08329635673614?s=128&d=identicon&r=PG&f=1", "display_name": "RM777", "link": "https://stackoverflow.com/users/9710552/rm777"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 50786327, "answer_count": 1, "score": 0, "last_activity_date": 1528652858, "creation_date": 1528650428, "last_edit_date": 1528651035, "question_id": 50786112, "link": "https://stackoverflow.com/questions/50786112/instance-declaration-for-datatype-mylist-to-class-semigroup-and-class-monoid", "title": "Instance declaration for datatype MyList to Class Semigroup and Class Monoid", "body": "<p>MyList a works like lists I have defined some functions to create <code>concat'</code> the equivalent to <code>(++)</code>. I want to make an instance declaration for <code>MyList a</code></p>\n\n<pre><code>instance Semigroup [a] where\n    -- (&lt;&gt;) :: [a] -&gt; [a] -&gt; [a]\n    (&lt;&gt;) = (++)\ninstance Monoid [a] where\n    -- mempty :: [a]\n    mempty = []\n</code></pre>\n\n<p>I have GHCi version 8.2.2.</p>\n\n<pre><code>data MyList a = Leer | Element a (MyList a) deriving (Show,Eq)\n\nlast' :: Eq a =&gt; MyList a -&gt; a\nlast' Leer = undefined\nlast' (Element x(xs))\n    | xs == Leer = x\n    | otherwise = last' xs\nw :: MyList a -&gt; a -&gt; MyList a\nw Leer x = Element x (Leer)\nw xs x = Element x (xs)\nconcat' :: Eq a =&gt; MyList a -&gt; MyList a -&gt; MyList a\nconcat' x Leer = x\nconcat' (Element x (xs)) ys\n    | xs == Leer = (Element x (ys))\n    | otherwise = concat' (Element x (deletelst xs)) (w ys (last' xs))\n\nlength' :: MyList a -&gt; Int\nlength' Leer = 0\nlength' (Element x (xs)) = 1 + length' (xs)\ntake' :: Int -&gt; MyList a -&gt; MyList a\ntake' _ Leer = Leer\ntake' 0 _ = Leer\ntake' z (Element x (xs)) = Element x (take' (z-1) xs)\n\ndeletelst :: MyList a-&gt; MyList a\ndeletelst Leer = Leer\ndeletelst xs = (take' ((length' xs) - 1) xs) \n\ninstance Semigroup (MyList a) where\n    (&lt;&gt;) = concat'\ninstance Monoid (MyList a) where\n    mempty = Leer\n    mappend = (&lt;&gt;)\n</code></pre>\n\n<p>When I try to compile the program this error message pops up:</p>\n\n<pre><code>FH.hs:115:12: error:\n    * No instance for (Eq a) arising from a use of concat'\n    Possible fix: add (Eq a) to the context of the instance declaration\n    * In the expression: concat'\n    In an equation for `&lt;&gt;': (&lt;&gt;) = concat'\n    In the instance declaration for `Semigroup (MyList a)'\n</code></pre>\n"}, {"tags": ["haskell", "definition"], "answers": [{"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 9, "last_activity_date": 1528649112, "creation_date": 1528649112, "answer_id": 50785916, "question_id": 50785898, "link": "https://stackoverflow.com/questions/50785898/definition-of-haskells-operator/50785916#50785916", "title": "Definition of Haskell&#39;s $-Operator", "body": "<p>You're missing the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/src/GHC.Base.html#%24\" rel=\"noreferrer\">fixity declaration</a>:</p>\n\n<pre><code>infixr 0 $\n</code></pre>\n\n<p>Or in your example:</p>\n\n<pre><code>infixr 0 `k`\n</code></pre>\n\n<p>Fixity declarations tell the parser what the precedence/associativity of an infix operator is.</p>\n"}], "owner": {"reputation": 23, "user_id": 7626928, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-SSuCcRJkyHM/AAAAAAAAAAI/AAAAAAAAAlM/cFfn1kcq2rQ/photo.jpg?sz=128", "display_name": "Lakiryt", "link": "https://stackoverflow.com/users/7626928/lakiryt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "accepted_answer_id": 50785916, "answer_count": 1, "score": 2, "last_activity_date": 1528656051, "creation_date": 1528648943, "last_edit_date": 1528656051, "question_id": 50785898, "link": "https://stackoverflow.com/questions/50785898/definition-of-haskells-operator", "title": "Definition of Haskell&#39;s $-Operator", "body": "<p>This <a href=\"https://stackoverflow.com/questions/19521246/what-does-mean-do-in-haskell\">post</a> and other sources like <a href=\"http://lambda.jstolarek.com/2012/03/function-composition-and-dollar-operator-in-haskell/\" rel=\"nofollow noreferrer\">this</a> insist that the definition of the $-operator is</p>\n\n<pre><code>($) :: (a -&gt; b) -&gt; a -&gt; b\nf $ x = f x\n</code></pre>\n\n<p>or</p>\n\n<pre><code>($) f x = f x\n</code></pre>\n\n<p>or</p>\n\n<pre><code>($) = id\n</code></pre>\n\n<p>but I didn't understand why this definition would be able to replace parentheses, so I tried to reproduce that myself and examine the behaviour, by defining:</p>\n\n<pre><code>k :: (a -&gt; b) -&gt; a -&gt; b\nk f x = f x\n</code></pre>\n\n<p>But what I got is:</p>\n\n<pre><code>-- these work:\n(+2) `k` 4\n(+2) `id` 4\nsum `k` [1,2]\nsum `id` [1,2]\nmap (flip(-)3) $ filter even `k`  filter (&gt;=0) [-5..10]\nmap (flip(-)3) $ filter even `id` filter (&gt;=0) [-5..10]\n\n-- these don't:\nsum `k`  1:[2]\nsum `id` 1:[2]\nmap (flip(-)3) `id` filter even $ filter (&gt;=0) [-5..10]\n</code></pre>\n\n<p>Shouldn't <code>k</code> be a replacement for <code>$</code>? What am I doing wrong?</p>\n"}, {"tags": ["haskell", "functor", "shift", "traversable", "foldable"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1528719400, "post_id": 50785210, "comment_id": 88600889, "body": "Not using the <code>Foldable</code> class, but much more convenient and very general: <a href=\"http://hackage.haskell.org/package/lens-4.16.1/docs/Control-Lens-Cons.html#v:_head\" rel=\"nofollow noreferrer\"><code>_head</code></a> and <code>_tail</code> from the lens library."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1528645387, "post_id": 50785364, "comment_id": 88577177, "body": "While getting the head and tail may not make sense while staying within a given <code>Foldable</code> type, &quot;rotating&quot; any <code>Foldable</code> while keeping the spine exactly the same does seem like a well-defined operation. Just not one that&#39;s available, I don&#39;t think. e.g. for <code>Pair</code>, <code>rotate (Pair x y) = Pair y x</code> is a perfectly cromulent operation."}, {"owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1528645535, "post_id": 50785364, "comment_id": 88577217, "body": "@DanielWagner interesting. Well perhaps there is something in recursion schemes that can help. <code>foldr</code> will not cut it."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1528648397, "post_id": 50785364, "comment_id": 88578044, "body": "@DanielWagner I expect you&#39;d need <code>Traversable</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1528649715, "post_id": 50785364, "comment_id": 88578442, "body": "@BenjaminHodgson Thanks, your comment, though it should have been obvious in retrospect, told me how to implement what was asked for. I&#39;ve updated my answer with your insight. =)"}], "tags": [], "owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "is_accepted": false, "score": 6, "last_activity_date": 1528645325, "creation_date": 1528645325, "answer_id": 50785364, "question_id": 50785210, "link": "https://stackoverflow.com/questions/50785210/is-there-an-equivalent-to-head-tail-for-foldable-functors-in-general/50785364#50785364", "title": "Is there an equivalent to head/tail for Foldable functors in general?", "body": "<p>You can find the first or last element of a <code>Foldable</code> using the <code>First</code> or <code>Last</code> monoids from <code>Data.Monoid</code>.</p>\n\n<pre><code>foldMap (Last . Just)  :: Foldable t =&gt; t a -&gt; Last a\nfoldMap (First . Just) :: Foldable t =&gt; t a -&gt; First a\n</code></pre>\n\n<p>All <code>Foldable</code> are convertible to a list, and so because you can find the head and tail of a list, you can do so for any <code>Foldable</code>.</p>\n\n<pre><code>toList = foldr (:) [] :: Foldable t =&gt; t a -&gt; [a]\n</code></pre>\n\n<p>That said, the tail will have a list type and not that of the <code>Foldable</code> (unless it was too a list). This is ultimately because not all that is <code>Foldable</code> can implement an uncons. For example:</p>\n\n<p><code>data Pair a = Pair a a</code></p>\n\n<p>This is <code>Foldable</code>, but you could not represent the tail of a <code>Pair</code> using a <code>Pair</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1780, "user_id": 4168972, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc92e82d2eb21eb030d4c133c70ff554?s=128&d=identicon&r=PG&f=1", "display_name": "David Fletcher", "link": "https://stackoverflow.com/users/4168972/david-fletcher"}, "edited": false, "score": 2, "creation_date": 1528650890, "post_id": 50785584, "comment_id": 88578753, "body": "Another way with Traversable is <code>rotate xs = ys where (x0, ys) = mapAccumR (\\x y -&gt; (y, x)) x0 xs</code>.  (Or a similar trick with <code>runState</code>, probably.)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 1780, "user_id": 4168972, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc92e82d2eb21eb030d4c133c70ff554?s=128&d=identicon&r=PG&f=1", "display_name": "David Fletcher", "link": "https://stackoverflow.com/users/4168972/david-fletcher"}, "edited": false, "score": 1, "creation_date": 1528654100, "post_id": 50785584, "comment_id": 88579617, "body": "@DavidFletcher Very slick!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1528666656, "post_id": 50785584, "comment_id": 88582840, "body": "Interesting. This also shows that if a <code>T a</code> type is meant to be opaque and satisfy some invariant (say, a red-black tree) then it can be made into a <code>Foldable</code> but should not be a <code>Traversable</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1528671889, "post_id": 50785584, "comment_id": 88583899, "body": "@chi Why? The invariant on red-black trees is on the spine, not the contents, and <code>traverse</code> preserves the spine exactly. So no problem there."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1528707627, "post_id": 50785584, "comment_id": 88593859, "body": "@DanielWagner What I wrote is misleading, sorry. I was thinking about the BST invariant (which is only a part of the red-black invariant). That would be broken by rotation. (We can not allow <code>Functor</code> on that too, since that would already allow one to break the BST invariant)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1528713979, "post_id": 50785584, "comment_id": 88597693, "body": "@chi Oh, sure. But also think of <code>Set</code> vs <code>Map</code> -- each has an invariant, and consequently <code>Set</code> can&#39;t support <code>Functor</code> or any of the other fun classes, but <code>Map</code> can support <code>Functor</code> and <code>Traversable</code> because the invariant is on its keys, which those instances don&#39;t touch."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1528649678, "last_edit_date": 1528649678, "creation_date": 1528646796, "answer_id": 50785584, "question_id": 50785210, "link": "https://stackoverflow.com/questions/50785210/is-there-an-equivalent-to-head-tail-for-foldable-functors-in-general/50785584#50785584", "title": "Is there an equivalent to head/tail for Foldable functors in general?", "body": "<p>The first part of your question (combining the first value of a structure with one thing and leaving the rest the same) can be done in a straightforward way with <code>Traversable</code>. We'll use <code>State</code>, start it off with the function we want to apply, and modify it to <code>id</code> immediately.</p>\n\n<pre><code>onlyOnHead :: Traversable t =&gt; (a -&gt; a) -&gt; t a -&gt; t a\nonlyOnHead f xs = evalState (traverse go xs) f where\n    go x = do\n        fCurrent &lt;- get\n        put id\n        return (fCurrent x)\n</code></pre>\n\n<p>You can rotate elements with a similar idea: we'll rotate a list, and stuff that in our <code>State</code> as the thing to draw elements from.</p>\n\n<pre><code>rotate :: Traversable t =&gt; t a -&gt; t a\nrotate xs = evalState (traverse go xs) (rotateList (toList xs)) where\n    rotateList [] = []\n    rotateList vs = tail vs ++ [head vs]\n\n    go _ = do\n        v:vs &lt;- get\n        put vs\n        return v\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "is_accepted": false, "score": 0, "last_activity_date": 1528747201, "last_edit_date": 1528747201, "creation_date": 1528729196, "answer_id": 50800720, "question_id": 50785210, "link": "https://stackoverflow.com/questions/50785210/is-there-an-equivalent-to-head-tail-for-foldable-functors-in-general/50800720#50800720", "title": "Is there an equivalent to head/tail for Foldable functors in general?", "body": "<p>Thanks to all who responded!</p>\n\n<p>Note that <a href=\"https://github.com/conal/shaped-types\" rel=\"nofollow noreferrer\">Conal Elliott's shaped-types library</a> also has some useful machinery in this regard.</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 1, "last_activity_date": 1528753721, "creation_date": 1528753721, "answer_id": 50806512, "question_id": 50785210, "link": "https://stackoverflow.com/questions/50785210/is-there-an-equivalent-to-head-tail-for-foldable-functors-in-general/50806512#50806512", "title": "Is there an equivalent to head/tail for Foldable functors in general?", "body": "<p>To rotate, you don't need any ugly partial functions. This weird <code>Applicative</code> will do the trick.</p>\n\n<pre><code>data Foo a t where\n  Cons :: (a -&gt; q -&gt; t) -&gt; a -&gt; Foo a q -&gt; Foo a t\n  Nil :: t -&gt; Foo a t\n\ninstance Functor (Foo a) where\n  fmap f (Cons g x xs) = Cons (\\p q -&gt; f (g p q)) x xs\n  fmap f (Nil q) = Nil (f q)\n\ninstance Applicative (Foo a) where\n  pure = Nil\n  liftA2 f (Nil t) ys = f t &lt;$&gt; ys\n  liftA2 f (Cons g x xs) ys = Cons (\\a (q,b) -&gt; f (g a q) b) x (liftA2 (,) xs ys)\n</code></pre>\n\n<p>You can rotate a <code>Foo</code>:</p>\n\n<pre><code>rot :: Foo a t -&gt; Foo a t\nrot n@(Nil _) = n\nrot (Cons g0 a0 as0) = go g0 a0 as0\n  where\n    go :: (a -&gt; q -&gt; t) -&gt; a -&gt; Foo a q -&gt; Foo a t\n    go g a n@(Nil _) = Cons g a n\n    go g a (Cons h y ys) = Cons g y (go h a ys)\n</code></pre>\n\n<p>And run one to get a result:</p>\n\n<pre><code>runFoo :: Foo a t -&gt; t\nrunFoo (Nil t) = t\nrunFoo (Cons g x xs) = g x (runFoo xs)\n</code></pre>\n\n<p>Putting it all together,</p>\n\n<pre><code>rotate :: Traversable t =&gt; t a -&gt; t a\nrotate = runFoo . rot . traverse (\\a -&gt; Cons const a (Nil ()))\n</code></pre>\n\n<p>Then <code>rotate [1..10] = [2..10] ++ [1]</code>.</p>\n"}], "owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 2, "accepted_answer_id": 50785584, "answer_count": 4, "score": 5, "last_activity_date": 1528753721, "creation_date": 1528644438, "question_id": 50785210, "link": "https://stackoverflow.com/questions/50785210/is-there-an-equivalent-to-head-tail-for-foldable-functors-in-general", "title": "Is there an equivalent to head/tail for Foldable functors in general?", "body": "<p>I would like to express the following Haskell code, using only <em>functor algebra</em> (i.e. - <em>not</em> relying on any specific container type, such as <code>List</code>):</p>\n\n<pre><code>ys = zipWith (+) (head xs : repeat 0)\n                 (tail xs ++ [y])\n</code></pre>\n\n<p>It seems to me that there ought to be a way to do this, relying only on <code>Foldable</code> (or, maybe, <code>Traversable</code>), but I can't see it.</p>\n\n<p>I'm wondering:</p>\n\n<ol>\n<li>Is there a general notion of <em>first</em> and <em>rest</em> for Foldable/Traversable functors?</li>\n<li>Is there an accepted idiomatic way, using only functor algebra, to shift the contents of a Foldable/Traversable functor?\n(Note that the computation above might be described in English as, \"Shift in one value from the right, and add back the value that falls of on the left to the new first value.\")</li>\n</ol>\n"}, {"tags": ["haskell", "import", "operators"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1528653403, "last_edit_date": 1528653403, "creation_date": 1528642722, "answer_id": 50784978, "question_id": 50784961, "link": "https://stackoverflow.com/questions/50784961/trouble-importing-data-list/50784978#50784978", "title": "Trouble importing Data.List.\\\\", "body": "<p>Well <code>\\\\</code> is an <strong>operator</strong>, that will call, behind the curtains, the corresponding <strong><a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-List.html#v:-92--92-\" rel=\"nofollow noreferrer\"><code>(\\\\) :: Eq a =&gt; [a] -&gt; [a] -&gt; [a]</code></a> function</strong>, so you need to import the function name, <strong>including the brackets</strong>:</p>\n\n<pre><code>import Data.List (<b>(</b>\\\\<b>)</b>)</code></pre>\n\n<p>After all, you import a list of <em>functions</em> (and other elements like types, typeclasses, etc.), and the \"<em>name</em>\" of the function is <strong><code>(\\\\)</code></strong>, not <code>\\\\</code>.</p>\n\n<p>So between the outer brackets, we list the functions we want to import, and the inner brackets, do not act as \"groupers\" or some independent syntactical element, only as part of the function name.</p>\n\n<p>For example:</p>\n\n<pre><code>Prelude&gt; import Data.List ((\\\\))\nPrelude Data.List&gt; [1, 4, 2, 5] \\\\ [1, 3, 0, 2]\n[4,5]\n</code></pre>\n\n<p>Note that you can declare your <code>setDiff</code> function as:</p>\n\n<pre><code>setDiff :: Eq a =&gt; [a] -&gt; [a] -&gt; [a]\nsetDiff = (\\\\)\n</code></pre>\n\n<p>so without the parameters.</p>\n"}], "owner": {"reputation": 671, "user_id": 7737781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-aAdetGA1ucY/AAAAAAAAAAI/AAAAAAAAAAo/UxFBJQMwA3g/photo.jpg?sz=128", "display_name": "Quinn Mortimer", "link": "https://stackoverflow.com/users/7737781/quinn-mortimer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 315, "favorite_count": 0, "accepted_answer_id": 50784978, "answer_count": 1, "score": 1, "last_activity_date": 1528653403, "creation_date": 1528642639, "last_edit_date": 1528645731, "question_id": 50784961, "link": "https://stackoverflow.com/questions/50784961/trouble-importing-data-list", "title": "Trouble importing Data.List.\\\\", "body": "<p>I am trying to write a Haskell module which uses the set difference operator from Data.List, but when I try to import it specifically I get the message <code>parse error on input \u2018\\\\\u2019</code> when trying to import my module.</p>\n\n<p>Here's an example module which has the same problem:</p>\n\n<pre><code>module SetDiff (\n    setDiff\n) where\n\n-- import Data.List -- No error when this line is used\nimport Data.List (\\\\) -- Causes the parse error\n\nsetDiff l1 l2 = l1 \\\\ l2\n</code></pre>\n\n<p>Importing all of <code>Data.List</code> allows me to avoid the issue, but is there a way I can perform an import specifying just the <code>\\\\</code> operator?</p>\n"}, {"tags": ["haskell", "monad-transformers"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1528638251, "post_id": 50783823, "comment_id": 88575060, "body": "Is it intentional that there are two <code>GP.ContextT</code> transformers at the location of this error message? Why are you calling <code>GP.runContextT</code> there, and what if you try to remove it?"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1528639569, "post_id": 50783823, "comment_id": 88575500, "body": "@Li-yaoXia It is not intentional and puzzles me greatly. If I remove it I get <code>Couldn&#39;t match expected type \u2018GP.WindowParameters ctx\u2019                   with actual type \u2018GLFW.WindowConfig\u2019     \u2022 In the second argument of \u2018GP.newWindow\u2019Couldn&#39;t match expected type \u2018GP.WindowParameters ctx\u2019                   with actual type \u2018GLFW.WindowConfig\u2019     \u2022 In the second argument of \u2018GP.newWindow\u2019</code>. Formatting on this is probably going to be horribly wrong."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 2, "last_activity_date": 1528644747, "creation_date": 1528644747, "answer_id": 50785269, "question_id": 50783823, "link": "https://stackoverflow.com/questions/50783823/couldnt-match-types-deep-in-a-monad-stack/50785269#50785269", "title": "Couldn&#39;t match types deep in a monad stack", "body": "<p>A function that returns a <code>ContextT</code> value (here wrapped in <code>Processor</code>), like <code>start</code>, should not call <a href=\"https://hackage.haskell.org/package/GPipe-2.2.3/docs/Graphics-GPipe-Context.html#t:ContextT\" rel=\"nofollow noreferrer\"><code>GP.runContextT</code></a>.</p>\n\n<p><code>GP.runContextT</code> is used to initialize and provide the context to execute the processors, which you only want to do once at the start of the whole program. Thus, it should probably be in <code>main</code>, together with <code>newWindow</code>, <code>defaultWindowConfig</code> and <code>mkFullState</code>.</p>\n\n<p>A <code>Processor</code> like <code>start</code> can get the current state using the <code>StateT</code> transformer. But first, we must fix the <code>Processor</code> type. Notice the type of <code>runContextT</code>, in particular the <code>forall</code>:</p>\n\n<pre><code>runContextT\n    :: (MonadIO m, MonadAsyncException m, ContextHandler ctx)\n    =&gt; ContextHandlerParameters ctx -&gt; (forall os. ContextT ctx os m a) -&gt; m a\n</code></pre>\n\n<p>This <code>forall</code> imposes that the type variable <code>os</code> can not occur in <code>m</code> or in <code>a</code>, preventing certain resources from leaking. This is incompatible with the current definition of <code>Processor</code>, since <code>StateT (FullState os) IO</code> contains <code>os</code>. You can probably swap the transformers.</p>\n\n<pre><code>newtype Processor ctx os a = Processor {\n    runProcessor :: StateT (FullState os) (GP.ContextT ctx os IO) a\n}\n</code></pre>\n\n<p>Now <code>start</code> can use <code>get</code> to access the current state, and since it is not supposed to handle initialization, it doesn't have the <code>Quit</code> branch anymore (you might no longer want to make <code>start</code> a <code>Processor</code> at this point, but hopefully this is close enough to what you'd actually like to do with other processors):</p>\n\n<pre><code>start :: Processor ctx os (Transition os)\nstart = Processor $ do\n  s &lt;- get\n  return $ ToMainMenu s\n</code></pre>\n\n<p>And <code>main</code> can look like this:</p>\n\n<pre><code>main :: IO ()\nmain =\n    -- Initialize and provide context, i.e, convert the wrapped\n    -- do-block of type `ContextT _ _ IO` to `IO`\n    GP.runContextT GLFW.defaultHandleConfig $ do\n\n        -- Create a GLFW window\n        -- You can probably create more than one\n        win &lt;- GP.newWindow (GP.WindowFormatColor GP.RGB8) (GLFW.defaultWindowConfig \"Foobar\")\n\n        -- Create the initial processor state, handling initialization failures\n        s_ &lt;- liftIO $ runExceptT $ mkFullState win \"./\"\n        s0 &lt;- case s_ of\n            Left e -&gt; fail e\n            Right s0 -&gt; return s0\n\n        -- Run a processor\n        (transition, s1) &lt;- (`runStateT` s0) $ runProcessor start\n\n        case transition of\n            Quit -&gt; return ()\n            ToMainMenu _ -&gt; return ()\n</code></pre>\n"}], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 50785269, "answer_count": 1, "score": 1, "last_activity_date": 1528644747, "creation_date": 1528634723, "question_id": 50783823, "link": "https://stackoverflow.com/questions/50783823/couldnt-match-types-deep-in-a-monad-stack", "title": "Couldn&#39;t match types deep in a monad stack", "body": "<p>I'm writing a OpenGL program for learning purposes, using <code>GPipe</code> library. The library does some black type magic, and that (with a <code>newtype</code> from me thrown in for a good measure) makes me unable to properly parse error messages. The following code doesn't compile:</p>\n\n<pre><code>{-# LANGUAGE PackageImports #-}\nmodule Main where\n\nimport Control.Monad.State\nimport Control.Monad.Except\n\nimport qualified \"GPipe\" Graphics.GPipe as GP\nimport qualified \"GPipe-GLFW\" Graphics.GPipe.Context.GLFW as GLFW\n\n---- types ----\n\nnewtype Processor ctx os a = Processor {\n    runProcessor :: GP.ContextT ctx os (StateT (FullState os) IO) a\n}\n\ndata Transition os = ToMainMenu (FullState os)\n                   | Quit\n\ntype CType = GP.RGBFloat\ntype UnitWindow os = GP.Window os CType ()\n\ndata ArtState os = ArtState {\n    _asWindow :: UnitWindow os\n}\n\ndata ProgState = ProgState\n\ndata FullState os = FullState {\n    _fsArtState :: ArtState os\n  , _fsProgState :: ProgState\n}\n\n---- constructors ----\n\nmkFullState :: UnitWindow os -&gt; FilePath -&gt; ExceptT String IO (FullState os)\nmkFullState window directory = do\n    art &lt;- mkArtState window directory\n    prog &lt;- mkProgState directory\n    return FullState {\n        _fsArtState = art\n      , _fsProgState = prog\n    }\n\nmkArtState :: UnitWindow os -&gt; FilePath -&gt; ExceptT String IO (ArtState os)\nmkArtState window _ = return ArtState {\n    _asWindow = window\n}\n\nmkProgState :: FilePath -&gt; ExceptT String IO ProgState\nmkProgState _ = return ProgState\n\n---- processors ----\n\nstart :: Processor ctx os (Transition os)\nstart = Processor $ GP.runContextT GLFW.defaultHandleConfig $ do\n    win &lt;- GP.newWindow (GP.WindowFormatColor GP.RGB8) (GLFW.defaultWindowConfig \"Foobar\")\n    possiblyState &lt;- liftIO $ runExceptT $ mkFullState win \"./\"\n    case possiblyState of\n         Left err -&gt; liftIO $ putStrLn err &gt;&gt; return Quit\n         Right state -&gt; return $ ToMainMenu state\n\n---- Main ----\n\nmain :: IO ()\nmain = do\n    transition &lt;- runProcessor start\n    case transition of \n         Quit -&gt; return ()\n         ToMainMenu _ -&gt; return ()\n</code></pre>\n\n<p>The idea is to have <code>Processor</code>s return a <code>Transition</code> to be used by the main loop to select an appropriate path of execution. The compilation error is as follows:</p>\n\n<pre><code>/tmp/testing/app/Main.hs:60:25: error:\n    \u2022 Couldn't match type \u2018os1\u2019 with \u2018os\u2019\n      \u2018os1\u2019 is a rigid type variable bound by\n        a type expected by the context:\n          forall os1.\n          GP.ContextT\n            GLFW.Handle\n            os1\n            (GP.ContextT ctx os (StateT (FullState os) IO))\n            (Transition os)\n        at app/Main.hs:(55,21)-(60,49)\n      \u2018os\u2019 is a rigid type variable bound by\n        the type signature for:\n          start :: forall ctx os. Processor ctx os (Transition os)\n        at app/Main.hs:54:1-41\n      Expected type: GP.ContextT\n                       GLFW.Handle\n                       os1\n                       (GP.ContextT ctx os (StateT (FullState os) IO))\n                       (Transition os)\n        Actual type: GP.ContextT\n                       GLFW.Handle\n                       os1\n                       (GP.ContextT ctx os (StateT (FullState os) IO))\n                       (Transition os1)\n    \u2022 In the expression: return $ ToMainMenu state\n      In a case alternative: Right state -&gt; return $ ToMainMenu state\n      In a stmt of a 'do' block:\n        case possiblyState of\n          Left err -&gt; liftIO $ putStrLn err &gt;&gt; return Quit\n          Right state -&gt; return $ ToMainMenu state\n    \u2022 Relevant bindings include\n        state :: FullState os1 (bound at app/Main.hs:60:16)\n        possiblyState :: Either String (FullState os1)\n          (bound at app/Main.hs:57:5)\n        win :: GP.Window os1 GP.RGBFloat () (bound at app/Main.hs:56:5)\n        start :: Processor ctx os (Transition os)\n          (bound at app/Main.hs:55:1)\n   |\n60 |          Right state -&gt; return $ ToMainMenu state\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>My understanding of Haskell and monads doesn't allow me to fix this, I can sort of see that <code>os1</code> and <code>os</code> are produced by different equations and therefore GHC can't just mark them as same, but I'm at a loss as to how to repair that. If I remove <code>os</code> parameter from the <code>Transition</code> enum, the error disappears, but I <em>need</em> it to pass the state around instead of reinitializing it in every Processor.</p>\n\n<p>Could someone explain what's going wrong and how to fix it?</p>\n\n<p>PS. Oh, and when I clumped all the code in a single file, a new error appeared that was previously masked by compilation order. </p>\n"}, {"tags": ["haskell", "monads", "lazy-evaluation"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1528637058, "post_id": 50783791, "comment_id": 88574704, "body": "Have a look at <code>ifM</code>, <code>eitherM</code> and friends. <a href=\"https://hackage.haskell.org/package/extra-1.6.8/docs/Control-Monad-Extra.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/extra-1.6.8/docs/&hellip;</a>"}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1528640031, "post_id": 50783791, "comment_id": 88575656, "body": "Yes, I&#39;ve seen that module while trying to answer for myself. I&#39;ve edited the question to clarify it."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528642011, "post_id": 50783791, "comment_id": 88576173, "body": "Looks to me that this is impossible, at least in general. Imagine that this is not <code>IO</code>, but <code>[]</code>, then we start adding only one element in case the second parameter is not needed for the function?"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1528641358, "post_id": 50784719, "comment_id": 88576011, "body": "And here you see what I mean by the fragility comments in my answer: this works okay for <code>(&amp;&amp;)</code>, but is not as lazy as it could be for <code>flip (&amp;&amp;)</code>. And for something like <code>zip</code>, the analysis is even more complicated..."}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 0, "last_activity_date": 1528640910, "creation_date": 1528640910, "answer_id": 50784719, "question_id": 50783791, "link": "https://stackoverflow.com/questions/50783791/a-lazy-version-of-liftm2/50784719#50784719", "title": "A lazy version of liftM2", "body": "<p>An approach using <a href=\"http://hackage.haskell.org/package/spoon-0.3.1\" rel=\"nofollow noreferrer\">spoon</a>, which is a bit of cheating:</p>\n\n<pre><code>liftM2Lazy f m1 m2 =\n  case teaspoon $ f undefined undefined of\n    Just res -&gt; return res\n    Nothing -&gt;\n      do x1 &lt;- m1\n         case teaspoon $ f x1 undefined of\n           Just res -&gt; return res\n           Nothing -&gt;\n             do x2 &lt;- m2\n                return $ f x1 x2\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1528641705, "post_id": 50784759, "comment_id": 88576093, "body": "I see, thanks. I expected that was the answer at the beginning, now I wonder how to prove it&#39;s impossible..."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1528641230, "creation_date": 1528641230, "answer_id": 50784759, "question_id": 50783791, "link": "https://stackoverflow.com/questions/50783791/a-lazy-version-of-liftm2/50784759#50784759", "title": "A lazy version of liftM2", "body": "<p>No, this is not possible in general -- it requires a source-to-source translation to lift lazy functions to lazy monadic functions.</p>\n\n<p>For <code>IO</code> specifically, and where one knows in advance <em>which</em> arguments a function is lazy in (and how \"deeply\" lazy it is -- that is, how far into the returned structure one needs to evaluate to discover whether one needs to execute the other action), one can use <code>IO</code>'s exception-catching and <code>unsafeInterleave</code>ing powers to write a generic lifting function. But such functions are so specific and so easy to use incorrectly that I suspect you're better off not writing them at all.</p>\n"}, {"comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1528642191, "post_id": 50784882, "comment_id": 88576223, "body": "Nice! Is there a class of monads for which it&#39;s possible, or is it only <code>IO</code>?"}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 3, "last_activity_date": 1528642074, "creation_date": 1528642074, "answer_id": 50784882, "question_id": 50783791, "link": "https://stackoverflow.com/questions/50783791/a-lazy-version-of-liftm2/50784882#50784882", "title": "A lazy version of liftM2", "body": "<p>This is not possible for general monads, but for the specific case of <code>IO</code> it can be achieved pretty easily (and comparatively safely) by using <code>unsafeInterleaveIO</code>, which turns an IO action lazy:</p>\n\n<pre><code>import System.IO.Unsafe\n\nliftIO2Lazy :: (a -&gt; b -&gt; c) -&gt; IO a -&gt; IO b -&gt; IO c\nliftIO2Lazy f io1 io2 = do\n    x &lt;- unsafeInterleaveIO io1\n    y &lt;- unsafeInterleaveIO io2\n    return $ f x y\n</code></pre>\n\n<p>The result will be lazy in exactly the same arguments, in which <code>f</code> is lazy, so it works even for functions that don't follow the same left-to-right short-circuit logic as <code>&amp;&amp;</code> and <code>||</code>:</p>\n\n<pre><code>ioTrue = putStrLn \"TRUE\" &gt;&gt; return True\nioFalse = putStrLn \"FALSE\" &gt;&gt; return False\n\nliftIO2Lazy (&amp;&amp;) ioTrue ioFalse\n-- Prints both messages\nliftIO2Lazy (||) ioTrue ioFalse\n-- Only prints TRUE\nliftIO2Lazy (flip (||)) ioTrue ioFalse\n-- Only prints FALSE\nliftIO2Lazy (const (const 42)) ioTrue ioFalse\n-- No output\n</code></pre>\n"}], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 50784759, "answer_count": 3, "score": 2, "last_activity_date": 1528642074, "creation_date": 1528634522, "last_edit_date": 1528640010, "question_id": 50783791, "link": "https://stackoverflow.com/questions/50783791/a-lazy-version-of-liftm2", "title": "A lazy version of liftM2", "body": "<p>To answer <a href=\"https://stackoverflow.com/questions/50783116/evaluation-of-and-clause-with-regards-to-laziness/50783532\">another question</a>, I wrote</p>\n\n<pre><code>andM :: (Monad m) =&gt; m Boolean -&gt; m Boolean -&gt; m Boolean\nandM m1 m2 = do\n  x &lt;- m1\n  case x of\n    True -&gt; m2\n    False -&gt; return False\n</code></pre>\n\n<p>which doesn't evaluate <code>m2</code> if not necessary, unlike <code>liftM2 (&amp;&amp;) m1 m2</code> (in <code>IO</code>). </p>\n\n<p>Is there a way to write <code>liftM2Lazy</code> with the same type as <code>liftM2</code> (or more restricted in some way?) which preserves laziness in general? So that e.g. <code>liftM2Lazy (&amp;&amp;)</code> is indistinguishable from <code>andM</code>, <code>liftM2Lazy (||)</code> from <code>orM</code> (with the obvious definition), etc.?</p>\n"}, {"tags": ["haskell", "lazy-evaluation"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528629612, "post_id": 50783116, "comment_id": 88572795, "body": "Well you wrap it in an <code>IO</code> monad, so due to the monad."}, {"owner": {"reputation": 152, "user_id": 1935301, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a80cd7bdb07f8b6d39385943c0f6fb4?s=128&d=identicon&r=PG", "display_name": "ryan91", "link": "https://stackoverflow.com/users/1935301/ryan91"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528630253, "post_id": 50783116, "comment_id": 88572954, "body": "Okay, so my assumption was correct that it behaves this way because it&#39;s not side-effect free? I&#39;m so sorry but this comment is a bit too vague for me to understand."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1528630319, "post_id": 50783116, "comment_id": 88572972, "body": "Well imagine that your two elements <code>containsA</code> and <code>containsB</code> read from a file. Then they advance the cursor. Now that means that depending of the value of <code>containsA</code> the cursor will (or will not) advance? That is behavior one typically wants to avoid. So the <code>IO</code> actions are guaranteed to take place if they are in the monad."}], "answers": [{"comments": [{"owner": {"reputation": 152, "user_id": 1935301, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a80cd7bdb07f8b6d39385943c0f6fb4?s=128&d=identicon&r=PG", "display_name": "ryan91", "link": "https://stackoverflow.com/users/1935301/ryan91"}, "edited": false, "score": 0, "creation_date": 1528630510, "post_id": 50783231, "comment_id": 88573018, "body": "Gotcha. Thank you!"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1528630781, "post_id": 50783231, "comment_id": 88573089, "body": "The terminology is all wrong. There is no &quot;an <code>IO</code> monad&quot;. The <code>IO</code> type itself is a monad (<code>IO</code> is also a functor). When you have a <code>do</code> block, that&#39;s not a monad; that&#39;s just a value of type <code>IO something</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1528631063, "post_id": 50783231, "comment_id": 88573156, "body": "@melpomene: well not really, a <code>do</code> block can lead to any <code>Monad m =&gt; m something</code>. It is only the type checking that convert it to a specific <code>m</code>. If at all, for example <code>liftM2 h f g = do {x &lt;- f; y &lt;- g; return h x y}</code> has a type <code>Monad m =&gt; (a -&gt; b -&gt; c) -&gt; m a -&gt; m b -&gt; m c</code>."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1528631262, "post_id": 50783231, "comment_id": 88573213, "body": "Yes, I was talking about <code>do</code> blocks doing I/O specifically. But even in general, the <code>do</code> block itself is not &quot;a monad&quot;; the &quot;monad&quot; part is specifically the <code>m</code> in the type signature."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1528631347, "post_id": 50783231, "comment_id": 88573235, "body": "@melpomene: yes, I know, but it makes it a little bit &quot;chaotic&quot; to talk about monads. So typically in discussions with friends, collegues, etc. I use &quot;shortcuts&quot;, although those are understood by collegues, I guess it can be confusing :)."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1528642348, "post_id": 50783231, "comment_id": 88576261, "body": "I think these shortcuts might actually make it harder to explain why the versions in my answer <i>do</i> work :)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1528642647, "post_id": 50783231, "comment_id": 88576361, "body": "@AlexeyRomanov: well they should have defenestrated the person who introduced things like <code>State</code> and <code>IO</code>, since actually those things are not <code>State</code> or <code>IO</code>, they describe <i>changes</i> in states and IO. I think I would probably explain it as &quot;<i>defining two <code>IO</code>s, and one is guarded by</i> encoding <i>the function into an outher <code>IO</code></i>&quot;. So basically guarding the IO."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1528631019, "last_edit_date": 1528631019, "creation_date": 1528630167, "answer_id": 50783231, "question_id": 50783116, "link": "https://stackoverflow.com/questions/50783116/evaluation-of-and-clause-with-regards-to-laziness/50783231#50783231", "title": "Evaluation of &#39;and&#39; clause with regards to laziness", "body": "<blockquote>\n  <p><strong>Question 1:</strong>\n  Is there a particular reason why containsB has to be evaluated too? My understanding was that the containsB &lt;- do ... statement is not evaluated unless it's required but my guess is that this might behave differently since it's IO and therefore not free of side effects?</p>\n</blockquote>\n\n<p>Your experiment is flawed because you perform <code>IO</code>. One of the important aspects of <code>IO</code> is that the order of <code>IO</code> statements is respected. So even if due to lazyness, we do not need a certain value, the <code>IO</code> part is executed.</p>\n\n<p>This is logical in the world of <code>IO</code>: imagine that we read a file, and we have three parts. We read the first two parts, and then we read the third one. But now imagine that due to laziness, the second <code>IO</code> command is never executed. Then that would mean that third part actually reads the second part of the file.</p>\n\n<p>So in short <strong>due to <code>IO</code>, the statements <em>are</em> evaluated</strong>. But only the <code>IO</code> statements. So the value wrapped inside the <code>return</code> is <em>not</em> evaluated, unless you need it. The check <code>'b' `elem` s</code> only happens when we need it.</p>\n\n<p>There are however ways to \"<em>trick</em>\" the <code>IO</code> out of this. For example <code>trace</code> (from the <code>Debug.Trace</code>) module will perform \"<em>unsafe IO</em>\": it will print the error message given it is evaluated. If we write:</p>\n\n<pre><code>Prelude&gt; import Debug.Trace\nPrelude Debug.Trace&gt; myand (trace \"a\" False) (trace \"b\" False)\n</code></pre>\n\n<p>we got:</p>\n\n<pre><code>Prelude Debug.Trace&gt; myand (trace \"a\" False) (trace \"b\" False)\na\nFalse\n</code></pre>\n\n<blockquote>\n  <p><strong>Question2:</strong>\n  What's the best practice approach to get the desired behavior (if containsA is false, containsB is not checked) without dealing with nested if-else clauses?</p>\n</blockquote>\n\n<p>Well as said before, normal behavior is that <code>containsB</code> is <em>not</em> evaluated. But if you perform <code>IO</code> actions, those <em>have</em> to be performed before you actually do the checking. This is bascially one of the aspects that the <code>(&gt;&gt;=)</code> operator for <code>IO</code> (you use this operator implcitly in a <code>do</code> block) handles.</p>\n"}, {"tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 3, "last_activity_date": 1528641290, "last_edit_date": 1528641290, "creation_date": 1528632593, "answer_id": 50783532, "question_id": 50783116, "link": "https://stackoverflow.com/questions/50783116/evaluation-of-and-clause-with-regards-to-laziness/50783532#50783532", "title": "Evaluation of &#39;and&#39; clause with regards to laziness", "body": "<p><code>do</code> blocks get translated into calls to <code>&gt;&gt;=</code> and <code>&gt;&gt;</code>. In particular, your code becomes (unless I missed some parentheses)</p>\n\n<pre><code>containsAandB s = \n  (putStrLn $ \"Check if 'a' is in \" ++ s &gt;&gt;\n   return $ 'a' `elem` s) &gt;&gt;= (\\containsA -&gt;\n  (putStrLn $ \"Check if 'b' is in \" ++ s &gt;&gt;\n   return $ 'b' `elem` s) &gt;&gt;= (\\containsB -&gt;\n  return $ containsA `myand` containsB))\n</code></pre>\n\n<p>So <code>containsB &lt;- do ...</code> isn't really a <em>statement</em>; it makes the <code>do ...</code> part the first argument to a <code>&gt;&gt;=</code> call. And <code>&gt;&gt;=</code> (and <code>&gt;&gt;</code>) for <code>IO</code> is defined so it always runs its first argument. So to get to the last <code>return $ ...</code>, both <code>putStrLn</code> calls already must have run.</p>\n\n<p>This behavior isn't limited to the IO monad; e.g. see <a href=\"https://stackoverflow.com/questions/13186512/difference-between-haskells-lazy-and-strict-monads-or-transformers\">Difference between Haskell&#39;s Lazy and Strict monads (or transformers)</a>.</p>\n\n<blockquote>\n  <p>What's the best practice approach to get the desired behavior (if containsA is false, containsB is not checked) without dealing with nested if-else clauses?</p>\n</blockquote>\n\n<p>You can deal with them once and for all:</p>\n\n<pre><code>andM :: (Monad m) =&gt; m Boolean -&gt; m Boolean -&gt; m Boolean\nandM m1 m2 = do\n  x &lt;- m1\n  case x of\n    True -&gt; m2\n    False -&gt; return False\n\ncontainsAandB s = andM\n  (do\n    putStrLn $ \"Check if 'a' is in \" ++ s\n    return $ 'a' `elem` s)\n  (do\n    putStrLn $ \"Check if 'b' is in \" ++ s\n    return $ 'b' `elem` s)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>containsAandB :: String -&gt; IO Bool\ncontainsAandB s = do\n  let containsA = do\n    putStrLn $ \"Check if 'a' is in \" ++ s\n    return $ 'a' `elem` s\n  let containsB = do\n    putStrLn $ \"Check if 'b' is in \" ++ s\n    return $ 'b' `elem` s\n  containsA `andM` containsB\n</code></pre>\n\n<p>(<code>andM</code> is in <a href=\"http://hackage.haskell.org/package/extra-1.6.8/docs/Control-Monad-Extra.html\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/extra-1.6.8/docs/Control-Monad-Extra.html</a> as <code>(&amp;&amp;^)</code>, along with other similar functions).</p>\n"}], "owner": {"reputation": 152, "user_id": 1935301, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a80cd7bdb07f8b6d39385943c0f6fb4?s=128&d=identicon&r=PG", "display_name": "ryan91", "link": "https://stackoverflow.com/users/1935301/ryan91"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 50783231, "answer_count": 2, "score": 4, "last_activity_date": 1528641290, "creation_date": 1528629440, "question_id": 50783116, "link": "https://stackoverflow.com/questions/50783116/evaluation-of-and-clause-with-regards-to-laziness", "title": "Evaluation of &#39;and&#39; clause with regards to laziness", "body": "<p>I don't understand why the following code behaves the way it does:</p>\n\n<pre><code>myand :: Bool -&gt; Bool -&gt; Bool\nmyand True True = True\nmyand _ _ = False\n\ncontainsAandB :: String -&gt; IO Bool\ncontainsAandB s = do\n  containsA &lt;- do\n    putStrLn $ \"Check if 'a' is in \" ++ s\n    return $ 'a' `elem` s\n  containsB &lt;- do\n    putStrLn $ \"Check if 'b' is in \" ++ s\n    return $ 'b' `elem` s\n  return $ containsA `myand` containsB\n</code></pre>\n\n<p>This is the output when I test the function:</p>\n\n<pre><code>*Main&gt; containsAandB \"def\"\nCheck if 'a' is in def\nCheck if 'b' in in def\nFalse\n</code></pre>\n\n<p>Note that (&amp;&amp;) behaves just like 'myand', I just wrote a custom function to better visualize what's happeninig.\nI'm surprised about the <code>'Check if 'b' is in def</code> part since <code>containsA</code> is already false so 'myand' can be evaluated regardless of <code>containsB</code>.</p>\n\n<p><strong>Question 1:</strong><br>\nIs there a particular reason why <code>containsB</code> has to be evaluated too? My understanding was that the <code>containsB &lt;- do ...</code> statement is not evaluated unless it's required but my guess is that this might behave differently since it's IO and therefore not free of side effects?</p>\n\n<p><strong>Question2:</strong><br>\nWhat's the best practice approach to get the desired behavior (if <code>containsA</code> is false, <code>containsB</code> is not checked) without dealing with nested <code>if-else</code> clauses?</p>\n"}, {"tags": ["haskell", "where-clause"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528627398, "post_id": 50782846, "comment_id": 88572245, "body": "<code>&lt;-</code> is specific to <code>do</code>-blocks since they are syntactic sugar for <code>&gt;&gt;=</code>. You cannot use it in a <code>where</code>-block because <code>where</code>-blocks are not in the context of monads."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528627437, "post_id": 50782846, "comment_id": 88572256, "body": "@AJFarmar What is special about &quot;&gt;&gt;=&quot; that we can only use it within do blocks ?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528627570, "post_id": 50782846, "comment_id": 88572286, "body": "You haven&#39;t understood; <code>do</code>-blocks are <i>syntactic sugar</i> for <code>&gt;&gt;=</code> and <code>&gt;&gt;</code>, not the other way around. The problem is that <code>do</code>-blocks are &#39;special&#39; (read: monadic), and <code>where</code>-blocks are not. Do you understand monads?"}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528627808, "post_id": 50782846, "comment_id": 88572341, "body": "@AJFarmar I haven&#39;t studied them."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528628266, "post_id": 50782846, "comment_id": 88572445, "body": "I would strongly reccommend studying monads before attempting to use them like you are here. <a href=\"http://learnyouahaskell.com/a-fistful-of-monads#getting-our-feet-wet-with-maybe\" rel=\"nofollow noreferrer\">The LYAH chapters</a> are good starting points."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528628860, "post_id": 50782846, "comment_id": 88572618, "body": "@AJFarmar Thanks for the suggestion, I was planning to study them"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1528629507, "post_id": 50782846, "comment_id": 88572771, "body": "Just to be clear: It is perfectly possible to use <code>&gt;&gt;=</code> outside of <code>do</code> (in fact it&#39;s usually used outside of <code>do</code> because, as, AJFarmer said, inside <code>do</code> we can just use <code>&lt;-</code> as sugar for <code>&gt;&gt;=</code>), what isn&#39;t possible outside <code>do</code> is to use <code>&lt;-</code> instead of <code>&gt;&gt;=</code>. You could very well write <code>result = getCurrentDirectory &gt;&gt;= \\path -&gt; ...</code> (though the ... should contain an expression of type <code>IO String</code>, not <code>String</code> - otherwise that&#39;s a type error), but then you could also write the same thing as do block like <code>result = do path &lt;- ...</code> and either way you could just get rid of the <code>where</code> then."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1528630664, "creation_date": 1528630664, "answer_id": 50783302, "question_id": 50782846, "link": "https://stackoverflow.com/questions/50782846/cant-be-used-in-a-where-block/50783302#50783302", "title": "Can&#39;t &quot;&lt;-&quot; be used in a where block?", "body": "<p>The IO monad is designed so to force the programmer choose a specific ordering among side effects.</p>\n\n<p>Assume that this were allowed:</p>\n\n<pre><code>foo :: IO ()\nfoo = do\n  putStrLn \"1\"\n  putStrLn x\n  putStrLn \"2\"\n  putStrLn x\n  putStrLn \"3\"\n where\n  x &lt;- putStrLn \"x generated here\" &gt;&gt; return \"x used here\"\n</code></pre>\n\n<p>What would be the output?</p>\n\n<p>Is <code>x generated here</code> printed at the very beginning of the <code>do</code> block, before the <code>1</code> is printed? Just after that?</p>\n\n<p>Is <code>x generated here</code> printed once, or twice?</p>\n\n<p>If it happens once at the beginning, it's much clearer to simply write</p>\n\n<pre><code>foo :: IO ()\nfoo = do\n  x &lt;- putStrLn \"x generated here\" &gt;&gt; return \"x used here\"\n  putStrLn \"1\"\n  putStrLn x\n  putStrLn \"2\"\n  putStrLn x\n  putStrLn \"3\"\n</code></pre>\n\n<p>If it's meant to be executed later on, we can move it to the wanted point.</p>\n\n<p>If it's meant to be run twice, we can write</p>\n\n<pre><code>foo :: IO ()\nfoo = do\n  x1 &lt;- generateX\n  putStrLn \"1\"\n  putStrLn x1\n  putStrLn \"2\"\n  x2 &lt;- generateX\n  putStrLn x2\n  putStrLn \"3\"\n where\n  generateX = putStrLn \"x generated here\" &gt;&gt; return \"x used here\"\n</code></pre>\n\n<p>(or, for more readability, use <code>let</code> instead of <code>where</code>)</p>\n\n<p>In the above code, it is obvious that <code>generateX</code> is being run twice, at precise points.</p>\n\n<p>Allowing <code>where x &lt;- ...</code> makes the execution unclear. Instead, <code>do</code> makes it precise.</p>\n\n<p>Indeed, the whole syntax of <code>do</code> blocks can be rewritten in terms of the monadic operations <code>&gt;&gt;=</code> and <code>return</code>, which guarantee an unambiguous ordering of IO actions. </p>\n\n<p>In principle, one could extend Haskell and define <code>where x &lt;- ...</code>, allowing it at least in some cases, but there seems to be nothing to gain doing that, and something to lose about code clarity.</p>\n"}], "owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 56, "favorite_count": 0, "accepted_answer_id": 50783302, "answer_count": 1, "score": 1, "last_activity_date": 1528630664, "creation_date": 1528627251, "question_id": 50782846, "link": "https://stackoverflow.com/questions/50782846/cant-be-used-in-a-where-block", "title": "Can&#39;t &quot;&lt;-&quot; be used in a where block?", "body": "<p>I'm basically trying to define the path of a given file in the \"res\" file in the working directory, and what I have done is the following:</p>\n\n<pre><code>iZone :: [Char]\niZone = \"21.evt\"\n\niZonePath :: String IO\niZonePath = result\n where\n  path &lt;- getCurrentDirectory\n  result = (path ++ /res/ ++ iZone)\n</code></pre>\n\n<p>However, ghc comlines with </p>\n\n<blockquote>\n  <p>src/Main.hs:15:8: error:</p>\n\n<pre><code>parse error on input \u2018&lt;-\u2019\n\nPerhaps this statement should be within a 'do' block?    | 15 |   \n</code></pre>\n  \n  <p>path &lt;- getCurrentDirectory</p>\n</blockquote>\n\n<p>What is the reason for that ? Can't I use \"&lt;-\" <em>operation</em> in a \"where\" block ?</p>\n"}, {"tags": ["json", "haskell", "aeson"], "comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1528621628, "post_id": 50782031, "comment_id": 88570949, "body": "What does the error say? Please <a href=\"https://stackoverflow.com/posts/50782031/edit\">edit your question</a> by including the error message."}, {"owner": {"reputation": 31, "user_id": 8109702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d46bbf7a408772a1409342f01f864d00?s=128&d=identicon&r=PG&f=1", "display_name": "Ashot Bes", "link": "https://stackoverflow.com/users/8109702/ashot-bes"}, "reply_to_user": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1528623051, "post_id": 50782031, "comment_id": 88571261, "body": "@MarkSeemann CallStack (from HasCallStack):  error, called at app/Main.hs 14:1 (MainWeatherInfo type) The problem is the type"}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 1, "creation_date": 1528647115, "post_id": 50782031, "comment_id": 88577645, "body": "Could it be that in the Haskell you called the field &quot;mainInfo&quot; but in the JSON it is called &quot;main&quot;? More generally, I find using automatic derivation for serialization is more trouble than its worth: I always write out the full instance. That way if the data structure or the JSON ever change I can roll with the blow much more easily."}], "answers": [{"tags": [], "owner": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "is_accepted": true, "score": 0, "last_activity_date": 1528653308, "last_edit_date": 1528653308, "creation_date": 1528650359, "answer_id": 50786101, "question_id": 50782031, "link": "https://stackoverflow.com/questions/50782031/how-to-extract-information-from-json-file-json-structure-must-be-mapped-through/50786101#50786101", "title": "How to extract information from Json file.Json structure must be mapped through type and use AESON", "body": "<p>The problem is that <strong>aeson</strong> is looking for a field called <strong>mainInfo</strong> within the file but such a field doesn't exist.</p>\n\n<p>Initially I thought we could resolve the problem by changing <strong>mainInfo</strong> in the type definition for <strong>MainWeatherInfo</strong> to <strong>main</strong>. That won't work because <em>a function with the same name exists already!</em></p>\n\n<p><strong>aeson</strong> provides a way out of this and you can find the description in <a href=\"https://artyom.me/aeson\" rel=\"nofollow noreferrer\">this helpful tutorial</a> under the section <strong>Generics: customising field names</strong>.</p>\n\n<p>Just to be more concrete, if you use the turorial's method you'll end up with a <strong>Main.hs</strong> that looks like:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE DeriveAnyClass #-}\n\nmodule Main where\n\nimport GHC.Generics\nimport Data.Aeson\nimport Data.Aeson.Types\nimport qualified Data.ByteString as L\n\ndata MainWeatherInfo = MainWeatherInfo\n  { mainInfo :: Main\n  } deriving ( Show\n             , Generic\n             )\n\ninstance ToJSON MainWeatherInfo where\n  toJSON = genericToJSON defaultOptions { fieldLabelModifier = take 4 }\n\ninstance FromJSON MainWeatherInfo where\n  parseJSON = genericParseJSON defaultOptions { fieldLabelModifier = take 4 }\n\ndata Main = Main\n  { temp :: Double\n  , pressure :: Int\n  , humidity :: Int\n  , temp_min :: Double\n  , temp_max :: Double\n  } deriving ( Show\n             , Generic\n             , ToJSON\n             , FromJSON\n             )\n\nmain :: IO ()\nmain = do\n  contents &lt;- L.readFile \"notes/test.json\"\n  let result = (decodeStrict contents) :: Maybe MainWeatherInfo\n  case result of\n    Nothing -&gt; putStrLn \"error\"\n    Just v  -&gt; putStrLn $ show v \n</code></pre>\n\n<p>I tried it out on my computer and it worked fine.</p>\n\n<p><strong>UPDATE:</strong> I've been extremely silly and assumed that the solution needs to be restricted to just one module. It would probably be <em>much</em> better to have a <strong>Main.hs</strong> that looks like:</p>\n\n<pre><code>module Main where\n\nimport Data.Aeson\nimport qualified Data.ByteString as L\nimport qualified Weather as W\n\nmain :: IO ()\nmain = do\n  contents &lt;- L.readFile \"notes/test.json\"\n  let result = (decodeStrict contents) :: Maybe W.MainWeatherInfo\n  case result of\n    Nothing -&gt; putStrLn \"error\"\n    Just v  -&gt; putStrLn $ show v \n</code></pre>\n\n<p>and also another module <strong>Weather.hs</strong> that is:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE DeriveAnyClass #-}\n\nmodule Weather where\n\nimport GHC.Generics\nimport Data.Aeson\nimport Data.Aeson.Types\n\ndata MainWeatherInfo = MainWeatherInfo\n  { main :: Main\n  } deriving ( Show\n             , Generic\n             , ToJSON\n             , FromJSON\n             )\n\ndata Main = Main\n  { temp :: Double\n  , pressure :: Int\n  , humidity :: Int\n  , temp_min :: Double\n  , temp_max :: Double\n  } deriving ( Show\n             , Generic\n             , ToJSON\n             , FromJSON\n             )\n</code></pre>\n\n<p>I tested it just to be sure, and it works.</p>\n"}], "owner": {"reputation": 31, "user_id": 8109702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d46bbf7a408772a1409342f01f864d00?s=128&d=identicon&r=PG&f=1", "display_name": "Ashot Bes", "link": "https://stackoverflow.com/users/8109702/ashot-bes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 50786101, "answer_count": 1, "score": 0, "last_activity_date": 1528653308, "creation_date": 1528620559, "last_edit_date": 1528621501, "question_id": 50782031, "link": "https://stackoverflow.com/questions/50782031/how-to-extract-information-from-json-file-json-structure-must-be-mapped-through", "title": "How to extract information from Json file.Json structure must be mapped through type and use AESON", "body": "<pre><code>{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE DeriveGeneric #-}\n\nmodule Main where\n\nimport           Data.Aeson\nimport           Data.Aeson.Encode.Pretty\nimport           Data.Aeson.Types\nimport           Data.ByteString as B\nimport qualified Data.ByteString.Lazy.Char8 as LC\nimport           GHC.Generics\nimport           Data.Text\n\ndata MainWeatherInfo = MainWeatherInfo\n    { mainInfo :: Main\n    } deriving (Show,Generic)\n\ndata Main = Main\n    { temp :: Double\n    , pressure :: Int\n    , humidity :: Int\n    , temp_min :: Double\n    , temp_max :: Double\n    } deriving (Show,Generic)\n\ninstance FromJSON MainWeatherInfo\ninstance FromJSON Main\n\nmain :: IO ()\nmain = do\n  jsonString &lt;- B.readFile \"/home/ashot/test.json\"\n  let result = decodeStrict $ jsonString :: Maybe MainWeatherInfo\n  case result of\n    Nothing      -&gt; print \"error\"\n    Just result  -&gt; print result\n</code></pre>\n\n<p>And JSON file:</p>\n\n<pre><code>{\n    \"coord\": {\n        \"lon\": 44.51,\n        \"lat\": 40.18\n    },\n    \"weather\": [{\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10d\"\n    }],\n    \"base\": \"stations\",\n    \"main\": {\n        \"temp\": 299.15,\n        \"pressure\": 1008,\n        \"humidity\": 34,\n        \"temp_min\": 299.15,\n        \"temp_max\": 299.15\n    },\n    \"visibility\": 10000,\n        \"wind\": {\n        \"speed\": 1.5,\n        \"deg\": 190\n    },\n    \"rain\": {\n        \"3h\": 0.195\n    },\n    \"clouds\": {\n        \"all\": 8\n    },\n    \"dt\": 1528615800,\n    \"sys\": {\n        \"type\": 1,\n        \"message\": 0.0036,\n        \"country\": \"AM\",\n        \"sunrise\": 1528594331,\n        \"sunset\": 1528648255\n    },\n    \"id\": 616052,\n    \"name\": \"Yerevan\",\n    \"cod\": 200\n}\n</code></pre>\n\n<p>I need Extract \"main\" info.And i have type MainWeatherInfo.This code is compiled.But during startup I get an this \"error\". How can I fix this and get normal information?</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 5576, "user_id": 767632, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/75a05c23a398c887e8f085b9c870586c?s=128&d=identicon&r=PG", "display_name": "yeputons", "link": "https://stackoverflow.com/users/767632/yeputons"}, "edited": false, "score": 3, "creation_date": 1528620287, "post_id": 50781900, "comment_id": 88570625, "body": "Haskell is a lazy language, meaning that values are computed only when they&#39;re requested. There is more or less no notion of &quot;stop computation&quot;. Please provide <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>. How exactly are you able to observe the behavior? <code>takeWhile</code> should be sufficient, what exactly have you tried and what exactly did not work?"}, {"owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "reply_to_user": {"reputation": 5576, "user_id": 767632, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/75a05c23a398c887e8f085b9c870586c?s=128&d=identicon&r=PG", "display_name": "yeputons", "link": "https://stackoverflow.com/users/767632/yeputons"}, "edited": false, "score": 0, "creation_date": 1528620657, "post_id": 50781900, "comment_id": 88570727, "body": "I have tried: allDivisByRng n start stop =    takeWhile( == True )     [ n  <code>mod</code>  x == 0 | x &lt;- [start, start+1.. stop] ]"}, {"owner": {"reputation": 5576, "user_id": 767632, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/75a05c23a398c887e8f085b9c870586c?s=128&d=identicon&r=PG", "display_name": "yeputons", "link": "https://stackoverflow.com/users/767632/yeputons"}, "edited": false, "score": 2, "creation_date": 1528620736, "post_id": 50781900, "comment_id": 88570743, "body": "Please add that to the question itself and, most importantly, specify how do you run the function, what result do you expect and what you get instead."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1528622792, "post_id": 50781900, "comment_id": 88571190, "body": "If you just use <code>and :: [Bool] -&gt; Bool</code>, computation should be automatically stopped when a <code>False</code> is encountered, since Haskell is lazy. You don&#39;t need to worry about this problem if you just do that."}], "answers": [{"tags": [], "owner": {"reputation": 10159, "user_id": 509824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c62e65b86aabdffdd1c628aad1fefe3?s=128&d=identicon&r=PG", "display_name": "Alberto Garcia-Raboso", "link": "https://stackoverflow.com/users/509824/alberto-garcia-raboso"}, "is_accepted": true, "score": 5, "last_activity_date": 1528622848, "creation_date": 1528622848, "answer_id": 50782281, "question_id": 50781900, "link": "https://stackoverflow.com/questions/50781900/haskell-causing-immediate-termination-of-list-comprehension/50782281#50782281", "title": "Haskell - causing immediate termination of list comprehension", "body": "<p>The function <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:all\" rel=\"noreferrer\"><code>all</code></a>,</p>\n\n<pre><code>all :: Foldable t =&gt; (a -&gt; Bool) -&gt; t a -&gt; Bool\n</code></pre>\n\n<p>allows you to check whether all elements of a foldable structure satisfy a certain condition. In your case,</p>\n\n<pre><code>allDivisByRng n start stop = all ((== 0) . (mod n)) [start..stop]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1720, "user_id": 3080396, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/2gOfM.jpg?s=128&g=1", "display_name": "MBlanc", "link": "https://stackoverflow.com/users/3080396/mblanc"}, "is_accepted": false, "score": 2, "last_activity_date": 1528624139, "last_edit_date": 1528624139, "creation_date": 1528623472, "answer_id": 50782360, "question_id": 50781900, "link": "https://stackoverflow.com/questions/50781900/haskell-causing-immediate-termination-of-list-comprehension/50782360#50782360", "title": "Haskell - causing immediate termination of list comprehension", "body": "<p>There is no need of \"stopping a list comprehension\" in Haskell. By default, evaluation is <a href=\"https://en.wikipedia.org/wiki/Lazy_evaluation\" rel=\"nofollow noreferrer\">lazy</a>. This means values aren't really computed until they are actually needed.</p>\n\n<p>This allows us to work with infinite data structures:</p>\n\n<pre><code>take 10 [1..]\n--&gt; [1,2,3,4,5,6,7,8,9,10]\n</code></pre>\n\n<p>Or with structures that have invalid values in them:</p>\n\n<pre><code>take 1 [\"It works!\", error \"Exception thrown\"]\n--&gt; \"It works!\"\n</code></pre>\n\n<p>So we just need to process the list to a function that reduces the list of booleans to a single bool. </p>\n\n<p><a href=\"https://www.haskell.org/hoogle/?hoogle=%5BBool%5D+-%3E+Bool\" rel=\"nofollow noreferrer\">Hoogle</a> is a nifty little tool to search for functions that match a given type signature. I'd recommend you get acquainted with it, because more often that not you'll find exactly what you're looking for.</p>\n\n<p>In this case, searching for <code>[Bool] -&gt; Bool</code> (a function that reduces a list of booleans to a single bool) gives us the following function defined in the Prelude (no imports needed):</p>\n\n<pre><code>and :: Foldable t =&gt; t Bool -&gt; Bool\n</code></pre>\n\n<p>See if you can apply it to get what you want!</p>\n\n<p>There happens to be another function that is a bit closed to what we want: test if all elements in a list satisfy a predicate. With this \"<a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:all\" rel=\"nofollow noreferrer\"><code>all</code></a>\" fuction, we can rewrite your function in a very legible way (imo):</p>\n\n<pre><code>allDivisByRng n start stop =\n    all (n `isDividedBy`) [start .. stop]\n    where\n        n `isDividedBy` x  =  n `mod` x == 0\n</code></pre>\n"}], "owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 0, "accepted_answer_id": 50782281, "answer_count": 2, "score": 0, "last_activity_date": 1528632129, "creation_date": 1528619461, "last_edit_date": 1528632129, "question_id": 50781900, "link": "https://stackoverflow.com/questions/50781900/haskell-causing-immediate-termination-of-list-comprehension", "title": "Haskell - causing immediate termination of list comprehension", "body": "<p>I am trying to write a function that efficiently tells me when\nitems in a list are divisible or not by all items in a range. The problem is, I don't know to stop the list comprehension immediately when a false is encountered.</p>\n\n<pre><code>allDivisByRng n start stop =\n  [n `mod` x == 0 | x &lt;- [start, start+1 .. stop]]\n</code></pre>\n\n<p>I have tried <code>takeWhile</code> but can't get that to do what I want. Please advise.</p>\n\n<pre><code>allDivisByRng n start stop =\n  takeWhile( == True )     [ n  `mod`  x == 0 | x &lt;- [start, start+1.. stop] ]\n</code></pre>\n\n<p>When I run <code>allDivisByRng 10 2 4</code> I  get a list of trues</p>\n\n<p>Some other sample runs</p>\n\n<pre><code>*Main&gt; allDivisByRng 12 2 10\n[True,True,True]\n*Main&gt; allDivisByRng 12 2 150\n[True,True,True]\n-- I want this to return false\n*Main&gt; allDivisByRng 2520 2 10\n[True,True,True,True,True,True,True,True,True]\n-- I want this to return True\n</code></pre>\n\n<p>I have also tried searching for <code>False</code></p>\n\n<pre><code>allDivisByRng n start stop =\n   takeWhile( == False )     [ n  `mod`  x == 0 | x &lt;- [start, start+1.. stop] ]\n\n*Main&gt; allDivisByRng 10 2 3\n[]\n-- want false to be returned\n*Main&gt; allDivisByRng 10 2 10\n[]\n-- want false to be returned\n*Main&gt; allDivisByRng 2520 2 10\n[]\n-- want true to be returned\n*Main&gt; allDivisByRng 12 2 10\n[]\n-- want false to be returned \n</code></pre>\n"}, {"tags": ["haskell", "haskell-streaming"], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 1, "last_activity_date": 1528715590, "last_edit_date": 1528715590, "creation_date": 1528617780, "answer_id": 50781712, "question_id": 50781571, "link": "https://stackoverflow.com/questions/50781571/append-a-delay-to-each-chunk-with-the-streaming-library/50781712#50781712", "title": "Append a delay to each chunk with the streaming library?", "body": "<p>What we need is a function that inserts a single delay at the end of a chunk stream, and pass that function to <a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/Streaming-Prelude.html#v:maps\" rel=\"nofollow noreferrer\"><code>maps</code></a>. </p>\n\n<p><a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/Streaming-Prelude.html#v:delay\" rel=\"nofollow noreferrer\"><code>delay</code></a> doesn't work here because it put delays between each yielded value. But we can do it easily using functions from <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Applicative.html#v:-60--42-\" rel=\"nofollow noreferrer\"><code>Applicative</code></a>:</p>\n\n<pre><code>  S.print \n$ concats \n$ S.maps (\\s -&gt; s &lt;* liftIO (threadDelay 1000000)) \n$ chunksOf 2 \n$ S.each [1..10]\n</code></pre>\n\n<p>What is happening here? <a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/Streaming-Prelude.html#v:maps\" rel=\"nofollow noreferrer\"><code>maps</code></a> applies a transformation to the \"base functor\" of the <code>Stream</code>. In a \"chunked stream\" obtained with <a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/Streaming.html#v:chunksOf\" rel=\"nofollow noreferrer\"><code>chunksOf</code></a>, that base functor is <em>itself</em> a <code>Stream</code>. Also, the transformation must preserve the return value of the <code>Stream</code>.</p>\n\n<p><code>Stream</code>s can be sequenced with functions like <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Monad.html#v:-62--62--61-\" rel=\"nofollow noreferrer\"><code>(&gt;&gt;=) :: Stream f m a -&gt; (a -&gt; Stream f m b) -&gt; Stream f m b</code></a> if the next stream depends on the final result of the previous one, or with functions like <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Applicative.html#v:-60--42-\" rel=\"nofollow noreferrer\"><code>(&lt;*) :: Stream f m a -&gt; Stream f m b -&gt; Stream f m a</code></a> if it doesn't. <code>(&lt;*)</code> preserves the return value of the first <code>Stream</code>, which is what we want in this case.</p>\n\n<p>We do not want to yield any more elements, but only to introduce a delay effect, so we simply <code>liftIO</code> the effect into the <code>Stream</code> monad.</p>\n\n<hr>\n\n<p>Another way to insert delays after each yielded value of a <code>Stream</code> is to <a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/Streaming-Prelude.html#v:zipWith\" rel=\"nofollow noreferrer\">zip it</a> with an <a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/Streaming-Prelude.html#v:repeatM\" rel=\"nofollow noreferrer\">infinite list</a> of delays:</p>\n\n<pre><code>delay' :: MonadIO m =&gt; Int -&gt; Stream (Of a) m r -&gt; Stream (Of a) m r\ndelay' micros s = S.zipWith const s (S.repeatM (liftIO (threadDelay micros)))\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 9920413, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TzmuExx3d-I/AAAAAAAAAAI/AAAAAAAAAAA/3oeRKnNl2_g/photo.jpg?sz=128", "display_name": "Adam Schneider", "link": "https://stackoverflow.com/users/9920413/adam-schneider"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 50781712, "answer_count": 1, "score": 0, "last_activity_date": 1528715590, "creation_date": 1528616658, "question_id": 50781571, "link": "https://stackoverflow.com/questions/50781571/append-a-delay-to-each-chunk-with-the-streaming-library", "title": "Append a delay to each chunk with the streaming library?", "body": "<p>newbie to Streaming and Haskell here.</p>\n\n<p>I've been playing around with the <a href=\"http://hackage.haskell.org/package/streaming\" rel=\"nofollow noreferrer\">streaming</a> library and I'm particularly interested in understanding the chunks part. Eg:</p>\n\n<pre><code>S.print $ S.delay 1.0 $ concats $ chunksOf 2 $ S.each [1..10]\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>S.print $ concats $ S.maps (S.delay 1.0) $ chunksOf 2 $ S.each [1..10]\n</code></pre>\n\n<p>Here I can introduce a delay after each element but what I want is to have a delay after each chunk, in this case a delay every second element. I tried this but doesn't compile:</p>\n\n<pre><code>S.print $ concats $ S.delay 1.0 $ chunksOf 2 $ S.each [1..10]\n</code></pre>\n\n<p>How can I achieve this?</p>\n"}, {"tags": ["haskell", "types", "type-inference"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1528573595, "post_id": 50777884, "comment_id": 88562793, "body": "Well the algorithm that Haskell uses is <i>Algorithm W</i> <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system#Algorithm_W\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/&hellip;</a>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528573764, "post_id": 50777884, "comment_id": 88562826, "body": "But I find it a bit weird why it produces a mess. Typically the idea is that you assign a type to the parameters, and later make it more specific, sometimes introducing new type variables, or removing some given two are basically the same, etc."}, {"owner": {"reputation": 229, "user_id": 7450338, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5419bd8beb0bdef4aac01a64cb9c7e9e?s=128&d=identicon&r=PG&f=1", "display_name": "A.M.", "link": "https://stackoverflow.com/users/7450338/a-m"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528573911, "post_id": 50777884, "comment_id": 88562868, "body": "@WillemVanOnsem I&#39;m afraid that having never studied logic or philosophy (yet) this algorithm isn&#39;t of any help to me."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1528574031, "post_id": 50777884, "comment_id": 88562885, "body": "@A.Moris: well I don&#39;t really understand what you expect as an answer. The algorithm cited is not made more complex than it should be. There is a rather short implementation (<a href=\"https://github.com/wh5a/Algorithm-W-Step-By-Step/blob/master/AlgorithmW.pdf\" rel=\"nofollow noreferrer\">github.com/wh5a/Algorithm-W-Step-By-Step/blob/master/&hellip;</a>). Yes it takes some work, since typically an algorithm has to encode what is for some humans &quot;common sense&quot;, but a machine has no common sense."}, {"owner": {"reputation": 5183, "user_id": 3155195, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/96fb82a06f0a269039e913211ac44fcd?s=128&d=identicon&r=PG&f=1", "display_name": "zehnpaard", "link": "https://stackoverflow.com/users/3155195/zehnpaard"}, "edited": false, "score": 1, "creation_date": 1528575633, "post_id": 50777884, "comment_id": 88563230, "body": "I think it&#39;s best to think heuristically in pieces with interesting patterns: for this problem, g (g x) - this is a function (because later it takes (h y) as a parameter) and because of its recursively called nature it suggests g has type (a -&gt; a).  From there the rest probably flows more easily?"}, {"owner": {"reputation": 229, "user_id": 7450338, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5419bd8beb0bdef4aac01a64cb9c7e9e?s=128&d=identicon&r=PG&f=1", "display_name": "A.M.", "link": "https://stackoverflow.com/users/7450338/a-m"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528575864, "post_id": 50777884, "comment_id": 88563282, "body": "@WillemVanOnsem At minimum, an explanation of how to deduce the type of the function given."}], "answers": [{"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": true, "score": 10, "last_activity_date": 1528622488, "last_edit_date": 1528622488, "creation_date": 1528576485, "answer_id": 50778312, "question_id": 50777884, "link": "https://stackoverflow.com/questions/50777884/manual-type-inference-in-haskell/50778312#50778312", "title": "Manual type inference in Haskell", "body": "<p>Let's inspect the function at the top level:</p>\n\n<pre><code>f g h x y = g (g x) (h y)\n</code></pre>\n\n<p>We will begin by assigning names to types, then going along and specialising them as we learn more about the function.</p>\n\n<p>Firstly, let's assign a type to the top expression. Let's call it <code>a</code>:</p>\n\n<pre><code>g (g x) (h y) :: a\n</code></pre>\n\n<p>Let's take the first argument out and assign types respectively:</p>\n\n<pre><code>-- 'expanding'  (g (g x)) (h y) :: a\nh y :: b\ng (g x) :: b -&gt; a\n</code></pre>\n\n<p>And again</p>\n\n<pre><code>-- 'expanding' g (g x) :: b -&gt; a\ng x :: c\ng :: c -&gt; b -&gt; a\n</code></pre>\n\n<p>And again</p>\n\n<pre><code>-- 'expanding' g x :: c\nx :: d\ng :: d -&gt; c\n</code></pre>\n\n<p>But hold on: we now have that <code>g :: c -&gt; b -&gt; a</code> and that <code>g :: d -&gt; c</code>. So by inspection, we know that <code>c</code> and <code>d</code> are equivalent (written <code>c ~ d</code>) and also that <code>c ~ b -&gt; a</code>.</p>\n\n<p>This can be inferred by simply comparing the two types for <code>g</code> that we have inferred. Note that this is <em>not</em> a type contradiction, since the type variables are general enough to fit their equivalents. This <em>would</em> be a contradiction if we had inferred, for instance, that <code>Int ~ Bool</code> somewhere.</p>\n\n<p>So we now have the following information in total: (a little work omitted)</p>\n\n<pre><code>y :: e\nh :: e -&gt; b\nx :: b -&gt; a             -- Originally d, applied d ~ b -&gt; a.\ng :: (b -&gt; a) -&gt; b -&gt; a -- Originally c -&gt; b -&gt; a, applied c ~ b -&gt; a\n</code></pre>\n\n<p>This was done by substituting the most specific form of each type variable, that is substituting <code>c</code> and <code>d</code> for the more specific <code>b -&gt; a</code>.</p>\n\n<p>So, simply inspecting which arguments go where, we see that</p>\n\n<pre><code>f :: ((b -&gt; a) -&gt; b -&gt; a) -&gt; (e -&gt; b) -&gt; (b -&gt; a) -&gt; e -&gt; a\n</code></pre>\n\n<p>This is confirmed by GHC.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 6, "last_activity_date": 1528576586, "creation_date": 1528576586, "answer_id": 50778324, "question_id": 50777884, "link": "https://stackoverflow.com/questions/50777884/manual-type-inference-in-haskell/50778324#50778324", "title": "Manual type inference in Haskell", "body": "<p>Well the function is:</p>\n\n<pre><code>f g h x y = g (g x) (h y)\n</code></pre>\n\n<p>or more verbose:</p>\n\n<pre><code>f g h x y = (g (g x)) (h y)\n</code></pre>\n\n<p>Intially we assume that all the four parameters (<code>g</code>, <code>h</code>, <code>x</code>, and <code>y</code>) have different types. We also introduce an output type for our function (here <code>t</code>):</p>\n\n<pre><code>g :: a\nh :: b\nx :: c\ny :: d\nf g h x y :: t\n</code></pre>\n\n<p>But now we are going to perform some inference. We see for example <code>g x</code>, so this means that there is a function application with <code>g</code> the function, and <code>x</code> the parameter. This means that <code>g</code> is a function, with as input type <code>c</code>, so we redefine the type of <code>g</code> to:</p>\n\n<pre><code>g :: a ~ (c -&gt; e)\nh :: b\nx :: c\ny :: d\nf g h x y :: t\n</code></pre>\n\n<p>(here the tilde <code>~</code> means that two types are the same, so <code>a</code> is the same as <code>c -&gt; e</code>)).</p>\n\n<p>Since <code>g</code> has type <code>g :: c -&gt; e</code>, and <code>x</code> has type <code>c</code>, this thus means that the result of the function application <code>g x</code> has type <code>g x :: e</code>.</p>\n\n<p>We see another function application, <code>g</code> as function, and <code>g x</code> as argument. So this means that the input type of <code>g</code> (which is <code>c</code>), should be equal to the type of <code>g x</code> (which is <code>e</code>), hence we know that <code>c ~ e</code>, so the types now are:</p>\n\n<pre><code>     c ~ e\ng :: a ~ (c -&gt; c)\nh :: b\nx :: c\ny :: d\nf g h x y :: t\n</code></pre>\n\n<p>Now we see a function application with <code>h</code> the function, and <code>y</code> the argument. So that means that <code>h</code> is a function, and the input type is the same as the type of <code>y :: d</code>, so <code>h</code> has type <code>d -&gt; f</code>, so that means:</p>\n\n<pre><code>     c ~ e\ng :: a ~ (c -&gt; c)\nh :: b ~ (d -&gt; f)\nx :: c\ny :: d\nf g h x y :: t\n</code></pre>\n\n<p>finally we see a function application with <code>g (g x)</code> the function, and <code>h y</code> the argument, so that means that the ouput type of <code>g (g x) :: c</code> should be a function, with <code>f</code> as input type, and <code>t</code> as output type, so that means that <code>c ~ (f -&gt; t)</code>, and therefore:</p>\n\n<pre><code>     c ~ e\n     c ~ (f -&gt; t)\ng :: a ~ (c -&gt; c) ~ ((f -&gt; t) -&gt; (f -&gt; t))\nh :: b ~ (d -&gt; f)\nx :: (f -&gt; t)\ny :: d\nf g h x y :: t\n</code></pre>\n\n<p>So that means that since <code>f</code> has those parameters <code>g</code>, <code>h</code>, <code>x</code> and <code>y</code>, the type of <code>f</code> is:</p>\n\n<pre><code>f :: ((f -&gt; t) -&gt; (f -&gt; t)) -&gt; (d -&gt; f) -&gt; (f -&gt; t) -&gt; d -&gt; t\n--   \\_________ __________/    \\__ ___/    \\__ ___/    |\n--             v                  v           v        |\n--             g                  h           x        y\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 3, "last_activity_date": 1528576706, "creation_date": 1528576706, "answer_id": 50778341, "question_id": 50777884, "link": "https://stackoverflow.com/questions/50777884/manual-type-inference-in-haskell/50778341#50778341", "title": "Manual type inference in Haskell", "body": "<p>You already described how to do it, but maybe you missed the unification step.  That is, sometimes we know that two variables are the same:</p>\n\n<pre><code>x :: a\ny :: b\ng :: a -&gt; b    -- from g x\nh :: c -&gt; d    -- from h y\na ~ b          -- from g (g x)\n</code></pre>\n\n<p>We know that <code>a</code> and <code>b</code> are the same, because we passed <code>g x</code>, a <code>b</code>, to <code>g</code>, which expects an <code>a</code>.  So now we replace all the <code>b</code>s with <code>a</code>, and keep going until we have considered all subexpressions...</p>\n\n<p>With regard to your \"huge mess\" comment, I have a couple things to say:</p>\n\n<ol>\n<li>This is the way to do it.  If it's too hard, you just need to <em>practice</em>, and it will get easier.  You will start to develop an intuition and it will come more easily.</li>\n<li>This particular function is not an easy function to do.  I've been programming Haskell for 12 years and I still need to go through the unification algorithm on paper for this one.  The fact that it is so abstract doesn't help -- if I knew what this function's purpose was it would be much easer.</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1613546889, "last_edit_date": 1613546889, "creation_date": 1528745267, "answer_id": 50804760, "question_id": 50777884, "link": "https://stackoverflow.com/questions/50777884/manual-type-inference-in-haskell/50804760#50804760", "title": "Manual type inference in Haskell", "body": "<p>Simply write down all the entities' types under them:</p>\n<pre><code>f g h x y = g (g x)   (h y) \n                 x :: x  y :: y\n                       h :: y -&gt; a            , h y :: a\n               g :: x -&gt; b                    , g x :: b\n            g    :: b -&gt; (a -&gt; t)             , x ~ b , b ~ (a -&gt; t)\nf :: (x -&gt; b) -&gt; (y -&gt; a) -&gt; x -&gt; y -&gt; t      , x ~ b , b ~ (a -&gt; t)\nf :: (b -&gt; b) -&gt; (y -&gt; a) -&gt; b -&gt; y -&gt; t      , b ~ (a -&gt; t)\n--       g           h       x    y\n</code></pre>\n<p>Thus <code>f :: ((a -&gt; t) -&gt; (a -&gt; t)) -&gt; (y -&gt; a) -&gt; (a -&gt; t) -&gt; y -&gt; t</code>. That's all.</p>\n<p>Indeed,</p>\n<pre><code>~&gt; :t let f g h x y = g (g x) (h y) in f\n    :: ((t1 -&gt; t) -&gt; t1 -&gt; t) -&gt; (t2 -&gt; t1) -&gt; (t1 -&gt; t) -&gt; t2 -&gt; t\n</code></pre>\n<hr />\n<p>This goes like this:</p>\n<ol>\n<li><code>x</code> must have some type, let's call it <code>x</code>: <code>x :: x</code>.</li>\n<li><code>y</code> must have some type, let's call it <code>y</code>: <code>y :: y</code>.</li>\n<li><code>h y</code> must have some type, let's call it <code>a</code>: <code>h y :: a</code>. hence <code>h :: y -&gt; a</code>.</li>\n<li><code>g x</code> must have some type, let's call it <code>b</code>: <code>g x :: b</code>. hence <code>g :: x -&gt; b</code>.</li>\n<li><code>g _ _</code> must have some type, let's call it <code>t</code>. hence <code>g :: b -&gt; a -&gt; t</code>.<br />\nwhich is the same as <code>g :: b -&gt; (a -&gt; t)</code>.</li>\n<li>the two type signatures for <code>g</code> must <em>unify</em>, i.e. be the same under some <em>substitution</em> of type variables involved, since the two signatures describe the same entity, <code>g</code>.<br />\nthus we must have <code>x ~ b, b ~ (a -&gt; t)</code>. This is the substitution.</li>\n<li>Having all the types of the arguments to <code>f</code>, we know it produces what <code>g</code> produces, i.e. <code>t</code>. So we can write down its type, <code>(x -&gt; b) -&gt; (y -&gt; a) -&gt; x -&gt; y -&gt; t</code>.</li>\n<li>Lastly, we substitute the types according to the substitution, to reduce the number of type variables involved. Thus we substitute <code>b</code> for <code>x</code> first, and then <code>a -&gt; t</code> for <code>b</code>, each time removing the eliminated type variable from the substitution.</li>\n<li>When the substitution is empty, we are DONE.</li>\n</ol>\n<p>Of course we could have chosen to replace <code>b</code> with <code>x</code> at first, ending up with the substitution <code>x ~ (a -&gt; t)</code>, and then we'd end up with the same type in the end, <em>if we always replace the simpler types with the more complex ones</em> (like, replacing <code>b</code> with <code>(a -&gt; t)</code>, and <em>not</em> vice versa).</p>\n<p>Simple steps, guaranteed results.</p>\n<hr />\n<p>Here's another attempt at shorter / clearer derivation. We focus on the fact that <code>g x</code> serves as <code>g</code>'s argument, thus <code>g x :: x</code> (and the trivial part still remains, <code>h y :: a</code>):</p>\n<pre><code>f g h x y = g (g x)   (h y)      {- g :: g , h :: h , x :: x , y :: y\n  g h x y        x       y                 , g x   :: x   -- !\n                  x       a      t         , g x a :: t\n                                               x a :: t  ... x ~ a-&gt;t\nf :: g             -&gt;h     -&gt;x     -&gt;y-&gt;t\nf :: (x     -&gt;x   )-&gt;(y-&gt;a)-&gt;x     -&gt;y-&gt;t \nf :: ((a-&gt;t)-&gt;a-&gt;t)-&gt;(y-&gt;a)-&gt;(a-&gt;t)-&gt;y-&gt;t      -}\n</code></pre>\n<p>Pretty simple after all.</p>\n<p>The last argument in the definition can be elided, as <code>f g h x = (g . g) x . h</code>.</p>\n"}], "owner": {"reputation": 229, "user_id": 7450338, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5419bd8beb0bdef4aac01a64cb9c7e9e?s=128&d=identicon&r=PG&f=1", "display_name": "A.M.", "link": "https://stackoverflow.com/users/7450338/a-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 470, "favorite_count": 0, "accepted_answer_id": 50778312, "answer_count": 4, "score": 2, "last_activity_date": 1613546889, "creation_date": 1528573281, "question_id": 50777884, "link": "https://stackoverflow.com/questions/50777884/manual-type-inference-in-haskell", "title": "Manual type inference in Haskell", "body": "<p>Consider the function</p>\n\n<pre><code>f g h x y = g (g x) (h y)\n</code></pre>\n\n<p>What is its type? Obviously I can just use <code>:t f</code> to find out, but if I need to deduce this manually, what's the best way to go about this?</p>\n\n<p>The method I have been shown is to assign types to parameters and deduce from there - e.g. <code>x :: a</code>, <code>y :: b</code> gives us that <code>g :: a -&gt; c</code> and <code>h :: b -&gt; d</code> for some <code>c</code>,<code>d</code> (from <code>g x</code>, <code>h y</code>) and then we keep on making deductions from there (<code>c = a</code> from <code>g (g x) (h y)</code> etc.).</p>\n\n<p>However this sometimes just turns into a huge mess and often I'm not sure how to make further deductions or work out when I'm done. Other problems sometimes happen - for instance, in this case <code>x</code> will turn out to be a function, but that was not obvious to me before cheating and looking up the type.</p>\n\n<p>Is there a specific algorithm that will always work (and is reasonable for a human to execute quickly)? Otherwise, are there some heuristics or tips that I am missing?</p>\n"}, {"tags": ["haskell", "generics"], "answers": [{"comments": [{"owner": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "edited": false, "score": 0, "creation_date": 1528585712, "post_id": 50778231, "comment_id": 88565425, "body": "Excellent, I was wondering if something like this might work.  One question though - how can you tell that in my example <code>xs</code> is not in WHNF? In functions of the type   <code>bar :: (All TestClass xs) =&gt; NP f xs -&gt; (forall a. Typeable a =&gt; f a -&gt; [z]) -&gt; [z]   bar np f = cfoldMap_NP (Proxy :: Proxy TestClass) f np</code>  The constraint is solved succesfully, even though no more information seems to be provided to the compiler than in my failing case."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "edited": false, "score": 0, "creation_date": 1528587761, "post_id": 50778231, "comment_id": 88565732, "body": "@matchwood I said it couldn&#39;t <i>reduce</i>. The constraint is still <i>there</i>, but without knowing <code>xs</code> you can&#39;t break it down to its constituent constraints. Many functions are OK with this, and will simply take the whole constraint and break it down within themselves, but your case isn&#39;t one of those."}, {"owner": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "edited": false, "score": 0, "creation_date": 1528619719, "post_id": 50778231, "comment_id": 88570511, "body": "I understand that it can&#39;t reduce, but I&#39;d like to understand why it can in some cases but not in others. I think I get it though - the reduction is forced by anything that uses the individual types in the type level list, which makes sense - there has to be some explicit point where the compiler has reached a requirement of a simple &quot;Class a&quot; constraint, which it can then match against a provided superclass constraint."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "edited": false, "score": 0, "creation_date": 1528629511, "post_id": 50778231, "comment_id": 88572772, "body": "Type families reduce when an equation matches. <code>All</code> needs the list to be either <code>[]</code> or  <code>(x:xs)</code> before an equation matches. In neither case of <code>bar</code> do you know what <code>xs</code> is, so in neither case the constraint can reduce. Reduction has nothing to do with <i>use</i>. It has to do with how much you know about the arguments."}, {"owner": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "edited": false, "score": 1, "creation_date": 1528636141, "post_id": 50778231, "comment_id": 88574450, "body": "Ah, I think I have it now. If I understand you correctly then the only place the reduction can take place is in places like <a href=\"https://github.com/well-typed/generics-sop/blob/master/src/Generics/SOP/NP.hs#L523\" rel=\"nofollow noreferrer\">github.com/well-typed/generics-sop/blob/master/src/Generics/&zwnj;&#8203;SOP/&hellip;</a> - where the actual traversal through NP takes place.  Everywhere else, things only work because functions have been defined in terms of constraints. So in my <code>bar</code> in the comments, the compiler does not know that the Typeable function can be used because of the All constraint, it just knows that it needs some function that can fulfill the TestClass constraint in the cfoldMap_NP function."}, {"owner": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "edited": false, "score": 0, "creation_date": 1528636200, "post_id": 50778231, "comment_id": 88574468, "body": "And any function solely constrained by a superclass of a class can be safely &#39;lifted&#39;, as it were, into a function constrained by the class."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 5, "last_activity_date": 1528575891, "creation_date": 1528575891, "answer_id": 50778231, "question_id": 50777865, "link": "https://stackoverflow.com/questions/50777865/super-classes-with-all-from-generics-sop/50778231#50778231", "title": "Super classes with All from generics-sop", "body": "<p><code>All f xs</code> is actually equivalent to <code>(AllF f xs, SListI xs)</code>. <code>AllF</code> is a type family:</p>\n\n<pre><code>type family AllF (c :: k -&gt; Constraint) (xs :: [k]) :: Constraint where\n  AllF _ '[] = ()\n  AllF c (x:xs) = (c x, All c xs)\n</code></pre>\n\n<p>You see that it cannot reduce unless <code>xs</code> is in WHNF, so it gets stuck in your case. You can use <code>mapAll</code>:</p>\n\n<pre><code>import Generics.SOP.Dict\n\nmapAll :: forall c d xs.\n          (forall a. Dict c a -&gt; Dict d a) -&gt;\n          Dict (All c) xs -&gt; Dict (All d) xs\n-- ::ish forall f g xs. (forall a. f a -&gt; g a) -&gt; All f xs -&gt; All g xs\n\n-- stores a constraint in a manipulatable way\ndata Dict (f :: k -&gt; Constraint) (a :: k) where\n     Dict :: f a =&gt; Dict f a\n\nbar :: forall xs f z. (All TestClass xs) =&gt; NP f xs -&gt; z\nbar = case mapAll @TestClass @Typeable @xs (\\Dict -&gt; Dict) Dict of\n           Dict -&gt; foo\n\n-- TestClass a -&gt; Typeable a pretty trivially:\n--   match Dict to reveal TestClass a\n--   put the Typeable part of the TestClass instance into another Dict\n-- We already know All TestClass xs; place that into a Dict\n-- mapAll magic makes a Dict (All Typeable) xs\n-- match on it to reveal\n-- foo's constraint is satisfied\n</code></pre>\n"}], "owner": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 1, "accepted_answer_id": 50778231, "answer_count": 1, "score": 4, "last_activity_date": 1528575891, "creation_date": 1528573093, "last_edit_date": 1528573693, "question_id": 50777865, "link": "https://stackoverflow.com/questions/50777865/super-classes-with-all-from-generics-sop", "title": "Super classes with All from generics-sop", "body": "<p>I'm trying to use <a href=\"https://hackage.haskell.org/package/generics-sop-0.3.2.0/docs/Generics-SOP-Constraint.html#t:All\" rel=\"nofollow noreferrer\">All</a> from generics-sop to constrain a list of types. Everything works as expected with simple classes like <code>All Typeable xs</code>, but I'd like to be able to do something like the following: </p>\n\n<pre><code>class (Typeable a) =&gt; TestClass (a :: k)\ninstance (Typeable a) =&gt; TestClass a\n\nfoo :: (All Typeable xs) =&gt; NP f xs -&gt; z\nfoo = undefined\n\nbar :: (All TestClass xs) =&gt; NP f xs -&gt; z\nbar = foo \n</code></pre>\n\n<p>This gives the error</p>\n\n<pre><code>Could not deduce: Generics.SOP.Constraint.AllF Typeable xs\n  arising from a use of \u2018foo\u2019\n  from the context: All TestClass xs\n</code></pre>\n\n<p>The generics-sop documentation states that </p>\n\n<blockquote>\n  <p>\"All Eq '[ Int, Bool, Char ]\n  is equivalent to the constraint\n  (Eq Int, Eq Bool, Eq Char)</p>\n</blockquote>\n\n<p>But in this case it doesn't seem to be, since </p>\n\n<pre><code>foo2 :: (Typeable a, Typeable b) =&gt; NP f '[a,b] -&gt; z\nfoo2 = undefined\n\nbar2 :: (TestClass a, TestClass b) =&gt; NP f '[a,b] -&gt; z\nbar2 = foo2\n</code></pre>\n\n<p>compiles fine.</p>\n\n<p>My questions</p>\n\n<p>1) Is this the expected behaviour?\n2) If so, is there any workaround?</p>\n\n<p>My use case for this is that I want to pass around a type level list of types constrained by a bunch of different classes under a single class name (like <code>class (Typeable a, Eq a, Show a) =&gt; MyClass a</code>) but also be able to call less specialised functions that only require some subset of those classes.</p>\n\n<p>Searching for answers turned up <a href=\"https://ghc.haskell.org/trac/ghc/ticket/11427\" rel=\"nofollow noreferrer\">superclasses aren't considered</a>, but I don't think that is the issue here - I think it is something to do with the way the <code>All</code> constraint is put together in <code>generics-sop</code>. It is as if the compiler is simply comparing the two <code>All</code> constraints, rather than expanding them both and then type checking.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528572017, "post_id": 50777610, "comment_id": 88562432, "body": "If you feel like putting a strain on yourself you might make them newtype wrappers on tuples and have the typeclasses just return them unwrapped. Then you have a very easy and simple access to lens functions on tuples but hey that&#39;s kinda hacky and can get out of hand."}, {"owner": {"reputation": 19024, "user_id": 286335, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/6882f075e155c96b4ff0fe3bcab951f3?s=128&d=identicon&r=PG&f=1", "display_name": "cibercitizen1", "link": "https://stackoverflow.com/users/286335/cibercitizen1"}, "reply_to_user": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528572215, "post_id": 50777610, "comment_id": 88562473, "body": "@Welperooni I&#39;m sorry for not fully understanding you. Never used lenses. If this approach is simpler, then you could write a short example. Thanks"}], "answers": [{"comments": [{"owner": {"reputation": 19024, "user_id": 286335, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/6882f075e155c96b4ff0fe3bcab951f3?s=128&d=identicon&r=PG&f=1", "display_name": "cibercitizen1", "link": "https://stackoverflow.com/users/286335/cibercitizen1"}, "edited": false, "score": 2, "creation_date": 1528572801, "post_id": 50777780, "comment_id": 88562609, "body": "Great! Didn&#39;t know &lt;- for this: pattern TwsTwa { tws, twa } &lt;- Polar twa tws"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1528573294, "last_edit_date": 1528573294, "creation_date": 1528572456, "answer_id": 50777780, "question_id": 50777610, "link": "https://stackoverflow.com/questions/50777610/alias-for-a-data-type/50777780#50777780", "title": "Alias for a data type", "body": "<p>A type alias is typically constructed with the <strong><code>type</code> keyword</strong>. For example:</p>\n\n<pre><code><b>type</b> TwsTwa = Polar</code></pre>\n\n<p>Now you can use <code>TwsTwa</code> everywhere in the code, and the compiler will translate this to <code>Polar</code> behind the curtains.</p>\n\n<p>But now we of course still have not defined <code>tws :: TwsTwa -&gt; Double</code> and <code>twa :: TwsTwa -&gt; Double</code>, we can do so by:</p>\n\n<pre><code>tws :: TwsTwa -&gt; Double\ntws = distance\n\ntwa :: TwsTwa -&gt; Double\ntwa = angle\n</code></pre>\n\n<p>And we probably want to declare a <em>bi-directional</em> pattern-synonym as well, such that we can work with a <code>TwsTwa</code> \"data constructor\" (although technically speaking, we only defined a synonym, not a new one):</p>\n\n<pre><code>{-# LANGUAGE PatternSynonyms #-}\n\npattern TwsTwa :: Double -&gt; Double -&gt; Polar\npattern TwsTwa { tws, twa } = Polar twa tws\n-- can use record syntax\n-- including field accesses, record updates, and record construction\n</code></pre>\n\n<p>Although personally I think defining new constructors, and patterns is a bit overkill. Simply using a type synonym should be sufficient.</p>\n\n<p>Type synonyms are used for the several reasons:</p>\n\n<ul>\n<li><p>to reduce the complexity of a certain type. For example:</p>\n\n<pre><code>type MightError a = Either String a\ntype TwoList a = ([a], [a])\n</code></pre></li>\n<li><p>to use a type that can later change, for example:</p>\n\n<pre><code>type Time = Int\n</code></pre>\n\n<p>if we later change our mind, we can set <code>Time</code> to <code>Integer</code>, and then all functions with <code>Time</code> are updated automatically.</p></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": false, "score": 2, "last_activity_date": 1528576297, "creation_date": 1528576297, "answer_id": 50778287, "question_id": 50777610, "link": "https://stackoverflow.com/questions/50777610/alias-for-a-data-type/50778287#50778287", "title": "Alias for a data type", "body": "<p>This is what I meant, not the best, but an interesting option   </p>\n\n<pre><code>import Control.Lens\n\nnewtype Polar = Polar { unPolar :: (Double,Double) } deriving Show\nnewtype TwsTwa = TwsTwa { unTws :: (Double,Double) } deriving Show\n\nclass ToTup a where\n  -- You could make them accept any type instead of just Double but idk\n  iTup :: Iso' (Double,Double) a\n  unPol :: a -&gt; (Double,Double)\n\n  rotate :: Double -&gt; a -&gt; a\n  rotate ang = under iTup (\\(x,y) -&gt; (y,x+ang)) \n\n  sumP :: a -&gt; a -&gt; a\n  sumP p1 = under iTup (\\(x,y) -&gt; unPol p1 &amp; (\\(x1,y1) -&gt; (x1+x,y1+y))) \n\ninstance ToTup Polar where\n  iTup = iso Polar unPolar \n  unPol = unPolar\n\ninstance ToTup TwsTwa where\n  iTup = iso TwsTwa unTws\n  unPol = unTws\n</code></pre>\n\n<p>But hey, it protects you from accidentally passing in a wrong type, whereas a type synonym is just for convenience.</p>\n"}], "owner": {"reputation": 19024, "user_id": 286335, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/6882f075e155c96b4ff0fe3bcab951f3?s=128&d=identicon&r=PG&f=1", "display_name": "cibercitizen1", "link": "https://stackoverflow.com/users/286335/cibercitizen1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 169, "favorite_count": 1, "accepted_answer_id": 50777780, "answer_count": 2, "score": 2, "last_activity_date": 1528614543, "creation_date": 1528571309, "last_edit_date": 1528614543, "question_id": 50777610, "link": "https://stackoverflow.com/questions/50777610/alias-for-a-data-type", "title": "Alias for a data type", "body": "<p>I want to define a data type <code>Polar</code> to perform calculations using polar coordinates:</p>\n\n<pre><code>data Polar = Polar { distance :: Double, angle :: Double }\n</code></pre>\n\n<p>and have functions like <code>rotate</code>, <code>sum</code> and so on.</p>\n\n<p>Then, I would like to have a \"synonym class\" (or just alias) like\n<code>TwsTwa</code> (true wind speed and true wind angle) like </p>\n\n<pre><code>data TwsTwa = TwsTwa { tws :: Double, twa :: Double }\n</code></pre>\n\n<p>without having to redefine the functions.</p>\n\n<p>Is the following, using a class, the best solution for that?\nIs it the shorter one? Please note I'm referring to the way <code>TwsTwa</code> is defined, not to how difficult is to write the general code for <code>Polar</code>.\nWhat alternatives are there?</p>\n\n<pre><code>-- .................................................\n-- .................................................\nclass PolarFamily tPolar where\n  distanceP :: tPolar -&gt; Double\n  angleP :: tPolar -&gt; Double\n  toMe :: Polar -&gt; tPolar\n\n  rotate :: tPolar -&gt; Double -&gt; tPolar\n  rotate pol ang =\n     toMe $ Polar {distance=distanceP pol, angle=(angleP pol) + ang}\n\n  sumP :: tPolar -&gt; tPolar -&gt; tPolar\n  sumP p1 p2 =\n     toMe $ Polar {distance=(distanceP p1)+(distanceP p2), \n            angle=(angleP p1)+(angleP p2) } -- caution: wrong calculation\n\n-- .................................................\n-- .................................................\ndata Polar = Polar { distance :: Double, angle :: Double }\n\ninstance PolarFamily Polar where\n  distanceP = distance\n  angleP = angle\n  toMe p = p\n</code></pre>\n\n<p>TwsTwa is defined then like this:</p>\n\n<pre><code>-- .................................................\n-- .................................................\ndata TwsTwa = TwsTwa { tws :: Double, twa :: Double }\n\ninstance PolarFamily TwsTwa where\n  distanceP = tws\n  angleP = twa\n  toMe Polar{ distance=d, angle=a} = TwsTwa {tws=d, twa=a}\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 7, "creation_date": 1528538672, "post_id": 50773031, "comment_id": 88553400, "body": "Welcome to StackOverflow. Please always include any error information in the question, and generally follow <a href=\"https://stackoverflow.com/help/how-to-ask\">the guide</a>. Else you make answering much more cumbersome than it needs to be (and your questions will probably be downvoted, making them less visible)."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1528539076, "post_id": 50773031, "comment_id": 88553492, "body": "Well if you encounter a buch of errors, doesn&#39;t it makes much sense to <i>include</i> the errors?"}], "answers": [{"tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": true, "score": 3, "last_activity_date": 1528542668, "last_edit_date": 1592644375, "creation_date": 1528539619, "answer_id": 50773212, "question_id": 50773031, "link": "https://stackoverflow.com/questions/50773031/how-to-deal-with-strict-type-checking-in-haskell/50773212#50773212", "title": "how to deal with strict type checking in Haskell?", "body": "<ol>\n<li><p>Your <code>smz</code> function already exists in the standard Prelude and it's called <code>and</code>.</p>\n</li>\n<li><p><code>mod</code> can only be used with <code>Integral</code>, <code>mod :: Integral a =&gt; a -&gt; a -&gt; a</code>, that means that you can't use an x that has to be a <code>Floating</code> due to <code>sqrt :: Floating a =&gt; a -&gt; a</code>, therefore you are left in a situation where your x has to be both an Integral (like Int, for example) and a Floating point number. That's impossible!</p>\n<p>There's a solution for that. You have to convert from either one in either place. I suggest you convert <code>fromIntegral</code> before you shove it to <code>sqrt</code>. That also means that your function's type signature will change, and you should simply remove the current one and see for yourself.</p>\n</li>\n</ol>\n<p>Other than that you might want to keep your <code>where</code> clause <em>under</em> your function declaration like so:</p>\n<pre><code>foo x = ...\n   where\n     baz n = ...\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "is_accepted": false, "score": 4, "last_activity_date": 1528554713, "last_edit_date": 1528554713, "creation_date": 1528540453, "answer_id": 50773334, "question_id": 50773031, "link": "https://stackoverflow.com/questions/50773031/how-to-deal-with-strict-type-checking-in-haskell/50773334#50773334", "title": "how to deal with strict type checking in Haskell?", "body": "<p>Compilation errors in GHC contain the actual description, also position in source. Some newer ghc versions also print a snippet of code. Also there are additional information added to the error message, so it overall looks rather scary. But the actual error is in first lines. Simplest ones are type mismatch which say like \"expected this, got that\". In complicated cases you might have to check documentation, Google or SO.</p>\n\n<p>It is often better to start with the first error. Sometimes they are obvious to fix. Sometimes they make you reconsider your design. After fixing the error compile again and pick the next one. Continue until all errors are fixed.</p>\n\n<p>Some also advise to not write a lot of code first then compile and get a lot of errors but write as little as possible, then compile. So that you get fewer errors at each step.</p>\n"}], "owner": {"reputation": 1, "user_id": 9917678, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b64fabe72f3775d3a18c8ba693130f2c?s=128&d=identicon&r=PG&f=1", "display_name": "samuel102931820938", "link": "https://stackoverflow.com/users/9917678/samuel102931820938"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 50773212, "answer_count": 2, "score": -3, "last_activity_date": 1528554713, "creation_date": 1528538260, "last_edit_date": 1528538342, "question_id": 50773031, "link": "https://stackoverflow.com/questions/50773031/how-to-deal-with-strict-type-checking-in-haskell", "title": "how to deal with strict type checking in Haskell?", "body": "<p>I'm trying to write my first programm in Haskell (it's quite simple one)\nfor checking if the given number is prime:</p>\n\n<pre><code>prime :: Num n=&gt; n -&gt; Bool\nprime x=smz[x `mod` a &gt; 0 | a&lt;-[2..(round(sqrt x))]] where\n        smz :: [Bool]-&gt;Bool\n        smz [] = True\n        smz (c:cs)=c &amp;&amp; (smz cs)\n</code></pre>\n\n<p>but I've encountered bunch of errors. Could someone give me correct version of my code (without changing my idea)</p>\n"}, {"tags": ["list", "haskell", "count"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 5, "creation_date": 1528536400, "post_id": 50772777, "comment_id": 88552902, "body": "What error? What do you think it means?"}, {"owner": {"reputation": 23, "user_id": 7350634, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca3689698124253954d2a6149803a582?s=128&d=identicon&r=PG&f=1", "display_name": "Elllla", "link": "https://stackoverflow.com/users/7350634/elllla"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1528536609, "post_id": 50772777, "comment_id": 88552944, "body": "Couldn&#39;t match expected type \u2018Int\u2019 with actual type \u2018[Int] -&gt; Int\u2019"}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1528603612, "post_id": 50772895, "comment_id": 88567626, "body": "Another useful way to think about <code>foldr f z</code> is that, given a list like <code>[1, 2, 3, 4]</code>, which is internally <code>1 : (2 : (3 : (4 : [])))</code>, it <i>replaces</i> all the <code>(:)</code> constructors with a call to <code>f</code> and the <code>[]</code> constructor with <code>z</code>, giving <code>1 `f` (2 `f` (3 `f` (4 `f` z)))</code> = <code>f 1 (f 2 (f 3 (f 4 z)))</code>\u2014in this case, <code>(if n == 1 \u2026) ((if n == 2 \u2026) ((if n == 3 \u2026) ((if n == 4 \u2026) 0)))</code>, which for <code>n = 3</code> evaluates to <code>id (id ((+ 1) (id 0)))</code> = <code>0 + 1</code> = <code>1</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1528537885, "last_edit_date": 1528537885, "creation_date": 1528537231, "answer_id": 50772895, "question_id": 50772777, "link": "https://stackoverflow.com/questions/50772777/count-occurances-in-a-list/50772895#50772895", "title": "Count occurances in a list", "body": "<p>There are two problems here: an error that has more to do with the proper syntax, and a <em>semantical</em> error.</p>\n\n<h1>Calling a function with \"<em>multiple</em>\" arguments</h1>\n\n<p>The error the compiler is probably complaining about has to do with the part in boldface:</p>\n\n<pre><code>count:: Int -&gt; [Int] -&gt; Int\ncount n []= 0\ncount n (h:t) | (n `elem` (h:t)) = 1+ count <b>(n t)</b>\n              | otherwise = count <b>(n t)</b></code></pre>\n\n<p>Something that is quite confusing for most programmers that first programmed in other languages is that one does <em>not</em> use brackets for function application. Indeed, in many programming languages if one writes <code>foo(1)</code>, then in Haskell you can write <code>foo 1</code>.</p>\n\n<p>As a result Haskell interprets the fact that you write <code>count (n t)</code> as the fact that the argument of <code>count</code> is <code>(n t)</code>, and thus that we first performed function application with <code>n</code> the function, and <code>t</code> the argument. So in Python this would look like `count(n(t))``, which is not what you meant.</p>\n\n<p>Then how do we pass multiple arguments to a function? Well in Haskell every function has exactly <em>one</em> argument. If you write <code>count n</code> you basically construct a <em>new</em> function. By applying the second argument to that new function, we thus \"<em>chained</em>\" function applications, like <code>count n t</code>, so we can solve the syntax error with:</p>\n\n<pre><code>count:: Int -&gt; [Int] -&gt; Int\ncount n [] = 0\ncount n (h:t) | (n `elem` (h:t)) = 1+ count <b>n t</b>\n              | otherwise = count <b>n t</b></code></pre>\n\n<h1>Semantical error: <code>elem</code> instead of <code>==</code>?</h1>\n\n<p>But now there is still a semantical error: what will <code>n `elem` (h:t)</code> do? Indeed it will check if <code>n</code> occurs in the <strong>list</strong>. Not per se in the head, so as a result, our function will - in some cases - count a value multiple times. For example <code>count 3 [1, 2, 3, 4]</code> will result in <code>3</code>. Since <code>3</code> occurs <code>[1, 2, 3, 4]</code>, <code>[2, 3, 4]</code> and <code>[3, 4]</code>. The idea of counting is that we <em>only</em> look at the head, and let the recursion look at the remaining elements, so the condition should be replaced with:</p>\n\n<pre><code>count:: Int -&gt; [Int] -&gt; Int\ncount n [] = 0\ncount n (h:t) | <b>n == h</b> = 1 + count n t\n              | otherwise = count n t</code></pre>\n\n<h1>Generalizing the type</h1>\n\n<p>Now we can make the function more generic: let the function work on lists with different type of objects. In fact there is only one thing that restricts these types: we need to be able to perform <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:-61--61-\" rel=\"noreferrer\"><strong><code>(==) :: Eq a =&gt; a -&gt; a -&gt; Bool</code></strong></a> on it, so we can generalize the type signature to:</p>\n\n<pre><code>count:: <b>Eq a =&gt; a -&gt; [a] -&gt; Int</b>\ncount n [] = 0\ncount n (h:t) | n == h = 1 + count n t\n              | otherwise = count n t</code></pre>\n\n<h1>Counting as a special <code>foldr</code> function</h1>\n\n<p>Instead of writing this recursion ourselves, we can use <code>foldr</code> for this, which is a <em>catamorphism</em> on the list. The <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:foldr\" rel=\"noreferrer\"><strong><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code></strong></a> uses a function <code>f :: a -&gt; b -&gt; b</code> that takes the head of a list (an <code>a</code>), and the result of recursion on the list (a <code>b</code>), and thus constructs a new result of type <code>b</code>, that then is the result for the entire list. Furthermore the <code>foldr</code> function takes a value (of type <code>b</code>) that is the value that corresponds to the empty list, it can then perform this operation on a list (<code>[a]</code>), and returns the value for that list (a <code>b</code>).</p>\n\n<p>Our <code>count</code> thus takes a look at the head element, in case it is equal to the element we search, we increment the \"accumulator\", otherwise we simply pass it, we can thus write count as:</p>\n\n<pre><code>count:: Eq a =&gt; a -&gt; [a] -&gt; Int\ncount n = foldr (\\x -> if n == x then (+1) else id) 0</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 7350634, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca3689698124253954d2a6149803a582?s=128&d=identicon&r=PG&f=1", "display_name": "Elllla", "link": "https://stackoverflow.com/users/7350634/elllla"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 574, "favorite_count": 0, "accepted_answer_id": 50772895, "answer_count": 1, "score": 0, "last_activity_date": 1528537885, "creation_date": 1528536348, "last_edit_date": 1528537345, "question_id": 50772777, "link": "https://stackoverflow.com/questions/50772777/count-occurances-in-a-list", "title": "Count occurances in a list", "body": "<p>I would like to count occurrences of the element in a list in Haskell, but there is an error and I don't know why. </p>\n\n<pre><code>count:: Int -&gt; [Int] -&gt; Int\ncount n []= 0\ncount n (h:t) | (n `elem` (h:t)) =1+ count (n t) \n       | otherwise = count(n t)\n</code></pre>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 1034911, "user_id": 6309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7aa22372b695ed2b26052c340f9097eb?s=128&d=identicon&r=PG", "display_name": "VonC", "link": "https://stackoverflow.com/users/6309/vonc"}, "edited": false, "score": 0, "creation_date": 1528519124, "post_id": 50770835, "comment_id": 88549392, "body": "You have a foldl with <a href=\"https://github.com/rShetty/functional-go/blob/master/functional.go\" rel=\"nofollow noreferrer\">github.com/rShetty/functional-go/blob/master/functional.go</a>, no foldr though. This example might help: <a href=\"https://play.golang.org/p/BCMbiTRLfo\" rel=\"nofollow noreferrer\">play.golang.org/p/BCMbiTRLfo</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1767, "user_id": 1412534, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/459e618cf38006bdc543e535c854f163?s=128&d=identicon&r=PG", "display_name": "md2perpe", "link": "https://stackoverflow.com/users/1412534/md2perpe"}, "is_accepted": true, "score": 4, "last_activity_date": 1528523573, "creation_date": 1528523573, "answer_id": 50771336, "question_id": 50770835, "link": "https://stackoverflow.com/questions/50770835/haskell-adding-two-lists-using-foldr/50771336#50771336", "title": "Haskell adding two lists using foldr", "body": "<p>There are functions <code>foldl1</code> and <code>foldr1</code> that you can use:</p>\n\n<pre><code>foldl1 (\\s1 s2 -&gt; s1 ++ \", \" ++ s2) [\"alpha\", \"beta\", \"gamma\"]\nfoldr1 (\\s1 s2 -&gt; s1 ++ \", \" ++ s2) [\"alpha\", \"beta\", \"gamma\"]\n</code></pre>\n"}], "owner": {"reputation": 31, "user_id": 9561219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ff54835f668cebea4c1e1454f255c94?s=128&d=identicon&r=PG&f=1", "display_name": "Jdonut", "link": "https://stackoverflow.com/users/9561219/jdonut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 738, "favorite_count": 1, "accepted_answer_id": 50771336, "answer_count": 1, "score": 0, "last_activity_date": 1528525851, "creation_date": 1528517426, "last_edit_date": 1528525851, "question_id": 50770835, "link": "https://stackoverflow.com/questions/50770835/haskell-adding-two-lists-using-foldr", "title": "Haskell adding two lists using foldr", "body": "<p>I know that in Haskell, there is <code>intercalate</code> function that concats two lists.</p>\n\n<pre><code>intercalate \", \" [\"Hello\", \"world\"]\n</code></pre>\n\n<p>would give: <code>\"Hello, world\"</code></p>\n\n<p>I am trying to concat two lists using <code>foldr</code>. </p>\n\n<p>But since I am new to Haskell, I am unsure how to do this.</p>\n\n<p>I believe the function is suppose to be something like:</p>\n\n<pre><code>inters n xs = foldr (\\x acc -&gt; x ++ str ++ acc) \"\" xs\n</code></pre>\n\n<p>This gives the result : <code>\"Hello, world, \"</code>\nwhere the comma and the space gets added at the end also.</p>\n\n<p>How do I make it so that the function only adds in-between the elements of the list and not at the ends?</p>\n\n<p>Any help would be greatly appreciated.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1528486033, "post_id": 50766366, "comment_id": 88541847, "body": "To append lists use <code>(++)</code>, example: <code>[n] ++ fun (n - 1)</code>.  But using cons <code>(:)</code> as in the in the answer is surely preferred in this case."}], "tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": true, "score": 5, "last_activity_date": 1528481863, "creation_date": 1528481863, "answer_id": 50766366, "question_id": 50766321, "link": "https://stackoverflow.com/questions/50766321/writing-a-function-to-construct-a-list-of-descending-natural-numbers-in-haskell/50766366#50766366", "title": "Writing a function to construct a list of descending natural numbers in Haskell", "body": "<p>You can't <code>cons</code> a list of numbers to a list of numbers. You can <code>cons</code> a number to a list of numbers, though:</p>\n\n<pre><code>fun 1 = [1]\nfun n = n : (fun (n - 1))\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": false, "score": 4, "last_activity_date": 1528481898, "creation_date": 1528481898, "answer_id": 50766375, "question_id": 50766321, "link": "https://stackoverflow.com/questions/50766321/writing-a-function-to-construct-a-list-of-descending-natural-numbers-in-haskell/50766375#50766375", "title": "Writing a function to construct a list of descending natural numbers in Haskell", "body": "<p>What you are trying to do is prepend a list of numbers <code>[n]:</code></p>\n\n<p>to a list of numbers <code>[1]</code></p>\n\n<p>And that's not how the cons operator works, as it can only prepend the element of a list to that list, eg. </p>\n\n<p><code>[a]</code> to <code>[[a]]</code></p>\n\n<p>or <code>a</code> to <code>[a]</code></p>\n"}], "owner": {"reputation": 164, "user_id": 9100617, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a845b2b2e6872dc5faedf0cb6c05d3e?s=128&d=identicon&r=PG&f=1", "display_name": "Jon M", "link": "https://stackoverflow.com/users/9100617/jon-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "accepted_answer_id": 50766366, "answer_count": 2, "score": 1, "last_activity_date": 1528482666, "creation_date": 1528481641, "last_edit_date": 1528482666, "question_id": 50766321, "link": "https://stackoverflow.com/questions/50766321/writing-a-function-to-construct-a-list-of-descending-natural-numbers-in-haskell", "title": "Writing a function to construct a list of descending natural numbers in Haskell", "body": "<p>I'm experimenting with Haskell and I'm trying to iteratively construct a list.</p>\n\n<pre><code>fibList :: Int -&gt; [Int]\nfibList n = if n == 1 then [1]\n            else [n]:fibList (n - 1) \n</code></pre>\n\n<p>My ultimate goal is to construct a list of fibonacci numbers, but for now I'm just trying to build a descending list of integers. However, when I try to load this code into ghci I get the following error</p>\n\n<pre><code>fibonacci.hs:9:22: error:\n    \u2022 Couldn't match type \u2018Int\u2019 with \u2018[Int]\u2019\n      Expected type: [[Int]]\n        Actual type: [Int]\n    \u2022 In the second argument of \u2018(:)\u2019, namely \u2018fibList (n - 1)\u2019\n      In the expression: [n] : fibList (n - 1)\n      In the expression: if n == 1 then [1] else [n] : fibList (n - 1)\n</code></pre>\n\n<p>What am I doing wrong?</p>\n\n<p>Edit:</p>\n\n<p>got it working. Thank you all!</p>\n\n<pre><code>fibList :: Int -&gt; [Int]\nfibList n = if n == 1 then [1]\n            else n:fibList (n - 1) \n</code></pre>\n\n<p>also got it working as a list of fibonacci numbers!</p>\n\n<pre><code>fibList :: Int -&gt; [Int]\nfibList n\n    | n &lt;= 0 = error \"n must be a positive integer\"\n    | n == 1 = [1]\n    | n == 2 = [1, 1]\n    | otherwise = ( prev_term + twice_prev_term ) : prior_fib_list\n    where prior_fib_list = fibList (n - 1)\n          prev_term = prior_fib_list !! 0\n          twice_prev_term = prior_fib_list !! 1\n</code></pre>\n"}, {"tags": ["list", "haskell", "functional-programming", "church-encoding"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1528478056, "post_id": 50765349, "comment_id": 88538590, "body": "<code>headL l = fromMaybe (error &quot;headL: empty list&quot;) (build l (\\z x -&gt; z &lt;|&gt; Just x) Nothing)</code>?"}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1528478332, "post_id": 50765349, "comment_id": 88538710, "body": "yes that does the <code>headL</code> job indeed! (What does this <code>&lt;|&gt;</code> do, exactly?)"}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1528479581, "post_id": 50765349, "comment_id": 88539237, "body": "this version I understand: <code>headL l = fromMaybe (error &quot;headL: empty list&quot;) (build l (\\z x -&gt; if isJust z then z else Just x) Nothing)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1528513824, "post_id": 50766652, "comment_id": 88548602, "body": "For some problems (e.g. the one I <a href=\"https://stackoverflow.com/questions/50101329/efficient-bitstreams-in-haskell\">quoted</a> at the top, this foldl-type Church list offers the best performance. It seems to me that this is just like the discussion about <code>foldr</code> vs. <code>foldl&#39;</code>. Each has its purpose. What really interests me is <code>iterUntilM</code>. All the effects in the <code>ListL</code> will have to be run, that&#39;s the purpose of the list (being more of a <code>foldl&#39;</code>-type thing). Efficiency aside (let&#39;s experiment!), how is <code>iterUntilM</code> done? I&#39;m still stuck here."}, {"owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "reply_to_user": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1528529026, "post_id": 50766652, "comment_id": 88551251, "body": "<code>iterUntilM</code> can&#39;t be implemented without converting to a list (either implicitly or explicitly). Because every effect has to be pulled to the outside, they all have to be run, meaning the internal list <i>will</i> have to be created. In other words, if you wrote <code>fmap fromList . repeatM</code> it would be equivalent. Also\u2014<code>foldr</code> and <code>foldl&#39;</code> aren&#39;t different in the same way that <code>foldr</code> and <code>unfoldr</code> are: <code>foldl&#39;</code> can be implemented using <code>foldr</code> (it&#39;s how it&#39;s done in the prelude), but not so with <code>foldr</code> and <code>unfoldr</code> (without materialising the intermediate list)."}], "tags": [], "owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "is_accepted": false, "score": 5, "last_activity_date": 1528483210, "creation_date": 1528483210, "answer_id": 50766652, "question_id": 50765349, "link": "https://stackoverflow.com/questions/50765349/about-church-encoded-lists-in-haskell/50766652#50766652", "title": "About Church encoded lists in Haskell", "body": "<p>In general, when you remove assumptions about a type, the function you write will not only be more general (in terms of what types it can use), it will also be more <em>specific</em> about what exactly it's doing. That's what's happening with the church-encoding allowing fusion: when lists are represented as</p>\n\n<pre><code>data [a] = [] | a : [a]\n</code></pre>\n\n<p>There are countless ways to use those in a function, only one of them being <code>foldr</code>. However, when you have:</p>\n\n<pre><code>newtype List a = { runList :: forall b. (a -&gt; b -&gt; b) -&gt; b -&gt; b }\n</code></pre>\n\n<p>The <em>only</em> way to use that type is through <code>foldr</code>. This is what lets you do the optimisations we know and love. Stream fusion is just one of them, by the way: you also get <em>O(1)</em> append, for instance.</p>\n\n<p>Your type is more constrained still: it tells us that the underlying list can't be (meaningfully) infinite.</p>\n\n<p>There's another constrained representation of lists that shifts the focus:</p>\n\n<pre><code>data List a = forall b. List b (b -&gt; Maybe (a, b))\n</code></pre>\n\n<p>Where the church-encoded list is a consumer, this is a <em>producer</em>. It says nothing about how the list can be consumed, but an awful lot about how it can be made.</p>\n\n<p>So we've seen that we get a lot from these constrained representations, what do we lose? <code>tail</code> is a good example. For the producer:</p>\n\n<pre><code>tail (List x f) = case f x of\n  Just (_,xs) -&gt; List xs f\n</code></pre>\n\n<p>And for the consumer:</p>\n\n<pre><code>tail xs =\n    List (\\c n -&gt;\n        runList xs \n            (\\h t g -&gt; g h (t c)) \n            (const n) \n            (const id))\n</code></pre>\n\n<p>The consumer's implementation is <em>O(n)</em>, whereas the producer's is obviously <em>O(1)</em>.</p>\n\n<p>Both of these types can allow for fusion, but some functions can be more efficiently implemented in one than the other. GHC happened to choose the former representation as its basis for fusion, but there's nothing fundamental that makes that choice superior: most functions Haskellers were using just seemed to work better in the <code>foldr/build</code> pattern of fusion than the other one. In <a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/haskell-beats-C.pdf\" rel=\"noreferrer\">other places</a>, the unfolding pattern is used.</p>\n\n<p>That preamble out of the way, there are two questions we need to ask:</p>\n\n<ul>\n<li>Do these functions (<code>head</code> and <code>iterUntilM</code>) work efficiently in only the <code>foldr</code> representation (like append), or in the <code>unfoldr</code> representation (like <code>tail</code>), or both (like <code>map</code>)?</li>\n<li>Is the strict left-fold encoding the right choice for these? Is it too constrained (ie do we need <code>foldr</code>?), or can it be constrained even more?</li>\n</ul>\n\n<p><code>head</code> can be implemented on <code>foldr</code>-encoded lists pretty easily:</p>\n\n<pre><code>head xs = runList xs const (error \"head: empty list\")\n</code></pre>\n\n<p>On <code>foldl'</code>-lists, it's a little more complicated:</p>\n\n<pre><code>head xs =\n    fromMaybe\n        (error \"head: empty list\")\n        (build xs (\\xs x -&gt; maybe (Just x) Just xs) Nothing)\n</code></pre>\n\n<p>You'll notice that this function (like <code>tail</code> on <code>foldr</code>-lists) is <em>O(n)</em>. It also doesn't work for infinite lists. This is a good indication that <code>foldl'</code> isn't the right choice for fusing <code>head</code>.</p>\n\n<p>Now, for <code>iterUntilM</code>, we see a case where (I don't think) even <em>fusion</em> is possible. Because the <code>m</code> ends up on the outside, you have to run all of the effects in the list (materialising it).</p>\n\n<p>For a good overview of this area, check out <a href=\"https://jyp.github.io/posts/controlled-fusion.html\" rel=\"noreferrer\">this</a> blog post.</p>\n"}], "owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 518, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1528483210, "creation_date": 1528477184, "last_edit_date": 1528478043, "question_id": 50765349, "link": "https://stackoverflow.com/questions/50765349/about-church-encoded-lists-in-haskell", "title": "About Church encoded lists in Haskell", "body": "<p>Various optimisation problems, like <a href=\"https://stackoverflow.com/questions/50101329/efficient-bitstreams-in-haskell\">this one</a>, led to Church encoded lists as a way to enable stream fusion, i.e the compiler's elimination of intermediate results (e.g. lists). Here's the definition that was used successfully in the optimisation problem:</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n\n-- A list encoded as a strict left fold.\nnewtype ListL a = ListL {build :: forall b. (b -&gt; a -&gt; b) -&gt; b -&gt; b}\n</code></pre>\n\n<p>Here's how I look at Church-somethings: Instead of asking what an 'something' <em>is</em>, ask what it <em>can do</em> for you. In the case of lists the answer is: Lists can be folded over. In order to fold, I need an 'update' function of type <code>b-&gt;a-&gt;b</code> and a starting value of type <code>b</code>. Then I will give you back the result of the fold, which is of type <code>b</code>. Hence the definition of <code>ListL</code>. Here are a few basic operations on <code>ListL</code>:</p>\n\n<pre><code>mapL :: (a -&gt; a') -&gt; ListL a -&gt; ListL a'\nmapL f l = ListL (\\f' b' -&gt; build l (\\b a -&gt; f' b (f a)) b')\n\ninstance Functor ListL where fmap = mapL\n\nfromList :: [a] -&gt; ListL a\nfromList l = ListL (\\c z -&gt; foldl' c z l)\n\ntoList :: ListL a -&gt; [a]\ntoList l = build l snoc [] where snoc xs x = xs ++ [x]\n\nnullL :: ListL a -&gt; Bool\nnullL l = build l (\\_ _-&gt;False) True\n</code></pre>\n\n<p>Here's more:</p>\n\n<pre><code>filterL :: (a-&gt;Bool) -&gt; ListL a -&gt; ListL a\nfilterL p l = ListL (\\f b-&gt;build l (\\b' a'-&gt;if p a' then f b' a' else b') b)\n\niterUntil :: (a-&gt;Bool) -&gt; a -&gt; (a-&gt;a) -&gt; ListL a\niterUntil p a f = ListL (\\g b-&gt; snd $ until (p.fst) (\\(a',b')-&gt;(f a', g b' a')) (a,b))\n</code></pre>\n\n<p><code>iterUntil</code> iterates a function <code>a-&gt;a</code>, starting with some value of type <code>a</code>, until the predicate <code>a-&gt;bool</code> is fulfilled. A function like Prelude's <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:iterate\" rel=\"nofollow noreferrer\"><code>iterate</code></a> isn't possible - at least I don't know how to define it, it would have to be some kind of recursion.</p>\n\n<p>Continuing with examples, <code>length</code> and <code>sum</code> are just exercises in choosing the right 'update' function and starting value in a <code>foldl</code>:</p>\n\n<pre><code>lengthL :: ListL a -&gt; Int\nlengthL l = build l (\\b _ -&gt; b+1) 0\n\nsumL :: Num a =&gt; ListL a -&gt; a\nsumL l = build l (+) 0\n</code></pre>\n\n<p>Now, let's try <code>headL</code>:</p>\n\n<pre><code>headL :: ListL a -&gt; a\nheadL l = build l (\\_ a-&gt;a) _   -- this does not compile!\n</code></pre>\n\n<p>No matter what starting <code>b</code> is provided, the first <code>a</code> should be returned. <code>build l</code> needs a <code>b</code>, but we don't have one. This is a weird one: Basically we want to tell the compiler: You don't need the <code>b</code>, trust me... A <code>headL' :: ListL a -&gt; ListL a</code>, on the other hand, is easy to construct. An <code>error \"empty list!\"</code> in place of the hole <code>_</code> doesn't work because it always gets called - laziness doesn't seem to take care of this. So, with <code>headL</code> I'm stuck. Therefore here is </p>\n\n<p><strong>Question 1: How is <code>headL</code> implemented?</strong></p>\n\n<p>The second issue appears when trying to implement the equivalent of <a href=\"http://hackage.haskell.org/package/yjtools-0.9.18/docs/Control-Monad-Tools.html#v:repeatM\" rel=\"nofollow noreferrer\"><code>repeatM :: Monad m =&gt; m a -&gt; m [a]</code></a>. As with <code>iterUntil</code>,  predicate <code>a-&gt;Bool</code> is needed to stop the iteration:</p>\n\n<pre><code>iterUntilM :: Monad m =&gt; (a-&gt;Bool) -&gt; m a -&gt; m (ListL a)\n</code></pre>\n\n<p>The purpose is clear: Repeat a monadic action <code>m a</code> until <code>a-&gt;Bool</code> is satisfied. The idea is, of course, to fold this <code>ListL a</code> right away and achieve stream fusion (list fusion). For example:</p>\n\n<pre><code>import System.Random (randomIO)\n\nmain :: IO ()\nmain = do\n     rs &lt;- iterUntilM (&gt;42::Int) randomIO\n     print $ lengthL rs\n</code></pre>\n\n<p>The example is rather contrived, it prints the number of draws it took until the first number >42 was found. In a more realistic setting the monad <code>m</code> is, for example, an <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Monad-ST.html\" rel=\"nofollow noreferrer\"><code>ST s</code></a> monad that wraps some FFI. The point is: This should run efficiently. I'm thoroughly stuck with this one. How do I entangle the <code>(&gt;&gt;=) :: m a -&gt; (a-&gt;m b) -&gt; m b</code> with <code>build</code> to get a <code>m (ListL a)</code>? I.e. this is</p>\n\n<p><strong>Question 2: How is <code>iterUntilM</code> implemented?</strong></p>\n\n<p>Other than being a good learning exercise, is this actually a good idea?</p>\n"}, {"tags": ["haskell", "ghc", "functional-dependencies", "type-level-computation"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 2, "creation_date": 1528477508, "post_id": 50765194, "comment_id": 88538358, "body": "<code>NegSucc (NegSucc Zero)</code> is -(-(0 + 1) + 1) = -(-1 + 1) = -0 = 0, so you have multiple representations of 0 anyway."}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "edited": false, "score": 2, "creation_date": 1528477579, "post_id": 50765194, "comment_id": 88538387, "body": "Think about open world assumption. What if someone else make NegSucc an instance of Peano?"}, {"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1528478735, "post_id": 50765194, "comment_id": 88538891, "body": "@melpomene <code>NegSucc (NegSucc Zero)</code> is not an <code>Integer</code>, because Integers are either peano numerals or the <code>NegSucc</code> of peano numerals.  <code>NegSucc (NegSucc Zero)</code> cannot be incremented either since only Integers can be incremented. You might be able to argue that <code>NegSucc (NegSucc Zero)</code> is equivalent to <code>Zero</code> but I don&#39;t think it is very meaningful."}, {"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "reply_to_user": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "edited": false, "score": 0, "creation_date": 1528479374, "post_id": 50765194, "comment_id": 88539164, "body": "@Yuras Your question leads me to understanding the difference.  If you would like to write up a full answer I&#39;d be happy to accept. If you don&#39;t want to spend the time I&#39;d be happy to write up the answer myself."}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "edited": false, "score": 0, "creation_date": 1528479907, "post_id": 50765194, "comment_id": 88539409, "body": "@WheatWizard sorry, I don&#39;t know enough about functional dependencies to make a real answer, I just made an intuitive guess. I hope someone will write an answer and describe all the technical details."}], "answers": [{"tags": [], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "is_accepted": false, "score": 8, "last_activity_date": 1528481004, "last_edit_date": 1528481004, "creation_date": 1528480593, "answer_id": 50766120, "question_id": 50765194, "link": "https://stackoverflow.com/questions/50765194/why-does-my-functional-dependency-conflict-disappear-when-i-expand-the-definitio/50766120#50766120", "title": "Why does my functional dependency conflict disappear when I expand the definition?", "body": "<p><em>This answer is an expansion of <a href=\"https://stackoverflow.com/questions/50765194/why-does-my-functional-dependency-conflict-disappear-when-i-expand-the-definitio#comment88538387_50765194\">this comment</a>, which lead me to understanding what was going on</em></p>\n\n<p>In Haskell type classes are an open class, this means that new instances of the class can be made after the declaration.</p>\n\n<p>This means that we cannot infer that <code>NegSucc a</code> is not a member of <code>Peano</code>, because it is always possible that it could be declared one later.</p>\n\n<pre><code>instance Peano (NegSucc a)\n</code></pre>\n\n<p>Thus when the compiler sees</p>\n\n<pre><code>instance (Peano a) =&gt; Increment a (Succ a)\ninstance Increment (NegSucc Zero) Zero\n</code></pre>\n\n<p>it cannot know that <code>NegSucc Zero</code> will not be an instance of <code>Peano</code>.  If <code>NegSucc Zero</code> is an instance of <code>Peano</code> it would increment to both <code>Zero</code> and <code>Succ (NegSucc Zero)</code>, which is a functional dependency conflict.  So we must throw an error.  The same applies to </p>\n\n<pre><code>instance (Peano a) =&gt; Increment (NegSucc (Succ a)) (NegSucc a)\n</code></pre>\n\n<p>Here <code>(NegSucc (Succ a))</code> could also be an instance of <code>Peano</code>.</p>\n\n<p>The reason it looks as if there is no conflict is that we implicitly assume that there are not other instances of <code>Peano</code> than the ones that we know of.  When I transformed the single instance to two new isntances I made that assumption formal.</p>\n\n<p>In the new code</p>\n\n<pre><code>instance (Peano a) =&gt; Increment (Succ a) (Succ (Succ a))\ninstance Increment Zero (Succ Zero)\n</code></pre>\n\n<p>it is not possible to add anything to preexisting type classes to cause a type to match multiple conflicting instances.</p>\n"}, {"tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 4, "last_activity_date": 1528481266, "creation_date": 1528481266, "answer_id": 50766235, "question_id": 50765194, "link": "https://stackoverflow.com/questions/50765194/why-does-my-functional-dependency-conflict-disappear-when-i-expand-the-definitio/50766235#50766235", "title": "Why does my functional dependency conflict disappear when I expand the definition?", "body": "<p>Here's the error message I see with the original version:</p>\n\n<pre><code>negsucc.hs:28:10: error:\n    Functional dependencies conflict between instance declarations:\n      instance Peano a =&gt; Increment a (Succ a)\n        -- Defined at negsucc.hs:28:10\n      instance Increment (NegSucc Zero) Zero\n        -- Defined at negsucc.hs:29:10\n      instance Peano a =&gt; Increment (NegSucc (Succ a)) (NegSucc a)\n        -- Defined at negsucc.hs:30:10\n</code></pre>\n\n<p>My loose understanding here is:</p>\n\n<ul>\n<li>the functional dependency <code>a -&gt; b</code> means that GHC will \"pattern match\" on the type <code>a</code>, and will expect to discover <code>b</code> based on <code>a</code>.</li>\n<li>GHC <strong>does not</strong> include superclass constraints in this \"pattern matching\" logic. This is important. Intuitively, you know that NegSucc is not an instance of Peano. However GHC does not know how to look at a NegSucc and rule out the instance that requires <code>Peano NegSucc</code>. (This is simply a matter of knowing how GHC instance selection works. One could imagine that a future improvement to GHC might improve on this situation.)</li>\n<li><code>instance Peano a =&gt; Increment a (Succ a)</code> will therefore always be selected by GHC, because it is the catch-all <code>Increment a</code>. Any other defined instances will conflict with this instance.</li>\n</ul>\n\n<p>Now, isn't that what <code>UndecidableInstances</code> is for? To allow for conflicting instances, and allow GHC to select the most specific one that applies? You might think so. I thought so. However, note that the error message is specifically talking about the <code>Functional dependencies conflict</code>, meaning I don't think UndecidableInstances is implemented adequately to handle overlapping FunDeps in this way.</p>\n\n<pre><code>-- pseudocode for the fundep a -&gt; b\nincrement a = Succ a\nincrement (NegSucc Zero) = Zero\nincrement (NegSucc (Succ a)) = NegSucc a\n-- note that this is just pseudocode; unlike Haskell,\n-- instead of trying cases from top to bottom\n-- all cases will be tried simultaneously\n</code></pre>\n\n<p>However, this issue doesn't exist if you \"expand\" the definition, as you did.</p>\n\n<pre><code>-- pseudocode for the fundep a -&gt; b with expanded defs\nincrement Zero = Succ Zero\nincrement (Succ a) = Succ (Succ a)\nincrement (NegSucc Zero) = Zero\nincrement (NegSucc (Succ a)) = NegSucc a\n-- notice how there is now no overlap on the LHS pattern matches\n</code></pre>\n\n<p>You could also solve the problem by flipping the fundep around with the original defs.</p>\n\n<pre><code>-- pseudocode for the fundep b -&gt; a with original defs\n-- I called it \"decrement\" instead,\n-- because from the b -&gt; a point of view, that is what it does\ndecrement (Succ a) = a\ndecrement Zero = NegSucc Zero\ndecrement (NegSucc a) = NegSucc (Succ a)\n-- notice how there is no overlap on the LHS pattern matches\n</code></pre>\n\n<p>I am stretching my own knowledge of fundeps here, so someone please correct me if I'm wrong.</p>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 0, "answer_count": 2, "score": 8, "last_activity_date": 1528738102, "creation_date": 1528476516, "last_edit_date": 1528738102, "question_id": 50765194, "link": "https://stackoverflow.com/questions/50765194/why-does-my-functional-dependency-conflict-disappear-when-i-expand-the-definitio", "title": "Why does my functional dependency conflict disappear when I expand the definition?", "body": "<p>I was trying to implement Integers at the type level in Haskell.  To start I implemented natural numbers with</p>\n\n<pre><code>data Zero\ndata Succ a\n</code></pre>\n\n<p>I then extended this to the integers with</p>\n\n<pre><code>data NegSucc a\n</code></pre>\n\n<p>I decided to then create an <code>Increment</code> class that would increment integers. Here is how I did that:</p>\n\n<pre><code>{-# Language FunctionalDependencies #-}\n{-# Language UndecidableInstances #-}\n{-# Language MultiParamTypeClasses #-}\n{-# Language FlexibleInstances #-}\n\nimport Prelude ()\n\n-- Peano Naturals --\n\ndata Zero\ndata Succ a\n\nclass Peano a\ninstance Peano Zero\ninstance (Peano a) =&gt; Peano (Succ a)\n\n-- Integers --\n\ndata NegSucc a -- `NegSucc a` is -(a+1) so that 0 can only be expressed one way\n\nclass Integer a\ninstance (Peano a) =&gt; Integer a\ninstance (Peano a) =&gt; Integer (NegSucc a)\n\n-- Arithmetic Operations --\n\nclass Increment a b | a -&gt; b\ninstance (Peano a) =&gt; Increment a (Succ a)\ninstance Increment (NegSucc Zero) Zero\ninstance (Peano a) =&gt; Increment (NegSucc (Succ a)) (NegSucc a)\n</code></pre>\n\n<p>However when I run this GHC complains that <code>Functional dependencies conflict between instance declarations</code>, and cites all three of my increment instances.  This error doesn't make much sense to me, I don't see any conflict between the separate declarations.  What confuses me even further is that if I change the first instance to two separate instances</p>\n\n<pre><code>instance (Peano a) =&gt; Increment (Succ a) (Succ (Succ a))\ninstance Increment Zero (Succ Zero)\n</code></pre>\n\n<p>The compiler stops complaining altogether. However the rules that define <code>Peano a</code> tell me that these two things should be the same.</p>\n\n<p>Why do I get a functional dependency conflict when I write the single line version but none when I write the two line version?</p>\n"}, {"tags": ["haskell", "io", "fold", "continuation-passing"], "answers": [{"comments": [{"owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "edited": false, "score": 0, "creation_date": 1528471206, "post_id": 50763327, "comment_id": 88535152, "body": "Thanks for this great answer! Upon reading your answer, I realized that I didn&#39;t ask my first question correctly.  What I meant to ask was, <code>Is it every absolutely necessary to use this trick of passing a continuation to foldr, instead of using foldr with a normal (non-function) value as an accumulator?</code>  I have edited my question to add the missing nuance.  I&#39;m well aware that folds and unfolds can always be replaced with raw recursion (and vice-versa)!  However, the rest of your answers were very helpful! (And thanks for picking up on &quot;two&quot; vs. &quot;three&quot; :-)"}, {"owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "edited": false, "score": 0, "creation_date": 1528471501, "post_id": 50763327, "comment_id": 88535313, "body": "The DList example is a great example for when something like this trick is necessary (well, it is basically required when using DLists)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "edited": false, "score": 1, "creation_date": 1528471989, "post_id": 50763327, "comment_id": 88535578, "body": "@illabout I think that one &quot;needs&quot; this trick when you have an input value that must be passed left-to-right (as in <code>foldl</code>), when instead the output must be produced right-to-left (as in <code>foldlr</code>). Perhaps one can also consider <code>mapAccumL</code> and <code>-R</code> as requiring some similar trick. Sometimes the trick can be avoided (e.g. <code>drop 1</code> should be doable without). Still, all the examples where this is needed feel somewhat <code>foldl</code>-ish to me."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 3, "creation_date": 1528472215, "post_id": 50763327, "comment_id": 88535700, "body": "It&#39;s noteworthy that <code>foldr</code> is sometimes a huge performance win over explicit recursion. If it&#39;s consuming the output of a &quot;good producer&quot;, <code>foldr</code> can participate in list fusion."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1528471055, "last_edit_date": 1528471055, "creation_date": 1528469691, "answer_id": 50763327, "question_id": 50762817, "link": "https://stackoverflow.com/questions/50762817/when-to-use-foldr-with-a-continuation-as-an-accumulation-function/50763327#50763327", "title": "When to use foldr with a continuation as an accumulation function?", "body": "<blockquote>\n  <p>I have two questions regarding this:</p>\n</blockquote>\n\n<p>For some large value of \"two\" :-P</p>\n\n<blockquote>\n  <ul>\n  <li>Is it every absolutely necessary to use this trick of passing a continuation to foldr? Is there an example of a function that\n  absolutely can't be written without this trick? (Aside from foldl and\n  functions like that, of course.)</li>\n  </ul>\n</blockquote>\n\n<p>No, never. Each <code>foldr</code> invocation can always be replaced by explicit recursion.</p>\n\n<p>One should use <code>foldr</code> and other well-known library functions when they make the code simpler. When they do not, one should not shoehorn the code so that it fits the <code>foldr</code> pattern.</p>\n\n<p>There is no shame in using plain recursion, when there is no obvious replacement.</p>\n\n<p>Compare your code with this, for instance:</p>\n\n<pre><code>stringsOver5 :: [String] -&gt; IO ()\nstringsOver5 strings = go strings []\n  where\n  go :: [String] -&gt; [String] -&gt; IO ()\n  go []     acc = print (reverse acc)\n  go (s:ss) acc = do\n      let isGreaterThan5 = length str &gt; 5\n      printf \"Working on \\\"%s\\\", greater than 5? %s\\n\" str (show isGreaterThan5)\n      if isGreaterThan5\n        then go ss (s:acc)\n        else go ss acc\n</code></pre>\n\n<blockquote>\n  <ul>\n  <li>When would I want to use this trick in my own code? Is there any example of a function that can be significantly simplified by using\n  this trick?</li>\n  </ul>\n</blockquote>\n\n<p>In my humble opinion, almost never.</p>\n\n<p>Personally, I find \"calling <code>foldr</code> with four (or more) arguments\" to be an anti-pattern in most cases. This is because it is not that shorter than using explicit recursion, and has the potential to be much less readable.</p>\n\n<p>I would argue that this \"idiom\" is quite puzzling to any Haskeller who has not seen it before. It is a sort-of an acquired taste, so to speak.</p>\n\n<p>Perhaps, it could be a good idea to use this style when the continuation functions are meaningful on their own. E.g., when representing lists as difference lists, the concatenation of a regular-list of difference-lists can be quite elegant</p>\n\n<pre><code>foldr (.) id listOfDLists []\n</code></pre>\n\n<p>is beautiful, even if the last <code>[]</code> might be puzzling at first.</p>\n\n<blockquote>\n  <ul>\n  <li>Is there any sort of performance considerations to take into account when using this trick? (Or, well, when not using this trick?)</li>\n  </ul>\n</blockquote>\n\n<p>Performance should be essentially the same as using explicit recursion. GHC could even generate the exact same code.</p>\n\n<p>Perhaps using <code>foldr</code> could help GHC fire some fold/build optimization rules, but I'm unsure about the need to do that when using continuations.</p>\n"}], "owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 243, "favorite_count": 1, "accepted_answer_id": 50763327, "answer_count": 1, "score": 4, "last_activity_date": 1528471332, "creation_date": 1528468051, "last_edit_date": 1528471332, "question_id": 50762817, "link": "https://stackoverflow.com/questions/50762817/when-to-use-foldr-with-a-continuation-as-an-accumulation-function", "title": "When to use foldr with a continuation as an accumulation function?", "body": "<p>There is a technique I've seen a few times with <code>foldr</code>.  It involves using a function in place of the accumulator in a <code>foldr</code>.  I'm wondering when it is necessary to do this, as opposed to using an accumulator that is just a regular value.</p>\n\n<p>Most people have seen this technique before when using <code>foldr</code> to define <code>foldl</code>:</p>\n\n<pre><code>myFoldl :: forall a b. (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; b\nmyFoldl accum nil as = foldr f id as nil\n  where\n    f :: a -&gt; (b -&gt; b) -&gt; b -&gt; b\n    f a continuation b = continuation $ accum b a\n</code></pre>\n\n<p>Here, the type of the combining function <code>f</code> is not just <code>a -&gt; b -&gt; b</code> like normal, but <code>a -&gt; (b -&gt; b) -&gt; b -&gt; b</code>.  It takes not only an <code>a</code> and <code>b</code>, but a continuation (<code>b -&gt; b</code>) that we need to pass the <code>b</code> to in order to get the final <code>b</code>.</p>\n\n<p>I most recently saw an example of using this trick in the book <a href=\"https://simonmar.github.io/pages/pcph.html\" rel=\"nofollow noreferrer\">Parallel and Concurrent Programming in Haskell</a>.  <a href=\"https://github.com/simonmar/parconc-examples/blob/3fca38f01f71639cc780473026fdaac679cc230c/findpar.hs#L21-L23\" rel=\"nofollow noreferrer\">Here</a> is a link to the source code of the example using this trick.  <a href=\"https://web.archive.org/web/20171114090047/http://chimera.labs.oreilly.com:80/books/1230000000929/ch13.html#conc-par_00000029\" rel=\"nofollow noreferrer\">Here</a> is a link to the chapter of the book explaining this example.</p>\n\n<p>I've taken the liberty of simplifying the source code into a similar (but shorter) example.  Below is a function that takes a list of Strings, prints out whether each string's length is greater than five, then prints the full list of only the Strings that have a length greater than five:</p>\n\n<pre><code>import Text.Printf\n\nstringsOver5 :: [String] -&gt; IO ()\nstringsOver5 strings = foldr f (print . reverse) strings []\n  where\n    f :: String -&gt; ([String] -&gt; IO ()) -&gt; [String] -&gt; IO ()\n    f str continuation strs = do\n      let isGreaterThan5 = length str &gt; 5\n      printf \"Working on \\\"%s\\\", greater than 5? %s\\n\" str (show isGreaterThan5)\n      if isGreaterThan5\n        then continuation $ str : strs\n        else continuation strs\n</code></pre>\n\n<p>Here's an example of using it from GHCi:</p>\n\n<pre><code>&gt; stringsOver5 [\"subdirectory\", \"bye\", \"cat\", \"function\"]\nWorking on \"subdirectory\", greater than 5? True\nWorking on \"bye\", greater than 5? False\nWorking on \"cat\", greater than 5? False\nWorking on \"function\", greater than 5? True\n[\"subdirectory\",\"function\"]\n</code></pre>\n\n<p>Just like in the <code>myFoldl</code> example, you can see that the combining function <code>f</code> is using the same trick.</p>\n\n<p>However, it occurred to me that this <code>stringsOver5</code> function could probably be written without this trick:</p>\n\n<pre><code>stringsOver5PlainFoldr :: [String] -&gt; IO ()\nstringsOver5PlainFoldr strings = foldr f (pure []) strings &gt;&gt;= print\n  where\n    f :: String -&gt; IO [String] -&gt; IO [String]\n    f str ioStrs = do\n      let isGreaterThan5 = length str &gt; 5\n      printf \"Working on \\\"%s\\\", greater than 5? %s\\n\" str (show isGreaterThan5)\n      if isGreaterThan5\n        then fmap (str :) ioStrs\n        else ioStrs\n</code></pre>\n\n<p>(Although maybe you could make the argument that <code>IO [String]</code> <a href=\"http://hackage.haskell.org/package/ghc-prim-0.5.2.0/docs/GHC-Types.html#t:IO\" rel=\"nofollow noreferrer\">is a continuation</a>?)</p>\n\n<hr>\n\n<p>I have two questions regarding this:</p>\n\n<ul>\n<li>Is it every absolutely necessary to use this trick of passing a continuation to <code>foldr</code>, instead of using <code>foldr</code> with a normal value as an accumulator?  Is there an example of a function that absolutely <em>can't</em> be written using <code>foldr</code> with a normal value?  (Aside from <code>foldl</code> and functions like that, of course.)</li>\n<li>When would I want to use this trick in my own code?  Is there any example of a function that can be significantly simplified by using this trick?</li>\n<li>Is there any sort of performance considerations to take into account when using this trick? (Or, well, when <em>not</em> using this trick?)</li>\n</ul>\n"}, {"tags": ["loops", "haskell", "lazy-evaluation", "fold"], "comments": [{"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 1, "creation_date": 1528459597, "post_id": 50760289, "comment_id": 88527902, "body": "<code>fold&#39;</code> is a strict function. You may want to take a look at <code>foldr</code> instead"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528459605, "post_id": 50760289, "comment_id": 88527908, "body": "This is du to <code>foldl&#39;</code>. In fact <code>foldl&#39;</code> is the <i>non-strict</i> version of <code>foldl</code>."}, {"owner": {"reputation": 858, "user_id": 4267929, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/98885eca3b83031612bef15ed5b21abc?s=128&d=identicon&r=PG&f=1", "display_name": "Henricus V.", "link": "https://stackoverflow.com/users/4267929/henricus-v"}, "reply_to_user": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528459735, "post_id": 50760289, "comment_id": 88527979, "body": "@Welperooni <code>foldl&#39;</code> doesn&#39;t need the whole list to be loaded into memory. Replacing it with the regular <code>foldl</code> still gives the same memory usage."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1528459826, "post_id": 50760289, "comment_id": 88528046, "body": "If your list is only passed to <code>foldl&#39;</code>, it should be OK. <code>foldl&#39;</code> will need to scan the whole list, but it can be garbage collected while this is done if no one else is using the list. However, be sure that the function you pass to <code>foldl&#39;</code> is suitably strict, so that you do not end up with a huge thunk. E.g. you final 60-key map could be storing lazy thunks instead of evaluated counts. Perhaps you should post the <code>foldl&#39;</code> code."}, {"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528460175, "post_id": 50760289, "comment_id": 88528264, "body": "Have you imported the strict version of the <code>Map</code> module?"}, {"owner": {"reputation": 858, "user_id": 4267929, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/98885eca3b83031612bef15ed5b21abc?s=128&d=identicon&r=PG&f=1", "display_name": "Henricus V.", "link": "https://stackoverflow.com/users/4267929/henricus-v"}, "reply_to_user": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528460278, "post_id": 50760289, "comment_id": 88528328, "body": "@Welperooni Yes. <code>Data.Map.Strict</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1528462281, "post_id": 50760289, "comment_id": 88529542, "body": "Am I the only one here thinking that strictness is not to blame? The red flag for me is this sentence: &quot;After this the program executes four different instances of the following...&quot;. Unless you are re-reading the file and re-parsing it after each instance, you won&#39;t be able to garbage-collect already-processed parts of the file, so of <i>course</i> it will force the whole thing into memory. But to know for sure what&#39;s going wrong, we need an <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1528462633, "post_id": 50760289, "comment_id": 88529738, "body": "@DanielWagner Ah, I missed that part. That&#39;s definitely a big red flag."}, {"owner": {"reputation": 858, "user_id": 4267929, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/98885eca3b83031612bef15ed5b21abc?s=128&d=identicon&r=PG&f=1", "display_name": "Henricus V.", "link": "https://stackoverflow.com/users/4267929/henricus-v"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1528493638, "post_id": 50760289, "comment_id": 88544731, "body": "@DanielWagner The four instances of filter are executed together (and are identical except for the filtering function) so I would expect the compiler to fuse the loops."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1528496489, "post_id": 50760289, "comment_id": 88545694, "body": "@HenricusV. My expectation differs from yours. See also <a href=\"http://squing.blogspot.com/2008/11/beautiful-folding.html\" rel=\"nofollow noreferrer\">Beautiful Folding</a> and its Hackage incarnation, <a href=\"https://hackage.haskell.org/package/folds\" rel=\"nofollow noreferrer\">folds</a>."}], "answers": [{"tags": [], "owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "is_accepted": true, "score": 2, "last_activity_date": 1528496107, "creation_date": 1528496107, "answer_id": 50769015, "question_id": 50760289, "link": "https://stackoverflow.com/questions/50760289/fusing-multiple-foldl-in-haskell/50769015#50769015", "title": "Fusing multiple foldl&#39; in Haskell", "body": "<p>Yes, you can indeed fuse the four folds together, but you'll have to do it manually. You could try and write out the logic yourself, or you could use a library (like <a href=\"https://hackage.haskell.org/package/foldl-1.4.0/docs/Control-Foldl.html\" rel=\"nofollow noreferrer\">foldl</a>) to help. For instance, you can turn your bincollect into a fold:</p>\n\n<pre><code>bincollect :: (Ord a, Num b) =&gt; Fold a (Map.Map a b)\nbincollect = Fold (\\m key -&gt; Map.insertWith (+) key 1 m) Map.empty id\n</code></pre>\n\n<p>Then, you can filter using <code>prefilter</code>:</p>\n\n<pre><code>x = prefilter cx bincollect\n</code></pre>\n\n<p>Finally, you can combine them together using the <code>Applicative</code> instance:</p>\n\n<pre><code>(w,x,y,z) = fold ((,,,) &lt;$&gt; prefilter cw bincollect\n                        &lt;*&gt; prefilter cx bincollect\n                        &lt;*&gt; prefilter cy bincollect\n                        &lt;*&gt; prefilter cz bincollect)\n                 input\n</code></pre>\n"}], "owner": {"reputation": 858, "user_id": 4267929, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/98885eca3b83031612bef15ed5b21abc?s=128&d=identicon&r=PG&f=1", "display_name": "Henricus V.", "link": "https://stackoverflow.com/users/4267929/henricus-v"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 50769015, "answer_count": 1, "score": 2, "last_activity_date": 1528496107, "creation_date": 1528459508, "last_edit_date": 1528494379, "question_id": 50760289, "link": "https://stackoverflow.com/questions/50760289/fusing-multiple-foldl-in-haskell", "title": "Fusing multiple foldl&#39; in Haskell", "body": "<p>I'm trying to read and analyse a huge CSV file. I used <code>Data.Csv.Streaming</code> from cassava, and functions are applied in the following order:</p>\n\n<pre><code>Data.ByteString.Lazy.readFile -- Gives lazy stream\nData.Csv.Streaming.decodeByname -- Gives Either String (Header Records t)\n\\(Right (_, v)) -&gt; v -- Gives right side of either (Records t)\nData.Foldable.toList -- Gives [t]\n</code></pre>\n\n<p>After this the program enters the analysis stage, and executes <strong>four</strong> (this is very important) different instances (i.e. with different filters) of the following</p>\n\n<pre><code>filter -- Result of toList is applied through a filter\nmap\nData.Foldable.foldl' -- Does bin counting using a map. The map has at most 60 keys.\n</code></pre>\n\n<p>However, it appears that the program takes up a huge amount of memory while attempting to load the entire CSV file.</p>\n\n<p>If I only have one instance of foldl' executing, the program does a nice single pass through the CSV data and doesn't consume as much memory. Is there a way to fuse the foldl's together? That is, having</p>\n\n<pre><code>x = foldl' f Map.empty $ filter cx li\ny = foldl' f Map.empty $ filter cy li\n...\n</code></pre>\n\n<p>and force it to execute in single pass.</p>\n\n<p>Edit: The following function is used in <code>foldl</code> with <code>Data.Map.Strict</code> as <code>Map</code>:</p>\n\n<pre><code>bincollect :: Ord a =&gt; Num b =&gt; Map.Map a b -&gt; a -&gt; Map.Map a b\nbincollect !m !key = Map.insertWith (+) key 1 m\n</code></pre>\n\n<p>and the foldl begins with an empty map.</p>\n\n<p>The memory usage grows with the number of elements <code>take</code>d with or without optimization on.</p>\n"}, {"tags": ["windows", "macos", "haskell", "cross-compiling", "ghc"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 6, "creation_date": 1528459077, "post_id": 50759850, "comment_id": 88527603, "body": "This is called cross-compilation. <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Building/CrossCompiling\" rel=\"nofollow noreferrer\">It can be done</a>, but you&#39;d probably need to build your own GHC with custom settings. It&#39;s usually not worth it."}, {"owner": {"reputation": 774, "user_id": 6034245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/n3qwA.jpg?s=128&g=1", "display_name": "chrisheyn", "link": "https://stackoverflow.com/users/6034245/chrisheyn"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1528459780, "post_id": 50759850, "comment_id": 88528016, "body": "@leftaroundabout Thanks for the quick response. So you mean it is easier to compile the code directly on windows?"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1528483724, "post_id": 50759850, "comment_id": 88540889, "body": "Cross compilation is usually not worth it for major platforms because you need to test the code on the target platform anyway. It&#39;s mostly useful for things like embedded systems where you can&#39;t run the compiler on the target itself."}, {"owner": {"reputation": 2570, "user_id": 4142266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rMCN5.png?s=128&g=1", "display_name": "mschmidt", "link": "https://stackoverflow.com/users/4142266/mschmidt"}, "edited": false, "score": 2, "creation_date": 1528486201, "post_id": 50759850, "comment_id": 88541917, "body": "Not an direct answer, but there is a <a href=\"https://medium.com/@zw3rk\" rel=\"nofollow noreferrer\">series of blog posts</a> on cross compiling Haskell."}], "owner": {"reputation": 774, "user_id": 6034245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/n3qwA.jpg?s=128&g=1", "display_name": "chrisheyn", "link": "https://stackoverflow.com/users/6034245/chrisheyn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 217, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1528460201, "creation_date": 1528457983, "last_edit_date": 1528460201, "question_id": 50759850, "link": "https://stackoverflow.com/questions/50759850/compiling-haskell-on-mac-for-64-bit-windows", "title": "Compiling Haskell on Mac, for 64-bit Windows", "body": "<p>Is it possible to compile Haskell code on my Macbook, but for use on 64-bit Windows? I'm using GHC.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528454830, "post_id": 50758816, "comment_id": 88525233, "body": "By writing a function definition for <code>dup</code>. Any attempt from your side?"}, {"owner": {"reputation": 607, "user_id": 8597377, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iuGCA.png?s=128&g=1", "display_name": "Cezar Cobuz", "link": "https://stackoverflow.com/users/8597377/cezar-cobuz"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528455409, "post_id": 50758816, "comment_id": 88525539, "body": "@WillemVanOnsem added what I have tried"}, {"owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "edited": false, "score": 5, "creation_date": 1528455944, "post_id": 50758816, "comment_id": 88525849, "body": "Use pattern matching so you address two elements at a time: <code>dup (x:y:xs) = x:x:y:dup xs</code>. If <code>x</code> has an even index according to you, then <code>y</code> must have an odd index, and you&#39;re left with the base cases of lists containing zero or one element in them."}], "answers": [{"tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": false, "score": 2, "last_activity_date": 1528456590, "last_edit_date": 1528456590, "creation_date": 1528455724, "answer_id": 50759212, "question_id": 50758816, "link": "https://stackoverflow.com/questions/50758816/duplicate-elements-of-a-list-on-even-index/50759212#50759212", "title": "Duplicate elements of a list on even index", "body": "<p>You may want to make a mutually recursive set of functions</p>\n\n<pre><code>duplicate, duplicate' :: [a] -&gt; [a]\nduplicate [] = []\nduplicate (x:xs) =  x : x : duplicate' xs\nduplicate' [] = []\nduplicate' (x:xs) = x : duplicate xs\n</code></pre>\n\n<p>Or add a simple ADT to determine the next action</p>\n\n<pre><code>data N = O | T\nduplicate = duplicate' T\nduplicate' _ [] = []\nduplicate' T (x:xs) = x : x : duplicate' O xs\nduplicate' O (x:xs) = x : duplicate' T xs\n</code></pre>\n\n<p>But in all honesty, the best way of doing it is what @Simon_Shine suggested, </p>\n\n<pre><code>duplicate [] = []\nduplicate (x:y:xs) = x : x : y : duplicate xs\nduplicate (x:xs) = x : x : xs -- Here x is an even index and xs is an empty list\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1528456025, "creation_date": 1528456025, "answer_id": 50759290, "question_id": 50758816, "link": "https://stackoverflow.com/questions/50758816/duplicate-elements-of-a-list-on-even-index/50759290#50759290", "title": "Duplicate elements of a list on even index", "body": "<p>Well we can define two functions that perform <em>mutual recursion</em>: <code>dupeven :: [a] -&gt; [a]</code> and <code>dupodd :: [a] -&gt; [a]</code>. <code>dupeven</code> thus will duplicate the first element, and the pass recursively to <code>dupodd</code>. <code>dupodd</code> on the other hand only makes one copy of the head, and then perform recursion on <code>dupeven</code>. Like:</p>\n\n<pre><code>dupeven :: [a] -&gt; [a]\ndupeven [] = []\ndupeven (x:xs) = x : x : <b>dupodd xs</b>\n\ndupodd :: [a] -&gt; [a]\ndupodd [] = []\ndupodd (x:xs) = x : <b>dupeven xs</b></code></pre>\n\n<p>The nice thing is that we get two dupplicate variants. Furthermore both functions are rather simple: they only operate on two different patterns the empty list <code>[]</code> and the \"cons\" <code>(:)</code>.</p>\n\n<p>This thus works as expected, and furthermore we basically have an extra function at (rather) low implementation cost:</p>\n\n<pre><code>Prelude&gt; dupeven [1,5,2,8,4]\n[1,1,5,2,2,8,4,4]\nPrelude&gt; dupodd [1,5,2,8,4]\n[1,5,5,2,8,8,4]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1528466129, "post_id": 50759864, "comment_id": 88532045, "body": "I really like the pedagogical approach taken in this answer. Only one minor suggestion: rather than producing and immediately consuming a tuple, consider <code>zipWith replicate</code>. Then, since you&#39;ve already done the work, on the other side of the <code>&gt;&gt;=</code> you can do nothing with <code>id</code>. (Or specialize <code>foo &gt;&gt;= id</code> to <code>concat foo</code>, which is likely more readable for beginners and experts alike.) My final form would therefore be <code>dup = concat . zipWith replicate (cycle [2,1])</code>."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 4, "last_activity_date": 1528458036, "creation_date": 1528458036, "answer_id": 50759864, "question_id": 50758816, "link": "https://stackoverflow.com/questions/50758816/duplicate-elements-of-a-list-on-even-index/50759864#50759864", "title": "Duplicate elements of a list on even index", "body": "<p>As other answers explain, you can write this function recursively from first principles, but I always think problems like these are interesting puzzles: <em>how can you compose such a function from the existing base library?</em></p>\n\n<p>First, whenever you want to index a list, you can <code>zip</code> it with a lazily evaluated infinite list:</p>\n\n<pre><code>Prelude&gt; zip [0..] [1,5,2,8,4]\n[(0,1),(1,5),(2,2),(3,8),(4,4)]\n</code></pre>\n\n<p>In this case, though, you don't really need to know the actual index values (<code>0, 1, 2, 3, 4</code> and so on). Instead, you just need to know how many repetitions of each number you need. You can produce that knowledge by infinitely cycling through <code>2</code> and <code>1</code>:</p>\n\n<pre><code>Prelude&gt; take 10 $ cycle [2,1]\n[2,1,2,1,2,1,2,1,2,1]\n</code></pre>\n\n<p>(The above example uses <code>take 10</code> to stop evaluation of the list, which, otherwise, continues forever.)</p>\n\n<p>You can <code>zip (cycle [2,1])</code> with any input list to get a list of tuples:</p>\n\n<pre><code>Prelude&gt; zip (cycle [2,1]) [1,5,2,8,4]\n[(2,1),(1,5),(2,2),(1,8),(2,4)]\n</code></pre>\n\n<p>The first element of the tuple is how many times to repeat the second element.</p>\n\n<p>You can use <code>replicate</code> to repeat any value a number of times, but you'll have to <code>uncurry</code> it to take a single tuple as input:</p>\n\n<pre><code>Prelude&gt; uncurry replicate (2,1)\n[1,1]\nPrelude&gt; uncurry replicate (1,5)\n[5]\n</code></pre>\n\n<p>Notice that this function always returns a list, so if you do this over a list of tuples, you'll have a list of lists. To immediately flatten such a list, you can therefore use monadic bind to flatten the projection:</p>\n\n<pre><code>Prelude&gt; zip (cycle [2,1]) [1,5,2,8,4] &gt;&gt;= uncurry replicate\n[1,1,5,2,2,8,4,4]\n</code></pre>\n\n<p>You can, if you will, make a function out of it:</p>\n\n<pre><code>dup xs = zip (cycle [2,1]) xs &gt;&gt;= uncurry replicate\n</code></pre>\n\n<p>This function turns out to be parametrically polymorphic, so while you can use it with lists of integers, you can also use it with lists of characters:</p>\n\n<pre><code>Prelude&gt; dup [1,5,2,8,4]\n[1,1,5,2,2,8,4,4]\nPrelude&gt; dup \"acen\"\n\"aaceen\"\n</code></pre>\n"}], "owner": {"reputation": 607, "user_id": 8597377, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iuGCA.png?s=128&g=1", "display_name": "Cezar Cobuz", "link": "https://stackoverflow.com/users/8597377/cezar-cobuz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 347, "favorite_count": 0, "accepted_answer_id": 50759290, "answer_count": 3, "score": 2, "last_activity_date": 1528458074, "creation_date": 1528454379, "last_edit_date": 1528458074, "question_id": 50758816, "link": "https://stackoverflow.com/questions/50758816/duplicate-elements-of-a-list-on-even-index", "title": "Duplicate elements of a list on even index", "body": "<p>In Haskell, how do I implement a function <code>dup</code> that duplicates all elements that are on even positions (0,2,4...) in a list</p>\n\n<pre><code>dup :: [a] -&gt; [a]\ndup [] = []\ndup (x:xs) =  x : x : dup xs\n//but only on even index ??\n</code></pre>\n\n<p>Example of call:</p>\n\n<pre><code>dup [1,5,2,8,4] = [1,1,5,2,2,8,4,4]\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1528408659, "post_id": 50750269, "comment_id": 88509209, "body": "I can not reproduce."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1528411048, "post_id": 50750269, "comment_id": 88509900, "body": "I cannot reproduce on: 8.4.2, 8.4.1, 8.2.2, 8.2.1 and <code>GHC.TypeNats</code> doesn&#39;t exist on 8.0.2. What version of GHC are you using?"}, {"owner": {"reputation": 1094, "user_id": 1080014, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/302a4e07bfa2c3c09d6a2b68825ca180?s=128&d=identicon&r=PG", "display_name": "Leander", "link": "https://stackoverflow.com/users/1080014/leander"}, "edited": false, "score": 0, "creation_date": 1528412754, "post_id": 50750269, "comment_id": 88510367, "body": "ok, maybe there&#39;s something other going on. I will update the ticket as soon as I am can debug it again. Thank you."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1528414318, "post_id": 50750269, "comment_id": 88510762, "body": "Though I can&#39;t reproduce exactly, there is something odd -- when I give these imports with <code>{-# LANGUAGE TypeOperators, AllowAmbiguousTypes #-}</code>, the signature <code>fun :: f (a * a)</code> typechecks -- i.e. <code>(*)</code> is in scope, although it should not be.  There is some sort of ghc bug here I think"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1528414446, "post_id": 50750269, "comment_id": 88510793, "body": "And in fact I <i>can</i> reproduce if I drop the <code>qualified</code>, indicating that <code>hiding</code> probably does not work with type operators.  GHC 8.2.2."}], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1528421802, "post_id": 50751749, "comment_id": 88512334, "body": "Indeed, and if you compile with <code>-Wall</code> it will warn you about it.  I should really start doing that by habit."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 8, "last_activity_date": 1528417094, "creation_date": 1528417094, "answer_id": 50751749, "question_id": 50750269, "link": "https://stackoverflow.com/questions/50750269/haskell-hide-import-of-star-operator/50751749#50751749", "title": "haskell hide import of star-operator", "body": "<p>Neither <code>GHC.Types</code> nor <code>GHC.TypeNats</code> have a <code>(*)</code> export. They both have a <code><em>type</em> (*)</code> export. Usually, you can distinguish between term-level <code>(*)</code> and type-level <code>(*)</code> by context, but this is not true in export/import lists. Instead, term-level is taken as default, and you must explicitly say you want to hide the types.</p>\n\n<pre><code>import qualified GHC.Types as T hiding (Module, type (*))\nimport GHC.TypeNats hiding (type (*))\n</code></pre>\n\n<p>The reason <code>Module</code> remains unadorned is because the capitalization means it must be either a type, a constructor, or a pattern synonym. Constructors must occur inside grouping <code>()</code> next to their data types, and pattern synonyms must be set apart with <code>pattern</code>, so the <code>Module</code> above is taken to refer to the data type (hiding the data type also hides all of its constructors).</p>\n\n<p>The reason you did not get an error when you tried to hide something that didn't exist is because <code>hiding</code> was designed so that, if the imported module ever stopped exporting something you hid, your module would not fail to compile. After all, the only reason you referenced that thing was to say that you weren't going to reference that thing.</p>\n"}], "owner": {"reputation": 1094, "user_id": 1080014, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/302a4e07bfa2c3c09d6a2b68825ca180?s=128&d=identicon&r=PG", "display_name": "Leander", "link": "https://stackoverflow.com/users/1080014/leander"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "accepted_answer_id": 50751749, "answer_count": 1, "score": 5, "last_activity_date": 1528417094, "creation_date": 1528406140, "last_edit_date": 1528412891, "question_id": 50750269, "link": "https://stackoverflow.com/questions/50750269/haskell-hide-import-of-star-operator", "title": "haskell hide import of star-operator", "body": "<p>I have:</p>\n\n<pre><code>import qualified GHC.Types as T hiding (Module, (*))\nimport GHC.TypeNats hiding ((*))\n</code></pre>\n\n<p>but when I try to define a <code>(*)</code>-operator, it fails:</p>\n\n<pre><code>{-# INLINE (*) #-}\ninfixl 7 *\n(*) :: r -&gt; r -&gt; r\n(*) = undefined\n</code></pre>\n\n<p>with</p>\n\n<pre><code>error:\n    Ambiguous occurrence \u2018*\u2019\n    It could refer to either \u2018T.*\u2019,\n                             imported qualified from \u2018GHC.Types\u2019 at ...\n                          or \u2018*\u2019,\n                             imported from \u2018GHC.TypeNats\u2019 at ...\n     |\n1277 |     infixl 7 *\n</code></pre>\n\n<p>EDIT: the description is currently not reproducible. I will update the question as soon as I can.</p>\n"}, {"tags": ["file", "haskell"], "comments": [{"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528396851, "post_id": 50747937, "comment_id": 88503793, "body": "Could you try doing <code>((name : dt : c : _) : r)</code> instead?"}, {"owner": {"reputation": 1, "user_id": 7729905, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-0laOQkfbvco/AAAAAAAAAAI/AAAAAAAAADk/zRhHUJciaxo/photo.jpg?sz=128", "display_name": "Leonan Fraga Leonardo", "link": "https://stackoverflow.com/users/7729905/leonan-fraga-leonardo"}, "reply_to_user": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1528397065, "post_id": 50747937, "comment_id": 88503908, "body": "Your tips almost worked. I do this: glpurch ((name : dt : c : _) : r) = (name, dt, (rlist c)) : glpurch r, but now I get this message: [(&quot;Name1&quot;,&quot;22/05/2018&quot;,*** Exception: Prelude.read: no parse"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1528399330, "post_id": 50747937, "comment_id": 88504965, "body": "In GHCi try <code>words &quot;Name4   23&#47;05&#47;2018  [(1, 3, 10), (2, 1, 5), (3, 2, 40), (6,20,20)]&quot;</code>  and see what you&#39;re getting.  Then type <code>it !! 2</code> to see what the value of <code>c</code> is that is passed to <code>rlist</code>.   Notice how that is only part of the list."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 7729905, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-0laOQkfbvco/AAAAAAAAAAI/AAAAAAAAADk/zRhHUJciaxo/photo.jpg?sz=128", "display_name": "Leonan Fraga Leonardo", "link": "https://stackoverflow.com/users/7729905/leonan-fraga-leonardo"}, "edited": false, "score": 0, "creation_date": 1528399782, "post_id": 50748809, "comment_id": 88505194, "body": "Yes, that was exactly it. Another solution would be to remove the whitespace between the commas in the list?"}, {"owner": {"reputation": 1, "user_id": 7729905, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-0laOQkfbvco/AAAAAAAAAAI/AAAAAAAAADk/zRhHUJciaxo/photo.jpg?sz=128", "display_name": "Leonan Fraga Leonardo", "link": "https://stackoverflow.com/users/7729905/leonan-fraga-leonardo"}, "edited": false, "score": 0, "creation_date": 1528399912, "post_id": 50748809, "comment_id": 88505264, "body": "I remove all the whitespaces in file, and solve with your and @Welperooni suggestions. Thank you very much guys."}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 7, "last_activity_date": 1528399447, "creation_date": 1528399447, "answer_id": 50748809, "question_id": 50747937, "link": "https://stackoverflow.com/questions/50747937/read-values-and-list-of-lists-in-haskell/50748809#50748809", "title": "Read values and list of lists in Haskell", "body": "<p>You are only matching lists of length 3 when in fact there are many more words on each line.  Just try it in GHCi:</p>\n\n<pre><code>&gt; words \"Name1   22/05/2018  [(1, 5, 10), (2, 5, 5), (3, 10, 40)]\"\n[\"Name1\",\"22/05/2018\",\"[(1,\",\"5,\",\"10),\",\"(2,\",\"5,\",\"5),\",\"(3,\",\"10,\",\"40)]\"]\n</code></pre>\n\n<p>You probably want to recombine all words past the first two:</p>\n\n<pre><code>glpurch ((name : dt : rest) :r) = (name, dt, (rlist $ unwords rest)) : gplpurch r\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 7729905, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-0laOQkfbvco/AAAAAAAAAAI/AAAAAAAAADk/zRhHUJciaxo/photo.jpg?sz=128", "display_name": "Leonan Fraga Leonardo", "link": "https://stackoverflow.com/users/7729905/leonan-fraga-leonardo"}, "is_accepted": false, "score": 0, "last_activity_date": 1528400205, "creation_date": 1528400205, "answer_id": 50749003, "question_id": 50747937, "link": "https://stackoverflow.com/questions/50747937/read-values-and-list-of-lists-in-haskell/50749003#50749003", "title": "Read values and list of lists in Haskell", "body": "<p>To solve my problem, I did what @Welperooni and @Thomas M. DuBuisson suggested.</p>\n\n<p>I added this code to my function:</p>\n\n<pre><code>glpurch ((name: dt: c: _): r) = (name, dt, (read c :: [(Cod, Quant, Price)\n</code></pre>\n\n<p>And I removed the blanks that were in the list in my file, these spaces made the division of the text not done correctly.</p>\n"}], "owner": {"reputation": 1, "user_id": 7729905, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-0laOQkfbvco/AAAAAAAAAAI/AAAAAAAAADk/zRhHUJciaxo/photo.jpg?sz=128", "display_name": "Leonan Fraga Leonardo", "link": "https://stackoverflow.com/users/7729905/leonan-fraga-leonardo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 233, "favorite_count": 0, "accepted_answer_id": 50748809, "answer_count": 2, "score": -1, "last_activity_date": 1528400205, "creation_date": 1528396127, "last_edit_date": 1528396760, "question_id": 50747937, "link": "https://stackoverflow.com/questions/50747937/read-values-and-list-of-lists-in-haskell", "title": "Read values and list of lists in Haskell", "body": "<p>Before to mark this question as duplicated, I already read this topic: <a href=\"https://stackoverflow.com/questions/34956272/haskell-read-integer-and-list-of-lists-from-file\">Haskell read Integer and list of lists from file</a> and the solution doesn't solve my problem.</p>\n\n<p>I'm trying to read the content in a File that contains this structure: </p>\n\n<pre><code>String, String, [(Int, Int, Int)]\n</code></pre>\n\n<p>The file looks something like this:</p>\n\n<pre><code>Name1   22/05/2018  [(1, 5, 10), (2, 5, 5), (3, 10, 40)]    \nName2   23/05/2018  [(1, 10, 10), (2, 15, 5), (3, 50, 40),(4,20,5)]    \nName3   22/05/2018  [(4, 2, 1), (5, 2, 2), (6, 50, 3), (1,2,3)]    \nName4   23/05/2018  [(1, 3, 10), (2, 1, 5), (3, 2, 40), (6,20,20)]\n</code></pre>\n\n<p>In Haskell, I created this function to read the contents of the file and \"convert\" this content to my custom type.</p>\n\n<pre><code>rlist :: String -&gt; [(Int, Int, Int)]\nrlist = read\n\nloadPurchases :: IO [(String, String, [(Int, Int, Int)])]\nloadPurchases = do s &lt;- readFile \"tes.txt\"\n                   return (glpurch (map words (lines s)))\n\nglpurch :: [[String]] -&gt; [(String, String, [(Int, Int, Int)])]\nglpurch [] = []\ngplpurch ([name, dt, c]:r) = (name, dt, (rlist c)) : gplpurch r\n</code></pre>\n\n<p>But when I try to execute the \"loadPurchases\" function, I get this error:\nNon-exhaustive patterns in function glpurch.</p>\n\n<p>Using :set -Wall, I received this help message:</p>\n\n<pre><code>&lt;interactive&gt;:6:1: warning: [-Wincomplete-patterns]\nPattern match(es) are non-exhaustive\nIn an equation for `glpurch':\n    Patterns not matched:\n        ([]:_:_)\n        ([_]:_)\n        ([_, _]:_)\n        ((_:_:_:_:_):_)\n</code></pre>\n\n<p>My problem is how to create all these conditions.</p>\n\n<p>I will be very grateful if anyone can help me create those conditions that are likely to determine the \"stopping condition\"</p>\n"}, {"tags": ["haskell", "module", "typeclass"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1528387811, "post_id": 50745505, "comment_id": 88499250, "body": "ghci doesnt show instances if the type isn&#39;t in scope. Can you include the full ghci session including all imports and the order in which you&#39;re checking things?"}, {"owner": {"reputation": 253, "user_id": 974884, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0ed882c59119fdea1868f40467ac81ec?s=128&d=identicon&r=PG", "display_name": "AndrewE", "link": "https://stackoverflow.com/users/974884/andrewe"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1528388655, "post_id": 50745505, "comment_id": 88499677, "body": "Updated with session information"}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 4, "last_activity_date": 1528389226, "creation_date": 1528389226, "answer_id": 50746210, "question_id": 50745505, "link": "https://stackoverflow.com/questions/50745505/documented-typeclass-instances-not-imported-in-haskell/50746210#50746210", "title": "Documented typeclass instances not imported in Haskell", "body": "<p><code>time-recurrence</code> depends on <code>time &lt; 1.6</code>, but your session is using <code>time-1.9.1</code>. This means that the <code>time</code> package that was imported is not the same  as the <code>time</code> that <code>time-recurrence</code> is using, so the <code>UTCTime</code> type that has an instance is not in scope.</p>\n\n<p>You need to somehow either hide the newer <code>time</code> or fix <code>time-recurrence</code> to build with it.</p>\n"}, {"tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": true, "score": 4, "last_activity_date": 1528389237, "creation_date": 1528389237, "answer_id": 50746216, "question_id": 50745505, "link": "https://stackoverflow.com/questions/50745505/documented-typeclass-instances-not-imported-in-haskell/50746216#50746216", "title": "Documented typeclass instances not imported in Haskell", "body": "<p>Usually it means that you have two different versions of the same type in scope. E.g. you have <code>UTCTime</code> from <code>time-1.9.1</code>, but <code>time-recurrence</code> defines the instance for <code>UTCTime</code> from <code>time-1.5.0.1</code>.</p>\n\n<p>To check the theory, try to run <code>ghc-pkg list time</code>. If I'm right, it will list two different versions installed.</p>\n\n<p>Also, note that <code>time-recurrence</code> doesn't support <code>time-1.9.1</code>. It has the following constraints on <code>time</code>:</p>\n\n<pre><code>time &gt;= 1.4 &amp;&amp; &lt; 1.6\n</code></pre>\n\n<p>It confirms my theory.</p>\n\n<p>You can fix it using <code>ghci -hide-package time-1.5.0.1</code></p>\n"}], "owner": {"reputation": 253, "user_id": 974884, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0ed882c59119fdea1868f40467ac81ec?s=128&d=identicon&r=PG", "display_name": "AndrewE", "link": "https://stackoverflow.com/users/974884/andrewe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 50746216, "answer_count": 2, "score": 2, "last_activity_date": 1528389237, "creation_date": 1528386751, "last_edit_date": 1528388605, "question_id": 50745505, "link": "https://stackoverflow.com/questions/50745505/documented-typeclass-instances-not-imported-in-haskell", "title": "Documented typeclass instances not imported in Haskell", "body": "<p>I'm trying to use the UTCTime instance CalendarTimeConvertible found in the <a href=\"http://hackage.haskell.org/package/time-recurrence-0.9.3/docs/Data-Time-CalendarTime.html\" rel=\"nofollow noreferrer\">time-recurrence</a> library. It's listed in the documentation, but when I import the library into ghci and evaluate <code>i: CalendarTimeConvertible</code>, the instance doesn't appear.</p>\n\n<pre><code>class CalendarTimeConvertible t where\n  toCalendarTime :: t -&gt; CalendarTime\n  fromCalendarTime :: CalendarTime -&gt; Maybe t\n    -- Defined in \u2018time-recurrence-0.9.3:Data.Time.CalendarTime.CalendarTime\u2019\ninstance CalendarTimeConvertible CalendarTime\n  -- Defined in \u2018time-recurrence-0.9.3:Data.Time.CalendarTime.CalendarTime\u2019\n</code></pre>\n\n<p>Nor does it show up in the output to <code>i: UTCTime</code>.</p>\n\n<pre><code>data UTCTime = UTCTime {utctDay :: Day, utctDayTime :: DiffTime}\n    -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Eq UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Ord UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Read UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Format.Parse\u2019\ninstance Show UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.LocalTime.Internal.ZonedTime\u2019\ninstance ParseTime UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Format.Parse.Instances\u2019\ninstance FormatTime UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Format.Format.Instances\u2019\n</code></pre>\n\n<p>I can't figure it out. Is there an import step I'm missing? I searched for ways to explicitly import typeclass instances but came up empty.</p>\n\n<p><strong>Edit:</strong>\nHere is my session:</p>\n\n<pre><code>\u03bb&gt; import Data.Time.Clock\n\u03bb&gt; :i UTCTime\ndata UTCTime\n  = UTCTime {utctDay :: time-1.9.1:Data.Time.Calendar.Days.Day,\n             utctDayTime :: DiffTime}\n    -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Eq UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Ord UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Read UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Format.Parse\u2019\ninstance Show UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.LocalTime.Internal.ZonedTime\u2019\n\u03bb&gt; import Data.Time.CalendarTime\n\u03bb&gt; :i CalendarTimeConvertible\nclass CalendarTimeConvertible t where\n  toCalendarTime :: t -&gt; CalendarTime\n  fromCalendarTime :: CalendarTime -&gt; Maybe t\n    -- Defined in \u2018time-recurrence-0.9.3:Data.Time.CalendarTime.CalendarTime\u2019\ninstance CalendarTimeConvertible CalendarTime\n  -- Defined in \u2018time-recurrence-0.9.3:Data.Time.CalendarTime.CalendarTime\u2019\n\u03bb&gt; :i UTCTime\ndata UTCTime\n  = UTCTime {utctDay :: time-1.9.1:Data.Time.Calendar.Days.Day,\n             utctDayTime :: DiffTime}\n    -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Eq UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Ord UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Clock.Internal.UTCTime\u2019\ninstance Read UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.Format.Parse\u2019\ninstance Show UTCTime\n  -- Defined in \u2018time-1.9.1:Data.Time.LocalTime.Internal.ZonedTime\u2019\n\u03bb&gt; \n</code></pre>\n"}, {"tags": ["haskell", "pattern-synonyms"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1528365040, "post_id": 50738164, "comment_id": 88483819, "body": "I think a problem is that people can declare such patterns in <i>different files</i>: files that <i>use</i> your module. So that would mean that the implementation of <code>parse</code> could vary depending on what libraries the user loads. This is typically a dynamism that most programmers do not like."}, {"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1528367190, "post_id": 50738164, "comment_id": 88485288, "body": "Yes. Let&#39;s keep it simple and assume the pattern is defined in the same module as the data type."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1528368118, "post_id": 50738164, "comment_id": 88485822, "body": "I don&#39;t know of any auto-deriving tools that can do this. The only option I see is to define your own <code>Read MyNum</code> instance and overload <code>readsPrec</code> accordingly. (<code>read</code> will then work, since it is a library function calling <code>readsPrec</code>)"}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1528443451, "post_id": 50738164, "comment_id": 88519060, "body": "You could hack up something with Template Haskell, probably."}], "owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 113, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1528364919, "creation_date": 1528364919, "question_id": 50738164, "link": "https://stackoverflow.com/questions/50738164/pattern-synonyms-deriving-read", "title": "Pattern synonyms deriving read?", "body": "<p>Pattern synonyms provide a shorthand way to express a value; also they can provide an abstract name to avoid a client module breaking into the data decl. Here's a not very useful one, as an example for discussion:</p>\n\n<pre><code>data MyNum = MkNum Int\n\npattern Zero :: MyNum\npattern Zero = MkNum 0\n</code></pre>\n\n<p>What I can do to help data capture is provide a <code>Read</code> instance for <code>MyNum</code>. How do I get a <code>Read</code> instance for <code>Zero</code>? (<code>Zero</code> is a pseudo-data constructor, <em>not</em> a type constructor, so that question is making a category error.)</p>\n\n<p>All I can think of is to avoid <code>deriving (Read, ...)</code> for <code>MyNum</code> and then hand-craft</p>\n\n<pre><code>instance Read MyNum where\n  ... parse \"MkNum ...\"\n  ... parse \"Zero\"\n</code></pre>\n\n<p>For parsing, <code>Zero</code> should be just another constructor for <code>MyNum</code>. It could be derived -- or could it?</p>\n\n<p>I don't think any of the advanced deriving mechanisms would help here. Because the type is <code>MyNum</code> and the only associated constructor ie <code>MkNum</code>.</p>\n\n<p>I could provide a function <code>readZero :: String -&gt; MyNum</code>. But I can't overload <code>read</code>, therefore I can't embed <code>Zero</code> inside a long String literal that I'm reading to make a data structure.</p>\n\n<p>Any ideas?</p>\n"}, {"tags": ["string", "haskell", "higher-order-functions", "fold"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 5, "creation_date": 1528360311, "post_id": 50736419, "comment_id": 88480466, "body": "In what way does it not work?"}, {"owner": {"reputation": 49, "user_id": 9907643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0c48e9569eed0a55331a325c533d8be?s=128&d=identicon&r=PG&f=1", "display_name": "G. Zam", "link": "https://stackoverflow.com/users/9907643/g-zam"}, "reply_to_user": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1528360626, "post_id": 50736419, "comment_id": 88480660, "body": "Ok now it works , but I dont know how to use foldr to have the same result"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1528367279, "post_id": 50736419, "comment_id": 88485349, "body": "@G.Zam NB it &quot;now works&quot; because the Unicode quotes got replaced with the ASCII quotes."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1528375007, "post_id": 50736640, "comment_id": 88490179, "body": "Or keeping <code>rec</code> and converting the boolean value to an integer: <code>f x rec = rec + fromEnum (elem x &quot;aeiou&quot;)</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 8, "last_activity_date": 1528360674, "creation_date": 1528360674, "answer_id": 50736640, "question_id": 50736419, "link": "https://stackoverflow.com/questions/50736419/higher-order-function-haskell/50736640#50736640", "title": "higher order function haskell", "body": "<p>Well a <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:foldr\" rel=\"noreferrer\"><strong><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code></strong></a> is a function where the first parameter is a function <code>f :: a -&gt; b -&gt; b</code>. You can here see the <code>a</code> parameter as the \"<em>head</em>\" of the list, the second parameter <code>b</code> as the <em>result</em> of the recursion with <code>foldr</code>, and you thus want to produce a result in terms of these two for the entire function. This logic is basically encapsulated in the second clause of your function.</p>\n\n<p>Indeed:</p>\n\n<pre><code>vowels (x:xs) = if elem x \"aeiou\" then 1 + vowels xs else vowels xs\n</code></pre>\n\n<p>can be rewritten as:</p>\n\n<pre><code>vowels (x:xs) = if elem x \"aeiou\" then 1 + <b>rec</b> else <b>rec</b>\n    where <b>rec = vowels xs</b></code></pre>\n\n<p>and <code>rec</code> is thus the outcome of the recursive call, the second parameter of the \"fold\"-function. <code>x</code> on the other hand is the first parameter of the \"fold\"-function. We thus need to write this function, only in terms of <code>x</code> and <code>rec</code>, and this is simply:</p>\n\n<pre><code>\\x rec -> if elem x \"aeiou\" then 1 + <b>rec</b> else <b>rec</b></code></pre>\n\n<p>Furthermore we need to handle the case of an empty list, this is the first clause of your function. In that case the result is <code>0</code>, this is the second paramter of the <code>foldr</code>, so we got:</p>\n\n<pre><code>vowels = foldr (\\x rec -> if elem x \"aeiou\" then 1 + <b>rec</b> else <b>rec</b>) 0</code></pre>\n\n<p>Or a more clean syntax:</p>\n\n<pre><code>vowels = foldr <b>f</b> 0\n    where f x rec | elem x \"aeiou\" = 1 + rec\n                  | otherwise = rec</code></pre>\n\n<p>We can further clean it up, by abstracting away <code>rec</code>:</p>\n\n<pre><code>vowels = foldr <b>f</b> 0\n    where f x | elem x \"aeiou\" = <b>(1+)</b>\n              | otherwise = <b>id</b></code></pre>\n"}, {"comments": [{"owner": {"reputation": 49, "user_id": 9907643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0c48e9569eed0a55331a325c533d8be?s=128&d=identicon&r=PG&f=1", "display_name": "G. Zam", "link": "https://stackoverflow.com/users/9907643/g-zam"}, "edited": false, "score": 0, "creation_date": 1528363264, "post_id": 50736690, "comment_id": 88482501, "body": "thanks,  but in this way it don&#39;t compile, it says: fail"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1528369182, "post_id": 50736690, "comment_id": 88486456, "body": "@Welperooni the OP can have the &quot;dreaded&quot; monomorphism restriction kicking in (this could happen without the type signature); simply specify all the arguments in the definition to prevent it (i.e., <code>vowels xs = ...</code>)."}], "tags": [], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "is_accepted": false, "score": 4, "last_activity_date": 1528360831, "creation_date": 1528360831, "answer_id": 50736690, "question_id": 50736419, "link": "https://stackoverflow.com/questions/50736419/higher-order-function-haskell/50736690#50736690", "title": "higher order function haskell", "body": "<p>You need to take a look at <code>foldr</code>'s signature.</p>\n\n<p><code>foldr :: Foldable t =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b</code></p>\n\n<p>Never mind the <code>Foldable</code> part and focus on the first function it takes.\n<code>(a -&gt; b -&gt; b)</code> <code>b</code> is the same type that you are supposed to return, so directly translating the signature into a lambda gives you <code>\\x acc -&gt; acc</code>, but you want to do more than just ignore every element. </p>\n\n<p>Take a look at your function <code>if elem x \"aeiou\" then 1 + vowels xs else vowels xs</code>. You need to return <code>b</code>, not recurse adding one to it. </p>\n\n<p><code>if elem x \"aeiou\"</code> this part is fine. <code>then 1 + acc</code> &lt;- see what I'm doing here? I'm adding one to the accumulator, not recursing manually, that is done by <code>foldr</code>, as for the <code>else</code> case: <code>acc</code>. That's it. You don't need to even touch <code>x</code>.</p>\n\n<p>Putting it all together: <code>vowels = foldr (\\x acc -&gt; if elem x \"aeiou\" then 1 + acc else acc) 0</code>\nThe <code>0</code> is what the <code>acc</code> will start as.</p>\n\n<p>If you want to know more about folds, I suggest you reimplement them yourself.</p>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1528368417, "post_id": 50737477, "comment_id": 88485952, "body": "you write &quot;... an integer that&#39;s completely outside of the <code>foldr</code>. I.e. it can&#39;t depend on the string ...&quot; this may be obvious from the general type but why should this be obvious with the specific types? what we see at that point is <code>vowels s = foldr (\\x -&gt; if x</code>elem<code>&quot;aeiou&quot; then (1+) else id) _ s</code>. why should that Int be free from <code>s</code>? why can&#39;t it depend on it, from what we see there? I don&#39;t see it. Can we really avoid discussing the partially-specialized type <code>\\r z -&gt; foldr r z &quot;12&quot; :: (Char -&gt; b -&gt; b) -&gt; b -&gt; b</code> here (and mentioning the omitted <code>forall b .</code>), before we&#39;re going to Ints?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1528368812, "post_id": 50737477, "comment_id": 88486218, "body": "... in particular, I can write  <code>(length s)</code> instead of that <code>_</code>, and Haskell accepts this as a valid definition."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1528369364, "post_id": 50737477, "comment_id": 88486569, "body": "You&#39;re right, it&#39;s only obvious after eta-reduction. (Which isn&#39;t really a reason either, because <i>why can we do \u03b7-reduction</i>?) Do you have any better reason that could be named here?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1528369410, "post_id": 50737477, "comment_id": 88486592, "body": "the type <code>forall b . (Char -&gt; b -&gt; b) -&gt; b -&gt; b</code> is all I have. is it really eta-reduction? maybe it&#39;s &quot;specification&quot;? (or what&#39;s the word, narrowing? instantiation?)"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 4, "last_activity_date": 1528363601, "last_edit_date": 1528363601, "creation_date": 1528362987, "answer_id": 50737477, "question_id": 50736419, "link": "https://stackoverflow.com/questions/50736419/higher-order-function-haskell/50737477#50737477", "title": "higher order function haskell", "body": "<p>The easiest way to write something like that is to let the compiler guide you.</p>\n\n<p>First, look only at the <em>obvious</em> parts of the <code>foldr</code> signature. <sup><sub>This is the traditional signature, specialised to lists. Nowedays, <code>foldr</code> can actually work on any other suitable container as well, but this isn't important here.</sub></sup></p>\n\n<pre><code>foldr :: (a -&gt; b -&gt; b)  -- ^ Not obvious\n      -&gt; b              -- ^ Not obvious\n      -&gt; [a]            -- ^ A list... that'll be the input string\n      -&gt; b              -- ^ Final result, so nothing to be done here.\n</code></pre>\n\n<p>So, your implementation will be of the form</p>\n\n<pre><code>vowels :: String -&gt; Int\nvowels s = foldr _ _ s\n</code></pre>\n\n<p>where we yet need to find out what to put in the <code>_</code> gaps. The compiler will give you useful hints as to this:</p>\n\n<pre><code>$ ghc wtmpf-file6869.hs \n[1 of 1] Compiling Main             ( wtmpf-file6869.hs, wtmpf-file6869.o )\n\n/tmp/wtmpf-file6869.hs:2:18: error:\n    \u2022 Found hole: _ :: Char -&gt; Int -&gt; Int\n    \u2022 In the first argument of \u2018foldr\u2019, namely \u2018_\u2019\n      In the expression: foldr _ _ s\n      In an equation for \u2018Main.vowels\u2019: Main.vowels s = foldr _ _ s\n    \u2022 Relevant bindings include\n        s :: String (bound at /tmp/wtmpf-file6869.hs:2:8)\n        vowels :: String -&gt; Int (bound at /tmp/wtmpf-file6869.hs:2:1)\n  |\n2 | vowels s = foldr _ _ s\n  |                  ^\n</code></pre>\n\n<p>So, a function that merely takes a single character, and then modifies an integer. That was actually already part of your original implementation:</p>\n\n<pre><code>vowels (<b>x</b>:xs) = <b>if elem x \"aeiou\" then 1 + </b>vowels xs else vowels xs\n</code></pre>\n\n<p>The bold part is essentially a function of a single character, that yields a number-modifier. So we can put that in the <code>foldr</code> implementation, using lambda syntax:</p>\n\n<pre><code>vowels s = foldr (\\x -&gt; if x`elem`\"aeiou\" then (1+) else _) _ s\n</code></pre>\n\n<p>I had to put the <code>1+</code> in parenthesis so it works without an explicit argument, as an <em>operator section</em>.</p>\n\n<p>Ok, more gaps:</p>\n\n<pre><code>    \u2022 Found hole: _ :: Int -&gt; Int\n    \u2022 In the expression: _\n      In the expression: if x `elem` \"aeiou\" then (1 +) else _\n      In the first argument of \u2018foldr\u2019, namely\n        \u2018(\\ x -&gt; if x `elem` \"aeiou\" then (1 +) else _)\u2019\n    \u2022 Relevant bindings include\n        x :: Char (bound at wtmpf-file6869.hs:2:20)\n        s :: String (bound at wtmpf-file6869.hs:2:8)\n        vowels :: String -&gt; Int (bound at wtmpf-file6869.hs:2:1)\n  |\n2 | vowels s = foldr (\\x -&gt; if x`elem`\"aeiou\" then (1+) else _) _ s\n  |                                                          ^\n</code></pre>\n\n<p>So that's the modifier that should take action when you've found a non-vowel. What do you want to modify in this case? Well, nothing actually: the count should stay as-is. That's accomplished by the <code>id</code> function.</p>\n\n<pre><code>vowels s = foldr (\\x -> if x`elem`\"aeiou\" then (1+) else id) _ s\n</code></pre>\n\n<pre><code>    \u2022 Found hole: _ :: Int\n    \u2022 In the second argument of \u2018foldr\u2019, namely \u2018_\u2019\n      In the expression:\n        foldr (\\ x -&gt; if x `elem` \"aeiou\" then (1 +) else id) _ s\n      In an equation for \u2018vowels\u2019:\n          vowels s\n            = foldr (\\ x -&gt; if x `elem` \"aeiou\" then (1 +) else id) _ s\n    \u2022 Relevant bindings include\n        s :: String (bound at wtmpf-file6869.hs:2:8)\n        vowels :: String -&gt; Int (bound at wtmpf-file6869.hs:2:1)\n  |\n2 | vowels s = foldr (\\x -&gt; if x`elem`\"aeiou\" then (1+) else id) _ s\n  |                                                              ^\n</code></pre>\n\n<p>So that's an integer that's completely outside of the <code>foldr</code>. I.e. it can't depend on the string. In particular, it will also be used if the string is <em>empty</em>. Can only be <code>0</code>!</p>\n\n<pre><code>vowels s = foldr (\\x -&gt; if x`elem`\"aeiou\" then (1+) else id) 0 s\n</code></pre>\n\n<p>No more gaps, so the compiler will just accept this. Test it:</p>\n\n<pre><code>$ ghci wtmpf-file6869\nGHCi, version 8.2.1: http://www.haskell.org/ghc/  :? for help\nLoaded GHCi configuration from /home/sagemuej/.ghc/ghci.conf\nLoaded GHCi configuration from /home/sagemuej/.ghci\n[1 of 1] Compiling Main             ( wtmpf-file6869.hs, interpreted )\nOk, 1 module loaded.\n*Main&gt; vowels \"uwkaefdohinurheoi\"\n9\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1528369790, "creation_date": 1528369790, "answer_id": 50739731, "question_id": 50736419, "link": "https://stackoverflow.com/questions/50736419/higher-order-function-haskell/50739731#50739731", "title": "higher order function haskell", "body": "<p>Your definition can be tweaked into</p>\n\n<pre><code>vowels []     = 0\nvowels (x:xs) = g x (vowels xs)\n  where\n  g x rec = if elem x \"aeiou\" then 1 + rec else rec\n</code></pre>\n\n<p>which matches the pattern</p>\n\n<pre><code>foldr r z [] = z\nfoldr r z (x:xs) = r x (foldr r z xs)\n</code></pre>\n\n<p>if we have <code>foldr r z = vowels</code> and <code>r = g</code>, and also <code>z = 0</code>.</p>\n\n<p>That \"pattern\" is in fact a valid definition of the <code>foldr</code> function.</p>\n\n<p>Thus we indeed have </p>\n\n<pre><code>vowels xs = foldr g 0 xs\n  where\n  g x rec = if elem x \"aeiou\" then 1 + rec else rec\n</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 9907643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0c48e9569eed0a55331a325c533d8be?s=128&d=identicon&r=PG&f=1", "display_name": "G. Zam", "link": "https://stackoverflow.com/users/9907643/g-zam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 497, "favorite_count": 0, "answer_count": 4, "score": 4, "last_activity_date": 1528369790, "creation_date": 1528360119, "last_edit_date": 1528360150, "question_id": 50736419, "link": "https://stackoverflow.com/questions/50736419/higher-order-function-haskell", "title": "higher order function haskell", "body": "<p>I'm new to Haskell, I've to do a function that counts the number of vowels in a string using the higher order function <strong>foldr</strong></p>\n\n<p>I've tried to create this function </p>\n\n<pre><code>vowels [] = 0\nvowels (x:xs)= if elem x \"aeiou\" then 1 + vowels xs else vowels xs\n</code></pre>\n\n<p>But it doesn't work and I'm not able to do it using <code>foldr</code>, any suggestion?</p>\n"}, {"tags": ["haskell", "category-theory"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 3, "creation_date": 1528359605, "post_id": 50735311, "comment_id": 88480036, "body": "Well, there is a ton of categorical structure lurking <i>everywhere across mathematics</i>. Haskell simply inherits a big chunk of that. Nevertheless, I disagree that it doesn&#39;t make sense to single out <b>Hask</b>, because that category <i>does</i> get preferential treatment through the language&#39;s syntax. Namely, lambdas etc. give you very nice access to the cartesian-closed property of <b>Hask</b>, but not of any other category (though there are <a href=\"http://conal.net/blog/posts/haskell-to-hardware-via-cccs\" rel=\"nofollow noreferrer\">approaches for that</a> too)."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1528359920, "post_id": 50735311, "comment_id": 88480220, "body": "What I do agree with is that we should always keep our eyes open for other categories. But IMO this is only unfolds its full potential if we can abstract over them within the language. Unfortunately, the standard <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Category.html#t:Category\" rel=\"nofollow noreferrer\"><code>Category</code></a> / <code>Arrow</code> classes are too restricted to express most interesting categories \u2013 ironically, because they <i>don&#39;t</i> restrict their objects but have to operate on all Haskell types. So to move forward, we should more widely adapt category classes that allow finer control."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1528380523, "post_id": 50735311, "comment_id": 88494275, "body": "Gabriel Gonzalez has done a lot of work on &quot;other&quot; categories in Haskell.  His <code>pipes</code> library is explicitly designed around a type that <a href=\"https://hackage.haskell.org/package/pipes-4.3.9/docs/Pipes-Core.html#g:2\" rel=\"nofollow noreferrer\">is part of five different categories</a>."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1528385620, "post_id": 50735311, "comment_id": 88497961, "body": "Perhaps the more interesting thing about <b>Hask</b> is that thee&#39;s <a href=\"http://math.andrej.com/2016/08/06/hask-is-not-a-category/\" rel=\"nofollow noreferrer\">no such category</a>."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1528416199, "post_id": 50735311, "comment_id": 88511164, "body": "This question is quite broad."}], "answers": [{"comments": [{"owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 1, "creation_date": 1528383306, "post_id": 50744319, "comment_id": 88496333, "body": "N.B. not all categories in Haskell are of the form of Hask and MHask. So I think McBride&#39;s warning applies here too."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1528553679, "post_id": 50744319, "comment_id": 88557218, "body": "Those typically show up in the wild through the means of <a href=\"https://hackage.haskell.org/package/mmorph-1.1.2/docs/Control-Monad-Morph.html\" rel=\"nofollow noreferrer\">the <i>mmorph</i> package</a>"}], "tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 2, "last_activity_date": 1528383220, "creation_date": 1528383220, "answer_id": 50744319, "question_id": 50735311, "link": "https://stackoverflow.com/questions/50735311/categorical-structure-in-haskell/50744319#50744319", "title": "Categorical structure in Haskell", "body": "<p>I once uploaded an educational package that demonstrates one example of this. I called it MHask.</p>\n\n<p><a href=\"http://hackage.haskell.org/package/MHask\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/MHask</a></p>\n\n<p>Copied from the hackage page:</p>\n\n<p>MHask is the category where</p>\n\n<ul>\n<li>The objects are Haskell types of kind (* \u2192 *) that have an instance of Prelude.Monad</li>\n<li>An arrow from object m to object n is a Haskell function of the form (forall x. m x \u2192 n x)</li>\n<li>Arrow composition is merely a specialization of Haskell function composition</li>\n<li>The identity arrow for the object m is the Prelude.id function in Haskell, specialized to (forall x. m x \u2192 m x)</li>\n</ul>\n\n<p>Caveat emptor; I have not looked at this in a long time. There may be mistakes.</p>\n"}, {"tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 4, "last_activity_date": 1528383851, "creation_date": 1528383851, "answer_id": 50744536, "question_id": 50735311, "link": "https://stackoverflow.com/questions/50735311/categorical-structure-in-haskell/50744536#50744536", "title": "Categorical structure in Haskell", "body": "<p>Gabriel Gonzalez has blogged about this. Here's one such post:\n<a href=\"http://www.haskellforall.com/2012/08/the-category-design-pattern.html\" rel=\"nofollow noreferrer\">http://www.haskellforall.com/2012/08/the-category-design-pattern.html</a></p>\n\n<p>In it, he calls Hask \"the function category\", and also discusses \"the Kleisli category\" and \"the pipes category.\" These are all examples of instances of the Category typeclass in Haskell. The Category typeclass in Haskell is a subset of the categories you can find in Haskell.</p>\n"}, {"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 1, "creation_date": 1528397132, "post_id": 50748178, "comment_id": 88503958, "body": "And apparently, the upcoming <code>QuantifiedContexts</code> extension also has a categorical interpretation, but that is beyond my ken <a href=\"https://mail.haskell.org/pipermail/libraries/2018-January/028399.html\" rel=\"nofollow noreferrer\">mail.haskell.org/pipermail/libraries/2018-January/028399.htm&zwnj;&#8203;l</a> <a href=\"https://ghc.haskell.org/trac/ghc/ticket/5927#comment:19\" rel=\"nofollow noreferrer\">ghc.haskell.org/trac/ghc/ticket/5927#comment:19</a>"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1529162931, "post_id": 50748178, "comment_id": 88779644, "body": "This post describes a category in which morphisms are properties about types: <a href=\"https://markkarpov.com/post/smart-constructors-that-cannot-fail.html\" rel=\"nofollow noreferrer\">markkarpov.com/post/smart-constructors-that-cannot-fail.html</a>"}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 6, "last_activity_date": 1528483880, "last_edit_date": 1528483880, "creation_date": 1528396929, "answer_id": 50748178, "question_id": 50735311, "link": "https://stackoverflow.com/questions/50735311/categorical-structure-in-haskell/50748178#50748178", "title": "Categorical structure in Haskell", "body": "<p>Constraints in Haskell <a href=\"https://youtu.be/hIZxTQP1ifo?t=2827\" rel=\"nofollow noreferrer\">also form a category</a>. The objects are the constraints, and the arrows mean <a href=\"http://hackage.haskell.org/package/constraints-0.10/docs/Data-Constraint.html#t::-45-\" rel=\"nofollow noreferrer\">\"this constraint implies this other constraint\"</a>. So every constraint implies itself, and there's an arrow between <code>Monad f</code> and <code>Applicative f</code>, between <code>Ord a</code> and <code>Eq a</code> and between <code>Ord a</code> and <code>Ord [a]</code>.</p>\n\n<p>It is a <a href=\"https://ncatlab.org/nlab/show/thin+category\" rel=\"nofollow noreferrer\">thin category</a>, so there is at most one arrow between two objects. </p>\n"}], "owner": {"reputation": 938, "user_id": 474311, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/aad241f867909f119502ffbff53849af?s=128&d=identicon&r=PG", "display_name": "Dan Onea\u021b\u0103", "link": "https://stackoverflow.com/users/474311/dan-onea%c8%9b%c4%83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 1, "accepted_answer_id": 50748178, "answer_count": 3, "score": 9, "last_activity_date": 1528483880, "creation_date": 1528356533, "last_edit_date": 1592644375, "question_id": 50735311, "link": "https://stackoverflow.com/questions/50735311/categorical-structure-in-haskell", "title": "Categorical structure in Haskell", "body": "<p><code>Hask</code> is usually thought to be the category whose objects are types and morphisms are functions.\nHowever, I've seen Conor McBride (@pigworker) warn against the use of <code>Hask</code> multiple times (<a href=\"https://stackoverflow.com/a/45905082/474311\">1</a>, <a href=\"https://stackoverflow.com/a/37368282/474311\">2</a>, <a href=\"https://stackoverflow.com/a/50717675/474311\">3</a>):</p>\n<blockquote>\n<ul>\n<li><p>I would discourage talk of &quot;the Hask Category&quot; because it subconsciously conditions you against looking for other categorical structure in Haskell programming.</p>\n</li>\n<li><p>Note, I dislike the use of &quot;Hask&quot; as the name of the &quot;category of Haskell types and functions&quot;: I fear that labelling one category as the Haskell category has the unfortunate side-effect of blinding us to the wealth of other categorical structure in Haskell programming. It's a trap.</p>\n</li>\n<li><p>I wish people wouldn't call it &quot;Hask&quot;, though: it threatens to limit the imagination.</p>\n</li>\n</ul>\n</blockquote>\n<p>What other categories can we see in Haskell?</p>\n<p>In <a href=\"https://stackoverflow.com/a/37368282/474311\">one of his answers</a>, he touches upon some of these ideas, but I wonder if someone could expand upon it; and I wonder if there are even more examples.</p>\n<blockquote>\n<p>[...] there's a ton of categorical structure lurking everywhere, there's certainly a ton of categorical structure available (possibly but not necessarily) at higher kinds. I'm particularly fond of functors between indexed families of sets.</p>\n</blockquote>\n"}, {"tags": ["haskell", "streaming"], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 0, "last_activity_date": 1528396160, "creation_date": 1528396160, "answer_id": 50747948, "question_id": 50735266, "link": "https://stackoverflow.com/questions/50735266/streaming-of-a-resource-with-proper-acquisition-and-release/50747948#50747948", "title": "Streaming of a resource with proper acquisition and release", "body": "<blockquote>\n  <p>let's move the stream consumption inside the use function</p>\n</blockquote>\n\n<p>This is indeed the right approach.</p>\n\n<p>I'm actually getting a proper <code>hGetLine: end of file</code> when running the example code. The problem is that <code>S.repeatM (hGetLine h)</code> never bothers to check if it has reached then end of the file, and throws an exception when it bumps into it.</p>\n\n<p>The following definition of <code>use</code> doesn't have that problem:</p>\n\n<pre><code>use :: Handle -&gt; IO ()\nuse h = do\n    S.print $ S.untilRight $ do eof &lt;- System.IO.hIsEOF h\n                                if eof then Right &lt;$&gt; pure ()\n                                       else Left &lt;$&gt; hGetLine h\n</code></pre>\n\n<p>It uses the <a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/Streaming-Prelude.html#v:untilRight\" rel=\"nofollow noreferrer\"><code>untilRight</code></a> function.</p>\n"}], "owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 75, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1528396160, "creation_date": 1528356425, "question_id": 50735266, "link": "https://stackoverflow.com/questions/50735266/streaming-of-a-resource-with-proper-acquisition-and-release", "title": "Streaming of a resource with proper acquisition and release", "body": "<p>This is a question about the Haskell <a href=\"http://hackage.haskell.org/package/streaming\" rel=\"nofollow noreferrer\"><code>streaming</code></a> library. </p>\n\n<p><code>Stream (Of a) m r</code> is a \"stream of individual Haskell values derived from actions in some monad <code>m</code> and returning a value of type <code>r</code>\". <code>Streaming.Prelude</code> defines many useful functions that allow nice streaming applications:</p>\n\n<pre><code>import qualified Streaming.Prelude as S\nS.print $ do\n    S.yield \"a\"\n    S.yield \"b\"\n    S.yield \"c\"\n</code></pre>\n\n<p>The <a href=\"https://github.com/michaelt/streaming-tutorial/blob/master/tutorial.md\" rel=\"nofollow noreferrer\">tutorial</a> is good for getting started.</p>\n\n<p>Now, the particular issue at hand is how to use this framework with a monad that requires careful instantiation and release of resources. The <a href=\"https://hackage.haskell.org/package/streaming-with\" rel=\"nofollow noreferrer\"><code>streaming-with</code></a> package seems to be the right candidate, it has a function </p>\n\n<pre><code>bracket :: MonadMask m =&gt; m a -&gt; (a -&gt; m c) -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>that acquires (<code>m a</code>), releases (<code>a-&gt;m c</code>) and uses (<code>a-&gt;m b</code>) a resource. All three actions are encapsulated in the returned <code>m b</code>. <code>withFile</code> is a good example for how to use this:</p>\n\n<pre><code>withFile :: FilePath -&gt; IOMode -&gt; (Handle -&gt; m r) -&gt; m r\nwithFile fp md = bracket (liftIO (openFile fp md)) (liftIO . hClose)\n</code></pre>\n\n<p>Acquisition and release of the handle are nicely sandwiching the usage <code>Handle-&gt;m r</code>.</p>\n\n<p>But: I absolutely do not see how this should be used with <code>Stream (Of a) m r</code>. I have to provide an <code>a-&gt;m b</code> and I get a <code>m b</code>. How is this supposed to be connected so that I obtain a <code>Stream</code>?</p>\n\n<p>To figure this out, let's play with <code>withFile</code>:</p>\n\n<pre><code>import System.IO \n\nuse :: Handle -&gt; IO (S.Stream (Of String) IO ())\nuse = return . S.repeatM . hGetLine\n\nmain :: IO ()\nmain = do\n    str &lt;- S.withFile \"input.dat\" ReadMode use\n    S.print str\n</code></pre>\n\n<p>but that results in <code>hGetLine: illegal operation (handle is closed)</code>. That actually makes sense, by the time <code>S.print str</code> is called <code>withFile</code> has already acquired and released the handle.\nSo let's move the stream consumption inside the <code>use</code> function:</p>\n\n<pre><code>use :: Handle -&gt; IO ()\nuse h = do\n    S.print $ S.repeatM (hGetLine h)\n</code></pre>\n\n<p>and that gives a <code>hGetLine: invalid argument (invalid byte sequence)</code>. I'm not quite sure what this error means. An <code>isEOFError</code> would be acceptable, but 'invalid byte sequence'? In any case, this doesn't work either.</p>\n\n<p>I'm running out of ideas... How is this done? </p>\n\n<p>The <code>withFile</code> is just a toy example, the question is really about how to correctly create and consume a stream inside a <code>bracket</code>.</p>\n"}, {"tags": ["haskell", "polymorphism", "ghci"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1528351602, "post_id": 50732538, "comment_id": 88475705, "body": "To be precise, for example <code>instance Show (IO a) where show _ = &quot;&lt;IO&gt;&quot;</code> <i>can</i> exist, it just doesn&#39;t."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1528353644, "post_id": 50732538, "comment_id": 88476689, "body": "@luqui you&#39;re right, you can write such instance. You can even use <code>unsafePerformIO</code> if you feel risky enough... It just won&#39;t be useful. Sorry for not being precise enough in my answer."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 1, "creation_date": 1528366920, "post_id": 50732538, "comment_id": 88485116, "body": "If you want this to work, the <code>Show</code> constraint needs to be <code>Show a</code>, not <code>Show (m a)</code>."}, {"owner": {"reputation": 619, "user_id": 4996524, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/5b7910ac129ed37a15e32deb4a2c3bd9?s=128&d=identicon&r=PG&f=1", "display_name": "YoTengoUnLCD", "link": "https://stackoverflow.com/users/4996524/yotengounlcd"}, "edited": false, "score": 0, "creation_date": 1528394448, "post_id": 50732538, "comment_id": 88502558, "body": "Thanks for your very good answer, Shersh. Just a quick thing before accepting this, could you share some source of how this type defaulting happens? I couldn&#39;t find it in GHC&#39;s GHCi docs."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 619, "user_id": 4996524, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/5b7910ac129ed37a15e32deb4a2c3bd9?s=128&d=identicon&r=PG&f=1", "display_name": "YoTengoUnLCD", "link": "https://stackoverflow.com/users/4996524/yotengounlcd"}, "edited": false, "score": 0, "creation_date": 1528422796, "post_id": 50732538, "comment_id": 88512558, "body": "@YoTengoUnLCD This is a good blog post about type defaulting: <a href=\"https://kseo.github.io/posts/2017-01-04-type-defaulting-in-haskell.html\" rel=\"nofollow noreferrer\">kseo.github.io/posts/2017-01-04-type-defaulting-in-haskell.h&zwnj;&#8203;tml</a>"}], "tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": true, "score": 5, "last_activity_date": 1528342669, "last_edit_date": 1528342669, "creation_date": 1528342375, "answer_id": 50732538, "question_id": 50732354, "link": "https://stackoverflow.com/questions/50732354/ghci-different-behavior-for-value-with-without-show-constraint/50732538#50732538", "title": "GHCi different behavior for value with/without Show constraint", "body": "<p>By default <code>ghci</code> works in <code>IO</code> monad. So when you're trying to evaluate <code>a</code> its <code>m</code> type variable becomes <code>IO</code>. And <code>a</code> variable has type <code>Num a =&gt; IO a</code>. When you evaluate <code>IO</code> action inside repl, <code>ghci</code> just performs it and prints result. In your case this is <code>Num a =&gt; a</code> (and default for polymorphic variables with <code>Num</code> constraint in <code>ghci</code> is <code>Integer</code> data type).</p>\n\n<p>But <code>IO</code> data type doesn't have <code>Show</code> instance. There's no such instance and it can't even exist! Before evaluating some expression in <code>ghci</code>, it should satisfy all constraints. Since it can't satisfy <code>Show (IO a)</code> (because there's no such instance) it can't substitute <code>IO</code> for <code>m</code> type variable. But then: which <code>m</code> do you exactly want? <code>ghci</code> can't guess for you. Behaviour is different for different <code>m</code>s.</p>\n\n<pre><code>ghci&gt; b = return 5 :: (Monad m, Num a, Show (m a)) =&gt; m a\nghci&gt; b :: Maybe Int\nJust 5\nghci&gt; b :: [Int]\n[5]\n</code></pre>\n"}], "owner": {"reputation": 619, "user_id": 4996524, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/5b7910ac129ed37a15e32deb4a2c3bd9?s=128&d=identicon&r=PG&f=1", "display_name": "YoTengoUnLCD", "link": "https://stackoverflow.com/users/4996524/yotengounlcd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 2, "accepted_answer_id": 50732538, "answer_count": 1, "score": 4, "last_activity_date": 1528342669, "creation_date": 1528340644, "last_edit_date": 1528342370, "question_id": 50732354, "link": "https://stackoverflow.com/questions/50732354/ghci-different-behavior-for-value-with-without-show-constraint", "title": "GHCi different behavior for value with/without Show constraint", "body": "<p>I was trying to understand what GHCi does to print values, I thought it would just do something like call <code>putStrLn . show</code> on the value, but then this happened:</p>\n\n<pre><code>a = return 5 :: (Monad m, Num a) =&gt; m a\na -- prints 5\n\nb = return 5 :: (Monad m, Num a, Show (m a)) =&gt; m a\nb -- Ambiguous type variable `m0`...\n</code></pre>\n\n<p>Why is it that adding the show constraint change this behavior? I thought that'd be assumed when trying to print the value.</p>\n"}]