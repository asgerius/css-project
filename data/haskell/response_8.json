[{"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "edited": false, "score": 4, "creation_date": 1425513496, "post_id": 28867353, "comment_id": 45999548, "body": "Your function&#39;s argument is an instance of <code>Integral</code>, but the <code>&#47;</code> operator expects an instance of <code>Fractional</code>:  <code>(&#47;) :: Fractional a =&gt; a -&gt; a -&gt; a</code>. You want to use integer-division operator instead: <code>div :: Integral a =&gt; a -&gt; a -&gt; a</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "edited": false, "score": 1, "creation_date": 1425514392, "post_id": 28867353, "comment_id": 45999810, "body": "@Jubobs: that doesn&#39;t make sense, as the OP wants to <code>isWhole</code>-test the result. Wouldn&#39;t be very interesting for <code>Integral a</code>, would it?"}, {"owner": {"reputation": 31, "user_id": 905250, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40e15162d5f9bd4f753257400c843f57?s=128&d=identicon&r=PG", "display_name": "habibalamin", "link": "https://stackoverflow.com/users/905250/habibalamin"}, "edited": false, "score": 0, "creation_date": 1425543218, "post_id": 28867353, "comment_id": 46008559, "body": "None of the solutions in these answers work, so I can&#39;t accept them. I would like to up vote, but I don&#39;t have enough reputation.  It&#39;s ~8 am here, so I have to go back to my nice comfortable Ruby job for now, but I&#39;ll respond in more detail as soon as I get back."}, {"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1425558135, "post_id": 28867353, "comment_id": 46017291, "body": "@leftaroundabout My comment was <i>not</i> meant as a full answer. I was merely explaining one of the type errors."}, {"owner": {"reputation": 1251, "user_id": 3973371, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb6b82669e037ed73e47d6532ef2c246?s=128&d=identicon&r=PG&f=1", "display_name": "bmaderbacher", "link": "https://stackoverflow.com/users/3973371/bmaderbacher"}, "edited": false, "score": 0, "creation_date": 1425569344, "post_id": 28867353, "comment_id": 46024372, "body": "@habibalamin Could you explain where you have problems with the given answers. For me they all work."}, {"owner": {"reputation": 31, "user_id": 905250, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40e15162d5f9bd4f753257400c843f57?s=128&d=identicon&r=PG", "display_name": "habibalamin", "link": "https://stackoverflow.com/users/905250/habibalamin"}, "reply_to_user": {"reputation": 1251, "user_id": 3973371, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb6b82669e037ed73e47d6532ef2c246?s=128&d=identicon&r=PG&f=1", "display_name": "bmaderbacher", "link": "https://stackoverflow.com/users/3973371/bmaderbacher"}, "edited": false, "score": 0, "creation_date": 1425584075, "post_id": 28867353, "comment_id": 46033574, "body": "@bmaderbacher okay, just got back from work. So, I just tried it again and it turns out the codewars test require <code>isPowerOf4 0</code> to return <code>True</code>. I tried adding a line  <code>isPowerOf4 0 = True</code> before the <code>isPowerOf4 x</code> line and it didn&#39;t work. It still fails the test. Apart from that, the function works in my eyes, so I&#39;m going to accept Jeremy List&#39;s answer."}, {"owner": {"reputation": 31, "user_id": 905250, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40e15162d5f9bd4f753257400c843f57?s=128&d=identicon&r=PG", "display_name": "habibalamin", "link": "https://stackoverflow.com/users/905250/habibalamin"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1425584764, "post_id": 28867353, "comment_id": 46034019, "body": "@leftaroundabout, &quot;Wouldn&#39;t be very interesting for Integral a, would it?&quot;  Haha, I just realised how dumb that was."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1425530552, "post_id": 28867657, "comment_id": 46004069, "body": "As others note, using <code>rem</code> makes a lot more sense here. Another option is to use something from <code>Data.Bits</code>."}, {"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425558857, "post_id": 28867657, "comment_id": 46017672, "body": "@dfeuer Your suggestion (using <code>Data.Bits</code>) seems like the best approach. Why not post an answer?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "edited": false, "score": 0, "creation_date": 1425570077, "post_id": 28867657, "comment_id": 46024901, "body": "@Jubobs, because I haven&#39;t looked over the assembly yet to see if they&#39;re any different in the end, and I&#39;m not sure I want to take the time. GHC does attempt to optimize division by powers of two, although it is otherwise very stupid about division."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1425515117, "last_edit_date": 1425515117, "creation_date": 1425514326, "answer_id": 28867657, "question_id": 28867353, "link": "https://stackoverflow.com/questions/28867353/how-to-deal-with-types-in-haskell/28867657#28867657", "title": "How to deal with types in Haskell", "body": "<p>Haskell never, <em>ever</em> does implict type conversions. That may seem rather obdurate to most programmers, but actually it is one of the reasons why Haskell's type system works so great. Completely shunning conversions makes many things much simpler, and it's pretty prerequisite for full bidirectional type inference.</p>\n\n<p>In your case, the problem is in <code>x / 4</code>. A division, and you seem expect the result to be possibly noninteger. But it <em>must</em> be integer, as long as it has an integral type<sup>1</sup>! So you need to explicitly convert to a fractional type<sup>2</sup> first. The simplest way is indeed the <code>fromIntegral</code> function you've already discovered:</p>\n\n<pre><code>   if isWhole $ fromIntegral x / 4 then ...\n</code></pre>\n\n<p>To make it clear: that's parsed as <code>if isWhole ( (fromIntegral x)/4 ) then</code>. At this point you may wonder: if I just said Haskell never implicitly converts stuff, then why is it fine to divide by the integer literal <code>4</code>? The answer to that is, Haskell doesn't have integer literals! It only has various <em>numeric literals</em>. A whole-number literal doesn't have any particular type, it is polymorphic (i.e., it requests from the context <em>what type is expected here</em>, and than behaves as that type &ndash; provided that the type is in the <code>Num</code> class).</p>\n\n<hr>\n\n<p><sup>1</sup><sub>C &ldquo;solves&rdquo; this problem by making integer division trucate the result... which leads to a load of problems, probably more than you'd get with implicit conversion.</sub></p>\n\n<p><sup>2</sup><sub>&ldquo;Some fractional type&rdquo; means, in Haskell, it'll default to <code>Double</code>. That type is very fast, but it's also not entirely unproblematic because floating-point numbers are inherently inexact. I'm not sure right now if this would be a problem in your application; because of the <code>==</code> comparison it might well be. Basically, you need to specify the type of <code>isWhole</code> to prevent that, as <code>isWhole :: Rational -&gt; Bool</code>. The <code>Rational</code> type represents noninteger numbers as exact fractions.</sub></p>\n"}, {"comments": [{"owner": {"reputation": 31, "user_id": 905250, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40e15162d5f9bd4f753257400c843f57?s=128&d=identicon&r=PG", "display_name": "habibalamin", "link": "https://stackoverflow.com/users/905250/habibalamin"}, "edited": false, "score": 0, "creation_date": 1425584530, "post_id": 28868297, "comment_id": 46033851, "body": "I knew about <code>mod</code> and <code>div</code> and I don&#39;t know why I didn&#39;t go down that path sooner.  The line <code>if isWhole (x &#47; 4) then</code> was originally <code>if isWhole x then</code>, which is why it was less obvious (I was still working on the problem while asking the question, haha).  I still don&#39;t think I understand however, why my original solution didn&#39;t work anyway. AFAICS, <code>isWhole</code> works fine and\u2026 never mind, I&#39;m an idiot."}, {"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "reply_to_user": {"reputation": 31, "user_id": 905250, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40e15162d5f9bd4f753257400c843f57?s=128&d=identicon&r=PG", "display_name": "habibalamin", "link": "https://stackoverflow.com/users/905250/habibalamin"}, "edited": false, "score": 0, "creation_date": 1426051846, "post_id": 28868297, "comment_id": 46208757, "body": "I think the first sentence of my answer is the bit you weren&#39;t getting."}], "tags": [], "owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "is_accepted": true, "score": 5, "last_activity_date": 1425518091, "creation_date": 1425518091, "answer_id": 28868297, "question_id": 28867353, "link": "https://stackoverflow.com/questions/28867353/how-to-deal-with-types-in-haskell/28868297#28868297", "title": "How to deal with types in Haskell", "body": "<p>In Haskell the <code>/</code> operator is for fractional types not integral ones. For integral types you should use <code>div</code> (you can use it infix by surrounding it in backticks). You can also use <code>mod</code> or <code>rem</code> to find the remainder, like <code>%</code> in typical languages (they are different for negative numbers)</p>\n\n<pre><code>isPowerOf4 :: Integral n =&gt; n -&gt; Bool\nisPowerOf4 4 = True\nisPowerOf4 x = if x &lt; 4\n  then False\n  else\n    if x `mod` 4 == 0\n      then isPowerOf4 (x `div` 4)\n      else False\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1251, "user_id": 3973371, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb6b82669e037ed73e47d6532ef2c246?s=128&d=identicon&r=PG&f=1", "display_name": "bmaderbacher", "link": "https://stackoverflow.com/users/3973371/bmaderbacher"}, "edited": false, "score": 0, "creation_date": 1425518464, "post_id": 28868327, "comment_id": 46001041, "body": "It seems @JeremyList beaten me and posted his answer will I was still writing :)"}], "tags": [], "owner": {"reputation": 1251, "user_id": 3973371, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb6b82669e037ed73e47d6532ef2c246?s=128&d=identicon&r=PG&f=1", "display_name": "bmaderbacher", "link": "https://stackoverflow.com/users/3973371/bmaderbacher"}, "is_accepted": false, "score": 4, "last_activity_date": 1425569146, "last_edit_date": 1425569146, "creation_date": 1425518328, "answer_id": 28868327, "question_id": 28867353, "link": "https://stackoverflow.com/questions/28867353/how-to-deal-with-types-in-haskell/28868327#28868327", "title": "How to deal with types in Haskell", "body": "<p>As @leftaroundabout explained <code>/</code> is floating point division and the results may be object to rounding error. Therefore your is <code>isWhole</code> function is not guarantied to work correctly in all cases.</p>\n\n<p>A better approach would be to use integer division and modulo, as suggested by @Jubobs.</p>\n\n<p><code>div</code> is integer division it gives you the result of a division with out the remainder. That's the same as you expect from <code>truncate (x / 4)</code>. This should be rewritten as <code>div x 4</code>, so it's not relying on floating point numbers.</p>\n\n<p>For <code>isWhole</code> you can use modulo this is the rest of an integer division. (e.g. <code>mod 5 4 == 1</code>) If it is zero there is no remainder, the result is a whole number. Instead of <code>isWhole (x / 4)</code> you can use <code>mod x 4 == 0</code>. Both <code>div</code> and <code>mod</code> work exact so there is not danger of rounding errors.</p>\n"}], "owner": {"reputation": 31, "user_id": 905250, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40e15162d5f9bd4f753257400c843f57?s=128&d=identicon&r=PG", "display_name": "habibalamin", "link": "https://stackoverflow.com/users/905250/habibalamin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 193, "favorite_count": 0, "accepted_answer_id": 28868297, "answer_count": 3, "score": 1, "last_activity_date": 1425569146, "creation_date": 1425512808, "question_id": 28867353, "link": "https://stackoverflow.com/questions/28867353/how-to-deal-with-types-in-haskell", "title": "How to deal with types in Haskell", "body": "<p>I've started learning Haskell and I've been reading \"Learn You a Haskell for Great Good\". I read up to halfway through the Modules chapter. A friend showed me codewars and I decided to put some of what I've learnt to the test.</p>\n\n<p>I am trying to make a function which returns a Boolean of whether the given Integral is a power of 4. Here is the code.</p>\n\n<pre><code>module PowerOfFour where\n\nisWhole n = fromIntegral (round n) == n\n\nisPowerOf4 :: Integral n =&gt; n -&gt; Bool\nisPowerOf4 4 = True\nisPowerOf4 x = if x &lt; 4 then\n    False\nelse\n    if isWhole (x / 4) then\n    isPowerOf4 (truncate (x / 4))\n  else\n    False\n</code></pre>\n\n<p>This is the error message I get.</p>\n\n<pre><code>/tmp/haskell11524-8-kke52v/PowerOfFour.hs:10:12:\n    Could not deduce (RealFrac n) arising from a use of `isWhole'\n    from the context (Integral n)\n      bound by the type signature for\n                 isPowerOf4 :: Integral n =&gt; n -&gt; Bool\n      at /tmp/haskell11524-8-kke52v/PowerOfFour.hs:5:15-37\n    Possible fix:\n      add (RealFrac n) to the context of\n        the type signature for isPowerOf4 :: Integral n =&gt; n -&gt; Bool\n    In the expression: isWhole (x / 4)\n    In the expression:\n      if isWhole (x / 4) then isPowerOf4 (truncate (x / 4)) else False\n    In the expression:\n      if x &lt; 4 then\n          False\n      else\n          if isWhole (x / 4) then isPowerOf4 (truncate (x / 4)) else False\n\n/tmp/haskell11524-8-kke52v/PowerOfFour.hs:10:23:\n    Could not deduce (Fractional n) arising from a use of `/'\n    from the context (Integral n)\n      bound by the type signature for\n                 isPowerOf4 :: Integral n =&gt; n -&gt; Bool\n      at /tmp/haskell11524-8-kke52v/PowerOfFour.hs:5:15-37\n    Possible fix:\n      add (Fractional n) to the context of\n        the type signature for isPowerOf4 :: Integral n =&gt; n -&gt; Bool\n    In the first argument of `isWhole', namely `(x / 4)'\n    In the expression: isWhole (x / 4)\n    In the expression:\n      if isWhole (x / 4) then isPowerOf4 (truncate (x / 4)) else False\n</code></pre>\n\n<p>What am I doing wrong?</p>\n\n<p>I used fromIntegral in isWhole to fix a similar error and isWhole now works fine individually. However, I can't seem to get rid of these errors in isPowerOf4. I've tried the possible fixes GHC provides, but I probably wasn't doing it right.</p>\n\n<p>I'd rather keep the type signature of the isPowerOf4 function, as that is provided by codewars, so I'm guessing it's a requirement.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425506606, "post_id": 28865771, "comment_id": 45996759, "body": "ABC is a datatype. This particular datatype is written using the GADT (Generalized algebraic datatype) syntax - this is sort of unusual, and normally you would write it as <code>data ABC = Empty | Single Char</code>. Hopefully the meaning of this latter form is clearer - if not, you should take a look at a introductory <a href=\"http://learnyouahaskell.com/\" rel=\"nofollow noreferrer\">Haskell tutorial</a>."}, {"owner": {"reputation": 1125, "user_id": 777085, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5112855aef89ec6bf599252fbae5eca7?s=128&d=identicon&r=PG", "display_name": "xcoder", "link": "https://stackoverflow.com/users/777085/xcoder"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425507534, "post_id": 28865771, "comment_id": 45997246, "body": "@user2407038 thx a lot for your reply.I know the basic syntax of Haskell, but I just don&#39;t understand what does it mean by &quot;write a ABC representing something&quot;?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425507767, "post_id": 28865771, "comment_id": 45997370, "body": "The interpretation of a datatype - what a datatype &quot;represents&quot; - is not baked into the language, but rather it comes from the model. For example, a linked list can <i>represent</i> a stack. But you wouldn&#39;t refer to a list as a stack unless you were using it as one. <code>ABC</code> is isomorphic to <code>Maybe Char</code> but that is about all that can be said without knowing anything about the problem being modeled. In general, when you say &quot;write a datatype representing ...&quot;, you mean translate your model into concrete Haskell (or any other language) syntax."}, {"owner": {"reputation": 1125, "user_id": 777085, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5112855aef89ec6bf599252fbae5eca7?s=128&d=identicon&r=PG", "display_name": "xcoder", "link": "https://stackoverflow.com/users/777085/xcoder"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425508096, "post_id": 28865771, "comment_id": 45997525, "body": "Can you point me to some resources or direction...I am so stuck...dont even know where to start when all this data, type things appear..."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425508144, "post_id": 28865771, "comment_id": 45997550, "body": "@user2407038, one could argue that a strict purely functional list (i.e., <code>data List a = Nil | Cons a !(List a)</code>) <i>is</i> a stack, because it supports precisely the stack operations and nothing more."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425508220, "post_id": 28865771, "comment_id": 45997579, "body": "@xcoder, do you have any prior programming experience?"}, {"owner": {"reputation": 1125, "user_id": 777085, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5112855aef89ec6bf599252fbae5eca7?s=128&d=identicon&r=PG", "display_name": "xcoder", "link": "https://stackoverflow.com/users/777085/xcoder"}, "edited": false, "score": 0, "creation_date": 1425508234, "post_id": 28865771, "comment_id": 45997590, "body": "Yes, I know Java. And I can actually write functions in Haskell. But now my problem is like, I don;t know what I should achieve..."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425508291, "post_id": 28865771, "comment_id": 45997617, "body": "@xcoder, okay, so pretend <code>ABC</code> is a Java class, and find a way to represent something using it?"}, {"owner": {"reputation": 1125, "user_id": 777085, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5112855aef89ec6bf599252fbae5eca7?s=128&d=identicon&r=PG", "display_name": "xcoder", "link": "https://stackoverflow.com/users/777085/xcoder"}, "edited": false, "score": 0, "creation_date": 1425508313, "post_id": 28865771, "comment_id": 45997634, "body": "um...that might be the problem I am having...&quot;find a way to represent something using it&quot;, I don&#39;t quite get the question...I mean, isn;t ABC already a representation of something? It&#39;s an object."}, {"owner": {"reputation": 1125, "user_id": 777085, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5112855aef89ec6bf599252fbae5eca7?s=128&d=identicon&r=PG", "display_name": "xcoder", "link": "https://stackoverflow.com/users/777085/xcoder"}, "edited": false, "score": 0, "creation_date": 1425508598, "post_id": 28865771, "comment_id": 45997772, "body": "Or do you mean, a parent class called Shape. And a child class called Circle that extends Shape?"}], "answers": [{"tags": [], "owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "is_accepted": true, "score": 2, "last_activity_date": 1425514277, "creation_date": 1425514277, "answer_id": 28867643, "question_id": 28865771, "link": "https://stackoverflow.com/questions/28865771/haskell-define-a-datatype/28867643#28867643", "title": "Haskell define a datatype", "body": "<p>This syntax is identical to the standard datatype syntax in Haskell. In particular, the type <code>ABC</code> is the same as</p>\n\n<pre><code>data ABC = Empty | Single Char\n</code></pre>\n\n<p>The syntax including the <code>where</code> clause is called \"GADT syntax\" and it offers some extra expressiveness by allowing clear syntax for \"existential types\" and \"type equalities\". Both of these are rather advanced topics, though. Stick with basic types until you get your water legs.</p>\n"}], "owner": {"reputation": 1125, "user_id": 777085, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5112855aef89ec6bf599252fbae5eca7?s=128&d=identicon&r=PG", "display_name": "xcoder", "link": "https://stackoverflow.com/users/777085/xcoder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 28867643, "answer_count": 1, "score": 1, "last_activity_date": 1425514277, "creation_date": 1425506050, "question_id": 28865771, "link": "https://stackoverflow.com/questions/28865771/haskell-define-a-datatype", "title": "Haskell define a datatype", "body": "<p>I am learning Haskell an come across something like the following:</p>\n\n<pre><code>data ABC :: * where\n Empty :: ABC\n Single :: Char -&gt; ABC\n</code></pre>\n\n<p>what does the above mean? And what does it mean when we say \"write a ABC representing something\"?</p>\n"}, {"tags": ["haskell", "type-constraints", "vinyl"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425507565, "post_id": 28865644, "comment_id": 45997265, "body": "What is wrong with the inferred type - which is precisely <code>Content \u2208 fs =&gt; Rec Attr fs -&gt; LanguageContent</code>? This type is much more descriptive than <code>HasContent a =&gt; a -&gt; LanguageContent</code>. If you really want the latter, define a class <code>class HasContent a where getContent :: a -&gt; LanguageContent</code> and an instance <code>instance (Content \u2208 rs) =&gt; HasContent (Rec Attr rs) where ...</code>. If you plan to have other instances, this approach has merit, but if this is the only instance, just use the function as-is."}, {"owner": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425512477, "post_id": 28865644, "comment_id": 45999184, "body": "There are quite a few functions which all have the same constraint, and I don&#39;t want to repeat it everywhere."}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425859856, "post_id": 28865644, "comment_id": 46122651, "body": "It&#39;s not strictly proper to integrate answers into the question. If you want to include bits from the answers @user2407038 and I provided, please explain what you&#39;re doing in the answer so that the conversation doesn&#39;t become confusing."}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "edited": false, "score": 0, "creation_date": 1425860615, "post_id": 28865644, "comment_id": 46122839, "body": "Also, referring to <code>rs</code> in the type <code>(c ~ Rec Attr rs, Content \u2208 rs)</code> as a &quot;phantom parameter&quot; is unhelpful. In fully monomorphic code, <code>rs</code> will be specialized to a specific, concrete, meaningful value representing the fields or rows of the record."}], "answers": [{"comments": [{"owner": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "edited": false, "score": 0, "creation_date": 1425551153, "post_id": 28867943, "comment_id": 46013071, "body": "What are <code>b</code> and <code>a</code> in the definitions of <code>RecWithContent</code>? With or without them, I get this: <a href=\"http://lpaste.net/121586\" rel=\"nofollow noreferrer\">lpaste.net/121586</a>"}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "reply_to_user": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "edited": false, "score": 0, "creation_date": 1425584977, "post_id": 28867943, "comment_id": 46034128, "body": "Sorry, I messed up the type variables; I shouldn&#39;t have included <code>b</code> or <code>a</code>; I&#39;ve edited the answer. The definition in your lpaste, <code>type HasContent = (Content \u2208 rs) =&gt; Rec Attr fs</code>, won&#39;t work because the <code>rs</code> is hidden on the right-hand side of the type synonym; it needs to be exposed in the signature of the overall function to eliminate the ambiguity."}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "reply_to_user": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "edited": false, "score": 0, "creation_date": 1425668877, "post_id": 28867943, "comment_id": 46070980, "body": "To fix the first error, fix the typo in the definition of <code>HasContent</code>. There&#39;s only one type variable. The second error might be something else; your <code>unAttr</code> may be too polymorphic to fix <code>fs0</code> and <code>i0</code>. Does your original <code>getContent :: Content \u2208 fs =&gt; Rec Attr fs -&gt; LanguageContent</code> typecheck? The signatures should be equivalent, unless I&#39;m mistaken."}, {"owner": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "edited": false, "score": 0, "creation_date": 1425680181, "post_id": 28867943, "comment_id": 46076538, "body": "<a href=\"http://lpaste.net/123101\" rel=\"nofollow noreferrer\">lpaste.net/123101</a>. <code>getContent</code> with the constraint specified manually typechecks, as well as the two-parameter typeclass (<code>HasContent a rs</code>, as in the question)."}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "reply_to_user": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "edited": false, "score": 0, "creation_date": 1425860403, "post_id": 28867943, "comment_id": 46122781, "body": "I don&#39;t think there&#39;s enough information in <a href=\"http://lpaste.net/123101\" rel=\"nofollow noreferrer\">123101</a> and your comment to explain the error. Please include a <a href=\"http://stackoverflow.com/help/mcve\">minimum, complete, verifiable example</a> in the question."}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "reply_to_user": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "edited": false, "score": 0, "creation_date": 1426263055, "post_id": 28867943, "comment_id": 46314651, "body": "Hmm. Sorry, then; it looks like my &quot;best&quot; solution doesn&#39;t work. There must be something I&#39;m misunderstanding about the way GHC deals with nested constraints. (It&#39;s not a well-specified corner of the language.) You could ask a follow-up question if you&#39;re interested in that approach."}], "tags": [], "owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "is_accepted": false, "score": 2, "last_activity_date": 1426262814, "last_edit_date": 1426262814, "creation_date": 1425515850, "answer_id": 28867943, "question_id": 28865644, "link": "https://stackoverflow.com/questions/28865644/declare-a-constraint-that-holds-for-vinyl-records-having-a-specific-field/28867943#28867943", "title": "Declare a constraint that holds for Vinyl records having a specific field", "body": "<p><em>Edit</em>: <a href=\"https://github.com/koterpillar/vinyl-test/blob/851f03efbb4dea1b95d81a94c84eb92ff342413d/Main.hs#L57\" rel=\"nofollow\">@Koterpillar's test file</a> seems to demonstrate that this type synonym doesn't work the way I expected; it appears the constraint is not available inside the definition. It'd be worth investigation or a follow-up question to determine why. It had been my understanding that <code>(C x =&gt; T x) -&gt; Y</code> was equivalent to <code>C x =&gt; T x -&gt; Y</code>, but the fact that the example doesn't work seems to belie that. <em>/Edit</em></p>\n\n<p>I think you want to write this instead:</p>\n\n<pre><code>type RecWithContent rs = Content \u2208 rs =&gt; Rec Attrs rs\n\ngetContent' :: RecWithContent rs -&gt; LanguageContent\n</code></pre>\n\n<p>This is really just wrapping up the constraint in a type synonym. You need <code>RankNTypes</code> and probably a bunch of other extensions.</p>\n\n<p>Your existing attempts to solve the problem and leave just <code>a</code> on the right hand side of the <code>=&gt;</code> boil down to this type synonym:</p>\n\n<pre><code>type HasContent c = (Content \u2208 fs, c ~ Rec Attr fs)\n</code></pre>\n\n<p>In other words, you want <code>HasContent</code> to witness two separate things: that <code>Content</code> is in <code>fs</code>, and that the type parameter <code>c</code> is equal to <code>Rec Attr fs</code>.</p>\n\n<p>I don't think you can do this in a way that's convenient for you. With the type synonym, the surface-level problem is that <code>rs</code> is not in scope on the right hand side. The deeper issue is that you're asking the compiler to make up <code>fs</code>; you want to write something like <code>exists fs. (Content \u2208 fs, c ~ Rec Attr fs)</code>, which is not expressible directly in current Haskell.</p>\n\n<p>Your type family solution won't help, but for a different reason. In the definition of <code>getContent</code>, the compiler needs proof that <code>a</code> really is <code>Rec Attr rs0</code> in order to use <code>rlens</code> (or probably <code>unAttr</code>), but it can't deduce that from the type family. (You know that there's only one type instance, but the compiler doesn't use that logic.)</p>\n"}], "owner": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1426262814, "creation_date": 1425505571, "last_edit_date": 1426153739, "question_id": 28865644, "link": "https://stackoverflow.com/questions/28865644/declare-a-constraint-that-holds-for-vinyl-records-having-a-specific-field", "title": "Declare a constraint that holds for Vinyl records having a specific field", "body": "<p>I use <a href=\"https://github.com/VinylRecords/Vinyl/\" rel=\"nofollow\">vinyl</a> to declare a number of different record types, some of which have a field called <code>Content</code> with a specific type <code>LanguageContent</code>. For the functions that depend on the field being present in the record, I want to have a type like:</p>\n\n<pre><code>getContent :: HasContent a =&gt; a -&gt; LanguageContent\ngetContent a = a ^. rlens SContent . unAttr\n</code></pre>\n\n<p>(Function given for illustration only; there are many functions taking something that <code>HasContent</code> and doing different things with it.)</p>\n\n<p>Now I just need to declare <code>HasContent</code> as a constraint. The closest I can get using <code>Data.Vinyl.Notation</code> is:</p>\n\n<pre><code>getContent :: (Content \u2208 fs) =&gt; Rec Attr fs -&gt; LanguageContent\n</code></pre>\n\n<p>A type family can be declared but the function does not typecheck:</p>\n\n<pre><code>type family HasContent c :: Constraint\ntype instance HasContent (Rec Attr rs) = Content \u2208 rs\n\ngetContent :: HasContent a =&gt; a -&gt; LanguageContent\ngetContent a = a ^. rlens SContent . unAttr\n\nCould not deduce (a ~ Rec Attr rs0)\nfrom the context (HasContent a)\n</code></pre>\n\n<p>I can make a constraint with two parameters which works but isn't ideal (<code>rs</code> is a parameter that I have to repeat everywhere):</p>\n\n<pre><code>type HasContent c rs = (c ~ Rec Attr rs, Content \u2208 rs)\n</code></pre>\n\n<p>Without the extra parameter (see answer by @ChristianConkle), I just get:</p>\n\n<pre><code>type HasContent c = (c ~ Rec Attr rs, Content \u2208 rs)\n\nNot in scope: type variable \u2018rs\u2019\n</code></pre>\n\n<p>How do I declare a constraint which only holds for such <code>Rec Attr fs</code> that <code>Content \u2208 fs</code>?</p>\n"}, {"tags": ["ios", "haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1425498577, "post_id": 28861976, "comment_id": 45992226, "body": "See also: <a href=\"http://stackoverflow.com/q/12288318/791604\">Read a file line by line</a>."}], "answers": [{"tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": true, "score": 9, "last_activity_date": 1425494236, "creation_date": 1425494236, "answer_id": 28862272, "question_id": 28861976, "link": "https://stackoverflow.com/questions/28861976/reading-file-into-string-haskell/28862272#28862272", "title": "Reading file into string haskell", "body": "<p>There isn't a function that turns an <code>IO String</code> into a <code>String</code>. You can use do notation like so*:</p>\n\n<pre><code>main = do\n  s &lt;- readFile \"somefile.txt\"\n  doSomethingWith s\n\ndoSomethingWith :: String -&gt; IO ()\ndoSomethingWith str = putStrLn str\n</code></pre>\n\n<p>but you will only have access to <code>s</code> as a <code>String</code> inside the do block, or in functions that are applied to <code>s</code>, like <code>doSomethingWith</code>.</p>\n\n<hr>\n\n<p>* You can also use the equivalent <em>desugared</em> version, <code>main = readFile \"someFile.txt\" &gt;&gt;= \\s -&gt; doSomethingWith s</code>.</p>\n"}], "owner": {"reputation": 666, "user_id": 2942659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/1460272084/picture?type=large", "display_name": "Aistis Taraskevicius", "link": "https://stackoverflow.com/users/2942659/aistis-taraskevicius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5156, "favorite_count": 0, "closed_date": 1425498588, "accepted_answer_id": 28862272, "answer_count": 1, "score": 3, "last_activity_date": 1425494236, "creation_date": 1425493311, "question_id": 28861976, "link": "https://stackoverflow.com/questions/28861976/reading-file-into-string-haskell", "closed_reason": "Duplicate", "title": "Reading file into string haskell", "body": "<p>Rather simple problem, but one that I am having trouble to overcome. None of the examples I find online works, not sure if its because they are outdated and something in IO were changed in last 2-3 years, or I a missing something obvious. </p>\n\n<p>I know that reading file with <code>readFile</code> returns <code>IO String</code>  and there is no easy way to get rid of it, but supposedly easy way to read file into normal <code>String</code> is  <code>s&lt;- readFile \"filename\"</code> which works in command line, but I just cant make it work in a function.</p>\n\n<pre><code>getString ::IO String\ngetString = readFile \"Input.txt\"\n</code></pre>\n\n<p>Is rather simple, but returns <code>IO String</code> instead of String, and I am having trouble making  <code>s&lt;- readFile \"filename\"</code> work.\nAll I really want is simple function that returns file in a String and then I can deal with data in that string.</p>\n\n<p>Ps I would love to see simple way to read file line by line function as well, as all examples seems to be incredibly complicated for what they are supposed to do and how easy is to perform those actions in any imperative programming language.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1425523598, "post_id": 28860148, "comment_id": 46002469, "body": "Confuse your reader. <code>result = zipWith ((. fromEnum) . (!!)) (transpose [inputB, inputA]) select</code> (100% not serious)"}], "answers": [{"comments": [{"owner": {"reputation": 10593, "user_id": 4621513, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/uCfJK.png?s=128&g=1", "display_name": "mkrieger1", "link": "https://stackoverflow.com/users/4621513/mkrieger1"}, "edited": false, "score": 0, "creation_date": 1425489382, "post_id": 28860616, "comment_id": 45986852, "body": "The <code>bool</code> function seems to be what I was looking for, however it is not available on my installation for some reason."}, {"owner": {"reputation": 10593, "user_id": 4621513, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/uCfJK.png?s=128&g=1", "display_name": "mkrieger1", "link": "https://stackoverflow.com/users/4621513/mkrieger1"}, "edited": false, "score": 0, "creation_date": 1425489402, "post_id": 28860616, "comment_id": 45986871, "body": "<code>ghc --version</code> gives 7.6.3"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 10593, "user_id": 4621513, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/uCfJK.png?s=128&g=1", "display_name": "mkrieger1", "link": "https://stackoverflow.com/users/4621513/mkrieger1"}, "edited": false, "score": 0, "creation_date": 1425489527, "post_id": 28860616, "comment_id": 45986953, "body": "I&#39;m using GHC 7.8.3 with base 4.7.0.1.   Looks like it was added for base 4.7.  You can obviously define it pretty easily, it&#39;s just a functional form of an <code>if-then-else</code> statement.  <code>bool onFalse onTrue True = onTrue; bool onFalse onTrue False = onFalse</code>."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 10593, "user_id": 4621513, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/uCfJK.png?s=128&g=1", "display_name": "mkrieger1", "link": "https://stackoverflow.com/users/4621513/mkrieger1"}, "edited": false, "score": 0, "creation_date": 1425489582, "post_id": 28860616, "comment_id": 45986988, "body": "@mkrieger1 That&#39;d be the problem, you&#39;ll be using base &lt; 4.7, but you need base &gt;= 4.7.  If you install the latest haskell platform it should have 7.8 and base 4.7."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425491552, "post_id": 28860616, "comment_id": 45988139, "body": "I share your optinion on the order of <code>bool</code>&#39;s arguments. I guess the order was chosen to mimick other catamorphism-producers like <code>foldr</code> and <code>maybe</code>. I wish we also had in the standard libs the flipped versions of such catas, or a classy &quot;convert to Church encoding&quot; function."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425491699, "post_id": 28860616, "comment_id": 45988212, "body": "@chi You&#39;re probably right, I think it&#39;s to be consistent with the <code>maybe</code>, <code>either</code>, etc functions where the failure action is given as the first argument, but it&#39;s still awkward to use in this case."}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 4, "last_activity_date": 1425490231, "last_edit_date": 1425490231, "creation_date": 1425489062, "answer_id": 28860616, "question_id": 28860148, "link": "https://stackoverflow.com/questions/28860148/select-elements-from-two-lists-based-on-elements-of-third-list-in-haskell/28860616#28860616", "title": "Select elements from two lists based on elements of third list in Haskell", "body": "<p>There isn't a built-in function for this that I know of, but you could more easily implement it as</p>\n\n<pre><code>import Data.Bool (bool)\n\n-- I don't like bool's argument order\nif_ :: Bool -&gt; a -&gt; a -&gt; a\nif_ cond a b = bool b a cond\n\n-- If you are using base &lt; 4.7 then Data.Bool.bool\n-- does not exist so you can define if_ manually as\n-- if_ True  a b = a\n-- if_ False a b = b\n\nmapIfElse :: [Bool] -&gt; [a] -&gt; [a] -&gt; [a]\nmapIfElse = zipWith3 if_\n</code></pre>\n\n<p>This would be a more idiomatic implementation in my opinion, since it describes the operation for one set of arguments then applies that operation to the list of arguments.  Again, I don't know of an existing function to do this, but in the future if you want to search for functions of a given type try <a href=\"https://www.fpcomplete.com/hoogle\" rel=\"nofollow\">hoogle</a> first.</p>\n"}], "owner": {"reputation": 10593, "user_id": 4621513, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/uCfJK.png?s=128&g=1", "display_name": "mkrieger1", "link": "https://stackoverflow.com/users/4621513/mkrieger1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 28860616, "answer_count": 1, "score": 1, "last_activity_date": 1425490231, "creation_date": 1425487765, "question_id": 28860148, "link": "https://stackoverflow.com/questions/28860148/select-elements-from-two-lists-based-on-elements-of-third-list-in-haskell", "title": "Select elements from two lists based on elements of third list in Haskell", "body": "<p>I have two lists <code>inputA</code> and <code>inputB</code> containing items of some type and a third list <code>select</code> of <code>Bool</code>s. I want to construct a list where the i-th element is the i-th element of <code>inputA</code> if the i-th element of <code>select</code> is <code>True</code>, or the i-th element of <code>inputB</code> otherwise.</p>\n\n<p>This can be done like this:</p>\n\n<pre><code>result = [if x then a else b | (x, a, b) &lt;- zip3 select inputA inputB]\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>&gt; [if x then a else b | (x,a,b) &lt;- zip3 [True,False,False,True] [10..] [100..]]\n[10,101,102,13]\n</code></pre>\n\n<p>I wonder if there is some built-in function, say <code>mapIfElse</code>, which can be used like this to produce the same result:</p>\n\n<pre><code>result = mapIfElse select inputA inputB\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 23, "last_activity_date": 1425484040, "last_edit_date": 1592644375, "creation_date": 1425482722, "answer_id": 28858218, "question_id": 28858161, "link": "https://stackoverflow.com/questions/28858161/why-doesnt-minus-work-for-operator-sections/28858218#28858218", "title": "Why doesn&#39;t `-` (minus) work for operator sections?", "body": "<p>Use <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Prelude.html#v:subtract\" rel=\"noreferrer\"><code>subtract</code></a>. <code>-</code> is the only operator in Haskell, that occurs both in a prefix <em>and</em> binary infix variant:</p>\n<pre><code>let a = -3     -- prefix  variant\nlet b = (-3)   -- also prefix variant!\nlet c = 4 - 3  -- binary variant\n</code></pre>\n<p>Therefore, you would have to use <code>(subtract 3) 10</code>. See also <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-280003.4\" rel=\"noreferrer\">section 3.4 in the Haskell 2010 report</a> (emphasis mine):</p>\n<blockquote>\n<p>The special form <code>-e</code> denotes prefix negation, the <strong>only prefix operator in Haskell</strong>, and is syntax for <code>negate (e)</code>. The binary <code>-</code> operator does not necessarily refer to the definition of <code>-</code> in the Prelude; it may be rebound by the module system. However, unary <code>-</code> will always refer to the <code>negate</code> function defined in the Prelude. There is no link between the local meaning of the <code>-</code> operator and unary negation.</p>\n<p>Prefix negation has the same precedence as the infix operator <code>-</code> defined in the Prelude (see Table 4.1 ). Because <code>e1-e2</code> parses as an infix application of the binary operator <code>-</code>, one must write <code>e1(-e2)</code> for the alternative parsing. Similarly, <code>(-)</code> is syntax for <code>(\\ x y -&gt; x-y)</code>, as with any infix operator, and does not denote <code>(\\ x -&gt; -x)</code>\u2014 one must use <code>negate</code> for that.</p>\n</blockquote>\n<p>And <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-300003.5\" rel=\"noreferrer\">section 3.5</a> concludes (again, emphasis mine):</p>\n<blockquote>\n<p>Because <code>-</code> is treated specially in the grammar, <code>(- exp)</code> is not a section, but an application of prefix negation, as described in the preceding section. However, <strong>there is a <code>subtract</code> function defined in the Prelude</strong> such that <code>(subtract exp)</code> is equivalent to the disallowed section. The expression <code>(+ (- exp))</code> can serve the same purpose.</p>\n</blockquote>\n"}], "owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3785, "favorite_count": 0, "closed_date": 1425498826, "accepted_answer_id": 28858218, "answer_count": 1, "score": 10, "last_activity_date": 1425484792, "creation_date": 1425482578, "last_edit_date": 1425484792, "question_id": 28858161, "link": "https://stackoverflow.com/questions/28858161/why-doesnt-minus-work-for-operator-sections", "closed_reason": "Duplicate", "title": "Why doesn&#39;t `-` (minus) work for operator sections?", "body": "<p>Based on the position, the partial applications in Haskell gets the correct answer. </p>\n\n<pre><code>Prelude&gt; (/2) 10\n5.0\nPrelude&gt; (2/) 10\n0.2\nPrelude&gt; (+3) 10\n13\nPrelude&gt; (3+) 10\n13\n</code></pre>\n\n<p>However, for - operator, I got an error with <code>(-3)</code> as Haskell (seems to) interprets it as a value <code>-3</code> not partial application.</p>\n\n<pre><code>Prelude&gt; (-3) 10\n\n&lt;interactive&gt;:4:1:\n    Could not deduce (Num (a0 -&gt; t))\n      arising from the ambiguity check for \u2018it\u2019\n    from the context (Num (a -&gt; t), Num a)\n      bound by the inferred type for \u2018it\u2019: (Num (a -&gt; t), Num a) =&gt; t\n      at &lt;interactive&gt;:4:1-7\n    The type variable \u2018a0\u2019 is ambiguous\n    When checking that \u2018it\u2019\n      has the inferred type \u2018forall a t. (Num (a -&gt; t), Num a) =&gt; t\u2019\n    Probable cause: the inferred type is ambiguous\n</code></pre>\n\n<p>How to solve this issue to get <code>7</code> in this example?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 7, "creation_date": 1425481910, "post_id": 28857745, "comment_id": 45981667, "body": "Looks like a perfect candidate for <code>ErrorT</code>, <code>EitherT</code> or some other error monad transformer."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 3, "creation_date": 1425487414, "post_id": 28857745, "comment_id": 45985595, "body": "You can <i>almost</i> do this directly using the <code>Monad</code> instance for <code>Either</code>. Unfortunately, <code>evalSQL</code> kind of messes that up. So it looks like you&#39;ll need <code>EitherT</code> or something..."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1425932274, "post_id": 28857745, "comment_id": 46155805, "body": "It&#39;s also difficult because the Either monad instances used are different in each case. The first Either monad instance is <code>Either ParseError</code> and the second is <code>Either EvalError</code>."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1425500387, "creation_date": 1425500387, "answer_id": 28864107, "question_id": 28857745, "link": "https://stackoverflow.com/questions/28857745/how-to-remove-case-of-from-this-code/28864107#28864107", "title": "How to remove `case of` from this code?", "body": "<p>For the moment, let's assume you've generalized your <code>parseSQL</code> and <code>evalSQL</code> functions to have these types (later we'll see how to turn your specialized implementations into generalized ones even if you don't have access to their source):</p>\n\n<pre><code>parseSQL :: MonadError ParseError m =&gt; String -&gt; m SQL\nevalSQL :: (MonadError EvalError m, MonadIO m) =&gt; SQL -&gt; m Table\n</code></pre>\n\n<p>Then we can write:</p>\n\n<pre><code>-- if we were really doing this the mtl way, we'd introduce a new\n-- type class for changing error types instead of specializing to\n-- ExceptT, but that's another answer\nevalAndThrow :: String -&gt; ExceptT String IO ()\nevalAndThrow s = do\n    sql   &lt;- withExceptT show (parseSQL s)\n    table &lt;- withExceptT show (evalSQL sql)\n    liftIO $ prettyPrintTable table\n    liftIO . putStrLn $ \"(\" ++ show (length table) ++ \" lines)\\n\"\n</code></pre>\n\n<p>The top-level function can then be something like</p>\n\n<pre><code>evalAndPrint s = do\n    v &lt;- runExceptT (evalAndThrow s)\n    case v of\n        Left err -&gt; putStrLn err\n        Right _  -&gt; return ()\n</code></pre>\n\n<p>Here are some tricks for converting your existing functions into the mtl-style polymorphic versions. Either you can change their source directly, or you can make adapters using combinators like these:</p>\n\n<pre><code>-- this is a generally useful combinator\nliftEither :: MonadError e m =&gt; Either e a -&gt; m a\nliftEither = either throwError return\n\n-- this is a combinator specific to your question\nliftIOEither :: (MonadError e m, MonadIO m) =&gt; IO (Either e a) -&gt; m a\nliftIOEither = join . liftIO . liftM liftEither\n</code></pre>\n\n<p>And of course there is also <code>ExceptT :: IO (Either e a) -&gt; ExceptT e IO a</code>; <code>ExceptT . evalSQL</code> is not quite as polymorphic as <code>liftIOEither . evalSQL</code>, but since we're using it at the <code>ExceptT</code> type it may not matter in this case.</p>\n"}], "owner": {"reputation": 2389, "user_id": 2345370, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/7f2ad519f77a20c173a0b5174a900c2d?s=128&d=identicon&r=PG", "display_name": "Not an ID", "link": "https://stackoverflow.com/users/2345370/not-an-id"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1425500387, "creation_date": 1425481406, "last_edit_date": 1425491057, "question_id": 28857745, "link": "https://stackoverflow.com/questions/28857745/how-to-remove-case-of-from-this-code", "title": "How to remove `case of` from this code?", "body": "<p>How do I rewrite the following code, so that it:</p>\n\n<ol>\n<li>uses less characters</li>\n<li>contains at most one <code>case ... of ...</code></li>\n</ol>\n\n\n\n<pre><code>-- parseSQL :: String -&gt; Either ParseError SQL\n-- evalSQL :: SQL -&gt; IO (Either EvalError Table)\n-- prettyPrintTable :: Table -&gt; IO ()\n-- ParseError, EvalError and Table are instances of Show\n\nevalAndPrint :: String -&gt; IO ()\nevalAndPrint x =\n    case parseSQL x of\n      (Left parseErr) -&gt;\n        print parseErr\n      (Right sql) -&gt; do\n        result &lt;- evalSQL sql\n        case result of\n          (Left err) -&gt;\n            print err\n          (Right table) -&gt; do\n            prettyPrintTable table\n            putStrLn $ \"(\" ++ show (length table) ++ \" lines)\\n\"\n</code></pre>\n"}, {"tags": ["haskell", "testing", "cabal"], "answers": [{"tags": [], "owner": {"reputation": 292, "user_id": 1387400, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/715a4acd57bf3ae282c0c4e0b725df74?s=128&d=identicon&r=PG", "display_name": "user21338", "link": "https://stackoverflow.com/users/1387400/user21338"}, "is_accepted": true, "score": 3, "last_activity_date": 1441301895, "creation_date": 1441301895, "answer_id": 32382140, "question_id": 28857275, "link": "https://stackoverflow.com/questions/28857275/cabal-test-fails-to-link-its-own-objects/32382140#32382140", "title": "cabal test fails to link its own objects", "body": "<p>Today I stumbled on the same issue. \nI found the following workaround:</p>\n\n<p>Add </p>\n\n<p><code>other-modules:  Syntax.Name</code></p>\n\n<p>to your <code>test-suite</code> declaration.</p>\n"}], "owner": {"reputation": 5412, "user_id": 1626632, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/9a63a74d81c3e3abfb4a1ecb56fd3eff?s=128&d=identicon&r=PG", "display_name": "Helmut Grohne", "link": "https://stackoverflow.com/users/1626632/helmut-grohne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "accepted_answer_id": 32382140, "answer_count": 1, "score": 3, "last_activity_date": 1441301895, "creation_date": 1425480135, "question_id": 28857275, "link": "https://stackoverflow.com/questions/28857275/cabal-test-fails-to-link-its-own-objects", "title": "cabal test fails to link its own objects", "body": "<p>I am trying to add a <code>detailed-0.9</code> test suite to a cabal package that provides an executable. Thus I added:</p>\n\n<pre><code>test-suite igor2-test\n  type: detailed-0.9\n  hs-source-dirs: src\n  test-module: Igor2.Tests\n  build-depends: Cabal\n</code></pre>\n\n<p>There is no library in this package, but the executable uses the same source tree. During <code>cabal test</code> it fails linking:</p>\n\n<pre><code>Preprocessing test suite 'igor2-test' for igor2-0.7.1.3...\n[1 of 5] Compiling Syntax.Name      ( src/Syntax/Name.hs, dist/build/Syntax/Name.o )\n... (more compiling)\n[1 of 5] Compiling Syntax.Name      ( src/Syntax/Name.hs, dist/build/Syntax/Name.p_o )\n... (more compiling)\nIn-place registering igor2-test-0.7.1.3...\n[1 of 1] Compiling Main             ( dist/build/igor2-testStub/igor2-testStub-tmp/igor2-testStub.hs, dist/build/igor2-testStub/igor2-testStub-tmp/Main.o )\nLinking dist/build/igor2-testStub/igor2-testStub ...\n/full/path/to/igor2/dist/build/libigor2-test.a(Tests.o): In function `cd3z_info':\n(.text+0x2d7): undefined reference to `igor2zmtestzm0zi7zi1zi3_SyntaxziName_arrowName3_closure'\n... (more undefined references)\ncollect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>Why is this failing? The function <code>arrowName</code> is defined in the module <code>Syntax.Name</code> and this module is compiled. It is not used in the test module though.</p>\n\n<p>I also tried turning the package into a library and having the test-suite build-depends on the library. The linker error proceeds.</p>\n\n<p>This is the Haskell Platform from OpenSuSE 13.1, GHC 7.8.3 which locks Cabal to 1.18.1.3.</p>\n"}, {"tags": ["haskell", "floating-point", "enumerable"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1425492191, "post_id": 28856516, "comment_id": 45988518, "body": "Floating points <code>[x..y]</code> intervals are IMHO inherently flawed -- there&#39;s no sane way to define them. Having that list all the floats between <code>x</code> and <code>y</code> would be interesting but not very useful in practice (how often would one use that?). Having one-stepped lists as we have now exposes to rounding errors, causing <code>[1.0 .. 100.0]</code> to end with <code>99</code> if <code>1+1+...</code> happens to be <code>100+epsilon</code> due to rounding errors (it does not, but if we replace <code>100</code> with a large enough number..). The &quot;solution&quot; adopted by Haskell considers <code>4.2</code> as <code>4.0+epsilon</code> so that it is included in the list. (<code>epsilon~0.5</code>)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425492517, "post_id": 28856516, "comment_id": 45988725, "body": "@chi: yes, and that last aspect (<code>4.2</code>=<code>4+e</code>) is the problematic part I think. As said in the question, it&#39;s not that bad that it iterates over adding integrals. But one would expect the range to end before (or at) the limit. It would probably have been better that <code>Float</code> would not be an <code>instance</code> of <code>Enum</code>... One can still emulate it with <code>map (\\x -&gt; fromIntegral x + 0.2) [0..4]</code> after all..."}, {"owner": {"reputation": 13141, "user_id": 1834147, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/a0991b9f14a94a126187ac3aa342d3d2?s=128&d=identicon&r=PG", "display_name": "tmyklebu", "link": "https://stackoverflow.com/users/1834147/tmyklebu"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1425493589, "post_id": 28856516, "comment_id": 45989340, "body": "@chi: Listing all floating-point numbers in a range is fairly useful, at least for 32-bit floats.  For instance, you can test a function&#39;s correctness for all floats in some range."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 13141, "user_id": 1834147, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/a0991b9f14a94a126187ac3aa342d3d2?s=128&d=identicon&r=PG", "display_name": "tmyklebu", "link": "https://stackoverflow.com/users/1834147/tmyklebu"}, "edited": false, "score": 0, "creation_date": 1425498331, "post_id": 28856516, "comment_id": 45992101, "body": "@tmyklebu OK, but do you think that would be used so commonly in practice to deserve a special syntax <code>[x..y]</code>? I can see this being available as a library function, instead."}, {"owner": {"reputation": 13141, "user_id": 1834147, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/a0991b9f14a94a126187ac3aa342d3d2?s=128&d=identicon&r=PG", "display_name": "tmyklebu", "link": "https://stackoverflow.com/users/1834147/tmyklebu"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425498530, "post_id": 28856516, "comment_id": 45992203, "body": "@chi: I&#39;m not really a Haskell user and I&#39;m probably not representative of users of anything in specific, so I&#39;d rather not make a statement of that sort.  I do use this quite a bit when I&#39;m doing something fiddly enough that I don&#39;t want to be wrong."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425498589, "post_id": 28856516, "comment_id": 45992236, "body": "@CommuSoft Agreed. However, &quot;iterates over adding integrals&quot; fits badly in the (troublesome) numeric hierarchy of Haskell. Adding can be performed only in the same type (no ints + floats), so you need a conversion somewhere. Further, if <code>x,y::Float</code> how do you choose how many integrals to add for <code>[x..y]</code>? Would you use <code>floor(y-x)</code>? If so, we have rounding issues (<code>[1.0..10.0-eps]</code>). If we use <code>round(y-x)</code> we sometimes get a &quot;too large&quot; element as the <code>4.2</code> before. :-("}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1425499156, "post_id": 28856516, "comment_id": 45992556, "body": "@CommuSoft Don&#39;t get me wrong -- I can see choosing <code>floor(y-x)</code> leading to a useful result (which is at least guaranteed to lie between extremes). The Haskell committee roughly chose <code>round(y-x)</code> instead, probably worrying that <code>[1.0 .. x]</code> where <code>x</code> was evaluating to <code>10.0</code> with some very small error should have exactly <code>10</code> elements."}], "answers": [{"comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1425479409, "post_id": 28856791, "comment_id": 45979899, "body": "I&#39;m indeed familiar with Haskell&#39;s typeclasses and it is indeed reasonable to use a <code>FloatEnum</code> typeclass, although the <code>Enum</code> is used in a lot of utility classes, thus one would expect the design of standard classes to be done extremely careful."}, {"owner": {"reputation": 7189, "user_id": 2898458, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc37a9f235a6fa726c8047459ecf0a3f?s=128&d=identicon&r=PG", "display_name": "randomusername", "link": "https://stackoverflow.com/users/2898458/randomusername"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1425480117, "post_id": 28856791, "comment_id": 45980388, "body": "@CommuSoft I completely agree with that rational, that&#39;s why I encourage you to submit something to one of the mailing lists."}, {"owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "edited": false, "score": 0, "creation_date": 1425487872, "post_id": 28856791, "comment_id": 45985887, "body": "It might be worth mentioning that <code>succ</code> can have a similar-to-identical progeny in a type-theoretic foundation as well in the type theoretic definition of the natural numbers. The latter might be more natural to a system like Haskell."}, {"owner": {"reputation": 7189, "user_id": 2898458, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc37a9f235a6fa726c8047459ecf0a3f?s=128&d=identicon&r=PG", "display_name": "randomusername", "link": "https://stackoverflow.com/users/2898458/randomusername"}, "reply_to_user": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "edited": false, "score": 0, "creation_date": 1425488086, "post_id": 28856791, "comment_id": 45986016, "body": "@J.Abrahamson Possibly, although I am not familiar enough with type-theory to confidently post an answer using it."}], "tags": [], "owner": {"reputation": 7189, "user_id": 2898458, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc37a9f235a6fa726c8047459ecf0a3f?s=128&d=identicon&r=PG", "display_name": "randomusername", "link": "https://stackoverflow.com/users/2898458/randomusername"}, "is_accepted": true, "score": 7, "last_activity_date": 1425478773, "creation_date": 1425478773, "answer_id": 28856791, "question_id": 28856516, "link": "https://stackoverflow.com/questions/28856516/rationale-behind-haskells-succ-on-numbers-floats/28856791#28856791", "title": "Rationale behind Haskells `succ` on numbers (floats)", "body": "<p>The origin of the <code>succ</code> function itself actually has nothing to do with the Haskell data types or enumerations, in fact the <code>succ</code> function came first.  The <code>succ</code> function is actually the <strong><em>successor</em></strong> function in the <a href=\"http://en.wikipedia.org/wiki/Axiom_of_infinity\"><strong><em>axiom of infinity</em></strong></a> which allows us to <a href=\"http://en.wikipedia.org/wiki/Set-theoretic_definition_of_natural_numbers\">create numbers in the first place</a>.  It was never designed to be used with floating point/non-natural numbers, that's why you're encountering this problem.</p>\n\n<p>It would probably be a good idea to modify the <code>succ</code> function for floating point types in Haskell, you ought to submit something to the mailing list about it.  Although, Haskell is standardized in the Haskell98 report so don't get your hopes up about changing the language.</p>\n\n<p><strong>Only read the following if you are familiar with Haskell's type classes:</strong> You mention different possible uses of the <code>succ</code> function, this is why it is defined as a function for the <code>Enum</code> type class.  Therefore you can easily rebind it to do something different with a <code>newtype</code>.</p>\n"}], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 326, "favorite_count": 1, "accepted_answer_id": 28856791, "answer_count": 1, "score": 3, "last_activity_date": 1427980489, "creation_date": 1425478007, "last_edit_date": 1427980489, "question_id": 28856516, "link": "https://stackoverflow.com/questions/28856516/rationale-behind-haskells-succ-on-numbers-floats", "title": "Rationale behind Haskells `succ` on numbers (floats)", "body": "<p>I was a bit surprised to learn that Haskell defines its <code>succ</code> function on numbers as adding one:</p>\n\n<blockquote>\n  <p><code>succ :: a -&gt; a</code><br>\n  The successor of a value. For numeric types, succ adds <strong>1</strong>.</p>\n</blockquote>\n\n<p>Although for integral values, this seems reasonable there are a few problems:</p>\n\n<ul>\n<li>what if you define a numeric system that can only represent even/odd/prime/... numbers, in other words a dedicated type that is a subset of integral numbers;</li>\n<li>if you define some kind of \"fixed-point number\" that represents half and full numbers, in that case not all numbers are enumerated; and</li>\n<li>the problem is most severe for <strong>floating point numbers</strong>.</li>\n</ul>\n\n<p>First of all, it means that <code>[2.0 :: Float .. 3.0 :: Float]</code> (used <code>:: Float</code> to make sure the call is not ambiguous) only contains integral values added to the original value, whereas if one uses this expression he/she might expect the list will include all floating points between the two values; of course this argument is more about what one prefers. Most programmers don't have much problems with this aspect.</p>\n\n<p>More severely, if one uses the expression <code>[2.2 :: Float .. 4.0 :: Float]</code> it results in <code>[2.2,3.2,4.2]</code> what is <strong><code>4.2</code></strong> doing here?</p>\n\n<p>If one uses a floating point number where <code>+1</code> cannot generate a different number (because the mantissa doesn't have enough bits to represent one anymore), it will loop infinitely. For instance:</p>\n\n<pre><code>Prelude&gt; [1e37 :: Float .. 1e37 :: Float]\n[1.0e37,1.0e37,1.0e37,1.0e37,1.0e37,1^C.0e37,Interrupted.\nPrelude&gt; [1e37 :: Float .. 1e37-1 :: Float]\n[1.0e37,1.0e37,1.0e37,1.0e37,1.0e37,1^C.0e37,Interrupted.\nPrelude&gt; [1e37 :: Float .. 1e37+1 :: Float]\n[1.0e37,1.0e37,1.0e37,1.0e37,1.0e37,1^C.0e37,Interrupted.\nPrelude&gt; [1e37 :: Float .. pred 1e37 :: Float]\n[1.0e37,1.0e37,1.0e37,1.0e37,1.0e37,1^C.0e37,Interrupted.\n</code></pre>\n\n<p>One thus generates an infinite amount of values, even if the list ought to be empty or contain a few elements.</p>\n\n<p>Part of the arguments are indeed a bit nitpicking, but at least for some, it is reasonable to assume that a Haskell programmer will eventually make mistakes.</p>\n\n<p>Wouldn't a more reasonable approach have been to generate the next representable floating point number?</p>\n\n<p>What were the arguments to define <code>succ</code> in such way? Is it reasonable that <code>Float</code> is an instance of <code>Enum</code>?</p>\n"}, {"tags": ["haskell", "lazy-evaluation"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425492591, "post_id": 28856308, "comment_id": 45988767, "body": "Nice example. Type inference can be surprisingly smart, at the beginning."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425501163, "post_id": 28856308, "comment_id": 45993733, "body": "Actually, the type to be used is ambiguous here. It only works due to GHC &quot;magic&quot; - it defaults the type to <code>readMay :: String -&gt; Maybe Integer</code>. If you turn on warnings, you will see this."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425505887, "post_id": 28856308, "comment_id": 45996370, "body": "@user2407038 I was wondering about that... I assumed it must be defaulting rules."}], "answers": [{"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 3, "last_activity_date": 1425478404, "creation_date": 1425478404, "answer_id": 28856658, "question_id": 28856308, "link": "https://stackoverflow.com/questions/28856308/haskell-how-is-readmay-evaluated/28856658#28856658", "title": "Haskell: how is readMay evaluated?", "body": "<p>If the result type of <code>readMay</code> could not be determined, the code would fail to compile with an \"ambiguous type\" error. It would not evaluate to <code>Nothing</code>.</p>\n\n<p>So why don't you get that error? Haskell can determine the type by looking at the types inside the case statement first. However that does not mean that the inside is evaluated first - it's not, it's only type inferred first. Type checking and inference happens at compile time and is completely separate from evaluation. The order of type inference does not affect the order of evaluation.</p>\n"}, {"comments": [{"owner": {"reputation": 77, "user_id": 2603154, "user_type": "registered", "accept_rate": 67, "profile_image": "https://graph.facebook.com/100001768571641/picture?type=large", "display_name": "Valbrand", "link": "https://stackoverflow.com/users/2603154/valbrand"}, "edited": false, "score": 0, "creation_date": 1425485512, "post_id": 28858553, "comment_id": 45984225, "body": "Thanks. Indeed, this is not very obvious when you just <code>runhaskell source.hs</code> everything."}], "tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": true, "score": 4, "last_activity_date": 1425483594, "creation_date": 1425483594, "answer_id": 28858553, "question_id": 28856308, "link": "https://stackoverflow.com/questions/28856308/haskell-how-is-readmay-evaluated/28858553#28858553", "title": "Haskell: how is readMay evaluated?", "body": "<p>Haskell decides what the types should be at <em>compile-time</em>. Either it figures out what the return type for <code>readMay</code> should be, or it refuses to compile the code due to a type error.</p>\n\n<p>By the time the code runs, Haskell already \"knows\" what type <code>readMay</code> should be returning. If the string actually presented won't parse, you'll get <code>Nothing</code>.</p>\n\n<p>In short, this has <em>nothing to do with</em> lazy evaluation. This is about compile-time verses run-time. [Which may not be that obvious if you're just running this from GHCi.]</p>\n"}], "owner": {"reputation": 77, "user_id": 2603154, "user_type": "registered", "accept_rate": 67, "profile_image": "https://graph.facebook.com/100001768571641/picture?type=large", "display_name": "Valbrand", "link": "https://stackoverflow.com/users/2603154/valbrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 294, "favorite_count": 0, "accepted_answer_id": 28858553, "answer_count": 2, "score": 3, "last_activity_date": 1425483594, "creation_date": 1425477419, "question_id": 28856308, "link": "https://stackoverflow.com/questions/28856308/haskell-how-is-readmay-evaluated", "title": "Haskell: how is readMay evaluated?", "body": "<p>I was looking at a <a href=\"https://www.fpcomplete.com/school/advanced-haskell/functors-applicative-functors-and-monads\" rel=\"nofollow\">tutorial in School of Haskell</a>, when a particular piece of code puzzled me. The snippet below, in my opinion, should not work, but it does. There is something about the evaluation of <code>readMay</code> in this case that I didn't quite understand.</p>\n\n<pre><code>import Safe (readMay)\n\nmain = do\n  putStrLn \"Please enter your birth year\"\n  yearString &lt;- getLine\n  case readMay yearString of\n    Nothing -&gt; putStrLn \"Invalid year\"\n    Just year -&gt; putStrLn $ \"In 2020, you'll be \" ++ show (2020 - year)\n</code></pre>\n\n<p>Shouldn't <code>readMay yearString</code> (<code>:t readMay = Read a =&gt; String -&gt; Maybe a</code>) always evaluate to <code>Nothing</code>, since I am not forcing its type? For this code to work, the resulting expression of the <code>case</code> statement would have to be computed first, since the expression <code>2020 - year</code> would require <code>year</code> to belong to the <code>Num</code> typeclass, thus allowing <code>readMay yearString</code> to evaluate to <code>Just year</code>.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "edited": false, "score": 1, "creation_date": 1425473505, "post_id": 28854992, "comment_id": 45975918, "body": "What if <code>list1 = [(&quot;a&quot;,1),(&quot;a&quot;,2),(&quot;b&quot;,1),(&quot;b&quot;,2)]</code>?"}, {"owner": {"reputation": 23343, "user_id": 1730, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07f21e679da438a4fb2935ee8836b9da?s=128&d=identicon&r=PG", "display_name": "Nicolas", "link": "https://stackoverflow.com/users/1730/nicolas"}, "edited": false, "score": 4, "creation_date": 1425473570, "post_id": 28854992, "comment_id": 45975953, "body": "Good luck and have fun."}, {"owner": {"reputation": 23343, "user_id": 1730, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07f21e679da438a4fb2935ee8836b9da?s=128&d=identicon&r=PG", "display_name": "Nicolas", "link": "https://stackoverflow.com/users/1730/nicolas"}, "edited": false, "score": 0, "creation_date": 1425473623, "post_id": 28854992, "comment_id": 45975987, "body": "Explicit answer: it&#39;s not even a question. And we don&#39;t know where you&#39;re stuck."}, {"owner": {"reputation": 1342, "user_id": 3990158, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c657e26d1552cbe4705fd965d53d2e25?s=128&d=identicon&r=PG&f=1", "display_name": "PHA", "link": "https://stackoverflow.com/users/3990158/pha"}, "reply_to_user": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "edited": false, "score": 0, "creation_date": 1425473798, "post_id": 28854992, "comment_id": 45976084, "body": "@thefourtheye: [(&quot;a&quot;,1),(&quot;a&quot;,2),(&quot;b&quot;,1),(&quot;b&quot;,2)]"}, {"owner": {"reputation": 10320, "user_id": 453616, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f5c35ad8a6275273c50d1274fd549d84?s=128&d=identicon&r=PG", "display_name": "gspr", "link": "https://stackoverflow.com/users/453616/gspr"}, "edited": false, "score": 0, "creation_date": 1425474512, "post_id": 28854992, "comment_id": 45976549, "body": "@PHA: but those don&#39;t have the same first item."}, {"owner": {"reputation": 10320, "user_id": 453616, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f5c35ad8a6275273c50d1274fd549d84?s=128&d=identicon&r=PG", "display_name": "gspr", "link": "https://stackoverflow.com/users/453616/gspr"}, "edited": false, "score": 0, "creation_date": 1425475215, "post_id": 28854992, "comment_id": 45977011, "body": "Aha, now that you&#39;ve edited your question it makes more sense. You want all pairs whose first element is also the first element of at least one other pair?"}, {"owner": {"reputation": 1342, "user_id": 3990158, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c657e26d1552cbe4705fd965d53d2e25?s=128&d=identicon&r=PG&f=1", "display_name": "PHA", "link": "https://stackoverflow.com/users/3990158/pha"}, "reply_to_user": {"reputation": 10320, "user_id": 453616, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f5c35ad8a6275273c50d1274fd549d84?s=128&d=identicon&r=PG", "display_name": "gspr", "link": "https://stackoverflow.com/users/453616/gspr"}, "edited": false, "score": 1, "creation_date": 1425475264, "post_id": 28854992, "comment_id": 45977046, "body": "@gspr I tried to explain better the question. I actually need to find all tuples that with the first item appeared more than once"}, {"owner": {"reputation": 1342, "user_id": 3990158, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c657e26d1552cbe4705fd965d53d2e25?s=128&d=identicon&r=PG&f=1", "display_name": "PHA", "link": "https://stackoverflow.com/users/3990158/pha"}, "reply_to_user": {"reputation": 10320, "user_id": 453616, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f5c35ad8a6275273c50d1274fd549d84?s=128&d=identicon&r=PG", "display_name": "gspr", "link": "https://stackoverflow.com/users/453616/gspr"}, "edited": false, "score": 0, "creation_date": 1425475321, "post_id": 28854992, "comment_id": 45977095, "body": "@gspr yes! thanks..."}, {"owner": {"reputation": 10320, "user_id": 453616, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f5c35ad8a6275273c50d1274fd549d84?s=128&d=identicon&r=PG", "display_name": "gspr", "link": "https://stackoverflow.com/users/453616/gspr"}, "edited": false, "score": 0, "creation_date": 1425475420, "post_id": 28854992, "comment_id": 45977168, "body": "Downvote and vote for close retracted in light of the new information."}, {"owner": {"reputation": 1342, "user_id": 3990158, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c657e26d1552cbe4705fd965d53d2e25?s=128&d=identicon&r=PG&f=1", "display_name": "PHA", "link": "https://stackoverflow.com/users/3990158/pha"}, "reply_to_user": {"reputation": 10320, "user_id": 453616, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f5c35ad8a6275273c50d1274fd549d84?s=128&d=identicon&r=PG", "display_name": "gspr", "link": "https://stackoverflow.com/users/453616/gspr"}, "edited": false, "score": 0, "creation_date": 1425475635, "post_id": 28854992, "comment_id": 45977316, "body": "@gspr updated the question title as well!"}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1425492828, "post_id": 28857487, "comment_id": 45988881, "body": "I&#39;d prefer <code>not . null . drop 2</code> to <code>(&gt;= 2) . length</code> since the latter visits all the list while the former does not go deeper than the 3rd element. (Not that it really matters here -- the original is arguably more readable)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1426688529, "post_id": 28857487, "comment_id": 46475257, "body": "@chi, for list fusion purposes (not relevant here), it&#39;s better to go with something like <code>atLeastLength n xs = foldr go (==0) xs n where {go _ _ 0 = True; go _ c k = c (k-1)}</code>, which unfortunately is the least clear of all."}], "tags": [], "owner": {"reputation": 81337, "user_id": 91757, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/afaf752cb41c3968dbd570c6f6fa0dc3?s=128&d=identicon&r=PG", "display_name": "Frerich Raabe", "link": "https://stackoverflow.com/users/91757/frerich-raabe"}, "is_accepted": false, "score": 5, "last_activity_date": 1425484716, "last_edit_date": 1425484716, "creation_date": 1425480649, "answer_id": 28857487, "question_id": 28854992, "link": "https://stackoverflow.com/questions/28854992/how-do-i-create-a-counting-filter/28857487#28857487", "title": "How do I create a &quot;counting&quot; filter?", "body": "<p>You can first group the tuples by their first element and then concat those groups which have at least two elements. This solution is not O(n^2) but imposes an <code>Ord</code> constraint.</p>\n\n<pre><code>import Data.List (groupBy, sortBy)\nimport Data.Function (on)\nimport Data.Ord (comparing)\n\nsomeFilter :: Ord a =&gt; [(a, b)] -&gt; [(a, b)]\nsomeFilter = concat\n           . filter ((&gt;= 2) . length)\n           . groupBy ((==) `on` fst)\n           . sortBy (comparing fst)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "is_accepted": false, "score": 0, "last_activity_date": 1425501094, "creation_date": 1425501094, "answer_id": 28864306, "question_id": 28854992, "link": "https://stackoverflow.com/questions/28854992/how-do-i-create-a-counting-filter/28864306#28864306", "title": "How do I create a &quot;counting&quot; filter?", "body": "<p>As other answer, already said, you need to group your lists. The obvious candidate is as in Frerich solution to use <code>Data.List.groupBy</code>, however, I often find creating a map is easier (you don't need to sort).</p>\n\n<pre><code>import qualified Data.Map as M\n\nsomeFilter xs = M.keys $ M.filter (&gt;=1) \n                                  (M.fromList (+) [(x,1) | (x,_) &lt;- xs])\n</code></pre>\n"}], "owner": {"reputation": 1342, "user_id": 3990158, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c657e26d1552cbe4705fd965d53d2e25?s=128&d=identicon&r=PG&f=1", "display_name": "PHA", "link": "https://stackoverflow.com/users/3990158/pha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1425501094, "creation_date": 1425473462, "last_edit_date": 1425481596, "question_id": 28854992, "link": "https://stackoverflow.com/questions/28854992/how-do-i-create-a-counting-filter", "title": "How do I create a &quot;counting&quot; filter?", "body": "<p>I have a list of pairs and I need a filter that retains only elements where the first member of the pair occurred at least twice:</p>\n\n<pre><code>someFilter :: Eq a =&gt; [(a, b)] -&gt; [(a, b)]\nsomeFilter   [(\"a\",1),(\"a\",2),(\"b\",1)]\n  `shouldBe` [(\"a\",1),(\"a\",2)]         -- \"a\" occurs in two pairs, retain both\n\nsomeFilter   [(\"a\",1),(\"a\",2),(\"b\",1),(\"b\",2)]\n  `shouldBe` [(\"a\",1),(\"a\",2),(\"b\",1),(\"b\",2)] -- \"a\" and \"b\" occur twice\n\nsomeFilter   [(\"a\",1),(\"b\",2),(\"c\",1),(\"d\",2)]\n  `shouldBe` [] -- no string occurs twice\n</code></pre>\n\n<p>I'm not really sure how one would implement such a filter. The usual <code>filter</code> works only element-wise. How would one write <code>someFilter</code>?</p>\n"}, {"tags": ["haskell", "lazy-io"], "comments": [{"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 1, "creation_date": 1425467619, "post_id": 28852922, "comment_id": 45972413, "body": "One thing that occurs to me is that because of laziness, V1 doesn&#39;t actually call <code>f</code>. Could it be that it errors out in V2 for some lines?"}, {"owner": {"reputation": 2627, "user_id": 215924, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/db83b716acfe0f3a1de6faa176d63fca?s=128&d=identicon&r=PG&f=1", "display_name": "Squidly", "link": "https://stackoverflow.com/users/215924/squidly"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1425467915, "post_id": 28852922, "comment_id": 45972590, "body": "@&#216;rjanJohansen It&#39;s probably not the case, but I&#39;ll improve the example"}], "answers": [{"tags": [], "owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "is_accepted": true, "score": 3, "last_activity_date": 1425470854, "creation_date": 1425470854, "answer_id": 28854102, "question_id": 28852922, "link": "https://stackoverflow.com/questions/28852922/why-is-gnuplot-plot-not-receiving-the-entirety-of-stdin-from-getcontents/28854102#28854102", "title": "Why is gnuplot plot not receiving the entirety of stdin from getContents?", "body": "<p>It's very much depending on a race condition what you'll end up getting, and whether you get a plot at all.</p>\n\n<p>The function <code>plotPathStyle</code> forks a new Haskell thread in which <code>gnuplot</code> is called. This thread makes use of the list you pass, so if the list is obtained via lazy IO, only this thread will actually read the file. The function <code>plotPathStyle</code> returns more or less immediately, and at the end of the main thread, the program will shut down.</p>\n\n<p>So depending on how scheduling occurs, you may see truncated output or no gnuplot window at all. (If I actually compile the program rather than invoke via <code>runhaskell</code>, I usually get no plot whatsoever.) Even forcing the list won't save you from this condition. If you want non-interactive use (i.e., not from within GHCi), it seems that the <code>gnuplot</code> package recommends the interface in <code>Graphics.Gnuplot.Advanced</code>, which gives you more control and e.g. allows you to wait explicitly for the plot to finish.</p>\n"}], "owner": {"reputation": 2627, "user_id": 215924, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/db83b716acfe0f3a1de6faa176d63fca?s=128&d=identicon&r=PG&f=1", "display_name": "Squidly", "link": "https://stackoverflow.com/users/215924/squidly"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 28854102, "answer_count": 1, "score": 3, "last_activity_date": 1425470854, "creation_date": 1425467292, "last_edit_date": 1425468115, "question_id": 28852922, "link": "https://stackoverflow.com/questions/28852922/why-is-gnuplot-plot-not-receiving-the-entirety-of-stdin-from-getcontents", "title": "Why is gnuplot plot not receiving the entirety of stdin from getContents?", "body": "<p>I'm having an issue with lazy IO, but I don't know how to fix it.<br>\nI've got three small test programs here, but with V2 being the thing I actually want.<br>\nSomewhere, it seems that either getContents is being halted early, or gnuplot is finishing writing early. </p>\n\n<p>The crux of the question is 'how can I take stuff from stdin, and plot it with gnuplot here', but I'd also like to know how to debug the underlying problem.</p>\n\n<p>Version 1, no dealing with gnuplot. Run with <code>paste &lt;(seq 10000) &lt;(seq 10000) | runhaskell /tmp/hasktest2.hs</code>, prints out <code>(10000.0,10000.0)</code> as expected. Clearly all of stdin is loaded.</p>\n\n<pre><code>import Data.List\nmain = do\n  contents &lt;- getContents\n  print . last . map f . lines $ contents\n\nf :: String -&gt; (Double, Double)\nf s = (read x, read y)\n  where\n    [x,y] = words s\n</code></pre>\n\n<p>V2: Attempting to plot whatever comes from stdin. This is run the same way as V1 - the temporary file that gnuplot makes gets truncated, so I don't get a plot. However, if I run with with 1000 instead of 10k, it does work - it gets truncated at some point when writing the gnuplot csv file, so I have a line that looks like <code>1767.0, 1767</code> with no <code>\\n</code>.</p>\n\n<pre><code>main = do\n  contents &lt;- getContents\n  plotPathStyle [] (PlotStyle Points (DefaultStyle (1))) . map f . lines $ contents\n\nf :: String -&gt; (Double, Double)\nf s = (read x, read y)\n  where\n    [x,y] = words s\n</code></pre>\n\n<p>V3: Just to test that gnuplot can actually deal with 10k points, and write them to a file - this produces a plot, as expected.</p>\n\n<pre><code>import Graphics.Gnuplot.Simple\n\nmain = plotPathStyle [] (PlotStyle Points (DefaultStyle (1))) (zip [1..10000] [1..10000] :: [(Double, Double)])\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 3385, "user_id": 841562, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/4cbb35380ef84f4f0f68061f578a4e73?s=128&d=identicon&r=PG", "display_name": "Lemming", "link": "https://stackoverflow.com/users/841562/lemming"}, "is_accepted": true, "score": 7, "last_activity_date": 1425467228, "creation_date": 1425467228, "answer_id": 28852895, "question_id": 28852762, "link": "https://stackoverflow.com/questions/28852762/how-to-define-an-enumerating-type-includng-an-already-existing-type-in-haskell/28852895#28852895", "title": "How to define an enumerating type includng an already existing type in Haskell", "body": "<p>What </p>\n\n<pre><code>data Point = Point (Int, Int)\n</code></pre>\n\n<p>does is to define the type <code>Point</code> with one data-constructor <code>Point</code> that takes a tuple of Ints.</p>\n\n<p>I think a better definition of a move would be along the lines of</p>\n\n<pre><code>data Move = Pass | Place Point\n</code></pre>\n\n<p>This creates a type <code>Move</code> with two constructors, one called <code>Pass</code>, and one called <code>Place</code> which takes a point. The second one naturally indicates, that the player places a piece at the given coordinate.</p>\n"}], "owner": {"reputation": 2548, "user_id": 493886, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/609445395685769579dc8fb2dbb83f49?s=128&d=identicon&r=PG", "display_name": "rausch", "link": "https://stackoverflow.com/users/493886/rausch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 28852895, "answer_count": 1, "score": 2, "last_activity_date": 1425467228, "creation_date": 1425466837, "question_id": 28852762, "link": "https://stackoverflow.com/questions/28852762/how-to-define-an-enumerating-type-includng-an-already-existing-type-in-haskell", "title": "How to define an enumerating type includng an already existing type in Haskell", "body": "<p>I'm implementing the game of Go in Haskell. I have a type <code>Point</code>, that specifies a point on the grid:</p>\n\n<pre><code>data Point = Point (Int, Int)\n</code></pre>\n\n<p>I have another type, that represents a game. Among other things it contains <code>moves</code>, which is basically a list of <code>Point</code>s. Now I need to extend the definition of what a move is to also include the possibility for the player to pass, so I tried this:</p>\n\n<pre><code>data Move = Pass | Point (Int, Int)\n</code></pre>\n\n<p>Understandably, the compiler doesn't like this, it complains about <code>Multiple declarations of \u2018Point\u2019</code>. Only defining <code>Point</code> in <code>Move</code> also doesn't seem right, though, since I don't exclusively use <code>Point</code> in the context of a move. Being able to pass in these places would be weird.</p>\n\n<p>I could use Maybe here, but I wanted to be more specific than that. How do I do that?</p>\n"}, {"tags": ["haskell", "pattern-matching"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 5, "creation_date": 1425442203, "post_id": 28846470, "comment_id": 45961467, "body": "It does. You&#39;re doing something wrong. Actual code please, then we may actually say something useful about what you&#39;re doing wrong. If you&#39;re matching on (true,false) in haskell you have to realize <i>that</i> doesn&#39;t work, because true and false are variable names, not literals in haskell."}], "answers": [{"tags": [], "owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "is_accepted": true, "score": 4, "last_activity_date": 1425442736, "last_edit_date": 1425442736, "creation_date": 1425442275, "answer_id": 28846535, "question_id": 28846470, "link": "https://stackoverflow.com/questions/28846470/wild-card-matching-pattern-in-haskell/28846535#28846535", "title": "Wild card matching pattern in Haskell", "body": "<p>Better separate the function definition, like this</p>\n\n<pre><code>imply :: (Bool, Bool) -&gt; Bool\nimply (True, False) = False\nimply _ = True\n</code></pre>\n\n<p>Now, whenever the pattern <code>(True, False)</code> is passed to <code>imply</code>, it will return <code>False</code>, on all other cases it will return <code>True</code>.</p>\n\n<p>Also, what you have actually done is perfectly fine, if you are defining it in interactive shell, better watch out for the indentation errors.</p>\n\n<pre><code>Prelude&gt; :{\nPrelude| let imply v = case v of\nPrelude|              (True, False) -&gt; False\nPrelude|              _ -&gt; True\nPrelude| :}\nPrelude&gt; imply (False, True)\nTrue\nPrelude&gt; imply (True, False)\nFalse\nPrelude&gt; imply (True, True)\nTrue\nPrelude&gt; imply (False, False)\nTrue\n</code></pre>\n"}], "owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2419, "favorite_count": 0, "accepted_answer_id": 28846535, "answer_count": 1, "score": 0, "last_activity_date": 1425443540, "creation_date": 1425441830, "last_edit_date": 1425443540, "question_id": 28846470, "link": "https://stackoverflow.com/questions/28846470/wild-card-matching-pattern-in-haskell", "title": "Wild card matching pattern in Haskell", "body": "<p>OCaml provides wild card matching pattern when every other case fails:</p>\n\n<pre><code>let imply v = match v with \n         (true,false) -&gt; false\n       |   _          -&gt; true;;\n</code></pre>\n\n<p>What's the equivalence in Haskell?</p>\n"}, {"tags": ["haskell", "gtk2hs"], "comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1425433281, "post_id": 28845230, "comment_id": 45959258, "body": "Re: &quot;<code>on</code> needs an associated widget&quot;: The C code seems to use the equivlalent of the <code>Graphics.UI.Gtk.General.Clipboard.Clipboard</code> type as the originating object of the <code>owner-change</code> signal. Maybe your problem was looking for an <code>&quot;owner_changed_event&quot;</code> on <code>Widget</code> insted of <code>Clipboard</code>?"}, {"owner": {"reputation": 257, "user_id": 3379313, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/2a7bd9730dfec795ac612cd98eb0e0a6?s=128&d=identicon&r=PG&f=1", "display_name": "tusj", "link": "https://stackoverflow.com/users/3379313/tusj"}, "reply_to_user": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1425434548, "post_id": 28845230, "comment_id": 45959610, "body": "You are right, <code>on</code> actually takes any object but the constraint imposed is that the event needs to belong to the same object. However, there still isn&#39;t (I cannot find) any Signal with a ClipboardClass constraint (<code>ClipboardClass class =&gt; Signal class callback</code>)."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1425434610, "post_id": 28845230, "comment_id": 45959627, "body": "Right, but you could try adding your new signal to <code>ClipboardClass</code> instead of <code>WidgetClass</code> and see if that works."}, {"owner": {"reputation": 257, "user_id": 3379313, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/2a7bd9730dfec795ac612cd98eb0e0a6?s=128&d=identicon&r=PG&f=1", "display_name": "tusj", "link": "https://stackoverflow.com/users/3379313/tusj"}, "reply_to_user": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1425434863, "post_id": 28845230, "comment_id": 45959672, "body": "I tried, but the signal is construct with a function called eventM which has a <code>WidgetClass</code> constraint. And there&#39;s probably a good reason for that."}], "answers": [{"comments": [{"owner": {"reputation": 257, "user_id": 3379313, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/2a7bd9730dfec795ac612cd98eb0e0a6?s=128&d=identicon&r=PG&f=1", "display_name": "tusj", "link": "https://stackoverflow.com/users/3379313/tusj"}, "edited": false, "score": 0, "creation_date": 1425467116, "post_id": 28848703, "comment_id": 45972146, "body": "Thanks I will look into it. It will require quite some reading though, as I am still both a haskell beginner and new to gtk. So wish me luck!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 1, "last_activity_date": 1425453895, "creation_date": 1425453895, "answer_id": 28848703, "question_id": 28845230, "link": "https://stackoverflow.com/questions/28845230/listening-for-owner-change-events-for-the-clipboard-in-gtk2hs-how-to-set-up/28848703#28848703", "title": "Listening for &quot;owner change&quot; events for the clipboard in gtk2hs. How to set up?", "body": "<p>You're right that this is not implemented at the moment. Adding it shouldn't be too involved, and might be a fun project if you're looking to get into gtk2hs development. You'll want to add a new constructor to the <a href=\"http://hackage.haskell.org/package/gtk-0.13.4/docs/Graphics-UI-Gtk-Gdk-Events.html#t:Event\" rel=\"nofollow\"><code>Event</code></a> type, together with a descriptive type alias like <code>type EventOwnerChange = Event</code>. You will need to extend <a href=\"http://hackage.haskell.org/package/gtk-0.13.4/docs/Graphics-UI-Gtk-Gdk-Events.html#v:marshalEvent\" rel=\"nofollow\"><code>marshalEvent</code></a> to handle this new kind of event, and there may be an unmarshalEvent hanging around though I can't remember.</p>\n\n<p>Once that's all done, it should be pretty easy to connect to the appropriate signal using the <code>connect_*</code> family of functions (which are for gtk2hs internal use only and therefore are not exposed in the API). From the documentation for the <a href=\"https://developer.gnome.org/gtk3/stable/gtk3-Clipboards.html#GtkClipboard-owner-change\" rel=\"nofollow\">owner-change</a> event, you will probably need to use something like <code>Signal (connect_OBJECT__NONE \"owner-change\")</code>.</p>\n\n<p>It may also be necessary to add to the <code>EventMask</code> type, though I'm not confident -- test it out and see.</p>\n"}], "owner": {"reputation": 257, "user_id": 3379313, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/2a7bd9730dfec795ac612cd98eb0e0a6?s=128&d=identicon&r=PG&f=1", "display_name": "tusj", "link": "https://stackoverflow.com/users/3379313/tusj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "accepted_answer_id": 28848703, "answer_count": 1, "score": 1, "last_activity_date": 1425453895, "creation_date": 1425432825, "last_edit_date": 1425434427, "question_id": 28845230, "link": "https://stackoverflow.com/questions/28845230/listening-for-owner-change-events-for-the-clipboard-in-gtk2hs-how-to-set-up", "title": "Listening for &quot;owner change&quot; events for the clipboard in gtk2hs. How to set up?", "body": "<p>Using Gtk2Hs, I want to set up a callback to listen for \"Owner change\" events for the clipboard.</p>\n\n<p>I can find out if this is supported by the X server by querying:</p>\n\n<pre><code>display &lt;- fmap fromJust displayGetDefault\ncanBeNotified &lt;- displayRequestSelectionNotification display selectionPrimary\n</code></pre>\n\n<p>It should be straight forward to do like <a href=\"https://github.com/bstpierre/gtk-examples/blob/master/c/clipboard_watch.c\" rel=\"nofollow\">this</a> in C:</p>\n\n<pre><code>GtkClipboard* clipboard = gtk_clipboard_get(GDK_SELECTION_PRIMARY);\ng_signal_connect(clipboard, \"owner-change\",\nG_CALLBACK(handle_owner_change), NULL);\n</code></pre>\n\n<p>I see that callbacks in Gtk2Hs are set up like this:</p>\n\n<pre><code>&lt;widget&gt; `on` &lt;event&gt; $ &lt;action&gt;\n</code></pre>\n\n<p>Problems</p>\n\n<ul>\n<li><p>I cannot find any <code>OwnerChangeEvent</code>. <a href=\"https://hackage.haskell.org/package/gtk3-0.13.4/docs/Graphics-UI-Gtk-Gdk-EventM.html\" rel=\"nofollow\">Graphics.UI.Gtk.Gdk.EventM</a> does only provide functions of type <code>EventM</code> to query the owner change events.</p></li>\n<li><p><code>on</code> from <a href=\"http://hackage.haskell.org/package/glib-0.11.2/docs/System-Glib-Signals.html\" rel=\"nofollow\">System.Glib.Signals</a> <s>needs an associated widget</s> takes any object and an event associated to that object (<code>on :: object -&gt; Signal object callback -&gt; callback -&gt; IO (ConnectId object</code>). If I have understood X correctly, it should not be necessary to have a window to listen for this event.</p></li>\n</ul>\n\n<p>Either I have misunderstood how to wrap this together, or I have reached upon a yet not implemented part of gtk in Gtk2Hs.</p>\n\n<p>I therefore looked at the definition of <code>keyPressEvent</code> which looks like this:</p>\n\n<pre><code>keyPressEvent :: WidgetClass self =&gt; Signal self (EventM EKey Bool)\nkeyPressEvent = Signal (eventM \"key_press_event\" [KeyPressMask])\n</code></pre>\n\n<p>So, I tested by simply adding a definition for <code>ownerChangeEvent</code> in gtk like <code>keyPressEvent</code>, but subsituted <code>\"key_press_event\"</code> for <code>\"owner_change_event\"</code>.</p>\n\n<p>That did not work as I got a runtime error about not finding the event. Naturally.</p>\n\n<p>Any ideas on how to properly listen for \"owner change\" events in gtk if possible?</p>\n"}, {"tags": ["haskell", "ghci"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425425802, "post_id": 28843673, "comment_id": 45957177, "body": "Although this is essentially unrelated to your problem, <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/data-type-extensions.html#gadt\" rel=\"nofollow noreferrer\">GADTs</a> have nearly become ubiquitous so they are quite well documented."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user997225"}, "edited": false, "score": 0, "creation_date": 1425448264, "post_id": 28843901, "comment_id": 45963017, "body": "Oh dear, as simple as that!  Thanks a lot, that&#39;s fixed it."}], "tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": true, "score": 8, "last_activity_date": 1425424732, "creation_date": 1425424732, "answer_id": 28843901, "question_id": 28843673, "link": "https://stackoverflow.com/questions/28843673/how-can-i-enable-ghc-extensions-in-a-literate-haskell-script/28843901#28843901", "title": "How can I enable GHC extensions in a literate Haskell script?", "body": "<p>Since it is a literate script, you need to escape the pragma like other literate code:</p>\n\n<pre><code>&gt; {-# LANGUAGE KindSignatures, GADTs #-}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>\\begin{code}\n{-# LANGUAGE KindSignatures, GADTs #-}\n\\end{code}\n</code></pre>\n\n<p>dependent on which literate style you are using.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user997225"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 315, "favorite_count": 0, "accepted_answer_id": 28843901, "answer_count": 1, "score": 5, "last_activity_date": 1425436444, "creation_date": 1425423635, "last_edit_date": 1425436444, "question_id": 28843673, "link": "https://stackoverflow.com/questions/28843673/how-can-i-enable-ghc-extensions-in-a-literate-haskell-script", "title": "How can I enable GHC extensions in a literate Haskell script?", "body": "<p>I'm working on a literate Haskell script that defines a Grammar datatype that is to be loaded into GHCI (v. 7.8.3) on my Mac.  I am trying to turn on language extensions called KindSignatures and GADTs in my script (I am completely unfamiliar with these) but I've been advised to include the line</p>\n\n<pre><code>{-# LANGUAGE KindSignatures, GADTs #-}\n</code></pre>\n\n<p>at the top of my script.  But I get an error message:</p>\n\n<pre><code>Grammars.lhs:5:3:\n    Illegal kind signature \u2018Grammar\u2019\n      (Use KindSignatures to allow kind signatures)\n    In the data declaration for \u2018Grammar\u2019\nFailed, modules loaded: none.\n</code></pre>\n\n<p>Could someone please tell me what I'm doing wrong?  Also is there any kind of documentation on KindSignatures or GADTs?  I've been unable to find much.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "edited": false, "score": 0, "creation_date": 1425420186, "post_id": 28842798, "comment_id": 45954729, "body": "Are you getting an error message or something?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425439200, "post_id": 28842798, "comment_id": 45960768, "body": "Can you try to give this question a title that will indicate what the operator is actually supposed to do?"}], "answers": [{"comments": [{"owner": {"reputation": 81, "user_id": 3626828, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b64c3ca16546f15550186e75a7a2418e?s=128&d=identicon&r=PG&f=1", "display_name": "TheReshi", "link": "https://stackoverflow.com/users/3626828/thereshi"}, "edited": false, "score": 0, "creation_date": 1425420755, "post_id": 28842837, "comment_id": 45954992, "body": "Yes, I get that, the problem is that the task is to write the &lt;&lt; operator as (&lt;&lt;) :: Num a =&gt; a -&gt; a -&gt; Bool. The divisors and properDivisors are my creations trying to solve the task.  It seemed the easiest way of solving this but might be wrong."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 81, "user_id": 3626828, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b64c3ca16546f15550186e75a7a2418e?s=128&d=identicon&r=PG&f=1", "display_name": "TheReshi", "link": "https://stackoverflow.com/users/3626828/thereshi"}, "edited": false, "score": 0, "creation_date": 1425421047, "post_id": 28842837, "comment_id": 45955118, "body": "Like I said, you can&#39;t use the built-in <code>div</code> and <code>mod</code> for this if you expect to only have the <code>Num</code> constraint.  You&#39;ll have to write your own <code>div</code> and <code>mod</code> for this purpose.  It&#39;ll be tough to do, since <code>Num</code> does not require <code>Ord</code>, and my first thought for implementing them would be to use subtraction and comparisons to approximate these functions, or to use <code>signum</code>/<code>abs</code> tricks since that would probably require at least <code>Eq</code>."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 81, "user_id": 3626828, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b64c3ca16546f15550186e75a7a2418e?s=128&d=identicon&r=PG&f=1", "display_name": "TheReshi", "link": "https://stackoverflow.com/users/3626828/thereshi"}, "edited": false, "score": 0, "creation_date": 1425421124, "post_id": 28842837, "comment_id": 45955159, "body": "Also be warned that <code>divisors x &lt; properDivisors y</code> is probably not what you&#39;re wanting, but rather <code>length (divisors x) &lt; length (properDivisors y)</code>.  Using <code>&lt;</code> with lists will just do an element-wise comparison until one list runs out of elements."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 2, "creation_date": 1425425468, "post_id": 28842837, "comment_id": 45957033, "body": "I cannot see how making it work with just <code>Num</code> is possible at all - <code>Num</code> has <i>no</i> methods for doing anything other than constructing new numbers. Maybe if the book is so old that it assumes <code>Num</code> is still a subclass of <code>Eq</code> and <code>Show</code>, you could do it in such a way that it works if the type is actually <code>Integer</code>, but it would still be meaningless for many <code>Num</code>s."}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 3, "last_activity_date": 1425420698, "last_edit_date": 1425420698, "creation_date": 1425420255, "answer_id": 28842837, "question_id": 28842798, "link": "https://stackoverflow.com/questions/28842798/haskell-operator-declaration/28842837#28842837", "title": "Haskell operator declaration", "body": "<p>Your <code>&lt;&lt;</code> operator would instead need the type <code>Integral a =&gt; a -&gt; a -&gt; Bool</code>, since both <code>div</code> and <code>mod</code> requires <code>Integral</code>, not just <code>Num</code>.  If you can't use the <code>Integral</code> constraint then you'll have to write your own versions of <code>div</code> and <code>mod</code> that work with all <code>Num</code>s.</p>\n\n<p>This can be seen if you comment out all your type signatures:</p>\n\n<pre><code>&gt; :set +m\n&gt; let divisors a = [n | n &lt;- [1..a], a `mod` n == 0]\n|     properDivisors a = [n | n &lt;- [2..a `div` 2], a `mod` n == 0]\n|     x &lt;&lt; y = divisors x &lt; properDivisors y\ndivisors :: Integral t =&gt; t -&gt; [t]\nproperDivisors :: Integral t =&gt; t -&gt; [t]\n(&lt;&lt;) :: Integral t =&gt; t -&gt; t -&gt; Bool\n</code></pre>\n\n<p>If we inspect the types of the functions used inside <code>divisors</code> and <code>properDivisors</code> we get</p>\n\n<pre><code>&gt; :t mod\nmod :: Integral a =&gt; a -&gt; a -&gt; a\n&gt; :t div\ndiv :: Integral a =&gt; a -&gt; a -&gt; a\n&gt; :t (==)\n(==) :: Eq a =&gt; a -&gt; a -&gt; Bool\n&gt; :i Integral\nclass (Real a, Enum a) =&gt; Integral a where\n    ...\n&gt; :i Real\nclass (Num a, Ord a) =&gt; Real a where\n    ...\n&gt; :i Ord\nclass Eq a =&gt; Ord a where\n    ...\n</code></pre>\n\n<p>(the other constraints have no preconditions) so in order to use <code>mod</code> and <code>div</code> the type has to be <code>Num</code>, <code>Eq</code>, <code>Ord</code>, <code>Enum</code>, <code>Real</code>, and <code>Integral</code>, as this is the typeclass hierarchy set up in Haskell.  The two built-in types that fit these constraints are <code>Int</code> and <code>Integer</code>.  Since <code>Float</code> and <code>Double</code> do not implement <code>Integral</code>, but they do implement <code>Num</code>, there's no way you can use <code>mod</code> or <code>div</code> with just the <code>Num</code> constraint.</p>\n"}], "owner": {"reputation": 81, "user_id": 3626828, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b64c3ca16546f15550186e75a7a2418e?s=128&d=identicon&r=PG&f=1", "display_name": "TheReshi", "link": "https://stackoverflow.com/users/3626828/thereshi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 28842837, "answer_count": 1, "score": 1, "last_activity_date": 1425462508, "creation_date": 1425420125, "last_edit_date": 1425462508, "question_id": 28842798, "link": "https://stackoverflow.com/questions/28842798/haskell-operator-declaration", "title": "Haskell operator declaration", "body": "<p>I'm trying to learn haskell from a book with exercises. I can't get through this one and I don't know what's the problem. So I to declare a &lt;&lt; definition. In the case of 'a' has less divisors than proper divisors 'b' have, it should be true. Like 6 &lt;&lt; 10, 6 have 4 divisors and 10 has 2 proper divisor so it should be False. I have made a definition for divisors and proper divisors, but when I'm trying to use them it just won't happen.</p>\n\n<pre><code>    divisors :: Integer -&gt; [Integer]\n    divisors a = [n | n &lt;- [1..a], a `mod` n == 0]\n\n    properDivisors :: Integer -&gt; [Integer]\n    properDivisors a = [n | n &lt;- [2..a `div` 2], a `mod` n == 0]\n\n    (&lt;&lt;) :: Num a =&gt; a -&gt; a -&gt; Bool\n    x &lt;&lt; y = divisors x &lt; properDivisors y\n</code></pre>\n\n<p>The <code>(&lt;&lt;) :: Num a =&gt; a -&gt; a -&gt; Bool</code> is fixed.</p>\n"}, {"tags": ["haskell", "printing", "show", "free-monad"], "comments": [{"owner": {"reputation": 5013, "user_id": 969617, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/2412de50d273085f5dcf3f2101c3996e?s=128&d=identicon&r=PG", "display_name": "beoliver", "link": "https://stackoverflow.com/users/969617/beoliver"}, "edited": false, "score": 0, "creation_date": 1425419625, "post_id": 28842608, "comment_id": 45954398, "body": "do you need to use <code>instance Free Show of...</code>"}, {"owner": {"reputation": 866, "user_id": 2872507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/49ebde219395d677c399d8e950f5a48c?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Vieth", "link": "https://stackoverflow.com/users/2872507/alexander-vieth"}, "edited": false, "score": 1, "creation_date": 1425419688, "post_id": 28842608, "comment_id": 45954448, "body": "Check out <a href=\"https://wiki.haskell.org/GHC/Stand-alone_deriving_declarations\" rel=\"nofollow noreferrer\">standalone deriving</a>"}], "answers": [{"comments": [{"owner": {"reputation": 11606, "user_id": 1002430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ufy7U.png?s=128&g=1", "display_name": "Ana", "link": "https://stackoverflow.com/users/1002430/ana"}, "edited": false, "score": 1, "creation_date": 1425420299, "post_id": 28842690, "comment_id": 45954769, "body": "Thanks. But I still had errors. Following the error messages I ended up having to enable three extensions, <code>StandaloneDeriving</code>, <code>FlexibleInstances</code>, <code>UndecidableInstances</code>. Is this to be expected?"}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 11606, "user_id": 1002430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ufy7U.png?s=128&g=1", "display_name": "Ana", "link": "https://stackoverflow.com/users/1002430/ana"}, "edited": false, "score": 0, "creation_date": 1425421098, "post_id": 28842690, "comment_id": 45955151, "body": "@Ana: Yeah, that looks right. I just forgot to put those into my answer; I&#39;ll edit them in now."}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 11606, "user_id": 1002430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ufy7U.png?s=128&g=1", "display_name": "Ana", "link": "https://stackoverflow.com/users/1002430/ana"}, "edited": false, "score": 2, "creation_date": 1425421152, "post_id": 28842690, "comment_id": 45955173, "body": "@Ana: Actually, you don&#39;t need <code>FlexibleInstances</code> since you have <code>UndecidableInstances</code>."}], "tags": [], "owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "is_accepted": false, "score": 7, "last_activity_date": 1425421209, "last_edit_date": 1425421209, "creation_date": 1425419700, "answer_id": 28842690, "question_id": 28842608, "link": "https://stackoverflow.com/questions/28842608/how-can-i-make-this-haskell-adt-derive-show/28842690#28842690", "title": "How can I make this Haskell ADT derive Show?", "body": "<p>As the error message hinted, you need to use an extension called <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/deriving.html#stand-alone-deriving\" rel=\"noreferrer\"><code>StandaloneDeriving</code></a>, which lets you specify the constraints on the derived instance explicitly. You also need to enable <code>UndecidableInstances</code> to support the constraint you actually need.</p>\n\n<pre><code>{-# LANGUAGE StandaloneDeriving, UndecidableInstances #-}\n\nderiving instance (Show r, Show (f (Free f r))) =&gt; Show (Free f r)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1425429792, "creation_date": 1425429792, "answer_id": 28844783, "question_id": 28842608, "link": "https://stackoverflow.com/questions/28842608/how-can-i-make-this-haskell-adt-derive-show/28844783#28844783", "title": "How can I make this Haskell ADT derive Show?", "body": "<p>A possible alternative approach that avoids <code>UndecidableInstances</code>, but that is less widely applicable, is to use the <code>Show1</code> class from <a href=\"https://hackage.haskell.org/package/prelude-extras/docs/Prelude-Extras.html\" rel=\"nofollow\">prelude-extras</a>. This gives you a nice <code>(Show1 f, Show r)</code> constraint, but leaves you to write your own (simple) instance.</p>\n"}], "owner": {"reputation": 11606, "user_id": 1002430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ufy7U.png?s=128&g=1", "display_name": "Ana", "link": "https://stackoverflow.com/users/1002430/ana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1425456952, "creation_date": 1425419374, "last_edit_date": 1425456952, "question_id": 28842608, "link": "https://stackoverflow.com/questions/28842608/how-can-i-make-this-haskell-adt-derive-show", "title": "How can I make this Haskell ADT derive Show?", "body": "<p>The ADT is the free monad:</p>\n\n<pre><code>data Free f r = Free (f (Free f r)) | Pure r\n</code></pre>\n\n<p>I'd like for it to derive <code>Show</code> so that I can print it out when working with it. For example, if I have the following:</p>\n\n<pre><code>data T next = A next | B next deriving (Show)\naa = Free $ A $ Free $ B $ Pure ()\n</code></pre>\n\n<p>As it is right now, I get the following error if I add <code>deriving (Show)</code> to the <code>Free</code> ADT:</p>\n\n<pre><code>No instance for (Show (f (Free f r)))\n      arising from the first field of \u2018Free\u2019 (type \u2018f (Free f r)\u2019)\n    Possible fix:\n      use a standalone 'deriving instance' declaration,\n        so you can specify the instance context yourself\n    When deriving the instance for (Show (Free f r))\n</code></pre>\n\n<p>I'd like for <code>show aa</code> to result in a printable string. Is this possible?</p>\n"}, {"tags": ["haskell", "ubuntu", "cabal", "yesod"], "comments": [{"owner": {"reputation": 359, "user_id": 1924817, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33867bd74b16d7ca6bfb658964dfe878?s=128&d=identicon&r=PG", "display_name": "akegalj", "link": "https://stackoverflow.com/users/1924817/akegalj"}, "edited": false, "score": 0, "creation_date": 1425413108, "post_id": 28840749, "comment_id": 45951014, "body": "have you install haskell platform? I see they are not recommending haskell platform but series of install steps instead. Have you tried this <a href=\"http://www.yesodweb.com/page/quickstart\" rel=\"nofollow noreferrer\">yesodweb.com/page/quickstart</a> ?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425417731, "post_id": 28840749, "comment_id": 45953359, "body": "Blaze.ByteString.Builder.Internal.Types is not exposed by blaze-builder-0.3.3.4. However, it seems that fast-logger only depends on this internal module for versions of bytestring earlier than 0.10.2. The problem arises due to the fact that blaze-builder-0.3.3.4 depends on bytestring &lt; 0.10, so you can&#39;t get the correct version of bytestring (0.10.2 or later) to make fast-logger build without getting a newer version of blaze-builder. The recommended course of action is to nuke your global package db and do this in a sandbox."}, {"owner": {"reputation": 11, "user_id": 4629334, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc39f77a7e568ad2d5af0b40c48fba58?s=128&d=identicon&r=PG&f=1", "display_name": "DJTunafish", "link": "https://stackoverflow.com/users/4629334/djtunafish"}, "edited": false, "score": 1, "creation_date": 1425418029, "post_id": 28840749, "comment_id": 45953503, "body": "I did have the haskell platform installed. Cleaning it out and running the install steps again seems to have solved the issue. Thanks!"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1425418626, "post_id": 28840749, "comment_id": 45953822, "body": "@DJTunafish: perhaps you should write this as a short answer (including the commands you ran), so that you can mark the question as solved and other users can find out how to solve this issue..."}], "answers": [{"tags": [], "owner": {"reputation": 7168, "user_id": 1449964, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/87e463011e9c8e62cc67a6c688bf88c1?s=128&d=identicon&r=PG", "display_name": "Alexandr Kurilin", "link": "https://stackoverflow.com/users/1449964/alexandr-kurilin"}, "is_accepted": false, "score": 1, "last_activity_date": 1425536767, "creation_date": 1425536767, "answer_id": 28871337, "question_id": 28840749, "link": "https://stackoverflow.com/questions/28840749/error-installing-fast-logger-for-yesod-setup-ubuntu/28871337#28871337", "title": "Error installing fast-logger for yesod setup, Ubuntu", "body": "<p>I would recommend you use the <a href=\"http://www.stackage.org/lts\" rel=\"nofollow\">Stackage LTS</a> <code>cabal.config</code> file in all of your projects in order to eliminate most of the issues derived from version mismatches.</p>\n\n<p>Nuke and re-initialize the cabal sandbox, drop the file into the project, <code>cabal install --only-dep -j</code> and you should have no trouble with it.</p>\n"}], "owner": {"reputation": 11, "user_id": 4629334, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc39f77a7e568ad2d5af0b40c48fba58?s=128&d=identicon&r=PG&f=1", "display_name": "DJTunafish", "link": "https://stackoverflow.com/users/4629334/djtunafish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1425536767, "creation_date": 1425412364, "last_edit_date": 1425413813, "question_id": 28840749, "link": "https://stackoverflow.com/questions/28840749/error-installing-fast-logger-for-yesod-setup-ubuntu", "title": "Error installing fast-logger for yesod setup, Ubuntu", "body": "<p>I've been struggling to get Yesod running. I'm finally down to only one missing dependency, fast-logger, before I can build. However, when I run </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cabal install fast-logger-2.2.3\n</code></pre>\n\n<p>I get the following error message: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>System/Log/FastLogger/IO.hs:9:8:\n    Could not find module `Blaze.ByteString.Builder.Internal.Types'\n    It is a member of the hidden package `blaze-builder-0.3.3.4'.\n    Perhaps you need to add `blaze-builder' to the build-depends in your .cabal file.\n    Use -v to see a list of the files searched for.\nFailed to install fast-logger-2.2.3\ncabal: Error: some packages failed to install:\nfast-logger-2.2.3 failed during the building phase. The exception was:\nExitFailure 1\n</code></pre>\n\n<p>My first instinct was to install blaze-builder, in case it was missing. However, it seems to be installed just fine. Is this a problem with the fast-logger package?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 21422, "user_id": 333698, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ca080b4ef1c6cb4df9bc123d3b3af61?s=128&d=identicon&r=PG", "display_name": "psmears", "link": "https://stackoverflow.com/users/333698/psmears"}, "edited": false, "score": 1, "creation_date": 1425406370, "post_id": 28838880, "comment_id": 45947079, "body": "Two hints: (1) If you&#39;re using <code>foldr</code>, you don&#39;t need to have separate cases for <code>[]</code> and <code>x:xs</code> (2) What are the parameters that <code>foldr</code> usually takes?"}, {"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 3, "creation_date": 1425406469, "post_id": 28838880, "comment_id": 45947134, "body": "Are you sure the type is <code>[a -&gt; a -&gt; a] -&gt; a -&gt; a</code> and not <code>[a -&gt; a] -&gt; a -&gt; a</code>?"}, {"owner": {"reputation": 7204, "user_id": 4333347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6b091d5e3973e6f65ec16442c3b1b16b?s=128&d=identicon&r=PG", "display_name": "buydadip", "link": "https://stackoverflow.com/users/4333347/buydadip"}, "reply_to_user": {"reputation": 21422, "user_id": 333698, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ca080b4ef1c6cb4df9bc123d3b3af61?s=128&d=identicon&r=PG", "display_name": "psmears", "link": "https://stackoverflow.com/users/333698/psmears"}, "edited": false, "score": 0, "creation_date": 1425406490, "post_id": 28838880, "comment_id": 45947141, "body": "@psmears so I would do something like <code>foldr (.) x:xs</code>? but the how would I apply this to <code>val</code>?"}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 1, "creation_date": 1425406564, "post_id": 28838880, "comment_id": 45947173, "body": "@Bolboa by taking it&#39;s result and applying it as a functor: <code>(foldr1 (.) funcList) val</code> (notice <code>foldr1</code> instead of <code>foldr</code>)"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1425406800, "post_id": 28838880, "comment_id": 45947307, "body": "Try writing it without foldr, then look at the definition of foldr and work backwards from there. Alternatively, inspect the type of foldr <code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code> and just look at what values you can insert where (turns out, there aren&#39;t that many possibilities)."}], "answers": [{"tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": true, "score": 8, "last_activity_date": 1425425330, "last_edit_date": 1425425330, "creation_date": 1425408318, "answer_id": 28839578, "question_id": 28838880, "link": "https://stackoverflow.com/questions/28838880/haskell-function-that-accepts-a-list-of-functions/28839578#28839578", "title": "Haskell- function that accepts a list of functions", "body": "<p>(I believe you intended to write the type as <code>composeFuncs :: [a -&gt; a] -&gt; a -&gt; a</code> as this is how it is used.)</p>\n\n<p><code>foldr</code> works by replacing the constructors of a list with the replacements you specify. For example, <code>foldr (+) 0 [1,2,3]</code> works by taking the list <code>[1,2,3]</code>, which is really constructed as <code>1:2:3:[]</code>, and replacing <code>(:)</code> with <code>(+)</code> and <code>[]</code> with <code>0</code> as follows:</p>\n\n<pre><code>1 : 2 : 3 : []\n1 + 2 + 3 + 0\n</code></pre>\n\n<p>If you think about a list of functions <code>[f,g,h]</code> that you want to apply to some value as <code>\\x -&gt; f (g (h x))</code>, we can find a <code>foldr</code> by looking for replacements for <code>(:)</code> and <code>[]</code>. First, let's use composition:</p>\n\n<pre><code>\\x -&gt; f (g (h x))\n= (definition of (.))\n\\x -&gt; (f . g . h) x\n= (eta reduction)\nf . g . h\n</code></pre>\n\n<p>This is close, but we must do something with the empty list constructor. We need to replace it with some sort of \"do nothing\" or \"empty\" function. Luckily, we have <code>id</code>, which is guaranteed not to change the result in any way:</p>\n\n<pre><code>f . g . h\n= (definition of id)\nf . g . h . id\n</code></pre>\n\n<p>Now we can see the fold:</p>\n\n<pre><code>f . g . h . id\nf : g : h : []\n</code></pre>\n\n<p>and we write it as:</p>\n\n<pre><code>composeFuncs :: [a -&gt; a] -&gt; a -&gt; a\ncomposeFuncs = foldr (.) id\n</code></pre>\n\n<p>By the way, types that can be folded like this with an element that functions as an \"identity\" are known as monoids*, and <code>a -&gt; a</code> is the <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Data-Monoid.html#v:Endo\" rel=\"nofollow\">Endo</a> monoid.</p>\n\n<p>* There is an additional requirement that the function used to combine values, like <code>(.)</code> for <code>Endo</code> or <code>(+)</code> for <code>Sum</code>, is associative. You'll notice that this allowed me to present them without needing parenthesis above.</p>\n\n<h2>Edit</h2>\n\n<p>For another way to discover this function, let's use GHC 7.8's new typed holes feature. First, we start with a definition of <code>composeFuncs</code> with some holes:</p>\n\n<pre><code>composeFuncs :: [a -&gt; a] -&gt; a -&gt; a\ncomposeFuncs = foldr _f _z\n</code></pre>\n\n<p>When GHC type checks this we get a type error, which I will reduce to the relevent lines:</p>\n\n<pre><code>tmp.hs:6:22: Found hole \u2018_f\u2019 with type: (a -&gt; a) -&gt; (a -&gt; a) -&gt; a -&gt; a \u2026\ntmp.hs:6:25: Found hole \u2018_z\u2019 with type: a -&gt; a \u2026\n</code></pre>\n\n<p>Starting with <code>_z</code>, there is only one possible function of type <code>a -&gt; a</code>, and that's <code>id</code>. For <code>_f</code>, we need a function that combines two functions to give a new function. That is, of course, <code>(.)</code>, so we write:</p>\n\n<pre><code>composeFuncs :: [a -&gt; a] -&gt; a -&gt; a\ncomposeFuncs = foldr (.) id\n</code></pre>\n"}], "owner": {"reputation": 7204, "user_id": 4333347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6b091d5e3973e6f65ec16442c3b1b16b?s=128&d=identicon&r=PG", "display_name": "buydadip", "link": "https://stackoverflow.com/users/4333347/buydadip"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 0, "accepted_answer_id": 28839578, "answer_count": 1, "score": 3, "last_activity_date": 1425425330, "creation_date": 1425406183, "question_id": 28838880, "link": "https://stackoverflow.com/questions/28838880/haskell-function-that-accepts-a-list-of-functions", "title": "Haskell- function that accepts a list of functions", "body": "<p>I need to write a function that accepts a list of functions, and a value, as parameters. Every function in the list must be applied, in turn, on the value.</p>\n\n<p>For example, if my function is called <code>compFuncs</code>...</p>\n\n<p><code>compFuncs [f,g,h] val</code> equivalent to <code>f(g(h val))</code></p>\n\n<p>I can already tell that using a <code>foldr</code> would be useful here, I can put the <code>.</code> operator between each function in the list of functions and then apply it to <code>val</code>. However, I can't complete it, this is my attempt...</p>\n\n<pre><code>compFuncs :: [(a-&gt;a-&gt;a)] -&gt; a -&gt; a\ncompFuncs [] val = val\ncompFuncs (x:xs) val = foldr //Im lost here\n</code></pre>\n\n<p>Can someone help me out? </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 1, "creation_date": 1425403378, "post_id": 28837972, "comment_id": 45945431, "body": "What if the list has odd number of elements?"}, {"owner": {"reputation": 2179, "user_id": 412549, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a194a155579e30bda0926705aeb9d165?s=128&d=identicon&r=PG&f=1", "display_name": "Franky", "link": "https://stackoverflow.com/users/412549/franky"}, "edited": false, "score": 1, "creation_date": 1425404746, "post_id": 28837972, "comment_id": 45946192, "body": "You write &quot;every pair&quot;, but the example is only for &quot;adjacent elements&quot;."}, {"owner": {"reputation": 7204, "user_id": 4333347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6b091d5e3973e6f65ec16442c3b1b16b?s=128&d=identicon&r=PG", "display_name": "buydadip", "link": "https://stackoverflow.com/users/4333347/buydadip"}, "edited": false, "score": 0, "creation_date": 1425404768, "post_id": 28837972, "comment_id": 45946204, "body": "if it has odd number of elements, there can be an error message"}], "answers": [{"tags": [], "owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "is_accepted": true, "score": 2, "last_activity_date": 1425403627, "creation_date": 1425403627, "answer_id": 28838109, "question_id": 28837972, "link": "https://stackoverflow.com/questions/28837972/haskell-a-function-that-applies-a-function-on-a-list/28838109#28838109", "title": "Haskell-a function that applies a function on a list", "body": "<p>Assuming, that for an odd-numbered input list we just discard the last element, the following will do the required:</p>\n\n<pre><code>foldPairs :: (a-&gt;a-&gt;a) -&gt; [a] -&gt; [a]\nfoldPairs _ [] = []\nfoldPairs _ [_] = []\nfoldPairs f (x:y:xs) = f x y : foldPairs f xs\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1425404630, "post_id": 28838167, "comment_id": 45946118, "body": "@EugeneSh. Well, it works. No, I didn&#39;t think of using simple pattern matching at first, which would be the canonical answer, but in even slightly more complicated situations or where something other than lists are used this would be easier to switch to some other data structure. Pattern matching doesn&#39;t work so well on <code>Vector</code>s for example, but it would be pretty easy to make <code>chunks</code> work on vectors, and then a few quick adjustments to get <code>foldpairs</code> to work too. It&#39;s not the most efficient, but I don&#39;t write industry quality code for simple SO questions, just what illustrates the point."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1425404978, "post_id": 28838167, "comment_id": 45946331, "body": "@EugeneSh. <a href=\"https://gist.github.com/313829ec3c5cde121d22\" rel=\"nofollow noreferrer\">As you can see</a> it&#39;s more or less trivial to make this work with <code>Vector</code>, and I&#39;m even being pretty lazy here.  How would you do this for <code>Vector</code>?"}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1425405253, "post_id": 28838167, "comment_id": 45946487, "body": "I think you are trying to solve a different problem here. Just by looking at the OP function signature, it is different. I agree that it might solve some other problems generically, but.. take the context in account :)"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 1, "creation_date": 1425405772, "post_id": 28838167, "comment_id": 45946761, "body": "@EugeneSh. The only thing I changed in the type signature was making it more general. Dismissing someone&#39;s answer without constructive feedback is not useful on SO, but at least I can point out that if one wanted to make this work with other data structures then function composition makes this easier than pattern matching does. The code I posted here is not the best, and I didn&#39;t intend for it to be, but if you&#39;re going to question it&#39;s intentions then at least have good reasons to."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1425406018, "post_id": 28838167, "comment_id": 45946895, "body": "Sorry, there was no intention to offend, this is exactly why I&#39;ve asked, since sometimes people here might have a strange sense of humor, so I was not sure this is not the case here, since at the first glance it seem like a heavily overcomplicated answer to a simple question, but it might be not in some cases that you have pointed."}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": false, "score": 0, "last_activity_date": 1425403855, "creation_date": 1425403855, "answer_id": 28838167, "question_id": 28837972, "link": "https://stackoverflow.com/questions/28837972/haskell-a-function-that-applies-a-function-on-a-list/28838167#28838167", "title": "Haskell-a function that applies a function on a list", "body": "<p>The solution I would go with is to turn <code>[1..10]</code> into <code>[[1,2],[3,4],[5,6],[7,8],[9,10]]</code>, then filter out any lists of length 1, convert to tuples, then map your function:</p>\n\n<pre><code>chunks :: Int -&gt; [a] -&gt; [[a]]\nchunks n = reverse . go []\n    where\n        go acc [] = acc\n        go acc xs =\n            let (h, t) = splitAt n xs\n            in go (h:acc) t\n</code></pre>\n\n<p>Then simply</p>\n\n<pre><code>foldpairs :: (a -&gt; a -&gt; b) -&gt; [a] -&gt; [b]\nfoldpairs f\n    = map (uncurry f)\n    . map (\\[x, y] -&gt; (x, y))\n    . filter ((== 2) . length)\n    . chunks 2\n</code></pre>\n"}], "owner": {"reputation": 7204, "user_id": 4333347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6b091d5e3973e6f65ec16442c3b1b16b?s=128&d=identicon&r=PG", "display_name": "buydadip", "link": "https://stackoverflow.com/users/4333347/buydadip"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 28838109, "answer_count": 2, "score": 0, "last_activity_date": 1425404313, "creation_date": 1425403159, "question_id": 28837972, "link": "https://stackoverflow.com/questions/28837972/haskell-a-function-that-applies-a-function-on-a-list", "title": "Haskell-a function that applies a function on a list", "body": "<p>I am trying to create a function that accepts a function as parameter, and applies that function on every pair of elements in a list. For example, if I call my function <code>foldPairs</code>, then I would use it as so:</p>\n\n<pre><code>foldPairs (+) [1..10]\n\n[3,7,11,15,19]\n</code></pre>\n\n<p>I tried using <code>foldl</code> in my attempt...</p>\n\n<pre><code>foldPairs :: (a-&gt;a-&gt;a) -&gt; [a] -&gt; [a]\nfoldPairs func lis = foldl func lis\n</code></pre>\n\n<p>However this clearly does not work. I think I might have to use <code>curried</code> and <code>uncurried</code> but I am not quite sure how. Could someone help me out?</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 1, "creation_date": 1425401188, "post_id": 28836971, "comment_id": 45943990, "body": "What do you mean by &quot;always free in the context of evaluation avoiding generalization&quot;? I think you probably have the right idea about this but I can&#39;t parse the sentence."}, {"owner": {"reputation": 1144, "user_id": 4245823, "user_type": "registered", "accept_rate": 90, "profile_image": "https://lh3.googleusercontent.com/-czWZC6KwKYU/AAAAAAAAAAI/AAAAAAAAAYI/yBtPVyZjU4M/photo.jpg?sz=128", "display_name": "felipez", "link": "https://stackoverflow.com/users/4245823/felipez"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1425402728, "post_id": 28836971, "comment_id": 45945021, "body": "please correct if I&#39;m wrong. Generalization of the type t in the context \u0393, requires the quantification of the free variables of t that do not occur free on \u0393. What I mean then is that since s is both free in t and  \u0393, the type can&#39;t be generalized, then is rejected."}], "answers": [{"tags": [], "owner": {"reputation": 8676, "user_id": 1113881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sBc0F.jpg?s=128&g=1", "display_name": "CR Drost", "link": "https://stackoverflow.com/users/1113881/cr-drost"}, "is_accepted": false, "score": 1, "last_activity_date": 1425404654, "creation_date": 1425404654, "answer_id": 28838403, "question_id": 28836971, "link": "https://stackoverflow.com/questions/28836971/universal-quantification-and-unification-an-example/28838403#28838403", "title": "Universal quantification and unification, an example", "body": "<p>I think you're missing something. The actual message GHCi gives is:</p>\n\n<pre><code>Prelude&gt; :m +Control.Monad.ST\nPrelude Control.Monad.ST&gt; data MutVar s a = MutVar\nPrelude Control.Monad.ST&gt; :set -XRankNTypes\nPrelude Control.Monad.ST&gt; data MutVar s a = MutVar\nPrelude Control.Monad.ST&gt; let readVar = undefined :: MutVar s a -&gt; ST s a\nPrelude Control.Monad.ST&gt; let newVar = undefined :: a -&gt; ST s (MutVar s a)\nPrelude Control.Monad.ST&gt; runST $ readVar $ runST $ newVar True\n\n&lt;interactive&gt;:14:27:\n    Couldn't match type \u2018s\u2019 with \u2018s1\u2019\n    \u2018s\u2019 is a rigid type variable bound by\n        a type expected by the context: ST s Bool at &lt;interactive&gt;:14:1\n    \u2018s1\u2019 is a rigid type variable bound by\n        a type expected by the context: ST s1 (MutVar s Bool)\n        at &lt;interactive&gt;:14:19\n    Expected type: ST s1 (MutVar s Bool)\n    Actual type: ST s1 (MutVar s1 Bool)\n    In the second argument of \u2018($)\u2019, namely \u2018newVar True\u2019\n    In the second argument of \u2018($)\u2019, namely \u2018runST $ newVar True\u2019\n</code></pre>\n\n<p>The Haskell compiler rejects it not because of <em>anything</em> to do with <code>readVar</code> but rather because of a problem with <code>newVar</code>, which is that <code>ST s (MutVar s a)</code> allows the <code>s</code> to \"escape\" its context by jumping into the <code>MutVar</code> expression.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 6, "last_activity_date": 1425419723, "last_edit_date": 1425419723, "creation_date": 1425410973, "answer_id": 28840303, "question_id": 28836971, "link": "https://stackoverflow.com/questions/28836971/universal-quantification-and-unification-an-example/28840303#28840303", "title": "Universal quantification and unification, an example", "body": "<p>Let's read the type of <code>runST</code>. I added an explicit quatifier for <code>a</code> as well.</p>\n\n<pre><code>runST :: forall a . (forall s. ST s a) -&gt; a\n</code></pre>\n\n<p>It reads as the following contract:</p>\n\n<ol>\n<li>the caller chooses a fixed type <code>a</code></li>\n<li>the caller provides an argument <code>x</code></li>\n<li>the argument <code>x</code> must be of type <code>ST s a</code> for any choice of <code>s</code>. In other words, <code>s</code> will be chosen by <code>runST</code>, not by the caller.</li>\n</ol>\n\n<p>Let's see a similar example:</p>\n\n<pre><code>runFoo :: forall a . (forall s. s -&gt; [(s,a)]) -&gt; [a]\nrunFoo x =\n    let part1 = x \"hello!\"          -- here s is String\n        -- part1 has type [(String, a)]\n        part2 = x 'a'               -- here s is Char\n        -- part2 has type [(Char, a)]\n        part3 = x (map snd part2)   -- here s is [a]   (!!!)\n        -- part3 has type [([a],a)]\n    in map snd part1 ++ map snd part2 ++ map snd part3\n\ntest1 :: [Int]\ntest1 = runFoo (\\y -&gt; [(y,2),(y,5)])   -- here a is Int\n\ntest2 :: [Int]\ntest2 = runFoo (\\y -&gt; [(\"abc\" ++ y,2)])       -- ** error\n-- I can't choose y :: String, runFoo will choose that type!\n</code></pre>\n\n<p>Above, note that <code>a</code> is fixed (to <code>Int</code>), and that I can't put any restrictions on the type of <code>y</code>. Moreover:</p>\n\n<pre><code>test3 = runFoo (\\y -&gt; [(y,y)])    -- ** error\n</code></pre>\n\n<p>Here I am <em>not</em> fixing <code>a</code> in advance, but I'm trying to choose <code>a=s</code>. I am not allowed to do that: <code>runFoo</code> is allowed to choose <code>s</code> in terms of <code>a</code> (see <code>part3</code> above), so <code>a</code> must be fixed in advance.</p>\n\n<p>Now, to your example. The problem lies in</p>\n\n<pre><code>runST (newSTRef ...)\n</code></pre>\n\n<p>Here, <code>newSTRef</code> returns a <code>ST s (STRef s Int)</code>, so it's trying to choose <code>a = STRef s Int</code>. Since <code>a</code> depends on <code>s</code>, this choice is invalid.</p>\n\n<p>This \"trick\" is used by the <code>ST</code> monad to prevent references to \"escape\" from the monad. That is, it is guaranteed that after <code>runST</code> returns, all the references are now no longer accessible (and potentially they can be garbage collected). Because of this, the mutable state which was used during the <code>ST</code> computation has been thrown away, and the result of <code>runST</code> is indeed a <em>pure</em> value. This is, after all, the main purpose of the <code>ST</code> monad: it is meant to allow (temporary) mutable state to be used in a pure computation.</p>\n"}], "owner": {"reputation": 1144, "user_id": 4245823, "user_type": "registered", "accept_rate": 90, "profile_image": "https://lh3.googleusercontent.com/-czWZC6KwKYU/AAAAAAAAAAI/AAAAAAAAAYI/yBtPVyZjU4M/photo.jpg?sz=128", "display_name": "felipez", "link": "https://stackoverflow.com/users/4245823/felipez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 242, "favorite_count": 1, "accepted_answer_id": 28840303, "answer_count": 2, "score": 3, "last_activity_date": 1425419723, "creation_date": 1425400372, "last_edit_date": 1425400508, "question_id": 28836971, "link": "https://stackoverflow.com/questions/28836971/universal-quantification-and-unification-an-example", "title": "Universal quantification and unification, an example", "body": "<p>Given the following signature for running the monad <code>ST</code></p>\n\n<pre><code>runST :: (forall s. ST s a) -&gt; a\n</code></pre>\n\n<p>and the functions </p>\n\n<pre><code>newVar  :: a -&gt; ST s (MutVar s a) \nreadVar :: MutVar s a -&gt; ST s a\n</code></pre>\n\n<p>Then the Haskell compiler will reject the following ill-typed expression</p>\n\n<pre><code>let v = runST (newVar True)\nin runST (readVar v)\n</code></pre>\n\n<p>Because in order to evaluate <code>runST</code>, it's required that the type </p>\n\n<pre><code>readVar v :: ST s Bool \n</code></pre>\n\n<p>must be generalized to </p>\n\n<pre><code>\u2200s . ST s Bool \n</code></pre>\n\n<p>My question is then that the only job of the Universal quantifier here, is to ensure that the type variable <code>s</code> is always free in the context of evaluation avoiding generalization, am I right? or is there more about the universal quantifier here?</p>\n"}, {"tags": ["haskell", "cartesian-product", "template-haskell"], "comments": [{"owner": {"reputation": 16267, "user_id": 1346276, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Tu8Re.jpg?s=128&g=1", "display_name": "phipsgabler", "link": "https://stackoverflow.com/users/1346276/phipsgabler"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425390981, "post_id": 28833388, "comment_id": 45936738, "body": "@chi really? In my interpretation, he asks for combinations, not zips; i.e., <code>liftA2 (,)</code> and so on (for lists)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425391866, "post_id": 28833388, "comment_id": 45937291, "body": "@phb You are right. Still, if we could use nested pairs instead of tuples we would be able to solve this through a type class and <code>liftA2 (,)</code>, as you propose. With tuples it&#39;s harder since there&#39;s no handy way to move from a n-tuple to a n+1-tuple."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1425392315, "post_id": 28833388, "comment_id": 45937616, "body": "Fun fact: GHC doesn&#39;t support tuples longer than 62 entries: <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/ghc-prim-0.3.1.0/src/GHC-Tuple.html\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/libraries/&hellip;</a>. So there&#39;s definitely a way to implement all <code>cartProdN</code> variants up to 62 by hand ;). That being said, do you <i>really</i> need arbitrary cartesian products? There&#39;s probably a reason why <code>zipWith*</code> and its variants stop at <code>7</code>\u2026"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425398410, "post_id": 28836095, "comment_id": 45942077, "body": "I think the <code>HList</code> package may already offer something like this, but I&#39;m not sure it&#39;s quite the same. It might also make sense to write (or mention, if it already exists) a class for converting <code>HList</code>s to tuples, with an associated tuple type."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425399932, "post_id": 28836095, "comment_id": 45943131, "body": "@dfeuer:  I found it in <code>hlist</code> and it&#39;s much the same (see edit)."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": false, "score": 4, "last_activity_date": 1425400062, "last_edit_date": 1425400062, "creation_date": 1425398043, "answer_id": 28836095, "question_id": 28833388, "link": "https://stackoverflow.com/questions/28833388/calculate-n-ary-with-different-types-cartesian-product-in-haskell/28836095#28836095", "title": "Calculate N-Ary (with different types !!) Cartesian Product in Haskell", "body": "<p>The usual heterogeneous list can be used here:</p>\n\n<pre><code>{-# LANGUAGE\n   UndecidableInstances, GADTs,\n   TypeFamilies, MultiParamTypeClasses,\n   FunctionalDependencies, DataKinds, TypeOperators,\n   FlexibleInstances #-}\n\nimport Control.Applicative\n\ndata HList xs where\n  Nil  :: HList '[]\n  (:&gt;) :: x -&gt; HList xs -&gt; HList (x ': xs)\ninfixr 5 :&gt;\n\n-- A Show instance, for illustrative purposes here. \ninstance Show (HList '[]) where\n  show _ = \"Nil\"\n\ninstance (Show x, Show (HList xs)) =&gt; Show (HList (x ': xs)) where\n  show (x :&gt; xs) = show x ++ \" : \" ++ show xs\n</code></pre>\n\n<p>We usually write functions on <code>HLists</code> using classes, with one instance for <code>Nil</code> and another for the <code>:&gt;</code> case. However, it wouldn't be pretty to have a class for just a single use case (namely cartesian products here), so let's generalize the problem to applicative sequencing:</p>\n\n<pre><code>class Applicative f =&gt; HSequence f (xs :: [*]) (ys :: [*]) | xs -&gt; ys, ys f -&gt; xs where\n  hsequence :: HList xs -&gt; f (HList ys)\n\ninstance Applicative f =&gt; HSequence f '[] '[] where\n  hsequence = pure\n\ninstance (Applicative g, HSequence f xs ys, y ~ x, f ~ g) =&gt;\n         HSequence g (f x ': xs) (y ': ys) where\n  hsequence (fx :&gt; fxs) = (:&gt;) &lt;$&gt; fx &lt;*&gt; hsequence fxs\n</code></pre>\n\n<p>Note the use of <code>~</code> constraints in the instance definition. It greatly helps type inference (along with the functional dependencies in the class declaration); the general idea is to move as much information as possible from the instance head to the constraints, because that lets GHC delay solving them until there is sufficient contextual information. </p>\n\n<p>Now cartesian products work out of the box:</p>\n\n<pre><code>&gt; hsequence ([1, 2] :&gt; \"ab\" :&gt; Nil)\n[1 : 'a' : Nil,1 : 'b' : Nil,2 : 'a' : Nil,2 : 'b' : Nil]\n</code></pre>\n\n<p>And we can also use <code>hsequence</code> with any <code>Applicative</code>:</p>\n\n<pre><code>&gt; hsequence (Just \"foo\" :&gt; Just () :&gt; Just 10 :&gt; Nil)\nJust \"foo\" : () : 10 : Nil\n</code></pre>\n\n<p>EDIT: I found out (thanks dfeuer) that the same functionality is available from the existing <a href=\"https://hackage.haskell.org/package/HList\" rel=\"nofollow\"><code>hlist</code></a> package:</p>\n\n<pre><code>import Data.HList.CommonMain\n\n&gt; hSequence ([3, 4] .*. \"abc\" .*. HNil)\n[H[3, 'a'],H[3, 'b'],H[3, 'c'],H[4, 'a'],H[4, 'b'],H[4, 'c']]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "is_accepted": false, "score": 2, "last_activity_date": 1425595038, "creation_date": 1425595038, "answer_id": 28889173, "question_id": 28833388, "link": "https://stackoverflow.com/questions/28833388/calculate-n-ary-with-different-types-cartesian-product-in-haskell/28889173#28889173", "title": "Calculate N-Ary (with different types !!) Cartesian Product in Haskell", "body": "<p>Using Template Haskell it is possible to achieve this.</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}\nf :: ExpQ -&gt; ExpQ\nf ess = do es &lt;- ess\n           case es of\n             (TupE e) -&gt; return $ h e\n             _ -&gt; fail \"f expects tuple of lists\"\n  where\n    h ts = let ns = zipWith (\\_ -&gt; mkName . ('x':) . show) ts [0..]\n           in CompE $ (zipWith (BindS . VarP) ns ts) ++\n                      [NoBindS $ TupE $ map VarE ns]\n</code></pre>\n\n<p>Then perhaps a little awkward to use, but that's the price of supporting any tuples:</p>\n\n<pre><code>Prelude&gt; take 7 $ $(f [| ([1..], [1..2], \"ab\") |] )\n[(1,1,'a'),(1,1,'b'),(1,2,'a'),(1,2,'b'),(2,1,'a'),(2,1,'b'),(2,2,'a')]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3074, "user_id": 1608276, "user_type": "registered", "accept_rate": 28, "profile_image": "https://i.stack.imgur.com/XiZ2q.jpg?s=128&g=1", "display_name": "luochen1990", "link": "https://stackoverflow.com/users/1608276/luochen1990"}, "is_accepted": false, "score": 0, "last_activity_date": 1432887056, "creation_date": 1432887056, "answer_id": 30524451, "question_id": 28833388, "link": "https://stackoverflow.com/questions/28833388/calculate-n-ary-with-different-types-cartesian-product-in-haskell/30524451#30524451", "title": "Calculate N-Ary (with different types !!) Cartesian Product in Haskell", "body": "<p>I found a better solution myself, this solution is perfect for user, but it's implementation is sort of ugly (must create instance of every tuple, just like zip): </p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses, FlexibleInstances, FunctionalDependencies #-}\n\nclass CartProd a b | a -&gt; b where\n    cartProd :: a -&gt; b\n\ninstance CartProd ([a], [b]) [(a, b)] where\n    cartProd (as, bs) = [(a, b) | a &lt;- as, b &lt;- bs]\n\ninstance CartProd ([a], [b], [c]) [(a, b, c)] where\n    cartProd (as, bs, cs) = [(a, b, c) | a &lt;- as, b &lt;- bs, c &lt;- cs]\n\nc = cartProd (['a'..'c'], [0..2])\nd = cartProd (['a'..'c'], [0..2], ['x'..'z'])\n</code></pre>\n\n<p>We can also provide a better version of zip this way, so that we can use a single function name <code>zip'</code> instead of <code>zip</code>, <code>zip3</code>, <code>zip4</code> ...:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses, FlexibleInstances, FunctionalDependencies #-}\n\nclass Zip a b | a -&gt; b where\n    zip' :: a -&gt; b\n\ninstance Zip ([a], [b]) [(a, b)] where\n    zip' (as, bs) = zip as bs\n\ninstance Zip ([a], [b], [c]) [(a, b, c)] where\n    zip' (as, bs, cs) = zip3 as bs cs\n\na = zip' (['a'..'z'], [0..])\nb = zip' (['a'..'z'], [0..], ['x'..'z'])\n</code></pre>\n"}], "owner": {"reputation": 3074, "user_id": 1608276, "user_type": "registered", "accept_rate": 28, "profile_image": "https://i.stack.imgur.com/XiZ2q.jpg?s=128&g=1", "display_name": "luochen1990", "link": "https://stackoverflow.com/users/1608276/luochen1990"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 469, "favorite_count": 1, "answer_count": 3, "score": 7, "last_activity_date": 1582804366, "creation_date": 1425390341, "last_edit_date": 1582804366, "question_id": 28833388, "link": "https://stackoverflow.com/questions/28833388/calculate-n-ary-with-different-types-cartesian-product-in-haskell", "title": "Calculate N-Ary (with different types !!) Cartesian Product in Haskell", "body": "<p>I know that the function <code>sequence</code> can handle the <code>[[1, 2], [3, 4]] -&gt; [[1, 3], [1, 4], [2, 3], [2, 4]]</code> problem.</p>\n\n<p>But I think the real cartesian product should handle the <code>([1, 2], ['a', 'b']) -&gt; [(1, 'a'), (1, 'b'), (2, 'a'), (2, 'b')]</code> problem, and should care about neigher if the type of each list is different nor the outer tuple's type( &amp; size).</p>\n\n<p>So, the <code>cartProd</code> function I want has a type like this: <code>([a1], [a2], [a3] ...) -&gt; [(a1, a2, a3 ...)]</code></p>\n\n<p>I know there is some problem here with the type system. But is there any way to implement a perfect version of this <code>cartProd</code> ?</p>\n"}, {"tags": ["haskell", "casting"], "comments": [{"owner": {"reputation": 88499, "user_id": 650405, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5cdee2abea51e91756076032f0053081?s=128&d=identicon&r=PG", "display_name": "Karoly Horvath", "link": "https://stackoverflow.com/users/650405/karoly-horvath"}, "edited": false, "score": 1, "creation_date": 1425385493, "post_id": 28831649, "comment_id": 45933181, "body": "it&#39;s good practice to add the type, and in this case it will solve the problem."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 88499, "user_id": 650405, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5cdee2abea51e91756076032f0053081?s=128&d=identicon&r=PG", "display_name": "Karoly Horvath", "link": "https://stackoverflow.com/users/650405/karoly-horvath"}, "edited": false, "score": 1, "creation_date": 1425393923, "post_id": 28831649, "comment_id": 45938789, "body": "As @KarolyHorvath indicates, it is good practice to write type signatures for all top-level identifiers, and also for some non-top-level identifiers and expressions. Doing so lets you check in with the compiler to make sure the two of you agree on the type of what you&#39;ve defined before moving on to other things. Although this particular problem is a fairly simple one, you will, one day, get some horrible type checker spew that makes no sense to you\u2014adding as many type signatures as you can will help you figure out exactly where the error is. The <code>ScopedTypeVariables</code> will help a lot sometimes."}], "answers": [{"comments": [{"owner": {"reputation": 163, "user_id": 4627566, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad5208c8637c01c727f01e646c0262fb?s=128&d=identicon&r=PG&f=1", "display_name": "Greg P.", "link": "https://stackoverflow.com/users/4627566/greg-p"}, "edited": false, "score": 0, "creation_date": 1425386163, "post_id": 28831794, "comment_id": 45933552, "body": "unfortunately, it was cut just there"}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 1, "creation_date": 1425398927, "post_id": 28831794, "comment_id": 45942431, "body": "Note that <code>floor(fromInteger n&#47;fromInteger ...) = n `div` ...</code>"}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1425409296, "post_id": 28831794, "comment_id": 45948859, "body": "<code>\\n -&gt; n `div` nextPrimeDiv n</code> is also more efficient, and can be written as <code>div &lt;$&gt; id &lt;*&gt; nextPrimeDiv</code> if you are masochistic."}, {"owner": {"reputation": 62908, "user_id": 567620, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/g8HIM.jpg?s=128&g=1", "display_name": "ely", "link": "https://stackoverflow.com/users/567620/ely"}, "edited": false, "score": 0, "creation_date": 1425422518, "post_id": 28831794, "comment_id": 45955759, "body": "I upvoted and I like this answer. But I think it should be edited to remove the first line, which can be read as condescending. For people totally new to Haskell, it is not straightforward to read the error message and determine a solution. You could read it thoroughly, possibly even multiple times, and still scratch your head. I remember when I started using Haskell, I had a hard time understanding what &quot;instance declaration&quot; even meant. The part you highlight as the important part does not seem like something a new-to-Haskell programmer can be assumed to understand upon reading."}, {"owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "reply_to_user": {"reputation": 62908, "user_id": 567620, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/g8HIM.jpg?s=128&g=1", "display_name": "ely", "link": "https://stackoverflow.com/users/567620/ely"}, "edited": false, "score": 0, "creation_date": 1425422838, "post_id": 28831794, "comment_id": 45955908, "body": "@Mr. F I agree and I reworded that sentence. Please check."}, {"owner": {"reputation": 62908, "user_id": 567620, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/g8HIM.jpg?s=128&g=1", "display_name": "ely", "link": "https://stackoverflow.com/users/567620/ely"}, "edited": false, "score": 0, "creation_date": 1425423313, "post_id": 28831794, "comment_id": 45956097, "body": "Very nice edit. I appreciate it and I am sure many future folks will too."}], "tags": [], "owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "is_accepted": true, "score": 4, "last_activity_date": 1425697346, "last_edit_date": 1425697346, "creation_date": 1425385519, "answer_id": 28831794, "question_id": 28831649, "link": "https://stackoverflow.com/questions/28831649/missing-a-certain-haskell-type-conversion/28831794#28831794", "title": "Missing a certain Haskell type conversion", "body": "<p>The actual complete error message received, hints us the fix to this problem.</p>\n\n<pre><code>Prelude&gt; let listRestDiv n = floor(n/(fromInteger (nextPrimeDiv n)))\n\n&lt;interactive&gt;:8:21:\n    Could not deduce (RealFrac Integer) arising from a use of `floor'\n    from the context (Integral b)\n      bound by the inferred type of\n               listRestDiv :: Integral b =&gt; Integer -&gt; b\n      at &lt;interactive&gt;:8:5-59\n    Possible fix: add an instance declaration for (RealFrac Integer)\n    In the expression: floor (n / (fromInteger (nextPrimeDiv n)))\n    In an equation for `listRestDiv':\n        listRestDiv n = floor (n / (fromInteger (nextPrimeDiv n)))\n\n&lt;interactive&gt;:8:28:\n    Could not deduce (Fractional Integer) arising from a use of `/'\n    from the context (Integral b)\n      bound by the inferred type of\n               listRestDiv :: Integral b =&gt; Integer -&gt; b\n      at &lt;interactive&gt;:8:5-59\n    Possible fix: add an instance declaration for (Fractional Integer)\n    In the first argument of `floor', namely\n      `(n / (fromInteger (nextPrimeDiv n)))'\n    In the expression: floor (n / (fromInteger (nextPrimeDiv n)))\n    In an equation for `listRestDiv':\n        listRestDiv n = floor (n / (fromInteger (nextPrimeDiv n)))\n</code></pre>\n\n<p>The important thing to be noted here is</p>\n\n<pre><code>    Possible fix: add an instance declaration for (Fractional Integer)\n    In the first argument of `floor', namely\n      `(n / (fromInteger (nextPrimeDiv n)))'\n</code></pre>\n\n<p>So, all you have to do is, use <code>fromInteger</code> for <code>n</code> also, like this</p>\n\n<pre><code>Prelude&gt; let listRestDiv n = floor(fromInteger n/(fromInteger (nextPrimeDiv n)))\n</code></pre>\n"}], "owner": {"reputation": 163, "user_id": 4627566, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad5208c8637c01c727f01e646c0262fb?s=128&d=identicon&r=PG&f=1", "display_name": "Greg P.", "link": "https://stackoverflow.com/users/4627566/greg-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 28831794, "answer_count": 1, "score": 2, "last_activity_date": 1425697346, "creation_date": 1425384984, "last_edit_date": 1425385139, "question_id": 28831649, "link": "https://stackoverflow.com/questions/28831649/missing-a-certain-haskell-type-conversion", "title": "Missing a certain Haskell type conversion", "body": "<p>In GHCiOnline, <code>let listRestDiv 4 = floor(4/(fromInteger (nextPrimeDiv 4)))</code> does work, but the general</p>\n\n<pre><code>let listRestDiv n = floor(n/(fromInteger (nextPrimeDiv n)))\n</code></pre>\n\n<p>is not accepted, where <code>nextPrimeDiv n</code> is given by</p>\n\n<pre><code>let nextPrimeDiv n = head [x|x&lt;-[1..n], n `mod` x == 0, x/=1]\n</code></pre>\n\n<p>and just returns the next prime divisor.</p>\n\n<p>It says: </p>\n\n<blockquote>\n  <p>Could not deduce (RealFrac Integer) arising from a use of `floor' from\n  the context (Integral b) bound by the inferred type of listRestDiv ::\n  Integral b => Integer -> b at</p>\n</blockquote>\n\n<p>and ends there. I just dont get the types right here.\nThanks in advance for any hint.</p>\n"}, {"tags": ["regex", "haskell"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 6, "creation_date": 1425383928, "post_id": 28830521, "comment_id": 45932217, "body": "Do you <i>really</i> want a regular expression?"}, {"owner": {"reputation": 53, "user_id": 4378046, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76b21558618afa4372635ba66592f561?s=128&d=identicon&r=PG&f=1", "display_name": "birdlife", "link": "https://stackoverflow.com/users/4378046/birdlife"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1425396260, "post_id": 28830521, "comment_id": 45940513, "body": "sorry i can simply use split... it&#39;s been a while since i last touched haskell or programming in general"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1425398485, "post_id": 28830521, "comment_id": 45942129, "body": "@birdlife The easiest way would probably be something like <a href=\"https://gist.github.com/8f41934e1fadfe7d28d7\" rel=\"nofollow noreferrer\">this</a> use Parsec, which I find to be easier to read and use than regex anyway."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 4, "creation_date": 1425413663, "post_id": 28830521, "comment_id": 45951292, "body": "How can anyone possibly answer this without knowing what other strings like <code>[aex-ESE14 -14]</code> you want to consider as a header? Anything in square brackets at the start of a line? A pattern of <code>xxx-xxxxx -xx</code>? This is better posed as two different questions: one about regexes (which should give a description of the problem, or at least more than one example input!), and one about how to use a given regex in haskell."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1426689425, "post_id": 28830521, "comment_id": 46475935, "body": "Roman Cheplyaka recently introduced me to his <code>regex-applicative</code> package, which lets you do things like this in a rather pretty way. The parser should look something like <code>(,) &lt;$&gt; (sym &#39;[&#39; *&gt; many anySym &lt;* sym &#39;]&#39; &lt;* some (psym isSpace)) &lt;*&gt; (many anySym &lt;* &#39;\\n&#39;)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "is_accepted": false, "score": 1, "last_activity_date": 1508325164, "creation_date": 1508325164, "answer_id": 46808867, "question_id": 28830521, "link": "https://stackoverflow.com/questions/28830521/haskell-regular-expression/46808867#46808867", "title": "Haskell Regular expression", "body": "<p>Here is a possible way:</p>\n\n<pre><code>Prelude&gt; :mod +Text.Regex.Posix\nPrelude Text.Regex.Posix&gt; let res = \"[aex-ESE14 -14] this is a line\" =~ \"(\\\\[[^][]+])[[:blank:]]+(.+)\" :: [[String]]\nPrelude Text.Regex.Posix&gt; res\n[[\"[aex-ESE14 -14] this is a line\",\"[aex-ESE14 -14]\",\"this is a line\"]]\nPrelude Text.Regex.Posix&gt; res!!0!!1\n\"[aex-ESE14 -14]\"\nPrelude Text.Regex.Posix&gt; res!!0!!2\n\"this is a line\"\n</code></pre>\n\n<p>The point is to match and <em>capture</em> the parts of the pattern you need to return, the rest can be just matched. To ensure <code>[...]</code> is at the start of the string, you may put a <code>^</code> at the start of the pattern.</p>\n\n<p><strong>Pattern details</strong></p>\n\n<ul>\n<li><code>(\\\\[[^][]+])</code>  - Group 1: <code>[</code> followed with 1 or more chars other than <code>[</code> and <code>]</code> and then a <code>]</code> </li>\n<li><code>[[:blank:]]+</code> - 1 or more horizontal whitespace chars</li>\n<li><code>(.+)</code> - 1 or more chars.</li>\n</ul>\n\n<p>If there can be 0 or more occurrences of some pattern, replace the corresponding <code>+</code> with <code>*</code> quantifier.</p>\n"}], "owner": {"reputation": 53, "user_id": 4378046, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76b21558618afa4372635ba66592f561?s=128&d=identicon&r=PG&f=1", "display_name": "birdlife", "link": "https://stackoverflow.com/users/4378046/birdlife"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 419, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1508325214, "creation_date": 1425381626, "last_edit_date": 1508325214, "question_id": 28830521, "link": "https://stackoverflow.com/questions/28830521/haskell-regular-expression", "title": "Haskell Regular expression", "body": "<p>My text file contains lines such as this:</p>\n\n<pre><code>[aex-ESE14 -14] this is a line\n</code></pre>\n\n<p>I have:</p>\n\n<pre><code>:mod +Text.Regex.Posix\n</code></pre>\n\n<p>How can i filter only lines with the above pattern and extract the contents into two strings:</p>\n\n<pre><code>(String, String) = (\"aex-ESE14 -14\",\"this is a line\")\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "edited": false, "score": 3, "creation_date": 1425380536, "post_id": 28830122, "comment_id": 45930139, "body": "Did you mean <code>data Animal = Animal Family Color</code>? Currently <code>Animal a</code> is the type of a list of pairs."}, {"owner": {"reputation": 10281, "user_id": 1033448, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d64fdbd293e80580b1c702998cb6e740?s=128&d=identicon&r=PG", "display_name": "Anton Guryanov", "link": "https://stackoverflow.com/users/1033448/anton-guryanov"}, "edited": false, "score": 1, "creation_date": 1425381541, "post_id": 28830122, "comment_id": 45930761, "body": "If you want <code>animal.family</code> syntax, have a look at lenses (a little tutorial <a href=\"https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial\" rel=\"nofollow noreferrer\">here</a> ). However lenses are an advanced topic in Haskell, and, as already mentioned, the record syntax is enough in your simple case."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 10281, "user_id": 1033448, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d64fdbd293e80580b1c702998cb6e740?s=128&d=identicon&r=PG", "display_name": "Anton Guryanov", "link": "https://stackoverflow.com/users/1033448/anton-guryanov"}, "edited": false, "score": 0, "creation_date": 1425382287, "post_id": 28830122, "comment_id": 45931241, "body": "@AntonGuryanov let&#39;s say <i>intermediate</i> :)"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1425401204, "post_id": 28830122, "comment_id": 45944003, "body": "@BartekBanachewicz Not going crazy with them is advanced."}], "answers": [{"comments": [{"owner": {"reputation": 171740, "user_id": 869736, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/671f732e3c68c387c702112a30e5ebd8?s=128&d=identicon&r=PG&f=1", "display_name": "Louis Wasserman", "link": "https://stackoverflow.com/users/869736/louis-wasserman"}, "edited": false, "score": 1, "creation_date": 1425399679, "post_id": 28830261, "comment_id": 45942967, "body": "I&#39;d tend to prefer the pattern <code>Animal{family = Ape}</code>, FWIW."}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": true, "score": 7, "last_activity_date": 1425382407, "last_edit_date": 1425382407, "creation_date": 1425380852, "answer_id": 28830261, "question_id": 28830122, "link": "https://stackoverflow.com/questions/28830122/accessing-elements-of-custom-type-variables-in-haskell/28830261#28830261", "title": "Accessing elements of custom type variables in Haskell?", "body": "<pre><code>type Animal family = [(family, color)]\n</code></pre>\n\n<p>First and foremost, this shouldn't compile; would if changed to <code>[(family, Color)]</code></p>\n\n<p>This is a type alias, stating that <code>Animal</code> means <em>a list of tuples<sup>1</sup> of (parametrized family type, color)</em>, which is most probably not what you want.</p>\n\n<p>As @rightfold suggested, you probably wanted</p>\n\n<pre><code>data Animal = Animal Family Color\n</code></pre>\n\n<p>Or, using record syntax:</p>\n\n<pre><code>data Animal = Animal { family :: Family, color :: Color }\n</code></pre>\n\n<p>Then, your function:</p>\n\n<pre><code>-- record version\nanimalFunction :: Animal -&gt; String\nanimalFunction animal\n    | family animal == Ape = \"This animal is an ape.\"\n    | ...\n</code></pre>\n\n<blockquote>\n  <p>Note: <code>family :: Animal -&gt; Family</code></p>\n</blockquote>\n\n<p>Or you can just pattern match<sup>2</sup>.</p>\n\n<pre><code>animalFunction (Animal f c)\n    | f == Ape = ...\n</code></pre>\n\n<p>or even:</p>\n\n<pre><code>animalFunction (Animal Ape _) = ...\n</code></pre>\n\n<hr>\n\n<p>However, what you're probably looking for is <code>Show</code>, as a general, idiomatic way to convert something to <code>String</code><sup>3</sup>.</p>\n\n<pre><code>data Family = Ape | Bear | Bird | Cat | Dog | Chicken deriving (Show)\n\ninstance Show Animal where\n    show (Animal f _) = \"This animal is an \" ++ (show f) ++ \".\"\n</code></pre>\n\n<hr>\n\n<p><sup>1</sup> Pairs.</p>\n\n<p><sup>2</sup> It works with both records and non-records, because records only really introduce getters of type <code>Record -&gt; Member</code> for every member, and they don't modify the structure</p>\n\n<p><sup>3</sup> In other languages, you can think about this as implementing \"ToString\" interface for your class. It's an oversimplification, but enough to understand this example.</p>\n"}, {"tags": [], "owner": {"reputation": 62902, "user_id": 90511, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/nmOPo.png?s=128&g=1", "display_name": "hugomg", "link": "https://stackoverflow.com/users/90511/hugomg"}, "is_accepted": false, "score": 2, "last_activity_date": 1425380867, "creation_date": 1425380867, "answer_id": 28830264, "question_id": 28830122, "link": "https://stackoverflow.com/questions/28830122/accessing-elements-of-custom-type-variables-in-haskell/28830264#28830264", "title": "Accessing elements of custom type variables in Haskell?", "body": "<p>To test for cases of an algebraic data type you should use pattern matching instead of if statements or guards:</p>\n\n<pre><code>case myFamily of\n  Ape -&gt; \"This is an ape\"\n  Bear -&gt; \"Dangerous carnivore!\"\n  Bird -&gt; \"This can fly\"\n  -- and so on...\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 4627269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/354fdfd12c611349193c4eaa4b1a82d0?s=128&d=identicon&r=PG&f=1", "display_name": "Haskhell", "link": "https://stackoverflow.com/users/4627269/haskhell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 962, "favorite_count": 0, "accepted_answer_id": 28830261, "answer_count": 2, "score": 1, "last_activity_date": 1425382407, "creation_date": 1425380413, "question_id": 28830122, "link": "https://stackoverflow.com/questions/28830122/accessing-elements-of-custom-type-variables-in-haskell", "title": "Accessing elements of custom type variables in Haskell?", "body": "<p>I have a type called Animal which includes the animal's family and the color of the animal.</p>\n\n<pre><code>type Animal family = [(family, color)]\n\ndata Family = Ape | Bear | Bird | Cat | Dog | Chicken\n\ndata Color = Brown | Black | White | Other\n</code></pre>\n\n<p>I also have a function in which I am trying to access the family and color of an animal. All I am asking is simply <em>how</em> to access these elements from within a function. For example in most object oriented languages we would access these elements with something like <em>animal.family</em>.</p>\n\n<pre><code>animalFunction :: Animal -&gt; String\nanimalFunction animal\n    | animal.family == Ape = \"This animal is an ape.\"\n</code></pre>\n"}, {"tags": ["haskell", "crash", "static-libraries", "ffi"], "comments": [{"owner": {"reputation": 5992, "user_id": 74497, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0d4a7e6c8edd88e835508df8397592e5?s=128&d=identicon&r=PG", "display_name": "ocharles", "link": "https://stackoverflow.com/users/74497/ocharles"}, "edited": false, "score": 1, "creation_date": 1425380742, "post_id": 28829976, "comment_id": 45930264, "body": "&quot;It crashes&quot; doesn&#39;t give us much to go on."}, {"owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "reply_to_user": {"reputation": 5992, "user_id": 74497, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0d4a7e6c8edd88e835508df8397592e5?s=128&d=identicon&r=PG", "display_name": "ocharles", "link": "https://stackoverflow.com/users/74497/ocharles"}, "edited": false, "score": 0, "creation_date": 1425380892, "post_id": 28829976, "comment_id": 45930350, "body": "I know right :( It silently exits"}, {"owner": {"reputation": 10320, "user_id": 453616, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f5c35ad8a6275273c50d1274fd549d84?s=128&d=identicon&r=PG", "display_name": "gspr", "link": "https://stackoverflow.com/users/453616/gspr"}, "edited": false, "score": 0, "creation_date": 1425382664, "post_id": 28829976, "comment_id": 45931464, "body": "What&#39;s the exit code? Have you run with GDB?"}, {"owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "edited": false, "score": 2, "creation_date": 1425382789, "post_id": 28829976, "comment_id": 45931530, "body": "I\u2019m on Windows. The exit code is 9"}, {"owner": {"reputation": 359, "user_id": 1924817, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33867bd74b16d7ca6bfb658964dfe878?s=128&d=identicon&r=PG", "display_name": "akegalj", "link": "https://stackoverflow.com/users/1924817/akegalj"}, "edited": false, "score": 0, "creation_date": 1425456622, "post_id": 28829976, "comment_id": 45966218, "body": "If you could provide us with actual code, I could try compiling it on my machine."}, {"owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "edited": false, "score": 0, "creation_date": 1425477665, "post_id": 28829976, "comment_id": 45978705, "body": "Sure. <code>cabal update</code>, <code>cabal install al</code>, and <a href=\"http://lpaste.net/121536\" rel=\"nofollow noreferrer\">this code</a>. <code>al</code> exports symbols with standard <code>foreign import</code>."}], "owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 211, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1425399934, "creation_date": 1425380060, "last_edit_date": 1425399934, "question_id": 28829976, "link": "https://stackoverflow.com/questions/28829976/ffi-and-static-libraries-used-in-application", "title": "FFI and static libraries used in application", "body": "<p>I wrote a Haskell library that links against a C library \u2013 a <em>static</em> one. Compilation is done perfectly, and <code>cabal repl</code> gives me access to the functions imported from the static C lib.</p>\n\n<p>Now, if I install my library in a sandbox of an application I\u2019m writing, and run the application, it crashes at startup. <code>cabal repl</code> and using the C functions in the app sandbox works perfectly.</p>\n\n<p>Moreover, I\u2019m on Windows 64-bit and the exit code of the application is 9, which is ERROR_INVALID_BLOCK. <a href=\"http://lpaste.net/8641330300967714816\" rel=\"nofollow\">More info here</a>.</p>\n\n<p>I don\u2019t have any clue why the application doesn\u2019t run\u2026 Any idea folks?</p>\n"}, {"tags": ["parsing", "haskell", "compiler-construction", "grammar", "parsec"], "comments": [{"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1425395013, "post_id": 28828586, "comment_id": 45939611, "body": "This doesn&#39;t answer your question, but you <i>might</i> be interested in Happy: <a href=\"https://www.haskell.org/happy/\" rel=\"nofollow noreferrer\">haskell.org/happy</a> It&#39;s a program that reads a BNF specification and generates a Haskell parser."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1425396876, "post_id": 28828586, "comment_id": 45940981, "body": "One of your problems is that BNF grammar is usually described for language tokens, but you have a Char based parser which means you have to do tokenizing (parsing of the tokens) and parsing the actual language you&#39;re interested in in one step."}], "answers": [{"tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": false, "score": 3, "last_activity_date": 1425403527, "last_edit_date": 1425403527, "creation_date": 1425403120, "answer_id": 28837958, "question_id": 28828586, "link": "https://stackoverflow.com/questions/28828586/is-there-any-trick-about-translating-bnf-to-parsec-program/28837958#28837958", "title": "Is there any trick about translating BNF to Parsec program?", "body": "<p>The simplest think you could do if your grammar is sizeable is to just use the Alex/Happy combo. It is fairly straightforward to use, accepts the BNF format directly - no human translation needed - and perhaps most importantly, produces blazingly fast parsers/lexers. </p>\n\n<p>If you are dead set on doing it with parsec (or you are doing this as a learning exercise), I find it easier in general to do it in two stages; first lexing, then parsing. Parsec will do both!</p>\n\n<p>First write the appropriate types:</p>\n\n<pre><code>{-# LANGUAGE LambdaCase #-}\n\nimport Text.Parsec \nimport Text.Parsec.Combinator \nimport Text.Parsec.Prim\nimport Text.Parsec.Pos\nimport Text.ParserCombinators.Parsec.Char \nimport Control.Applicative hiding ((&lt;|&gt;))\nimport Control.Monad \n\ndata Term = App Term Term | Var String deriving (Show, Eq)\n\ndata Token = LParen | RParen | Str String deriving (Show, Eq)\n\ntype Lexer = Parsec [Char] ()   -- A lexer accepts a stream of Char\ntype Parser = Parsec [Token] () -- A parser accepts a stream of Token\n</code></pre>\n\n<p>Parsing a single token is simple. For simplicity, a variable is 1 or more letters. You can of course change this however you like.</p>\n\n<pre><code>oneToken :: Lexer Token\noneToken = (char '(' &gt;&gt; return LParen) &lt;|&gt; \n           (char ')' &gt;&gt; return RParen) &lt;|&gt;\n           (Str &lt;$&gt; many1 letter)\n</code></pre>\n\n<p>Parsing the entire token stream is just parsing a single token many times, possible separated by whitespace:</p>\n\n<pre><code>lexer :: Lexer [Token]\nlexer = spaces &gt;&gt; many1 (oneToken &lt;* spaces) \n</code></pre>\n\n<p>Note the placement of <code>spaces</code>: this way, white space is accepted at the beginning and end of the string. </p>\n\n<p>Since <code>Parser</code> uses a custom token type, you have to use a custom <code>satisfy</code> function. Fortunately, this is almost identical to the existing satisfy.</p>\n\n<pre><code>satisfy' :: (Token -&gt; Bool) -&gt; Parser Token\nsatisfy' f = tokenPrim show \n                       (\\src _ _ -&gt; incSourceColumn src 1) \n                       (\\x -&gt; if f x then Just x else Nothing)\n</code></pre>\n\n<p>Then we can write parsers for each of the primitive tokens.</p>\n\n<pre><code>lparen = satisfy' $ \\case { LParen -&gt; True ; _ -&gt; False } \nrparen = satisfy' $ \\case { RParen -&gt; True ; _ -&gt; False } \nstrTok = (\\(Str s) -&gt; s) &lt;$&gt; (satisfy' $ \\case { Str {} -&gt; True ; _ -&gt; False })\n</code></pre>\n\n<p>As you may imagine, <code>parens</code> would be useful for our purposes. It is very straightforward to write. </p>\n\n<pre><code>parens :: Parser a -&gt; Parser a \nparens = between lparen rparen \n</code></pre>\n\n<p>Now the interesting parts.</p>\n\n<pre><code>term, expr, var :: Parser Term\n\nterm = parens expr &lt;|&gt; var\n\nvar = Var &lt;$&gt; strTok \n</code></pre>\n\n<p>These two should be fairly obvious to you.</p>\n\n<p>Parec contains combinators <code>option</code> and <code>optionMaybe</code> which are useful when you you need to \"maybe do something\".</p>\n\n<pre><code>expr = do \n  e0 &lt;- term \n  option e0 (parens expr &gt;&gt;= \\e1 -&gt; return (App e0 e1))\n</code></pre>\n\n<p>The last line means - try to apply the parser given to <code>option</code> - if it fails, instead return <code>e0</code>.</p>\n\n<p>For testing you can do:</p>\n\n<pre><code>tokAndParse = runParser (lexer &lt;* eof) () \"\" &gt;=&gt; runParser (expr &lt;* eof) () \"\"\n</code></pre>\n\n<p>The <code>eof</code> attached to each parser is to make sure that the entire input is consumed; the string cannot be a member of the grammar if there are extra trailing characters. Note - your example <code>x(y)(z)</code> is not actually in your grammar!</p>\n\n<pre><code>&gt;tokAndParse \"x(y)(z)\"\nLeft (line 1, column 5):\nunexpected LParen\nexpecting end of input\n</code></pre>\n\n<p>But the following is</p>\n\n<pre><code>&gt;tokAndParse \"(x(y))(z)\"\nRight (App (App (Var \"x\") (Var \"y\")) (Var \"z\"))\n</code></pre>\n"}], "owner": {"reputation": 171, "user_id": 1379984, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/36e8abfa641b16a395aa59a47cd40dc0?s=128&d=identicon&r=PG", "display_name": "Ghjhdf", "link": "https://stackoverflow.com/users/1379984/ghjhdf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 536, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1425403527, "creation_date": 1425376068, "question_id": 28828586, "link": "https://stackoverflow.com/questions/28828586/is-there-any-trick-about-translating-bnf-to-parsec-program", "title": "Is there any trick about translating BNF to Parsec program?", "body": "<p>The BNF that match function call chain (like <code>x(y)(z)...</code>):</p>\n\n<pre><code>expr = term T\nT    = (expr) T\n      | EMPTY\nterm = (expr)\n      | VAR \n</code></pre>\n\n<p>Translate it to Parsec program that looks so tricky.</p>\n\n<pre><code>term :: Parser Term\nterm = parens expr &lt;|&gt; var\n\nexpr :: Parser Term\nexpr = do whiteSpace\n          e &lt;- term\n          maybeAddSuffix e\n  where addSuffix e0 = do e1 &lt;- parens expr\n                          maybeAddSuffix $ TermApp e0 e1\n        maybeAddSuffix e = addSuffix e\n                           &lt;|&gt; return e\n</code></pre>\n\n<p>Could you list all the design patterns about  translating BNF to Parsec program?</p>\n"}, {"tags": ["haskell", "three-valued-logic"], "answers": [{"comments": [{"owner": {"reputation": 1764, "user_id": 2478883, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ys9QL.png?s=128&g=1", "display_name": "Ryoichiro Oka", "link": "https://stackoverflow.com/users/2478883/ryoichiro-oka"}, "edited": false, "score": 0, "creation_date": 1425407454, "post_id": 28828992, "comment_id": 45947694, "body": "Thanks for your answer! :)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 4, "last_activity_date": 1425377265, "creation_date": 1425377265, "answer_id": 28828992, "question_id": 28828522, "link": "https://stackoverflow.com/questions/28828522/all-possible-combinations-of-three-valued-logic-values/28828992#28828992", "title": "All possible combinations of Three-valued logic values", "body": "<p><code>replicateM</code> does exactly that:</p>\n\n<pre><code>&gt; import Control.Monad\n&gt; replicateM 2 [1,2,3]\n[[1,1],[1,2],[1,3],[2,1],[2,2],[2,3],[3,1],[3,2],[3,3]]\n</code></pre>\n\n<p>Hence,</p>\n\n<pre><code>all :: Int -&gt; [[Tril]]\nall amount = replicateM amount [FALSE,NULL,TRUE]\n</code></pre>\n\n<p>I'd suggest to pick anouther name, since <code>all</code> is already taken by <code>Prelude.all</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1764, "user_id": 2478883, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ys9QL.png?s=128&g=1", "display_name": "Ryoichiro Oka", "link": "https://stackoverflow.com/users/2478883/ryoichiro-oka"}, "edited": false, "score": 0, "creation_date": 1425407512, "post_id": 28829193, "comment_id": 45947731, "body": "Thanks for your detail answer!"}], "tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": true, "score": 7, "last_activity_date": 1425377802, "creation_date": 1425377802, "answer_id": 28829193, "question_id": 28828522, "link": "https://stackoverflow.com/questions/28828522/all-possible-combinations-of-three-valued-logic-values/28829193#28829193", "title": "All possible combinations of Three-valued logic values", "body": "<p>You can do this very simply as a list comprehension:</p>\n\n<pre><code>all2 = [ (v1, v2) | v1 &lt;- [FALSE, TRUE, NULL], v2 &lt;- [FALSE, TRUE, NULL] ]\n</code></pre>\n\n<p>You can write it equivalently as a monadic do-block:</p>\n\n<pre><code>all2 = do\n  v1 &lt;- [FALSE, TRUE, NULL]\n  v2 &lt;- [FALSE, TRUE, NULL]\n  return (v1, v2)\n</code></pre>\n\n<p>And that gives us an idea for how we can write the variable-size one:</p>\n\n<pre><code>all 0 = [[]] -- Note: Empty list with one empty item.\nall n = do\n  v  &lt;- [FALSE, TRUE, NULL]\n  vs &lt;- all (n-1)\n  return (v:vs)\n</code></pre>\n\n<p>As it turns out &mdash; and this is slightly mind-bending &mdash; this is the net effect of the <code>replicateM</code> function. It takes a monadic action, does it N times, and gathers the results together.</p>\n\n<pre><code>all n = replicateM n [FALSE, TRUE, NULL]\n</code></pre>\n"}], "owner": {"reputation": 1764, "user_id": 2478883, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ys9QL.png?s=128&g=1", "display_name": "Ryoichiro Oka", "link": "https://stackoverflow.com/users/2478883/ryoichiro-oka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 302, "favorite_count": 0, "accepted_answer_id": 28829193, "answer_count": 2, "score": 2, "last_activity_date": 1425377802, "creation_date": 1425375870, "question_id": 28828522, "link": "https://stackoverflow.com/questions/28828522/all-possible-combinations-of-three-valued-logic-values", "title": "All possible combinations of Three-valued logic values", "body": "<p>Is there an algorithm to lead all possible combinations of given amount of three-valued logic values?</p>\n\n<p>For example, <code>F(2)</code> should return this list:</p>\n\n<pre><code>t t\nt u\nt f\nu t\nu u\nu f\nf t\nf u\nf f\n</code></pre>\n\n<p>The function would look like this (in Haskell):</p>\n\n<pre><code>data Tril = FALSE | NULL | TRUE\n\nall :: Int -&gt; [[Tril]]\nall amount = ???\n\nall1 :: [Tril]\nall1 = join (all 1)\n\nall2 :: [(Tril, Tril)]\nall2 = map (\\[f, s] -&gt; (f, s)) (all 2)\n\nall3 :: [(Tril, Tril, Tril)]\nall3 = map (\\[f, s, t] -&gt; (f, s, t)) (all 3)\n</code></pre>\n"}, {"tags": ["haskell", "reflection", "module", "generic-programming"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1425375971, "post_id": 28828416, "comment_id": 45927279, "body": "Probably you are looking for this: <a href=\"https://hackage.haskell.org/package/reflection\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/reflection</a>"}, {"owner": {"reputation": 7947, "user_id": 997606, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/b6117f6630078d6612afa75fb8e5bc9a?s=128&d=identicon&r=PG", "display_name": "Tom Ellis", "link": "https://stackoverflow.com/users/997606/tom-ellis"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1425409369, "post_id": 28828416, "comment_id": 45948914, "body": "@Sibi: Don&#39;t think so."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425418572, "post_id": 28828416, "comment_id": 45953785, "body": "I think the only way to do something like this is with Template Haskell and haskell-src-meta. I can&#39;t imagine the use case for this, however - your explanation doesn&#39;t exactly make sense to me."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425676639, "post_id": 28828416, "comment_id": 46074944, "body": "@user2407038 I&#39;ve thought a bit about a &quot;philosophical&quot; ground for use cases for this. Well, generic programming lets one process data structures generically: having only one implementation of an algorithm. What if we want similarly process functions generically (from the set exposed by a module). Say, if a function has 2 arguments, a name, and a result type, and there are generic <code>encode</code>&amp;<code>decode</code> functions for the types of the arguments and of the result (like that from <code>ToJSON</code>&amp;<code>FromJSON</code> classes from Aeson), then we could build a program which responds with any plugged-in 2-arg function."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425676966, "post_id": 28828416, "comment_id": 46075103, "body": "@user2407038 Yes, it&#39;s like a use for Template Haskell. And stuff done by Generic basically can also be done by TH, can&#39;t it? Generic gives perhaps a bit more guarantees: if your generic function implementation has type-checked, it is guaranteed to work with any data of the given structure. TH&#39;s direct manipulations with syntax can&#39;t probably be thought as being guaranteed to work always, on every use (but when the templates are used, the compiler checks them). So the difference is probably in the places (compilation units) where the check is done: where the algorithm is written vs used."}], "owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 100, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1425675621, "creation_date": 1425375534, "last_edit_date": 1425675621, "question_id": 28828416, "link": "https://stackoverflow.com/questions/28828416/is-there-an-implementation-for-module-reflection-representation-similar-to-gene", "title": "Is there an implementation for module reflection/representation (similar to Generic for types, data)?", "body": "<p>I've read about <a href=\"https://www.haskell.org/platform/doc/2014.2.0.0/ghc/users_guide/generic-programming.html\" rel=\"nofollow\">generic programming</a> in Haskell with the use of <code>Generic</code> typeclass, as well as various older type-representations. (I've still haven't figured out the fine differences between the available stuff for this, the pros and cons. People did similar things before without <code>Generic</code>, and it's not clear yet for me what it gives now additionally. But that's not the topic of this question.)</p>\n\n<p>Is it possible to \"reflect\" in a similar way the interface of a module, so that I can programmatically access the list of exported functions (and types), and convert from a representation with a name of the function to the function.</p>\n\n<p>My idea for using this is the following:</p>\n\n<ul>\n<li><p>What is possible already: when the compiled program is run, it reads a formatted representation of data and evaluates a fixed function on it. (The format writer and reader are implemented by using the instances of a typeclass providing generic representations, like aeson or aeson-generic for formatting in JSON.)</p></li>\n<li><p>Now I want to add another bit: the name of the function to call is read, too. It determines the type of the data, and the used reader for the data. Reads the input data, and evaluates the function on this data.</p></li>\n</ul>\n\n<p>To save manually writing the module interface in a function which does this interaction, I thought there might be some approaches to module reflection similar to generics.</p>\n\n<hr>\n\n<p>An example of reflection for types, data from <a href=\"https://www.haskell.org/platform/doc/2014.2.0.0/ghc/users_guide/generic-programming.html\" rel=\"nofollow\">https://www.haskell.org/platform/doc/2014.2.0.0/ghc/users_guide/generic-programming.html</a>:</p>\n\n<pre><code>instance Generic (UserTree a) where\n  -- Representation type\n  type Rep (UserTree a) =\n    M1 D D1UserTree (\n          M1 C C1_0UserTree (\n                M1 S NoSelector (K1 R a)\n            :*: M1 S NoSelector (K1 R (UserTree a))\n            :*: M1 S NoSelector (K1 R (UserTree a)))\n      :+: M1 C C1_1UserTree U1)\n\n  -- Conversion functions\n  from (Node x l r) = M1 (L1 (M1 (M1 (K1 x) :*: M1 (K1 l) :*: M1 (K1 r))))\n  from Leaf         = M1 (R1 (M1 U1))\n  to (M1 (L1 (M1 (M1 (K1 x) :*: M1 (K1 l) :*: M1 (K1 r))))) = Node x l r\n  to (M1 (R1 (M1 U1)))                                      = Leaf\n\n-- Meta-information\ndata D1UserTree\ndata C1_0UserTree\ndata C1_1UserTree\n\ninstance Datatype D1UserTree where\n  datatypeName _ = \"UserTree\"\n  moduleName _   = \"Main\"\n\ninstance Constructor C1_0UserTree where\n  conName _ = \"Node\"\n\ninstance Constructor C1_1UserTree where\n  conName _ = \"Leaf\"\n</code></pre>\n"}, {"tags": ["haskell", "compiler-construction", "interpreter", "parsec", "lambda-calculus"], "answers": [{"comments": [{"owner": {"reputation": 171, "user_id": 1379984, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/36e8abfa641b16a395aa59a47cd40dc0?s=128&d=identicon&r=PG", "display_name": "Ghjhdf", "link": "https://stackoverflow.com/users/1379984/ghjhdf"}, "edited": false, "score": 0, "creation_date": 1425371051, "post_id": 28826970, "comment_id": 45924527, "body": "Thank you so much and it is solved. I learned this code framework from <a href=\"https://github.com/JakeWheat/intro_to_parsing\" rel=\"nofollow noreferrer\">github.com/JakeWheat/intro_to_parsing</a> , but I do not understand the <code>term</code> and <code>termE</code>. Why do I need the <code>termE e</code> just pass <code>expr</code> as the argument always? How can I correspond it to BNF?"}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "reply_to_user": {"reputation": 171, "user_id": 1379984, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/36e8abfa641b16a395aa59a47cd40dc0?s=128&d=identicon&r=PG", "display_name": "Ghjhdf", "link": "https://stackoverflow.com/users/1379984/ghjhdf"}, "edited": false, "score": 1, "creation_date": 1425372140, "post_id": 28826970, "comment_id": 45925063, "body": "@fiigii You don&#39;t really need <code>termE</code> in such a simple case, I would assume the tutorial uses it for more than one purpose? The rest is too big to answer in a comment, maybe you should post a new question?"}, {"owner": {"reputation": 171, "user_id": 1379984, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/36e8abfa641b16a395aa59a47cd40dc0?s=128&d=identicon&r=PG", "display_name": "Ghjhdf", "link": "https://stackoverflow.com/users/1379984/ghjhdf"}, "edited": false, "score": 0, "creation_date": 1425376114, "post_id": 28826970, "comment_id": 45927365, "body": "I have posted a question about it. <a href=\"http://stackoverflow.com/questions/28828586/is-there-any-trick-about-translating-bnf-to-parsec-program\" title=\"is there any trick about translating bnf to parsec program\">stackoverflow.com/questions/28828586/&hellip;</a>"}], "tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": true, "score": 3, "last_activity_date": 1425370520, "creation_date": 1425370520, "answer_id": 28826970, "question_id": 28825807, "link": "https://stackoverflow.com/questions/28825807/how-to-manually-manipulate-precedence-of-special-expressions-in-parsec/28826970#28826970", "title": "How to manually manipulate precedence of special expressions in Parsec?", "body": "<p>In the definition of <code>func</code>, <code>body &lt;- term</code> means the body can only consist of a simple term. To allow all expressions in a function body, change it to <code>body &lt;- expr</code>.</p>\n"}], "owner": {"reputation": 171, "user_id": 1379984, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/36e8abfa641b16a395aa59a47cd40dc0?s=128&d=identicon&r=PG", "display_name": "Ghjhdf", "link": "https://stackoverflow.com/users/1379984/ghjhdf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 28826970, "answer_count": 1, "score": 3, "last_activity_date": 1425370520, "creation_date": 1425365742, "last_edit_date": 1425370230, "question_id": 28825807, "link": "https://stackoverflow.com/questions/28825807/how-to-manually-manipulate-precedence-of-special-expressions-in-parsec", "title": "How to manually manipulate precedence of special expressions in Parsec?", "body": "<p>I tried to write a parser for a lambda-calculus interpreter that uses the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Expression_Closures\" rel=\"nofollow\">expression closures</a> grammars of JavaScript 1.8, which means <code>function(x) x * x</code> same with <code>function(x) { return x * x; }</code>. </p>\n\n<p>Here is my parser code.</p>\n\n<pre><code>module Parser where\n\nimport Text.Parsec\nimport Text.Parsec.String\nimport qualified Text.Parsec.Token as P\nimport qualified Text.ParserCombinators.Parsec.Token as T\nimport Text.Parsec.Language (emptyDef)\nimport Text.Parsec.Expr\nimport Control.Applicative ((&lt;*&gt;), (&lt;$&gt;), (*&gt;), (&lt;*), pure, (&lt;$))\nimport Control.Monad\n\nimport Ast\n\njsparse :: String -&gt; Either ParseError [Term]\njsparse  = parse prog \"\"\n\n-- The scanner.\nlexer = P.makeTokenParser emptyDef {\n  T.commentStart = \"/*\",\n  T.commentEnd   = \"*/\",\n  T.commentLine  = \"//\",\n  T.nestedComments = True,\n  T.identStart = letter &lt;|&gt; char '_' &lt;|&gt; char '$',\n  T.identLetter     = alphaNum,\n  T.reservedNames   = [\"function\"],\n  T.reservedOpNames = [\"=\"],\n  T.caseSensitive   = True\n}\n\nparens = P.parens lexer\nreserved = P.reserved lexer\nidentifier = P.identifier lexer\nwhiteSpace = P.whiteSpace lexer\nsemi = P.semi lexer\n\n-- The parser\nprog :: Parser [Term]\nprog = expr `endBy` semi\n\nterm :: Parser Term\nterm = termE expr\n\ntermE :: Parser Term -&gt; Parser Term\ntermE e = try (parens e) &lt;|&gt; try var &lt;|&gt; func\n\nexpr :: Parser Term\nexpr = do whiteSpace\n          e &lt;- term\n          maybeAddSuffix e\n  where addSuffix e0 = do e1 &lt;- term\n                          maybeAddSuffix $ TermApp e0 e1\n        maybeAddSuffix e = addSuffix e\n                           &lt;|&gt; return e\n\nvar :: Parser Term\nvar = do whiteSpace\n         v &lt;- identifier\n         return $ TermVar v\n\nfunc :: Parser Term\nfunc  = do whiteSpace\n           reserved \"function\"\n           v  &lt;- parens identifier\n           body &lt;- term\n           return $ TermAbs v body \n</code></pre>\n\n<p>However, there is a trouble that <code>function(x) x(x)</code> should be parsed to <code>(function(x) (x(x)))</code>, but my parser gets <code>(function(x) x) (x)</code>. </p>\n"}, {"tags": ["function", "haskell", "types", "functor", "function-composition"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 3, "creation_date": 1425365999, "post_id": 28825354, "comment_id": 45922318, "body": "<code>Num a =&gt; a -&gt; a</code> and <code>f (x -&gt; y)</code> do not align well, you end up with <code>f ~ (-&gt;) a</code> and <code>a ~ x -&gt; y</code>, hence <code>Num (x -&gt; y)</code>.  A more interesting one might be <code>fmap ($ [1, 2, 3]) $ fmap fmap $ fmap (+) $ Just 10</code>, which returns <code>Just [11,12,13]</code>.  A more useful <code>Functor</code> combinator might be <code>fmap fmap fmap</code>, which lets you just list a function through two different <code>Functor</code>s:  <code>(.:) = fmap fmap fmap</code>; <code>(10*) .: [Just 1, Nothing, Just 3] == [Just 10, Nothing, Just 30]</code>"}, {"owner": {"reputation": 44721, "user_id": 546084, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/wMoWk.jpg?s=128&g=1", "display_name": "Chris Taylor", "link": "https://stackoverflow.com/users/546084/chris-taylor"}, "edited": false, "score": 0, "creation_date": 1425369071, "post_id": 28825354, "comment_id": 45923644, "body": "Note that <code>fmap fmap fmap</code> is equivalent to <code>fmap . fmap</code> since the outer functor is forced to be <code>(-&gt;) (a -&gt; b)</code> (which is why asking for the type of <code>fmap fmap fmap</code> only specifies two functors in its constraints)."}, {"owner": {"reputation": 2001, "user_id": 988361, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9a433a44669c3a5dd72fb9065ec52b81?s=128&d=identicon&r=PG", "display_name": "egdmitry", "link": "https://stackoverflow.com/users/988361/egdmitry"}, "edited": false, "score": 0, "creation_date": 1425370710, "post_id": 28825354, "comment_id": 45924353, "body": "But why does <code>(fmap fmap (*3))</code> typecheck? I guess I am just with ghci difference in handling two functions with the argument of the same type (<code>(fmap fmap (*3))</code> and <code>test (*3)</code>)"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 1, "creation_date": 1425376356, "post_id": 28825354, "comment_id": 45927520, "body": "<code>fmap fmap fmap</code> looks really weird"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425403859, "post_id": 28825354, "comment_id": 45945694, "body": "<code>test (*3)</code> produces a type error because the type variables <code>a</code> and <code>b</code> are not present in the output type. Since there is a <code>Num (a -&gt; b)</code> constraint, this constraint must be resolved when this function is applied (because it cannot be resolved later). Since no such instance exists, you get a type error at that moment. Change it to <code>test :: (Functor f) =&gt; f (a -&gt; b) -&gt; (a,b)</code> and you will get <code>test (*3) :: Num (a -&gt; b) =&gt; (a, b)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "is_accepted": false, "score": 5, "last_activity_date": 1440457889, "last_edit_date": 1495541631, "creation_date": 1440457889, "answer_id": 32193149, "question_id": 28825354, "link": "https://stackoverflow.com/questions/28825354/how-does-fmap-fmap-apply-to-functions-as-arguments/32193149#32193149", "title": "How does fmap fmap apply to functions (as arguments)?", "body": "<p>Polymorphism is dangerous when you do not know what you are doing. Both <code>fmap</code> and <code>(*)</code> are polymorphic functions and using them blindly can lead to very confusing (and possibly incorrect) code. I  have answered a similar question before:</p>\n\n<p><a href=\"https://stackoverflow.com/q/27664213/783743\">What is happening when I compose * with + in Haskell?</a></p>\n\n<p>In such cases, I believe that looking at the types of values can help you figure out where you are going wrong and how to rectify the problem. Let's start with the type signature of <code>fmap</code>:</p>\n\n<pre><code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n                     |______|    |________|\n                         |            |\n                      domain      codomain\n</code></pre>\n\n<p>The type signature of <code>fmap</code> is easy to understand. It lifts a function from <code>a</code> to <code>b</code> into the context of a functor, whatever that functor may be (e.g. list, maybe, either, etc.).</p>\n\n<p>The words \"domain\" and \"codomain\" just mean \"input\" and \"output\" respectively. Anyway, let's see what happens when we apply <code>fmap</code> to <code>fmap</code>:</p>\n\n<pre><code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n                     |______|\n                         |\n                       fmap :: Functor g =&gt; (x -&gt; y) -&gt; g x -&gt; g y\n                                            |______|    |________|\n                                                |            |\n                                                a    -&gt;      b\n</code></pre>\n\n<p>As you can see, <code>a := x -&gt; y</code> and <code>b := g x -&gt; g y</code>. In addition, the <code>Functor g</code> constraint is added. This gives us the type signature of <code>fmap fmap</code>:</p>\n\n<pre><code>fmap fmap :: (Functor f, Functor g) =&gt; f (x -&gt; y) -&gt; f (g x -&gt; g y)\n</code></pre>\n\n<p>So, what does <code>fmap fmap</code> do? The first <code>fmap</code> has lifted the second <code>fmap</code> into the context of a functor <code>f</code>. Let's say that <code>f</code> is <code>Maybe</code>. Hence, on specializing:</p>\n\n<pre><code>fmap fmap :: Functor g =&gt; Maybe (x -&gt; y) -&gt; Maybe (g x -&gt; g y)\n</code></pre>\n\n<p>Hence <code>fmap fmap</code> must be applied to a <code>Maybe</code> value with a function inside it. What <code>fmap fmap</code> does is that it lifts the function inside the <code>Maybe</code> value into the context of another functor <code>g</code>. Let's say that <code>g</code> is <code>[]</code>. Hence, on specializing:</p>\n\n<pre><code>fmap fmap :: Maybe (x -&gt; y) -&gt; Maybe ([x] -&gt; [y])\n</code></pre>\n\n<p>If we apply <code>fmap fmap</code> to <code>Nothing</code> then we get <code>Nothing</code>. However, if we apply it to <code>Just (+1)</code> then we get a function that increments every number of a list, wrapped in a <code>Just</code> constructor (i.e. we get <code>Just (fmap (+1))</code>).</p>\n\n<p>However, <code>fmap fmap</code> is more general. What it actually does it that it looks inside a functor <code>f</code> (whatever <code>f</code> may be) and lifts the function(s) inside <code>f</code> into the context of another functor <code>g</code>.</p>\n\n<p>So far so good. So what's the problem? The problem is when you apply <code>fmap fmap</code> to <code>(*3)</code>. This is stupid and dangerous, like drinking and driving. Let me tell you why it's stupid and dangerous. Take a look at the type signature of <code>(*3)</code>:</p>\n\n<pre><code>(*3) :: Num a =&gt; a -&gt; a\n</code></pre>\n\n<p>When you apply <code>fmap fmap</code> to <code>(*3)</code> then the functor <code>f</code> is specialized to <code>(-&gt;) r</code> (i.e. a function). A function is a valid functor. The <code>fmap</code> function for <code>(-&gt;) r</code> is simply function composition. Hence, the type of <code>fmap fmap</code> on specializing is:</p>\n\n<pre><code>fmap fmap :: Functor g =&gt; (r -&gt; x -&gt; y) -&gt; r -&gt; g x -&gt; g y\n\n-- or\n\n(.)  fmap :: Functor g =&gt; (r -&gt; x -&gt; y) -&gt; r -&gt; g x -&gt; g y\n                          |___________|\n                                |\n                              (*3) :: Num a =&gt; a -&gt;    a\n                                               |       |\n                                               |    ------\n                                               |    |    |\n                                               r -&gt; x -&gt; y\n</code></pre>\n\n<p>Do you see why it's stupid and dangerous?</p>\n\n<ol>\n<li>It's stupid because you are applying a function which expects an input function with two arguments (<code>r -&gt; x -&gt; y</code>) to a function with only one argument, <code>(*3) :: Num a =&gt; a -&gt; a</code>.</li>\n<li>It's dangerous because the output of <code>(*3)</code> is polymorphic. Hence, the compiler doesn't tell you that you are doing something stupid. Luckily, because the output is bounded you get a type constraint <code>Num (x -&gt; y)</code> which should indicate that you have gone wrong somewhere.</li>\n</ol>\n\n<p>Working out the types, <code>r := a := x -&gt; y</code>. Hence, we get the following type signature:</p>\n\n<pre><code>fmap . (*3) :: (Num (x -&gt; y), Functor g) =&gt; (x -&gt; y) -&gt; g x -&gt; g y\n</code></pre>\n\n<p>Let me show you why it's wrong using values:</p>\n\n<pre><code>  fmap . (*3)\n= \\x -&gt; fmap (x * 3)\n             |_____|\n                |\n                +--&gt; You are trying to lift a number into the context of a functor!\n</code></pre>\n\n<p>What you really want to do is apply <code>fmap fmap</code> to <code>(*)</code>, which is a binary function:</p>\n\n<pre><code>(.) fmap :: Functor g =&gt; (r -&gt; x -&gt; y) -&gt; r -&gt; g x -&gt; g y\n                         |___________|\n                               |\n                              (*) :: Num a =&gt; a -&gt; a -&gt; a\n                                              |    |    |\n                                              r -&gt; x -&gt; y\n</code></pre>\n\n<p>Hence, <code>r := x := y := a</code>. This gives you the type signature:</p>\n\n<pre><code>fmap . (*) :: (Num a, Functor g) =&gt; a -&gt; g a -&gt; g a\n</code></pre>\n\n<p>This makes even more sense when you see the values:</p>\n\n<pre><code>  fmap . (*)\n= \\x -&gt; fmap (x *)\n</code></pre>\n\n<p>Hence, <code>fmap fmap (*) 3</code> is simply <code>fmap (3*)</code>.</p>\n\n<p>Finally, you have the same problem with your <code>test</code> function:</p>\n\n<pre><code>test :: Functor f =&gt; f (a -&gt; b) -&gt; Bool\n</code></pre>\n\n<p>On specializing functor <code>f</code> to <code>(-&gt;) r</code> we get:</p>\n\n<pre><code>test :: (r -&gt; a -&gt; b) -&gt; Bool\n        |___________|\n              |\n            (*3) :: Num x =&gt; x -&gt;    x\n                             |       |\n                             |    ------\n                             |    |    |\n                             r -&gt; a -&gt; b\n</code></pre>\n\n<p>Hence, <code>r := x := a -&gt; b</code>. Thus we get type signature:</p>\n\n<pre><code>test (*3) :: Num (a -&gt; b) =&gt; Bool\n</code></pre>\n\n<p>Since neither <code>a</code> nor <code>b</code> appear in the output type, the constraint <code>Num (a -&gt; b)</code> must be resolved immediately. If <code>a</code> or <code>b</code> appeared in the output type then they could be specialized and a different instance of <code>Num (a -&gt; b)</code> could be chosen. However, because they don't appear in the output type the compiler has to decide which instance of <code>Num (a -&gt; b)</code> to choose immediately; and because <code>Num (a -&gt; b)</code> is a stupid constraint which doesn't have any instance, the compiler throws an error.</p>\n\n<p>If you try <code>test (*)</code> then you won't get any error, for the same reason that I mentioned above.</p>\n"}], "owner": {"reputation": 2001, "user_id": 988361, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9a433a44669c3a5dd72fb9065ec52b81?s=128&d=identicon&r=PG", "display_name": "egdmitry", "link": "https://stackoverflow.com/users/988361/egdmitry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 550, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1440457889, "creation_date": 1425363701, "question_id": 28825354, "link": "https://stackoverflow.com/questions/28825354/how-does-fmap-fmap-apply-to-functions-as-arguments", "title": "How does fmap fmap apply to functions (as arguments)?", "body": "<p>I am trying to understand how <code>fmap fmap</code> applies to a function like say <code>(*3)</code>.</p>\n\n<p>The type of <code>fmap fmap</code>:</p>\n\n<pre><code>(fmap fmap):: (Functor f1, Functor f) =&gt; f (a -&gt; b) -&gt; f (f1 a -&gt; f1 b)\n</code></pre>\n\n<p>Type of <code>(*3)</code>:</p>\n\n<pre><code>(*3) :: Num a =&gt; a -&gt; a\n</code></pre>\n\n<p>Which means that the signature <code>a -&gt; a</code> corresponds to <code>f (a -&gt; b)</code>, right?</p>\n\n<pre><code>Prelude&gt; :t (fmap fmap (*3))\n(fmap fmap (*3)):: (Num (a -&gt; b), Functor f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>I have tried creating a simple test:</p>\n\n<pre><code>test :: (Functor f) =&gt; f (a -&gt; b) -&gt; Bool \ntest f = True\n</code></pre>\n\n<p>And feeding <code>(*3)</code> into it, but I get:</p>\n\n<pre><code>*Main&gt; :t (test (*3))\n\n&lt;interactive&gt;:1:8:\n    No instance for (Num (a0 -&gt; b0)) arising from a use of \u2018*\u2019\n    In the first argument of \u2018test\u2019, namely \u2018(* 3)\u2019\n    In the expression: (test (* 3))\n</code></pre>\n\n<p>Why is that happening?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425361256, "post_id": 28824414, "comment_id": 45920527, "body": "In <code>sch&#246;nfinkel</code>, if <code>f</code> has type <code>(a,b) -&gt; c</code>then you can&#39;t apply it to 2 arguments as you&#39;ve done. And you pattern match on a tuple but the type says there are two more arguments, neither of which is a tuple."}], "answers": [{"tags": [], "owner": {"reputation": 51, "user_id": 3190914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c29c19cb2dd4abb020849b5967435c85?s=128&d=identicon&r=PG&f=1", "display_name": "Jeyaganesh", "link": "https://stackoverflow.com/users/3190914/jeyaganesh"}, "is_accepted": false, "score": -5, "last_activity_date": 1425359536, "creation_date": 1425359536, "answer_id": 28824549, "question_id": 28824414, "link": "https://stackoverflow.com/questions/28824414/how-to-understand-the-function-definitions-of-curry-uncurry/28824549#28824549", "title": "How to understand the function definitions of curry/uncurry", "body": "<p>Here is a small piece of explanation about curry from Groovy In Action by Dierk &amp; Co</p>\n\n<p>The basic idea is to take a function with multiple parameters\nand transform it into a function with fewer parameters by fixing some of the values. A classic example is to choose some arbitrary value n and transform a function that sums two parameters into a function that takes a single parameter and adds n to it.</p>\n\n<p>Groovy has a built-in Closure's method called <strong><em>curry</em></strong> which takes arbitrary values to bind to closures arguments and return the clone of closure after being bound the values to the respective arguments. Please refer the below link for detailed understanding</p>\n\n<p><a href=\"http://groovy.codehaus.org/Functional+Programming+with+Groovy\" rel=\"nofollow\">Groovy functional programming</a> </p>\n"}, {"comments": [{"owner": {"reputation": 3369, "user_id": 645703, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/53dff9cde38dd11e5e3f2368a3da1193?s=128&d=identicon&r=PG", "display_name": "Matt Elson", "link": "https://stackoverflow.com/users/645703/matt-elson"}, "edited": false, "score": 0, "creation_date": 1425380605, "post_id": 28826016, "comment_id": 45930179, "body": "Please confirm if my understanding is right: f (x,y) (the function body of sch&#246;nfinkel) doesn&#39;t mean it is a FUNCTION, which just is one VAULE of f with the tuple (x,y). am I right?"}, {"owner": {"reputation": 23343, "user_id": 1730, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07f21e679da438a4fb2935ee8836b9da?s=128&d=identicon&r=PG", "display_name": "Nicolas", "link": "https://stackoverflow.com/users/1730/nicolas"}, "reply_to_user": {"reputation": 3369, "user_id": 645703, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/53dff9cde38dd11e5e3f2368a3da1193?s=128&d=identicon&r=PG", "display_name": "Matt Elson", "link": "https://stackoverflow.com/users/645703/matt-elson"}, "edited": false, "score": 0, "creation_date": 1425381359, "post_id": 28826016, "comment_id": 45930643, "body": "On the right part, <code>f (x,y)</code> is the application of the function <code>f</code> given in parameter to the tuple <code>(x,y)</code> composed of the two last parameters of <code>sch&#246;finkel</code>. According to the signature of <code>f</code>, <code>f (x,y)</code> is interpreted as a &quot;value&quot; of type <code>c</code>."}], "tags": [], "owner": {"reputation": 23343, "user_id": 1730, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07f21e679da438a4fb2935ee8836b9da?s=128&d=identicon&r=PG", "display_name": "Nicolas", "link": "https://stackoverflow.com/users/1730/nicolas"}, "is_accepted": true, "score": 4, "last_activity_date": 1425370034, "last_edit_date": 1425370034, "creation_date": 1425366671, "answer_id": 28826016, "question_id": 28824414, "link": "https://stackoverflow.com/questions/28824414/how-to-understand-the-function-definitions-of-curry-uncurry/28826016#28826016", "title": "How to understand the function definitions of curry/uncurry", "body": "<p>You probably misread / misunderstood the initial code, a proper indentation is probably sufficient to get it right:</p>\n\n<pre><code>sch\u00f6nfinkel :: ((a,b) -&gt; c) -&gt; a -&gt; b -&gt; c\nsch\u00f6nfinkel    f               x    y =  f (x,y)\n\nunsch\u00f6nfinkel :: (a -&gt; b -&gt; c) -&gt; (a,b) -&gt; c\nunsch\u00f6nfinkel    f                (x,y) =  f x y\n</code></pre>\n\n<p>Now, let's open ghci and tried a few things:</p>\n\n<pre><code>&gt;&gt;&gt; let sch\u00f6nfinkel f x y = f (x,y)\n\n&gt;&gt;&gt; let toBeCurried (x,y) = x ++ y\n&gt;&gt;&gt; :t toBeCurried\ntoBeCurried :: ([a], [a]) -&gt; [a]\n\n&gt;&gt;&gt; :t sch\u00f6nfinkel toBeCurried\nsch\u00f6nfinkel toBeCurried :: [a] -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>Look at the unformal definition you gave and you'll see that it matches the behaviour of <code>sch\u00f6nfinkel</code>.</p>\n"}], "owner": {"reputation": 3369, "user_id": 645703, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/53dff9cde38dd11e5e3f2368a3da1193?s=128&d=identicon&r=PG", "display_name": "Matt Elson", "link": "https://stackoverflow.com/users/645703/matt-elson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 1, "accepted_answer_id": 28826016, "answer_count": 2, "score": 1, "last_activity_date": 1425370034, "creation_date": 1425358732, "last_edit_date": 1425367715, "question_id": 28824414, "link": "https://stackoverflow.com/questions/28824414/how-to-understand-the-function-definitions-of-curry-uncurry", "title": "How to understand the function definitions of curry/uncurry", "body": "<p>A definition about curry/uncurry(sch\u00f6nfinkel/unsch\u00f6nfinkel) from <a href=\"http://www.seas.upenn.edu/~cis194/lectures/02-lists.html\" rel=\"nofollow\">http://www.seas.upenn.edu/~cis194/lectures/02-lists.html</a>,</p>\n\n<pre><code>sch\u00f6nfinkel :: ((a,b) -&gt; c) -&gt; a -&gt; b -&gt; c\nsch\u00f6nfinkel f x y = f (x,y)\n\nunsch\u00f6nfinkel :: (a -&gt; b -&gt; c) -&gt; (a,b) -&gt; c\nunsch\u00f6nfinkel f (x,y) = f x y\n</code></pre>\n\n<p>but I think these function definitions above should be:</p>\n\n<pre><code>sch\u00f6nfinkel :: ((a,b) -&gt; c) -&gt; a -&gt; b -&gt; c\nsch\u00f6nfinkel f (x,y) = f x y\n-- sch\u00f6nfinkel(curry) converts an uncurried function \n-- (f (x,y), its type signature is (a,b) -&gt; c)  \n-- to a curried function\n-- (f x y, its type signature is  a -&gt; b -&gt; c) \n\nunsch\u00f6nfinkel :: (a -&gt; b -&gt; c) -&gt; (a,b) -&gt; c\nunsch\u00f6nfinkel f x y = f (x,y)\n-- unsch\u00f6nfinkel(uncurry) converts a curried function  \n-- (f x y , its type signature is a -&gt; b -&gt; c) \n-- to an uncurried function\n-- (f (x,y), its type signature is (a,b) -&gt; c)\n</code></pre>\n\n<p>Please could someone give me a simple explanation ?</p>\n"}, {"tags": ["haskell", "ghc", "functional-dependencies", "type-constraints"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425356216, "post_id": 28823727, "comment_id": 45919083, "body": "What&#39;s wrong with <code>type FooCtx a b = ...</code> - this is only 2 characters longer than <code>type FooCtx a = ...</code>."}, {"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425356338, "post_id": 28823727, "comment_id": 45919110, "body": "As I mentioned above, GHC accepts your signature, but it is useless to me on the LHS of <code>foo</code> because <code>b</code> is not in scope in the signature of <code>foo</code>."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1425358754, "post_id": 28823727, "comment_id": 45919746, "body": "Is there any reason you can&#39;t use <code>TypeFamilies</code> instead of <code>FunctionalDependencies</code>?"}, {"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1425359654, "post_id": 28823727, "comment_id": 45920050, "body": "@Cirdec Now that you mention it, is there ever a reason? Aren&#39;t they isomorphic? That would allow me to bring those new types in scope..."}], "answers": [{"comments": [{"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "edited": false, "score": 0, "creation_date": 1425360182, "post_id": 28824629, "comment_id": 45920209, "body": "How interesting! Thanks."}], "tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": true, "score": 5, "last_activity_date": 1425360043, "creation_date": 1425360043, "answer_id": 28824629, "question_id": 28823727, "link": "https://stackoverflow.com/questions/28823727/bundling-constraints-with-fundeps/28824629#28824629", "title": "Bundling constraints with fundeps", "body": "<p>You are misunderstanding how type variables are bound. They are <strong>not</strong> bound by the tau type (the <code>a -&gt; a</code> in your example), but an implicit binder based on the full phi type (<code>(Bar a b) =&gt; a -&gt; a</code>). This binding can be made explicit with the <code>ExplicitForAll</code> GHC language extension. </p>\n\n<p>In your example, when you write  something like</p>\n\n<pre><code>foo :: (Bar a b) =&gt; a -&gt; a\n</code></pre>\n\n<p>then the full sigma type, with explicit tyvar-binding spelled out, is the following (since in the implicit case, all tyvars from the phi type are bound here)</p>\n\n<pre><code>foo :: forall a b. (Bar a b) =&gt; a -&gt; a\n</code></pre>\n\n<p>This means there is no problem in using a constraint alias the same way: if you have e.g.</p>\n\n<pre><code>type FooCtx a b = (Bar a b, Num a, Eq a)\n</code></pre>\n\n<p>then the following is a valid type signature:</p>\n\n<pre><code>foo' :: forall a b. (FooCtx a b) =&gt; a -&gt; a\n</code></pre>\n\n<p>and thus, the following shorthand is valid as well:</p>\n\n<pre><code>foo' :: (FooCtx a b) =&gt; a -&gt; a\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": false, "score": 1, "last_activity_date": 1425360223, "creation_date": 1425360223, "answer_id": 28824651, "question_id": 28823727, "link": "https://stackoverflow.com/questions/28823727/bundling-constraints-with-fundeps/28824651#28824651", "title": "Bundling constraints with fundeps", "body": "<p>This problem can be solved with <code>TypeFamilies</code> and <code>FlexibleContexts</code>.</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE FlexibleContexts #-}\n</code></pre>\n\n<p>We have three classes, <code>A</code>, <code>B</code>, and <code>C</code> and your original <code>foo</code> function.</p>\n\n<pre><code>class A a\nclass B a\nclass C a\n\nfoo :: (A a, B b, C c) =&gt; a -&gt; b -&gt; c\nfoo = undefined\n</code></pre>\n\n<p>The <code>Bar</code> class uses a type family to figure out what <code>B</code> goes with an <code>a</code>. I've added an additional function to it just to write the example <code>foo'</code>.</p>\n\n<pre><code>class Bar a where\n    type BofA a :: *\n    aToB :: a -&gt; BofA a\n</code></pre>\n\n<p><code>foo'</code> is a function that doesn't have any inputs or outputs that are <code>B</code>, but still uses <code>foo</code> in its implementation. It requires that the <code>BofA</code> type associated with <code>a</code> satisfy the <code>B</code> constraint. This signature requires flexible contexts.</p>\n\n<pre><code>foo' :: (A a, Bar a, B (BofA a), C c) =&gt; a -&gt; a -&gt; c\nfoo' x y = foo x (aToB y)\n</code></pre>\n"}], "owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 1, "accepted_answer_id": 28824629, "answer_count": 2, "score": 2, "last_activity_date": 1425360355, "creation_date": 1425354337, "last_edit_date": 1425360355, "question_id": 28823727, "link": "https://stackoverflow.com/questions/28823727/bundling-constraints-with-fundeps", "title": "Bundling constraints with fundeps", "body": "<p>I've got a function <code>foo</code> with a litany of constraints. Of course these constraints must appear in the signatures of functions that use <code>foo</code>, so what I'm trying to do is wrap the <code>foo</code> constraints in a type synonym <code>FooCtx a b ... :: Constraint</code>. As an example,</p>\n\n<pre><code>foo :: (A a, B b, C c, ...) =&gt; a -&gt; b -&gt; c\n\nbar :: (A a, B b, C c, ...) ...\nbar = ... foo ...\n</code></pre>\n\n<p>would become</p>\n\n<pre><code>type FooCtx a b c ... = (A a, B b, C c, ...)\nfoo :: (FooCtx a b c) =&gt; a -&gt; b -&gt; c\nbar :: (FooCtx a b c) =&gt; ...\n</code></pre>\n\n<p>This works great if all of the types are exposed. However, I'm using functional dependencies to generate some of the types in the constraint list, and those types don't appear in the signature of <code>foo</code>. For example:</p>\n\n<pre><code>class Bar a b | a -&gt; b\n\nfoo (Bar a b, ...) =&gt; a -&gt; a\n</code></pre>\n\n<p>GHC won't accept <code>type FooCtx a = (Bar a b)</code> because <code>b</code> isn't bound on the LHS. Neither can I use <code>type FooCtx a b = (Bar a b)</code> because <code>b</code> isn't in scope in the signature of <code>foo</code>. The signature of <code>foo</code> would be <code>foo :: (FooCtx a ?) =&gt; a -&gt; a</code>.</p>\n\n<p>One unsatisfactory solution is to put one of the constraints in the <code>foo</code> signature with <code>FooCtx</code> to bring the fundep type in to scope:</p>\n\n<pre><code>class Bar a b | a -&gt; b\n\ntype FooCtx a b = ...\n\nfoo (Bar a b, FooCtx a b) =&gt; a -&gt; a\n</code></pre>\n\n<p>but this defeats the purpose of grouping the constraints:</p>\n\n<p>Until encountering this case, I assumed that Constraint synonyms could be blindly substituted for arbitrary constraint lists. The only other way I know to encapsulate constraints like this is with a class, but it suffers from the same problem: <code>class (A a, B b, C c, ...) =&gt; FooCtx a b c</code> can't have any hidden types on the LHS. Is there some other way I might be able to fully gather all of these constraints?</p>\n"}, {"tags": ["haskell", "generics"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1425349511, "post_id": 28822412, "comment_id": 45917466, "body": "You may be interested in the <a href=\"http://hackage.haskell.org/package/vector-space\" rel=\"nofollow noreferrer\">vector-space</a> package which defines fine-grained classes for vector spaces: an <a href=\"http://hackage.haskell.org/package/vector-space-0.9/docs/Data-AdditiveGroup.html#t:AdditiveGroup\" rel=\"nofollow noreferrer\"><code>AdditiveGroup</code></a>, a <a href=\"http://hackage.haskell.org/package/vector-space-0.9/docs/Data-VectorSpace.html#t:VectorSpace\" rel=\"nofollow noreferrer\"><code>VectorSpace</code></a> and an inner product space, <a href=\"http://hackage.haskell.org/package/vector-space-0.9/docs/Data-VectorSpace.html#t:InnerSpace\" rel=\"nofollow noreferrer\"><code>InnerProduct</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 4, "last_activity_date": 1425350060, "last_edit_date": 1425350060, "creation_date": 1425348867, "answer_id": 28822961, "question_id": 28822412, "link": "https://stackoverflow.com/questions/28822412/kind-mismatch-with-ghc-generics/28822961#28822961", "title": "Kind mismatch with GHC.Generics", "body": "<p>To make a library that uses <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/GHC-Generics.html\" rel=\"nofollow\"><code>GHC.Generics</code></a> we first need a few pre-requisites.</p>\n\n<pre><code>{-# LANGUAGE DefaultSignatures #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE FlexibleContexts #-}\n\nimport GHC.Generics as G\n</code></pre>\n\n<p>All of the representations for generics carry around an extra type parameter called \"the parameter\" <code>p</code>. You can see this in the kind of the type <code>Rep a</code> in the <code>Generic a</code> class, <code>type Rep a :: * -&gt; *</code>. The representation for a data type isn't just another data type, it's a type with the kind <code>* -&gt; *</code>, the same kind as <code>Functor</code>s and <code>Monad</code>s. It take another type as a parameter. Most of the time defining instances for a class based on the generic representations, we will just ignore the parameter.</p>\n\n<p>Due to the extra parameter, it's useful to define a non-generic class. We'll be adding more to this later.</p>\n\n<pre><code>class VecSpace v where\n    addVs :: v -&gt; v -&gt; v\n    scaleV :: Double -&gt; v -&gt; v\n\n    ...\n</code></pre>\n\n<p>The generic version of the class, <code>GVecSpace</code>, has an extra parameter <code>a</code> on the types of all the values. Everywhere we used <code>v</code> before, we will use <code>f a</code>. We will make new names for <code>GVecSpace</code> by prepending <code>g</code> to the names from <code>VecSpace</code>. </p>\n\n<pre><code>class GVecSpace f where\n    gaddVs :: f a -&gt; f a -&gt; f a\n    gscaleV :: Double -&gt; f a -&gt; f a\n</code></pre>\n\n<p>The <code>GVecSpace</code> class is a little awkward and only works for the kind <code>* -&gt; *</code>, but it is only used for making the default implementations for <code>VecSpace</code>. You will use <code>VecSpace</code> everywhere else.</p>\n\n<p>Unit types with only a single constructor are vector spaces. Note that <code>G.U1</code> is not applied to a parameter.</p>\n\n<pre><code>instance GVecSpace G.U1 where\n  gaddVs _ x = x -- no value\n  gscaleV _ x = x -- no value\n</code></pre>\n\n<p>The product of two vector spaces is a vector space. Note that <code>f</code> and <code>g</code> and <code>f :*: g</code> aren't applied to a parameter type.</p>\n\n<pre><code>instance (GVecSpace f, GVecSpace g) =&gt; GVecSpace (f :*: g) where\n  gaddVs (x1 :*: x2) (y1 :*: y2) =\n    gaddVs x1 y1 :*: gaddVs x2 y2\n  gscaleV d (x1 :*: x2) =\n    gscaleV d x1 :*: gscaleV d x2\n</code></pre>\n\n<p>For <code>K1</code> we drop the final parameter <code>p</code> from the type, and define it in terms of the non-generic <code>VecSpace</code>. The <code>c</code> parameter only has kind <code>*</code>, an ordinary type, so it can't be an instance of <code>GVecSpace</code>.</p>\n\n<pre><code>instance (VecSpace c) =&gt; GVecSpace (K1 i c) where\n  gaddVs (K1 x) (K1 y) = K1 $ addVs x y\n  gscaleV d (K1 x) = K1 $ scaleV d x\n</code></pre>\n\n<p>For <code>M1</code> metadata nodes, we drop the final paramter <code>p</code> from the type.</p>\n\n<pre><code>instance (GVecSpace f) =&gt; GVecSpace (M1 i c f) where\n  gaddVs (M1 x) (M1 y) = M1 $ gaddVs x y\n  gscaleV d (M1 x) = M1 $ gscaleV d x\n</code></pre>\n\n<p>Now we can return to the <code>VecSpace</code> class and fill in the defaults for how something is a <code>VecSpace</code> when its representation has a <code>GVecSpace</code> instance. We convert the arguments into the representation <code>from</code> the type <code>v</code>, perform the generic version of the operation on the representation, and then convert back <code>to</code> the type <code>v</code> when we're done.</p>\n\n<pre><code>class VecSpace v where\n    addVs :: v -&gt; v -&gt; v\n    scaleV :: Double -&gt; v -&gt; v\n\n    default addVs :: (Generic v, GVecSpace (Rep v)) =&gt; v -&gt; v -&gt; v\n    addVs x y = to (gaddVs (from x) (from y))\n\n    default scaleV :: (Generic v, GVecSpace (Rep v)) =&gt; Double -&gt; v -&gt; v\n    scaleV s = to . gscaleV s . from\n</code></pre>\n\n<h3>Use</h3>\n\n<p>Assuming you have already observed that <code>Double</code>s form a vector space</p>\n\n<pre><code>instance VecSpace Double where\n    addVs = (+)\n    scaleV = (*)\n</code></pre>\n\n<p>we can derive a working <code>VecSpace</code> instance for tuples in terms of the <code>default</code>s in <code>VecSpace</code>.</p>\n\n<pre><code>instance (VecSpace a, VecSpace b) =&gt; VecSpace (a, b)\n</code></pre>\n"}], "owner": {"reputation": 3333, "user_id": 3859566, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a7c4c1c9ad9bd41f49004d32884bc680?s=128&d=identicon&r=PG&f=1", "display_name": "yong", "link": "https://stackoverflow.com/users/3859566/yong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 1, "accepted_answer_id": 28822961, "answer_count": 1, "score": 2, "last_activity_date": 1425350060, "creation_date": 1425345135, "question_id": 28822412, "link": "https://stackoverflow.com/questions/28822412/kind-mismatch-with-ghc-generics", "title": "Kind mismatch with GHC.Generics", "body": "<p>I'm trying to write a generic vector space implementation in Haskell. My implementation is as follows:</p>\n\n<pre><code>import qualified GHC.Generics as G\nimport GHC.Generics hiding (V1)\n\nclass GVecSpace v where\n  addVs :: v -&gt; v -&gt; v\n  scaleV :: Double -&gt; v -&gt; v\n\ninstance GVecSpace (G.V1 a) where\n  addVs _ _ = undefined\n  scaleV _ _ = undefined\n\ninstance GVecSpace (G.U1 a) where\n  addVs _ x = x -- no value\n  scaleV _ x = x -- no value\n\ninstance (GVecSpace (f a), GVecSpace (g a)) =&gt; GVecSpace ((f :+: g) a) where\n  addVs (L1 x) (L1 y) = L1 $ addVs x y\n  addVs (R1 x) (R1 y) = R1 $ addVs x y\n  scaleV d (L1 x) = L1 $ scaleV d x\n  scaleV d (R1 x) = R1 $ scaleV d x\n\ninstance (GVecSpace (f a), GVecSpace (g a)) =&gt; GVecSpace ((f :*: g) a) where\n  addVs (x1 :*: x2) (y1 :*: y2) =\n    addVs x1 y1 :*: addVs x2 y2\n  scaleV d (x1 :*: x2) =\n    scaleV d x1 :*: scaleV d x2\n\ninstance (GVecSpace c) =&gt; GVecSpace (K1 i c p) where\n  addVs (K1 x) (K1 y) = K1 $ addVs x y\n  scaleV d (K1 x) = K1 $ scaleV d x\n\ninstance (GVecSpace (f p)) =&gt; GVecSpace (M1 i c f p) where\n  addVs (M1 x) (M1 y) = M1 $ addVs x y\n  scaleV d (M1 x) = M1 $ scaleV d x\n\ninstance (Generic a, GVecSpace (Rep a)) =&gt; GVecSpace a where\n  addVs x y =\n    G.to $ addVs (G.from x) (G.from y)\n  scaleV d x =\n    G.to $ scaleV d (G.from x)\n</code></pre>\n\n<p>But GHC complains because <code>Rep a</code> has the wrong kind:</p>\n\n<pre><code>Expecting one more argument to \u2018Rep a\u2019\nThe first argument of \u2018GVecSpace\u2019 should have kind \u2018*\u2019,\n  but \u2018Rep a\u2019 has kind \u2018* -&gt; *\u2019\nIn the instance declaration for \u2018GVecSpace a\u2019\n</code></pre>\n\n<p>What should I change to make this work? One option is to make <code>GVecSpace</code> only work for kinds of <code>* -&gt; *</code>, but that seems awkward. Is there a way to avoid that? </p>\n"}, {"tags": ["haskell", "cabal"], "answers": [{"tags": [], "owner": {"reputation": 359, "user_id": 1924817, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33867bd74b16d7ca6bfb658964dfe878?s=128&d=identicon&r=PG", "display_name": "akegalj", "link": "https://stackoverflow.com/users/1924817/akegalj"}, "is_accepted": false, "score": 1, "last_activity_date": 1425378856, "last_edit_date": 1425378856, "creation_date": 1425378013, "answer_id": 28829267, "question_id": 28822201, "link": "https://stackoverflow.com/questions/28822201/invoke-the-functions-in-the-library-built-from-cabal-in-haskell/28829267#28829267", "title": "Invoke the functions in the library built from cabal in Haskell", "body": "<p>To use <code>maxmin</code> from ghci just load the source file:</p>\n\n<pre><code>chapter2$ ghci\n&gt; :l src/Chapter2/SimpleFunctions\n&gt; maxmin [1,2,3]\n(3,1)\n</code></pre>\n\n<p>I am not sure what you mean when saying 'how to use the <code>maxmin</code> function from ghc'. I suppose what you meant is 'how to use maxmin in my programs' (which can be compiled with ghc). If you look at first line of <code>src/Chapter2/SimpleFunctions.hs</code> you can see that its in a module called <code>Chapter2.SimpleFunctions</code>. So in your own program/code you need to import that module to be able to use <code>maxmin</code>. As an example of this:</p>\n\n<pre><code>chapter2$ cat Test.hs\n\n-- In your favorite editor write down this file.\nimport Chapter2.SimpleFunctions\n\nmain = print $ maxmin [1,2,3]\n\nchapter2$ ghc Test.hs -i.:src/\nchapter2$ ./Test\n(3,1)\n</code></pre>\n\n<p>The <code>ghc Test.hs -i.:src/</code> is teling ghc to look for files in current and <code>src/</code> directory.</p>\n"}, {"tags": [], "owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "is_accepted": true, "score": 0, "last_activity_date": 1425384471, "creation_date": 1425384471, "answer_id": 28831454, "question_id": 28822201, "link": "https://stackoverflow.com/questions/28822201/invoke-the-functions-in-the-library-built-from-cabal-in-haskell/28831454#28831454", "title": "Invoke the functions in the library built from cabal in Haskell", "body": "<p>With <code>cabal install</code> you configure your system to use the library you just created. The library is installed in <code>~/.cabal/lib</code>.</p>\n\n<p><img src=\"https://i.stack.imgur.com/nslxv.png\" alt=\"enter image description here\"></p>\n\n<p>For the usage with <code>ghci</code>, you can import the library.</p>\n\n<pre><code>Prelude&gt; import Chapter2.SimpleFunctions\nPrelude Chapter2.SimpleFunctions&gt; maxmin [1,2]\n(2,1)\n</code></pre>\n\n<p>For the usage with <code>ghc</code>, you also can import the library so that the compiler do the linking automatically.</p>\n\n<pre><code>import Chapter2.SimpleFunctions\n\nmain :: IO ()\nmain = putStrLn $ show $ maxmin [1,2,3]\n</code></pre>\n\n<p>Compile and run:</p>\n\n<pre><code>chapter2&gt; ghc ex.hs \n[1 of 1] Compiling Main             ( ex.hs, ex.o )\nLinking ex ...\nchapter2&gt; ./ex\n(3,1)\n</code></pre>\n"}], "owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 28831454, "answer_count": 2, "score": 2, "last_activity_date": 1425388881, "creation_date": 1425343921, "last_edit_date": 1425388881, "question_id": 28822201, "link": "https://stackoverflow.com/questions/28822201/invoke-the-functions-in-the-library-built-from-cabal-in-haskell", "title": "Invoke the functions in the library built from cabal in Haskell", "body": "<p>From the book <a href=\"http://www.apress.com/9781430262503\" rel=\"nofollow\">Beginning Haskell</a>, I learned that I can build a package from cabal setup file (chapter2.cabal). The source is downloadable from <a href=\"http://www.apress.com/downloadable/download/sample/sample_id/1516/\" rel=\"nofollow\">http://www.apress.com/downloadable/download/sample/sample_id/1516/</a></p>\n\n<p>For example, this is an example of the Cabal file from Section 2 example. </p>\n\n<pre><code>name:           chapter2\nversion:        0.1\ncabal-version:  &gt;=1.2\nbuild-type:     Simple\nauthor:         Alejandro Serrano\n\nlibrary\n  hs-source-dirs:  src\n  build-depends:   base &gt;= 4\n  ghc-options:     -Wall\n  exposed-modules: \n                   Chapter2.Section2.Example,\n                   Chapter2.SimpleFunctions\n  other-modules:   \n                   Chapter2.DataTypes,\n                   Chapter2.DefaultValues\n</code></pre>\n\n<p>After the <code>cabal build</code>, I can get the dynamic and static libraries compiled. </p>\n\n<pre><code>.\n\u251c\u2500\u2500 Setup.hs\n\u251c\u2500\u2500 chapter2.cabal\n\u251c\u2500\u2500 dist\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Chapter2\n...\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 autogen\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Paths_chapter2.hs\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 cabal_macros.h\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 libHSchapter2-0.1-ghc7.8.3.dylib &lt;-- dynamic lib\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 libHSchapter2-0.1.a &lt;-- static lib\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.conf.inplace\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 setup-config\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 Chapter2\n        \u251c\u2500\u2500 DataTypes.hs\n        \u251c\u2500\u2500 DefaultValues.hs\n        \u251c\u2500\u2500 Section2\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 Example.hs\n        \u2514\u2500\u2500 SimpleFunctions.hs\n</code></pre>\n\n<p>Then, how can I use the library functions from other Haskell code (in both ghc and ghci)? For example, src/Chapter2/SimpleFunctions.hs has <code>maxim</code> function, how can I invoke this function compiled in the form of Haskell library?</p>\n\n<pre><code>maxmin list = let h = head list\n              in if null (tail list)\n                 then (h, h)\n                 else ( if h &gt; t_max then h else t_max\n                      , if h &lt; t_min then h else t_min )\n                      where t = maxmin (tail list)\n                            t_max = fst t\n                            t_min = snd t \n</code></pre>\n"}, {"tags": ["haskell", "pointfree"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 4, "creation_date": 1425338739, "post_id": 28821283, "comment_id": 45914449, "body": "People new to Haskell seem to fall in love with point-free style. Love is blind; you&#39;ll grow out of it. Incidentally, here&#39;s a nice (not point-free) version: <code>[[x * y | x &lt;- [1..12]] | y &lt;- [1..12]]</code>."}, {"owner": {"reputation": 1165, "user_id": 1725151, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/3dd74df7a1b246d669fd7618d9c8083c?s=128&d=identicon&r=PG", "display_name": "Guildenstern", "link": "https://stackoverflow.com/users/1725151/guildenstern"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 3, "creation_date": 1425344957, "post_id": 28821283, "comment_id": 45916245, "body": "@BenjaminHodgson If he&#39;s having fun with it, why not let him? It&#39;s fun to see how far you can take some programming technique or concept. Whether or not it is ultimately practical, well, that doesn&#39;t necessarily matter."}, {"owner": {"reputation": 3739, "user_id": 119236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32f066660f5daade48b28ddfb2894cce?s=128&d=identicon&r=PG", "display_name": "devgeezer", "link": "https://stackoverflow.com/users/119236/devgeezer"}, "edited": false, "score": 0, "creation_date": 1425425041, "post_id": 28821283, "comment_id": 45956858, "body": "Zeta&#39;s answer is instructive in the stepwise refinements that begin with my original and end in pointfree form. Daniel&#39;s answer has an appealing style that I find highly intuitive. Both answers are great. Thanks."}], "answers": [{"comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1425339743, "post_id": 28821439, "comment_id": 45914772, "body": "The <code>do</code> notation variant isn&#39;t as nice as the list comprehension: <code>do {x &lt;- [1..12]; return $ do {y &lt;- [1..12]; return $ x * y}}</code>. However, I&#39;m way to tired to include it in a nice way in this answer, I&#39;ll probably add it tomorrow."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1425344198, "post_id": 28821439, "comment_id": 45916072, "body": "The &quot;functor comprehension&quot; version is particularly nice: <code>let for = flip fmap in for [1..12] $ \\x -&gt; for [1..12] $ \\y -&gt; x*y</code>. If you point-free-ify <i>that</i>, you get <code>for [1..12] $ for [1..12] . (*)</code> which looks quite pretty to me."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1425366114, "post_id": 28821439, "comment_id": 45922355, "body": "@DanielWagner: Do you want to add this as an answer? It really looks rather pretty."}], "tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 3, "last_activity_date": 1425339280, "last_edit_date": 1495542044, "creation_date": 1425339280, "answer_id": 28821439, "question_id": 28821283, "link": "https://stackoverflow.com/questions/28821283/multiplication-tables-via-maps-in-pointfree-haskell/28821439#28821439", "title": "Multiplication tables via maps in pointfree Haskell", "body": "<p>There's a tool called <a href=\"http://hackage.haskell.org/package/pointfree\" rel=\"nofollow noreferrer\">pointfree</a> on hackage, which helps you tremendously (see also <a href=\"https://wiki.haskell.org/Pointfree\" rel=\"nofollow noreferrer\">the wiki</a>). It creates the following version:</p>\n\n<pre><code>multTable = map (flip map [1..12] . (*)) [1..12]\n</code></pre>\n\n<p>How do we get there? Well, lets move operators a little bit and try to apply <code>flip</code> on your function till we get something similar:</p>\n\n<pre><code>multTable = map (\\b -&gt; map (b*) [1..12])           [1..12] \n          = map (\\b -&gt; map ((*) b) [1..12])        [1..12] -- change to prefix notation\n          = map (\\b -&gt; flip map [1..12] ((*) b)    [1..12] -- flip map\n          = map (\\b -&gt; flip map [1..12] . (*) $ b) [1..12] -- associativity\n          = map (flip map [1..12] . (*))           [1..12] -- eta-reduction\n</code></pre>\n\n<p>Note that we only need to focus on <code>\\b -&gt; map (b*) [1..12]</code>.</p>\n\n<p>That being said, the pointfree version feels a little bit contrived. After all, you want a table, and <a href=\"https://stackoverflow.com/questions/28821283/multiplication-tables-via-maps-in-pointfree-haskell#comment45914449_28821283\">Benjamin's shows a rather nice way</a> to create one: list comprehensions:</p>\n\n<pre><code>multTable = [[x * y | x &lt;- [1..12]] | y &lt;- [1..12]]\n</code></pre>\n\n<p>This version is easier to read and more obvious to the reader, but then again, you probably thought that this would happen:</p>\n\n<blockquote>\n  <p>I'm not necessarily expecting the pointfree version to be shorter, more concise or even more readable.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 3739, "user_id": 119236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32f066660f5daade48b28ddfb2894cce?s=128&d=identicon&r=PG", "display_name": "devgeezer", "link": "https://stackoverflow.com/users/119236/devgeezer"}, "edited": false, "score": 0, "creation_date": 1425410037, "post_id": 28837298, "comment_id": 45949240, "body": "I accidentally omitted the &#39;f&#39; in <code>fmap</code>  and it still worked with the rest of the expression you provided. This <code>flip</code> of <code>map</code> (or <code>fmap</code>) as <code>for</code> makes a lot of sense to me coming from an imperative background. This was an extremely interesting insight."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 3739, "user_id": 119236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32f066660f5daade48b28ddfb2894cce?s=128&d=identicon&r=PG", "display_name": "devgeezer", "link": "https://stackoverflow.com/users/119236/devgeezer"}, "edited": false, "score": 1, "creation_date": 1425410927, "post_id": 28837298, "comment_id": 45949747, "body": "@devgeezer Yep, for lists, <code>fmap = map</code>. Glad you enjoyed it."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1425401256, "creation_date": 1425401256, "answer_id": 28837298, "question_id": 28821283, "link": "https://stackoverflow.com/questions/28821283/multiplication-tables-via-maps-in-pointfree-haskell/28837298#28837298", "title": "Multiplication tables via maps in pointfree Haskell", "body": "<p>In a comment to Zeta's answer, he suggests this reimplementation of your code:</p>\n\n<pre><code>do\n    x &lt;- [1..12]\n    return $ do\n        y &lt;- [1..12]\n        return (x * y)\n</code></pre>\n\n<p>It's got sort of a pretty pattern to it, and desugars this way:</p>\n\n<pre><code>[1..12] &gt;&gt;= \\x -&gt;\nreturn $ [1..12] &gt;&gt;= \\y -&gt;\n         return (x * y)\n</code></pre>\n\n<p>Now it occurs to me that <code>m &gt;&gt;= \\x -&gt; return (f x)</code> is the same as <code>fmap f m</code>, so the above code really only needs <code>Functor</code> and not <code>Monad</code>. So this made me wonder what a \"<code>do</code>-notation for functors\" might look like, and how it would desugar. Defining <code>for = flip fmap</code>, here's how I think it might look desugared:</p>\n\n<pre><code>for [1..12] $ \\x -&gt;\nfor [1..12] $ \\y -&gt;\nx*y\n</code></pre>\n\n<p>(Hopefully you can see the parallels with the desugared <code>do</code>-notation.) In any case, pointfree-ifying this gives something quite pretty:</p>\n\n<pre><code>for [1..12] $ for [1..12] . (*)\n</code></pre>\n"}], "owner": {"reputation": 3739, "user_id": 119236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32f066660f5daade48b28ddfb2894cce?s=128&d=identicon&r=PG", "display_name": "devgeezer", "link": "https://stackoverflow.com/users/119236/devgeezer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 592, "favorite_count": 0, "accepted_answer_id": 28821439, "answer_count": 2, "score": 2, "last_activity_date": 1425401256, "creation_date": 1425338496, "question_id": 28821283, "link": "https://stackoverflow.com/questions/28821283/multiplication-tables-via-maps-in-pointfree-haskell", "title": "Multiplication tables via maps in pointfree Haskell", "body": "<p>In Haskell I've defined a multiplication-table generator function like so:</p>\n\n<pre><code>multTable :: [[Int]]\nmultTable=map (\\b -&gt; map (b*) [1..12]) [1..12]\n</code></pre>\n\n<p>Which outputs...</p>\n\n<pre><code>[[1,2,3,4,5,6,7,8,9,10,11,12],\n[2,4,6,8,10,12,14,16,18,20,22,24],\n...[12,24,36,48,60,72,84,96,108,120,132,144]]\n</code></pre>\n\n<p>...and if you squint your eyes, this looks like multiplication tables for 1..12. So far so good ... now I've tried to make it point-free, thinking it should be pretty easy with composition. So I'm taking small steps and I believe that I've gotten partway there since I can do this:</p>\n\n<pre><code>map ($ 4) $ map (*) [1..12]\n</code></pre>\n\n<p>...which gives me:</p>\n\n<pre><code>[4,8,12,16,20,24,28,32,36,40,44,48]\n</code></pre>\n\n<p>Looking at this, the second map gives [a->a], which specifically here is a list of functions that multiply the values 1 through 12 by some number. The first map evaluates each of these functions providing them with the value 4, in turn producing the [4,8..] line.</p>\n\n<p>I'm not necessarily expecting the pointfree version to be shorter, more concise or even more readable. As a Haskell newbie, I'm just looking to understand how it could be accomplished.</p>\n"}, {"tags": ["haskell", "netwire"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1425401418, "post_id": 28818935, "comment_id": 45944137, "body": "I&#39;d recommend you to post your edit as an answer instead; Answering your own questions is permitted on stackoverflow and makes more sense than putting the answer into the question. Also, there&#39;s probably no need to replicate my answer, unless you want to emphasize some difference between them."}], "answers": [{"comments": [{"owner": {"reputation": 1485, "user_id": 851863, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9a9aaf35bea6bf13e59eebfa846e64b?s=128&d=identicon&r=PG", "display_name": "Rafael Ibraim", "link": "https://stackoverflow.com/users/851863/rafael-ibraim"}, "edited": false, "score": 0, "creation_date": 1425382037, "post_id": 28820227, "comment_id": 45931079, "body": "I guess you mean <code>accumE (flip $ const nextState) initialState</code>. This works, but it made me realize that I can make it work with a continuous wire if I filter it with <code>when occurred</code>."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 1485, "user_id": 851863, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9a9aaf35bea6bf13e59eebfa846e64b?s=128&d=identicon&r=PG", "display_name": "Rafael Ibraim", "link": "https://stackoverflow.com/users/851863/rafael-ibraim"}, "edited": false, "score": 1, "creation_date": 1425396592, "post_id": 28820227, "comment_id": 45940765, "body": "Yeah that was a typo. Fixed now.  That requires Unsafe.Event and IMHO a state change that depends on an event is (should be) certainly an event itself. Doing it like that you suddenly get a wire that claims to be continuous, but actually doesn&#39;t produce values for any interval."}, {"owner": {"reputation": 1485, "user_id": 851863, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9a9aaf35bea6bf13e59eebfa846e64b?s=128&d=identicon&r=PG", "display_name": "Rafael Ibraim", "link": "https://stackoverflow.com/users/851863/rafael-ibraim"}, "edited": false, "score": 0, "creation_date": 1425407667, "post_id": 28820227, "comment_id": 45947821, "body": "You&#39;re right. Thinking in events really seems the correct way to model this problem. Also, edited my question according to your feedback. Thanks!"}], "tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 1, "last_activity_date": 1425396609, "last_edit_date": 1425396609, "creation_date": 1425333487, "answer_id": 28820227, "question_id": 28818935, "link": "https://stackoverflow.com/questions/28818935/use-of-periodic-in-netwire-5/28820227#28820227", "title": "Use of `periodic` in NetWire 5", "body": "<p>The problem seems to be that you treat your  <code>stateWire</code> as if it was a continuous wire, but it really should be an event wire itself. Assuming I understood your intent correctly, it should probably be <code>accumE (flip $ const nextState) initialState</code> - see <a href=\"https://hackage.haskell.org/package/netwire-5.0.1/docs/Control-Wire-Event.html\" rel=\"nofollow\">the event docs</a> for accumE - then you can use it like this:</p>\n\n<p><code>stateWire . periodic 2</code> (the other way round would not work).</p>\n\n<p>The reason why your original version doesn't work is that <code>periodic</code> doesn't inhibit when there's no event, it instead just produces a <code>NoEvent</code> value. And since your stateWire just ignores its input, whether or not an event is produced doesn't make any difference to it when the periodic wire is in front, whereas putting the periodic wire in the back just means 'periodically catch a snapshot of the current state', which is also not what you want.</p>\n\n<p><em>Note</em>: 'Front' and 'back' in the previous paragraph refer to the order of execution, not to the layout in source code which is in reverse if you use the <code>.</code> combinator.</p>\n"}, {"tags": [], "owner": {"reputation": 1485, "user_id": 851863, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9a9aaf35bea6bf13e59eebfa846e64b?s=128&d=identicon&r=PG", "display_name": "Rafael Ibraim", "link": "https://stackoverflow.com/users/851863/rafael-ibraim"}, "is_accepted": false, "score": 1, "last_activity_date": 1425407369, "creation_date": 1425407369, "answer_id": 28839272, "question_id": 28818935, "link": "https://stackoverflow.com/questions/28818935/use-of-periodic-in-netwire-5/28839272#28839272", "title": "Use of `periodic` in NetWire 5", "body": "<p>As an alternative to the accepted answer, it's also possible to filter out the <code>NoEvent</code>, without changing the wire:</p>\n\n<pre><code>main = testWire clockSession_ (stateWire . when occurred . periodic 2)\n</code></pre>\n\n<p>In this case, the wire will change the state, <strong>inhibit for 2 seconds</strong> and then change it again.</p>\n\n<p>The other (accepted) answer works different: the wire will change the state, then <strong>continue producing the same result for 2 seconds</strong> and then change it again.</p>\n"}], "owner": {"reputation": 1485, "user_id": 851863, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9a9aaf35bea6bf13e59eebfa846e64b?s=128&d=identicon&r=PG", "display_name": "Rafael Ibraim", "link": "https://stackoverflow.com/users/851863/rafael-ibraim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 28820227, "answer_count": 2, "score": 1, "last_activity_date": 1425407532, "creation_date": 1425328299, "last_edit_date": 1495542582, "question_id": 28818935, "link": "https://stackoverflow.com/questions/28818935/use-of-periodic-in-netwire-5", "title": "Use of `periodic` in NetWire 5", "body": "<p>Consider the following code:</p>\n\n<pre><code>-- this defines what our 'state' will be\ndata Direction = North | East | South | West deriving (Eq, Show, Enum)\ndata State = State Int Bool Direction deriving (Show)\n\ninitialState :: State\ninitialState = State 0 True North\n\n-- a simple routine to change a state and count the number of\n-- changes\nnextState :: State -&gt; State\nnextState (State i _ West) = State (i+1) False South\nnextState (State i _ North) = State (i+1) True East\nnextState (State i b s) = State i b $ (if b then succ else pred) s\n\n-- a wire with local state\nstateWire :: Wire s () m a State\nstateWire = stateWireFrom initialState\n  where\n    stateWireFrom s = mkSFN $ \\_ -&gt; (nextState s, stateWireFrom (nextState s))\n\n-- let's run the wire!\nmain = testWire clockSession_ stateWire \n</code></pre>\n\n<p>As you can imagine, <code>testWire</code> will run the wire as fast as it can and print the output to screen. But what if I want to run my wire every 2 seconds? Looking at the docs, <code>periodic</code> may be the solution:</p>\n\n<pre><code>-- Since periodic generates events, asSoonAs is used to 'unwrap' the Event\nmain = testWire clockSession_ (asSoonAs . periodic 2 . stateWire)\n</code></pre>\n\n<p>This <strong>almost</strong> works. The output seems to be static for about 2 seconds, but when it's updated, it's clear that the wire were running while the output was stopped. Maybe I should do the other way around?</p>\n\n<pre><code>-- Now, this does make more sense to me...\nmain = testWire clockSession_ (stateWire . periodic 2)\n</code></pre>\n\n<p>However, the end result is exactly like my first try. What am I missing here?</p>\n\n<p><strong>EDIT:</strong> See <a href=\"https://stackoverflow.com/a/28839272/851863\">this answer</a> for a (inferior) alternative to the accepted answer.</p>\n"}, {"tags": ["haskell", "haskell-lens", "higher-rank-types"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1425324201, "post_id": 28816937, "comment_id": 45907271, "body": "Well, I&#39;m not sure I could give a correct enough explanation for why to warrant a full answer, but it seems to be a scoping problem with <code>Blah</code>.  If you move the <code>forall c.</code> outside of the constructor as <code>data Blah = forall c. Blah (Lens&#39; (Foo c) c)</code> then <code>map Blah</code> will typecheck, but <code>map Blah [bar]</code> won&#39;t.  If you expand the <code>Lens&#39;</code> type and manually do <code>data Blah = forall c f. Functor f =&gt; Blah ((c -&gt; f c) -&gt; Foo c -&gt; f (Foo c))</code> then you have <code>:t map Blah</code> as <code>Functor f =&gt; [(c -&gt; f c) -&gt; Foo c -&gt; f (Foo c)] -&gt; [Blah]</code> and <code>:t [bar, baz]</code> as <code>[(c -&gt; f c) -&gt; Foo c -&gt; f (Foo c)]</code>..."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1425324271, "post_id": 28816937, "comment_id": 45907319, "body": "... but it can&#39;t unify the <code>Functor</code> constraint in <code>map Blah [bar, baz]</code>.  I believe this is because the <code>Blah</code> constructor is hiding too much from the type checker (essentially), so it can&#39;t figure out how to incorporate the <code>Functor</code> constraint.  If the lens type were unconstrained then it might actually work."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1425324793, "post_id": 28816937, "comment_id": 45907610, "body": "The only way I can get anything to type-check is to add type parameters to <code>Blah</code> as <code>data Blah f c where Blah :: Functor f =&gt; ((c -&gt; f c) -&gt; Foo c -&gt; f (Foo c)) -&gt; Blah f c</code>, then you can do <code>map Blah [bar, baz]</code> and have the type <code>Functor f =&gt; [Blah f c]</code>, but this doesn&#39;t mean that there isn&#39;t a way to hide those type variables.  The important one here is <code>f</code> I think, because the <code>Functor</code> constraint.  The compiler has to pick an instance for <code>Functor</code>, but has no way of picking just one, so it fails the type check."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1425324938, "post_id": 28816937, "comment_id": 45907685, "body": "You want <code>[bar]</code> to have type <code>[forall c . Lens&#39; (Foo c) c]</code>, but it actually has the type <code>Functor f =&gt; [(c0 -&gt; f c0) -&gt; Foo c0 -&gt; f (Foo c0)]</code>. You <i>can</i> force <code>[bar]</code> to have the former type, by simply specifying that type signature - but you need to enable ImpredicativeTypes. The same goes for <code>map Blah</code> - it also has an impredictive type, so you will also need to specify it manually. For example; <code>bar&#39; :: [forall c . Lens&#39; (Foo c) c]; bar&#39; = [bar] ; mapBlah :: [forall c . Lens&#39; (Foo c) c] -&gt; [Blah]; mapBlah = map Blah</code> typechecks, and so will <code>mapBlah bar&#39;</code>."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1425325021, "post_id": 28816937, "comment_id": 45907738, "body": "As an aside, I wouldn&#39;t recommend using impredictive types - you will have to write a type signature for every impredictive type and it doesn&#39;t give you much power."}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425327766, "post_id": 28816937, "comment_id": 45909194, "body": "@user2407038: Could you put that into an answer? It addresses the question and will be easier for people to read. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 0, "creation_date": 1425336656, "post_id": 28820084, "comment_id": 45913684, "body": "It&#39;s &quot;impredicative&quot; \u2014 not &quot;impredictive&quot;. From the word &quot;predicate&quot;."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1425375849, "post_id": 28820084, "comment_id": 45927220, "body": "To be pedantic, it&#39;s not impredicativity that hurts inference (in theory) but higher-ranked types. Inference for rank-2 types is impractical and it&#39;s undecidable for rank-3 and above. In practice, impredicativity wrecks type inference in Haskell because it&#39;s integrated poorly. There are other type systems with more organic handling of impredicative types, e. g. HMF, HML or MLF."}], "tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": true, "score": 2, "last_activity_date": 1425354598, "last_edit_date": 1425354598, "creation_date": 1425332902, "answer_id": 28820084, "question_id": 28816937, "link": "https://stackoverflow.com/questions/28816937/type-error-with-rank-n-types-and-lenses/28820084#28820084", "title": "Type error with rank-n types and lenses", "body": "<p>You want <code>[bar]</code> to have type <code>[forall c . Lens' (Foo c) c]</code>, but it actually has the type <code>forall f c . Functor f =&gt; [(c -&gt; f c) -&gt; Foo c -&gt; f (Foo c)]</code>. The compiler infers the latter type signature because it is <em>predicative</em>. You can find <a href=\"http://blog.solaris.bytelabs.org/articles/2008/08/10/predicative-vs-impredicative-polymorphism-and-type-reconstruction\" rel=\"nofollow\">resources</a> on the technical details of (im)predictive types. In short, type inference is undecidable in the presence of impredictive types - so type signatures become mandatory - so by default they are not permitted. An impredictive type is one where a <code>forall</code> occurs inside a type constructor (like <code>[]</code>). </p>\n\n<p>You can force <code>[bar]</code> to have the former type, by simply specifying that type signature and enabling <code>ImpredicativeTypes</code>. The same goes for <code>map Blah</code> - it also has an impredictive type, so you will also need to specify it manually.</p>\n\n<pre><code>bar' :: [forall c . Lens' (Foo c) c]\nbar' = [bar] \n\nmapBlah :: [forall c . Lens' (Foo c) c] -&gt; [Blah]\nmapBlah = map Blah \n</code></pre>\n\n<p>Then the following typechecks:</p>\n\n<pre><code>&gt; mapBlah bar'\n</code></pre>\n\n<p>or even</p>\n\n<pre><code>&gt; (map Blah :: [forall c . Lens' (Foo c) c] -&gt; [Blah]) \n    ([bar] :: [forall c . Lens' (Foo c) c])\n</code></pre>\n\n<p>In fact, the deal with the problem of impredictive types, <code>lens</code> includes the module <a href=\"https://hackage.haskell.org/package/lens-4.2/docs/Control-Lens-Reified.html\" rel=\"nofollow\"><code>Control.Lens.Reified</code></a> which declares newtypes for all the common lens types so that you can have lenses in containers. This actually won't help you in this particular use case, because you also want the <code>c</code> in <code>Lens' (Foo c) c</code> to be bound inside the list constructor, but it is useful in general. </p>\n"}], "owner": {"reputation": 776, "user_id": 3040098, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/5c6fe9cb754d8ae7afc0b88ba044841b?s=128&d=identicon&r=PG&f=1", "display_name": "tjhance", "link": "https://stackoverflow.com/users/3040098/tjhance"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 0, "accepted_answer_id": 28820084, "answer_count": 1, "score": 4, "last_activity_date": 1425354598, "creation_date": 1425321181, "question_id": 28816937, "link": "https://stackoverflow.com/questions/28816937/type-error-with-rank-n-types-and-lenses", "title": "Type error with rank-n types and lenses", "body": "<p>I have a simple polymorphic datatype <code>Foo</code></p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}\nimport Control.Lens\n\ndata Foo c = \n    Foo {\n        _bar :: c,\n        _baz :: c,\n        _quux :: c\n    }   \n\nmakeLenses ''Foo\n</code></pre>\n\n<p>The generated lenses are, of course, polymorphic in <code>c</code>. The type from GHCi is:</p>\n\n<pre><code>*Main&gt; :t bar\nbar :: Functor f =&gt; (c0 -&gt; f c0) -&gt; Foo c0 -&gt; f (Foo c0)\n</code></pre>\n\n<p>I made a datatype <code>Blah</code> to wrap around the lens. This works fine in simple cases (with the <code>RankNTypes</code> extension, of course):</p>\n\n<pre><code>data Blah = Blah (forall c . Lens' (Foo c) c)\n\norange :: Blah\norange = Blah bar\n</code></pre>\n\n<p>But anything slightly more complicated doesn't work, for example</p>\n\n<pre><code>cheese :: [Blah]\ncheese = map Blah [bar]\n</code></pre>\n\n<p>This last piece of code gives an error from GHC:</p>\n\n<pre><code>    Couldn't match type \u2018(c0 -&gt; f0 c0) -&gt; Foo c0 -&gt; f0 (Foo c0)\u2019\n                  with \u2018forall c (f :: * -&gt; *).\n                        Functor f =&gt;\n                        (c -&gt; f c) -&gt; Foo c -&gt; f (Foo c)\u2019\n    Expected type: ((c0 -&gt; f0 c0) -&gt; Foo c0 -&gt; f0 (Foo c0)) -&gt; Blah\n      Actual type: (forall c. Lens' (Foo c) c) -&gt; Blah\n    In the first argument of \u2018map\u2019, namely \u2018Blah\u2019\n    In the expression: map Blah [bar]\n</code></pre>\n\n<p>It seems like the <code>forall c f .</code> has disappeared from <code>\u2018(c0 -&gt; f0 c0) -&gt; Foo c0 -&gt; f0 (Foo c0)\u2019</code> but I don't understand why.</p>\n\n<p>Why does this not compile, and what can I do to get something like this to work?</p>\n"}, {"tags": ["haskell", "combinatorics"], "answers": [{"tags": [], "owner": {"reputation": 44721, "user_id": 546084, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/wMoWk.jpg?s=128&g=1", "display_name": "Chris Taylor", "link": "https://stackoverflow.com/users/546084/chris-taylor"}, "is_accepted": false, "score": 3, "last_activity_date": 1425316084, "creation_date": 1425316084, "answer_id": 28815534, "question_id": 28815188, "link": "https://stackoverflow.com/questions/28815188/pairwise-distances-of-a-list-of-numbers-in-haskell/28815534#28815534", "title": "Pairwise distances of a list of numbers in Haskell", "body": "<p>One option is to separate the generation of lists of pairs from the calculation of differences</p>\n\n<pre><code>abs_distance x y = abs (x - y)\n\npairs []     = []\npairs (x:xs) = map (\\y -&gt; (x,y)) xs ++ pairs xs\n-- or, with TupleSections enabled,\n-- pairs (x:xs) = map (x,) xs ++ pairs xs\n</code></pre>\n\n<p>so that you can write</p>\n\n<pre><code>pairwise_distances = sort . map (uncurry abs_distance) . pairs \n</code></pre>\n\n<p>This is certainly cleaner (and, I would argue, more elegant) although it may not be the kind of elegance you are looking for.</p>\n"}, {"tags": [], "owner": {"reputation": 370, "user_id": 4557694, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24e1eefea58ed065620e1b494503c0da?s=128&d=identicon&r=PG", "display_name": "Chad Groft", "link": "https://stackoverflow.com/users/4557694/chad-groft"}, "is_accepted": false, "score": 10, "last_activity_date": 1425320207, "last_edit_date": 1425320207, "creation_date": 1425316326, "answer_id": 28815603, "question_id": 28815188, "link": "https://stackoverflow.com/questions/28815188/pairwise-distances-of-a-list-of-numbers-in-haskell/28815603#28815603", "title": "Pairwise distances of a list of numbers in Haskell", "body": "<pre><code>distances xs = sort [ y - x | (x:ys) &lt;- tails (sort xs), y &lt;- ys ]\n</code></pre>\n\n<p>Intuition: the idea is to generate all the pairs of distinct elements in <code>xs</code>.  Each element has some location in the list. If we take <code>x</code> to come before <code>y</code> on the list, then <code>x</code> is the head of some tail of the list, and <code>y</code> is somewhere in the tail of the tail. If you sort <code>xs</code> first, then <code>y &gt;= x</code>. You could take <code>abs (y-x)</code> at the end instead of sorting <code>xs</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1425316823, "last_edit_date": 1425316823, "creation_date": 1425316447, "answer_id": 28815636, "question_id": 28815188, "link": "https://stackoverflow.com/questions/28815188/pairwise-distances-of-a-list-of-numbers-in-haskell/28815636#28815636", "title": "Pairwise distances of a list of numbers in Haskell", "body": "<p>It is spelled like it sounds.</p>\n\n<pre><code> f xs = [x-x' | x &lt;- xs, x' &lt;- xs]\n</code></pre>\n\n<p>This of course will have each pair counted twice, once in order and once in reverse order, so half of the distances will be negative. Depending on what exactly you need, you may use this, or one of the following:</p>\n\n<pre><code>f xs = [abs(x-x') | x &lt;- xs, x' &lt;- xs]\n\nf xs = [x-x' | x &lt;- xs, x' &lt;- xs, x&gt;x']\n</code></pre>\n\n<p>The latter relies on xs being a set, i.e. no duplicate points in it, and no zero distances that should be included in the answer.</p>\n"}], "owner": {"reputation": 15620, "user_id": 596361, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b7219254970581e53d3b2b162f7f50f8?s=128&d=identicon&r=PG", "display_name": "Mirzhan Irkegulov", "link": "https://stackoverflow.com/users/596361/mirzhan-irkegulov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 738, "favorite_count": 0, "accepted_answer_id": 28815636, "answer_count": 3, "score": 2, "last_activity_date": 1425320207, "creation_date": 1425315081, "question_id": 28815188, "link": "https://stackoverflow.com/questions/28815188/pairwise-distances-of-a-list-of-numbers-in-haskell", "title": "Pairwise distances of a list of numbers in Haskell", "body": "<p>If <code>X</code> is a set of numbers, then <code>\u0394X</code> is a <a href=\"http://en.wikipedia.org/wiki/Multiset\" rel=\"nofollow\">multiset</a> of numbers, representing pairwise subtractions between each 2 numbers. For example, if <code>X</code> is a set of points on a line in increasing order, then <code>\u0394X</code> is a multiset of pairwise distances between these points. How to write a function that returns pairwise distances for a list of numbers? The below works, but I want a more elegant solution. Please include theory or intuitions, that might provide insight in how to solve similar problems, if possible.</p>\n\n<pre><code>pairwise_distances :: [Int] -&gt; [Int]\npairwise_distances [] = []\npairwise_distances [x] = []\npairwise_distances (x:xs) = sort $ map (abs . (x-)) xs ++ pairwise_distances xs\n\npairwise_distances [3,2,1] -- [1,1,2]\npairwise_distances [0,2,4,7,10] -- [2,2,3,3,4,5,6,7,8,10]\n</code></pre>\n"}, {"tags": ["exception", "haskell", "syntax", "record"], "answers": [{"tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 6, "last_activity_date": 1425309966, "creation_date": 1425309966, "answer_id": 28813380, "question_id": 28813161, "link": "https://stackoverflow.com/questions/28813161/haskell-record-syntax-and-read-from-file-string-to-record-syntax-exception/28813380#28813380", "title": "Haskell record syntax and read from file. String to record syntax. *** Exception: Prelude.read: no parse", "body": "<p>The derived <code>Read</code> instance for records can only read record syntax. It can't read a record that's in the format of a constructor applied to arguments in order. Try putting the following (which is the result of <code>show bookDatabase</code>) into <code>books.txt</code>.</p>\n\n<pre><code>[Book {bookTitle = \"Harry Potter\", bookAuthor = \"JK Rowling\", bookYear = 1997, bookFans = [\"Sarah\",\"Dave\"]}]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1425310182, "post_id": 28813407, "comment_id": 45898721, "body": "The question is already using a type signature, <code>(read fileContent :: Database)</code>, to tell the compiler that it should be using the <code>Read</code> instance for <code>[Book]</code>."}, {"owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1425310337, "post_id": 28813407, "comment_id": 45898817, "body": "@Cirdec Oh, sure. I missed that. Not sure why that warrants a downvote though. My answer isn&#39;t incorrect is it? If it is I&#39;d be glad to learn my mistake. : )"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1425311184, "post_id": 28813407, "comment_id": 45899437, "body": "Your answer is entirely correct, it just doesn&#39;t answer the question. The author already has a <code>Read</code> instance for <code>Book</code>, or wouldn&#39;t be able to compile and run <code>(read fileContent :: Database)</code> to get the run-time error <code>Prelude.read: no parse</code>. The small ghci session you added to the end of your answer demonstrates what <code>show</code> does and that <code>read . show</code> can be an identity for <code>Book</code>s, but doesn&#39;t explain why <code>books.txt</code> can&#39;t be read."}, {"owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1425311656, "post_id": 28813407, "comment_id": 45899780, "body": "@Cirdec Well they didn&#39;t have a <code>Read</code> instance for book when I wrote my answer. The question was edited after the fact. I admit to mistakenly pointing out that <code>read</code> needs some type information to operate. I was perhaps too quick to assume that the OP is a beginner, and this behavior would confuse them going forward. I also thought that demonstrating <code>read . show = id</code> would indicate the format that <code>read</code> expects (i.e. the one produced by show)."}], "tags": [], "owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "is_accepted": false, "score": -2, "last_activity_date": 1425310046, "creation_date": 1425310046, "answer_id": 28813407, "question_id": 28813161, "link": "https://stackoverflow.com/questions/28813161/haskell-record-syntax-and-read-from-file-string-to-record-syntax-exception/28813407#28813407", "title": "Haskell record syntax and read from file. String to record syntax. *** Exception: Prelude.read: no parse", "body": "<p>There are a couple things to fix up in your example.</p>\n\n<p>First, in your datatype declaration, you need to derive a <code>Read</code> instance.</p>\n\n<pre><code>data Book = Book {\n      bookTitle :: String\n    , bookAuthor :: String\n    , bookYear   :: Int\n    , bookFans   :: [String]\n    } deriving (Show,Read)\n</code></pre>\n\n<p>Next, if you look at the type of <code>read</code>:</p>\n\n<pre><code>&gt; :t read\nread :: Read a =&gt; String -&gt; a\n</code></pre>\n\n<p>you can see its return type is polymorphic. Therefore, to have it parse correctly, you need to let GHC know what kind of type you are expecting to be parsed. Normally, you can just use the parsed value as you normally would and GHC will be able to infer the type:</p>\n\n<pre><code>getFans = do\n    book &lt;- readFile \"book.txt\"\n    return $ bookFans book\n</code></pre>\n\n<p>but in GHCi you'll have to give it a hint:</p>\n\n<pre><code>&gt; let book = Book \"the sound and the fury\" \"faulkner\" 1929 [\"me\"] \n&gt; show book\n\"Book {bookTitle = \\\"the sound and the fury\\\", bookAuthor = \\\"faulkner\\\", bookYear = 1929, bookFans = [\\\"me\\\"]}\"\n&gt; read $ show book :: Book\nBook {bookTitle = \"the sound and the fury\", bookAuthor = \"faulkner\", bookYear = 1929, bookFans = [\"me\"]}\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 4249860, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af0d3b733d436d096a8077b56186c984?s=128&d=identicon&r=PG&f=1", "display_name": "Behtx3", "link": "https://stackoverflow.com/users/4249860/behtx3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 506, "favorite_count": 1, "accepted_answer_id": 28813380, "answer_count": 2, "score": 3, "last_activity_date": 1425310046, "creation_date": 1425309281, "last_edit_date": 1425309999, "question_id": 28813161, "link": "https://stackoverflow.com/questions/28813161/haskell-record-syntax-and-read-from-file-string-to-record-syntax-exception", "title": "Haskell record syntax and read from file. String to record syntax. *** Exception: Prelude.read: no parse", "body": "<p>I have the below Record Syntax.  </p>\n\n<pre><code>type Title = String\ntype Author = String\ntype Year = Int\ntype Fan = String\n\n\ndata Book = Book { bookTitle :: Title\n                 , bookAuthor:: Author\n                 , bookYear  :: Year\n                 , bookFans  :: [Fan]\n                 }\n                 deriving (Show, Read)\n\n\ntype Database = [Book]\n\nbookDatabase :: Database \nbookDatabase = [Book \"Harry Potter\" \"JK Rowling\" 1997 [\"Sarah\",\"Dave\"]]\n</code></pre>\n\n<p>I would like to create an IO function that reads a books.txt file and converts it to type Database. I think it needs to be similar to my attempt below. </p>\n\n<pre><code>main :: IO()\nmain = do fileContent &lt;- readFile \"books.txt\";\n          let database = (read fileContent :: Database)\n</code></pre>\n\n<p>What is the correct format the books.txt file? </p>\n\n<p>Below is my current books.txt content (same as bookDatabase).</p>\n\n<pre><code>[Book \"Harry Potter\" \"JK Rowling\" 1997 [\"Sarah\",\"Dave\"]]\n</code></pre>\n\n<blockquote>\n  <p>*** Exception: Prelude.read: no parse</p>\n</blockquote>\n"}, {"tags": ["haskell", "hmatrix"], "comments": [{"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1425308845, "post_id": 28812748, "comment_id": 45897804, "body": "So you are puzzled, and want us to be puzzled as well? Give all of the types and functions definitions involved, we are not telepaths (well, majority of us)."}, {"owner": {"reputation": 702, "user_id": 2890063, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/07aeeae7c14c12cefde16bf826eceb4a?s=128&d=identicon&r=PG", "display_name": "ocramz", "link": "https://stackoverflow.com/users/2890063/ocramz"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1425309237, "post_id": 28812748, "comment_id": 45898099, "body": "I though it would be pretty much self-contained: the <code>h</code> function retrieves a tuple of doubles from a &#39;Mesh&#39; datastruct (whose internals are not necessary here). The only error in the code above is in the computation of <code>knx</code>"}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1425309412, "post_id": 28812748, "comment_id": 45898204, "body": "Don&#39;t you think, that for a comprehensive answer people should be able at least try and reproduce the error (well, it&#39; not always the case, but you should provide the possibility)?"}, {"owner": {"reputation": 807, "user_id": 1278218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc600c707e4f698ad2e6d0a1b9d9f119?s=128&d=identicon&r=PG", "display_name": "erdeszt", "link": "https://stackoverflow.com/users/1278218/erdeszt"}, "edited": false, "score": 1, "creation_date": 1425309710, "post_id": 28812748, "comment_id": 45898411, "body": "(*) has type: (Num a) =&gt; a -&gt; a -&gt; a so I highly doubt you could multiply a Matrix Double with a Double anywhere in your code. I think the number you thought as Double outside of this function is actually gets inferred as a 1x1 matrix. Unfortunately I don&#39;t have a ghci at hand to test this but I can get back in a few hours if you are still puzzled then."}, {"owner": {"reputation": 702, "user_id": 2890063, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/07aeeae7c14c12cefde16bf826eceb4a?s=128&d=identicon&r=PG", "display_name": "ocramz", "link": "https://stackoverflow.com/users/2890063/ocramz"}, "edited": false, "score": 0, "creation_date": 1425310308, "post_id": 28812748, "comment_id": 45898801, "body": "You are quite right. The operation I was looking for is <code>scale :: Container c e =&gt; e -&gt; c e -&gt; c e</code>"}], "answers": [{"comments": [{"owner": {"reputation": 807, "user_id": 1278218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc600c707e4f698ad2e6d0a1b9d9f119?s=128&d=identicon&r=PG", "display_name": "erdeszt", "link": "https://stackoverflow.com/users/1278218/erdeszt"}, "edited": false, "score": 1, "creation_date": 1425315892, "post_id": 28813944, "comment_id": 45902606, "body": "I think the problem with overloading the (.*) for matrix x scalar product is that it doesn&#39;t associate as (*) should(and imply). E.g. the order of the arguments would matter and that would be confusing imho."}], "tags": [], "owner": {"reputation": 702, "user_id": 2890063, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/07aeeae7c14c12cefde16bf826eceb4a?s=128&d=identicon&r=PG", "display_name": "ocramz", "link": "https://stackoverflow.com/users/2890063/ocramz"}, "is_accepted": true, "score": 1, "last_activity_date": 1425311912, "last_edit_date": 1425311912, "creation_date": 1425311522, "answer_id": 28813944, "question_id": 28812748, "link": "https://stackoverflow.com/questions/28812748/hmatrix-matrix-double-double-product/28813944#28813944", "title": "HMatrix Matrix Double - Double product", "body": "<p>In <code>HMatrix</code>,  <code>scale :: Container c e =&gt; e -&gt; c e -&gt; c e</code> does what it says on the label (multiplies the <code>e</code> in a <code>c e</code> by the first <code>e</code>). Here are some usage examples here: <a href=\"https://hackage.haskell.org/package/hmatrix-0.16.1.4/docs/src/Data-Packed-Internal-Numeric.html\" rel=\"nofollow\">https://hackage.haskell.org/package/hmatrix-0.16.1.4/docs/src/Data-Packed-Internal-Numeric.html</a></p>\n\n<p>It should be noted that <code>scale x</code> constructs a Container type by considering x a singleton list, via <code>fromList</code>.</p>\n\n<p>It would be really handy if at least the common arithmetic operations would be overloaded, so that formulas may resemble their mathematical counterpart. I'm not sure whether defining function synonyms (e.g. <code>(.*) = scale</code> ) would be a good idea or it would just add a layer of complexity. Any thoughts?</p>\n"}], "owner": {"reputation": 702, "user_id": 2890063, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/07aeeae7c14c12cefde16bf826eceb4a?s=128&d=identicon&r=PG", "display_name": "ocramz", "link": "https://stackoverflow.com/users/2890063/ocramz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 28813944, "answer_count": 1, "score": 0, "last_activity_date": 1425311912, "creation_date": 1425308058, "last_edit_date": 1425309339, "question_id": 28812748, "link": "https://stackoverflow.com/questions/28812748/hmatrix-matrix-double-double-product", "title": "HMatrix Matrix Double - Double product", "body": "<pre><code>f1 :: Mesh -&gt; Matrix Double\nf1 me = knx where\n  hx :: Double\n  (hx , _) = h me\n  a, knx :: Matrix Double\n  a = fromLists [[1,2], [3,4]] \n  knx = hx * a \n  -- knx = 2 * a\n</code></pre>\n\n<p>I don't get why in the above function, mutliplying by 2 works whereas multiplying by hx = 0.5 doesn't. OTOH, multiplying a <code>Matrix Double</code> with a <code>Double</code> <em>outside</em> a function works as it should.</p>\n\n<pre><code>Couldn't match expected type \u2018Matrix Double\u2019\n            with actual type \u2018Double\u2019\nIn the first argument of \u2018(*)\u2019, namely \u2018hx\u2019\nIn the expression: hx * a\nFailed, modules loaded: none.\n</code></pre>\n\n<p>I am seriously puzzled. Any pointers are welcome!</p>\n"}, {"tags": ["algorithm", "sorting", "haskell", "data-structures"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1425284284, "post_id": 28805107, "comment_id": 45883576, "body": "Seems like some variant of a quadtree might be helpful here."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 6, "creation_date": 1425284491, "post_id": 28805107, "comment_id": 45883662, "body": "It seems &quot;obvious&quot; to me that you cannot get below <code>N^2</code> with that output format - it&#39;s the size of it, and unlikely to have reliable sharing. Not that I know how to do even that."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1425287644, "post_id": 28805107, "comment_id": 45885218, "body": "Are you sure it is unlikely to have reliable sharing? Since each element of the output is a sorted representation of the same graph, I&#39;d guess there is a significant amount of duplicated information across them."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1425289443, "post_id": 28805107, "comment_id": 45886223, "body": "@Viclib: How would you recognize the duplication? Also, I think that this question is language-agnostic, although you probably want to restrict it to pure data-structures/functions."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 1, "creation_date": 1425297498, "post_id": 28805107, "comment_id": 45890707, "body": "If you represented this as an N x N matrix, where any <code>(i,j)</code> represented the distance between <code>i</code> and <code>j</code>, would that not need a minimum of <code>N^2</code> just to check each distance? So long as your representation is like this I can&#39;t see a way around it. But I feel like you might be able to use a Finger Tree instead: <a href=\"https://hackage.haskell.org/package/fingertree-0.1.0.1/docs/Data-FingerTree.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/fingertree-0.1.0.1/docs/&hellip;</a> (I&#39;m not really sure <i>how</i> though, but I thought it might be worth making the suggestion - seeing as each node stores information about its ancestors)"}, {"owner": {"reputation": 891, "user_id": 99978, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/784837d98d18ff99681f612a62dddbcc?s=128&d=identicon&r=PG", "display_name": "j.p.", "link": "https://stackoverflow.com/users/99978/j-p"}, "edited": false, "score": 1, "creation_date": 1425301029, "post_id": 28805107, "comment_id": 45892770, "body": "How are your points given? Are they points in $\\mathbb R^2$ or do you have an arbitrary connected graph where only the triangle inequality holds?"}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1425311883, "last_edit_date": 1495539804, "creation_date": 1425311883, "answer_id": 28814083, "question_id": 28805107, "link": "https://stackoverflow.com/questions/28805107/how-can-i-improve-the-complexity-of-a-function-that-sorts-a-list-for-each-point/28814083#28814083", "title": "How can I improve the complexity of a function that sorts a list for each point on it?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/28805107/how-can-i-improve-the-complexity-of-a-function-that-sorts-a-list-for-each-point#comment45883576_28805107\">luqui commented</a>, using a quadtree or similar will probably help. Building the tree should take O(n log n): log n passes, each of them O(n) selection and partition. Once you have the tree, you can traverse it to build the lists. The difference between the lists for a node and its children should generally be small, and when some are large, that should tend to force others to be small. Using an adaptive sort (e.g., adaptive merge sort or adaptive splay sort) should thus give good performance, but analyzing the complexity will not be easy. If you want to try to get some sharing, you will have to represent the lists using a sequence type (e.g. <code>Data.Sequence</code>) and then try to figure out relationships between squares at various scales. I have serious doubts about the potential of such an approach to reduce time complexity.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 1, "answer_count": 1, "score": 9, "last_activity_date": 1425311883, "creation_date": 1425283682, "question_id": 28805107, "link": "https://stackoverflow.com/questions/28805107/how-can-i-improve-the-complexity-of-a-function-that-sorts-a-list-for-each-point", "title": "How can I improve the complexity of a function that sorts a list for each point on it?", "body": "<p>The following function:</p>\n\n<pre><code>sortByDist :: (Ord a, Floating a, RealFrac a) =&gt; [V2 a] -&gt; Map (V2 a) [V2 a]\nsortByDist graph = Map.fromList $ map sort graph where\n    sort point = (point, sortBy (comparing (distance point)) graph)\n</code></pre>\n\n<p>Maps each point P on a list to a list of points ordered by their distance to P. So, for example, <code>sortByDist [a, b, c, d] Map.! b</code> is the list [b,a,c,d] if <code>a</code> is the nearest point to b, <code>c</code> is the 2nd nearest, <code>d</code> is the 3rd.</p>\n\n<p>Since it performs a <code>n * log n</code> sort for each element, the complexity is <code>n^2 * log n</code>. This agrees with benchmarks of the time required to sort a list of N points:</p>\n\n<pre><code>points  time\n200     0m0.086s\n400     0m0.389s\n600     0m0.980s\n800     0m1.838s\n1000    0m2.994s\n1200    0m4.350s\n1400    0m6.477s\n1600    0m8.726s\n3200    0m39.216s    \n</code></pre>\n\n<p>How much can this be improved theoretically? Is it possible to get it down to <code>N * log N</code>?</p>\n"}, {"tags": ["linux", "haskell", "ubuntu", "installation"], "comments": [{"owner": {"reputation": 1436, "user_id": 2481010, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/Ibsg7.jpg?s=128&g=1", "display_name": "Rupesh", "link": "https://stackoverflow.com/users/2481010/rupesh"}, "edited": false, "score": 0, "creation_date": 1425272735, "post_id": 28802845, "comment_id": 45879526, "body": "Have you install all required dependencies:  sudo apt-get install  libgmp-dev zlib1g-dev libgl1-mesa-dev libglc-dev freeglut3-dev libedit-dev libglw1-mesa-dev libglw1-mesa"}, {"owner": {"reputation": 1436, "user_id": 2481010, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/Ibsg7.jpg?s=128&g=1", "display_name": "Rupesh", "link": "https://stackoverflow.com/users/2481010/rupesh"}, "edited": false, "score": 0, "creation_date": 1425272884, "post_id": 28802845, "comment_id": 45879574, "body": "I&#39;ve used this script <a href=\"https://raw.github.com/chrisprobst/ubuntu-raring-haskell/master/install.sh\" rel=\"nofollow noreferrer\">raw.github.com/chrisprobst/ubuntu-raring-haskell/master/&hellip;</a>"}, {"owner": {"reputation": 2534, "user_id": 375616, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/05e5a5b30a8fd45115825e2942c82183?s=128&d=identicon&r=PG", "display_name": "Nutritioustim", "link": "https://stackoverflow.com/users/375616/nutritioustim"}, "reply_to_user": {"reputation": 1436, "user_id": 2481010, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/Ibsg7.jpg?s=128&g=1", "display_name": "Rupesh", "link": "https://stackoverflow.com/users/2481010/rupesh"}, "edited": false, "score": 0, "creation_date": 1425312374, "post_id": 28802845, "comment_id": 45900249, "body": "I tried the a fresh install of ubuntu on vagrant (<code>http:&#47;&#47;files.vagrantup.com&#47;precise32.box</code>), and the dependencies you listed, using your script. And I&#39;m still getting the same error (<a href=\"http://pastebin.com/NksSjSkg\" rel=\"nofollow noreferrer\">pastebin.com/NksSjSkg</a>)."}], "answers": [{"tags": [], "owner": {"reputation": 2534, "user_id": 375616, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/05e5a5b30a8fd45115825e2942c82183?s=128&d=identicon&r=PG", "display_name": "Nutritioustim", "link": "https://stackoverflow.com/users/375616/nutritioustim"}, "is_accepted": true, "score": 0, "last_activity_date": 1425350094, "creation_date": 1425350094, "answer_id": 28823133, "question_id": 28802845, "link": "https://stackoverflow.com/questions/28802845/error-installing-latest-haskell-source-on-ubuntu-server-12-04/28823133#28823133", "title": "Error Installing Latest Haskell source on Ubuntu Server 12.04", "body": "<p>Ok, solved this with the help of the fine folks on IRC (#haskell). Turns out that compiling ghc from source is really reserved for hacking on the compiler itself. So I was recommended the GHC binary package. That's presently <a href=\"https://www.haskell.org/ghc/download_ghc_7_8_4#x86linux\" rel=\"nofollow\">GHC 7.8.4</a>. </p>\n\n<p>From there, <code>./configure</code> and <code>sudo make install</code> worked for my platform. With a working ghc, you can then get the <a href=\"https://www.haskell.org/cabal/download.html\" rel=\"nofollow\">latest Cabal</a>. Cabal library needs to be built, and cabal-install is a binary. They are currently both at 1.22.0.0.</p>\n\n<p>Hope this helps someone.</p>\n"}], "owner": {"reputation": 2534, "user_id": 375616, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/05e5a5b30a8fd45115825e2942c82183?s=128&d=identicon&r=PG", "display_name": "Nutritioustim", "link": "https://stackoverflow.com/users/375616/nutritioustim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 197, "favorite_count": 0, "accepted_answer_id": 28823133, "answer_count": 1, "score": 0, "last_activity_date": 1425350094, "creation_date": 1425271342, "last_edit_date": 1425278220, "question_id": 28802845, "link": "https://stackoverflow.com/questions/28802845/error-installing-latest-haskell-source-on-ubuntu-server-12-04", "title": "Error Installing Latest Haskell source on Ubuntu Server 12.04", "body": "<p>I trying to install the latest ghc (ghc-7.8.4-src.tar.bz2) on my ubuntu server version 12.04.</p>\n\n<pre><code>No LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 12.04 LTS\nRelease:        12.04\nCodename:       precise\n</code></pre>\n\n<p>I know ghc needs a pre existing installation to compile. So I tried with <code>sudo apt-get install ghc</code> and <code>sudo apt-get install haskell-platform</code>. Either case gives me the below error when I run <code>sudo make install</code>. <strong><em>i)</em></strong> Any ideas on solving this? Also, <strong><em>ii)</em></strong> it takes quite a long time to compile, and even get to this point. So is there a way to vet the compilation before hand?</p>\n\n<pre><code>...\nInstalling library in /usr/local/lib/ghc-7.8.4/ghc-prim-0.3.1.0\nghc-cabal: Error: Could not find module: GHC.PrimopWrappers with any   suffix:\n[\"p_hi\"] in the search path: [\"dist-install/build\"]\nmake[1]: *** [install_packages] Error 1\nmake: *** [install] Error 2\n</code></pre>\n"}, {"tags": ["haskell", "generics"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1425270383, "post_id": 28802666, "comment_id": 45878998, "body": "Change the default type signature to <code>default encode :: (Generic a, Encode&#39; (Rep a)) =&gt; a -&gt; [Bool]</code>"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1425285224, "post_id": 28802767, "comment_id": 45883995, "body": "Even when the compiler <i>does</i> know something, Haskell insists that the constraints (which may incur a run-time bookkeeping cost) be explicit."}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 5, "last_activity_date": 1425270860, "creation_date": 1425270860, "answer_id": 28802767, "question_id": 28802666, "link": "https://stackoverflow.com/questions/28802666/ghc-generics-example-doesnt-work/28802767#28802767", "title": "GHC.Generics example doesn&#39;t work", "body": "<p>Not everything that is <code>Generic</code> can be encoded by <code>encode'</code>. Only those things that are both <code>Generic</code> and have a representation, <code>Rep a</code> that has an <code>Encode'</code> instance can be encoded by the generic <code>encode'</code>. The compiler doesn't know (and can't know) that there isn't something <code>Generic</code> whose <code>Rep</code> isn't covered by an <code>Encode'</code> instance. An author of a <code>Generic</code> instance could use a type for their <code>Rep</code> that doesn't even exist yet.</p>\n\n<p>You need to add the requested <code>Encode' (Rep a)</code> constraint to the context for the <code>default encode</code>.</p>\n\n<pre><code>default encode :: (Generic a, Encode' (Rep a)) =&gt; a -&gt; [Bool]\n</code></pre>\n"}], "owner": {"reputation": 3333, "user_id": 3859566, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a7c4c1c9ad9bd41f49004d32884bc680?s=128&d=identicon&r=PG&f=1", "display_name": "yong", "link": "https://stackoverflow.com/users/3859566/yong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 28802767, "answer_count": 1, "score": 3, "last_activity_date": 1425270860, "creation_date": 1425270074, "question_id": 28802666, "link": "https://stackoverflow.com/questions/28802666/ghc-generics-example-doesnt-work", "title": "GHC.Generics example doesn&#39;t work", "body": "<p>I'm trying to get the example implementation of a generic binary encoding class described in <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/GHC-Generics.html\" rel=\"nofollow\">GHC.Generics</a> to work, but when I try to compile it the following code I get an error.</p>\n\n<pre><code>import GHC.Generics\n\nclass Encode' f where\n  encode' :: f p -&gt; [Bool]\n\ninstance Encode' V1 where\n  encode' x = undefined\n\ninstance Encode' U1 where\n  encode' U1 = []\n\ninstance (Encode' f, Encode' g) =&gt; Encode' (f :+: g) where\n  encode' (L1 x) = False : encode' x\n  encode' (R1 x) = True  : encode' x\n\ninstance (Encode' f, Encode' g) =&gt; Encode' (f :*: g) where\n  encode' (x :*: y) = encode' x ++ encode' y\n\ninstance (Encode c) =&gt; Encode' (K1 i c) where\n  encode' (K1 x) = encode x\n\ninstance (Encode' f) =&gt; Encode' (M1 i t f) where\n  encode' (M1 x) = encode' x\n\nclass Encode a where\n  encode :: a -&gt; [Bool]\n  default encode :: (Generic a) =&gt; a -&gt; [Bool]\n  encode x = encode' (from x)\n</code></pre>\n\n<p>GHC complains with:</p>\n\n<pre><code>Could not deduce (Encode' (Rep a)) arising from a use of \u2018encode'\u2019\nfrom the context (Encode a)\n  bound by the class declaration for \u2018Encode\u2019\n  ...\nor from (Generic a)\n  bound by the type signature for encode :: Generic a =&gt; a -&gt; [Bool]\n  ...\nIn the expression: encode' (from x)\nIn an equation for \u2018encode\u2019: encode x = encode' (from x)\n</code></pre>\n\n<p>What am I missing?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 497, "user_id": 3979725, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mj52I.jpg?s=128&g=1", "display_name": "David Lilue", "link": "https://stackoverflow.com/users/3979725/david-lilue"}, "edited": false, "score": 1, "creation_date": 1425271683, "post_id": 28802477, "comment_id": 45879280, "body": "Because <code>$ has low, right-associative binding precedence</code>. So, in the expression <code>maximum . map product . groupsOf 5 $ x</code>, its begin with (.) (infixr 9), then the composite function applied to 5 and last <code>bigFunction $ x</code>."}, {"owner": {"reputation": 8676, "user_id": 1113881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sBc0F.jpg?s=128&g=1", "display_name": "CR Drost", "link": "https://stackoverflow.com/users/1113881/cr-drost"}, "edited": false, "score": 0, "creation_date": 1425321435, "post_id": 28802477, "comment_id": 45905678, "body": "If it helps, the way to think about Haskell syntax is: parentheses come first, then function applications, then operators, then special forms (let_in, case_of, etc.). Parentheses have unambiguous order. Functions are left-associative: a function eats up the first thing it sees, so <code>f g h</code> is <code>f</code> eating <code>g</code> up immediately and resulting in a function which eats <code>h</code> up, as opposed to <code>f (g h)</code> where g eats h and f waits patiently to eat the result, as it is contained in a &quot;bun&quot; of parentheses. Operators follow the &quot;infixr, infixl&quot; rules. <code>$</code> has lower precedence than <code>.</code>, causing your confusion."}, {"owner": {"reputation": 3369, "user_id": 645703, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/53dff9cde38dd11e5e3f2368a3da1193?s=128&d=identicon&r=PG", "display_name": "Matt Elson", "link": "https://stackoverflow.com/users/645703/matt-elson"}, "reply_to_user": {"reputation": 8676, "user_id": 1113881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sBc0F.jpg?s=128&g=1", "display_name": "CR Drost", "link": "https://stackoverflow.com/users/1113881/cr-drost"}, "edited": false, "score": 0, "creation_date": 1425351866, "post_id": 28802477, "comment_id": 45918020, "body": "@ChrisDrost, thanks. $ can be substituted with parentheses, but they have quite different precedence, which is really confusing for me."}, {"owner": {"reputation": 8676, "user_id": 1113881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sBc0F.jpg?s=128&g=1", "display_name": "CR Drost", "link": "https://stackoverflow.com/users/1113881/cr-drost"}, "edited": false, "score": 1, "creation_date": 1425413465, "post_id": 28802477, "comment_id": 45951197, "body": "Then don&#39;t think of it as &quot;substituting parentheses.&quot; Take it back to the definition: <code>a $ b = a b</code>. In other words, <code>$</code> is the operator which takes its left hand side and applies it to the right hand side. The elimination of parentheses is not special to it -- that happens, potentially, for all operators. It&#39;s just that this particular operator does something really ubiquitous. The real thing you want to think of is &quot;functions happen first, operators happen after&quot;, so that turning a function application from a function into the <code>$</code> operator makes it the lowest precedence."}], "answers": [{"tags": [], "owner": {"reputation": 5885, "user_id": 1436026, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/Saodx.jpg?s=128&g=1", "display_name": "DJG", "link": "https://stackoverflow.com/users/1436026/djg"}, "is_accepted": true, "score": 14, "last_activity_date": 1425269905, "last_edit_date": 1425269905, "creation_date": 1425269558, "answer_id": 28802604, "question_id": 28802477, "link": "https://stackoverflow.com/questions/28802477/how-to-use-for-avoiding-parenthesis-in-haskell/28802604#28802604", "title": "How to use $ for avoiding parenthesis in Haskell", "body": "<p><code>$</code> takes whatever function is on the left and applies it to whatever is on the right. In can be defined liked so:</p>\n\n<pre><code>expr1 $ expr2 = expr1 expr2\n</code></pre>\n\n<p>Of course, putting parenthesis around any identifier by itself doesn't change anything, so let's do that:</p>\n\n<pre><code>expr1 $ expr2 = (expr1) (expr2)\n</code></pre>\n\n<p>And since Haskell is lazy, we can simply substitute the arguments to <code>$</code> into the resulting expression:</p>\n\n<pre><code>f $ g $ h x = (f) (g $ h x) = (f) ((g) (h x))\n</code></pre>\n\n<p>or</p>\n\n<pre><code>maximum . map product . groupsOf 5 $ x = (maximum . map product . groupsOf 5) (x)\n</code></pre>\n\n<p>So, <code>$</code> (when fully applied) can be thought of as putting parenthesis around <em>both</em> sides of the expression. </p>\n"}], "owner": {"reputation": 3369, "user_id": 645703, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/53dff9cde38dd11e5e3f2368a3da1193?s=128&d=identicon&r=PG", "display_name": "Matt Elson", "link": "https://stackoverflow.com/users/645703/matt-elson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1135, "favorite_count": 0, "accepted_answer_id": 28802604, "answer_count": 1, "score": 1, "last_activity_date": 1425269905, "creation_date": 1425268527, "last_edit_date": 1495541866, "question_id": 28802477, "link": "https://stackoverflow.com/questions/28802477/how-to-use-for-avoiding-parenthesis-in-haskell", "title": "How to use $ for avoiding parenthesis in Haskell", "body": "<p>Haskell documentation(<a href=\"http://hackage.haskell.org/package/base-4.5.0.0/docs/Prelude.html#v:-36-\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/base-4.5.0.0/docs/Prelude.html#v:-36-</a>) states:</p>\n\n<blockquote>\n  <p>$ has low, right-associative binding precedence, so it sometimes\n  allows parentheses to be omitted; for example:</p>\n\n<pre><code> f $ g $ h x  =  f (g (h x))\n</code></pre>\n</blockquote>\n\n<p>Namely,  $ can be substituted with parentheses (around anything appearing AFTER $).</p>\n\n<p>So when I saw an example at <a href=\"https://stackoverflow.com/a/8275081/645703\">https://stackoverflow.com/a/8275081/645703</a>,</p>\n\n<pre><code>maximum . map product . groupsOf 5 $ x =  (maximum . map product .\ngroupsOf 5) x\n</code></pre>\n\n<p>I think it should be: (parentheses is around anything appearing AFTER $)</p>\n\n<pre><code>maximum . map product . groupsOf 5 $ x =  maximum . map product .\ngroupsOf 5 (x)\n</code></pre>\n\n<p>I know I am wrong, but I don't know why.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1425260432, "post_id": 28800975, "comment_id": 45876769, "body": "Would it be because evaluating a <code>Bind</code> would converting a <code>Calculator x a</code> into a <code>Calculator x b</code>, and then you&#39;re trying to turn that into a <code>Result a</code>?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425265183, "post_id": 28800975, "comment_id": 45877815, "body": "The <code>a</code> in <code>Bind :: Calculator x a -&gt; (a -&gt; Calculator x b) -&gt; Calculator x b</code> is existential - it cannot be unified with anything. In other words, the <code>a</code> and <code>b</code> in the first argument are necessarily unrelated - and the type checker will never unify them, because that would cause <code>a</code> to escape its scope. However, calling eval on <code>m</code> in <code>eval (Bind m f) ...</code> requires that <code>x ~ Result a</code> (referring to the type variables in the constructor Bind). However, <code>x</code> in <code>Calculator x a</code> is a phantom type variable anyways - I don&#39;t know what you hoped to achieve."}], "answers": [{"tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": true, "score": 4, "last_activity_date": 1425265281, "creation_date": 1425265281, "answer_id": 28802068, "question_id": 28800975, "link": "https://stackoverflow.com/questions/28800975/monad-error-could-not-deduce/28802068#28802068", "title": "Monad error (Could not deduce)", "body": "<p>First of all, your constraints need to be pushed into the <code>Calculator</code> constructors. To see why, let's rename the type variables in <code>Bind</code>'s signature slightly:</p>\n\n<pre><code>data Calculator x a where\n  Bind :: Calculator x b -&gt; (b -&gt; Calculator x a) -&gt; Calculator x a\n\neval :: (Integral a, Num a, Eq a) =&gt; ...\neval (Bind m f) = ...\n</code></pre>\n\n<p>Here, <code>m</code> has type <code>Calculator x b</code>, and the constraints on <code>a</code> (namely, <code>(Integral a, Num a, Eq a)</code>) don't impose anything on <code>b</code>, so you don't have a hope of recursively calling <code>eval</code> on <code>m</code>.</p>\n\n<p>This one is straightforward to fix:</p>\n\n<pre><code>data Calculator x a where\n  Bind :: Calculator x a -&gt; (a -&gt; Calculator x b) -&gt; Calculator x b\n  Return :: a -&gt; Calculator x a\n  Add :: (Num a) =&gt; a -&gt; a -&gt; Calculator x a\n  Div :: (Num a, Eq a, Integral a) =&gt; a -&gt; a -&gt; Calculator x a\n</code></pre>\n\n<p>and then <code>eval</code> no longer needs constraints on <code>a</code> since it will be provided by pattern matching on the relevant constructor.</p>\n\n<p>The other problem stems from the <code>x</code> type parameter of <code>Calculator</code>. In </p>\n\n<pre><code>Bind :: Calculator x b -&gt; (b -&gt; Calculator x a) -&gt; Calculator x a\n</code></pre>\n\n<p>note that the choice of <code>x</code> stays the same. So when you pattern match on <code>Bind m f :: Calculator (Result a) a</code>, you get</p>\n\n<pre><code>m :: Calculator (Result a) b\nf :: b -&gt; Calculator (Result a) a\n</code></pre>\n\n<p>However, <code>eval</code>'s type can only be instantiated to <code>Calculator (Result a) a -&gt; Result a</code> or <code>Calculator (Result b) b -&gt; Result b</code>, so we can't apply it recursively on <code>m</code>.</p>\n\n<p>The solution is to parametrize <code>Calculator</code> on a functor instead of a type, because then we can type <code>eval :: Calculator Result a -&gt; Result a</code>:</p>\n\n<pre><code>{-# LANGUAGE GADTs, KindSignatures #-}\n\nmodule Main where\n\ndata Result a = Value a | Undefined deriving (Show, Eq)\n\ndata Calculator (f :: * -&gt; *) a where\n  Bind :: Calculator f a -&gt; (a -&gt; Calculator f b) -&gt; Calculator f b\n  Return :: a -&gt; Calculator f a\n  Add :: (Num a) =&gt; a -&gt; a -&gt; Calculator f a\n  Div :: (Num a, Eq a, Integral a) =&gt; a -&gt; a -&gt; Calculator f a\n\ninstance Monad (Calculator f) where\n  return = Return\n  (&gt;&gt;=) = Bind\n\ncalculate :: Calculator Result Integer\ncalculate = do\n  value &lt;- addr 1 2\n  divr 1 value\n\naddr :: (Num a) =&gt; a -&gt; a -&gt; Calculator Result a\naddr a b = Add a b\n\ndivr :: (Num a, Eq a, Integral a) =&gt; a -&gt; a -&gt; Calculator Result a\ndivr a b = Div a b\n\neval :: Calculator Result a -&gt; Result a\neval (Add a b) = Value (a + b)\neval (Div a b)\n  | b == 0    = Undefined\n  | otherwise = Value $ a `div` b\n\neval (Bind m f) =\n  case eval m of\n    Value v -&gt; eval $ f v\n    _       -&gt; undefined -- for now\n</code></pre>\n"}], "owner": {"reputation": 16822, "user_id": 560073, "user_type": "registered", "accept_rate": 77, "profile_image": "https://lh6.googleusercontent.com/-A_vJq0ilPI8/AAAAAAAAAAI/AAAAAAAAAJI/dKesA-ExUzA/photo.jpg?sz=128", "display_name": "Linus Oleander", "link": "https://stackoverflow.com/users/560073/linus-oleander"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 383, "favorite_count": 0, "accepted_answer_id": 28802068, "answer_count": 1, "score": 3, "last_activity_date": 1425265281, "creation_date": 1425255811, "question_id": 28800975, "link": "https://stackoverflow.com/questions/28800975/monad-error-could-not-deduce", "title": "Monad error (Could not deduce)", "body": "<p>I'm trying to build a simple monad calculator, but it wont compile for some reason.</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\nmodule Main where\n\ndata Result a = Value a | Undefined deriving (Show, Eq)\n\ndata Calculator x a where\n  Bind :: Calculator x a -&gt; (a -&gt; Calculator x b) -&gt; Calculator x b\n  Return :: a -&gt; Calculator x a\n  Add :: a -&gt; a -&gt; Calculator x a\n  Div :: a -&gt; a -&gt; Calculator x a\n\ninstance Monad (Calculator x) where\n  return = Return\n  (&gt;&gt;=) = Bind\n\ncalculate :: Calculator (Result Integer) Integer\ncalculate = do\n  value &lt;- addr 1 2\n  divr 1 value\n\naddr :: a -&gt; a -&gt; Calculator (Result a) a\naddr a b = Add a b\n\ndivr :: a -&gt; a -&gt; Calculator (Result a) a\ndivr a b = Div a b\n\neval :: (Integral a, Num a, Eq a) =&gt; Calculator (Result a) a -&gt; Result a\neval (Add a b) = Value (a + b)\neval (Div a b)\n  | b == 0    = Undefined\n  | otherwise = Value $ a `div` b\n\neval (Bind m f) =\n  case eval m of\n    Value v -&gt; eval $ f v\n    _       -&gt; undefined -- for now\n</code></pre>\n\n<p>The error I'm getting is this</p>\n\n<pre><code>Main.hs:35:13:\n    Could not deduce (a1 ~ a)\n    from the context (Integral a, Num a, Eq a)\n      bound by the type signature for\n                 eval :: (Integral a, Num a, Eq a) =&gt;\n                         Calculator (Result a) a -&gt; Result a\n      at Main.hs:28:9-72\n      \u2018a1\u2019 is a rigid type variable bound by\n           a pattern with constructor\n             Bind :: forall x b a.\n                     Calculator x a -&gt; (a -&gt; Calculator x b) -&gt; Calculator x b,\n           in an equation for \u2018eval\u2019\n           at Main.hs:34:7\n      \u2018a\u2019 is a rigid type variable bound by\n          the type signature for\n            eval :: (Integral a, Num a, Eq a) =&gt;\n                    Calculator (Result a) a -&gt; Result a\n          at Main.hs:28:9\n    Expected type: Calculator (Result a) a\n      Actual type: Calculator (Result a) a1\n    Relevant bindings include\n      f :: a1 -&gt; Calculator (Result a) a (bound at Main.hs:34:14)\n      m :: Calculator (Result a) a1 (bound at Main.hs:34:12)\n      eval :: Calculator (Result a) a -&gt; Result a (bound at Main.hs:29:1)\n    In the first argument of \u2018eval\u2019, namely \u2018m\u2019\n    In the expression: eval m\n</code></pre>\n\n<p>The error occurs on the third to last line. Any one knows why?</p>\n\n<p>I'm using ghci <code>7.8.4</code>. What I'm I missing?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13597, "user_id": 1463507, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9d940a7d55911df9afca8e2dd525f3ee?s=128&d=identicon&r=PG", "display_name": "kqr", "link": "https://stackoverflow.com/users/1463507/kqr"}, "edited": false, "score": 3, "creation_date": 1425293657, "post_id": 28800709, "comment_id": 45888557, "body": "If you want the latter behaviour, <a href=\"https://hackage.haskell.org/package/bifunctors-4.2/docs/Data-Bifunctor.html\" rel=\"nofollow noreferrer\">Either is a bifunctor</a>."}], "answers": [{"comments": [{"owner": {"reputation": 10593, "user_id": 4621513, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/uCfJK.png?s=128&g=1", "display_name": "mkrieger1", "link": "https://stackoverflow.com/users/4621513/mkrieger1"}, "edited": false, "score": 5, "creation_date": 1425256271, "post_id": 28800778, "comment_id": 45875824, "body": "Thanks for the quick answer! I had already understood the <code>Maybe</code> behaviour. What helped me with <code>Either</code> is to remind myself that not <code>Either</code> is a functor, but <code>Either a</code>!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 10593, "user_id": 4621513, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/uCfJK.png?s=128&g=1", "display_name": "mkrieger1", "link": "https://stackoverflow.com/users/4621513/mkrieger1"}, "edited": false, "score": 0, "creation_date": 1425286475, "post_id": 28800778, "comment_id": 45884625, "body": "@mkrieger1 A simple mnemonic rule to remember which is which: the <code>Right</code> case stands for correct/successful/&quot;right&quot;, the <code>Left</code> one stands for &quot;not right&quot; hence wrong/incorrect/failing."}], "tags": [], "owner": {"reputation": 27110, "user_id": 425736, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/p84Q9.png?s=128&g=1", "display_name": "Michael Edenfield", "link": "https://stackoverflow.com/users/425736/michael-edenfield"}, "is_accepted": true, "score": 14, "last_activity_date": 1425254314, "creation_date": 1425254314, "answer_id": 28800778, "question_id": 28800709, "link": "https://stackoverflow.com/questions/28800709/difference-between-left-and-right/28800778#28800778", "title": "Difference between Left and Right", "body": "<p>The <code>Left</code> constructor on <code>Either</code> is implemented as the \"failure case\". Like other functors, once this failure value enters the equation, it prevents any real computations from happening. So, when you apply <code>fmap</code> to <code>Left \"foo\"</code> it immediately returns the same \"failure\" value. </p>\n\n<p>You can see this by looking at how <code>Either</code> implements <code>fmap</code>:</p>\n\n<pre><code>instance Functor (Either a) where\n    fmap f (Right x) = Right (f x)\n    fmap f (Left x) = Left x\n</code></pre>\n\n<p>The idea here is that <code>Left \"foo\"</code> would actually be something more descriptive, like <code>Left \"Value could not be computed\"</code>. If you try to apply further functions to that value, you just want the \"error\" to get passed along intact.</p>\n\n<p>If it helps, just imagine how <code>fmap</code> would work on some other type where the failure case is more obvious, e.g.:</p>\n\n<pre><code>-- Maybe: failure value is `Nothing`\nfmap (replicate 3) (Nothing)\n</code></pre>\n\n<p>This produces <code>Nothing</code>, not <code>[Nothing, Nothing, Nothing]</code></p>\n"}], "owner": {"reputation": 10593, "user_id": 4621513, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/uCfJK.png?s=128&g=1", "display_name": "mkrieger1", "link": "https://stackoverflow.com/users/4621513/mkrieger1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2934, "favorite_count": 1, "accepted_answer_id": 28800778, "answer_count": 1, "score": 6, "last_activity_date": 1425254314, "creation_date": 1425253773, "question_id": 28800709, "link": "https://stackoverflow.com/questions/28800709/difference-between-left-and-right", "title": "Difference between Left and Right", "body": "<p>I am currently reading the excellent \"Learn You a Haskell for Great Good\", and in the <a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids\">section about functors</a> there is an example involving <code>Either</code> which I don't understand:</p>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>ghci&gt; fmap (replicate 3) (Right \"blah\")\nRight [\"blah\",\"blah\",\"blah\"]\n</code></pre>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>ghci&gt; fmap (replicate 3) (Left \"foo\")\nLeft \"foo\"\n</code></pre>\n\n<p>Why is the latter not <code>Left [\"foo\", \"foo\", \"foo\"]</code>?</p>\n"}, {"tags": ["haskell", "charts"], "answers": [{"tags": [], "owner": {"reputation": 31, "user_id": 4621450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1ed82d121c4813f6921b163b9e24527?s=128&d=identicon&r=PG&f=1", "display_name": "Norman Duncan", "link": "https://stackoverflow.com/users/4621450/norman-duncan"}, "is_accepted": true, "score": 1, "last_activity_date": 1428835720, "creation_date": 1428835720, "answer_id": 29588563, "question_id": 28800696, "link": "https://stackoverflow.com/questions/28800696/superimposed-plots-with-haskell-chart/29588563#29588563", "title": "Superimposed plots with haskell-chart", "body": "<p>The histogram package exported everything I needed to make a <code>Default (PlotHist x Double)</code> instance like this:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Graphics.Rendering.Chart.Plot.Histogram(defaultNormedPlotHist)\ninstance Default (PlotHist x Double) where\n    def = defaultNormedPlotHist\n</code></pre>\n\n<p>Here is the plot I wanted</p>\n\n<p><img src=\"https://i.stack.imgur.com/I2f4U.png\" alt=\"enter image description here\"></p>\n"}], "owner": {"reputation": 31, "user_id": 4621450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1ed82d121c4813f6921b163b9e24527?s=128&d=identicon&r=PG&f=1", "display_name": "Norman Duncan", "link": "https://stackoverflow.com/users/4621450/norman-duncan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "accepted_answer_id": 29588563, "answer_count": 1, "score": 1, "last_activity_date": 1428835720, "creation_date": 1425253638, "question_id": 28800696, "link": "https://stackoverflow.com/questions/28800696/superimposed-plots-with-haskell-chart", "title": "Superimposed plots with haskell-chart", "body": "<p>I am trying to use haskell-chart to draw a histogram with a superimposed density function. Following the examples on the project wiki and the <a href=\"https://github.com/timbod7/haskell-chart/blob/f03be667eccfef4c62c50b93cd4638c82151549d/chart-tests/tests/Test19.hs\" rel=\"nofollow\">tests</a>, I wrote this code:</p>\n\n<pre><code>chart = toRenderable $ do\n    plot $ fmap histToPlot $ liftEC $ do\n        plot_hist_title .= \"My histogram\"\n        plot_hist_bins .= 10\n        plot_hist_values .= ([0,1..100] :: Double)\n        plot_hist_norm_func .= const id\n    plot (line \"my curve\" myCurve) where \n        myCurve = [zip [0,1..100] (repeat 20)] :: [[(Double, Double)]]\n</code></pre>\n\n<p>This gives a type error, because the histogram plot is <code>EC (Layout Double Int)</code> and the curve plot is <code>EC (Layout Double Double)</code>. I tried to make the histogram plot into an <code>EC (Layout Double Double)</code> by changing <code>plot_hist_norm_func .= const id</code> into <code>const (fromIntegral . id :: Int -&gt; Double)</code> and providing an instance of <code>Default (PlotHist x Double)</code>. The resulted code type-checked but did not draw anything. My question is: <em>how do I draw a histogram with a curve in haskell-chart?</em></p>\n"}, {"tags": ["haskell", "category-theory", "abstract-algebra"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 4, "creation_date": 1425253435, "post_id": 28800561, "comment_id": 45875114, "body": "You don&#39;t really need Category theory for using most of the Haskell ecosystem."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425264614, "post_id": 28800561, "comment_id": 45877672, "body": "I would argue that <code>do</code> notation is sort of a happy accident. There is underlying mathematical theory to Monads - but a Monad is just the  mathematical construct <code>(m, return :: forall a . a -&gt; m a, bind :: forall a b . m a -&gt; (a -&gt; m b) -&gt; m b)</code>. Do notation happens to be syntactic sugar which is compatible with the Monad structure; happens to look like a &quot;stateful&quot; control flow (which makes sense - monads are often used to model stateful computations) that is recognizable to programmers coming from imperative languages; and makes it easier (sometimes) to reason about monadic computations."}], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 4621491, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-w9ZebJ331PI/AAAAAAAAAAI/AAAAAAAAAOU/CninE3Iqh9k/photo.jpg?sz=128", "display_name": "Pablo Parada", "link": "https://stackoverflow.com/users/4621491/pablo-parada"}, "edited": false, "score": 0, "creation_date": 1425256140, "post_id": 28800605, "comment_id": 45875785, "body": "Maybe I couldn&#39;t express my question correctly.  In a mathematical point of view, is do notation a monad composition?  As you answered, the desugar looks like is function sequencing, not composition."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 43, "user_id": 4621491, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-w9ZebJ331PI/AAAAAAAAAAI/AAAAAAAAAOU/CninE3Iqh9k/photo.jpg?sz=128", "display_name": "Pablo Parada", "link": "https://stackoverflow.com/users/4621491/pablo-parada"}, "edited": false, "score": 0, "creation_date": 1425257235, "post_id": 28800605, "comment_id": 45876054, "body": "@PabloParada do notation gets converted by the compiler into the form in the answer, so those two ways of writing that code are exactly equivalent to each other. do notation is just another way of writing the calls to <code>&gt;&gt;=</code>. Also, usually when I think of monad composition in Haskell, I think of stuff at the type level like the list type composed with the <code>Maybe</code> type (<code>[Maybe a]</code>)."}, {"owner": {"reputation": 43, "user_id": 4621491, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-w9ZebJ331PI/AAAAAAAAAAI/AAAAAAAAAOU/CninE3Iqh9k/photo.jpg?sz=128", "display_name": "Pablo Parada", "link": "https://stackoverflow.com/users/4621491/pablo-parada"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1425257598, "post_id": 28800605, "comment_id": 45876138, "body": "@DavidYoung Got what you said but what I&#39;m trying to get is if do notation abstract composition for monadic structures. When I mean composition, is like function composition. e.g: (g o f )(1) = g( f(1))."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 43, "user_id": 4621491, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-w9ZebJ331PI/AAAAAAAAAAI/AAAAAAAAAOU/CninE3Iqh9k/photo.jpg?sz=128", "display_name": "Pablo Parada", "link": "https://stackoverflow.com/users/4621491/pablo-parada"}, "edited": false, "score": 3, "creation_date": 1425261811, "post_id": 28800605, "comment_id": 45877062, "body": "@PabloParada do notation is just a syntactic shorthand. What it actually does is call <code>&gt;&gt;=</code>. Because of the translation of do notation into <code>&gt;&gt;=</code> calls, that&#39;s exactly the same as asking if the <code>&gt;&gt;=</code> is monadic composition. It almost is, actually. There is a very similar function called <code>&gt;=&gt;</code> which is Kleisli composition. It is defined in terms of <code>&gt;&gt;=</code> here: <a href=\"http://haddocks.fpcomplete.com/fp/7.8/20140916-162/base/src/Control-Monad.html#line-178\" rel=\"nofollow noreferrer\">haddocks.fpcomplete.com/fp/7.8/20140916-162/base/src/&hellip;</a> ."}], "tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": false, "score": 10, "last_activity_date": 1425253082, "creation_date": 1425253082, "answer_id": 28800605, "question_id": 28800561, "link": "https://stackoverflow.com/questions/28800561/do-notation-and-monad-composition/28800605#28800605", "title": "Do notation and Monad composition", "body": "<blockquote>\n  <p>Is do notation a sort of monad composition?</p>\n</blockquote>\n\n<p>There is nothing special about do notation. It is just a syntax sugar over the monad functions. A nice example from Haskell wikibook:</p>\n\n<pre><code>do x1 &lt;- action1\n   x2 &lt;- action2\n   action3 x1 x2\n</code></pre>\n\n<p>De-sugars to:</p>\n\n<pre><code>action1\n  &gt;&gt;=\n    \\ x1 -&gt; action2\n      &gt;&gt;=\n        \\ x2 -&gt; action3 x1 x2\n</code></pre>\n\n<p>Real world haskell book has a nice section explaining how this <a href=\"http://book.realworldhaskell.org/read/monads.html#monads.do\" rel=\"noreferrer\">de-sugaring</a> happens in various scenarios.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1425287233, "creation_date": 1425287233, "answer_id": 28805988, "question_id": 28800561, "link": "https://stackoverflow.com/questions/28800561/do-notation-and-monad-composition/28805988#28805988", "title": "Do notation and Monad composition", "body": "<p>Do notation is just syntactic sugar for <code>&gt;&gt;=</code>. Code such as</p>\n\n<pre><code>do x &lt;- a\n   b  -- b is an expression possibly involving x\n</code></pre>\n\n<p>is desugared to</p>\n\n<pre><code>a &gt;&gt;= \\x -&gt; b\n</code></pre>\n\n<p>If you are studying monads in CT, you will probably find that they are being defined as functors with two natural transformations</p>\n\n<pre><code>unit :: a -&gt; m a        -- also known as \u03b7\njoin :: m (m a) -&gt; m a  -- also known as \u03bc\n</code></pre>\n\n<p>while Haskell defines</p>\n\n<pre><code>return :: a -&gt; m a\n(&gt;&gt;=)  :: m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>Both presentations are equivalent. Indeed, <code>unit</code> and <code>return</code> are exactly the same thing. Instead, <code>join</code> can be expressed in terms of <code>(&gt;&gt;=)</code> as follows</p>\n\n<pre><code>join x = x &gt;&gt;= id\n</code></pre>\n\n<p>and, vice versa, <code>(&gt;&gt;=)</code> can be expressed in terms of <code>join</code>.</p>\n\n<pre><code>x &gt;&gt;= f = join (fmap f x)\n</code></pre>\n\n<p>above note that <code>fmap</code> takes <code>a -&gt; m b</code> and <code>m a</code> to return <code>m (m b)</code>, which is then flattened to <code>m b</code> by <code>join</code>.</p>\n"}], "owner": {"reputation": 43, "user_id": 4621491, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-w9ZebJ331PI/AAAAAAAAAAI/AAAAAAAAAOU/CninE3Iqh9k/photo.jpg?sz=128", "display_name": "Pablo Parada", "link": "https://stackoverflow.com/users/4621491/pablo-parada"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 407, "favorite_count": 0, "accepted_answer_id": 28805988, "answer_count": 2, "score": 4, "last_activity_date": 1425287233, "creation_date": 1425252687, "question_id": 28800561, "link": "https://stackoverflow.com/questions/28800561/do-notation-and-monad-composition", "title": "Do notation and Monad composition", "body": "<p>Im a Haskell beginner and I'm still learning about Category Theory and its practical use in computer science.</p>\n\n<p>I've spent last day watching couple lectures from Berkley's university about category theory, most of its content was showing a mathematical view of Rings, Semigroups, Groups, Magmas, Monoids, etc.</p>\n\n<p>Hence, questions raised in my mind about monadic composition and kleisli category. Therefore, I would like to questions Haskell/Category Theory experts. </p>\n\n<p>Is do notation a sort of monad composition?</p>\n\n<p>Regards,</p>\n\n<p>Pablo Parada</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425246509, "post_id": 28799360, "comment_id": 45873151, "body": "The instance that the compiler picks for <code>View</code> on invocations of <code>view</code> necessarily depends on the type variable <code>c</code>, but <code>view</code> doesn&#39;t mention this type. Change <code>view</code> to <code>view :: Proxy c -&gt; a -&gt; b</code> or the like, and your code will work. However, you should be careful with an instance like <code>AbGp s a</code> - it will overlap with every other instance, which will make type errors harder to read. You can probably avoid this with your latter formulation, which seems to me to be a better choice."}, {"owner": {"reputation": 698, "user_id": 981405, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7de874a683e805c5c45bfce7c985522d?s=128&d=identicon&r=PG", "display_name": "jgon", "link": "https://stackoverflow.com/users/981405/jgon"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425247519, "post_id": 28799360, "comment_id": 45873461, "body": "Ok right. That makes sense. Thanks."}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1457748851, "post_id": 28799360, "comment_id": 59562054, "body": "@user2407038 as you answered the question in that comment, care to post it as an answer?"}], "owner": {"reputation": 698, "user_id": 981405, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7de874a683e805c5c45bfce7c985522d?s=128&d=identicon&r=PG", "display_name": "jgon", "link": "https://stackoverflow.com/users/981405/jgon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1425245527, "creation_date": 1425245527, "question_id": 28799360, "link": "https://stackoverflow.com/questions/28799360/haskell-typeclass-instance-based-on-canonical-view", "title": "Haskell Typeclass Instance based on canonical view", "body": "<p>As a self assigned exercise of sorts, I'm playing around with implementing an algebra based numeric type heirarchy.</p>\n\n<p>I'd like to specify that if a structure can be viewed in a canonical way as something that satisfies one of my typeclasses, then it should be an instance of that typeclass as well. To that end I've tried essentially the following:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses, FunctionalDependencies,\n               FlexibleContexts, FlexibleInstances #-}\nclass AbGp s a where\n  plus :: a -&gt; a -&gt; s -&gt; a\n  zero :: s -&gt; a\n  minus :: a -&gt; a -&gt; s -&gt; a\nclass View a b c | a c -&gt; b\n  view :: a -&gt; b\ninstance (View s s1 a, AbGp s1 a) =&gt; AbGp s a\n  plus x y s = plus x y (view s)\n  zero = zero . view\n  minus x y s = minus x y (view s)\n</code></pre>\n\n<p><code>s</code> should be thought of as holding the definitions of the operations in the group, and <code>a</code> as the type of the elements in the group.</p>\n\n<p>But this doesn't work, which isn't surprising, but what I want to do now is:\nSuppose I know that some type <code>s</code>, say <code>s</code> that represents a <code>Ring</code>, can be mapped canonically to <code>s1</code> which is a datastructure I already have an instance for as an <code>AbGp</code>, then I would like <code>s</code> to also be automatically an instance of <code>AbGp</code>. How can I do this?</p>\n\n<p>I'm thinking of doing the following, if it'll work, but I'd like to know if there is a better way:</p>\n\n<pre><code>instance (AbGp s1 a) =&gt; AbGp (s1,b) a where\n  -- ...\n</code></pre>\n"}, {"tags": ["haskell", "type-families"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 3, "creation_date": 1425245422, "post_id": 28799005, "comment_id": 45872795, "body": "What would be the application of this?"}, {"owner": {"reputation": 2244, "user_id": 29408, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/f7af9c8034d5070fb2e8565c79c604b7?s=128&d=identicon&r=PG", "display_name": "Julian Birch", "link": "https://stackoverflow.com/users/29408/julian-birch"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1425245666, "post_id": 28799005, "comment_id": 45872875, "body": "Consider       testEqual :: (Typeable a, Eq a, Typeable b, Eq b) =&gt; a -&gt; b -&gt; Bool     testEqual x y = fromMaybe False $ (== x) &lt;$&gt; cast y  ...which works but requires Typeable.  You could also do stuff like &quot;Sort the list IF a is Ord&quot;"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425246584, "post_id": 28799005, "comment_id": 45873178, "body": "Open type classes (like <code>Eq</code>) and separate compilation cope with this type family. E.g. what if module <code>A</code> defines a type <code>T</code>, and <code>f :: Eq1 T -&gt; HFalse ; f x = x</code>, and then module <code>B</code> imports <code>A</code> and adds <code>instance (Eq T)</code>? When should the type error be detected?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425246776, "post_id": 28799005, "comment_id": 45873234, "body": "As chi has stated, this won&#39;t work, and it necessarily shouldn&#39;t work. Your choices are to abandon this line of thinking or write your own <code>Eq</code> as <code>class Eq a (b :: Bool) | a -&gt; b; instance Eq Int True; instance Eq Bool True; instance Eq SomeType False; ...</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1679, "user_id": 1722752, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef35ad86b627ba3176b6aea8a184f51c?s=128&d=identicon&r=PG", "display_name": "MigMit", "link": "https://stackoverflow.com/users/1722752/migmit"}, "is_accepted": true, "score": 4, "last_activity_date": 1437551728, "last_edit_date": 1437551728, "creation_date": 1425248005, "answer_id": 28799790, "question_id": 28799005, "link": "https://stackoverflow.com/questions/28799005/testing-a-type-for-eq-a-in-haskell/28799790#28799790", "title": "Testing a type for (Eq a) in Haskell", "body": "<p>The set of instances, visible in different contexts, is also different, so any such function would be very dangerous. Seriously, don't do that. Consider defining two newtypes like this:</p>\n\n<pre><code>module EqTest (HasEq, NoEq, hasEq, noEq, fromEq)\nnewtype HasEq a = HasEq a\nnewtype NoEq a = NoEq a\nhasEq :: Eq a =&gt; a -&gt; HasEq a\nhasEq = HasEq\nnoEq :: a -&gt; NoEq a\nnoEq = NoEq\nclass FromEq c where fromEq :: c a -&gt; a\ninstance FromEq HasEq where fromEq (HasEq a) = a\ninstance FromEq NoEq where fromEq (NoEq a) = a\n</code></pre>\n\n<p>and do not export constructors. You would have to always specify which version you'd like to use, but that's better than relying on class instances.</p>\n"}], "owner": {"reputation": 2244, "user_id": 29408, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/f7af9c8034d5070fb2e8565c79c604b7?s=128&d=identicon&r=PG", "display_name": "Julian Birch", "link": "https://stackoverflow.com/users/29408/julian-birch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 240, "favorite_count": 0, "accepted_answer_id": 28799790, "answer_count": 1, "score": 2, "last_activity_date": 1437551728, "creation_date": 1425243584, "question_id": 28799005, "link": "https://stackoverflow.com/questions/28799005/testing-a-type-for-eq-a-in-haskell", "title": "Testing a type for (Eq a) in Haskell", "body": "<p>I'm trying to see if I can implement something which branches on whether the type implements Eq.</p>\n\n<p>Here's an attempt:</p>\n\n<pre><code>data HTrue\ndata HFalse\n\ntype family Eq1 (a :: *) where\n  Eq1 (Eq x) = HTrue\n  Eq1 a = HFalse\n</code></pre>\n\n<p>You'll note that I put (a :: *) in the code. That's because if I don't, the code compiles, but generates Eq1 as a constraint, while I actually want it to be a closed type family.</p>\n\n<p>Is there any way to get this to work?</p>\n"}, {"tags": ["haskell", "character-encoding", "hxt"], "answers": [{"comments": [{"owner": {"reputation": 127, "user_id": 3303204, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/77663842e53b28992b5b9f0a08ae8828?s=128&d=identicon&r=PG", "display_name": "The Linux Kitten", "link": "https://stackoverflow.com/users/3303204/the-linux-kitten"}, "edited": false, "score": 0, "creation_date": 1425243070, "post_id": 28798516, "comment_id": 45872027, "body": "Oh my... I&#39;m still probing/playing on GHCi. Thanks @Yuras."}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": false, "score": 6, "last_activity_date": 1425240774, "creation_date": 1425240774, "answer_id": 28798516, "question_id": 28798429, "link": "https://stackoverflow.com/questions/28798429/how-to-parse-html-page-with-accented-words-spanish-without-losing-them/28798516#28798516", "title": "How to parse HTML page with accented words (Spanish) without losing them?", "body": "<p>I bet you already have everything you need</p>\n\n<pre><code>Prelude&gt; putStrLn $ read \"\\\"Rom\\225ntica\\\"\"\nRom\u00e1ntica\n</code></pre>\n\n<p>Looks like you are looking to result of <code>show</code> applied to the string, not the string itself? Note that <code>print</code> uses <code>show</code>:</p>\n\n<pre><code>Prelude&gt; print (read \"\\\"Rom\\225ntica\\\"\" :: String)\n\"Rom\\225ntica\"\n</code></pre>\n"}], "owner": {"reputation": 127, "user_id": 3303204, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/77663842e53b28992b5b9f0a08ae8828?s=128&d=identicon&r=PG", "display_name": "The Linux Kitten", "link": "https://stackoverflow.com/users/3303204/the-linux-kitten"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1425498588, "creation_date": 1425240357, "last_edit_date": 1425498588, "question_id": 28798429, "link": "https://stackoverflow.com/questions/28798429/how-to-parse-html-page-with-accented-words-spanish-without-losing-them", "title": "How to parse HTML page with accented words (Spanish) without losing them?", "body": "<p>I'm reading an HTML web page that contains literal accented words (Spanish):</p>\n\n<pre><code>&lt;head&gt; \n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\"&gt; \n&lt;title&gt;Web page&lt;/title&gt;\n&lt;body&gt;\n&lt;p&gt;T\u00edtulo&lt;/p&gt;\n&lt;p&gt;A\u00f1o&lt;/p&gt;\n&lt;p&gt;\u00c1ngel&lt;/p&gt;\n&lt;p&gt;\u00bfpor qu\u00e9 nos vamos?&lt;/p&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>I'm using <a href=\"http://hackage.haskell.org/package/hxt-9.3.1.15\" rel=\"nofollow\">HXT</a>:</p>\n\n<pre><code>...\nlet doc = readDocument [ withValidate no\n                       , withInputEncoding iso8859_1\n                       , withParseHTML yes\n                       , withWarnings no\n                       , withEncodingErrors no\n                       , withCurl []] url\n...\n</code></pre>\n\n<p>Using the option </p>\n\n<blockquote>\n  <p>withInputEncoding utf8</p>\n</blockquote>\n\n<p>discard those chars, getting as result the following words: <strong>Ttulo</strong>, <strong>Ao</strong>, <strong>ngel</strong>, <strong>por qu nos vamos?</strong>\nUsing the option </p>\n\n<blockquote>\n  <p>withInputEncoding iso8859_1</p>\n</blockquote>\n\n<p>convert those chars to <strong>strings</strong>, getting as result words like: <strong>Rom\\225ntica</strong>, <strong>Man\\180s</strong>, <strong>H\\233ctor</strong>. Where <strong>\\225</strong>, <strong>\\180</strong> or <strong>\\233</strong> are <strong>strings</strong>, not chars.</p>\n\n<p>What is the best method/way/approach to properly manage this situation in HXT and get all words without modifications?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["haskell", "hspec"], "answers": [{"tags": [], "owner": {"reputation": 2548, "user_id": 493886, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/609445395685769579dc8fb2dbb83f49?s=128&d=identicon&r=PG", "display_name": "rausch", "link": "https://stackoverflow.com/users/493886/rausch"}, "is_accepted": true, "score": 0, "last_activity_date": 1425292495, "creation_date": 1425292495, "answer_id": 28807655, "question_id": 28797300, "link": "https://stackoverflow.com/questions/28797300/how-to-tell-hspec-where-to-look-for-the-source-files-to-be-tested/28807655#28807655", "title": "How to tell HSpec where to look for the source files to be tested", "body": "<p>Adding <code>-isrc</code> helped, so the call looks like this:</p>\n\n<pre><code>runhaskell -isrc test/Spec.hs\n</code></pre>\n\n<p>Additionally, it is important to note, that a module's file name should match the module name, including the case. I.e. the filename of the module <code>Foo</code> should be <code>Foo.hs</code>.</p>\n"}], "owner": {"reputation": 2548, "user_id": 493886, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/609445395685769579dc8fb2dbb83f49?s=128&d=identicon&r=PG", "display_name": "rausch", "link": "https://stackoverflow.com/users/493886/rausch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 28807655, "answer_count": 1, "score": 1, "last_activity_date": 1425292495, "creation_date": 1425234339, "last_edit_date": 1425246835, "question_id": 28797300, "link": "https://stackoverflow.com/questions/28797300/how-to-tell-hspec-where-to-look-for-the-source-files-to-be-tested", "title": "How to tell HSpec where to look for the source files to be tested", "body": "<p>I'm new to Haskell and I wanted to add tests to my first project. I chose HSpec for this. My only spec file doesn't contain anything special so far. I just copied the example from the HSpec website and added <code>import</code> statements for my own modules to be tested. When I try to run it via <code>runhaskell test/XSpec.hs</code> it complains that it \"could not find module X\". How do I tell it about the load paths it should take a look into before complaining?</p>\n"}, {"tags": ["haskell", "recursion", "functional-programming", "ocaml"], "comments": [{"owner": {"reputation": 4223, "user_id": 597517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca1fd636db960bba6027154d81ef106e?s=128&d=identicon&r=PG", "display_name": "Martin Jambon", "link": "https://stackoverflow.com/users/597517/martin-jambon"}, "edited": false, "score": 2, "creation_date": 1425244304, "post_id": 28796904, "comment_id": 45872407, "body": "and why do type definitions not require <code>type rec</code> to be made recursive, for the sake of consistency?"}, {"owner": {"reputation": 363, "user_id": 4334680, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/9b476e9ef1dd19513621f371386d5cf9?s=128&d=identicon&r=PG&f=1", "display_name": "Alex M.", "link": "https://stackoverflow.com/users/4334680/alex-m"}, "edited": false, "score": 0, "creation_date": 1603997828, "post_id": 28796904, "comment_id": 114220436, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/900585/why-are-functions-in-ocaml-f-not-recursive-by-default\">Why are functions in Ocaml/F# not recursive by default?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 57265, "user_id": 821679, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64f564c4721ee3125fa835f6c3a5283c?s=128&d=identicon&r=PG", "display_name": "Jeffrey Scofield", "link": "https://stackoverflow.com/users/821679/jeffrey-scofield"}, "is_accepted": false, "score": 8, "last_activity_date": 1425233867, "creation_date": 1425233867, "answer_id": 28797217, "question_id": 28796904, "link": "https://stackoverflow.com/questions/28796904/whats-the-reason-of-let-rec-for-impure-functional-language-ocaml/28797217#28797217", "title": "What&#39;s the reason of &#39;let rec&#39; for impure functional language OCaml?", "body": "<p>I am not an expert, but I'll make a guess until the truly knowledgable guys show up. In OCaml there can be side effects that happen during the definition of a function:</p>\n\n<pre><code>let rec f =\n    let () = Printf.printf \"hello\\n\" in\n    fun x -&gt; if x &lt;= 0 then 12 else 1 + f (x - 1)\n</code></pre>\n\n<p>This means that the order of function definitions must be preserved in some sense. Now imagine that two distinct sets of mutually recursive functions are interleaved. It doesn't seem at all easy for the compiler to preserve the order while processing them as two separate mutually recursive sets of definitions.</p>\n\n<p>The use of `let rec ... and`` means that distinct sets of mutually recursive function definitions can't be interleaved in OCaml as they can in Haskell. Haskell doesn't have side effects (in some sense), so definitions can be freely reordered.</p>\n"}, {"comments": [{"owner": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "edited": false, "score": 0, "creation_date": 1425238326, "post_id": 28797260, "comment_id": 45870401, "body": "I would argue that this doesn&#39;t correspond to the <code>rec</code>ness of the function.  This is about scope of visibility of definition in the body of the structure, but <code>rec</code> is about the body of the function. So, this issues are relative, but different."}, {"owner": {"reputation": 6173, "user_id": 1372399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8282947398571ff83ee0b3fa325ef49f?s=128&d=identicon&r=PG", "display_name": "Thomash", "link": "https://stackoverflow.com/users/1372399/thomash"}, "reply_to_user": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "edited": false, "score": 0, "creation_date": 1425247897, "post_id": 28797260, "comment_id": 45873569, "body": "<code>rec</code> is not for function but for any definition. <code>let rec a = 1 :: a</code> is a valid recursive defintion with no function involved."}, {"owner": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "edited": false, "score": 0, "creation_date": 1425250583, "post_id": 28797260, "comment_id": 45874363, "body": "I agree, bad wording, but still, the same applies if you substitute &quot;function&quot; with &quot;let-definition&quot;"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 2, "creation_date": 1425251858, "post_id": 28797260, "comment_id": 45874703, "body": "Um, you <i>are allowed</i> to do that in Haskell (and there might be a <code>Num</code> instance where it works), but it usually doesn&#39;t terminate on evaluation."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1275485"}, "reply_to_user": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "edited": false, "score": 1, "creation_date": 1425315697, "post_id": 28797260, "comment_id": 45902477, "body": "@ivg What does <code>rec</code> do besides making the name of the defined object available in the body of the definition, in practice? Nothing. It&#39;s purely a scope issue. (I&#39;m talking from a developer point of view, under the hood there might optimizations done in some cases or not, but that&#39;s not my point.)"}, {"owner": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "edited": false, "score": 0, "creation_date": 1425317160, "post_id": 28797260, "comment_id": 45903360, "body": "yep, that&#39;s what I&#39;m talking about"}, {"owner": {"reputation": 5164, "user_id": 1872046, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/2GC1B.jpg?s=128&g=1", "display_name": "polkovnikov.ph", "link": "https://stackoverflow.com/users/1872046/polkovnikov-ph"}, "edited": false, "score": 0, "creation_date": 1511577961, "post_id": 28797260, "comment_id": 81919220, "body": "@NajibIdrissi But that &quot;small scope issue&quot; might have huge effects on a language. I&#39;m afraid it has something to do with opening namespaces and extensibility, i.e. if you open some record and then add a definition into it with the same name as some local variable, you don&#39;t have broken code or changed semantics. I just don&#39;t know O&#39;Caml enough to say for sure."}], "tags": [], "owner": {"reputation": 6173, "user_id": 1372399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8282947398571ff83ee0b3fa325ef49f?s=128&d=identicon&r=PG", "display_name": "Thomash", "link": "https://stackoverflow.com/users/1372399/thomash"}, "is_accepted": false, "score": 14, "last_activity_date": 1425234692, "last_edit_date": 1425234692, "creation_date": 1425234113, "answer_id": 28797260, "question_id": 28796904, "link": "https://stackoverflow.com/questions/28796904/whats-the-reason-of-let-rec-for-impure-functional-language-ocaml/28797260#28797260", "title": "What&#39;s the reason of &#39;let rec&#39; for impure functional language OCaml?", "body": "<p>I think this has nothing to do with being purely functional, it is just a design decision that in  Haskell you are not allowed to do</p>\n\n<pre><code>let a = 0;;\nlet a = a + 1;;\n</code></pre>\n\n<p>whereas you can do it in Caml.</p>\n\n<p>In Haskell this code won't work because <code>let a = a + 1</code> is interpreted as a recursive definition and will not terminate.\nIn Haskell you don't have to specify that a definition is recursive simply because you can't create a non-recursive one (so the keyword <code>rec</code> is everywhere but is not written).</p>\n"}, {"comments": [{"owner": {"reputation": 24443, "user_id": 100020, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/7b137a205dff52b6471dfd17158c8b8f?s=128&d=identicon&r=PG", "display_name": "sdcvvc", "link": "https://stackoverflow.com/users/100020/sdcvvc"}, "edited": false, "score": 1, "creation_date": 1425285806, "post_id": 28798040, "comment_id": 45884295, "body": "Regarding the quote: couldn&#39;t dependency analysis reorder the definitions for the purpose of type checking, but run the program without the reordering to avoid changing the order of side effects?"}, {"owner": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "reply_to_user": {"reputation": 24443, "user_id": 100020, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/7b137a205dff52b6471dfd17158c8b8f?s=128&d=identicon&r=PG", "display_name": "sdcvvc", "link": "https://stackoverflow.com/users/100020/sdcvvc"}, "edited": false, "score": 0, "creation_date": 1425301086, "post_id": 28798040, "comment_id": 45892813, "body": "I think that author meant that reordering can affect the typing environment. But even without reordering we can not build the dependency graph in the face of side-effects that can affect any part of the system."}], "tags": [], "owner": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "is_accepted": true, "score": 36, "last_activity_date": 1425301276, "last_edit_date": 1495541811, "creation_date": 1425238092, "answer_id": 28798040, "question_id": 28796904, "link": "https://stackoverflow.com/questions/28796904/whats-the-reason-of-let-rec-for-impure-functional-language-ocaml/28798040#28798040", "title": "What&#39;s the reason of &#39;let rec&#39; for impure functional language OCaml?", "body": "<p>When you define a semantics of function definition, as a language designer, you have choices: either to make the name of the function visible in the scope of its own body, or not. Both choices are perfectly legal, for example C-family languages being far from functional, still do have names of definitions visible in their scope (this also extends to all definitions in C, making this <code>int x = x + 1</code> legal). OCaml language decides to give us extra flexibility of making the choice by ourselves. And that's really great. They decided to make it invisible by default, a fairly descent solution, since most of the functions that we write are non recursive. </p>\n\n<p>What concerning the cite, it doesn't really correspond to the function definitions \u2013 the most common use of the <code>rec</code> keyword. It is mostly about \"Why the scope of function definition doesn't extend to the body of the module\". This is a completely different question. \nAfter some research I've found a very <a href=\"https://stackoverflow.com/questions/900585/why-are-functions-in-ocaml-f-not-recursive-by-default\">similar question</a>, that has an <a href=\"https://stackoverflow.com/a/904715/2625442\">answer</a>, that might satisfy you, a cite from it:</p>\n\n<blockquote>\n  <p>So, given that the type checker needs to know about which sets of\n  definitions are mutually recursive, what can it do? One possibility is\n  to simply do a dependency analysis on all the definitions in a scope,\n  and reorder them into the smallest possible groups. Haskell actually\n  does this, but in languages like F# (and OCaml and SML) which have\n  unrestricted side-effects, <em>this is a bad idea because it might reorder\n  the side-effects too</em>. So instead it asks the user to explicitly mark\n  which definitions are mutually recursive, and thus by extension where\n  generalization should occur.</p>\n</blockquote>\n\n<p>Even without any reordering, with arbitrary non-pure expressions, that can occur in the function definition (a side effect of definition, not evaluation) it is impossible to build the dependency graph. Consider demarshaling and executing function from file. </p>\n\n<p>To summarize, we have two usages of <code>let rec</code> construct, one is to create a self recursive function, like</p>\n\n<pre><code> let rec seq acc = function\n    | 0 -&gt; acc\n    | n -&gt; seq (acc+1) (n-1)\n</code></pre>\n\n<p>Another is to define mutually recursive functions:</p>\n\n<pre><code>let rec odd n =\n  if n = 0 then true\n  else if n = 1 then false else even (n - 1)\nand even n =\n  if n = 0 then false\n  else if n = 1 then true else odd (n - 1)\n</code></pre>\n\n<p>At the first case, there is no technical reasons to stick to one or to another solution. This is just a matter of taste. </p>\n\n<p>The second case is harder. When inferring type you need to split all function definitions into clusters consisting of mutually depending definitions, in order to narrow typing environment. In OCaml it is harder to make, since you need to take into account side-effects. (Or you can continue without splitting it into principal components, but this will lead to another issue \u2013 your type system will be more restrictive, i.e., will disallow more valid programs).</p>\n\n<p>But, revisiting the original question and the quote from RWO, I'm still pretty sure that there is no technical reasons for adding the <code>rec</code> flag. Consider, SML that has the same problems, but still has <code>rec</code> enabled by default. There <em>is</em> a technical reason, for <code>let ... and ...</code> syntax for defining a set of mutual recursive functions. In SML this syntax doesn't require us to put the <code>rec</code> flag, in OCaml does, thus giving us more flexibility, like the ability to swap to values with <code>let x = y and y = x</code> expression.</p>\n"}, {"comments": [{"owner": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "edited": false, "score": 0, "creation_date": 1425255722, "post_id": 28799670, "comment_id": 45875679, "body": "no, this is not the reason I think, and unfortunately REPL in OCaml also behaves quite differently from the compiler, incurring confusion to newbies."}], "tags": [], "owner": {"reputation": 1679, "user_id": 1722752, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef35ad86b627ba3176b6aea8a184f51c?s=128&d=identicon&r=PG", "display_name": "MigMit", "link": "https://stackoverflow.com/users/1722752/migmit"}, "is_accepted": false, "score": 0, "last_activity_date": 1425247354, "creation_date": 1425247354, "answer_id": 28799670, "question_id": 28796904, "link": "https://stackoverflow.com/questions/28796904/whats-the-reason-of-let-rec-for-impure-functional-language-ocaml/28799670#28799670", "title": "What&#39;s the reason of &#39;let rec&#39; for impure functional language OCaml?", "body": "<p>I'd say that in OCaml they are trying to make REPL and source files work the same way. So, it's perfectly reasonable to redefine some function in REPL; therefore, they have to allow it in the source as well. Now, if you use the (redefined) function in itself, OCaml needs some way of knowing which of the definitions to use: the previous one or the new one.</p>\n\n<p>In Haskell they've just gave up and accepted that REPL works differentyle from source files.</p>\n"}, {"tags": [], "owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "is_accepted": false, "score": 19, "last_activity_date": 1425252616, "creation_date": 1425252616, "answer_id": 28800552, "question_id": 28796904, "link": "https://stackoverflow.com/questions/28796904/whats-the-reason-of-let-rec-for-impure-functional-language-ocaml/28800552#28800552", "title": "What&#39;s the reason of &#39;let rec&#39; for impure functional language OCaml?", "body": "<blockquote>\n  <p>What are the technical reasons that enforces let rec while pure functional languages not?</p>\n</blockquote>\n\n<p>Recursiveness is a strange beast. It has a relation to purity, but it's a little more oblique than this. To be clear, you could write \"alterna-Haskell\" which retains its purity, its laziness but does not have recursively bound <code>let</code>s by default and demands some kind of <code>rec</code> marker just as OCaml does. Some would even prefer this.</p>\n\n<hr>\n\n<p>In essence, there are just many different kinds of \"let\"s possible. If we compare <code>let</code> and <code>let rec</code> in OCaml we'll see a small difference. In static formal semantics, we might write</p>\n\n<pre><code>\u0393 \u22a2 E : A    \u0393, x : A \u22a2 F : B\n-----------------------------\n   \u0393 \u22a2 let x = E in F : B\n</code></pre>\n\n<p>which says that if we can prove in a variable environment <code>\u0393</code> that <code>E</code> has type <code>A</code> and if we can prove in the same variable environment <code>\u0393</code> <em>augmented</em> with <code>x : A</code> that <code>F : B</code> then we can prove that in the variable environment <code>\u0393</code> <code>let x = E in F</code> has type <code>B</code>.</p>\n\n<p>The thing to watch is the <code>\u0393</code> argument. This is just a list of (\"variable name\", \"value\") pairs like <code>[(x, 3); (y, \"hello\")]</code> and augmenting the list like <code>\u0393, x : A</code> just means consing <code>(x, A)</code> on to it (sorry that the syntax is flipped).</p>\n\n<p>In particular, let's write the same formalism for <code>let rec</code></p>\n\n<pre><code>\u0393, x : A \u22a2 E : A    \u0393, x : A \u22a2 F : B\n-------------------------------------\n       \u0393 \u22a2 let rec x = E in F : B\n</code></pre>\n\n<p>In particular, the only difference is that neither of our premises work in the plain <code>\u0393</code> environment; both are allowed to assume the existence of the <code>x</code> variable.</p>\n\n<p>In this sense, <code>let</code> and <code>let rec</code> are simply different beasts.</p>\n\n<hr>\n\n<p>So what does it mean to be pure? At the <em>strictest</em> definition, of which Haskell doesn't even participate, we must eliminate <em>all</em> effects including non-termination. The only way to achieve this is to pull away our ability to write unrestricted recursion and replace it only carefully.</p>\n\n<p>There exist plenty of languages without recursion. Perhaps the most important one is the Simply Typed Lambda Calculus. In it's basic form it is regular lambda calculus but augmented with a typing discipline where types are bit like</p>\n\n<pre><code>type ty =\n  | Base\n  | Arr of ty * ty\n</code></pre>\n\n<p>It turns out that STLC cannot represent recursion---the Y combinator, and all other fixed-point cousin combinators, cannot be typed. Thusly, STLC is not Turing Complete.</p>\n\n<p>It is however uncompromisingly <em>pure</em>. It achieves that purity with the bluntest of instruments, however, by completely outlawing recursion. What we'd really like is some kind of balanced, careful recursion which doesn't lead to non-termination---we'll still be Turing Incomplete, but not so crippled.</p>\n\n<p>Some languages try this game. There are clever ways of adding typed recursion back along a division between <code>data</code> and <code>codata</code> which ensures that you cannot write non-terminating functions. If you're interested, I suggest learning a bit of Coq.</p>\n\n<hr>\n\n<p>But OCaml's goal (and Haskell's as well) is not to be delicate here. Both languages are uncompromisingly Turing Complete (and therefore \"practical\"). So let's discuss some more blunt ways of augmenting the STLC with recursion.</p>\n\n<p>The bluntest of the bunch is to add a single built-in function called <code>fix</code></p>\n\n<pre><code>val fix : ('a -&gt; 'a) -&gt; 'a\n</code></pre>\n\n<p>or, in more genuine OCaml-y notation which requires eta-expansion</p>\n\n<pre><code>val fix : (('a -&gt; 'b) -&gt; ('a -&gt; 'b)) -&gt; ('a -&gt; 'b)\n</code></pre>\n\n<p>Now, remember that we're only considering a primitive STLC with <code>fix</code> added. We can indeed write <code>fix</code> (the latter one at least) in OCaml, but that's cheating at the moment. What does <code>fix</code> buy the STLC as a primitive?</p>\n\n<p>It turns out that the answer is: \"everything\". STLC + Fix (basically a language called <code>PCF</code>) is impure and Turing Complete. It's also simply tremendously difficult to use.</p>\n\n<hr>\n\n<p>So this is the final hurdle to jump: how do we make <code>fix</code> easier to work with? By adding recursive bindings!</p>\n\n<p>Already, STLC has a <code>let</code> construction. You can think of it as just syntax sugar:</p>\n\n<pre><code>let x = E in F   ----&gt;   (fun x -&gt; F) (E)\n</code></pre>\n\n<p>but once we've added <code>fix</code> we also have the power to introduce <code>let rec</code> bindings</p>\n\n<pre><code>let rec x a = E in F ----&gt; (fun x -&gt; F) (fix (fun x a -&gt; E))\n</code></pre>\n\n<p>At this point it should again be clear: <code>let</code> and <code>let rec</code> are very different beasts. They embody different levels of linguistic power and <code>let rec</code> is a window to allow fundamental impurity through Turing Completeness and its partner-effect non-termination.</p>\n\n<hr>\n\n<p>So, at the end of the day, it's a little amusing that Haskell, the purer of the two languages, made the interesting choice of abolishing plain <code>let</code> bindings. That's really the only difference: there is no syntax for representing a non-recursive binding in Haskell.</p>\n\n<p>At this point it's essentially just a style decision. The authors of Haskell determined that recursive bindings were so useful that one might as well assume that <em>every</em> binding is recursive (and mutually so, a can of worms ignored in this answer so far).</p>\n\n<p>On the other hand, OCaml gives you to ability to be totally explicit about the kind of binding you choose, <code>let</code> or <code>let rec</code>!</p>\n"}, {"tags": [], "owner": {"reputation": 9267, "user_id": 2284221, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/120d229a55c7a6ce3037e6932c190616?s=128&d=identicon&r=PG", "display_name": "Patrick Collins", "link": "https://stackoverflow.com/users/2284221/patrick-collins"}, "is_accepted": false, "score": 7, "last_activity_date": 1425255325, "last_edit_date": 1425255325, "creation_date": 1425254496, "answer_id": 28800804, "question_id": 28796904, "link": "https://stackoverflow.com/questions/28796904/whats-the-reason-of-let-rec-for-impure-functional-language-ocaml/28800804#28800804", "title": "What&#39;s the reason of &#39;let rec&#39; for impure functional language OCaml?", "body": "<p>It's not a question of purity, it's a question of specifying what environment the typechecker should check an expression in. It actually gives you more power than you would have otherwise. For example (I'm going to write Standard ML here because I know it better than OCaml, but I believe the typechecking process is pretty much the same for the two languages), it lets you distinguish between these cases:</p>\n\n<pre><code>val foo : int = 5\nval foo = fn (x) =&gt; if x = foo then 0 else 1\n</code></pre>\n\n<p>Now as of the second redefinition, <code>foo</code> has the type <code>int -&gt; int</code>. On the other hand, </p>\n\n<pre><code>val foo : int = 5\nval rec foo = fn (x) =&gt; if x = foo then 0 else 1\n</code></pre>\n\n<p>does not typecheck, because the <code>rec</code> means that the typechecker has already decided that <code>foo</code> has been rebound to the type <code>'a -&gt; int</code>, and when it tries to figure out what that <code>'a</code> needs to be, there is a unification failure because <code>x = foo</code> forces <code>foo</code> to have a numeric type, which it doesn't.</p>\n\n<p>It can certainly \"look\" more imperative, because the case without <code>rec</code> allows you to do things like this:</p>\n\n<pre><code>val foo : int = 5\nval foo = foo + 1\nval foo = foo + 1\n</code></pre>\n\n<p>and now <code>foo</code> has the value 7. That's not because it's been mutated, however --- the <em>name</em> foo has been rebound 3 times, and it just so happens that each of those bindings shadowed a previous binding of a variable named <code>foo</code>. It's the same as this:</p>\n\n<pre><code>val foo : int = 5\nval foo' = foo + 1\nval foo'' = foo' + 1\n</code></pre>\n\n<p>except that <code>foo</code> and <code>foo'</code> are no longer available in the environment after the identifier <code>foo</code> has been rebound. The following are also legal:</p>\n\n<pre><code>val foo : int = 5\nval foo : real = 5.0\n</code></pre>\n\n<p>which makes it clearer that what's happening is <em>shadowing</em> of the original definition, rather than a side effect.</p>\n\n<p>Whether or not it's stylistically a good idea to rebind identifiers is questionable -- it can get confusing. It can be useful in some situations (e.g. rebinding a function name to a version of itself that prints debugging output).</p>\n"}], "owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3540, "favorite_count": 7, "accepted_answer_id": 28798040, "answer_count": 6, "score": 38, "last_activity_date": 1425301276, "creation_date": 1425232068, "question_id": 28796904, "link": "https://stackoverflow.com/questions/28796904/whats-the-reason-of-let-rec-for-impure-functional-language-ocaml", "title": "What&#39;s the reason of &#39;let rec&#39; for impure functional language OCaml?", "body": "<p>In the book <a href=\"https://realworldocaml.org/v1/en/html/variables-and-functions.html#declaring-functions-with-function\">Real World OCaml</a>, the authors put why OCaml uses <code>let rec</code> for defining recursive functions. </p>\n\n<blockquote>\n  <p>OCaml distinguishes between nonrecursive definitions (using let) and recursive definitions (using let rec) largely for technical reasons: the type-inference algorithm needs to know when a set of function definitions are mutually recursive, and for reasons that don't apply to a pure language like Haskell, these have to be marked explicitly by the programmer.</p>\n</blockquote>\n\n<p>What are the technical reasons that enforces <code>let rec</code> while pure functional languages not?</p>\n"}, {"tags": ["javascript", "haskell", "functional-programming", "underscore.js", "lazy-evaluation"], "comments": [{"owner": {"reputation": 292139, "user_id": 965051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XgLe7.gif?s=128&g=1", "display_name": "adeneo", "link": "https://stackoverflow.com/users/965051/adeneo"}, "edited": false, "score": 1, "creation_date": 1425203938, "post_id": 28792158, "comment_id": 45859306, "body": "maybe it&#39;s just me, but shouldn&#39;t this be rather simple -&gt; <b><a href=\"http://jsfiddle.net/aafsh5xa/1/\" rel=\"nofollow noreferrer\">jsfiddle.net/aafsh5xa/1</a></b>"}, {"owner": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "reply_to_user": {"reputation": 292139, "user_id": 965051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XgLe7.gif?s=128&g=1", "display_name": "adeneo", "link": "https://stackoverflow.com/users/965051/adeneo"}, "edited": false, "score": 0, "creation_date": 1425204059, "post_id": 28792158, "comment_id": 45859334, "body": "I am asking specifically about using functional programming techniques to accomplish it. Your fiddle and my fiddle is just as non-functional."}, {"owner": {"reputation": 292139, "user_id": 965051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XgLe7.gif?s=128&g=1", "display_name": "adeneo", "link": "https://stackoverflow.com/users/965051/adeneo"}, "edited": false, "score": 0, "creation_date": 1425204415, "post_id": 28792158, "comment_id": 45859414, "body": "In short, no there&#39;s no way to do that in JS, <code>genLazyList</code> would be executed and evaluated when called, and return every friday from now until eternity, there&#39;s no way to delay evaluating it until it&#39;s in ran through a filter."}, {"owner": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "reply_to_user": {"reputation": 292139, "user_id": 965051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XgLe7.gif?s=128&g=1", "display_name": "adeneo", "link": "https://stackoverflow.com/users/965051/adeneo"}, "edited": false, "score": 2, "creation_date": 1425212546, "post_id": 28792158, "comment_id": 45861538, "body": "I found a way to do it with this library: <a href=\"http://streamjs.org/\" rel=\"nofollow noreferrer\">streamjs.org</a>  Give me some time and I&#39;ll write an answer that&#39;ll do what I suggested."}], "answers": [{"comments": [{"owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1425271015, "post_id": 28792316, "comment_id": 45879152, "body": "Just to note... You can mutate state even in a language like Haskell. The important consideration is whether the state being mutated is not visible outside of the function&#39;s scope, thus preserving referential transparency. See this answer about the ST Monad which allows us to mutate state while  statically guaranteeing this property. <a href=\"http://stackoverflow.com/a/8197275/536017\">stackoverflow.com/a/8197275/536017</a>"}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "reply_to_user": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1425281498, "post_id": 28792316, "comment_id": 45882396, "body": "@danem: Right. That&#39;s why I posted the second example: The mutations caused by the first example would both be visible outside the function, e.g., side-effects."}, {"owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1425284210, "post_id": 28792316, "comment_id": 45883539, "body": "Sure, but my point was, with that in mind, more efficient implementations are possible. Like this for instance: <a href=\"http://jsfiddle.net/6wsa0usq/1/\" rel=\"nofollow noreferrer\">jsfiddle.net/6wsa0usq/1</a>. Which is just your first example implemented as a closure. Taken further, we have a valid example that is almost identical to an imperative implementation posted further up thread. <a href=\"http://lpaste.net/121435\" rel=\"nofollow noreferrer\">lpaste.net/121435</a> All I was trying to say was that you needn&#39;t have to resort to recursion or any of that to get the benefits of FP. : )"}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "reply_to_user": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1425284562, "post_id": 28792316, "comment_id": 45883690, "body": "@danem: My first example isn&#39;t &quot;implemented as a closure&quot; (in any way other than that <b>all</b> JavaScript functions are closures). It&#39;s just a recursive function. Re recursion: I thought that was how you did loops in FP. Do you do just normal loops in FP, then?"}, {"owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1425285766, "post_id": 28792316, "comment_id": 45884275, "body": "No, I never said your first example was implemented as a closure. I said the example I posted (<a href=\"http://jsfiddle.net/6wsa0usq/1/\" rel=\"nofollow noreferrer\">jsfiddle.net/6wsa0usq/1</a>) was essentially your first example, but with the work being done in a closure, mutating the state in a &quot;side-effect-free&quot; way. And sorry, I should&#39;ve said &quot;explicit recursion&quot;. My point was that by using functions like &quot;forM&quot; (which is indeed defined recursively) we can in some cases write the same code you would with an imperative language. I was just trying to point out that recursion for its own sake isn&#39;t necessarily desirable."}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "reply_to_user": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1425286027, "post_id": 28792316, "comment_id": 45884408, "body": "@danem: Sorry, misread the closure comment. Re recursion: But again, isn&#39;t that how you do loops in FP? I could have introduced some library to do it, but there was no need (or so I thought; the OP decided to)."}], "tags": [], "owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "is_accepted": false, "score": 1, "last_activity_date": 1425219160, "last_edit_date": 1425219160, "creation_date": 1425204538, "answer_id": 28792316, "question_id": 28792158, "link": "https://stackoverflow.com/questions/28792158/getting-every-friday-until-a-certain-date-but-in-a-functional-style/28792316#28792316", "title": "Getting every Friday until a certain date, but in a functional style?", "body": "<blockquote>\n  <p>I was wondering if there's a way to use Haskell-like features such as list comprehensions or infinite lists (lazy evaluation) to make this a lot more concise.</p>\n</blockquote>\n\n<p>In ES6, you'll be able to use a generator function (<a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generator-function-definitions\" rel=\"nofollow\">spec</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\" rel=\"nofollow\">MDN</a>) for the infinite list.</p>\n\n<p>In the meantime, loops in functional programming are usually accomplished via recursion, right? So:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function getFridays(f, dt, days) {\r\n  if (days &gt; 0) {\r\n    if (dt.getDay() === 5) {\r\n      f.push(new Date(dt));\r\n    }\r\n    dt.setDate(dt.getDate() + 1);\r\n    f = getFridays(f, dt, days - 1);\r\n  }\r\n  return f;\r\n}\r\n\r\nvar fridays = getFridays([], new Date(), 30);\r\ndocument.body.innerHTML = '&lt;pre&gt;' + JSON.stringify(fridays, null, 4) + '&lt;/pre&gt;';</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>That version has side-effects, though (two of its arguments are objects whose state is mutated within the function). I'm not well-versed in functional programming, but I understand side-effects are to be avoided, so perhaps:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function getFridays(date, days) {\r\n  var f, newDate;\r\n  \r\n  f = [];\r\n  if (days &gt; 0) {\r\n    if (date.getDay() === 5) {\r\n      f.push(new Date(date));\r\n    }\r\n    newDate = new Date(date);\r\n    newDate.setDate(newDate.getDate() + 1);\r\n    return f.concat(getFridays(newDate, days - 1));\r\n  }\r\n  return f;\r\n}\r\n\r\nvar fridays = getFridays(new Date(), 30);\r\ndocument.body.innerHTML = '&lt;pre&gt;' + JSON.stringify(fridays, null, 4) + '&lt;/pre&gt;';</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>That's obviously a lot less memory-efficient (in terms of GC churn), but if I understand correctly, having no side-effects is more important in FP than memory/GC efficiency.</p>\n"}, {"comments": [{"owner": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "edited": false, "score": 0, "creation_date": 1425267719, "post_id": 28795279, "comment_id": 45878370, "body": "This is quite an interesting way to do it!"}], "tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 2, "last_activity_date": 1425223462, "creation_date": 1425223462, "answer_id": 28795279, "question_id": 28792158, "link": "https://stackoverflow.com/questions/28792158/getting-every-friday-until-a-certain-date-but-in-a-functional-style/28795279#28795279", "title": "Getting every Friday until a certain date, but in a functional style?", "body": "<p>Does JS have a Julian date library? That would make things a lot simpler.</p>\n\n<p>Here is some pseudo-Haskell code assuming that we have the following functions:</p>\n\n<pre><code>toJulianDate :: Date -&gt; Int\ntoDate :: Int -&gt; Date\ndayOfWeek :: Date -&gt; Int     -- 0 = Sun, 1 = Mon, ... 5 = Fri, etc.\n</code></pre>\n\n<p>Then we can write:</p>\n\n<pre><code>everyFridayBetween :: Date -&gt; Date -&gt; [Date]\neveryDridayBetween d1 d2 = map toDate [jfriday, jfriday+7..j2]\n  where\n    j1 = toJulianDate d1\n    j2 = toJulianDate d2\n    dow = dayOfWeek d1\n    jfriday = if dow &lt;= 5 then j1+(5-dow) else j1 + 7 + (5-dow)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 103604, "user_id": 58186, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/7ece00ffc45c3ef315d206f32999a0ac?s=128&d=identicon&r=PG", "display_name": "KooiInc", "link": "https://stackoverflow.com/users/58186/kooiinc"}, "edited": false, "score": 1, "creation_date": 1425289873, "post_id": 28802421, "comment_id": 45886455, "body": "Neat. Here&#39;s my take on it (using stream.js), without <code>moment.js</code> and generic for all weekdays: <a href=\"http://jsfiddle.net/KooiInc/0L02La7v/\" rel=\"nofollow noreferrer\">jsfiddle.net/KooiInc/0L02La7v</a>"}, {"owner": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "reply_to_user": {"reputation": 103604, "user_id": 58186, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/7ece00ffc45c3ef315d206f32999a0ac?s=128&d=identicon&r=PG", "display_name": "KooiInc", "link": "https://stackoverflow.com/users/58186/kooiinc"}, "edited": false, "score": 0, "creation_date": 1425299858, "post_id": 28802421, "comment_id": 45892035, "body": "nice! Some useful ideas there, @KooiInc."}], "tags": [], "owner": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "is_accepted": true, "score": 1, "last_activity_date": 1425268927, "last_edit_date": 1425268927, "creation_date": 1425268138, "answer_id": 28802421, "question_id": 28792158, "link": "https://stackoverflow.com/questions/28792158/getting-every-friday-until-a-certain-date-but-in-a-functional-style/28802421#28802421", "title": "Getting every Friday until a certain date, but in a functional style?", "body": "<p>Note I am using <a href=\"http://streamjs.org/\" rel=\"nofollow\">stream.js</a> and <a href=\"http://momentjs.com/\" rel=\"nofollow\">moment.js</a> in my answer. So you'll have to do the following includes in your HTML (note that my syntax is in jade):</p>\n\n<pre><code>script(src=\"path/to/stream.js\")\nscript(src=\"path/to/moment.js\")\n</code></pre>\n\n<p>And here is my code:</p>\n\n<pre><code>var initDate = moment().day(\"Friday\");\nvar endDate = moment().add(30,'days');\n\nfunction allFridays() {\n    return new Stream(initDate, function(){\n            return allFridays().map(function(date){return moment(date).add(7,'days')});\n        }\n    );    \n}\n\nallFridays().takeWhile(function(h){return h.isBefore(endDate)}).print();\n</code></pre>\n\n<p>Or in my favourite flavour, coffeescript:</p>\n\n<pre><code>initDate = moment().day('Friday')\nendDate = moment().add(30, 'days')\n\nallFridays = -&gt;\n  new Stream(initDate, -&gt;\n    allFridays().map (date) -&gt;\n      moment(date).add 7, 'days'\n)\n\nallFridays().takeWhile((h) -&gt; h.isBefore endDate).print()\n</code></pre>\n\n<p>Isn't that just beautiful?</p>\n\n<p>A quick explanation:</p>\n\n<ol>\n<li>I make an infinite stream of moment (date) objects which represent all fridays from now until forever</li>\n<li>I take (i.e. retrieve) the elements of this stream up until the first moment which does not represent a time before my endDate.</li>\n</ol>\n\n<p>And that's it!</p>\n\n<p>Note that the <code>takeWhile()</code> function is not yet implemented in the official stream.js release, but I simply copy and pasted it in from its lib folder. See its git repo <a href=\"https://github.com/dionyziz/stream.js\" rel=\"nofollow\">here</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 6641, "user_id": 2708895, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32b1d398ff551a0ab0a20c5905ebe20c?s=128&d=identicon&r=PG", "display_name": "Krzysztof Safjanowski", "link": "https://stackoverflow.com/users/2708895/krzysztof-safjanowski"}, "is_accepted": false, "score": 0, "last_activity_date": 1462970783, "last_edit_date": 1462970783, "creation_date": 1462966988, "answer_id": 37161621, "question_id": 28792158, "link": "https://stackoverflow.com/questions/28792158/getting-every-friday-until-a-certain-date-but-in-a-functional-style/37161621#37161621", "title": "Getting every Friday until a certain date, but in a functional style?", "body": "<p>Some proof of concept with <strong>ES6 generator</strong> functionality</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function *fridays13th() {\r\n  var nextFriday = getNextFriday(new Date())\r\n\r\n  while (true) {\r\n    if (isFriday13th(nextFriday)) {\r\n      yield new Date(nextFriday)\r\n    }\r\n\r\n    nextFriday = getNextFriday(nextFriday)\r\n  }\r\n\r\n  function isFriday13th(day) {\r\n    return ((day.getDay() === 5) &amp;&amp; (day.getDate() === 13))\r\n  }\r\n\r\n  function getNextFriday(d) {\r\n    return new Date(d.setDate(d.getDate() + (5 - d.getDay() &gt; 0 ? 5 - d.getDay() : 12 - d.getDay())))\r\n  }\r\n}\r\n\r\n\r\nfunction generator(fn) {\r\n  var res = []\r\n  var g = fn()\r\n\r\n  return {\r\n    take: function(max) {\r\n      for (var i = 0; i &lt; max; i += 1) {\r\n        var r = g.next()\r\n        res.push(r.value)\r\n      }\r\n      return res\r\n    }\r\n  }\r\n}\r\n\r\n\r\nvar fridays = generator(fridays13th).take(5)\r\n\r\n\r\ndocument.body.innerHTML = '&lt;pre&gt;' + JSON.stringify(fridays, null, 4) + '&lt;/pre&gt;';</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}], "owner": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 866, "favorite_count": 1, "accepted_answer_id": 28802421, "answer_count": 4, "score": 2, "last_activity_date": 1462970783, "creation_date": 1425203591, "last_edit_date": 1425204383, "question_id": 28792158, "link": "https://stackoverflow.com/questions/28792158/getting-every-friday-until-a-certain-date-but-in-a-functional-style", "title": "Getting every Friday until a certain date, but in a functional style?", "body": "<p>For example, I want to get the dates of every Friday from now until 30 days from now.</p>\n\n<p>Currently, I can make use of the underscore library and moment.js to do this. But the result is super verbose and annoyingly procedural/imperative. Observe:</p>\n\n<pre><code>var initDate = moment().day(\"Friday\");\nvar endDate = moment().add(30, 'days');\n\nvar result = [];\nresult.push(initDate);\n\nwhile (_.last(result).isBefore(endDate)) {\n    var x = _.last(result);\n    result.push(nextWeek(x));\n}\n\nalert(result);    // answer here\n\n// create a new moment from given moment and add 7 days\nfunction nextWeek(initMoment) {\n    var x = moment(initMoment);\n    return x.add(7,'days');    \n}\n</code></pre>\n\n<p>Here is the corresponding fiddle: <a href=\"http://jsfiddle.net/aafsh5xa/\" rel=\"nofollow\">http://jsfiddle.net/aafsh5xa/</a></p>\n\n<p>I was wondering if there's a way to use Haskell-like features such as list comprehensions or infinite lists (lazy evaluation) to make this a lot more concise. Maybe something like:</p>\n\n<pre><code>var initDate = moment();\nvar endDate = moment().add(30,days);\n\nvar everyFriday = genLazyList(initDate, nextFridayFrom);\nvar result = _.filter(everyFriday, function(input){ return input.isBefore(endDate); });\n</code></pre>\n\n<p>Note that everyFriday is an infinite list generated by genLazyList and is not evaluated until the _.filter() function is called upon it. And nextFridayFrom() is a function that genLazyList uses to make the lazy list.</p>\n"}, {"tags": ["haskell", "yesod"], "comments": [{"owner": {"reputation": 5175, "user_id": 4370109, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UcQgO.jpg?s=128&g=1", "display_name": "Brian Tompsett - \u6c64\u83b1\u6069", "link": "https://stackoverflow.com/users/4370109/brian-tompsett-%e6%b1%a4%e8%8e%b1%e6%81%a9"}, "edited": false, "score": 0, "creation_date": 1425203566, "post_id": 28792117, "comment_id": 45859228, "body": "Can you give some more details for those of us who do not have the book, then we might be able to help you...."}, {"owner": {"reputation": 31483, "user_id": 502381, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/74b99e687909be449e0130a50950eac7?s=128&d=identicon&r=PG&f=1", "display_name": "JJJ", "link": "https://stackoverflow.com/users/502381/jjj"}, "edited": false, "score": 1, "creation_date": 1425203797, "post_id": 28792117, "comment_id": 45859279, "body": "I thought posting text as an image was annoying, but posting text as a video, now <i>that&#39;s</i> annoying."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1425215496, "post_id": 28792117, "comment_id": 45862391, "body": "I would suggest you to avoid learning Yesod without getting a grasp of Haskell."}], "answers": [{"comments": [{"owner": {"reputation": 1510, "user_id": 1576064, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/47c868b652ffdc287498a8c604a30013?s=128&d=identicon&r=PG", "display_name": "Lubom&#237;r Sedl&#225;\u0159", "link": "https://stackoverflow.com/users/1576064/lubom%c3%adr-sedl%c3%a1%c5%99"}, "edited": false, "score": 0, "creation_date": 1425215398, "post_id": 28793878, "comment_id": 45862363, "body": "Use <code>cabal install --only-dependencies</code> to install all missing dependencies."}, {"owner": {"reputation": 13, "user_id": 4551864, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09833f613ee81e51a3761357a1d21e8e?s=128&d=identicon&r=PG&f=1", "display_name": "Ant&#243;in", "link": "https://stackoverflow.com/users/4551864/ant%c3%b3in"}, "edited": false, "score": 0, "creation_date": 1425225737, "post_id": 28793878, "comment_id": 45865829, "body": "I did it and it says everything is installed."}, {"owner": {"reputation": 785, "user_id": 3087558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a43d21bfa85dc7dc360cafa7f69ba3b1?s=128&d=identicon&r=PG&f=1", "display_name": "fgv", "link": "https://stackoverflow.com/users/3087558/fgv"}, "edited": false, "score": 0, "creation_date": 1425227852, "post_id": 28793878, "comment_id": 45866591, "body": "Did you try to install classy-prelude-yesod? Did you get the same error after you installed it?"}], "tags": [], "owner": {"reputation": 785, "user_id": 3087558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a43d21bfa85dc7dc360cafa7f69ba3b1?s=128&d=identicon&r=PG&f=1", "display_name": "fgv", "link": "https://stackoverflow.com/users/3087558/fgv"}, "is_accepted": false, "score": 1, "last_activity_date": 1425215197, "creation_date": 1425215197, "answer_id": 28793878, "question_id": 28792117, "link": "https://stackoverflow.com/questions/28792117/yesod-stuck-in-book-seven-web-frameworks-in-seven-weeks/28793878#28793878", "title": "Yesod: Stuck in book &quot;Seven Web frameworks in seven weeks&quot;", "body": "<p>It seems that you don't have the classy-prelude-yesod package installed. If you have cabal installed, you can easily install any missing package. To do this, you can enter on your OS command prompt the following:</p>\n\n<pre><code>cabal install classy-prelude-yesod\n</code></pre>\n\n<p>You can use the same method if you are missing any other packages.</p>\n"}, {"tags": [], "owner": {"reputation": 1367, "user_id": 1160885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc61c1b2045efa54375188bdb6a33945?s=128&d=identicon&r=PG", "display_name": "Jedai", "link": "https://stackoverflow.com/users/1160885/jedai"}, "is_accepted": true, "score": 5, "last_activity_date": 1425232252, "creation_date": 1425232252, "answer_id": 28796936, "question_id": 28792117, "link": "https://stackoverflow.com/questions/28792117/yesod-stuck-in-book-seven-web-frameworks-in-seven-weeks/28796936#28796936", "title": "Yesod: Stuck in book &quot;Seven Web frameworks in seven weeks&quot;", "body": "<p>The instructions in this quick start guide led you to create a sandbox for your project, thus the dependencies you installed are only available within this sandbox (which is the cautious and arguably correct way to do it, avoiding collisions and easing the cleanup). GHCi is part of GHC and unaware of the sandbox (which is a concept for and from <code>cabal</code> only). </p>\n\n<p>To start an interactive shell in the sandbox launch <code>cabal repl</code> from the root directory of your project, then use <code>:load src/Model.hs</code> if Model.hs is in src.</p>\n"}], "owner": {"reputation": 13, "user_id": 4551864, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09833f613ee81e51a3761357a1d21e8e?s=128&d=identicon&r=PG&f=1", "display_name": "Ant&#243;in", "link": "https://stackoverflow.com/users/4551864/ant%c3%b3in"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 194, "favorite_count": 0, "accepted_answer_id": 28796936, "answer_count": 2, "score": 1, "last_activity_date": 1425244448, "creation_date": 1425203293, "last_edit_date": 1425226114, "question_id": 28792117, "link": "https://stackoverflow.com/questions/28792117/yesod-stuck-in-book-seven-web-frameworks-in-seven-weeks", "title": "Yesod: Stuck in book &quot;Seven Web frameworks in seven weeks&quot;", "body": "<p>I installed Yesod according to the <a href=\"http://www.yesodweb.com/page/quickstart\" rel=\"nofollow\">quick start guide</a>.</p>\n\n<p>I bought the book \"Seven Web frameworks in seven weeks\" and I'm trying to follow along. I'm on page 204 (Day 1: Working with models). When I enter</p>\n\n<pre><code>ghci Model.hs\n</code></pre>\n\n<p>in order to enter some data into the database, as the book says, I get this:</p>\n\n<pre>\nGHCi, version 7.8.3: http://www.haskell.org/ghc/  :? for help \nLoading package ghc-prim ... linking ... done.\nLoading package integer-gmp ... linking ... done.\nLoading package base ... linking ... done.\n\nModel.hs:3:8:              \n    Could not find module \u2018ClassyPrelude.Yesod\u2019 \n    Use -v to see a list of the files searched for.    \n\nModel.hs:4:8:                                   \n    Could not find module \u2018Database.Persist.Quasi\u2019 \n    Use -v to see a list of the files searched for.\nFailed, modules loaded: none.  \n</pre>\n\n<p>I'm stuck. I'm new to Haskell (but not a newbie) and Yesod, so I don't know what to do.</p>\n\n<p>Thanks in advance.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 698, "user_id": 981405, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7de874a683e805c5c45bfce7c985522d?s=128&d=identicon&r=PG", "display_name": "jgon", "link": "https://stackoverflow.com/users/981405/jgon"}, "edited": false, "score": 0, "creation_date": 1425226144, "post_id": 28791543, "comment_id": 45865980, "body": "Ah I saw another post where something similar looked like it was solved with a newtype, but great thanks, that explains that."}, {"owner": {"reputation": 698, "user_id": 981405, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7de874a683e805c5c45bfce7c985522d?s=128&d=identicon&r=PG", "display_name": "jgon", "link": "https://stackoverflow.com/users/981405/jgon"}, "edited": false, "score": 0, "creation_date": 1425226372, "post_id": 28791543, "comment_id": 45866066, "body": "Also it won&#39;t be so bad to instantiate at every integral type because <code>gendivmod</code> is the minimal complete definition, and for integral types this should just be equal to <code>divMod</code>."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425230694, "post_id": 28791543, "comment_id": 45867659, "body": "If you need to write a lot of <code>Integral a =&gt; Euclidean a</code> instances, you can use DefaultSignatures and then you will only have to write <code>instance Euclidean Integer; instance Euclidean Int; ...</code>."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 4, "last_activity_date": 1425198951, "last_edit_date": 1425198951, "creation_date": 1425198490, "answer_id": 28791543, "question_id": 28790762, "link": "https://stackoverflow.com/questions/28790762/haskell-instance-declaration-affecting-interpretation-of-class/28791543#28791543", "title": "Haskell instance declaration affecting interpretation of class", "body": "<p>I'm not sure why you think you need a newtype.</p>\n\n<p>The \"superclass instance\"</p>\n\n<pre><code>instance (Integral a) =&gt; Euclidean a where\n</code></pre>\n\n<p>which you probably think means \"every instance of <code>Integral</code> is also an instance of <code>Euclidean</code>\" actually means \"<em>every type</em> is an instance of <code>Euclidean</code>, later adding the constraint that upon instantiation we require <code>Integral</code>\".  Such instances are always going to cause you problems.</p>\n\n<p>What I would recommend is explicitly instantiating <code>Euclidean</code> at each type you need it for (which also allows you to get rid of <code>UndecidableInstances</code>).</p>\n\n<pre><code>instance Euclidean Integer where\n    ...\n</code></pre>\n\n<p>If you instantiate it at many <code>Integral</code> types, you should write helpers:</p>\n\n<pre><code>integralGenmod :: (Integral a) =&gt; a -&gt; a -&gt; a\n...\n</code></pre>\n\n<p>Or, since your class has many methods, start by reifying:</p>\n\n<pre><code>data EuclideanDomain a = EuclideanDomain a {\n    edGenmod :: a -&gt; a -&gt; a,\n    ...\n}\nclass Euclidean a where\n    euclideanDomain :: EuclideanDomain a\n\ngenmod :: (Euclidean a) =&gt; a -&gt; a -&gt; a\ngenmod = edGenmod euclideanDomain    \n...\n\nintegralEuclidean :: (Integral a) =&gt; EuclideanDomain a\nintegralEuclidean = EuclideanDomain { ... }\n\ninstance Euclidean Integral where\n    euclideanDomain = integralEuclidean\n</code></pre>\n\n<p>which makes the explicit instantiation quite a bit more manageable, and will also allow you to state more of the compositional properties of your structure.  (Cf. this <a href=\"https://lukepalmer.wordpress.com/2013/03/12/constructions-on-typeclasses-part-1-f-algebras/\" rel=\"nofollow\">post</a> where reifying a typeclass can get you a long way)</p>\n"}], "owner": {"reputation": 698, "user_id": 981405, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7de874a683e805c5c45bfce7c985522d?s=128&d=identicon&r=PG", "display_name": "jgon", "link": "https://stackoverflow.com/users/981405/jgon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 28791543, "answer_count": 1, "score": 1, "last_activity_date": 1425198951, "creation_date": 1425190803, "question_id": 28790762, "link": "https://stackoverflow.com/questions/28790762/haskell-instance-declaration-affecting-interpretation-of-class", "title": "Haskell instance declaration affecting interpretation of class", "body": "<p>The code below gives me this error unless the instance declaration is removed. Additionally, I have no idea what to Google, as the error isn't related to what seems to be causing the problem?</p>\n\n<pre><code>Test.hs|20 col 31 error| Could not deduce (Integral a) arising from a use of `gendivmod'\n|| from the context (Euclidean a)\n||   bound by the type signature for\n||              gcdBezouts :: Euclidean a =&gt; a -&gt; a -&gt; (a, a, a)\n||   at /home/jragonfyre/src/haskell/mathlib/Test.hs:17:15-50\n|| Possible fix:\n||   add (Integral a) to the context of\n||     the type signature for\n||       gcdBezouts :: Euclidean a =&gt; a -&gt; a -&gt; (a, a, a)\n|| In the expression: gendivmod x y\n|| In a pattern binding: (q, r) = gendivmod x y\n|| In the expression:\n||   let\n||     (q, r) = gendivmod x y\n||     (n, m, d) = gcdBezouts y r\n||   in (m, n - m * q, d)\n</code></pre>\n\n<p>This is a MWE to reproduce the error on my machine.</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances, UndecidableInstances #-}\n\nclass (Num a, Eq a) =&gt; Euclidean a where\n  genmod :: a -&gt; a -&gt; a\n  genmod a = snd . gendivmod a\n  gendiv :: a -&gt; a -&gt; a\n  gendiv a = fst . gendivmod a\n  gendivmod :: a -&gt; a -&gt; (a,a)\n  gendivmod a b = (gendiv a b, genmod a b)\n  isUnitEu :: a -&gt; Bool\n  isUnitEu = (==1) . abs\n\ninstance (Integral a) =&gt; Euclidean a where\n  gendivmod = divMod\n\ngcdBezouts :: (Euclidean a) =&gt; a -&gt; a -&gt; (a, a, a)\ngcdBezouts 0 x = (0, 1, x)\ngcdBezouts x 0 = (1, 0, x)\ngcdBezouts x y = let (q, r) = gendivmod x y\n                     (n, m, d) = gcdBezouts y r\n                 in (m, n-m*q, d)\n</code></pre>\n\n<p>As for the motivation for not using a newtype, and going with the specific instance declaration, I have a lot of existing code that was written for integers that I wanted to generalize to work with polynomials as well, and I didn't want to have to rewrite it into an ugly mess with wrapping and unwrapping the newtype.</p>\n\n<p>If there is another solution that will accomplish what I'd like, that would also be appreciated.</p>\n"}, {"tags": ["haskell", "lambda-calculus", "callbyname", "call-by-value"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1425185147, "post_id": 28790172, "comment_id": 45855673, "body": "This looks like call by need to me, since Haskell is call by need (modulo pedantry)"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1425185294, "post_id": 28790172, "comment_id": 45855704, "body": "<code>f $! interpret env e2</code> would get you call by value."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1426115893, "post_id": 28790172, "comment_id": 46246286, "body": "@loqui This is definitely not call-by-need or call-by-name. The normal call-by-name Y combinator causes an <a href=\"http://stackoverflow.com/a/6715144/414413\">infinite loop</a>, suggesting that this is in fact call-by-value and requires a call-by-value <a href=\"http://en.wikipedia.org/wiki/Fixed-point_combinator\" rel=\"nofollow noreferrer\">fixed-point combinator</a>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425217626, "post_id": 28791415, "comment_id": 45863049, "body": "Unfortunately, GHC relies on full laziness very heavily to support other transformations. Maybe someone will do something about that some day, but I&#39;m not optimistic."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 5, "last_activity_date": 1425220953, "last_edit_date": 1425220953, "creation_date": 1425197252, "answer_id": 28791415, "question_id": 28790172, "link": "https://stackoverflow.com/questions/28790172/difference-between-call-by-value-and-call-by-name-interpreter-for-the-lambda-cal/28791415#28791415", "title": "Difference between call-by-value and call-by-name interpreter for the lambda calculus", "body": "<p>I don't think proper call-by-name is possible with the original data definition. <code>F (Value a -&gt; Value a)</code> has <code>Value a</code> as argument, so we have no choice but to pass in some already interpreted value, and it'll be call-by-need under Haskell reduction behaviour. </p>\n\n<p>We could modify the data definition:</p>\n\n<pre><code>data Value a = V a | F ((() -&gt; Value a) -&gt; Value a)\n</code></pre>\n\n<p>And also have the interpreter return explicit thunks:</p>\n\n<pre><code>interpret :: [(String, () -&gt; Value a)] -&gt; Expr -&gt; () -&gt; Value a\ninterpret env (Var x) = delay (case lookup x env of\n  Nothing -&gt; error \"undefined variable\"\n  Just v -&gt; force v)\ninterpret env (Lam x e) = delay (F (\\v -&gt; force (interpret ((x, v):env) e)))\ninterpret env (App e1 e2) = delay (case force (interpret env e1) of\n  V _ -&gt; error \"not a function\"\n  F f -&gt; f (interpret env e2))\n\nforce :: (() -&gt; a) -&gt; a\nforce f = f ()\n{-# NOINLINE force #-}\n\ndelay :: a -&gt; () -&gt; a\ndelay a () = a\n{-# NOINLINE delay #-}\n</code></pre>\n\n<p>Now, instead of storing a thunk in the environment, we store a <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Storage/HeapObjects#Partialapplications\" rel=\"nofollow\">partial application object</a>, and then evaluate it separately at different call sites.</p>\n\n<p><code>force</code> and <code>delay</code> are required to prevent GHC from floating out function bodies, <a href=\"http://okmij.org/ftp/Haskell/#memo-off\" rel=\"nofollow\">thereby recovering sharing.</a> Alternatively, one could compile with <code>{-# OPTIONS -fno-full-laziness #-}</code> and use simple lambdas and applications instead instead of the above machinery. </p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1425199458, "creation_date": 1425199458, "answer_id": 28791646, "question_id": 28790172, "link": "https://stackoverflow.com/questions/28790172/difference-between-call-by-value-and-call-by-name-interpreter-for-the-lambda-cal/28791646#28791646", "title": "Difference between call-by-value and call-by-name interpreter for the lambda calculus", "body": "<p>CBV/CBN are concepts related to the evaluation strategy of the lambda calculus, i.e. related to the choice of redex in lambda term reduction. In an operational-style interpreter which reduces terms representations, you can properly speak of CBV/CBN. </p>\n\n<p>In a denotational-style interpreter like the posted one, I'd speak of eager vs lazy semantics, instead of CBV/CBN. Of course eager corresponds to CBV, and lazy to CBN.</p>\n\n<p>Since Haskell is lazy, the code</p>\n\n<pre><code>interpret env (App e1 e2) = case interpret env e1 of\n  V _ -&gt; error \"not a function\"\n  F f -&gt; f (interpret env e2)\n</code></pre>\n\n<p>implements a lazy semantics (CBN). (As luqui states, operationally GHC would reduce this in a call-by-need fashion).</p>\n\n<p>To get an eager (CBV) semantics, we can force the argument before the call:</p>\n\n<pre><code>interpret env (App e1 e2) = case interpret env e1 of\n  V _ -&gt; error \"not a function\"\n  F f -&gt; case interpret env e2 of\n         V v -&gt; f v\n         F g -&gt; f g\n</code></pre>\n\n<p>This ensures that no unevaluated thunks are fed to a function, unless they are already in the environment. The environment, however, is populated only when evaluating a lambda, which will insert the values <code>v</code>,<code>g</code> above in the environment. Hence, no thunks will be inserted there.</p>\n"}], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1712, "favorite_count": 1, "accepted_answer_id": 28791415, "answer_count": 2, "score": 4, "last_activity_date": 1425220953, "creation_date": 1425184833, "last_edit_date": 1495542501, "question_id": 28790172, "link": "https://stackoverflow.com/questions/28790172/difference-between-call-by-value-and-call-by-name-interpreter-for-the-lambda-cal", "title": "Difference between call-by-value and call-by-name interpreter for the lambda calculus", "body": "<p>In another question, Bob presented the following <a href=\"https://stackoverflow.com/questions/28752112/interpret-parigots-lambda-mu-calculus-in-haskell\">interpreter for the untyped lambda calculus</a>.</p>\n\n<pre><code>data Expr = Var String | Lam String Expr | App Expr Expr\n\ndata Value a = V a | F (Value a -&gt; Value a)\n\ninterpret :: [(String, Value a)] -&gt; Expr -&gt; Value a\ninterpret env (Var x) = case lookup x env of\n  Nothing -&gt; error \"undefined variable\"\n  Just v -&gt; v\ninterpret env (Lam x e) = F (\\v -&gt; interpret ((x, v):env) e)\ninterpret env (App e1 e2) = case interpret env e1 of\n  V _ -&gt; error \"not a function\"\n  F f -&gt; f (interpret env e2)\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/28752112/interpret-parigots-lambda-mu-calculus-in-haskell#comment45828142_28752112\">Ivan Zakharyaschev remarked</a> that this interpreter is call-by-value due to <code>F f -&gt; f (interpret env e2)</code>. <strong>How would the implementation of a call-by-name interpreter be different from the one presented above?</strong></p>\n\n<p>Plotkin studied <a href=\"http://homepages.inf.ed.ac.uk/gdp/publications/cbn_cbv_lambda.pdf\" rel=\"nofollow noreferrer\">call-by-name and call-by-value strategies</a> for evaluating the lambda calculus in the 1970s.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425185992, "post_id": 28789337, "comment_id": 45855834, "body": "<code>[]</code> is a container like data structure. The tuple <code>([], &gt;&gt;=, return)</code> is a different structure (which is implemented as a type class in Haskell) which can be used to model non determinism."}], "tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": false, "score": 9, "last_activity_date": 1425176028, "creation_date": 1425176028, "answer_id": 28789337, "question_id": 28789270, "link": "https://stackoverflow.com/questions/28789270/understanding-monad-m-in/28789337#28789337", "title": "Understanding &quot;Monad m&quot; in &gt;&gt;=", "body": "<p>You say</p>\n\n<blockquote>\n  <p>I would've expected <code>\\x -&gt; same x</code> to have produced a <code>[b]</code> type, since the <code>Monad m</code> type here is <code>[]</code>, as I understand.</p>\n</blockquote>\n\n<p>and so it does because it is.</p>\n\n<p>We have</p>\n\n<pre><code>[[1]] &gt;&gt;= \\ x -&gt; same x\n=\n[[1]]       &gt;&gt;=    \\ x -&gt; x\n[[Int]]          [Int] -&gt; [Int]        :: [Int]\n[] [Int]         [Int] -&gt; [] Int       :: [] Int\nm  a             a        m  b            m  b\n</code></pre>\n\n<p>Sometimes <code>[]</code> is describing a kind of \"nondeterminism\" effect. Other times, <code>[]</code> is describing a container-like data structure. The fact that it's difficult to tell the difference between which of these two purposes is being served is a feature of which some people are terribly proud. I'm not ready to agree with them, but I see what they're doing.</p>\n"}, {"tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": false, "score": 0, "last_activity_date": 1425176030, "creation_date": 1425176030, "answer_id": 28789338, "question_id": 28789270, "link": "https://stackoverflow.com/questions/28789270/understanding-monad-m-in/28789338#28789338", "title": "Understanding &quot;Monad m&quot; in &gt;&gt;=", "body": "<p>The monad here is <code>[a]</code> and the example is pointlessly complicated. This\u2019ll be clearer:</p>\n\n<pre><code>Prelude&gt; [[1]] &gt;&gt;= id\n[1]\n</code></pre>\n\n<p>just as</p>\n\n<pre><code>Prelude&gt; [[1]] &gt;&gt;= const [2]\n[2]\n</code></pre>\n\n<p>i.e. <code>&gt;&gt;=</code> is <code>concatMap</code> and is <code>concat</code> when used with <code>id</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 1, "last_activity_date": 1425176149, "creation_date": 1425176149, "answer_id": 28789356, "question_id": 28789270, "link": "https://stackoverflow.com/questions/28789270/understanding-monad-m-in/28789356#28789356", "title": "Understanding &quot;Monad m&quot; in &gt;&gt;=", "body": "<p>As you say <code>m</code> is <code>[]</code>. Then <code>a</code> is <code>[Integer]</code> (ignoring the fact that numbers are polymorphic for simplicity's sake) and <code>b</code> is <code>Integer</code>. So <code>a -&gt; m b</code> becomes <code>[Integer] -&gt; [Integer]</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 1, "last_activity_date": 1425176947, "last_edit_date": 1425176947, "creation_date": 1425176174, "answer_id": 28789362, "question_id": 28789270, "link": "https://stackoverflow.com/questions/28789270/understanding-monad-m-in/28789362#28789362", "title": "Understanding &quot;Monad m&quot; in &gt;&gt;=", "body": "<p>First: we should use the standard version of <code>same</code>, it is called <code>id</code>.</p>\n\n<p>Now, let's rename some type variables</p>\n\n<pre><code>id :: (a'' ~ a) =&gt; a -&gt; a''\n</code></pre>\n\n<p>What this means is: the signature of <code>id</code> is that of a function mapping between two types, with the extra constraint that both types be equal. That's all &ndash; we do not require any particular properties, like &ldquo;being flat&rdquo;.</p>\n\n<p>Why the hell would I write it this way? Well, if we also rename some of the variables in the bind signature...</p>\n\n<pre><code>(&gt;&gt;=) :: (Monad m, a'~m a, a''~m b) =&gt; a' -&gt; (a -&gt; a'') -&gt; a''\n</code></pre>\n\n<p>...then it is obvious how we can plug the <code>id</code>, as the type variables have already been named accordingly. The type-equality constraint <code>a''~a</code> from <code>id</code> is simply taken to the compound's signature, i.e.</p>\n\n<pre><code>(&gt;&gt;=id) :: (Monad m, a'~m a, a''~m b, a''~a) =&gt; a' -&gt; a''\n</code></pre>\n\n<p>or, simplifying that,</p>\n\n<pre><code>(&gt;&gt;=id) :: (Monad m, a'~m a, m b~a) =&gt; a' -&gt; m b\n(&gt;&gt;=id) :: (Monad m, a'~m (m b))    =&gt; a' -&gt; m b\n(&gt;&gt;=id) :: (Monad m)                =&gt; m (m b) -&gt; m b\n</code></pre>\n\n<p>So what this does is, it flattens a nested monad to a single application of that same monad. Quite simple, and as a matter of fact this is one the &ldquo;more fundamental&rdquo; operation: mathematicians <a href=\"https://en.wikipedia.org/wiki/Monad_%28category_theory%29#Formal_definition\" rel=\"nofollow\">don't define the bind operator, they instead define</a> two morphisms <code>\u03b7 :: a -&gt; m a</code> (we know that, it's <code>return</code>) and <code>\u03bc :: m (m a) -&gt; m a</code> &ndash; yup, that's the one you've just discovered. In Haskell, it's called <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Control-Monad.html#v:join\" rel=\"nofollow\"><code>join</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "is_accepted": false, "score": 8, "last_activity_date": 1425179215, "last_edit_date": 1425179215, "creation_date": 1425178591, "answer_id": 28789585, "question_id": 28789270, "link": "https://stackoverflow.com/questions/28789270/understanding-monad-m-in/28789585#28789585", "title": "Understanding &quot;Monad m&quot; in &gt;&gt;=", "body": "<blockquote>\n  <p>Looking at <code>&gt;&gt;=</code>'s signature, how does <code>\\x -&gt; same x</code> type check with <code>a -&gt; m b</code>?</p>\n</blockquote>\n\n<p>It's actually very simple. Look at the type signatures:</p>\n\n<pre><code>same       :: x -&gt; x\n\n(&gt;&gt;=)      :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n\n(&gt;&gt;= same) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n                                |________|\n                                    |\n                                 x -&gt; x\n</code></pre>\n\n<p>Therefore:</p>\n\n<pre><code>x := a\n\n-- and\n\nx := m b\n\n-- and by transitivity\n\na := x := m b\n\n-- or\n\na := m b\n</code></pre>\n\n<p>Hence:</p>\n\n<pre><code>(&gt;&gt;= same) :: Monad m =&gt; m (m b) -&gt; m b\n</code></pre>\n\n<p>This is just the <code>join</code> function from the <code>Control.Monad</code> module, and for the list monad it is the same as the <code>concat</code> function. Thus:</p>\n\n<pre><code>[[1]] &gt;&gt;= \\x -&gt; same x\n\n-- is the same as the following via eta reduction\n\n[[1]] &gt;&gt;= same\n\n-- is the same as\n\n(&gt;&gt;= same) [[1]]\n\n-- is the same as\n\njoin [[1]]\n\n-- is the same as\n\nconcat [[1]]\n\n-- evaluates to\n\n[1]\n</code></pre>\n\n<blockquote>\n  <p>I would've expected <code>\\x -&gt; same x</code> to have produced a <code>[b]</code> type, since the <code>Monad m</code> type here is <code>[]</code>, as I understand.</p>\n</blockquote>\n\n<p>Indeed, it does. The <code>\\x -&gt; same x</code> function which has the type <code>x -&gt; x</code> is specialized to the type <code>[b] -&gt; [b]</code> as I explained above. Hence, <code>(&gt;&gt;= same)</code> is of the type <code>[[b]] -&gt; [b]</code> which is the same as the <code>concat</code> function. It flattens a list of lists.</p>\n\n<p>The <code>concat</code> function is a specialization of the <code>join</code> function which flattens a nested monad.</p>\n\n<hr>\n\n<p>It should be noted that a monad can be defined in terms of either <code>&gt;&gt;=</code> or <code>fmap</code> and <code>join</code>. To <a href=\"https://en.wikipedia.org/wiki/Monad_(functional_programming)#fmap_and_join\">quote Wikipedia</a>:</p>\n\n<blockquote>\n  <p>Although Haskell defines monads in terms of the <code>return</code> and <code>&gt;&gt;=</code> functions, it is also possible to define a monad in terms of <code>return</code> and two other operations, <code>join</code> and <code>fmap</code>. This formulation fits more closely with the original definition of monads in category theory. The <code>fmap</code> operation, with type <code>Monad m =&gt; (a -&gt; b) -&gt; m a -&gt; m b</code>, takes a function between two types and produces a function that does the &ldquo;same thing&rdquo; to values in the monad. The <code>join</code> operation, with type <code>Monad m =&gt; m (m a) -&gt; m a</code>, &ldquo;flattens&rdquo; two layers of monadic information into one.</p>\n  \n  <p>The two formulations are related as follows:</p>\n\n<pre><code>fmap f m = m &gt;&gt;= (return . f)\njoin n   = n &gt;&gt;= id\n\nm &gt;&gt;= g  \u2261 join (fmap g m)\n</code></pre>\n  \n  <p>Here, <code>m</code> has the type <code>Monad m =&gt; m a</code>, <code>n</code> has the type <code>Monad m =&gt; m (m a)</code>, <code>f</code> has the type <code>a -&gt; b</code>, and <code>g</code> has the type <code>Monad m =&gt; a -&gt; m b</code>, where <code>a</code> and <code>b</code> are underlying types.</p>\n  \n  <p>The <code>fmap</code> function is defined for any functor in the category of types and functions, not just for monads. It is expected to satisfy the functor laws:</p>\n\n<pre><code>fmap id      \u2261 id\nfmap (f . g) \u2261 (fmap f) . (fmap g)\n</code></pre>\n  \n  <p>The <code>return</code> function characterizes pointed functors in the same category, by accounting for the ability to &ldquo;lift&rdquo; values into the functor. It should satisfy the following law:</p>\n\n<pre><code>return . f \u2261 fmap f . return\n</code></pre>\n  \n  <p>In addition, the <code>join</code> function characterizes monads:</p>\n\n<pre><code>join . fmap join     \u2261 join . join\njoin . fmap return   \u2261 join . return = id\njoin . fmap (fmap f) \u2261 fmap f . join\n</code></pre>\n</blockquote>\n\n<p>Hope that helps.</p>\n"}, {"tags": [], "owner": {"reputation": 4530, "user_id": 68268, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/4a5ab824f23e84577218c5881d36072c?s=128&d=identicon&r=PG", "display_name": "Khanzor", "link": "https://stackoverflow.com/users/68268/khanzor"}, "is_accepted": false, "score": 3, "last_activity_date": 1425199900, "last_edit_date": 1425199900, "creation_date": 1425190714, "answer_id": 28790752, "question_id": 28789270, "link": "https://stackoverflow.com/questions/28789270/understanding-monad-m-in/28790752#28790752", "title": "Understanding &quot;Monad m&quot; in &gt;&gt;=", "body": "<p>As a few people have commented, you've found a really cute property about monads here. For reference, let's look at the signature for bind:</p>\n\n<pre><code>:: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>In your case, the type <code>a === m b</code> as you have a <code>[[a]]</code> or <code>m (m a)</code>. So, if you rewrite the signature of the above bind operation, you get:</p>\n\n<pre><code>:: Monad m =&gt; m (m b) -&gt; ((m b) -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>I mentioned that this is cute, because by extension, this works for <em>any</em> nested monad. e.g.</p>\n\n<pre><code>:: [[b]] -&gt; ([b] -&gt; [b]) -&gt; [b]\n:: Maybe (Maybe b) -&gt; (Maybe b -&gt; Maybe b) -&gt; Maybe b\n:: Reader (Reader b) -&gt; (Reader b -&gt; Reader b) -&gt; Reader b\n</code></pre>\n\n<p>If you look at the function that get's applied here, you'll see that it's the identity function (e.g. <code>id</code>, <code>same</code>, <code>:: forall a. a -&gt; a</code>).</p>\n\n<p>This is included in the standard libraries for Haskell, as <code>join</code>. You can <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/src/Control-Monad.html#join%20Hackage\" rel=\"nofollow\">look at the source here on hackage.</a> You'll see it's implemented as <code>bind id</code>, or <code>\\mma -&gt; mma &gt;&gt;= id</code>, or <code>(=&lt;&lt;) id</code></p>\n"}], "owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 424, "favorite_count": 0, "answer_count": 6, "score": 2, "last_activity_date": 1425199900, "creation_date": 1425175413, "question_id": 28789270, "link": "https://stackoverflow.com/questions/28789270/understanding-monad-m-in", "title": "Understanding &quot;Monad m&quot; in &gt;&gt;=", "body": "<p>Looking at Haskell's bind:</p>\n\n<pre><code>Prelude&gt; :t (&gt;&gt;=)\n(&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>I was confused by the following example:</p>\n\n<pre><code>Prelude&gt; let same x = x\n\nPrelude&gt; [[1]] &gt;&gt;= \\x -&gt; same x\n[1]\n</code></pre>\n\n<p>Looking at <code>&gt;&gt;=</code>'s signature, how does <code>\\x -&gt; same x</code> type check with <code>a -&gt; m b</code>?</p>\n\n<p>I would've expected <code>\\x -&gt; same x</code> to have produced a <code>[b]</code> type, since the <code>Monad m</code> type here is <code>[]</code>, as I understand.</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": false, "score": 6, "last_activity_date": 1425153796, "last_edit_date": 1592644375, "creation_date": 1425153796, "answer_id": 28786246, "question_id": 28785355, "link": "https://stackoverflow.com/questions/28785355/creating-an-interpreter-in-haskell/28786246#28786246", "title": "Creating an Interpreter in Haskell", "body": "<p>It's a little difficult to answer your question, because you didn't actually ask one. Let me just pick out a few of the things that you've said, in order to give you a few clues.</p>\n<blockquote>\n<p>I am not sure if I need to use <code>evalE</code> in this problem or not. I have written it in a previous problem. The signature for <code>evalE</code> is <code>evalE :: Expression -&gt; Store -&gt; (Value, Store)</code></p>\n<p><code>evalS (Expr e) s         = ... Not sure what to do, here.</code></p>\n</blockquote>\n<p>What does it mean to execute a statement which consists of an expression? If it has something to do with evaluating the expression, then the fact that you have an expression evaluator available might help with &quot;what to do, here&quot;.</p>\n<p>Next, compare the code you've been given for &quot;while&quot; (which contains a fine example of a sensible thing to do with an expression, by the way)...</p>\n<pre><code>evalS w@(While e s1) s = case (evalE e s) of`\n  (BoolVal True,s')  -&gt; let s'' = evalS s1 s' in evalS w s''\n  (BoolVal False,s') -&gt; s'\n  _                  -&gt; error &quot;Condition must be a BoolVal&quot;\n</code></pre>\n<p>...and compare it with your code for &quot;if&quot;</p>\n<pre><code>evalS (If e s1 s2) s     = do\n   x &lt;- evalE e\n   case x of\n      BoolVal True -&gt; evalS s1\n      BoolVal False -&gt; evalS s2\n</code></pre>\n<p>Your code is in a rather different style \u2014 the &quot;monadic&quot; style. Where are you getting that from? It would make sense if the types of the evaluators were something like</p>\n<pre><code>evalE :: Expression -&gt; State Store Value\nevalS :: Statement  -&gt; State Store ()\n</code></pre>\n<p>The monadic style is a very nice way to thread the mutating store through the evaluation process without talking about it too much. E.g., your <code>x &lt;- evalE e</code> means &quot;let <code>x</code> be the result of evaluating <code>e</code> (quietly receiving the initial store and passing along the resulting store)&quot;. It's a good way to work which I expect you'll explore in due course.</p>\n<p>But those aren't the types you've been given, and the monadic style is not appropriate. You have</p>\n<pre><code>evalE :: Expression -&gt; Store -&gt; (Value, Store)\nevalS :: Statement  -&gt; Store -&gt;         Store\n</code></pre>\n<p>and the example code threads the store explicitly. Look again</p>\n<pre><code>evalS w@(While e s1) s = case (evalE e s) of`\n  (BoolVal True,s')  -&gt; let s'' = evalS s1 s' in evalS w s''\n  (BoolVal False,s') -&gt; s'\n  _                  -&gt; error &quot;Condition must be a BoolVal&quot;\n</code></pre>\n<p>See? <code>evalS</code> receives its initial store, <code>s</code>, explicitly, and uses it explicitly in <code>evalE e s</code>. The resulting new store is called <code>s'</code> in both <code>case</code> branches. If the loop is over, then <code>s'</code> is given back as the final store. Otherwise, <code>s'</code> is used as the store for one pass through the loop body, <code>s1</code>, and the store <code>s''</code> resulting from that is used for the next time around the loop, <code>w</code>.</p>\n<p>Your code will need to be similarly explicit in the way it names and uses the store at each stage of evaluation. Let's walk through.</p>\n<pre><code>evalS Skip s             = show s -- I am assuming that since Skip returns an empty String, I just need to return an empty String.\n</code></pre>\n<p>You assume incorrectly. The <code>evalS</code> function does not return a <code>String</code>, empty or otherwise: it returns a <code>Store</code>. Now, which <code>Store</code>? Your initial store is <code>s</code>: how will the store after &quot;skip&quot; relate to <code>s</code>?</p>\n<pre><code>evalS (Sequence s1 s2) s = evalS s1 &gt;&gt; evalS s2 -- sequence1 then sequence2. I am not quite sure what to do with the s.\n</code></pre>\n<p>Again, that's a monadic approach which does not fit with this question. You need to thread the store, intially <code>s</code>, through the process of evaluating statements <code>s1</code> and <code>s2</code> in sequence. The &quot;while&quot; case has a good example of how to do something like that.</p>\n<pre><code>evalS (Expr e) s         = ... Not sure what to do, here.\n</code></pre>\n<p>Again, the &quot;while&quot; example shows you one way to extract a value and an updated store by evaluating an expression. Food for thought, isn't it?</p>\n<pre><code>evalS (If e s1 s2) s     = ...\n</code></pre>\n<p>Now &quot;if&quot; starts out by evaluating a condition, rather a lot like &quot;while&quot;, no?</p>\n<p>So, my advice amounts to this:</p>\n<ul>\n<li>drop the monadic style code for now, but come back to it later when it's appropriate;</li>\n<li>read the example implementation of &quot;while&quot; and understand how it treats expressions and sequences of statements, passing the store explicitly;</li>\n<li>deploy the similar techniques to implement the other constructs.</li>\n</ul>\n<p>The person who set the question has been kind enough to give you code which gives an example of everything you will need. Please reciprocate that kindness by comprehending and then taking the hint!</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 0, "last_activity_date": 1425153946, "creation_date": 1425153946, "answer_id": 28786260, "question_id": 28785355, "link": "https://stackoverflow.com/questions/28785355/creating-an-interpreter-in-haskell/28786260#28786260", "title": "Creating an Interpreter in Haskell", "body": "<p>Since this looks as homework I'll just provide a few small hints, leaving the real work for you.</p>\n\n<blockquote>\n  <p>I am not sure if I need to use evalE in this problem or not.</p>\n</blockquote>\n\n<p>Yes, you'll have to. In your language, an expression <code>e</code> modifies the store and returns a value: you can tell that from <code>evalE</code> returning a pair <code>(Value,Store)</code>\nBy comparison, the statement <code>Expr e</code> modifies the store without returning a value. To obtain the latter (statement evaluation) from the former (expression) all you need to do is to throw away what you do not need.</p>\n\n<p>About your attempt:</p>\n\n<pre><code>evalS Skip s             = show s -- I am assuming that since Skip returns an empty String, I just need to return an empty String.\n</code></pre>\n\n<p>Why a string? Does <code>evalS</code> return strings? If not, what it returns? You are doing far more work than you have to, here.</p>\n\n<pre><code>evalS (Sequence s1 s2) s = evalS s1 &gt;&gt; evalS s2 -- sequence1 then sequence2. I am not quite sure what to do with the s.\n</code></pre>\n\n<p>OK, the idea is right but the code is not. Forget about monads and <code>&gt;&gt;</code>, just think about the stores. You make two recursive calls <code>evalS s1</code> and <code>evalS s2</code>: these look wrong because <code>evalS</code> expects <em>two</em> arguments (statement and store), and you only provide one.</p>\n\n<p>And -- before you try it -- no, passing <code>s</code> to both of them would still be wrong. In which store is the first statement evaluated? What about the second?</p>\n\n<pre><code>evalS (Expr e) s         = ... Not sure what to do, here.\n</code></pre>\n\n<p>See the discussion above.</p>\n\n<pre><code>evalS (If e s1 s2) s     = do\n   x &lt;- evalE e\n   case x of\n      BoolVal True -&gt; evalS s1\n      BoolVal False -&gt; evalS s2\n</code></pre>\n\n<p>Avoid monad-related operations, <code>do</code> and <code>&lt;-</code>. There might be a way to use those to solve this task, but I'd not recommend to try that path to a beginner.\nYou can use <code>let</code> if you want to name intermediate results.</p>\n\n<p><code>evalE</code> takes two arguments, not one. Mind that it returns a pair, not a value. <code>evalS</code> takes two arguments.</p>\n"}], "owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 853, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1425156824, "creation_date": 1425148624, "last_edit_date": 1425156824, "question_id": 28785355, "link": "https://stackoverflow.com/questions/28785355/creating-an-interpreter-in-haskell", "title": "Creating an Interpreter in Haskell", "body": "<p>So, I need to write a function <code>evalS :: Statement -&gt; Store -&gt; Store</code> that takes as input a statement and a store and returns a possibly modified store.</p>\n\n<p>The following case has been given to me:</p>\n\n<pre><code>evalS w@(While e s1) s = case (evalE e s) of\n                          (BoolVal True,s')  -&gt; let s'' = evalS s1 s' in evalS w s''\n                          (BoolVal False,s') -&gt; s'\n                          _                  -&gt; error \"Condition must be a BoolVal \n</code></pre>\n\n<p><strong>And I need to write:</strong></p>\n\n<pre><code>evalS Skip s             = ...\nevalS (Expr e) s         = ...\nevalS (Sequence s1 s2) s = ...\nevalS (If e s1 s2) s     = ...\n</code></pre>\n\n<p>In the If case, if e evaluates to a non-boolean value, I need to throw an error using the error function.</p>\n\n<p><strong>Sample input/output:</strong></p>\n\n<pre><code>&gt; run stmtParser \"x=1+1\" evalS\nfromList [(\"x\",2)]\n&gt; run stmtParser \"x = 2; x = x + 3\" evalS\nfromList [(\"x\",5)]\n&gt; run stmtParser \"if true then x = 1 else x = 2 end\" evalS\nfromList [(\"x\",1)]\n&gt; run stmtParser \"x=2; y=x + 3; if y &lt; 4 then z = true else z = false end\" evalS\nfromList [(\"x\",2),(\"y\",5),(\"z\",false)]\n&gt; run stmtParser \"x = 1; while x &lt; 3 do x = x + 1 end\" evalS\nfromList [(\"x\",3)]\n&gt; run stmtParser \"x = 1 ; y = 1; while x &lt; 5 do x = x + 1 ; y = y * x end\" evalS\nfromList [(\"x\",5),(\"y\",120)] \n</code></pre>\n\n<p><strong>Code for stmtParser:</strong></p>\n\n<pre><code>-- Sequence of statements\nstmtParser :: Parser Statement\nstmtParser = stmtParser1 `chainl1` (P.semi lexer &gt;&gt; return Sequence)\n\n-- Single statements\nstmtParser1 :: Parser Statement\nstmtParser1 = (Expr &lt;$&gt; exprParser)\n          &lt;|&gt; do\n              P.reserved lexer \"if\"\n              cond &lt;- exprParser\n              P.reserved lexer \"then\"\n              the &lt;- stmtParser\n              P.reserved lexer \"else\"\n              els &lt;- stmtParser\n              P.reserved lexer \"end\"\n              return (If cond the els)\n          &lt;|&gt; do\n              P.reserved lexer \"while\"\n              cond &lt;- exprParser\n              P.reserved lexer \"do\"\n              body &lt;- stmtParser\n              P.reserved lexer \"end\"\n              return (While cond body)\n</code></pre>\n\n<p><strong>WHAT I'VE TRIED:</strong></p>\n\n<p>I am not sure if I need to use evalE in this problem or not. I have written it in a previous problem. The signature for evalE is <code>evalE :: Expression -&gt; Store -&gt; (Value, Store)</code> and asked me to write:</p>\n\n<pre><code>evalE (Var x) s = ...\nevalE (Val v) s = ...\nevalE (Assignment x e) s = ...\n</code></pre>\n\n<p>I have done the above, already.</p>\n\n<p><strong>ATTEMPT:</strong></p>\n\n<pre><code>evalS Skip s             = show s -- I am assuming that since Skip returns an empty String, I just need to return an empty String.\nevalS (Sequence s1 s2) s = evalS s1 &gt;&gt; evalS s2 -- sequence1 then sequence2. I am not quite sure what to do with the s.\nevalS (Expr e) s         = ... Not sure what to do, here.\nevalS (If e s1 s2) s     = do\n   x &lt;- evalE e\n   case x of\n      BoolVal True -&gt; evalS s1\n      BoolVal False -&gt; evalS s2\n</code></pre>\n\n<p>I am having trouble writing the above statements.</p>\n\n<p><strong>For reference, here is the entire skeleton that was given to me to work with:</strong></p>\n\n<pre><code>-- Necessary imports\nimport Control.Applicative ((&lt;$&gt;),liftA,liftA2)\nimport Data.Map\nimport Text.Parsec\nimport Text.Parsec.Expr\nimport Text.Parsec.Language (emptyDef)\nimport Text.Parsec.String (Parser)\nimport qualified Text.Parsec.Token as P\n\n\n--------- AST Nodes ---------\n\n-- Variables are identified by their name as string\ntype Variable = String\n\n-- Values are either integers or booleans\ndata Value = IntVal Int       -- Integer value\n           | BoolVal Bool     -- Boolean value\n\n-- Expressions are variables, literal values, unary and binary operations\ndata Expression = Var Variable                    -- e.g. x\n                | Val Value                       -- e.g. 2\n                | BinOp Op Expression Expression  -- e.g. x + 3\n                | Assignment Variable Expression  -- e.g. x = 3\n\n-- Statements are expressions, conditionals, while loops and sequences\ndata Statement = Expr Expression                   -- e.g. x = 23\n               | If Expression Statement Statement -- if e then s1 else s2 end\n               | While Expression Statement        -- while e do s end\n               | Sequence Statement Statement      -- s1; s2\n               | Skip                              -- no-op\n\n-- All binary operations\ndata Op = Plus         --  +  :: Int -&gt; Int -&gt; Int\n        | Minus        --  -  :: Int -&gt; Int -&gt; Int\n        | Times        --  *  :: Int -&gt; Int -&gt; Int\n        | GreaterThan  --  &gt;  :: Int -&gt; Int -&gt; Bool\n        | Equals       --  == :: Int -&gt; Int -&gt; Bool\n        | LessThan     --  &lt;  :: Int -&gt; Int -&gt; Bool\n\n-- The `Store` is an associative map from `Variable` to `Value` representing the memory\ntype Store = Map Variable Value\n\n--------- Parser ---------\n\n-- The Lexer\n\nlexer = P.makeTokenParser (emptyDef {\n  P.identStart = letter,\n  P.identLetter = alphaNum,\n  P.reservedOpNames = [\"+\", \"-\", \"*\", \"!\", \"&gt;\", \"=\", \"==\", \"&lt;\"],\n  P.reservedNames = [\"true\", \"false\", \"if\", \"in\", \"then\", \"else\", \"while\", \"end\", \"to\", \"do\", \"for\"]\n})\n\n-- The Parser\n\n-- Number literals\nnumberParser :: Parser Value\nnumberParser = (IntVal . fromIntegral) &lt;$&gt; P.natural lexer\n\n-- Boolean literals\nboolParser :: Parser Value\nboolParser =  (P.reserved lexer \"true\" &gt;&gt; return (BoolVal True))\n          &lt;|&gt; (P.reserved lexer \"false\" &gt;&gt; return (BoolVal False))\n\n-- Literals and Variables\nvalueParser :: Parser Expression\nvalueParser =  Val &lt;$&gt; (numberParser &lt;|&gt; boolParser)\n           &lt;|&gt; Var &lt;$&gt; P.identifier lexer\n\n-- -- Expressions\nexprParser :: Parser Expression\nexprParser = liftA2 Assignment\n                    (try (P.identifier lexer &gt;&gt;= (\\v -&gt;\n                          P.reservedOp lexer \"=\" &gt;&gt; return v)))\n                    exprParser\n          &lt;|&gt; buildExpressionParser table valueParser\n    where table = [[Infix (op \"*\" (BinOp Times)) AssocLeft]\n                  ,[Infix (op \"+\" (BinOp Plus)) AssocLeft]\n                  ,[Infix (op \"-\" (BinOp Minus)) AssocLeft]\n                  ,[Infix (op \"&gt;\" (BinOp GreaterThan)) AssocLeft]\n                  ,[Infix (op \"==\" (BinOp Equals)) AssocLeft]\n                  ,[Infix (op \"&lt;\" (BinOp LessThan)) AssocLeft]]\n          op name node = (P.reservedOp lexer name) &gt;&gt; return node\n\n-- Sequence of statements\nstmtParser :: Parser Statement\nstmtParser = stmtParser1 `chainl1` (P.semi lexer &gt;&gt; return Sequence)\n\n-- Single statements\nstmtParser1 :: Parser Statement\nstmtParser1 = (Expr &lt;$&gt; exprParser)\n          &lt;|&gt; do\n              P.reserved lexer \"if\"\n              cond &lt;- exprParser\n              P.reserved lexer \"then\"\n              the &lt;- stmtParser\n              P.reserved lexer \"else\"\n              els &lt;- stmtParser\n              P.reserved lexer \"end\"\n              return (If cond the els)\n          &lt;|&gt; do\n              P.reserved lexer \"while\"\n              cond &lt;- exprParser\n              P.reserved lexer \"do\"\n              body &lt;- stmtParser\n              P.reserved lexer \"end\"\n              return (While cond body)\n\n-------- Helper functions --------\n\n-- Lift primitive operations on IntVal and BoolVal values\nliftIII :: (Int -&gt; Int -&gt; Int) -&gt; Value -&gt; Value -&gt; Value\nliftIII f (IntVal x) (IntVal y) = IntVal $ f x y\nliftIIB :: (Int -&gt; Int -&gt; Bool) -&gt; Value -&gt; Value -&gt; Value\nliftIIB f (IntVal x) (IntVal y) = BoolVal $ f x y\n\n-- Apply the correct primitive operator for the given Op value\napplyOp :: Op -&gt; Value -&gt; Value -&gt; Value\napplyOp Plus        = liftIII (+)\napplyOp Minus       = liftIII (-)\napplyOp Times       = liftIII (*)\napplyOp GreaterThan = liftIIB (&gt;)\napplyOp Equals      = liftIIB (==)\napplyOp LessThan    = liftIIB (&lt;)\n\n-- Parse and print (pp) the given WHILE programs\npp :: String -&gt; IO ()\npp input = case (parse stmtParser \"\" input) of\n    Left err -&gt; print err\n    Right x  -&gt; print x\n\n-- Parse and run the given WHILE programs\nrun :: (Show v) =&gt; (Parser n) -&gt; String -&gt; (n -&gt; Store -&gt; v) -&gt; IO ()\nrun parser input eval = case (parse parser \"\" input) of\n    Left err -&gt; print err\n    Right x  -&gt; print (eval x empty)\n</code></pre>\n"}, {"tags": ["haskell", "boolean", "tuples"], "answers": [{"tags": [], "owner": {"reputation": 359, "user_id": 1924817, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33867bd74b16d7ca6bfb658964dfe878?s=128&d=identicon&r=PG", "display_name": "akegalj", "link": "https://stackoverflow.com/users/1924817/akegalj"}, "is_accepted": false, "score": 3, "last_activity_date": 1425144222, "creation_date": 1425144222, "answer_id": 28784647, "question_id": 28784608, "link": "https://stackoverflow.com/questions/28784608/can-a-tuple-of-booleans-be-matched-in-guards-like-pattern-matching/28784647#28784647", "title": "Can a tuple of booleans be matched in guards, like pattern matching?", "body": "<p>Use pattern matching for this one:</p>\n\n<pre><code>chooseAction :: (Bool , Bool , Bool , Bool) -&gt; String \nchooseAction (True ,False, False, False) = \"JUMP\"\nchooseAction (False ,True, False, False) = \"SPEED\"\nchooseAction (False ,False, True, False) = \"SLOW\"\nchooseAction (False ,False ,False, True) = \"WAIT\"\nchooseAction _ = error \"This should not happen\" -- if sequence is something else\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "is_accepted": true, "score": 5, "last_activity_date": 1425144410, "creation_date": 1425144410, "answer_id": 28784692, "question_id": 28784608, "link": "https://stackoverflow.com/questions/28784608/can-a-tuple-of-booleans-be-matched-in-guards-like-pattern-matching/28784692#28784692", "title": "Can a tuple of booleans be matched in guards, like pattern matching?", "body": "<p>The guards expressions must evaluate to be a <code>Bool</code> value, but in your case you have tuple of Bools. That is why it is throwing an error</p>\n\n<pre><code>Couldn't match expected type `Bool'\n            with actual type `(Bool, Bool, Bool, Bool)'\n</code></pre>\n\n<p>You are better off defining the function like this</p>\n\n<pre><code>chooseAction::(Bool, Bool, Bool, Bool) -&gt; String\nchooseAction (True, False, False, False) = \"JUMP\"\nchooseAction (False, True, False, False) = \"SPEED\"\nchooseAction (False, False, True, False) = \"SLOW\"\nchooseAction (False, False, False, True) = \"WAIT\"\n</code></pre>\n\n<p>Also, you are not covering all the cases. So, you can cover that like this</p>\n\n<pre><code>chooseAction tuple_of_bools = \"NONE\"\n</code></pre>\n\n<p>If none of the patterns match, then the last one will be executed to get <code>NONE</code>. Or, if you want it to be defined like the way it is, then just change the comparison, like this</p>\n\n<pre><code>chooseAction:: (Bool, Bool, Bool, Bool) -&gt; String\nchooseAction bools\n        | bools == (True ,False, False, False) = \"JUMP\"\n        | bools == (False ,True, False, False) = \"SPEED\"\n        | bools == (False ,False, True, False) = \"SLOW\"\n        | bools == (False ,False ,False, True) = \"WAIT\"\n        | otherwise = \"NONE\"\n</code></pre>\n"}], "owner": {"reputation": 34692, "user_id": 356440, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/d16fc2844c1d9f8f815f318734554266?s=128&d=identicon&r=PG", "display_name": "Stephane Rolland", "link": "https://stackoverflow.com/users/356440/stephane-rolland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "accepted_answer_id": 28784692, "answer_count": 2, "score": 2, "last_activity_date": 1425145291, "creation_date": 1425144049, "last_edit_date": 1425145291, "question_id": 28784608, "link": "https://stackoverflow.com/questions/28784608/can-a-tuple-of-booleans-be-matched-in-guards-like-pattern-matching", "title": "Can a tuple of booleans be matched in guards, like pattern matching?", "body": "<p>I try to make a function that returns different strings, depending on the values in a tuple of boolean</p>\n\n<pre><code>chooseAction :: (Bool , Bool , Bool , Bool) -&gt; String \nchooseAction (isJump ,isAcceleration ,isDeceleration ,isSpeedOk) \n        | (True ,False, False, False) = \"JUMP\"\n        | (False ,True, False, False) = \"SPEED\"\n        | (False ,False, True, False) = \"SLOW\"\n        | (False ,False ,False, True) = \"WAIT\"\n</code></pre>\n\n<p>However this doesn't compile:</p>\n\n<blockquote>\n<pre><code>Couldn't match expected type `Bool'\n            with actual type `(Bool, Bool, Bool, Bool)'\nIn the expression: (True, False, False, False)\nIn a stmt of a pattern guard for\n               an equation for `chooseAction':\n  (True, False, False, False)\nIn an equation for `chooseAction':\n    chooseAction (isJump, isAcceleration, isDeceleration, isSpeedOk)\n      | (True, False, False, False) = \"JUMP\"\n      | (False, True, False, False) = \"SPEED\"\n      | (False, False, True, False) = \"SLOW\"\n      | (False, False, False, True) = \"WAIT\"\n</code></pre>\n</blockquote>\n\n<p>What am I doing wrong when defining such a function ?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 7030, "user_id": 3032349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3cd8d19756aa9bc73d8045ae988ae728?s=128&d=identicon&r=PG&f=1", "display_name": "ThreeFx", "link": "https://stackoverflow.com/users/3032349/threefx"}, "edited": false, "score": 1, "creation_date": 1425131308, "post_id": 28782372, "comment_id": 45841420, "body": "You can improve your performance vastly by using a better algorithm, which has the side effect of also reducing your code because of simplicity."}, {"owner": {"reputation": 134362, "user_id": 83805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68c3dd15d6cd5d99a63113843d7e1c1b?s=128&d=identicon&r=PG", "display_name": "Don Stewart", "link": "https://stackoverflow.com/users/83805/don-stewart"}, "edited": false, "score": 2, "creation_date": 1425133577, "post_id": 28782372, "comment_id": 45842041, "body": "Have you profiled and/or looked at the GHC core that is generated?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425140103, "post_id": 28782372, "comment_id": 45843984, "body": "There are some magic tricks for division by known divisors that GHC&#39;s native code generator doesn&#39;t use. This may well affect printing speed. You could try <code>-fllvm</code>. Also, you can generate multiples of 2 and 3 without doing any divisions, and you probably should."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 134362, "user_id": 83805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68c3dd15d6cd5d99a63113843d7e1c1b?s=128&d=identicon&r=PG", "display_name": "Don Stewart", "link": "https://stackoverflow.com/users/83805/don-stewart"}, "edited": false, "score": 1, "creation_date": 1425143268, "post_id": 28782372, "comment_id": 45845112, "body": "@DonStewart, I wouldn&#39;t point a beginner toward Core as complicated as this would likely be, and I wouldn&#39;t do so without recommending some good options: <code>-ddump-simpl -dsuppress-all -dno-suppress-type-signatures</code> tends to give a pretty good signal-to-noise ratio."}, {"owner": {"reputation": 785, "user_id": 3087558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a43d21bfa85dc7dc360cafa7f69ba3b1?s=128&d=identicon&r=PG&f=1", "display_name": "fgv", "link": "https://stackoverflow.com/users/3087558/fgv"}, "edited": false, "score": 1, "creation_date": 1425148838, "post_id": 28782372, "comment_id": 45846968, "body": "Without profiling your code, you&#39;re probably spending quite a bit of time testing every number to see if it&#39;s a multiple. Why don&#39;t you rethink this problem in terms of a hylomorphism, with an anamorphism generating an infinite lazy list of multiples of 3 and 5, and a catamorphism summing up to the number that you need? For the anamorphism, just use simple addition. You can generate two lazy lists, one for multiples of 3 and one for multiples of 5 and then join them together eliminating the duplicates. The catamorphism is a simple sum."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 785, "user_id": 3087558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a43d21bfa85dc7dc360cafa7f69ba3b1?s=128&d=identicon&r=PG&f=1", "display_name": "fgv", "link": "https://stackoverflow.com/users/3087558/fgv"}, "edited": false, "score": 0, "creation_date": 1425157370, "post_id": 28782372, "comment_id": 45849675, "body": "@fgv, it&#39;s possible to do even better than that. See my answer for details."}, {"owner": {"reputation": 785, "user_id": 3087558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a43d21bfa85dc7dc360cafa7f69ba3b1?s=128&d=identicon&r=PG&f=1", "display_name": "fgv", "link": "https://stackoverflow.com/users/3087558/fgv"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425165088, "post_id": 28782372, "comment_id": 45851874, "body": "@dfeuer, absolutely. Good thinking about the wheel. At the core, it&#39;s still a hylomorphism, with an unfold followed by a fold. Now, given the fact that he needs the sums rather than the numbers, perhaps, with a bit of ingenuity, you could create a lazy list of sums (perhaps tuples with the number and the corresponding sum for that interval) and all you&#39;d need to do at runtime is retrieve the sum directly from this list. And this would memoize any possible value that you&#39;ll ever need to retrieve (assuming that the input list is large enough to justify it)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 785, "user_id": 3087558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a43d21bfa85dc7dc360cafa7f69ba3b1?s=128&d=identicon&r=PG&f=1", "display_name": "fgv", "link": "https://stackoverflow.com/users/3087558/fgv"}, "edited": false, "score": 0, "creation_date": 1425165776, "post_id": 28782372, "comment_id": 45852063, "body": "@fgv, you make a very good point there, which leads to a very different point. While the wheel is a great way to make the numbers, we don&#39;t need the numbers at all, do we? We should be able to transform the wheel technique into a closed form!"}], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 4, "last_activity_date": 1425139497, "last_edit_date": 1425139497, "creation_date": 1425135319, "answer_id": 28783055, "question_id": 28782372, "link": "https://stackoverflow.com/questions/28782372/improving-haskell-code-performance-bangpatterns-lazybytestring/28783055#28783055", "title": "Improving Haskell code performance (BangPatterns, LazyByteString)", "body": "<p>Your use of <code>print</code> in the line</p>\n\n<pre><code>mapM_ (print . f . readInt) ls\n</code></pre>\n\n<p>may be introducing some overhead, because <code>print</code> depends on the <code>Show</code> instance for <code>Int</code>, meaning a conversion to inefficient <code>String</code>s will take place.</p>\n\n<p>Add the following imports</p>\n\n<pre><code>import qualified Data.ByteString.Builder as BB\nimport qualified Data.Foldable as F\nimport Data.List.Split (chunksOf) -- from the \"split\" package\nimport System.IO -- for stdout\n</code></pre>\n\n<p>and try to change that line with something like</p>\n\n<pre><code>let resultList = map (f . readInt) ls\nF.mapM_ (BB.hPutBuilder stdout . F.foldMap BB.intDec) (chunksOf 1000 resultList)\n</code></pre>\n\n<p>that <a href=\"http://hackage.haskell.org/package/split-0.2.2/docs/Data-List-Split.html#v:chunksOf\" rel=\"nofollow\">takes chunks</a> of size 1000 from the list of <code>Int</code>s and uses the efficient <a href=\"http://hackage.haskell.org/package/bytestring-0.10.4.1/docs/Data-ByteString-Builder.html\" rel=\"nofollow\"><code>Builder</code></a> type and the specialized <a href=\"http://hackage.haskell.org/package/bytestring-0.10.4.1/docs/Data-ByteString-Builder.html#v:hPutBuilder\" rel=\"nofollow\"><code>hPutBuilder</code></a> function to write them to stdout.</p>\n\n<p>(I added the chunking because otherwise I feared constructing the <code>Builder</code> would force the whole input list into memory. And we don't want that, because the list is being read lazily.)</p>\n\n<p>I'm not sure if that's the main bottleneck, though.</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 4, "last_activity_date": 1425295137, "last_edit_date": 1592644375, "creation_date": 1425157097, "answer_id": 28786804, "question_id": 28782372, "link": "https://stackoverflow.com/questions/28782372/improving-haskell-code-performance-bangpatterns-lazybytestring/28786804#28786804", "title": "Improving Haskell code performance (BangPatterns, LazyByteString)", "body": "<p>danidiaz has already <a href=\"https://stackoverflow.com/a/28783055/1477667\">discussed</a> the input and output issue somewhat.</p>\n<p>One fast way to produce multiples of 3 or 5 is to use a &quot;wheel&quot; of the sort commonly used for prime sieves.</p>\n<pre><code>multiples3or5 = go 0 $ cycle [3,2,1,3,1,2,3]\n  where\n    go n (x : xs) = n : go (n+x) xs\n    go n [] = error &quot;impossible&quot;\n</code></pre>\n<p>In fact, since the circular list never ends, it's cleaner to use a different type. And since you're using <code>Int</code>, it might as well be specialized and unpacked for performance. Note that the <code>UNPACK</code> pragma in this context is not needed for GHC version 7.8 or above.</p>\n<pre><code>data IntStream = {-# UNPACK #-} !Int :&gt; IntStream\ninfixr 5 :&gt;\n\nwheel :: IntStream\nwheel = 3 :&gt; 2 :&gt; 1 :&gt; 3 :&gt; 1 :&gt; 2 :&gt; 3 :&gt; wheel\n\nmultiples3or5 = go 0 wheel\n  where\n    go !n (x :&gt; xs) = n : go (n+x) xs\n</code></pre>\n<p>As fgv <a href=\"https://stackoverflow.com/questions/28782372/improving-haskell-code-performance-bangpatterns-lazybytestring/28786804#comment45846968_28782372\">commented</a>, this is in the nature of an <a href=\"https://en.wikipedia.org/wiki/Anamorphism#Anamorphisms_in_functional_programming\" rel=\"nofollow noreferrer\">anamorphism</a>. You can see this by writing</p>\n<pre><code>multiples3or5 = unfoldr go (0, wheel) where\n  go (!n, (x :&gt; xs)) = Just (n, (n+x, xs))\n</code></pre>\n<p>but note that <code>unfoldr</code> did not become efficient enough to be much use for anything until base 4.8, which has not officially been released.</p>\n<p>When printing out the results, the system has to divide a lot of things by 10. I don't know if those routines are specially optimized, but I do know that GHC's native code generator does <em>not</em> currently optimize division by a known divisor unless that divisor is a power of 2. So you might find that you can improve performance by using <code>-fllvm</code>, and being careful to use a compatible version of LLVM.</p>\n<h3>Edit</h3>\n<p>See <a href=\"https://stackoverflow.com/a/28798037/1477667\">Chad Groft's answer</a> for a better way.</p>\n"}, {"comments": [{"owner": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "edited": false, "score": 1, "creation_date": 1425729670, "post_id": 28798037, "comment_id": 46087369, "body": "Yes I was totally ignorant of mathematics aspect of it. Thank you :D"}], "tags": [], "owner": {"reputation": 370, "user_id": 4557694, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24e1eefea58ed065620e1b494503c0da?s=128&d=identicon&r=PG", "display_name": "Chad Groft", "link": "https://stackoverflow.com/users/4557694/chad-groft"}, "is_accepted": false, "score": 3, "last_activity_date": 1425238073, "creation_date": 1425238073, "answer_id": 28798037, "question_id": 28782372, "link": "https://stackoverflow.com/questions/28782372/improving-haskell-code-performance-bangpatterns-lazybytestring/28798037#28798037", "title": "Improving Haskell code performance (BangPatterns, LazyByteString)", "body": "<p>If you're really concerned with efficiency, rethink the algorithm. Your main bottleneck is that you're manually summing a bunch of numbers between 1 and <em>N</em>, which will perform poorly on large <em>N</em> no matter what you do.</p>\n\n<p>Instead, think mathematically. The sum of all multiples of 3 or 5 up to <em>N</em> is <em>almost</em> the sum of all multiples of 3 up to <em>N</em> (call this <em>S</em>_3), plus the sum of all multiples of 5 up to <em>N</em> (call this <em>S</em>_5). I say \"almost\" because some numbers get double-counted; call their sum <em>T</em>. Now the sum you want is exactly <em>S</em>_3 + <em>S</em>_5 \u2013 <em>T</em>, and each term has a nice closed formula (what is it?). Calculating these three numbers is much faster than what you're doing.</p>\n"}, {"comments": [{"owner": {"reputation": 370, "user_id": 4557694, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24e1eefea58ed065620e1b494503c0da?s=128&d=identicon&r=PG", "display_name": "Chad Groft", "link": "https://stackoverflow.com/users/4557694/chad-groft"}, "edited": false, "score": 0, "creation_date": 1425315279, "post_id": 28806159, "comment_id": 45902224, "body": "This is a Project Euler problem. &quot;Think about it&quot; is the entire point."}, {"owner": {"reputation": 14780, "user_id": 210905, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9e2d3ebb7e06cd11a5ca3fdaf12cce9?s=128&d=identicon&r=PG", "display_name": "Odomontois", "link": "https://stackoverflow.com/users/210905/odomontois"}, "reply_to_user": {"reputation": 370, "user_id": 4557694, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24e1eefea58ed065620e1b494503c0da?s=128&d=identicon&r=PG", "display_name": "Chad Groft", "link": "https://stackoverflow.com/users/4557694/chad-groft"}, "edited": false, "score": 0, "creation_date": 1425374366, "post_id": 28806159, "comment_id": 45926281, "body": "@ChadGroft This is so very beginning of project euler so there is plenty of solutions out there. We are not hired as teachers to supervise requester&#39;s mind. This is more efficient to understand working code than to gain only advises to think by himself."}], "tags": [], "owner": {"reputation": 14780, "user_id": 210905, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9e2d3ebb7e06cd11a5ca3fdaf12cce9?s=128&d=identicon&r=PG", "display_name": "Odomontois", "link": "https://stackoverflow.com/users/210905/odomontois"}, "is_accepted": false, "score": 0, "last_activity_date": 1425287904, "creation_date": 1425287904, "answer_id": 28806159, "question_id": 28782372, "link": "https://stackoverflow.com/questions/28782372/improving-haskell-code-performance-bangpatterns-lazybytestring/28806159#28806159", "title": "Improving Haskell code performance (BangPatterns, LazyByteString)", "body": "<p>Here you the formula without those \"think about\" mentor answers</p>\n\n<pre><code>sumMultiplesOf::Integral n=&gt;n-&gt;n-&gt;n\nsumMultiplesOf k n = d * (1 + d) `div` 2 * k where d = (n - 1) `div` k\n\nsumMultiplesOf3or5::Integral n=&gt;n-&gt;n\nsumMultiplesOf3or5 n = sumMultiplesOf 3 n + sumMultiplesOf 5 n - sumMultiplesOf 15 n\n</code></pre>\n"}], "owner": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 1, "accepted_answer_id": 28786804, "answer_count": 4, "score": 0, "last_activity_date": 1425295137, "creation_date": 1425130928, "question_id": 28782372, "link": "https://stackoverflow.com/questions/28782372/improving-haskell-code-performance-bangpatterns-lazybytestring", "title": "Improving Haskell code performance (BangPatterns, LazyByteString)", "body": "<p>I've used BangPatterns, Lazy ByteString. Don't know what else to do to improve performance of this code. Any ideas and suggestions? It's clearly not the fastest version as it exceeds time limit.</p>\n\n<pre><code>-- Find the sum of all the multiples of 3 or 5 below N\n-- Input Format \n-- First line contains T that denotes the number of test cases. This is followed by T lines, each containing an integer, N.\n\n{-# LANGUAGE BangPatterns #-}\n{-# OPTIONS_GHC -O2 -optc-O2 #-}\nimport qualified Data.ByteString.Lazy as L\nimport Control.Monad (mapM_)\n\nreadInt :: L.ByteString -&gt; Int\nreadInt !s = L.foldl' (\\x c -&gt; 10 * x + fromIntegral c - 48) 0 s\n\nmain :: IO ()\nmain = do \n-- don't need the number of inputs, since it is read lazily.\n-- split input by lines\n  (_:ls) &lt;- L.split 10 `fmap` L.getContents\n-- length ls &lt;= 10^5\n  mapM_ (print . f . readInt) ls\n\n-- n &lt;= 10^9\nf :: Int -&gt; Int\nf n = go 0 0\n  where\n    go !i !a | i == n            = a\n    go !i !a | i `mod` 3 == 0\n               || i `mod` 5 == 0 = go (i+1) (a+i)\n    go !i !a                     = go (i+1) a\n</code></pre>\n"}, {"tags": ["haskell", "memory-management"], "comments": [{"owner": {"reputation": 1601, "user_id": 1205702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66c2fd2313df8f6f65266cf7a4f1979b?s=128&d=identicon&r=PG", "display_name": "bitemyapp", "link": "https://stackoverflow.com/users/1205702/bitemyapp"}, "edited": false, "score": 0, "creation_date": 1425120798, "post_id": 28780852, "comment_id": 45838661, "body": "Start by not using List, convert that List into a Vector. Also, test memory usage with binaries you know you have optimization turned on for."}, {"owner": {"reputation": 28350, "user_id": 376873, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/d2e4852dbd977d1b1f702d3ba2dbc0cb?s=128&d=identicon&r=PG", "display_name": "Gabi Purcaru", "link": "https://stackoverflow.com/users/376873/gabi-purcaru"}, "reply_to_user": {"reputation": 1601, "user_id": 1205702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66c2fd2313df8f6f65266cf7a4f1979b?s=128&d=identicon&r=PG", "display_name": "bitemyapp", "link": "https://stackoverflow.com/users/1205702/bitemyapp"}, "edited": false, "score": 0, "creation_date": 1425120842, "post_id": 28780852, "comment_id": 45838667, "body": "@bitemyapp as I&#39;ve said above, I&#39;ve tried with <code>-O2</code> and while it doesn&#39;t fill up the memory, it&#39;s still super slow."}, {"owner": {"reputation": 1601, "user_id": 1205702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66c2fd2313df8f6f65266cf7a4f1979b?s=128&d=identicon&r=PG", "display_name": "bitemyapp", "link": "https://stackoverflow.com/users/1205702/bitemyapp"}, "edited": false, "score": 0, "creation_date": 1425121168, "post_id": 28780852, "comment_id": 45838731, "body": "Convert the List into a Vector."}, {"owner": {"reputation": 134362, "user_id": 83805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68c3dd15d6cd5d99a63113843d7e1c1b?s=128&d=identicon&r=PG", "display_name": "Don Stewart", "link": "https://stackoverflow.com/users/83805/don-stewart"}, "edited": false, "score": 2, "creation_date": 1425121492, "post_id": 28780852, "comment_id": 45838807, "body": "List should be Vector. Point should be { x :: !Int,, y :: !Int, ... }. Read performance techniques in RWH ch25 for the basic techniques you should start with for appropriate data type representations."}, {"owner": {"reputation": 704, "user_id": 939572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2aadfb25285dc4e9a3caf81e2277d77b?s=128&d=identicon&r=PG", "display_name": "GarethR", "link": "https://stackoverflow.com/users/939572/garethr"}, "edited": false, "score": 2, "creation_date": 1425122882, "post_id": 28780852, "comment_id": 45839153, "body": "Use strict Text and either pipes or conduit for streaming. If you&#39;ve not used either before then try both and use whichever you prefer. My guess is you might have an easier time getting started with conduit but that&#39;s only a guess."}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1425146110, "creation_date": 1425146110, "answer_id": 28784943, "question_id": 28780852, "link": "https://stackoverflow.com/questions/28780852/haskell-speed-memory-usage/28784943#28784943", "title": "Haskell speed / memory usage", "body": "<p>The reason this uses all your memory when compiled without optimization is most likely because <code>sum</code> is defined using <code>foldl</code>. Without the strictness analysis that comes with optimization, that will blow up badly. You can try using this function instead:</p>\n\n<pre><code>sum' :: Num n =&gt; [n] -&gt; n\nsum' = foldl' (+) 0\n</code></pre>\n\n<p>The reason this is slow when compiled with optimization seems likely related to the way you parse the input. A cons will be allocated for each character when reading in the input, and again when breaking the input into lines, and probably yet again when splitting on commas. Using a proper parsing library (any of them) will almost certainly help; using one of the streaming ones like <code>pipes</code> or <code>conduit</code> may or may not be best (I'm not sure).</p>\n\n<p>Another issue, not related to performance: <code>fromJust</code> is rather poor form in general, and is a really bad idea when dealing with user input. You should instead <code>mapM</code> over the list in the <code>Maybe</code> monad, which will produce a <code>Maybe [Point]</code> for you.</p>\n"}], "owner": {"reputation": 28350, "user_id": 376873, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/d2e4852dbd977d1b1f702d3ba2dbc0cb?s=128&d=identicon&r=PG", "display_name": "Gabi Purcaru", "link": "https://stackoverflow.com/users/376873/gabi-purcaru"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1425146110, "creation_date": 1425120573, "question_id": 28780852, "link": "https://stackoverflow.com/questions/28780852/haskell-speed-memory-usage", "title": "Haskell speed / memory usage", "body": "<p>I'm trying to process some Point Cloud data with Haskell, and it seems to use a LOT of memory. The code I'm using is below, it basically parses the data into a format I can work with. The dataset has 440MB with 10M rows. When I run it with <code>runhaskell</code>, it uses up all the ram in a short time (~3-4gb) and then crashes. If I compile it with <code>-O2</code> and run it, it goes to 100% cpu and takes a long time to finish (~3 minutes). I should mention that I'm using an i7 cpu with 4GB ram and an SSD, so there should be plenty of resources. How can I improve the performance of this?</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport Prelude hiding (lines, readFile)\nimport Data.Text.Lazy (Text, splitOn, unpack, lines)\nimport Data.Text.Lazy.IO (readFile)\nimport Data.Maybe (fromJust)\nimport Text.Read (readMaybe)\n\nfilename :: FilePath\nfilename = \"sample.txt\"\n\nreadTextMaybe = readMaybe . unpack\n\ndata Classification = Classification\n    { id :: Int, description :: Text\n    } deriving (Show)\n\ndata Point = Point\n    { x :: Int, y :: Int, z :: Int, classification :: Classification\n    } deriving (Show)\n\ntype PointCloud = [Point]\n\nmaybeReadPoint :: Text -&gt; Maybe Point\nmaybeReadPoint text = parse $ splitOn \",\" text\n    where toMaybePoint :: Maybe Int -&gt; Maybe Int -&gt; Maybe Int -&gt; Maybe Int -&gt; Text -&gt; Maybe Point\n          toMaybePoint (Just x) (Just y) (Just z) (Just cid) cdesc = Just (Point x y z (Classification cid cdesc))\n          toMaybePoint _ _ _ _ _                                   = Nothing\n          parse :: [Text] -&gt; Maybe Point\n          parse [x, y, z, cid, cdesc] = toMaybePoint (readTextMaybe x) (readTextMaybe y) (readTextMaybe z) (readTextMaybe cid) cdesc\n          parse _                     = Nothing\n\nreadPointCloud :: Text -&gt; PointCloud\nreadPointCloud = map (fromJust . maybeReadPoint) . lines\n\nmain = (readFile filename) &gt;&gt;= (putStrLn . show . sum . map x . readPointCloud)\n</code></pre>\n"}, {"tags": ["windows", "powershell", "haskell", "cmd"], "comments": [{"owner": {"reputation": 2152, "user_id": 1103600, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7830fb399137c319ff68dca3e3b6f7e2?s=128&d=identicon&r=PG", "display_name": "Arnon", "link": "https://stackoverflow.com/users/1103600/arnon"}, "edited": false, "score": 0, "creation_date": 1425120259, "post_id": 28779960, "comment_id": 45838523, "body": "Have you tried <code>hSetEncoding</code> from in <code>System.IO</code>?"}, {"owner": {"reputation": 2389, "user_id": 2345370, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/7f2ad519f77a20c173a0b5174a900c2d?s=128&d=identicon&r=PG", "display_name": "Not an ID", "link": "https://stackoverflow.com/users/2345370/not-an-id"}, "reply_to_user": {"reputation": 2152, "user_id": 1103600, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7830fb399137c319ff68dca3e3b6f7e2?s=128&d=identicon&r=PG", "display_name": "Arnon", "link": "https://stackoverflow.com/users/1103600/arnon"}, "edited": false, "score": 0, "creation_date": 1425120480, "post_id": 28779960, "comment_id": 45838577, "body": "Don&#39;t work. After <code>chcp 65001</code>, <code>hGetEncoding stdin</code> already gives me <code>Just UTF-8</code>, I just did a <code>hSetEncoding stdin utf8</code> anyway, no luck."}, {"owner": {"reputation": 2152, "user_id": 1103600, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7830fb399137c319ff68dca3e3b6f7e2?s=128&d=identicon&r=PG", "display_name": "Arnon", "link": "https://stackoverflow.com/users/1103600/arnon"}, "edited": false, "score": 0, "creation_date": 1425121206, "post_id": 28779960, "comment_id": 45838748, "body": "I&#39;ve had this problem on CentOS before and I had it solved with hSetEncoding. It doesn&#39;t appear to be working in my Windows 8 either.... It&#39;s really bizzare. Perhaps patching GHC is the correct way to deal with it for now."}, {"owner": {"reputation": 2389, "user_id": 2345370, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/7f2ad519f77a20c173a0b5174a900c2d?s=128&d=identicon&r=PG", "display_name": "Not an ID", "link": "https://stackoverflow.com/users/2345370/not-an-id"}, "reply_to_user": {"reputation": 2152, "user_id": 1103600, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7830fb399137c319ff68dca3e3b6f7e2?s=128&d=identicon&r=PG", "display_name": "Arnon", "link": "https://stackoverflow.com/users/1103600/arnon"}, "edited": false, "score": 0, "creation_date": 1425121369, "post_id": 28779960, "comment_id": 45838779, "body": "Thanks anyway. This seems to be an obvious bug, I just don&#39;t believe that it hasn&#39;t been fixed already."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1425177399, "post_id": 28779960, "comment_id": 45854369, "body": "This might be a duplicate of <a href=\"http://stackoverflow.com/questions/10779149/unicode-console-i-o-in-haskell-on-windows\">Unicode console I/O in Haskell on Windows</a>."}], "answers": [{"tags": [], "owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "is_accepted": false, "score": 1, "last_activity_date": 1497980386, "creation_date": 1497980386, "answer_id": 44659718, "question_id": 28779960, "link": "https://stackoverflow.com/questions/28779960/ghci-on-windows-how-to-read-unicode-input-from-console/44659718#44659718", "title": "GHCi on Windows: how to read Unicode input from console?", "body": "<p>PowerShell supports UTF natively.  Assuming I understand your example (<code>main = getLine &gt;&gt;= putStrLn</code>) properly:</p>\n\n<pre><code>$var = Read-Host\nWrite \"$var\"\n</code></pre>\n\n<p>Or simply:</p>\n\n<pre><code>Read-Host\n</code></pre>\n"}], "owner": {"reputation": 2389, "user_id": 2345370, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/7f2ad519f77a20c173a0b5174a900c2d?s=128&d=identicon&r=PG", "display_name": "Not an ID", "link": "https://stackoverflow.com/users/2345370/not-an-id"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 577, "favorite_count": 0, "answer_count": 1, "score": 9, "last_activity_date": 1497980386, "creation_date": 1425114171, "last_edit_date": 1425118269, "question_id": 28779960, "link": "https://stackoverflow.com/questions/28779960/ghci-on-windows-how-to-read-unicode-input-from-console", "title": "GHCi on Windows: how to read Unicode input from console?", "body": "<p>How to make the following code work with Unicode (CJK) in Command Prompt/LameShell?</p>\n\n<pre><code>main = getLine &gt;&gt;= putStrLn\n</code></pre>\n\n<p>(Windows 8.1, Haskell Platform 2014)</p>\n\n<p>No, <code>chcp 65001</code> doesn't work, nor <code>chcp 10000</code>.</p>\n\n<p>No, I don't want to change System Local (Control Panel/Clock, Language, and Region/Language/Change date, time, or number formats/Administrative) from English(United States) to others.</p>\n\n<p>Yes, I have set font to Lucida Console.</p>\n\n<p>I've tried ConEmu/Cmder/Console2, they all said \"Exception: : hGetLine: end of file\". I also tried Emacs, (I use Vim), it didn't crash, but I always get spaces, no matter what I input.</p>\n\n<p>Patch GHC and recompile it is acceptable, if there is no other way.</p>\n\n<p>Any idea?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425130973, "post_id": 28779431, "comment_id": 45841327, "body": "Basically, the example is dividing the interval from 1 to 10 into units with a width of 3-1=2. Hence we get 4.5 units, which we have to round. If we round those as 4 units, we get 5 points as extremes. Otherwise, we round them as 5 units, and we get 6 points. Rounding exact half-integers is very unstable, since any error may affect the outcome. For this reason, two different numerical algorithms which round half integers and would aim to compute the same result can easily yield different outputs."}], "answers": [{"tags": [], "owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "is_accepted": false, "score": 5, "last_activity_date": 1425115376, "creation_date": 1425115376, "answer_id": 28780143, "question_id": 28779431, "link": "https://stackoverflow.com/questions/28779431/why-does-function-enumfromthento-behaves-not-same-as-it-is-defined-in-ghc-enum/28780143#28780143", "title": "why does function enumFromThenTo behaves not same as it is defined in GHC.Enum?", "body": "<p>The definition you use is just the default definition from the class Individual instances are free to use different definitions. Indeed, the actual instance <code>Enum Double</code> is defined in <code>GHC.Float</code> and makes use of a different definition. </p>\n\n<p>Copying the relevant comment from the source file:</p>\n\n<blockquote>\n  <p>The @Enum@ instances for Floats and Doubles are slightly unusual. The @toEnum@ function truncates numbers to Int. The definitions of @enumFrom@ and @enumFromThen@ allow floats to be used in arithmetic series: [0,0.1 .. 1.0]. However, roundoff errors make these somewhat dubious. This example may have either 10 or 11 elements, depending on how 0.1 is represented. NOTE: The instances for Float and Double do not make use of the default methods for @enumFromTo@ and @enumFromThenTo@, as these rely on there being a `non-lossy' conversion to and from Ints. Instead we make use of the 1.2 default methods (back in the days when Enum had Ord as a superclass) for these (@numericEnumFromTo@ and @numericEnumFromThenTo@ below.)\u00a0</p>\n</blockquote>\n"}], "owner": {"reputation": 2875, "user_id": 2299477, "user_type": "registered", "accept_rate": 31, "profile_image": "https://i.stack.imgur.com/xppB7.jpg?s=128&g=1", "display_name": "Alaya", "link": "https://stackoverflow.com/users/2299477/alaya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 393, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1425115376, "creation_date": 1425109652, "last_edit_date": 1592644375, "question_id": 28779431, "link": "https://stackoverflow.com/questions/28779431/why-does-function-enumfromthento-behaves-not-same-as-it-is-defined-in-ghc-enum", "title": "why does function enumFromThenTo behaves not same as it is defined in GHC.Enum?", "body": "<p>Learnt from <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/src/GHC-Enum.html#enumFromThenTo\" rel=\"nofollow noreferrer\">here</a>, the definition of function <code>enumFromThenTo</code> is</p>\n<pre><code>enumFromThenTo      :: a -&gt; a -&gt; a -&gt; [a]\nenumFromThenTo x1 x2 y = map toEnum [fromEnum x1, fromEnum x2 .. fromEnum y]\n</code></pre>\n<p>However, when I tested the function with code below:</p>\n<pre><code>import GHC.Enum\nmyEnumFromThenTo :: Enum a =&gt; a-&gt;a-&gt;a-&gt;[a]\nmyEnumFromThenTo x1 x2 y = map toEnum [fromEnum x1, fromEnum x2 .. fromEnum y]\n\nxs1 :: [Float]\nxs1 = myEnumFromThenTo 1 3 10\n\nxs2 :: [Float]\nxs2 = enumFromThenTo 1 3 10\n\n -- -- | Used in Haskell's translation of @[n,n'..m]@.\n-- enumFromThenTo      :: a -&gt; a -&gt; a -&gt; [a]\n</code></pre>\n<p>The value of <code>xs1</code> is <code>[1.0,3.0,5.0,7.0,9.0]</code> while the value of <code>xs2</code> is <code>[1.0,3.0,5.0,7.0,9.0,11.0]</code></p>\n<p>Why would it be so?</p>\n"}, {"tags": ["haskell", "polymorphism"], "comments": [{"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 7, "creation_date": 1425114323, "post_id": 28779294, "comment_id": 45837056, "body": "What do you <i>really</i> want to achieve?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1425211787, "post_id": 28779294, "comment_id": 45861350, "body": "This inherently breaks parametricity. Because of this, the type should reflect this in a clear way. Using <code>Data.Typeable</code> would do that. I concur on the fact that <code>Data.Typeable</code> is bad style, but this is because it allows to break parametricity, which is exactly what you require. Finding another way to do that without <code>Data.Typeable</code> would not make things better."}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1425212029, "post_id": 28780814, "comment_id": 45861405, "body": "I completely agree on the last strong suggestion. <code>OvelappingInstances</code> is rather tricky, if not evil, and it&#39;s better to avoid it as much as possible."}], "tags": [], "owner": {"reputation": 7030, "user_id": 3032349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3cd8d19756aa9bc73d8045ae988ae728?s=128&d=identicon&r=PG&f=1", "display_name": "ThreeFx", "link": "https://stackoverflow.com/users/3032349/threefx"}, "is_accepted": true, "score": 5, "last_activity_date": 1425121636, "last_edit_date": 1425121636, "creation_date": 1425120294, "answer_id": 28780814, "question_id": 28779294, "link": "https://stackoverflow.com/questions/28779294/haskell-function-that-executes-differently-depending-on-type-of-variable/28780814#28780814", "title": "Haskell function that executes differently depending on type of variable", "body": "<p>You shouldn't need to do this in my opinion. This seems like a serious XY problem to me, since Haskell's type system should generally do this stuff for you.</p>\n\n<hr>\n\n<p>But nonetheless, it is possible. The easiest way to achieve this is indeed to use typeclasses: </p>\n\n<pre><code>data Foo = A | B | C | D | ... | Z deriving Eq\n\nclass IsFoo a where\n  isFoo :: a -&gt; Bool\n\ninstance IsFoo Foo where\n  isFoo = const True\n\ninstance IsFoo x where\n  isFoo = const False\n</code></pre>\n\n<p>Using the <a href=\"https://ghc.haskell.org/trac/haskell-prime/wiki/FlexibleInstances\"><code>FlexibleInstances</code></a> extension, you save yourself some work by simply returning <code>True</code> when given an argument of type <code>Foo</code>, which is specified in the instance for type <code>Foo</code> and <code>False</code> when calling <code>isFoo</code> with a variable of any other type. Note that you also have to use the extension <a href=\"https://ghc.haskell.org/trac/haskell-prime/wiki/OverlappingInstances\"><code>OverlappingInstances</code></a>, otherwise a runtime error will occur calling <code>isFoo</code> with an argument of type <code>Foo</code> because the program will not know which instance to use. To enable these extensions, simply include </p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances, OverlappingInstances #-}\n</code></pre>\n\n<p>at the top of your source file.</p>\n\n<p>Still: I strongly suggest trying a different approach to your problem because in general you do not have to deal with such \"low-level\" typing stuff.</p>\n"}, {"tags": [], "owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "is_accepted": false, "score": 5, "last_activity_date": 1425240543, "last_edit_date": 1425240543, "creation_date": 1425149488, "answer_id": 28785497, "question_id": 28779294, "link": "https://stackoverflow.com/questions/28779294/haskell-function-that-executes-differently-depending-on-type-of-variable/28785497#28785497", "title": "Haskell function that executes differently depending on type of variable", "body": "<p>If this is really what you want to do, I'd suggest you to use <code>Data.Typeable</code>, because it's suited exactly for this purpose:</p>\n\n<pre><code>import Data.Maybe (isJust)\nimport Data.Typeable\n\nisFoo :: (Typeable a) =&gt; a -&gt; Bool\nisFoo x = isJust (cast x :: Maybe Foo)\n</code></pre>\n\n<p>The question of bad style isn't about using a particular library like <code>Data.Typeable</code>. It's about not using Haskell's type system properly, in particular treating it like a dynamic OO language. If you need to determine if some generic type is <code>Foo</code> or is not, then you somewhere forgot the type information. But in Haskell, you always have this at compile time, so there shouldn't be the need of determining it dynamically.</p>\n\n<p>Perhaps explain what you want to achieve, it's likely that there is a more idiomatic way how to do that.</p>\n"}], "owner": {"reputation": 1006, "user_id": 2213364, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/02c84cbe3a450650a5da047e214122bd?s=128&d=identicon&r=PG", "display_name": "Michael Wu", "link": "https://stackoverflow.com/users/2213364/michael-wu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 28780814, "answer_count": 2, "score": 1, "last_activity_date": 1425240543, "creation_date": 1425108545, "question_id": 28779294, "link": "https://stackoverflow.com/questions/28779294/haskell-function-that-executes-differently-depending-on-type-of-variable", "title": "Haskell function that executes differently depending on type of variable", "body": "<p>To be more specific, suppose I have some data constructor</p>\n\n<pre><code>data Foo = ... deriving Eq\n</code></pre>\n\n<p>And the following silly function</p>\n\n<pre><code>f :: Eq a =&gt; a -&gt; Bool\n</code></pre>\n\n<p>In cases where the variable <em>a</em> is actually of type <em>Foo</em>, I want <em>f</em> to output <em>True</em>. In all other cases (i.e. for all other instances of Eq), I want <em>f</em> to output <em>False</em>. </p>\n\n<p>At first I thought maybe I could define a new type class for this purpose</p>\n\n<pre><code>class IsFoo a where\n    isFoo :: a -&gt; Bool\n</code></pre>\n\n<p>While it's easy to write an instance of <em>IsFoo</em> for <em>Foo</em>, obviously I don't want to do this for all types that are instances of Eq. </p>\n\n<p>When answering, you can assume that Foo has A LOT of constructors and that I don't want to pattern match on all of them. I also don't want to use <em>Data.Typeable</em> (I've read that it's bad style). Is there a way to accomplish what I want in an elegant and natural (w.r.t. Haskell) way?</p>\n"}, {"tags": ["haskell", "error-handling", "typeclass", "maybe"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1425106900, "post_id": 28778986, "comment_id": 45835549, "body": "Is <code>Either a</code> considered nullable?  A value of <code>Left &quot;An error&quot;</code> isn&#39;t really a null value conceptually, there&#39;s only a few types that this might be truly applied to if you&#39;re going for a conceptual notion of nullable.  You could look at the <code>Control.Monad.Trans.Error.Error</code> class which defines <code>noMsg :: Error a =&gt; a</code> and <code>strMsg :: Error a =&gt; String -&gt; a</code>, it&#39;s pretty similar to what you want to do but adds messages instead of just a boolean flag for nullable."}, {"owner": {"reputation": 257, "user_id": 2913145, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5a0a3d8b7764e3fdac9550564755cdde?s=128&d=identicon&r=PG&f=1", "display_name": "gallabytes", "link": "https://stackoverflow.com/users/2913145/gallabytes"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1425107339, "post_id": 28778986, "comment_id": 45835642, "body": "<code>Either a</code> is nullable if for any type a that has a sensible default value.  The point of <code>Nullable</code> in my mind was more to generalize <code>Maybe</code> so that I could write code that normally would be within <code>Maybe</code> while abstracting away from that particular container.  Also, <code>Control.Monad...Error</code> doesn&#39;t really work, since I can&#39;t test to see if it&#39;s an error and handle it somehow.  I want to emulate something like <code>case x of (Just xs -&gt; ...) (Nothing -&gt; ...)</code>"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1425119393, "post_id": 28778986, "comment_id": 45838328, "body": "<a href=\"https://hackage.haskell.org/package/mtl-1.1.0.2/docs/Control-Monad-Error.html\" rel=\"nofollow noreferrer\"><code>Control.Monad.Error</code></a> exports some structures to help handle failures. You can use <code>catchError</code> to wrap a block of statements which may call <code>throwError</code> and handle the error. I think this probably subsumes your <code>Nullable</code> use-case, though I don&#39;t have time to work out a full example."}], "answers": [{"comments": [{"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1425131702, "post_id": 28779533, "comment_id": 45841520, "body": "Or use <code>foldMap</code> with <code>All</code> to define <code>null =  getAll . foldMap (const $ All False)</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 1, "creation_date": 1425174996, "post_id": 28779533, "comment_id": 45853967, "body": "@PetrPudl&#225;k, why not just <code>null = Data.Foldable.all (const False)</code>? Or wait for base 4.8 :-)"}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1425201038, "post_id": 28779533, "comment_id": 45858657, "body": "@dfeuer True, even better :). Yes, in base-4.8 there will be <a href=\"https://hackage.haskell.org/package/base-4.8.0.0/candidate/docs/Data-Foldable.html#v:null\" rel=\"nofollow noreferrer\"><code>null :: (Foldable t) =&gt; t a -&gt; Bool</code></a>."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 5, "last_activity_date": 1425120431, "last_edit_date": 1425120431, "creation_date": 1425110639, "answer_id": 28779533, "question_id": 28778986, "link": "https://stackoverflow.com/questions/28778986/generalizing-isnothing/28779533#28779533", "title": "Generalizing isNothing", "body": "<p>Perhaps you could use <code>Foldable</code> in this manner. <code>Maybe</code>, <code>[]</code>, <code>Either</code>, <code>ErrorT</code>, <code>ExceptT</code> are all <code>Foldable</code>. You can just pattern-match on the result of <code>toList</code>.</p>\n\n<p>And in cases when you want to do something with the results of a successful execution and nothing in case of failure, you can use <code>forM_</code> directly.</p>\n\n<p>Alternatively, you could use the <a href=\"http://hackage.haskell.org/package/monoid-subclasses-0.4.0.4/docs/Data-Monoid-Null.html#t:MonoidNull\"><code>MonoidNull</code></a> typeclass from <a href=\"http://hackage.haskell.org/package/monoid-subclasses-0.4.0.4\"><code>monoid-subclasses</code></a>, that provides the <code>null</code> predicate.</p>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 1, "last_activity_date": 1614131627, "creation_date": 1614131627, "answer_id": 66343576, "question_id": 28778986, "link": "https://stackoverflow.com/questions/28778986/generalizing-isnothing/66343576#66343576", "title": "Generalizing isNothing", "body": "<p>As had been foretold in the comments to <a href=\"https://stackoverflow.com/posts/28779533/revisions\">danidiaz's answer</a>, <em>base-4.8</em> generalised the type of <code>null</code>, making it an easy at reach emptiness test for <code>Foldable</code> containers:</p>\n<pre><code>GHCi&gt; :t null\nnull :: Foldable t =&gt; t a -&gt; Bool\nGHCi&gt; null Nothing\nTrue\nGHCi&gt; null (Left &quot;An error&quot;)\nTrue\nGHCi&gt; null []\nTrue\nGHCi&gt; import qualified Data.Map as Map\nGHCi&gt; null Data.Map.empty\nTrue\n</code></pre>\n"}], "owner": {"reputation": 257, "user_id": 2913145, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5a0a3d8b7764e3fdac9550564755cdde?s=128&d=identicon&r=PG&f=1", "display_name": "gallabytes", "link": "https://stackoverflow.com/users/2913145/gallabytes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1614131627, "creation_date": 1425105736, "last_edit_date": 1425147018, "question_id": 28778986, "link": "https://stackoverflow.com/questions/28778986/generalizing-isnothing", "title": "Generalizing isNothing", "body": "<p>So let's say we want to deal with computations that can fail using a container similar to Maybe.  If I were to specify a typeclass for what I want to do, it'd look something like this:</p>\n\n<pre><code>class Alternative f =&gt; Nullable f where\n  isEmpty :: f a -&gt; Bool\n</code></pre>\n\n<p>Such that <code>isEmpty x == True</code> if and only if <code>x = empty</code></p>\n\n<p>Is there some existing typeclass that I should use for this functionality or should I just use the class above?</p>\n\n<p>EDIT: Some more context</p>\n\n<p>I'm trying to implement matching for logic programming, and I want to be able to have a \"not pattern\" i.e. \"succeed if and only if this program fails, then do ___\".</p>\n"}, {"tags": ["haskell", "f#", "functional-programming", "ml", "mutual-recursion"], "comments": [{"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1425103240, "post_id": 28778533, "comment_id": 45834885, "body": "The syntax has no influence on what code is generated, unless the compiler is very naive."}, {"owner": {"reputation": 24860, "user_id": 124259, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1d025118a63330a62aeaff66a420e8b1?s=128&d=identicon&r=PG&f=1", "display_name": "John Palmer", "link": "https://stackoverflow.com/users/124259/john-palmer"}, "edited": false, "score": 0, "creation_date": 1425107419, "post_id": 28778533, "comment_id": 45835676, "body": "F# does optimize mutually recursive functions in some cases"}], "answers": [{"comments": [{"owner": {"reputation": 1568, "user_id": 753859, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/NUq3B.png?s=128&g=1", "display_name": "ruben2020", "link": "https://stackoverflow.com/users/753859/ruben2020"}, "edited": false, "score": 0, "creation_date": 1425107184, "post_id": 28778781, "comment_id": 45835606, "body": "I would like to know how the compiler optimizes mutually recursive functions, to prevent stack overflow?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 1568, "user_id": 753859, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/NUq3B.png?s=128&g=1", "display_name": "ruben2020", "link": "https://stackoverflow.com/users/753859/ruben2020"}, "edited": false, "score": 1, "creation_date": 1425107803, "post_id": 28778781, "comment_id": 45835755, "body": "@ruben2020, in a call-by-value language (e.g., ML or Lisp), the most generally effective technique is tail-call optimization. In particular, the calling conventions are <i>completely different</i> from the ones used in C. You can read about this in Guy L. Steele&#39;s classic paper, <a href=\"http://repository.readscheme.org/ftp/papers/ai-lab-pubs/AIM-443.pdf\" rel=\"nofollow noreferrer\">Debunking the &#39;Expensive Procedure Call&#39; Myth, or, Procedure Call Implementations Considered Harmful, or, Lambda: The Ultimate GOTO</a>. Things are a little different in a call-by-need language like Haskell."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 1, "last_activity_date": 1425103904, "creation_date": 1425103904, "answer_id": 28778781, "question_id": 28778533, "link": "https://stackoverflow.com/questions/28778533/mutually-recursive-functions-in-functional-programming-languages/28778781#28778781", "title": "Mutually recursive functions in functional programming languages", "body": "<p>Since F# is in the ML family, I imagine this is a fairly simple matter: plain <code>let</code> just isn't recursive at all, and mutually recursive functions need to be bound together by a <code>let rec</code>. This does simplify the compiler's analysis to a certain extent. In Haskell, the compiler ends up breaking up the code into similar blocks itself, both to support type inference and to perform optimizations. The ML way is arguably more predictable. I don't think either approach is inherently better.</p>\n\n<p>You mention lazy evaluation, and I suspect that does help swing the balance to some extent in each language. In ML, a recursively defined value pretty much has to be a function, whereas in Haskell, any type of value can be defined recursively.</p>\n"}, {"tags": [], "owner": {"reputation": 31189, "user_id": 1097780, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a8f01ad795c29c3d05ad26ee47ea6069?s=128&d=identicon&r=PG", "display_name": "Andreas Rossberg", "link": "https://stackoverflow.com/users/1097780/andreas-rossberg"}, "is_accepted": true, "score": 5, "last_activity_date": 1425112811, "creation_date": 1425112811, "answer_id": 28779771, "question_id": 28778533, "link": "https://stackoverflow.com/questions/28778533/mutually-recursive-functions-in-functional-programming-languages/28779771#28779771", "title": "Mutually recursive functions in functional programming languages", "body": "<p>Functional languages usually do so-called <em>proper tail call optimisation</em>, which is completely independent of recursion. <em>Any</em> tail call is optimised into a jump, be it a recursive call, a call to a previously defined function, a partially applied function, or even a call to a first-class function. For example:</p>\n\n<pre><code>g x = let y = 2*x in abs x  -- tail call\nadd x = (+) x  -- tail call\napply f x = f x  -- tail call\n</code></pre>\n\n<p>F# should be able to do all that, since the CLR has a tail call instruction (even though it has been known to be slow).</p>\n"}], "owner": {"reputation": 1568, "user_id": 753859, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/NUq3B.png?s=128&g=1", "display_name": "ruben2020", "link": "https://stackoverflow.com/users/753859/ruben2020"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 794, "favorite_count": 0, "accepted_answer_id": 28779771, "answer_count": 2, "score": 0, "last_activity_date": 1425112811, "creation_date": 1425101988, "last_edit_date": 1495534190, "question_id": 28778533, "link": "https://stackoverflow.com/questions/28778533/mutually-recursive-functions-in-functional-programming-languages", "title": "Mutually recursive functions in functional programming languages", "body": "<p>A single recursive function can have tail recursion optimization applied to it, to prevent stack overflow, but what about mutually recursive functions?</p>\n\n<p>This <a href=\"https://stackoverflow.com/a/680622/753859\">answer</a> shows how to define mutually recursive functions in F#:</p>\n\n<pre><code>let rec F() = \n    G()\nand G() =\n    F()\n</code></pre>\n\n<p>Is it defined in this way, so that the generated native machine code or bytecode will consist ultimately of only one function with tail recursion optimization applied to both F and G? Will this prevent stack overflow?</p>\n\n<p>How does the algorithm for tail call work, for mutually recursive functions?</p>\n\n<p>On the other hand, Haskell does not need such a syntax. Is it because of Haskell's lazy evaluation? Or as @augustss suggests, are Haskell compilers also doing the same as above?</p>\n"}, {"tags": ["haskell", "functional-programming", "binary-tree"], "comments": [{"owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 0, "creation_date": 1425100748, "post_id": 28776888, "comment_id": 45834425, "body": "Do you know in what ways you would like to make use of said infinite tree?"}], "answers": [{"comments": [{"owner": {"reputation": 1387, "user_id": 4616611, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/90099c6ce97d206fcac50806bf8c74da?s=128&d=identicon&r=PG&f=1", "display_name": "Teodorico Levoff", "link": "https://stackoverflow.com/users/4616611/teodorico-levoff"}, "edited": false, "score": 1, "creation_date": 1425088231, "post_id": 28777075, "comment_id": 45832407, "body": "Thanks this makes a lot more sense no. So if I wanted a tree for the root to be 0 and it&#39;s children to be a value one more then it&#39;s parent I can do something like this:  data Tree a = Node (Tree a) a (Tree a) | Nil deriving (Foldable, Show)  infiniteTree :: Tree Int  infiniteTree = go 0 where    go n = Node (go (1+n)) n (go (1+n))?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 1387, "user_id": 4616611, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/90099c6ce97d206fcac50806bf8c74da?s=128&d=identicon&r=PG&f=1", "display_name": "Teodorico Levoff", "link": "https://stackoverflow.com/users/4616611/teodorico-levoff"}, "edited": false, "score": 0, "creation_date": 1425090418, "post_id": 28777075, "comment_id": 45832835, "body": "If you want that, you should instead write <code>go n = let a = go (1+n) in Node a n a</code>, because you don&#39;t want the <code>go (n+1)</code> call to be computed twice."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425090608, "post_id": 28777075, "comment_id": 45832874, "body": "OTOH, they very often <i>do</i> pattern match on their arguments."}], "tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": true, "score": 5, "last_activity_date": 1425090308, "last_edit_date": 1425090308, "creation_date": 1425087299, "answer_id": 28777075, "question_id": 28776888, "link": "https://stackoverflow.com/questions/28776888/haskell-defining-a-binary-tree/28777075#28777075", "title": "Haskell Defining a Binary Tree", "body": "<p>Infinite data structures can generally be defined by functions which call themselves but have no base case. Usually these functions don't need to pattern match on their arguments. For example, a list equal to <code>[1..]</code> can be written as </p>\n\n<pre><code>infiniteList :: [Int]\ninfiniteList = go 1 where \n  go n = n : go (n+1) \n</code></pre>\n\n<p>You can use the exact same technique for a tree:</p>\n\n<pre><code>data Tree a = Node (Tree a) a (Tree a) | Nil deriving (Show)\n\ninfiniteTree :: Tree Int \ninfiniteTree = go 1 where \n  go n = Node (go (2*n)) n (go (2*n+1))\n</code></pre>\n\n<p>This defines the infinite tree </p>\n\n<pre><code>   1 \n /   \\\n 2   3 \n/ \\ / \\\n4 5 6 7\n...\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1387, "user_id": 4616611, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/90099c6ce97d206fcac50806bf8c74da?s=128&d=identicon&r=PG&f=1", "display_name": "Teodorico Levoff", "link": "https://stackoverflow.com/users/4616611/teodorico-levoff"}, "edited": false, "score": 0, "creation_date": 1425094706, "post_id": 28777484, "comment_id": 45833528, "body": "data Tree = Empty | Node Integer Tree Tree deriving Show                          infinitree :: Tree  infinitree = go 1 where \tgo n = let a = go (1+n) in Node a n a                                                         Something like this?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 1387, "user_id": 4616611, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/90099c6ce97d206fcac50806bf8c74da?s=128&d=identicon&r=PG&f=1", "display_name": "Teodorico Levoff", "link": "https://stackoverflow.com/users/4616611/teodorico-levoff"}, "edited": false, "score": 0, "creation_date": 1425094844, "post_id": 28777484, "comment_id": 45833544, "body": "@YangMi, I don&#39;t know what you mean. I&#39;m suggesting that it would be a good exercise to come up with a definition for the <code>unfold</code> function I gave you a type signature for."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1425091035, "creation_date": 1425091035, "answer_id": 28777484, "question_id": 28776888, "link": "https://stackoverflow.com/questions/28776888/haskell-defining-a-binary-tree/28777484#28777484", "title": "Haskell Defining a Binary Tree", "body": "<p>A type for infinite binary trees with no leaves:</p>\n\n<pre><code>data Tree a = Tree (Tree a) a (Tree a)\n</code></pre>\n\n<p>One general pattern for doing this sort of thing is called <code>unfold</code>. For this particular type:</p>\n\n<pre><code>unfold :: (a -&gt; (a,b,a)) -&gt; a -&gt; Tree b\n</code></pre>\n\n<p>Can you see how to define this function and use it for your purpose?</p>\n"}], "owner": {"reputation": 1387, "user_id": 4616611, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/90099c6ce97d206fcac50806bf8c74da?s=128&d=identicon&r=PG&f=1", "display_name": "Teodorico Levoff", "link": "https://stackoverflow.com/users/4616611/teodorico-levoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 791, "favorite_count": 0, "accepted_answer_id": 28777075, "answer_count": 2, "score": 1, "last_activity_date": 1425091035, "creation_date": 1425085580, "last_edit_date": 1425090537, "question_id": 28776888, "link": "https://stackoverflow.com/questions/28776888/haskell-defining-a-binary-tree", "title": "Haskell Defining a Binary Tree", "body": "<p>I want to define an infinite tree in Haskell using infinitree :: Tree, but want to set a pattern up for each node, defining what each node should be. The pattern is 1 more then then its parent. I am struggling on how to set up a tree to begin with, and how and where to define the pattern of each node?</p>\n\n<p>Thank you</p>\n"}, {"tags": ["haskell", "polymorphism", "higher-rank-types", "polykinds"], "answers": [{"comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1425066391, "post_id": 28772968, "comment_id": 45824532, "body": "What exactly is <code>k</code> there ? is <code>k</code>  variable any special thing like <code>*</code> ?"}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1425066769, "post_id": 28772968, "comment_id": 45824705, "body": "@Sibi <code>k</code> is a kind variable, <code>*</code> is one of its possible &quot;values&quot;. In Haskell types have kinds in much the same way as values have types, although you need extensions to use more than the builtin fixed kinds like <code>*</code> and <code>* -&gt; *</code>."}], "tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": true, "score": 11, "last_activity_date": 1425065869, "creation_date": 1425065869, "answer_id": 28772968, "question_id": 28772695, "link": "https://stackoverflow.com/questions/28772695/rankntypes-and-polykinds/28772968#28772968", "title": "RankNTypes and PolyKinds", "body": "<p><code>f2</code> requires its <em>argument</em> to be polymorphic in the kind <code>k</code>, while <code>f1</code> is just polymorphic in the kind itself. So if you define</p>\n\n<pre><code>{-# LANGUAGE RankNTypes, PolyKinds #-}\nf1 = undefined :: (forall a m. m a -&gt; Int) -&gt; Int\nf2 = undefined :: (forall (a :: k) m. m a -&gt; Int) -&gt; Int\nx = undefined :: forall (a :: *) m. m a -&gt; Int\n</code></pre>\n\n<p>then <code>:t f1 x</code> types fine, while <code>:t f2 x</code> complains:</p>\n\n<pre><code>*Main&gt; :t f2 x\n\n&lt;interactive&gt;:1:4:\n    Kind incompatibility when matching types:\n      m0 :: * -&gt; *\n      m :: k -&gt; *\n    Expected type: m a -&gt; Int\n      Actual type: m0 a0 -&gt; Int\n    In the first argument of \u2018f2\u2019, namely \u2018x\u2019\n    In the expression: f2 x\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": false, "score": 12, "last_activity_date": 1425069350, "creation_date": 1425069350, "answer_id": 28773804, "question_id": 28772695, "link": "https://stackoverflow.com/questions/28772695/rankntypes-and-polykinds/28773804#28773804", "title": "RankNTypes and PolyKinds", "body": "<p>Let's be bloody. We must quantify everything and give the domain of quantification. Values have types; type-level things have kinds; kinds live in <code>BOX</code>.</p>\n\n<pre><code>f1 :: forall (k :: BOX).\n      (forall (a :: k) (m :: k -&gt; *). m a -&gt; Int)\n      -&gt; Int\n\nf2 :: (forall (k :: BOX) (a :: k) (m :: k -&gt; *). m a -&gt; Int)\n      -&gt; Int\n</code></pre>\n\n<p>Now, in neither example type is <code>k</code> quantified explicitly, so ghc is deciding where to put that <code>forall (k :: BOX)</code>, based on whether and where <code>k</code> is mentioned. I am not totally sure I understand or am willing to defend the policy as stated.</p>\n\n<p>\u00d8rjan gives a good example of the difference in practice. Let's be bloody about that, too. I'll write <code>/\\ (a :: k). t</code> to make explicit the abstraction that corresponds to <code>forall</code>, and <code>f @ type</code> for the corresponding application. The game is that we get to pick the <code>@</code>-ed arguments, but we have to be ready to put up with whatever <code>/\\</code>-ed arguments the devil may choose.</p>\n\n<p>We have</p>\n\n<pre><code>x :: forall (a :: *) (m :: * -&gt; *). m a -&gt; Int\n</code></pre>\n\n<p>and may accordingly discover that <code>f1 x</code> is really</p>\n\n<pre><code>f1 @ * (/\\ (a :: *) (m :: * -&gt; *). x @ a @ m)\n</code></pre>\n\n<p>However, if we try to give <code>f2 x</code> the same treatment, we see</p>\n\n<pre><code>f2 (/\\ (k :: BOX) (a :: k) (m :: k -&gt; *). x @ ?m0 @ ?a0)\n?m0 :: *\n?a0 :: * -&gt; *\nwhere  m a = m0 a0\n</code></pre>\n\n<p>The Haskell type system treats type application as purely syntactic, so the only way that equation can be solved is by identifying the functions and identifying the arguments</p>\n\n<pre><code>(?m0 :: * -&gt; *) = (m :: k -&gt; *)\n(?a0 :: *)      = (a :: k)\n</code></pre>\n\n<p>but those equations are not even well kinded, because <code>k</code> is not free to be chosen: it's being <code>/\\</code>-ed not <code>@</code>-ed.</p>\n\n<p>Generally, to get to grips with these uber-polymorphic types, it's good to write out all the quantifiers and then figure out how that turns into your game against the devil. Who chooses what, and in what order. Moving a <code>forall</code> inside an argument type changes its chooser, and can often make the difference between victory and defeat.</p>\n"}, {"tags": [], "owner": {"reputation": 1375, "user_id": 420038, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e486867defc84340f1837639ca54ee?s=128&d=identicon&r=PG", "display_name": "thomie", "link": "https://stackoverflow.com/users/420038/thomie"}, "is_accepted": false, "score": 3, "last_activity_date": 1425077954, "last_edit_date": 1425077954, "creation_date": 1425074364, "answer_id": 28775058, "question_id": 28772695, "link": "https://stackoverflow.com/questions/28772695/rankntypes-and-polykinds/28775058#28775058", "title": "RankNTypes and PolyKinds", "body": "<p>The type of <code>f1</code> places more restrictions on its <em>definition</em>, while the type of <code>f2</code> places more restrictions on its <em>argument</em>.</p>\n\n<p>That is: the type of <code>f1</code> requires its <em>definition</em> to be polymorphic in the kind <code>k</code>, while the type of <code>f2</code> requires its <em>argument</em> to be polymorphic in the kind <code>k</code>.</p>\n\n<pre><code>f1 :: forall (k::BOX). (forall          (a::k) (m::k-&gt;*). m a -&gt; Int) -&gt; Int\nf2 ::                  (forall (k::BOX) (a::k) (m::k-&gt;*). m a -&gt; Int) -&gt; Int\n\n-- Show restriction on *definition*\nf1 g = g (Just True)  -- NOT OK. f1 must work for all k, but this assumes k is *\nf2 g = g (Just True)  -- OK\n\n-- Show restriction on *argument* (thanks to \u00d8rjan)\nx = undefined :: forall (a::*) (m::*-&gt;*). m a -&gt; Int\nf1 x  -- OK\nf2 x  -- NOT OK. the argument for f2 must work for all k, but x only works for *\n</code></pre>\n"}], "owner": {"reputation": 1375, "user_id": 420038, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e486867defc84340f1837639ca54ee?s=128&d=identicon&r=PG", "display_name": "thomie", "link": "https://stackoverflow.com/users/420038/thomie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1530, "favorite_count": 4, "accepted_answer_id": 28772968, "answer_count": 3, "score": 13, "last_activity_date": 1425077954, "creation_date": 1425064915, "last_edit_date": 1495541819, "question_id": 28772695, "link": "https://stackoverflow.com/questions/28772695/rankntypes-and-polykinds", "title": "RankNTypes and PolyKinds", "body": "<p>What is the difference between <code>f1</code> and <code>f2</code>?</p>\n\n<pre><code>$ ghci -XRankNTypes -XPolyKinds\nPrelude&gt; let f1 = undefined :: (forall a        m. m a -&gt; Int) -&gt; Int\nPrelude&gt; let f2 = undefined :: (forall (a :: k) m. m a -&gt; Int) -&gt; Int\nPrelude&gt; :t f1\nf1 :: (forall            (a :: k) (m :: k -&gt; *). m a -&gt; Int) -&gt; Int\nPrelude&gt; :t f2\nf2 :: (forall (k :: BOX) (a :: k) (m :: k -&gt; *). m a -&gt; Int) -&gt; Int\n</code></pre>\n\n<p>Related to this question on <a href=\"https://stackoverflow.com/questions/20401018/rankntypes-and-scope-of-forall\">RankNTypes and scope of forall</a>. Example taken from the GHC user's guide on <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/kind-polymorphism.html\" rel=\"nofollow noreferrer\">kind polymorphism</a>.</p>\n"}, {"tags": ["haskell", "io", "ghc", "state-monad"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 5, "creation_date": 1425054361, "post_id": 28769550, "comment_id": 45817918, "body": "The difference is in the types. ioToST can only produce an <code>ST RealWorld a</code> which you cannot pass to <code>runST :: (forall s . ST s a) -&gt; a</code>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 4, "creation_date": 1425055568, "post_id": 28769720, "comment_id": 45818673, "body": "I know it&#39;s not the OP&#39;s question, but in my mind the bigger question is what, if anything, makes <code>unsafeSTToIO</code> unsafe."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1425056294, "post_id": 28769720, "comment_id": 45819118, "body": "@dfeuer It could either be called unsafe just for symmetry with <code>unsafeIOToST</code>, or maybe you can find a way to use it to access a <code>STVar</code> outside its <code>runST</code> wrapper, in which case it would be really unsafe all by itself."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1425056517, "post_id": 28769720, "comment_id": 45819276, "body": "I found a thread on haskell-cafe about it. It seems it really is unsafe, but I don&#39;t understand any of the examples."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 12, "last_activity_date": 1425054406, "creation_date": 1425054406, "answer_id": 28769720, "question_id": 28769550, "link": "https://stackoverflow.com/questions/28769550/what-is-the-difference-between-iotost-and-unsafeiotost-from-ghc-io/28769720#28769720", "title": "What is the difference between `ioToST` and `unsafeIOToST` from GHC.IO", "body": "<p>The safe versions must start in the IO monad (because you cannot obtain an <code>ST RealWorld</code> from <code>runST</code>) and allow you to switch between the IO context and a <code>ST RealWorld</code> context. They are safe because <code>ST RealWorld</code> is basically the same thing as IO.</p>\n\n<p>The unsafe versions can start anywhere (because <code>runST</code> can be called anywhere) and allow you to switch between an arbitrary ST monad and the IO monad. Using <code>runST</code> from a pure context and then doing a <code>unsafeIOToST</code> within the state monad is basically equivalent to using <code>unsafePerformIO</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1425064305, "post_id": 28772409, "comment_id": 45823529, "body": "&quot;So it would really by jolly useful to be able to write code and use it in both monads.&quot; There&#39;s actually a very clean way to accomplish this purpose without anything unsafe: <a href=\"https://hackage.haskell.org/package/primitive\" rel=\"nofollow noreferrer\"><code>primitive</code></a> offers a <code>PrimMonad</code> class with <code>ST s</code> and <code>IO</code> instances and just about everything you could want to write functions that can deal with either instance. These conversions are only needed to deal with the fact that many library functions are (unnecessarily) specific."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1425068167, "post_id": 28772409, "comment_id": 45825327, "body": "Er ... I just tried, and your program doesn&#39;t typecheck. The real examples seem to be rather more subtle."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1425076649, "post_id": 28772409, "comment_id": 45829234, "body": "I believe the <code>foobar</code> example can&#39;t work. The reason being that <code>runST</code> needs a polytyped value, while <code>v</code> is monotyped. Indeed, <code>unsafeSTToIO (newSTRef 42)</code> has type <code>forall s. IO (STRef s Int)</code>, and not <code>IO (forall s. STRef s Int)</code>."}], "tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": false, "score": 11, "last_activity_date": 1425122356, "last_edit_date": 1425122356, "creation_date": 1425063830, "answer_id": 28772409, "question_id": 28769550, "link": "https://stackoverflow.com/questions/28769550/what-is-the-difference-between-iotost-and-unsafeiotost-from-ghc-io/28772409#28772409", "title": "What is the difference between `ioToST` and `unsafeIOToST` from GHC.IO", "body": "<p><strong>TL;DR</strong>. All four of these functions are just typecasts. They are all no-op at run-time. The <em>only</em> difference between them is the type signatures &mdash; but it's the type signatures that enforce all the safety guarantees in the first place!</p>\n\n<hr>\n\n<p>The <code>ST</code> monad and the <code>IO</code> monad both give you mutable state.</p>\n\n<p>It is famously impossible to escape the <code>IO</code> monad. [Well, no, you <em>can</em> if you use <code>unsafePerformIO</code>. Don't do that!] Because of this, all the I/O that your program will ever perform gets bundled up into a single giant <code>IO</code> block, thus enforcing a global ordering on the operations. [At least, until you call <code>forkIO</code>, but anyway...]</p>\n\n<p>The reason <code>unsafePerformIO</code> is so damned unsafe is that there is <em>no way</em> to figure out exactly when, if, or how many times the enclosed I/O operations will happen &mdash; which is typically a <em>very bad thing</em>.</p>\n\n<p>The <code>ST</code> monad also provides mutable state, but it <em>does</em> have an escape mechanism &mdash; the <code>runST</code> function. This lets you turn an impure value into a pure one. But now there is <em>no way</em> to guarantee what order separate <code>ST</code> blocks will run in. In order to prevent complete devastation, we need to ensure that separate <code>ST</code> blocks can't \"interfere\" with each other.</p>\n\n<p>For that reason, you can't perform any I/O operations in the <code>ST</code> monad. You can access mutable state, but that state isn't allowed to escape the <code>ST</code> block.</p>\n\n<p>The <code>IO</code> monad and the <code>ST</code> monad are actually <em>the same monad</em>. And an <code>IORef</code> is actually an <code>STRef</code>, and so on. So it would really by jolly useful to be able to write code and use it in both monads. And all four of the functions you mention are type-casts that let you do exactly that.</p>\n\n<p>To understand the danger, we need to understand how <code>ST</code> achieves it's little trick. It's all in the phantom <code>s</code> type in the type signatures. To run an <code>ST</code> block, it needs to work for all possible <code>s</code>:</p>\n\n<pre><code>runST :: (forall s. ST s x) -&gt; x\n</code></pre>\n\n<p>All the mutable stuff has <code>s</code> in the type as well, and by a happy accident, that means that any attempt to return mutable stuff out of the <code>ST</code> monad will be ill-typed. (This is really a bit of a hack, but it works so perfectly...)</p>\n\n<p>At least, it will be ill-typed if you use <code>runST</code>. Notice that <code>ioToST</code> gives you an <code>ST RealWorld x</code>. Roughly speaking, <code>IO x</code> &approx; <code>ST RealWorld x</code>. But <code>runST</code> won't accept that as input. So you can't use <code>runST</code> to run I/O.</p>\n\n<p>The <code>ioToST</code> gives you a type that you can't use with <code>runST</code>. But <code>unsafeIOToST</code> gives you a type that works just fine with <code>runST</code>. At that point, you have basically implemented <code>unsafePerformIO</code>:</p>\n\n<pre><code>unsafePerformIO = runST . ioToST\n</code></pre>\n\n<p>The <code>unsafeSTToIO</code> allows you to get mutable stuff out of one <code>ST</code> block, and potentially into another:</p>\n\n<pre><code>foobar = do\n  v &lt;- unsafeSTToIO (newSTRef 42)\n  let w = runST (readSTRef v)\n  let x = runST (writeSTRef v 99)\n  print w\n</code></pre>\n\n<p>Wanna take a guess what is going to get printed? Because the thing is, we've got three <code>ST</code> actions here, which can happen in absolutely any order. Will the <code>readSTRef</code> happen before or after the <code>writeSTRef</code>?</p>\n\n<p>[Actually, in this example, the write never happens, because we don't \"do\" anything with <code>x</code>. But if I pass <code>x</code> to some distant, unrelated part of the code, and that code happens to inspect it, suddenly our I/O operation does something different. Pure code shouldn't be able to affect mutable stuff like that!]</p>\n\n<hr>\n\n<p><strong>Edit:</strong> It appears I was slightly premature. The <code>unsafeSTToIO</code> function allows you to take a mutable value out of the <code>ST</code> monad, but it appears it requires a second call to <code>unsafeSTToIO</code> to put the mutable thing back <em>into</em> the <code>ST</code> monad again. (At that point, both actions are <code>IO</code> actions, so their ordering is guaranteed.)</p>\n\n<p>You could of course mix in some <code>unsafeIOToST</code> as well, but that doesn't really prove that <code>unsafeSTToIO</code> by itself is unsafe:</p>\n\n<pre><code>foobar = do\n  v &lt;- unsafeSTToIO (newSTRef 42)\n  let w = runST (unsafeIOToST $ unsafeSTToIO $ readSTRef v)\n  let x = runST (unsafeIOToST $ unsafeSTToIO $ writeSTRef v 99)\n  print w\n</code></pre>\n\n<p>I've played around with this, and I haven't yet managed to convince the type checker to let me do something provably unsafe using <em>only</em> <code>unsafeSTToIO</code>. I remain convinced it can be done, and the various comments on this question seem to agree, but I can't actually construct an example. You get the idea though; change the types, and your safety gets broken.</p>\n"}], "owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 497, "favorite_count": 1, "answer_count": 2, "score": 11, "last_activity_date": 1425122356, "creation_date": 1425053789, "question_id": 28769550, "link": "https://stackoverflow.com/questions/28769550/what-is-the-difference-between-iotost-and-unsafeiotost-from-ghc-io", "title": "What is the difference between `ioToST` and `unsafeIOToST` from GHC.IO", "body": "<p>What can the differences and intended uses be for <code>ioToST</code> and <code>unsafeSTToIO</code> defined in <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/src/GHC-IO.html\" rel=\"noreferrer\">GHC.IO</a>?</p>\n\n<pre><code>-- ---------------------------------------------------------------------------\n\n-- Coercions between IO and ST\n\n-- | A monad transformer embedding strict state transformers in the 'IO'\n-- monad.  The 'RealWorld' parameter indicates that the internal state\n-- used by the 'ST' computation is a special one supplied by the 'IO'\n-- monad, and thus distinct from those used by invocations of 'runST'.\nstToIO        :: ST RealWorld a -&gt; IO a\nstToIO (ST m) = IO m\n\nioToST        :: IO a -&gt; ST RealWorld a\nioToST (IO m) = (ST m)\n\n-- This relies on IO and ST having the same representation modulo the\n-- constraint on the type of the state\n--\nunsafeIOToST        :: IO a -&gt; ST s a\nunsafeIOToST (IO io) = ST $ \\ s -&gt; (unsafeCoerce# io) s\n\nunsafeSTToIO :: ST s a -&gt; IO a\nunsafeSTToIO (ST m) = IO (unsafeCoerce# m)\n</code></pre>\n"}, {"tags": ["haskell", "ffi", "mutable", "state-monad"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425052411, "post_id": 28768904, "comment_id": 45816714, "body": "C Arrays and &quot;native&quot; Haskell STArrays are different things. Typically you use <code>IO</code>, not <code>ST</code> when working with FFI. If you are really sure your C functions have no externally observable side effects, and you wish to bring the FFI into ST, you will probably need to write the functions with the FFI and then use <code>unsafeIOToST</code> (in Control.Monad.ST.Unsafe)."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425052527, "post_id": 28768904, "comment_id": 45816799, "body": "@user2407038 Ah, ok, thanks! I was probably looking for <code>unsafeIOToST</code>."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1425053891, "post_id": 28768904, "comment_id": 45817632, "body": "@user2407038 BTW, <a href=\"http://stackoverflow.com/q/28769550/94687\">What is the difference between <code>ioToST</code> and <code>unsafeIOToST</code> from GHC.IO?</a>"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1425074018, "post_id": 28768904, "comment_id": 45828175, "body": "I don&#39;t believe that you can get the FFI to marshal your functions directly to ST s, instead of IO. It would be useful in this case certainly, but I don&#39;t know if there are many people with this use case. You can certainly submit a feature request!"}], "answers": [{"comments": [{"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425063688, "post_id": 28770114, "comment_id": 45823224, "body": "Thanks a lot! This is very clear and helpful. I don&#39;t understand why you use <code>Ptr Foo</code> for typing the pointers, because <code>Foo</code> is the <i>analoguous</i> Haskell data type, but I don&#39;t believe that the C struct and the Haskell data have the same in-memory representation. <code>Foo</code> even has <code>Int</code> inside, not <code>CInt</code>. Of course, the parameter to <code>Ptr</code> doesn&#39;t make much difference in reality and only serves not to mix pointers to different types, but isn&#39;t the choice of <code>Foo</code> as the parameter confusing?"}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425064103, "post_id": 28770114, "comment_id": 45823434, "body": "I&#39;d make the arguments of <code>writeBar</code> the other way round: like in <code>c_writeBar</code> (and the examples of signatures I&#39;ve updated my question with); that order would match <code>writeSTRef :: STRef s a -&gt; a -&gt; ST s ()</code> and <code>writeArray :: (MArray a e m, Ix i) =&gt; a i e -&gt; i -&gt; e -&gt; m ()</code>"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 1, "creation_date": 1425073913, "post_id": 28770114, "comment_id": 45828132, "body": "The reason that <code>Ptr Foo</code> is &quot;correct&quot; is because the type parameter to <code>Ptr</code> is a phantom type; no actual <code>Foo</code> is stored inside of it (it looks like <code>data Ptr a = Ptr Addr#</code>, where Addr# is the primitive type of pointers and is basically just Word64). No &quot;magic&quot; happens to convert the c-struct to a Haskell type. I used <code>Ptr Foo</code> because morally <code>Ptr Foo</code> is a pointer to a value of type <code>Foo</code> - the fact that <code>Ptr Foo</code> doesn&#39;t represent its data with the same memory layout as <code>Foo</code> itself isn&#39;t relevant. Of course, you can pick a different type if you find it helps clarity (<code>Ptr CFoo</code>)."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425074220, "post_id": 28770114, "comment_id": 45828261, "body": "As for the order of arguments, that doesn&#39;t really relate to the content of the question - it is more style. If you think it would help readability or understanding for future readers, please feel free to edit the answer."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425074485, "post_id": 28770114, "comment_id": 45828378, "body": "Sure, it&#39;s just style, and no real drawback. If you don&#39;t mind, I&#39;ll swap them to match the example from standard library."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425074834, "post_id": 28770114, "comment_id": 45828525, "body": "Another tiny stylistic issue for me was that <code>STArray</code> and <code>STRef</code> have ST prefixed, but <code>FooST</code> has it as a postfix. Are there some (stylistic) reasons to do it one or another way?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425086393, "post_id": 28770114, "comment_id": 45832018, "body": "Also just an arbitrary style choice. I threw together the example quite quickly so I wasn&#39;t thinking about those details. If you think of any small issues like this, please make any appropriate edits."}], "tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": true, "score": 11, "last_activity_date": 1425086557, "last_edit_date": 1425086557, "creation_date": 1425055665, "answer_id": 28770114, "question_id": 28768904, "link": "https://stackoverflow.com/questions/28768904/how-to-implement-actions-in-st-monad-with-my-own-underlying-representation-simi/28770114#28770114", "title": "How to implement actions in ST-monad with my own underlying representation (similarly to STRef or STArray) using simple techniques?", "body": "<p>Based on my comment, I'll give a short example of how this can be done.</p>\n\n<p>First start with your basic C module.</p>\n\n<pre><code>typedef struct { int bar; int baz; } foo ;\n\nfoo * newFoo ();\n\nvoid freeFoo (foo * ) ;\n\nint readBar ( foo * ) ;\nint readBaz ( foo * ) ;\n\nvoid writeBar ( foo * , int ) ;\nvoid writeBaz ( foo * , int ) ;\n</code></pre>\n\n<p>Then the Haskell file.</p>\n\n<pre><code>{-# LANGUAGE ForeignFunctionInterface #-}\n\nimport Foreign.C\nimport Control.Monad.ST\nimport Control.Monad.ST.Unsafe\nimport Foreign.Ptr \nimport Foreign.ForeignPtr \nimport Control.Applicative\n\ndata Foo = Foo { bar :: Int, baz :: Int } \n</code></pre>\n\n<p>And all of your foreign imports.</p>\n\n<pre><code>foreign import ccall \"newFoo\" c_newFoo :: IO (Ptr Foo) \nforeign import ccall \"&amp;freeFoo\" p_freeFoo :: FunPtr (Ptr Foo -&gt; IO ())\n\nforeign import ccall \"readBar\" c_readBar :: Ptr Foo -&gt; IO CInt \nforeign import ccall \"readBaz\" c_readBaz :: Ptr Foo -&gt; IO CInt \n\nforeign import ccall \"writeBar\" c_writeBar :: Ptr Foo -&gt; CInt -&gt; IO ()\nforeign import ccall \"writeBaz\" c_writeBaz :: Ptr Foo -&gt; CInt -&gt; IO ()\n</code></pre>\n\n<p>In case you need to do something special on the C side but don't want to have to force your user to call <code>free</code> on your <code>Foo</code>, you can use a <code>ForeignPtr</code> in your actual representation.</p>\n\n<pre><code>data STFoo s = STFoo (ForeignPtr Foo) \n</code></pre>\n\n<p>Of course, this type must be abstract. If you are on GHC 7.8 or later, you should also include </p>\n\n<pre><code>{-# LANGUAGE RoleAnnotations #-} -- at the top\n\ntype role STFoo nominal \n</code></pre>\n\n<p>or people may be able to break the invariants you get from <code>ST</code>. When you create a new <code>STFoo</code>, you want to put the C side finalizer on it.</p>\n\n<pre><code>newFoo :: ST s (STFoo s) \nnewFoo = STFoo &lt;$&gt; unsafeIOToST (c_newFoo &gt;&gt;= newForeignPtr p_freeFoo)\n</code></pre>\n\n<p>Reading and writing is basically just some coercions. </p>\n\n<pre><code>readBar :: STFoo s -&gt; ST s Int\nreadBar (STFoo x) = fromIntegral &lt;$&gt; unsafeIOToST (withForeignPtr x c_readBar)\n\nwriteBar :: STFoo s -&gt; Int -&gt; ST s () \nwriteBar (STFoo x) i = unsafeIOToST $ withForeignPtr x $ \\p -&gt; \n                       c_writeBar p (fromIntegral i)       \n</code></pre>\n\n<p>You can also get a Haskell side Foo value, which will likely be the result of a computation inside ST. This is like <code>freezeSTArray</code>.</p>\n\n<pre><code>freezeFoo :: STFoo s -&gt; ST s Foo \nfreezeFoo (STFoo x) = unsafeIOToST $ withForeignPtr x $ \\p -&gt; do \n  bar &lt;- fromIntegral &lt;$&gt; c_readBar p\n  baz &lt;- fromIntegral &lt;$&gt; c_readBaz p \n  return (Foo bar baz) \n</code></pre>\n\n<p>This all comes with the caveat that if your C functions are not exception safe or violate referential transparency, the Haskell type system will not help you, and you may end up exposing <code>unsafePerformIO</code>. </p>\n"}], "owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 2, "accepted_answer_id": 28770114, "answer_count": 1, "score": 10, "last_activity_date": 1425086557, "creation_date": 1425051849, "last_edit_date": 1425056618, "question_id": 28768904, "link": "https://stackoverflow.com/questions/28768904/how-to-implement-actions-in-st-monad-with-my-own-underlying-representation-simi", "title": "How to implement actions in ST-monad with my own underlying representation (similarly to STRef or STArray) using simple techniques?", "body": "<p>I want to manipulate structs of a certain type from FFI through an interface like that provided with <code>STArray</code> or <code>STRef</code> in an <code>ST</code> monad. I'll have my own specific methods with understandable names for the kind of manipulations that are useful for this struct (like <code>readArray</code> and <code>writeArray</code> for arrays).</p>\n\n<p>What is the simplest way to implement this?</p>\n\n<p>The implementation for <code>STArray</code> (based on <a href=\"https://hackage.haskell.org/package/base-4.7.0.2/docs/src/GHC-Arr.html\" rel=\"noreferrer\">https://hackage.haskell.org/package/base-4.7.0.2/docs/src/GHC-Arr.html</a>) looks too convoluted for those who do not know some special GHC techniques used for this.</p>\n\n<p>Can I write something on a more simple, understandable level of Haskell?</p>\n\n<h3>Remarks</h3>\n\n<p>I'm not asking about how to access a struct through FFI.</p>\n\n<p>I'd rather write getter and setter functions in C, and I want to mirror them in Haskell (to get ST-actions like <code>readArray</code> and <code>writeArray</code>).</p>\n\n<h3>Some thoughts on easy declaration of this kind of interface (a possible GHC extension?)</h3>\n\n<p>If I'm not mistaken, I can declare a foreign function as either an IO-action or pure (if I'm sure it is pure). I understand the latter as simply shortcutting wrapping it in <code>unsafePerformIO</code>:</p>\n\n<pre><code>foreign import ccall safe \"getValue.h getValue\" effect :: CInt -&gt; Ptr CChar\nforeign import ccall safe \"getValue.h getValue\" pure :: CInt -&gt; IO (Ptr CChar)\n</code></pre>\n\n<p>So, the idea arises that an <strong>intermediate form between \"effect\" and \"pure\"</strong> could be possible, to save programmer's work. An \"effect\" limited to a \"limited state\":</p>\n\n<pre><code>foreign import ccall safe \"getValue.h writeValue\" writeValue :: (ValueRef s) -&gt; Value -&gt; ST s () -- modeled after writeSTRef\n</code></pre>\n\n<p>in addition to the standard two variants for this function in GHC:</p>\n\n<pre><code>foreign import ccall safe \"getValue.h writeValue\" writeValue :: ValueRef -&gt; Value -&gt; IO ()\nforeign import ccall safe \"getValue.h writeValue\" writeValue :: ValueRef -&gt; Value -&gt; () -- must be really bad!\n</code></pre>\n\n<p>I only can't get the details about <code>ValueRef</code> right: if we define this unparameterized type, then how can the compiler use a parameterized one to give an ST-action?..</p>\n\n<p>Probably, this is not available in GHC, but could be useful extension, couldn't it?</p>\n"}, {"tags": ["haskell", "yesod", "browserid"], "comments": [{"owner": {"reputation": 822, "user_id": 200916, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/68b75a235d71e5dacec3e2778a561775?s=128&d=identicon&r=PG", "display_name": "codygman", "link": "https://stackoverflow.com/users/200916/codygman"}, "edited": false, "score": 0, "creation_date": 1425330699, "post_id": 28764807, "comment_id": 45910798, "body": "Did you get the code from that yesod wiki page working and try to modify it for your needs?"}, {"owner": {"reputation": 136, "user_id": 1553834, "user_type": "registered", "accept_rate": 17, "profile_image": "https://i.stack.imgur.com/Rk6Gb.jpg?s=128&g=1", "display_name": "urbanslug", "link": "https://stackoverflow.com/users/1553834/urbanslug"}, "reply_to_user": {"reputation": 822, "user_id": 200916, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/68b75a235d71e5dacec3e2778a561775?s=128&d=identicon&r=PG", "display_name": "codygman", "link": "https://stackoverflow.com/users/200916/codygman"}, "edited": false, "score": 0, "creation_date": 1425352319, "post_id": 28764807, "comment_id": 45918122, "body": "@Codygman I tried to but couldn&#39;t get it to work because <code>doRequest</code> doesn&#39;t seem to exist in the relevant libraries anymore. Also to add to that BrowserID authentication can only be done through JS as far as I can tell so I&#39;d have to find a way to call JS functions from my haskell tests."}], "answers": [{"tags": [], "owner": {"reputation": 131, "user_id": 2210834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc319e55c963d250c58865b58794e6b0?s=128&d=identicon&r=PG", "display_name": "Paul Rouse", "link": "https://stackoverflow.com/users/2210834/paul-rouse"}, "is_accepted": false, "score": 2, "last_activity_date": 1425416543, "creation_date": 1425416543, "answer_id": 28841817, "question_id": 28764807, "link": "https://stackoverflow.com/questions/28764807/performing-authentication-during-testing-browserid/28841817#28841817", "title": "Performing authentication during testing browserID", "body": "<p>The code in that wiki article is now updated.  The details in that code are right for the HashDB authentication plugin, but would need to be modified for BrowserID.</p>\n"}], "owner": {"reputation": 136, "user_id": 1553834, "user_type": "registered", "accept_rate": 17, "profile_image": "https://i.stack.imgur.com/Rk6Gb.jpg?s=128&g=1", "display_name": "urbanslug", "link": "https://stackoverflow.com/users/1553834/urbanslug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1425416543, "creation_date": 1425038990, "question_id": 28764807, "link": "https://stackoverflow.com/questions/28764807/performing-authentication-during-testing-browserid", "title": "Performing authentication during testing browserID", "body": "<p>How should I go about performing authentication and authorization during testing for a yesod haskell app? My handlers begin with requireAuth and my authentication plugin is browserID.</p>\n\n<p>So I want to log a user in and do what that handler pertains. Doing this for several handlers.</p>\n\n<p>My code is: <a href=\"https://github.com/urbanslug/payroll-web/tree/development\" rel=\"nofollow\">https://github.com/urbanslug/payroll-web/tree/development</a></p>\n\n<p>I have read <a href=\"https://github.com/yesodweb/yesod/wiki/Performing-Authentication-during-Testing\" rel=\"nofollow\">https://github.com/yesodweb/yesod/wiki/Performing-Authentication-during-Testing</a> but I really don't get it plus it seems outdated since some types like OneSpec are out of scope and aren't on hayoo.</p>\n"}, {"tags": ["haskell", "ghc", "type-inference", "ghci"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1425034295, "post_id": 28763101, "comment_id": 45805706, "body": "GHCi inference rules differ to those of GHC IIRC."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 6, "creation_date": 1425036557, "post_id": 28763101, "comment_id": 45807076, "body": "We need a template answer for monomorphism-restriction questions..."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1425049018, "post_id": 28763101, "comment_id": 45814522, "body": "@leftaroundabout Why? Can&#39;t we just close pretty much all of them as dupes?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 2, "creation_date": 1425050143, "post_id": 28763101, "comment_id": 45815213, "body": "@Cubic: yeah... though often the questions are in fact substantially different. They aren&#39;t really duplicates at all, they just happen to be all about problems caused by the same root (\u201cof all evil\u201d), which is the Monomorphism Restriction. I suppose that&#39;s still in scope of what the <i>close as duplicate</i> feature is there for, but still..."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1425058159, "post_id": 28763101, "comment_id": 45820285, "body": "@leftaroundabout (or anybody else who is interested in this task) Ping me: I have a long list of questions on my disk that are of this form. Might save you a bit of searching to find out all the things you need to address in such a question."}], "answers": [{"comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 4, "creation_date": 1425034413, "post_id": 28763308, "comment_id": 45805771, "body": "namely  <code>:set -XNoMonomorphismRestriction</code>, but it&#39;s turned off by default in GHCi"}, {"owner": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "edited": false, "score": 0, "creation_date": 1425050858, "post_id": 28763308, "comment_id": 45815705, "body": "Hm, weird behaviour (unexpected). They&#39;ve should at least added some sort of warning to ghc when it has to do it."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "edited": false, "score": 0, "creation_date": 1425053787, "post_id": 28763308, "comment_id": 45817576, "body": "@DanM. Run ghci with <code>-Wall</code> - there is a warning when constraints are resolved by defaulting, it&#39;s just not turned on by default. Note that while the monomorphism restriction is annoying in ghci at times, you pretty much always want it in normal haskell files. (interestingly enough, I actually have to set -XMonomorphismRestriction on my ghci to get it to do that)."}, {"owner": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1425055577, "post_id": 28763308, "comment_id": 45818679, "body": "@Cubic Thanks. It&#39;s just complicates point-free programming."}], "tags": [], "owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "is_accepted": true, "score": 1, "last_activity_date": 1425038496, "last_edit_date": 1425038496, "creation_date": 1425034305, "answer_id": 28763308, "question_id": 28763101, "link": "https://stackoverflow.com/questions/28763101/haskell-strange-type-inference-narrowing/28763308#28763308", "title": "Haskell strange type inference narrowing", "body": "<p>This looks like the effect of <em>Monomorphism Restriction</em> (introduced because otherwise there were incoherent things in the language, and the language designers couldn't come up with something less ugly): if something looks like a value rather than like a function (with arguments), it can't be polymorphic. (Your <code>fstGt0</code> has no arguments.)</p>\n\n<p>There is an ordered set of <em>default types</em> which are tried to be substituted in order to automatically satisfy the Monomorphism Restriction. (That's why you got <code>Integer</code>.)</p>\n\n<p>As for the GHCi part of the question, I'm not sure. I'm not sure how much GHCi's <code>let</code> are similar to compiled <code>let</code>, and whether there are some exceptions in the Monomorphism Restriction for code in <code>let</code>-expressions.</p>\n\n<p>There must be a flag to turn the restriction off.</p>\n"}], "owner": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "closed_date": 1425047615, "accepted_answer_id": 28763308, "answer_count": 1, "score": 1, "last_activity_date": 1425038496, "creation_date": 1425033709, "last_edit_date": 1425036374, "question_id": 28763101, "link": "https://stackoverflow.com/questions/28763101/haskell-strange-type-inference-narrowing", "closed_reason": "Duplicate", "title": "Haskell strange type inference narrowing", "body": "<p>GHCi 7.8.3</p>\n\n<pre><code>filter (\\(a,b) -&gt; a&gt;0) :: (Ord a, Num a) =&gt; [(a, t)] -&gt; [(a, t)]\n</code></pre>\n\n<p>as expected ^</p>\n\n<pre><code>fstGt0 xs = filter (\\(a,b) -&gt; a&gt;0) xs\n</code></pre>\n\n<p>is the same type too, but</p>\n\n<pre><code>fstGt0 = filter (\\(a,b) -&gt; a&gt;0)\n</code></pre>\n\n<p>infers as</p>\n\n<pre><code>fstGt0 :: [(Integer, t)] -&gt; [(Integer, t)]\n</code></pre>\n\n<p>Why?\nFurthermore, if I define fstGt0 in interpreter with</p>\n\n<pre><code>let fstGt0 = filter (\\(a,b) -&gt; a&gt;0)\n</code></pre>\n\n<p>it has expected type.</p>\n"}, {"tags": ["macos", "haskell", "osx-yosemite"], "comments": [{"owner": {"reputation": 1424, "user_id": 756714, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a0c58c5ad07c97f187f3a9241c4d2639?s=128&d=identicon&r=PG", "display_name": "vivian", "link": "https://stackoverflow.com/users/756714/vivian"}, "edited": false, "score": 0, "creation_date": 1425078253, "post_id": 28756340, "comment_id": 45829800, "body": "Do you have the C library for <code>iconv</code> installed?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 1424, "user_id": 756714, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a0c58c5ad07c97f187f3a9241c4d2639?s=128&d=identicon&r=PG", "display_name": "vivian", "link": "https://stackoverflow.com/users/756714/vivian"}, "edited": false, "score": 0, "creation_date": 1425120359, "post_id": 28756340, "comment_id": 45838543, "body": "I&#39;m not sure but I think I do. I have the libiconv dynamic libs on the right directories. How can I double check it?"}, {"owner": {"reputation": 781, "user_id": 659817, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/9c58dfd8739853321d6cf822a77ee449?s=128&d=identicon&r=PG", "display_name": "timbod", "link": "https://stackoverflow.com/users/659817/timbod"}, "edited": false, "score": 2, "creation_date": 1432164393, "post_id": 28756340, "comment_id": 48815574, "body": "It&#39;s definitely some sort of installation or configuration issue, though difficult to work out what. I develop chart on yosemite, so it can work. This post describes how I set up my machine for haskell:  <a href=\"https://twdkz.wordpress.com/2015/02/25/haskell-on-yosemite-osx-10-10/\" rel=\"nofollow noreferrer\">twdkz.wordpress.com/2015/02/25/haskell-on-yosemite-osx-10-10</a>"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1425002810, "creation_date": 1425002810, "question_id": 28756340, "link": "https://stackoverflow.com/questions/28756340/error-when-running-chart-cairo-haskell-program-on-yosemite", "title": "Error when running chart-cairo Haskell program on Yosemite", "body": "<p>I've installed <code>chart</code> and <code>chart-cairo</code> from Hackage using Cabal on my Yosemite 10.10 Macbook Pro Retina (x86_64). I'm trying to compile and run the following sample program from Chart's official site:</p>\n\n<pre><code>import Graphics.Rendering.Chart\nimport Data.Colour\nimport Data.Colour.Names\nimport Data.Default.Class\nimport Graphics.Rendering.Chart.Backend.Cairo\nimport Control.Lens\n\nsetLinesBlue :: PlotLines a b -&gt; PlotLines a b\nsetLinesBlue = plot_lines_style  . line_color .~ opaque blue\n\nchart = toRenderable layout\n  where\n    am :: Double -&gt; Double\n    am x = (sin (x*3.14159/45) + 1) / 2 * (sin (x*3.14159/5))\n\n    sinusoid1 = plot_lines_values .~ [[ (x,(am x)) | x &lt;- [0,(0.5)..400]]]\n              $ plot_lines_style  . line_color .~ opaque blue\n              $ plot_lines_title .~ \"am\"\n              $ def\n\n    sinusoid2 = plot_points_style .~ filledCircles 2 (opaque red)\n              $ plot_points_values .~ [ (x,(am x)) | x &lt;- [0,7..400]]\n              $ plot_points_title .~ \"am points\"\n              $ def\n\n    layout = layout_title .~ \"Amplitude Modulation\"\n           $ layout_plots .~ [toPlot sinusoid1,\n                              toPlot sinusoid2]\n           $ def\n\nmain = renderableToFile def \"example1_big.png\" chart\n</code></pre>\n\n<p>Doing so results on the following error:</p>\n\n<pre><code>[1 of 1] Compiling Main             ( haskell_chart.hs, haskell_chart.o )\nLinking haskell_chart ...\nUndefined symbols for architecture x86_64:\n  \"_iconv\", referenced from:\n      _hs_iconv in libHSbase-4.7.0.2.a(iconv.o)\n     (maybe you meant: _hs_iconv, _base_GHCziIOziEncodingziIconv_iconvEncoding9_info , _base_GHCziIOziEncodingziIconv_iconvEncoding9_closure , _base_GHCziIOziEncodingziIconv_iconvEncoding10_info , _base_GHCziIOziEncodingziIconv_iconvEncoding6_closure , _base_GHCziIOziEncodingziIconv_iconvEncoding10_closure , _base_GHCziIOziEncodingziIconv_iconvEncoding3_closure , _base_GHCziIOziEncodingziIconv_iconvEncoding8_closure , _base_GHCziIOziEncodingziIconv_iconvEncoding7_info , _base_GHCziIOziEncodingziIconv_iconvEncodingzuloc1_info , _base_GHCziIOziEncodingziIconv_iconvEncoding8_info , _base_GHCziIOziEncodingziIconv_iconvEncodingzuloc_closure , _hs_iconv_open , _base_GHCziIOziEncodingziIconv_iconvEncodingzuloc_info , _base_GHCziIOziEncodingziIconv_iconvEncoding2_info , _base_GHCziIOziEncodingziIconv_iconvEncoding4_closure , _base_GHCziIOziEncodingziIconv_iconvEncoding3_info , _base_GHCziIOziEncodingziIconv_iconvEncoding2_closure , _base_GHCziIOziEncodingziIconv_iconvEncoding6_info , _base_GHCziIOziEncodingziIconv_iconvEncodingzuloc1_closure , _hs_iconv_close , _base_GHCziIOziEncodingziIconv_iconvEncoding7_closure )\n  \"_iconv_close\", referenced from:\n      _hs_iconv_close in libHSbase-4.7.0.2.a(iconv.o)\n     (maybe you meant: _hs_iconv_close)\n  \"_iconv_open\", referenced from:\n      _hs_iconv_open in libHSbase-4.7.0.2.a(iconv.o)\n     (maybe you meant: _hs_iconv_open)\n  \"_locale_charset\", referenced from:\n      _localeEncoding in libHSbase-4.7.0.2.a(PrelIOUtils.o)\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<p>How can I fix it?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 3, "creation_date": 1425020730, "post_id": 28755554, "comment_id": 45798794, "body": "It&#39;s quadratic, but nice: <code>foldr (\\x r -&gt; x : takeWhile (&#47;= x) r) []</code>"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425019695, "post_id": 28755555, "comment_id": 45798414, "body": "Sorry for the gratuitous edits; I thought I could make a small change, then realized it would take a bit more, goofed that up, realized the whole idea would confuse the OP, and reverted to the original."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425020182, "post_id": 28755555, "comment_id": 45798597, "body": "But on the other hand, you do have a pretty serious efficiency problem even in your <code>takeUntilDuplicate&#39;</code>, because <code>++[x]</code> is slow. You can fix this using cons accumulation with <code>reverse</code> at the end; see my answer for another approach."}, {"owner": {"reputation": 11743, "user_id": 2597135, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/9b8c6248f917c92724a033de96708542?s=128&d=identicon&r=PG", "display_name": "Uli K&#246;hler", "link": "https://stackoverflow.com/users/2597135/uli-k%c3%b6hler"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425048069, "post_id": 28755555, "comment_id": 45813989, "body": "@dfeuer I always appreciate edits that try to improve an answer :-) You are correct about the <code>++ [x]</code>. I copied that part from the duplicate removal function. I think it might be more efficient to use <code>Data.Sequence</code> <code>|&gt;</code> for this task if you&#39;re not doing it one of the numerous better ways described in the other answers."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425051646, "post_id": 28755555, "comment_id": 45816263, "body": "You might be surprised. Building up a list by consing and then reversing the result is fast enough to beat <code>Seq</code> overhead in sufficiently simple applications. The problem with either of those approaches is that they unnecessarily build intermediate structures in memory and only use them later. This tends to be bad for cache utilization and generational GC. This problem inherently has one such (the set). Adding more just makes it worse. The solution is to use laziness, as other answers do, to <i>operationally</i> build the list from left to right."}], "tags": [], "owner": {"reputation": 11743, "user_id": 2597135, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/9b8c6248f917c92724a033de96708542?s=128&d=identicon&r=PG", "display_name": "Uli K&#246;hler", "link": "https://stackoverflow.com/users/2597135/uli-k%c3%b6hler"}, "is_accepted": false, "score": 2, "last_activity_date": 1425019606, "last_edit_date": 1495539955, "creation_date": 1424997543, "answer_id": 28755555, "question_id": 28755554, "link": "https://stackoverflow.com/questions/28755554/taking-from-a-list-until-encountering-a-duplicate/28755555#28755555", "title": "Taking from a list until encountering a duplicate", "body": "<p>You can use a modified version of <a href=\"https://stackoverflow.com/a/16108856/2597135\">this duplicate removal function</a>:</p>\n\n<pre><code>takeUntilDuplicate :: Eq a =&gt; [a] -&gt; [a]\ntakeUntilDuplicate = helper []\n    where helper seen [] = seen\n          helper seen (x:xs)\n              | x `elem` seen = seen\n              | otherwise = helper (seen ++ [x]) xs\n</code></pre>\n\n<p>Note that <code>elem</code> is quite inefficient for large lists. Assuming <code>a</code> (the data type inside the list) is an <code>Ord</code>type, this function could be improved by using <a href=\"http://hackage.haskell.org/package/containers-0.5.6.3/docs/Data-Set.html\" rel=\"nofollow noreferrer\"><code>Data.Set</code></a> for membership lookup:</p>\n\n<pre><code>import qualified Data.Set as Set\n\ntakeUntilDuplicate' :: (Eq a, Ord a) =&gt; [a] -&gt; [a]\ntakeUntilDuplicate' = helper Set.empty []\n    where helper seenSet seen [] = seen\n          helper seenSet seen (x:xs)\n              | x `Set.member` seenSet = seen\n              | otherwise = helper (Set.insert x seenSet) (seen ++ [x]) xs\n</code></pre>\n\n<p>If you don't care about the order of the results returned, the efficiency of the function can be improved further by returning a <code>Set</code>:</p>\n\n<p>import qualified Data.Set as Set\nimport Data.Set (Set)</p>\n\n<pre><code>takeUntilDuplicateSet :: (Eq a, Ord a) =&gt; [a] -&gt; Set a\ntakeUntilDuplicateSet = helper Set.empty\n    where helper seenSet [] = seenSet\n          helper seenSet (x:xs)\n              | x `Set.member` seenSet = seenSet\n              | otherwise = helper (Set.insert x seenSet) xs\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1425017579, "post_id": 28755756, "comment_id": 45797667, "body": "Isn&#39;t this sort of thing what <code>Comonad</code> is for? The approach is interesting, but it seems rather inappropriate in this context, since <code>elem</code> is horribly inefficient for lists."}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1425028516, "post_id": 28755756, "comment_id": 45802401, "body": "Since you ask about <code>Comonad</code>, nearly. Certainly things-in-contexts have comonad structure. Here we don&#39;t <i>redecorate</i> things-in-contexts, so we&#39;re not using much of that structure. And you&#39;re right that <code>elem</code> is relatively inefficient, especially if you have <code>Ord</code> to hand. Meanwhile, &quot;interesting...but inappropriate&quot; is what they&#39;ll write on my tombstone. The <code>picks</code> operation gives full contextual information, and is thus a handily adaptable component. It&#39;s the decorate-with-context design idea I want to get across. If naive contexts are a bottleneck, transform to something more searchable."}], "tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": false, "score": 4, "last_activity_date": 1424999897, "last_edit_date": 1495542268, "creation_date": 1424998789, "answer_id": 28755756, "question_id": 28755554, "link": "https://stackoverflow.com/questions/28755554/taking-from-a-list-until-encountering-a-duplicate/28755756#28755756", "title": "Taking from a list until encountering a duplicate", "body": "<p>Your point that <code>takeWhile</code> doesn't work because you have no contextual information for the individual elements suggests the following strategy: get it.</p>\n\n<p><a href=\"https://stackoverflow.com/a/12872133/828361\">This</a> answer of mine makes reference to the decorate-with-context operation, which I called <code>picks</code> (because it shows you all the way to pick one element on which to focus). It's the general decorate-with-its-context operation that we just ought to have for free for every containery thing. For lists, it is</p>\n\n<pre><code>picks :: [x] -&gt; [(x, ([x], [x]))] -- [(x-here, ([x-before], [x-after]))]\npicks [] = []\npicks (x : xs) = (x, ([], xs)) : [(y, (x : ys, zs)) | (y, (ys, zs)) &lt;- picks xs]\n</code></pre>\n\n<p>and it works perfectly well for infinite lists, while we're about it.</p>\n\n<p>Now have a go with</p>\n\n<pre><code>takeUntilDuplicate :: Eq x =&gt; [x] -&gt; [x]\ntakeUntilDuplicate = map fst . takeWhile (\\ (x, (ys, _)) -&gt; not (elem x ys)) . picks\n</code></pre>\n\n<p>(Curiously, I'm disturbed that the above one-liner is rejected for ambiguity of <code>Eq</code> if not given the above type signature. I'm tempted to ask a question about it, here. <em>Oh, it's the monomorphism restriction. How annoying.</em>)</p>\n\n<p><strong>Remark.</strong> It makes a lot of sense to (and I normally would) represent the \"elements before\" component that <code>picks</code> delivers using snoc-lists (lists which grow on the right), the better to preserve sharing and visual left-to-right-ness.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1425018345, "post_id": 28756160, "comment_id": 45797937, "body": "I like how easy this way is to understand."}], "tags": [], "owner": {"reputation": 28456, "user_id": 1094403, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/3770aa7eae5c211921493abd0d2c9f5a?s=128&d=identicon&r=PG", "display_name": "Luis Casillas", "link": "https://stackoverflow.com/users/1094403/luis-casillas"}, "is_accepted": true, "score": 9, "last_activity_date": 1425064523, "last_edit_date": 1425064523, "creation_date": 1425001611, "answer_id": 28756160, "question_id": 28755554, "link": "https://stackoverflow.com/questions/28755554/taking-from-a-list-until-encountering-a-duplicate/28756160#28756160", "title": "Taking from a list until encountering a duplicate", "body": "<p>One way to go about this is to update a piece of state as you traverse the list, similar to what you'd do in an imperative language.  This requires working with the <code>State</code> monad, which might take some studying and playing around to get it if it's your first time, but trust me, this is well worth learning.  Let's start with imports:</p>\n\n<pre><code>import Control.Monad.State\nimport Data.Set (Set)\nimport qualified Data.Set as Set\n</code></pre>\n\n<p>The state we're going to keep is the <code>Set</code> of elements seen up to that point in the list.  So first, let's write a pair of simple <code>State</code> actions to manage the set of seen elements:</p>\n\n<pre><code>-- Add an element to the context Set\nremember :: Ord a =&gt; a -&gt; State (Set a) ()\nremember a = modify (Set.insert a)\n\n-- Test if the context set contains an element\nhaveSeen :: Ord a =&gt; a -&gt; State (Set a) Bool\nhaveSeen a = do seen &lt;- get\n                return (a `Set.member` seen)\n</code></pre>\n\n<p>Now we're going to combine these two into an action that checks for duplication:</p>\n\n<pre><code>isDuplicate :: Ord a =&gt; a -&gt; State (Set a) Bool\nisDuplicate a = do seen &lt;- haveSeen a\n                   remember a\n                   return seen\n</code></pre>\n\n<p>You've mentioned the <code>takeWhile</code> function.  We're going to build our solution along similar lines.  This is <code>takeWhile</code>'s definition:</p>\n\n<pre><code>-- different name to avoid collision\ntakeWhile' :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\ntakeWhile' _ [] =  []\ntakeWhile' p (a:as)\n    | p a =  a : takeWhile p as\n    | otherwise =  []\n</code></pre>\n\n<p>We can modify this function to work with a predicate that has the <code>Bool</code> wrapped inside a monad:</p>\n\n<pre><code>takeWhileM :: Monad m =&gt; (a -&gt; m Bool) -&gt; [a] -&gt; m [a]\ntakeWhileM _ [] = return []\ntakeWhileM p (a:as) = \n    do test &lt;- p a\n       if test\n       then do rest &lt;- takeWhileM p as\n               return (a:rest)\n       else return []\n</code></pre>\n\n<p>But the key difference here is that because the test in <code>takeWhileM</code> is monadic, we can use our stateful <code>isDuplicate</code> from above.  So each time we test an element of the list with <code>isDuplicate</code>, we will also record that element in the <code>Set</code> that's being threaded through the computation.  So now we can write <code>takeUntilDuplicate</code> like this:</p>\n\n<pre><code>takeUntilDuplicate :: Ord a =&gt; [a] -&gt; [a]\ntakeUntilDuplicate as = evalState (takeUntilDuplicate' as) Set.empty\n    where takeUntilDuplicate' :: Ord a =&gt; [a] -&gt; State (Set a) [a]\n          takeUntilDuplicate' = takeWhileM (fmap not . isDuplicate)\n</code></pre>\n\n<p>Example use (with an infinite list argument):</p>\n\n<pre><code> &gt;&gt;&gt; takeUntilDuplicate (cycle [1..5])\n [1,2,3,4,5]\n</code></pre>\n\n<p>And what's neat is that several of these pieces of code could be reused for similar problems.</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 5, "last_activity_date": 1426552747, "last_edit_date": 1495542630, "creation_date": 1425020275, "answer_id": 28759274, "question_id": 28755554, "link": "https://stackoverflow.com/questions/28755554/taking-from-a-list-until-encountering-a-duplicate/28759274#28759274", "title": "Taking from a list until encountering a duplicate", "body": "<p>Assuming that you're dealing with <code>Ord</code> instances, you can do it like this. This is essentially the same idea as <a href=\"https://stackoverflow.com/a/28756160/1477667\">Luis Casillas's answer</a>, but expressed using a fold instead of <code>State</code>. Each of our answers uses a different generally applicable technique. Luis includes an excellent explanation of his; the classic explanation of mine is in \"A Tutorial on the Universality and Expressiveness of Fold\" by Graham Hutton.</p>\n\n<pre><code>import Data.Set (member)\nimport qualified Data.Set as S\n\ntakeUntilDuplicate :: Ord a =&gt; [a] -&gt; [a]\ntakeUntilDuplicate xs = foldr go (const []) xs S.empty\n  where\n    go x cont set\n      | x `member` set = []\n      | otherwise      = x : cont (S.insert x set)\n</code></pre>\n\n<p>If you are actually dealing with <code>Int</code> (or anything that can be converted to an <code>Int</code> really quickly), you can improve the performance substantially by using <code>Data.IntSet</code> or <code>Data.HashSet</code> instead of <code>Data.Set</code>.</p>\n"}], "owner": {"reputation": 11743, "user_id": 2597135, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/9b8c6248f917c92724a033de96708542?s=128&d=identicon&r=PG", "display_name": "Uli K&#246;hler", "link": "https://stackoverflow.com/users/2597135/uli-k%c3%b6hler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1294, "favorite_count": 3, "accepted_answer_id": 28756160, "answer_count": 4, "score": 3, "last_activity_date": 1426552747, "creation_date": 1424997543, "question_id": 28755554, "link": "https://stackoverflow.com/questions/28755554/taking-from-a-list-until-encountering-a-duplicate", "title": "Taking from a list until encountering a duplicate", "body": "<p>In Haskell, <code>takeWhile</code> allows one to take entries from a (potentially infinite) list until a certain condition does not hold.</p>\n\n<p>However, this condition can't depend on the previous entries of the list.</p>\n\n<p>How can I <code>take</code> entries from a (potentially infinite) list until I encounter the first duplicate as outlined in this example?</p>\n\n<pre><code>*Main&gt; takeUntilDuplicate [1,2,3,4,5,1,2,3,4]\n[1,2,3,4,5]\n</code></pre>\n"}, {"tags": ["haskell", "gtk", "drawing", "cairo"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1424998009, "post_id": 28755265, "comment_id": 45792547, "body": "Not a full answer, but: perhaps you can <a href=\"http://hackage.haskell.org/package/cairo-0.13.0.6/docs/Graphics-Rendering-Cairo.html#v:clip\" rel=\"nofollow noreferrer\">clip</a> the shape you want to fill, then draw your pattern overtop some easily-computable larger region than the shape covers."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1425001472, "post_id": 28755265, "comment_id": 45793442, "body": "This seems to do something similar by creating a pattern from an image and then tiling it into a shape: <a href=\"http://cairographics.org/samples/imagepattern/\" rel=\"nofollow noreferrer\">cairographics.org/samples/imagepattern</a>"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1425057764, "post_id": 28764678, "comment_id": 45820046, "body": "I don&#39;t see the string &quot;stipple&quot; anywhere on the linked page, by the way."}, {"owner": {"reputation": 6375, "user_id": 188533, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/ee6df2c2f3fa08aab32b10fde7023545?s=128&d=identicon&r=PG", "display_name": "drahnr", "link": "https://stackoverflow.com/users/188533/drahnr"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1425058589, "post_id": 28764678, "comment_id": 45820562, "body": "What stipple? The stipple is achieved by defining a patch of 8x8 size with manually defined data as done in oregano. <code>create_stipple</code> is a custom function doing exactly that as linked."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1425066825, "post_id": 28764678, "comment_id": 45824740, "body": "You give a link and describe it as having &quot;stipple details&quot;. But this is not obviously the case, as the link doesn&#39;t mention stipple at all. Perhaps you should change the link to point to documentation for your library, or update the description of the link to say what you expect people to find there."}, {"owner": {"reputation": 6375, "user_id": 188533, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/ee6df2c2f3fa08aab32b10fde7023545?s=128&d=identicon&r=PG", "display_name": "drahnr", "link": "https://stackoverflow.com/users/188533/drahnr"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1425069530, "post_id": 28764678, "comment_id": 45825961, "body": "the link to the oregano file. The link to cairo pattern just is the <i>reference</i> of what cairo already provides."}], "tags": [], "owner": {"reputation": 6375, "user_id": 188533, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/ee6df2c2f3fa08aab32b10fde7023545?s=128&d=identicon&r=PG", "display_name": "drahnr", "link": "https://stackoverflow.com/users/188533/drahnr"}, "is_accepted": true, "score": 3, "last_activity_date": 1425069676, "last_edit_date": 1425069676, "creation_date": 1425038465, "answer_id": 28764678, "question_id": 28755265, "link": "https://stackoverflow.com/questions/28755265/cairo-fill-a-polygon-with-a-hatch-pattern/28764678#28764678", "title": "Cairo fill a polygon with a hatch pattern", "body": "<pre><code>cairo_pattern_t *pattern = create_stipple (\"lightgrey\", (guchar *)stipple_data);\ncairo_matrix_init_scale (&amp;matrix, 1.0, 1.0);\ncairo_pattern_set_matrix (pattern, &amp;matrix);\nsome_shape = GOO_CANVAS_RECT (goo_canvas_rect_new (GOO_CANVAS_ITEM (group), 10.0, 10.0, 10.0, 10.0, \"fill-pattern\", pattern, \"visibility\", GOO_CANVAS_ITEM_INVISIBLE, NULL));\ncairo_pattern_destroy (pattern);\n</code></pre>\n\n<p>Taken from one of my pet projects <a href=\"https://github.com/drahnr/oregano/blob/master/src/sheet/rubberband.c\" rel=\"nofollow\">oregano @ github</a></p>\n\n<p>ALso have a look at the <a href=\"http://cairographics.org/manual/cairo-cairo-pattern-t.html#cairo-pattern-t\" rel=\"nofollow\">cairo API reference</a> which also covers generic pattern API</p>\n"}], "owner": {"reputation": 2337, "user_id": 3595992, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a8fc8a00391b1282338f66de57e3fea0?s=128&d=identicon&r=PG&f=1", "display_name": "JeanJouX", "link": "https://stackoverflow.com/users/3595992/jeanjoux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5361, "favorite_count": 1, "accepted_answer_id": 28764678, "answer_count": 1, "score": 3, "last_activity_date": 1425069676, "creation_date": 1424995816, "question_id": 28755265, "link": "https://stackoverflow.com/questions/28755265/cairo-fill-a-polygon-with-a-hatch-pattern", "title": "Cairo fill a polygon with a hatch pattern", "body": "<p>Is it possible with cairo to fill a box or a polygon with a hatch (or arbitrary) pattern like below ? I didn't find informatinos in the cairo documentation or hackage.</p>\n\n<p><img src=\"https://i.stack.imgur.com/WLsci.png\" alt=\"hatch pattern\"></p>\n\n<ul>\n<li>Are there built-in pattern in cairo ?</li>\n<li>What are the functions to fill with patterns ?</li>\n</ul>\n\n<p>I'm using haskell but a snippet in any language would be helpful.</p>\n"}, {"tags": ["arrays", "list", "haskell", "array-algorithms"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425021734, "post_id": 28755159, "comment_id": 45799222, "body": "Is the second list guaranteed to be a rearrangement of the first?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1425026341, "post_id": 28755159, "comment_id": 45801278, "body": "Theory predicts that without arrays, functional programming is at most O(log n) times slower. Indeed, you can replace an array with a tree map having O(log n) access instead of O(1). So, if you can spot a O(f(n)) algorithm in the imperative world, you know that you can achieve O(f(n) log f(n)) in the functional world. Whether this gap can be closed is still an open problem, AFAIK. (In practice, many functional languages support arrays directly so to avoid the issue)"}, {"owner": {"reputation": 16267, "user_id": 1346276, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Tu8Re.jpg?s=128&g=1", "display_name": "phipsgabler", "link": "https://stackoverflow.com/users/1346276/phipsgabler"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1425039199, "post_id": 28755159, "comment_id": 45808587, "body": "@chi Where could I read up on that theory (or, under which names should I search)?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 16267, "user_id": 1346276, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Tu8Re.jpg?s=128&g=1", "display_name": "phipsgabler", "link": "https://stackoverflow.com/users/1346276/phipsgabler"}, "edited": false, "score": 0, "creation_date": 1425042873, "post_id": 28755159, "comment_id": 45810771, "body": "@phg I&#39;m not an expert in this topic, but <a href=\"https://www.cs.princeton.edu/courses/archive/fall03/cs528/handouts/Pure%20Versus%20Impure%20LISP.pdf\" rel=\"nofollow noreferrer\">pure vs impure lisp</a> seems to be a good starting reference (Okasaki mentions it in his book, together with Ben-Amran &amp; Galil)."}, {"owner": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425316126, "post_id": 28755159, "comment_id": 45902741, "body": "@dfeuer yes, maybe &quot;some elements&quot; wasn&#39;t the best wording."}], "answers": [{"tags": [], "owner": {"reputation": 62902, "user_id": 90511, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/nmOPo.png?s=128&g=1", "display_name": "hugomg", "link": "https://stackoverflow.com/users/90511/hugomg"}, "is_accepted": false, "score": 6, "last_activity_date": 1424995562, "creation_date": 1424995562, "answer_id": 28755220, "question_id": 28755159, "link": "https://stackoverflow.com/questions/28755159/finding-all-the-indexes-of-some-elements-on-a-given-list-can-it-be-done-in-less/28755220#28755220", "title": "Finding all the indexes of some elements on a given list. Can it be done in less than O(n^2) without arrays in Haskell?", "body": "<p>One simple solution is to create a Data.Map or hash table using the second list so you can have O(log n) index lookups instead of O(n) ones.</p>\n"}, {"tags": [], "owner": {"reputation": 1219, "user_id": 1678659, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d3b14643cd59dfaafe7512671057ab93?s=128&d=identicon&r=PG&f=1", "display_name": "Tomer Amir", "link": "https://stackoverflow.com/users/1678659/tomer-amir"}, "is_accepted": false, "score": 0, "last_activity_date": 1424995892, "creation_date": 1424995892, "answer_id": 28755279, "question_id": 28755159, "link": "https://stackoverflow.com/questions/28755159/finding-all-the-indexes-of-some-elements-on-a-given-list-can-it-be-done-in-less/28755279#28755279", "title": "Finding all the indexes of some elements on a given list. Can it be done in less than O(n^2) without arrays in Haskell?", "body": "<p>First you will have to create a map of all the characters in the destination array and then you have two options:</p>\n\n<p>You can use <a href=\"http://en.m.wikipedia.org/wiki/Merge_sort\" rel=\"nofollow\">merge sort </a> sort the list in <code>O(n log n)</code> time, and if the array of tokens you are looking for is in constant length, you will do a constant number of searches in <code>O(log n)</code>.</p>\n\n<p>Another solutions is to take the destination array and put it all in a hash map, and then search there.</p>\n"}, {"comments": [{"owner": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "edited": false, "score": 0, "creation_date": 1425316328, "post_id": 28759762, "comment_id": 45902846, "body": "I think this answer is more functional since it doesn&#39;t use Hash tables, which use an array under the hood, I believe."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "edited": false, "score": 0, "creation_date": 1425360619, "post_id": 28759762, "comment_id": 45920336, "body": "@LayGonz&#225;lez, that kind of depends on how strictly you interpret &quot;hash table&quot;. In Haskell, a <code>HashMap</code> is represented as a trie."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 3, "last_activity_date": 1425022416, "creation_date": 1425022416, "answer_id": 28759762, "question_id": 28755159, "link": "https://stackoverflow.com/questions/28755159/finding-all-the-indexes-of-some-elements-on-a-given-list-can-it-be-done-in-less/28759762#28759762", "title": "Finding all the indexes of some elements on a given list. Can it be done in less than O(n^2) without arrays in Haskell?", "body": "<p>This can be also done in <code>O(n log n)</code> time with a couple of sorts. I assume that the second list is a permutation of the first one.</p>\n\n<pre><code>import Data.List\nimport Data.Ord\nimport Data.Function\n\ncorrespIx :: Ord a =&gt; [a] -&gt; [a] -&gt; [(Int, Int)]\ncorrespIx = zip `on` map fst . sortBy (comparing snd) . zip [0..]\n</code></pre>\n\n<p><code>correspIx</code> returns a list of pairs with the indices corresponding to each other:</p>\n\n<pre><code>correspIx \"dazb\" \"abzd\" == [(1,0),(3,1),(0,3),(2,2)]\n</code></pre>\n\n<p>We need another sort to get the result indicated in the question:</p>\n\n<pre><code>correspIx' :: Ord a =&gt; [a] -&gt; [a] -&gt; [Int]\ncorrespIx' xs ys = map snd $ sortBy (comparing fst) $ correspIx xs ys\n</code></pre>\n\n<p>Now <code>correspIx' \"dazb\" \"abzd\" == [3,0,2,1]</code>.</p>\n"}], "owner": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "accepted_answer_id": 28759762, "answer_count": 3, "score": 2, "last_activity_date": 1425316239, "creation_date": 1424995171, "last_edit_date": 1425316239, "question_id": 28755159, "link": "https://stackoverflow.com/questions/28755159/finding-all-the-indexes-of-some-elements-on-a-given-list-can-it-be-done-in-less", "title": "Finding all the indexes of some elements on a given list. Can it be done in less than O(n^2) without arrays in Haskell?", "body": "<p>Given 2 lists of unique, orderable, non-contiguous elements, say:</p>\n\n<pre><code>['d', 'a', 'z', 'b']\n</code></pre>\n\n<p>I want to find their index in another list, say:</p>\n\n<pre><code>['a', 'b', 'z', 'd']\n</code></pre>\n\n<p>The result would be a list with their positions:</p>\n\n<pre><code>[3, 0, 2, 1]  -- element at 0 is at 3,\n              -- element at 1 is at 0, etc.\n</code></pre>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1425029465, "post_id": 28754979, "comment_id": 45802895, "body": "These MR issues appear so frequently here on SO that I think GHC should at least warn about them by default (assuming that turning off MR by default is undesirable). E.g. on a type error, if the expression contains some monomorphically inferred terms, GHC should output a warning about them."}], "answers": [{"comments": [{"owner": {"reputation": 303, "user_id": 2415103, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/88VIe.png?s=128&g=1", "display_name": "Feryll", "link": "https://stackoverflow.com/users/2415103/feryll"}, "edited": false, "score": 0, "creation_date": 1424995249, "post_id": 28755057, "comment_id": 45791727, "body": "Thanks, both solutions are insightful. Just when I thought I&#39;d come across all the obscure stumbling blocks in the domain of my basic applications!"}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 6, "last_activity_date": 1424994671, "creation_date": 1424994671, "answer_id": 28755057, "question_id": 28754979, "link": "https://stackoverflow.com/questions/28754979/haskell-inferred-explicit-types-of-where-bindings/28755057#28755057", "title": "Haskell Inferred/Explicit Types of Where Bindings", "body": "<p>This is caused by the dreaded <a href=\"https://wiki.haskell.org/Monomorphism_restriction\">monomorphism restriction</a>. Disable it with <code>NoMonomorphismRestriction</code>.</p>\n\n<pre><code>{-# LANGUAGE NoMonomorphismRestriction #-}\n\nimport Data.List\n\ntype Graph a = [a]\n\ndegreeNumbers :: (Eq a) =&gt; Graph a -&gt; [Int]\ndegreeNumbers g = undefined\n\nisoByDegree :: (Eq a, Eq b) =&gt; Graph a -&gt; Graph b -&gt; Bool\nisoByDegree g1 g2 = degs g1 == degs g2\n        where degs = sort . degreeNumbers\n</code></pre>\n\n<p>If you don't want to disable the monomorhism restriction, you can give the declaration for <code>degs</code> an explicit signature. </p>\n\n<pre><code>isoByDegree :: (Eq a, Eq b) =&gt; Graph a -&gt; Graph b -&gt; Bool\nisoByDegree g1 g2 = degs g1 == degs g2\n        where\n            degs :: (Eq c) =&gt; Graph c -&gt; [Int]\n            degs = sort . degreeNumbers\n</code></pre>\n\n<p>Adding a signature to the right hand side of the declaration only gives the expression on the right hand side an explicit type (which is the same as what would be inferred); it doesn't make the <code>degs</code> declaration polymorphic.</p>\n"}, {"tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 2, "last_activity_date": 1424994697, "creation_date": 1424994697, "answer_id": 28755064, "question_id": 28754979, "link": "https://stackoverflow.com/questions/28754979/haskell-inferred-explicit-types-of-where-bindings/28755064#28755064", "title": "Haskell Inferred/Explicit Types of Where Bindings", "body": "<p>Because you're giving a type declaration to the right-hand-side of the equation, rather than the left, Haskell still uses type inference to figure out the type of <code>degs</code>. And because of the monomorphism restriction, it will only infer a monomorphic type for something that doesn't \"look\" like a function. The fix is to explicitly annotate the thing you are naming, rather than the value you are giving to its name:</p>\n\n<pre><code>isoByDegree :: (Eq a, Eq b) =&gt; Graph a -&gt; Graph b -&gt; Bool\nisoByDegree g1 g2 = degs g1 == degs g2\n  where degs :: (Eq c) =&gt; Graph c -&gt; [Int]\n        degs = sort . degreeNumbers\n</code></pre>\n"}], "owner": {"reputation": 303, "user_id": 2415103, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/88VIe.png?s=128&g=1", "display_name": "Feryll", "link": "https://stackoverflow.com/users/2415103/feryll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 28755057, "answer_count": 2, "score": 2, "last_activity_date": 1424995038, "creation_date": 1424994177, "last_edit_date": 1424995038, "question_id": 28754979, "link": "https://stackoverflow.com/questions/28754979/haskell-inferred-explicit-types-of-where-bindings", "title": "Haskell Inferred/Explicit Types of Where Bindings", "body": "<p>I'm trying to write a function that compares the lists of degrees of the nodes in two given graphs for a sufficiency test of isomorphism, but I noticed the following code throws errors related to the type of <code>degs</code>:</p>\n\n<pre><code>import Data.List\n\ndegreeNumbers :: (Eq a) =&gt; Graph a -&gt; [Int]\ndegreeNumbers g = ...\n\nisoByDegree :: (Eq a, Eq b) =&gt; Graph a -&gt; Graph b -&gt; Bool\nisoByDegree g1 g2 = degs g1 == degs g2\n        where degs = sort . degreeNumbers\n</code></pre>\n\n<p>Even when I try to bind <code>degs</code> with an explicit declaration like</p>\n\n<pre><code>where degs = (sort . degreeNumbers) :: (Eq c) =&gt; Graph c -&gt; [Int]\n</code></pre>\n\n<p>it still says it's expecting a type of <code>Graph a</code> rather than <code>Graph b</code> upon being applied to <code>g2</code>. Of course, there's the plain solution of</p>\n\n<pre><code>isoByDegree g1 g2 = (sort . degreeNumbers) g1 == (sort . degreeNumbers) g2\n</code></pre>\n\n<p>but I'm wondering what's going wrong with the binding approach.</p>\n"}, {"tags": ["unit-testing", "haskell", "monads", "yesod", "hspec"], "comments": [{"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1425204067, "post_id": 28754272, "comment_id": 45859336, "body": "I think you need to use the <code>before</code> function from hspec to make this work, something like <code>\\(x, y) -&gt; before (return x) $ ...</code>"}], "owner": {"reputation": 7168, "user_id": 1449964, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/87e463011e9c8e62cc67a6c688bf88c1?s=128&d=identicon&r=PG", "display_name": "Alexandr Kurilin", "link": "https://stackoverflow.com/users/1449964/alexandr-kurilin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1424990793, "creation_date": 1424990793, "question_id": 28754272, "link": "https://stackoverflow.com/questions/28754272/passing-more-values-into-hspec-tests-cases-with-yesod", "title": "Passing more values into hspec tests cases with Yesod", "body": "<p>I'm trying to enhance my current test fixtures with passing more than just foundation (of type <code>App</code>) into hspec test cases. In the example below I'm passing an additional Text value inside of a tuple (as <code>IO (App, Text)</code> ) as opposed to directly returning <code>IO App</code></p>\n\n<pre><code>beforeOp :: IO (App, Text)\nbeforeOp = do\n  settings &lt;- loadAppSettings\n    [\"config/test-settings.yml\", \"config/settings.yml\"]\n    []\n    ignoreEnv\n  foundation &lt;- makeFoundation settings\n  wipeDB foundation\n  setUpFixtures foundation\n  return (foundation, \"foo\")\n\ninnerSpec :: SpecWith (App, Text)\ninnerSpec = do\n  describe \"stuff\" $ do\n    it \"should work\" $ do\n      post MyRouteR\n      statusIs 403\n\nspec :: Spec\nspec = before beforeOp innerSpec\n</code></pre>\n\n<p>I can't figure out how to correctly structure <code>innerSpec</code> in such a way that I can do my normal Yesod testing with functions such as <code>post</code>, <code>statusIs</code> etc, but also have the <code>Text</code> value be available to those specs for reading.</p>\n\n<p>Without Yesod I can do something along the lines of the following:</p>\n\n<pre><code>innerSpec :: SpecWith (Int, Int)\ninnerSpec = do\n  describe \"stuff\" $ do\n    it \"should work\" $ \\(x, y) -&gt; do\n      x `shouldBe` y\n</code></pre>\n\n<p>and it will build just fine, but I can't quite get the types right as soon as Yesod comes into the mix. Advice?</p>\n"}, {"tags": ["haskell", "pattern-matching"], "answers": [{"comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424994993, "post_id": 28753354, "comment_id": 45791652, "body": "View patterns are very useful with you have a function with many cases, but the cases are done with functions returning a Maybe, and you never actually pattern match on the intermediate type. Things like <code>f x | Just y &lt;- g0 x = ...; Just y &lt;- g1 x = ...</code> versus <code>f (g0 -&gt; Just y); f (g0 -&gt; Just y)</code> - the latter is much nicer because it doesn&#39;t bind a useless variable (<code>x</code> in the first case)."}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 1, "creation_date": 1424995970, "post_id": 28753354, "comment_id": 45791939, "body": "It&#39;s certainly worth supporting pattern matching which makes use of intermediate computations. The trouble is that view patterns give good support only to this Just-or-bust style. We should be able to have more than one bite at the result of an intermediate compuation without having to leave the left-hand side. But I agree that gratuitous extra naming is annoying, so it might be useful to have some more compact notation (when the intermediate computation depends on just one pattern variable and is matched once) and I also want nonlinear patterns instead of an extra name and an equality guard."}, {"owner": {"reputation": 2846, "user_id": 4347335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7e6f293a134a5defec74e12cae42cc?s=128&d=identicon&r=PG&f=1", "display_name": "cchalmers", "link": "https://stackoverflow.com/users/4347335/cchalmers"}, "edited": false, "score": 2, "creation_date": 1425024141, "post_id": 28753354, "comment_id": 45800259, "body": "Rnhmjoj: you can still use ViewPatterns, just replace <code>(readMaybe -&gt; Nothing)</code> with <code>_</code>."}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 0, "creation_date": 1425028986, "post_id": 28753354, "comment_id": 45802652, "body": "Certainly, this example can be replaced by a Just-or-bust use of view patterns. It&#39;s the general &quot;move case left of =&quot; strategy that&#39;s problematic."}], "tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": true, "score": 11, "last_activity_date": 1424987093, "creation_date": 1424987093, "answer_id": 28753354, "question_id": 28753054, "link": "https://stackoverflow.com/questions/28753054/how-to-write-this-case-expression-with-the-view-pattern-syntax/28753354#28753354", "title": "How to write this case expression with the view pattern syntax?", "body": "<p>They're not equivalent. The <code>case</code> version has one <code>readMaybe</code>, the view pattern version has two. For every <code>readMaybe</code>, the compiler has to infer which type is the target of the attempt to read. When the code says</p>\n\n<pre><code>parse xs x = case readMaybe x of\n  Just x  -&gt; Right (x : xs)\n  Nothing -&gt; Left \"Syntax error\n</code></pre>\n\n<p>the GHC detective notices that in your <code>Just x</code> case, <code>x</code> ends up consed to <code>xs</code>, and so must take whatever type the elements of <code>xs</code> have. And that's good work.</p>\n\n<p>But when you write</p>\n\n<pre><code>parse xs (readMaybe -&gt; Just x ) = Right (x : xs)\nparse xs (readMaybe -&gt; Nothing) = Left \"Syntax error\"\n</code></pre>\n\n<p>you create two separate find-the-target-type problems, one for each use of <code>readMaybe</code>. The first of these is solved in just the same way as in the <code>case</code> case, but for the second, read individually,</p>\n\n<pre><code>parse xs (readMaybe -&gt; Nothing) = Left \"Syntax error\"\n</code></pre>\n\n<p>there is just no clue <em>what</em> it is that you are failing to read, and no reason to believe it is the same thing as in the line above.</p>\n\n<p>Generally, it is inappropriate to use view patterns unless there is only one outcome of interest. They are the wrong syntax if you want to do an intermediate computation <em>once</em>, but analyse the result into more than one case. I am happy to remain on the record that I consider them a misfeature for this reason.</p>\n"}], "owner": {"reputation": 745, "user_id": 1926884, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1783f4ed8a98a1a4b7a7321d4cea3fa4?s=128&d=identicon&r=PG", "display_name": "Rnhmjoj", "link": "https://stackoverflow.com/users/1926884/rnhmjoj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 487, "favorite_count": 1, "accepted_answer_id": 28753354, "answer_count": 1, "score": 8, "last_activity_date": 1424987093, "creation_date": 1424985985, "question_id": 28753054, "link": "https://stackoverflow.com/questions/28753054/how-to-write-this-case-expression-with-the-view-pattern-syntax", "title": "How to write this case expression with the view pattern syntax?", "body": "<p>After I have read the example of a <a href=\"http://learnyouahaskell.com/functionally-solving-problems#reverse-polish-notation-calculator\">RPN calculator</a> in \"Learn You a Haskell for Great Good!\" I wanted to rewrite it myself in a more general way.</p>\n\n<p>In order to easily extend the available functions I put these in separated lists and pattern matched with the <code>lookup</code> function using the <code>ViewPatterns</code> syntax. To read the input with <code>read</code> I wrote this:</p>\n\n<pre><code>parse xs x = case readMaybe x of\n  Just x  -&gt; Right (x : xs)\n  Nothing -&gt; Left \"Syntax error\n</code></pre>\n\n<p>but I'd rather avoid a case expression and use again the view pattern like this:</p>\n\n<pre><code>parse xs (readMaybe -&gt; Just x ) = Right (x : xs)\nparse xs (readMaybe -&gt; Nothing) = Left \"Syntax error\"\n</code></pre>\n\n<p>However with the latter I'm getting this error:\n<code>No instance for (Read a0) arising from a use of \u2018readMaybe\u2019</code></p>\n\n<p>I don't understand why. Aren't they equivalent?</p>\n\n<p>The whole code is <a href=\"http://hastebin.com/pabequnaba.hs\">here</a>.</p>\n"}, {"tags": ["haskell", "interpreter", "continuations", "lambda-calculus", "interpretation"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 1, "creation_date": 1424983864, "post_id": 28752112, "comment_id": 45786958, "body": "Is this a homework question? What have you tried for the lambda-mu calculus?"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424983999, "post_id": 28752112, "comment_id": 45787018, "body": "In the wikipedia article and the linked paper, what do the brackets <code>[x]</code> mean when <code>x</code> isn&#39;t a \u03bc-variable or the brackets aren&#39;t followed by an unnamed term?"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424984180, "post_id": 28752112, "comment_id": 45787107, "body": "What does <code>v&#47;x</code> mean when <code>v</code> is unnamed and <code>x</code> is an identifier? What does <code>&#47;</code> mean when both are unnamed terms? When both are \u03bc-variables?"}, {"owner": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 1, "creation_date": 1424985145, "post_id": 28752112, "comment_id": 45787574, "body": "It is not a homework question. It would be a terribly difficult homework, don&#39;t you think? I have unfortunately no idea on how to attack this question."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424985325, "post_id": 28752112, "comment_id": 45787662, "body": "It would probably be appropriate homework for the course whose readings you linked to."}, {"owner": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424985600, "post_id": 28752112, "comment_id": 45787801, "body": "It is not a course, but it is a research paper published in 1992 in the <a href=\"http://dl.acm.org/citation.cfm?id=663989\" rel=\"nofollow noreferrer\">proceedings of the International Conference on Logic Programming and Automated Reasoning (LPAR &#39;92)</a>."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 1, "creation_date": 1425057454, "post_id": 28752112, "comment_id": 45819863, "body": "I&#39;ve been thinking about bringing lambda-mu calculus to Haskell from time to time for a couple of years! It&#39;s great that there appear questions (at least, about modeling it), so that this topic becomes more widely known. I&#39;ve always had the impression that lambda-mu calculus could be the base for a nice, fine-grained IO interface for pure functional stuff. (say, respecting commutativity or dependencies between actions) Cf. the issues from the recent discussion around <a href=\"http://stackoverflow.com/q/22430686/94687\">withSocketsDo</a> and <a href=\"http://okmij.org/ftp/Haskell/extensible/\" rel=\"nofollow noreferrer\">Extensible Effects</a>."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 1, "creation_date": 1425057783, "post_id": 28752112, "comment_id": 45820057, "body": "I&#39;ll continue on why I think it&#39;s appropriate for IO. The calculus has a dual nature, so that if you turn the programs inside-out and substitute lambdas with mu and mu with lambdas you must probably get the view from the environment on your program. So, mu lets you program effect-request handlers, and put them at the place they are naturally needed in the program, without the need to thread a state (world) through the code, or hide it in a monad. That&#39;s how I see it. I&#39;d be glad to hear any comments or criticisms. I&#39;m still very far (intellectually/because of time) from trying to implement it."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 1, "creation_date": 1425058349, "post_id": 28752112, "comment_id": 45820413, "body": "&quot;the view from the environment on your program&quot; means: as if you are programming the environment (the OS) which must interface with your program. This must a very powerful, flexible thing which allows to interleave effects and computations in arbitrary complex ways (but still safe)."}, {"owner": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "reply_to_user": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425066181, "post_id": 28752112, "comment_id": 45824433, "body": "@imz--IvanZakharyaschev: Your proposal is very interesting. Since you know so well the lambda-mu calculus, do you have any suggestion how to translate it into Haskell as I did for lambda-calculus in my question. The crux is to understand what are the denotational semantics for mu and square brackets (naming)."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425068984, "post_id": 28752112, "comment_id": 45825691, "body": "I got to know \u03bb\u03bc-calculus through the work of <a href=\"http://www.academia.edu/3004538/Moortgat_Continuation_semantics_for_symmetric_categorial_grammar\" rel=\"nofollow noreferrer\">Bernardi&amp;Moortgat</a> which is devoted to the foundation of the theory of grammar (linguistics). They cite&amp;use the work by Curien/Herbelin on \u03bb\u03bc-calculus with continuation semantics. Section 4 of the paper with the semantics is of most interest here. Reading the paper I&#39;m referring to has the drawback for you that (extra stuff!) they work with another linguistically-motivated calculus, translate it into \u03bb\u03bc and give an interpretation for it."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 1, "creation_date": 1425070269, "post_id": 28752112, "comment_id": 45826335, "body": "(15) and (16) from the Bernardi&amp;Moortgat paper are the kind of translations you are looking for. (\u03bb\u03bc-terms are in the 2nd column there.) But, as you will see (the mu-tilde), the Curien/Herbelin system is formally a bit different from the initial \u03bb\u03bc-calculus, but the idea is the same. Bernardi&amp;Moortgat work on a calculus with left and right application, therefore you&#39;ll see unusual expressions in the 2nd column instead of normal application and abstraction."}, {"owner": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "reply_to_user": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425073245, "post_id": 28752112, "comment_id": 45827818, "body": "@imz--IvanZakharyaschev: Thank you for the reference. This is indeed the kind of translation I need. I will add the reference to my post."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 1, "creation_date": 1425073940, "post_id": 28752112, "comment_id": 45828142, "body": "BTW, there must be different interpretations of lambda-calculus as well: call-by-value vs call-by-name vs lazy etc. Your code is call-by-value: <code>F f -&gt; f (interpret env e2)</code>. Normally, the result is the same. But in their work on grammar, Bernardi&amp;Moortgat demonstrated that you could assign a meaning (in lamda-mu calculus) with the wanted behaviour to a word under cbn, but not under cbv. I&#39;ll try elaborate on what happens there. So, as for me, having an interest in this because of the linguistic applications, a cbn translation would be even more interesting (to experiment with grammars)."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 1, "creation_date": 1425129648, "post_id": 28752112, "comment_id": 45840939, "body": "This seems very relevant: <a href=\"http://homepages.inf.ed.ac.uk/wadler/papers/dual-reloaded/dual-reloaded.pdf\" rel=\"nofollow noreferrer\">homepages.inf.ed.ac.uk/wadler/papers/dual-reloaded/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 3, "creation_date": 1424985038, "post_id": 28752681, "comment_id": 45787533, "body": "I don&#39;t think the <code>DataKinds</code> and <code>GADT</code> complexity is required for this problem. I think something as simple as adding a single <code>Mu</code> constructor to <code>Expr</code> (which is now all unnamed terms), <code>data Expr = Var String | Lam String Expr | App Expr Expr | Mu String Named </code>, and another type for unnamed terms, <code>data Named = Named String Expr</code> should be sufficient. I also find the descriptions of the semantics impenetrable."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 2, "creation_date": 1424985121, "post_id": 28752681, "comment_id": 45787563, "body": "I disagree with the down-vote. A data type for mu-expressions is a solid step forward from what was presented in the question."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424994545, "post_id": 28752681, "comment_id": 45791494, "body": "@Cirdec I agree that a GADT is not needed. However, I initially thought that Lam and Var var should both be parametric in <code>n</code>, which I believe does require GADTs (can&#39;t be done with plain ADTs). I presented this solution anyways because it is more powerful in general. The semantics is the more interesting part, I believe, so hopefully the OP will clarify or be inspired by this start."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 1, "creation_date": 1425022008, "post_id": 28752681, "comment_id": 45799341, "body": "If the only way to get an <code>Expr Named</code> is from <code>Name</code>, and they can only be used as the argument to <code>Mu</code>, doesn&#39;t that mean we can collapse the two into <code>Mu :: MuVar -&gt; MuVar -&gt; Expr Unnamed -&gt; Expr Unnamed</code>? (I haven&#39;t fully read the paper yet, maybe it introduces other <code>Named</code> stuff later on)"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1425055937, "post_id": 28752681, "comment_id": 45818891, "body": "@Cactus I expected that to be the case, but didn&#39;t suggest it because I don&#39;t understand the paper well enough to determine if we ever need to manipulate something we know to be named outside of knowing it is in a \u03bc abstraction."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "edited": false, "score": 0, "creation_date": 1425058121, "post_id": 28752681, "comment_id": 45820265, "body": "@user2407038 I&#39;ve written down in the comments (at the top) some of my intuitions (possibly wrong) why lamda-mu calculus is of great interest for practical functional programming. (I could be wrong about some things.)"}, {"owner": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "edited": false, "score": 0, "creation_date": 1425065599, "post_id": 28752681, "comment_id": 45824159, "body": "@user2407038: If I could clarify by giving the denotational semantics of the lambda-mu calculus, then I could answer myself my question."}], "tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": false, "score": 3, "last_activity_date": 1425022659, "last_edit_date": 1425022659, "creation_date": 1424984564, "answer_id": 28752681, "question_id": 28752112, "link": "https://stackoverflow.com/questions/28752112/interpret-parigots-lambda-mu-calculus-in-haskell/28752681#28752681", "title": "interpret Parigot&#39;s lambda-mu calculus in Haskell", "body": "<p>Note: this is only a partial answer since I'm not sure how to extend the interpreter.</p>\n\n<p>This seems like a good use case for DataKinds. The <code>Expr</code> datatype is indexed on a type which is named or unnamed. The regular lambda constructs produce named terms only.</p>\n\n<pre><code>{-# LANGUAGE GADTs, DataKinds, KindSignatures #-} \n\ndata TermType = Named | Unnamed \n\ntype Var = String\ntype MuVar = String \n\ndata Expr (n :: TermType) where \n  Var :: Var -&gt; Expr Unnamed\n  Lam :: Var -&gt; Expr Unnamed -&gt; Expr Unnamed\n  App :: Expr Unnamed -&gt; Expr Unnamed -&gt; Expr Unnamed \n</code></pre>\n\n<p>and the additional <code>Mu</code> and <code>Name</code> constructs can manipulate the <code>TermType</code>.</p>\n\n<pre><code>  ...\n  Name :: MuVar -&gt; Expr Unnamed -&gt; Expr Named \n  Mu :: MuVar -&gt; Expr Named -&gt; Expr Unnamed\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1425022132, "post_id": 28759635, "comment_id": 45799383, "body": "That&#39;s quite an eloquent way to profess ignorance, Dr. Erdi."}, {"owner": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "edited": false, "score": 5, "creation_date": 1425065949, "post_id": 28759635, "comment_id": 45824315, "body": "This is a nice piece of work! But, if I understand well, you have implemented the operational semantics of the lambda-mu calculus. However I am asking a for a denotational semantics in the form of a translation of lambda-mu calculus into Haskell. That is to say as I did for lambda-calculus in my question where: the lambda of the lambda-mu calculus is translated with a lambda in Haskell, and the application of the lambda-mu calculus is translated with an application in Haskell."}, {"owner": {"reputation": 4530, "user_id": 94687, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/ef249e4381c9d55297cddc4bd5b5c3c2?s=128&d=identicon&r=PG", "display_name": "imz -- Ivan Zakharyaschev", "link": "https://stackoverflow.com/users/94687/imz-ivan-zakharyaschev"}, "reply_to_user": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "edited": false, "score": 4, "creation_date": 1425068071, "post_id": 28759635, "comment_id": 45825285, "body": "@Bob I don&#39;t think this is so easy, because lambda-mu is more &quot;powerful&quot;, Haskell is poorer in the set of basic notions. You see, if the task were to translate an imperative program into Haskell, you couldn&#39;t do that without inventing some notion as the world state or IO monad and making the imperative statements&#39; semantics have a type which is &quot;lifted&quot; to to the level of threading world-states or of <code>IO a</code>. And this inventing can be big work. Isn&#39;t the semantics of lamda-mu calculus known to be translated quite naturally to programs with <code>call&#47;cc</code>? So let&#39;s look for continuations&amp;semantics..."}, {"owner": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "edited": false, "score": 1, "creation_date": 1425072521, "post_id": 28759635, "comment_id": 45827460, "body": "I indeed believe the interpreter for lambda-mu calculus should use continuations."}], "tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": false, "score": 5, "last_activity_date": 1425093936, "last_edit_date": 1425093936, "creation_date": 1425021869, "answer_id": 28759635, "question_id": 28752112, "link": "https://stackoverflow.com/questions/28752112/interpret-parigots-lambda-mu-calculus-in-haskell/28759635#28759635", "title": "interpret Parigot&#39;s lambda-mu calculus in Haskell", "body": "<p>Here's a mindless transliteration of the reduction rules from the paper, using @user2407038's representation (as you'll see, when I say mindless, I really do mean mindless):</p>\n\n<pre><code>{-# LANGUAGE DataKinds, KindSignatures, GADTs #-}\n{-# LANGUAGE StandaloneDeriving #-}\n\nimport Control.Monad.Writer\nimport Control.Applicative\nimport Data.Monoid\n\ndata TermType = Named | Unnamed\n\ntype Var = String\ntype MuVar = String\n\ndata Expr (n :: TermType) where\n  Var :: Var -&gt; Expr Unnamed\n  Lam :: Var -&gt; Expr Unnamed -&gt; Expr Unnamed\n  App :: Expr Unnamed -&gt; Expr Unnamed -&gt; Expr Unnamed\n  Freeze :: MuVar -&gt; Expr Unnamed -&gt; Expr Named\n  Mu :: MuVar -&gt; Expr Named -&gt; Expr Unnamed\nderiving instance Show (Expr n)\n\nsubstU :: Var -&gt; Expr Unnamed -&gt; Expr n -&gt; Expr n\nsubstU x e = go\n  where\n    go :: Expr n -&gt; Expr n\n    go (Var y) = if y == x then e else Var y\n    go (Lam y e) = Lam y $ if y == x then e else go e\n    go (App f e) = App (go f) (go e)\n    go (Freeze alpha e) = Freeze alpha (go e)\n    go (Mu alpha u) = Mu alpha (go u)\n\nrenameN :: MuVar -&gt; MuVar -&gt; Expr n -&gt; Expr n\nrenameN beta alpha = go\n  where\n    go :: Expr n -&gt; Expr n\n    go (Var x) = Var x\n    go (Lam x e) = Lam x (go e)\n    go (App f e) = App (go f) (go e)\n    go (Freeze gamma e) = Freeze (if gamma == beta then alpha else gamma) (go e)\n    go (Mu gamma u) = Mu gamma $ if gamma == beta then u else go u\n\nappN :: MuVar -&gt; Expr Unnamed -&gt; Expr n -&gt; Expr n\nappN beta v = go\n  where\n    go :: Expr n -&gt; Expr n\n    go (Var x) = Var x\n    go (Lam x e) = Lam x (go e)\n    go (App f e) = App (go f) (go e)\n    go (Freeze alpha w) = Freeze alpha $ if alpha == beta then App (go w) v else go w\n    go (Mu alpha u) = Mu alpha $ if alpha /= beta then go u else u\n\nreduceTo :: a -&gt; Writer Any a\nreduceTo x = tell (Any True) &gt;&gt; return x\n\nreduce0 :: Expr n -&gt; Writer Any (Expr n)\nreduce0 (App (Lam x u) v) = reduceTo $ substU x v u\nreduce0 (App (Mu beta u) v) = reduceTo $ Mu beta $ appN beta v u\nreduce0 (Freeze alpha (Mu beta u)) = reduceTo $ renameN beta alpha u\nreduce0 e = return e\n\nreduce1 :: Expr n -&gt; Writer Any (Expr n)\nreduce1 (Var x) = return $ Var x\nreduce1 (Lam x e) = reduce0 =&lt;&lt; (Lam x &lt;$&gt; reduce1 e)\nreduce1 (App f e) = reduce0 =&lt;&lt; (App &lt;$&gt; reduce1 f &lt;*&gt; reduce1 e)\nreduce1 (Freeze alpha e) = reduce0 =&lt;&lt; (Freeze alpha &lt;$&gt; reduce1 e)\nreduce1 (Mu alpha u) = reduce0 =&lt;&lt; (Mu alpha &lt;$&gt; reduce1 u)\n\nreduce :: Expr n -&gt; Expr n\nreduce e = case runWriter (reduce1 e) of\n    (e', Any changed) -&gt; if changed then reduce e' else e\n</code></pre>\n\n<p>It \"works\" for the example from the paper: with</p>\n\n<pre><code>example 0 = App (App t (Var \"x\")) (Var \"y\")\n  where\n    t = Lam \"x\" $ Lam \"y\" $ Mu \"delta\" $ Freeze \"phi\" $ App (Var \"x\") (Var \"y\")   \nexample n = App (example (n-1)) (Var (\"z_\" ++ show n))\n</code></pre>\n\n<p>I can reduce <code>example n</code> to the expected result:</p>\n\n<pre><code>*Main&gt; reduce (example 10)\nMu \"delta\" (Freeze \"phi\" (App (Var \"x\") (Var \"y\")))\n</code></pre>\n\n<p>The reason I put scare quotes around \"works\" above is that I have no intuition about the \u03bb\u03bc calculus so I don't know what it should do.</p>\n"}, {"tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": false, "score": 1, "last_activity_date": 1425638035, "creation_date": 1425638035, "answer_id": 28896945, "question_id": 28752112, "link": "https://stackoverflow.com/questions/28752112/interpret-parigots-lambda-mu-calculus-in-haskell/28896945#28896945", "title": "interpret Parigot&#39;s lambda-mu calculus in Haskell", "body": "<p>How about something like the below. I don't have a good idea on how to traverse <code>Value a</code>, but at least I can see it evaluates <code>example n</code> into <code>MuV</code>.</p>\n\n<pre><code>import Data.Maybe\n\ntype Var = String\ntype MuVar = String\n\ndata Expr = Var Var\n          | Lam Var Expr\n          | App Expr Expr\n          | Mu MuVar MuVar Expr\n          deriving Show\n\ndata Value a = ConV a\n             | LamV (Value a -&gt; Value a)\n             | MuV (Value a -&gt; Value a)\n\ntype Env a = [(Var, Value a)]\ntype MuEnv a = [(MuVar, Value a -&gt; Value a)]\n\nvarScopeErr :: Var -&gt; Value a\nvarScopeErr v = error $ unwords [\"Out of scope \u03bb variable:\", show v]\n\nappErr :: Value a\nappErr = error \"Trying to apply a non-lambda\"\n\nmuVarScopeErr :: MuVar -&gt; (Value a -&gt; Value a)\nmuVarScopeErr alpha = id\n\napp :: Value a -&gt; Value a -&gt; Value a\napp (LamV f) x = f x\napp (MuV f) x = MuV $ \\y -&gt; f x `app` y\napp _ _ = appErr\n\neval :: Env a -&gt; MuEnv a -&gt; Expr -&gt; Value a\neval env menv (Var v) = fromMaybe (varScopeErr v) $ lookup v env\neval env menv (Lam v e) = LamV $ \\x -&gt; eval ((v, x):env) menv e\neval env menv (Mu alpha beta e) = MuV $ \\u -&gt;\n  let menv' = (alpha, (`app` u)):menv\n      wrap = fromMaybe (muVarScopeErr beta) $ lookup beta menv'\n  in wrap (eval env menv' e)\neval env menv (App f e) = eval env menv f `app` eval env menv e\n\nexample 0 = App (App t (Var \"v\")) (Var \"w\")\n  where\n    t = Lam \"x\" $ Lam \"y\" $ Mu \"delta\" \"phi\" $ App (Var \"x\") (Var \"y\")\nexample n = App (example (n-1)) (Var (\"z_\" ++ show n))\n</code></pre>\n"}], "owner": {"reputation": 1315, "user_id": 3780931, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7ed60a7e72a67346cacc5173dd359c65?s=128&d=identicon&r=PG&f=1", "display_name": "Bob", "link": "https://stackoverflow.com/users/3780931/bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 796, "favorite_count": 5, "answer_count": 3, "score": 9, "last_activity_date": 1425638035, "creation_date": 1424982485, "last_edit_date": 1425073514, "question_id": 28752112, "link": "https://stackoverflow.com/questions/28752112/interpret-parigots-lambda-mu-calculus-in-haskell", "title": "interpret Parigot&#39;s lambda-mu calculus in Haskell", "body": "<p>One can interpret the lambda calculus in Haskell:</p>\n\n<pre><code>data Expr = Var String | Lam String Expr | App Expr Expr\n\ndata Value a = V a | F (Value a -&gt; Value a)\n\ninterpret :: [(String, Value a)] -&gt; Expr -&gt; Value a\ninterpret env (Var x) = case lookup x env of\n  Nothing -&gt; error \"undefined variable\"\n  Just v -&gt; v\ninterpret env (Lam x e) = F (\\v -&gt; interpret ((x, v):env) e)\ninterpret env (App e1 e2) = case interpret env e1 of\n  V _ -&gt; error \"not a function\"\n  F f -&gt; f (interpret env e2)\n</code></pre>\n\n<p>How could the above interpreter be extended to the <a href=\"http://en.wikipedia.org/wiki/Lambda-mu_calculus\">lambda-mu calculus</a>? My guess is that it should use continuations for interpreting the additional constructs in this calculus. (15) and (16) from the <a href=\"http://disi.unitn.it/~bernardi/Papers/wollic07.pdf\">Bernardi&amp;Moortgat paper</a> are the kind of translations I expect.</p>\n\n<p>It is possible since Haskell is Turing-complete, but how?</p>\n\n<p><strong>Hint:</strong> See the comment on page 197 on <a href=\"http://www.cs.ru.nl/~freek/courses/tt-2011/papers/parigot.pdf\">this research paper</a> for the intuitive meaning of the mu binder.</p>\n"}, {"tags": ["haskell", "clojure"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 2, "creation_date": 1424969154, "post_id": 28748003, "comment_id": 45778125, "body": "You can use JSON, Haskell is quite good at JSON as it turns out.  The <code>aeson</code> library is popular for this.  There&#39;s also a plethora of other libraries out on hackage for configuration purposes.  Use whatever you want.  YAML can be parsed easily, INI would be almost trivial, make your own format for all I care.  Haskell has libraries that make it really easy to write parsers, so you can use whatever."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424970898, "post_id": 28748531, "comment_id": 45779273, "body": "Depending on the application, it may be useful to consider something like the <code>persistent</code> package."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424971013, "post_id": 28748531, "comment_id": 45779349, "body": "Shouldn&#39;t that be <code>instance FromJSON Foo</code>?  I think you accidentally a <code>Foo</code> there."}, {"owner": {"reputation": 5992, "user_id": 74497, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0d4a7e6c8edd88e835508df8397592e5?s=128&d=identicon&r=PG", "display_name": "ocharles", "link": "https://stackoverflow.com/users/74497/ocharles"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424983749, "post_id": 28748531, "comment_id": 45786900, "body": "@bheklilr I did indeed accidentally a <code>Foo</code>. Thanks!"}], "tags": [], "owner": {"reputation": 5992, "user_id": 74497, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0d4a7e6c8edd88e835508df8397592e5?s=128&d=identicon&r=PG", "display_name": "ocharles", "link": "https://stackoverflow.com/users/74497/ocharles"}, "is_accepted": true, "score": 6, "last_activity_date": 1424983761, "last_edit_date": 1424983761, "creation_date": 1424970536, "answer_id": 28748531, "question_id": 28748003, "link": "https://stackoverflow.com/questions/28748003/haskell-equivalent-of-json-or-edn/28748531#28748531", "title": "Haskell Equivalent of Json or Edn", "body": "<p>The answer is: all of the above! Haskell has libraries for <a href=\"http://hackage.haskell.org/package/aeson\" rel=\"nofollow\">JSON</a>, <a href=\"http://hackage.haskell.org/package/hedn\" rel=\"nofollow\">EDN</a>, <a href=\"http://hackage.haskell.org/package/yaml\" rel=\"nofollow\">YAML</a>, <a href=\"http://hackage.haskell.org/package/cassava\" rel=\"nofollow\">CSV</a>, and many more. I believe all of these libraries have support for generic programming, which means they can automatically derive a schema for you.</p>\n\n<p>An example using JSON, would be:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\nimport GHC.Generics\nimport Data.Aeson\n\ndata Foo = Foo { fooA :: Int, fooB :: Char, fooC :: String }\n  deriving (Generic)\n\ninstance ToJSON Foo\ninstance FromJSON Foo\n</code></pre>\n\n<p>Now you can use <code>encode</code> or <code>decode</code> on you <code>Foo</code>s without any more work.</p>\n\n<p>A simpler, but less recommend, option would be to use <code>Read</code> and <code>Show</code>:</p>\n\n<pre><code>data Foo = ... as before\n  deriving (Read, Show)\n</code></pre>\n\n<p>This would allow you to do <code>show (Foo ...)</code> and <code>let foo = read someString</code>.</p>\n"}], "owner": {"reputation": 1516, "user_id": 496112, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/772ab2a207cb180ed699d22959b72dd9?s=128&d=identicon&r=PG", "display_name": "Steve", "link": "https://stackoverflow.com/users/496112/steve"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 349, "favorite_count": 0, "closed_date": 1424976534, "accepted_answer_id": 28748531, "answer_count": 1, "score": 1, "last_activity_date": 1469223504, "creation_date": 1424969093, "last_edit_date": 1469223504, "question_id": 28748003, "link": "https://stackoverflow.com/questions/28748003/haskell-equivalent-of-json-or-edn", "closed_reason": "Opinion-based", "title": "Haskell Equivalent of Json or Edn", "body": "<p>In Javascript, if I want to store a configuration, I use Json. In Clojure, I use EDN, what is recommended in Haskell? Yaml?</p>\n"}, {"tags": ["haskell", "functional-programming", "tuples"], "comments": [{"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 3, "creation_date": 1424963514, "post_id": 28745788, "comment_id": 45774316, "body": "What is the intention of <code>encode_single</code> ? What is it supposed to do? What is <code>count</code> function?"}, {"owner": {"reputation": 1147, "user_id": 1498618, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iOfuB.png?s=128&g=1", "display_name": "Reed Oei", "link": "https://stackoverflow.com/users/1498618/reed-oei"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1424963614, "post_id": 28745788, "comment_id": 45774370, "body": "It&#39;s the 10th problem from: <a href=\"https://wiki.haskell.org/99_questions/1_to_10\" rel=\"nofollow noreferrer\">wiki.haskell.org/99_questions/1_to_10</a>, count is just a custom function for finding the length of a list."}], "answers": [{"tags": [], "owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "is_accepted": true, "score": 5, "last_activity_date": 1424963498, "creation_date": 1424963498, "answer_id": 28745985, "question_id": 28745788, "link": "https://stackoverflow.com/questions/28745788/how-to-create-a-base-case-for-a-tuple-in-haskell/28745985#28745985", "title": "How to create a base case for a tuple in Haskell?", "body": "<p>First of all, what you received is only a <em>warning</em>, not an error. Haskell does not <strong>need</strong> the base case of the empty list, it just <em>suggests</em> it.</p>\n\n<p>Partial functions are most often an anti-pattern in functional programming so it just points out something that <strong>may</strong> be wrong. You can avoid the warning in different ways.</p>\n\n<p>The first one is to make your function safe: if it cannot always return a value it's return type shouldn't be <code>(Int, a)</code> but <code>Maybe (Int, a)</code>, so you could do:</p>\n\n<pre><code>encode_single :: (Eq a) =&gt; [a] -&gt; Maybe (Int, a)\nencode_single [] = Nothing\nencode_single (x:xs) = Just (count xs + 1, x)\n</code></pre>\n\n<p>Otherwise you'd <em>have</em> to return a meaningful value for the empty case (just returning <code>undefined</code> isn't better than not defining that case). It <em>might</em> be appropriate to do somethign like:</p>\n\n<pre><code>encode_single [] = (0, undefined)\n</code></pre>\n\n<p>However this assumes that any code that uses the result of <code>encode_single</code> will not evaluate the second element of the tuple if the first element is zero (note that if the list isn't empty the first element is always positive, so <code>0</code> can be used as a sentinel value).</p>\n\n<p>This may or may not be the case. However one thing is sure: this is not compile-time safe so you may receive some run-time errors when calling such a function.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424964424, "post_id": 28746025, "comment_id": 45774875, "body": "s/of that specification/in any way at all/"}], "tags": [], "owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "is_accepted": false, "score": 2, "last_activity_date": 1424963584, "creation_date": 1424963584, "answer_id": 28746025, "question_id": 28745788, "link": "https://stackoverflow.com/questions/28745788/how-to-create-a-base-case-for-a-tuple-in-haskell/28746025#28746025", "title": "How to create a base case for a tuple in Haskell?", "body": "<p>Simply enough: at the type you desire you cannot write a total function of that specification. You need to change the type.</p>\n\n<p>You can either add a default <code>a</code> or indicate partiality using <code>Maybe</code>.</p>\n\n<pre><code>encode_single :: a -&gt; [a] -&gt; (Int, a)\nencode_single :: [a] -&gt; Maybe (Int, a)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 0, "last_activity_date": 1424975280, "creation_date": 1424975280, "answer_id": 28750014, "question_id": 28745788, "link": "https://stackoverflow.com/questions/28745788/how-to-create-a-base-case-for-a-tuple-in-haskell/28750014#28750014", "title": "How to create a base case for a tuple in Haskell?", "body": "<p>if you cannot change the type signature, you can piggyback on <code>head</code> i.e.</p>\n\n<pre><code>encode_single :: [a] -&gt; (Int, a)\nencode_single a = (length a, head a)\n</code></pre>\n\n<p>obviously, empty list input is not handled properly.</p>\n"}], "owner": {"reputation": 1147, "user_id": 1498618, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iOfuB.png?s=128&g=1", "display_name": "Reed Oei", "link": "https://stackoverflow.com/users/1498618/reed-oei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 801, "favorite_count": 0, "accepted_answer_id": 28745985, "answer_count": 3, "score": 0, "last_activity_date": 1424975280, "creation_date": 1424963016, "question_id": 28745788, "link": "https://stackoverflow.com/questions/28745788/how-to-create-a-base-case-for-a-tuple-in-haskell", "title": "How to create a base case for a tuple in Haskell?", "body": "<p>I have the following function:</p>\n\n<pre><code>encode_single :: (Eq a) =&gt; [a] -&gt; (Int, a)\nencode_single (x:xs) = (count xs + 1, x)\n</code></pre>\n\n<p>However, Haskell complained about needing a base case, but I don't know how to do this because of the generic <code>a</code> type.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "cabal", "cabal-install"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424964843, "post_id": 28745558, "comment_id": 45775181, "body": "I believe <code>global constraint requires ==2.1.3.1</code> means that mtl-2.1.3.1 is installed in the global package db and cabal says &quot;we are going to use that version&quot;, but that version isn&#39;t compatible with the other constraints. This can perhaps be solved by placing an appropriate mtl dependency in your cabal file."}, {"owner": {"user_type": "does_not_exist", "display_name": "user2879704"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1424965658, "post_id": 28745558, "comment_id": 45775788, "body": "but, i don&#39;t see haskell libs sitting in <code>usr&#47;local&#47;lib&#47;x86_64-linux-ghc-7.6.3&#47;</code>? am i searching in the wrong place?"}, {"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 1, "creation_date": 1424974679, "post_id": 28745558, "comment_id": 45781511, "body": "The &quot;global constraints&quot; are the ones the Stackage LTS config file specifies."}, {"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 5, "creation_date": 1424979352, "post_id": 28745558, "comment_id": 45784350, "body": "So the Stackage LTS config file contains the constraint <code>transformers installed</code>, meaning that only an already present version of <code>transformers</code> can be used. This is reasonable, because GHC ships with a specific version of <code>transformers</code>. For <code>ghc-7.8</code>, this is <code>transformers-0.3.0.0</code>. For some reason, this installed version is not considered by <code>cabal-install</code>. Your partial log doesn&#39;t contain sufficient info to see why."}], "answers": [{"tags": [], "owner": {"reputation": 3185, "user_id": 241899, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/56dfa400a964081e78a0be24978e7cdf?s=128&d=identicon&r=PG", "display_name": "Vitaly Olegovitch", "link": "https://stackoverflow.com/users/241899/vitaly-olegovitch"}, "is_accepted": true, "score": 2, "last_activity_date": 1433076521, "creation_date": 1433076521, "answer_id": 30557624, "question_id": 28745558, "link": "https://stackoverflow.com/questions/28745558/cabal-install-global-constraint-requires-installed-instance/30557624#30557624", "title": "cabal install --- global constraint requires installed instance", "body": "<p>You should have a <code>cabal.config</code> file in your current directory. Open it with any text editor and serach for the <code>transformers installed</code> string.</p>\n\n<p>Once you have found it, replace it with <code>transformers ==0.4.3.0</code> or any other version you like.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user2879704"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1529, "favorite_count": 0, "accepted_answer_id": 30557624, "answer_count": 1, "score": 5, "last_activity_date": 1433076521, "creation_date": 1424962456, "last_edit_date": 1424965500, "question_id": 28745558, "link": "https://stackoverflow.com/questions/28745558/cabal-install-global-constraint-requires-installed-instance", "title": "cabal install --- global constraint requires installed instance", "body": "<p>My cabal dependencies are listed as</p>\n\n<pre><code>base ==4.6.*, containers ==0.5.*, bytestring ==0.10.*, binary ==0.5.*, parsec ==3.1.*\n</code></pre>\n\n<p>i did,</p>\n\n<pre><code>cabal sandbox init\nwget http://www.stackage.org/lts/cabal.config\ncabal install --only-dependencies\n</code></pre>\n\n<p>To overcome dependency conflicts, i am using sandbox installation. But still, cabal is talking about some global constraints which is confusing for me.</p>\n\n<p>Cabal dependency tree resolution gets screwed as,</p>\n\n<pre><code>    trying: parsec-3.1.8 (dependency of myproj-0.1.0.0)\nnext goal: mtl (dependency of parsec-3.1.8)\nrejecting: mtl-2.2.1, 2.2.0.1, 2.2 (global constraint requires ==2.1.3.1)\ntrying: mtl-2.1.3.1\nnext goal: transformers (dependency of mtl-2.1.3.1)\nrejecting: transformers-0.4.2.0, 0.4.1.0, 0.3.0.0, 0.2.2.1, 0.2.2.0, 0.2.1.0,\n0.2.0.0, 0.1.4.0, 0.1.3.0, 0.1.1.0, 0.1.0.1, 0.1.0.0, 0.0.1.0, 0.0.0.0,\n0.4.0.0 (global constraint requires installed instance)\n</code></pre>\n"}, {"tags": ["file", "haskell", "io"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 2, "creation_date": 1424956913, "post_id": 28743220, "comment_id": 45769808, "body": "Where&#39;s your <code>else</code>? You probably wanted to use <code>when</code> instead of <code>if</code>"}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1424957165, "post_id": 28743220, "comment_id": 45769989, "body": "i thought that <code>else</code> is not necessary. I also could not find any doc on <code>when</code> usage."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424957319, "post_id": 28743220, "comment_id": 45770072, "body": "<code>else</code> is mandatory in Haskell (otherwise, what would <code>10 + (if 3==4 then 2)</code> be?). For <code>when</code> you need to <code>import Control.Monad</code>"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 2, "creation_date": 1424957606, "post_id": 28743220, "comment_id": 45770254, "body": "Why are you writing <code>if False == ...</code>? This seems unnatural."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1424957901, "post_id": 28743220, "comment_id": 45770433, "body": "@BartekBanachewicz I have edited the question. Actually &quot;I store my previous session state state in a file. I read this file before starting the program. However, during the first run of program, file may not exist. In this case, i want to first create file first with default value and then proceed ahead.&quot;"}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1424958207, "post_id": 28743220, "comment_id": 45770640, "body": "@BartekBanachewicz        Can i initialize <code>contents</code> with the <code>dummyBoard</code> in <code>then</code> case <code>else</code> initialize it after reading from the file ?"}], "answers": [{"comments": [{"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1424957314, "post_id": 28743737, "comment_id": 45770068, "body": "i would remove <code>dim</code> that was some refactoring isssue."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1424957982, "post_id": 28743737, "comment_id": 45770496, "body": "i want to do the <code>do stuff</code> part after writing to the file. i do not have any <code>else</code> logic. Can i iniitalize <code>contents</code> with <code>dummyBoard</code> in that case ? How ?"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1424958256, "post_id": 28743737, "comment_id": 45770680, "body": "@AshishNegi In that case you can just give <code>return ()</code> in the else part. After that read the file and put your logic there."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1424958347, "post_id": 28743737, "comment_id": 45770745, "body": "I am sorry but i meant that i am using the file only for initializating the data. I have to <code>do the stuff</code> always. either with <code>data from file</code> or with <code>dummyBoard</code>."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1424958493, "post_id": 28743737, "comment_id": 45770855, "body": "@AshishNegi Put the logic part after the <code>if - else</code> expression."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1424958681, "post_id": 28743737, "comment_id": 45770979, "body": "1. you have a return () in your else. 2. how to inilialize <code>contents</code> with <code>dummyBoard</code>"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 2, "creation_date": 1424958970, "post_id": 28743737, "comment_id": 45771173, "body": "@AshishNegi I think you are confusing with the word <code>return ()</code>. Haskell <code>return</code> has a different meaning that other language&#39;s <code>return</code>. <code>return</code> is not the control - exit path of program. When you put the logic after <code>if-else</code>, it will be executed even if it goes to the <code>else</code> part of your <code>if</code> expression."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1424959268, "post_id": 28743737, "comment_id": 45771366, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/71785/discussion-between-ashish-negi-and-sibi\">continue this discussion in chat</a>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424969389, "post_id": 28743737, "comment_id": 45778293, "body": "<code>if condition then action else return ()</code> is usually better written <code>when condition action</code>, which in practice usually ends up being <code>when (condition) $ action</code>."}], "tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 5, "last_activity_date": 1424960741, "last_edit_date": 1424960741, "creation_date": 1424957252, "answer_id": 28743737, "question_id": 28743220, "link": "https://stackoverflow.com/questions/28743220/haskell-write-to-file-it-if-it-does-not-exists-before-reading/28743737#28743737", "title": "haskell write to file it if it does not exists before reading", "body": "<p>There are some problem with your codebase:</p>\n\n<ul>\n<li>You are missing the <code>else</code> part of your <code>if</code> expression. In Haskell, since <code>if</code> is an expression , it would need the <code>else</code> part as opposed to other languages where the <code>if-else</code> are statements and the else part is not mandatory.</li>\n<li>What exactly is <code>dim</code> ? You have to define it.</li>\n</ul>\n\n<p>A working program which shows similar in concept of what you want to do will look like this:</p>\n\n<pre><code>main :: IO()\nmain = do\n\n   let fileName = \"somefile.txt\"\n\n   fileExist &lt;- doesFileExist fileName\n\n   if not fileExist\n   then writeFile fileName \"something\"\n   else return ()\n\n   contents &lt;- readFile fileName\n   -- do stuff with contents here\n\n   putStrLn \"Done\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": false, "score": 1, "last_activity_date": 1425013821, "creation_date": 1425013821, "answer_id": 28757950, "question_id": 28743220, "link": "https://stackoverflow.com/questions/28743220/haskell-write-to-file-it-if-it-does-not-exists-before-reading/28757950#28757950", "title": "haskell write to file it if it does not exists before reading", "body": "<p>You had a second part of the question which hasn't been answered yet.</p>\n\n<blockquote>\n  <p>Also, i think that rather than writing <code>dummyBoard</code> to the file i can just initialize the contents with <code>dummyBoard</code>. But i also failed in doing it. And i guess the way should be the same for both.</p>\n</blockquote>\n\n<p>Indeed you can, as follows:</p>\n\n<pre><code>contents &lt;- if fileExist\n    then readFile fileName\n    else return $ unlines dummyBoard\n</code></pre>\n"}], "owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2479, "favorite_count": 0, "accepted_answer_id": 28743737, "answer_count": 2, "score": 3, "last_activity_date": 1425013821, "creation_date": 1424955776, "last_edit_date": 1424959785, "question_id": 28743220, "link": "https://stackoverflow.com/questions/28743220/haskell-write-to-file-it-if-it-does-not-exists-before-reading", "title": "haskell write to file it if it does not exists before reading", "body": "<p>I am learning haskell and am stumbled upon the <code>parse error on input contents'</code> compilation error.</p>\n\n<p><em>What i want to do :</em></p>\n\n<p>I store my previous session state state in a file. I read this file before starting the program. However, during the first run of program, file may not exist. In this case, i want to first create file first with default value and then proceed ahead.</p>\n\n<pre><code>main :: IO()\nmain = do\n    -- Take input\n   let fileName = \"ashish-temp.txt\"\n\n   let dummyBoard = take 5 $ repeat \"-----\"\n\n   fileExist &lt;- doesFileExist fileName\n\n   if False == fileExist\n   then writeFile fileName $ unlines dummyBoard\n\n   -- getting an error on this line\n   contents &lt;- readFile fileName\n\n   -- do processing () :)\n\n   --  i want the value in contents\n   putStrLn \"Done\"\n</code></pre>\n\n<p>Also, i think that rather than writing <code>dummyBoard</code> to the file i can just initialize the contents with <code>dummyBoard</code>. But i also failed in doing it. And i guess the way should be the same for both.</p>\n\n<p>Please help. \nThanks.</p>\n\n<p><strong>Edit</strong> Solution: </p>\n\n<p><code>else</code> is required for every <code>if</code> in haskell.</p>\n\n<p>Also another problem that you would face after this problem is :\n<code>*** Exception: ashish-temp.txt: openFile: resource busy (file is locked)</code></p>\n\n<p>use <code>import qualified System.IO.Strict as S</code> and <code>S.redFile</code> for reading file.</p>\n"}, {"tags": ["arrays", "haskell", "types"], "answers": [{"comments": [{"owner": {"reputation": 2001, "user_id": 988361, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9a433a44669c3a5dd72fb9065ec52b81?s=128&d=identicon&r=PG", "display_name": "egdmitry", "link": "https://stackoverflow.com/users/988361/egdmitry"}, "edited": false, "score": 0, "creation_date": 1424943784, "post_id": 28738912, "comment_id": 45761630, "body": "Thanks! It&#39;s weird that <code>:i</code> didn&#39;t show the precedence, so I assumed it was standard."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "reply_to_user": {"reputation": 2001, "user_id": 988361, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9a433a44669c3a5dd72fb9065ec52b81?s=128&d=identicon&r=PG", "display_name": "egdmitry", "link": "https://stackoverflow.com/users/988361/egdmitry"}, "edited": false, "score": 4, "creation_date": 1424946173, "post_id": 28738912, "comment_id": 45763207, "body": "@egdmitry <code>infixl 9</code> <i>is</i> the default precedence for any operator or function used infix, so it doesn&#39;t get listed."}], "tags": [], "owner": {"reputation": 7030, "user_id": 3032349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3cd8d19756aa9bc73d8045ae988ae728?s=128&d=identicon&r=PG&f=1", "display_name": "ThreeFx", "link": "https://stackoverflow.com/users/3032349/threefx"}, "is_accepted": false, "score": 3, "last_activity_date": 1424943650, "creation_date": 1424943650, "answer_id": 28738912, "question_id": 28738850, "link": "https://stackoverflow.com/questions/28738850/data-arrays-operator-priority/28738912#28738912", "title": "Data.Array&#39;s // operator priority", "body": "<p><a href=\"https://hackage.haskell.org/package/array-0.5.0.0/docs/Data-Array.html\" rel=\"nofollow\">The documentation</a> mentions a precedence of <code>9</code>:</p>\n\n<pre><code>(//) :: Ix i =&gt; Array i e -&gt; [(i, e)] -&gt; Array i e     | infixl 9 |\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2001, "user_id": 988361, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9a433a44669c3a5dd72fb9065ec52b81?s=128&d=identicon&r=PG", "display_name": "egdmitry", "link": "https://stackoverflow.com/users/988361/egdmitry"}, "edited": false, "score": 0, "creation_date": 1424987658, "post_id": 28739475, "comment_id": 45788795, "body": "What&#39;s the terminology? Is an operator a function in infix form?"}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "reply_to_user": {"reputation": 2001, "user_id": 988361, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9a433a44669c3a5dd72fb9065ec52b81?s=128&d=identicon&r=PG", "display_name": "egdmitry", "link": "https://stackoverflow.com/users/988361/egdmitry"}, "edited": false, "score": 2, "creation_date": 1425017417, "post_id": 28739475, "comment_id": 45797612, "body": "@egdmitry Essentially, although you can convert. <code>++</code> is an operator symbol which is an operator by default, and <code>zip</code> is an identifier, but <code>(++)</code> can be used as an identifier (you can even have <code>let (++) = 2 in (++)+(++)</code>) and <code>`zip` </code> is an operator. See <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-240003.2\" rel=\"nofollow noreferrer\">the Haskell Report</a>."}], "tags": [], "owner": {"reputation": 6500, "user_id": 57879, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/419a88bdf20aeaa3fb2de53ca0f4d836?s=128&d=identicon&r=PG", "display_name": "yatima2975", "link": "https://stackoverflow.com/users/57879/yatima2975"}, "is_accepted": true, "score": 11, "last_activity_date": 1424945177, "creation_date": 1424945177, "answer_id": 28739475, "question_id": 28738850, "link": "https://stackoverflow.com/questions/28738850/data-arrays-operator-priority/28739475#28739475", "title": "Data.Array&#39;s // operator priority", "body": "<p>Function application binds tighter than any operator, so your expression doesn't need parentheses for the same reason that, say, this one doesn't: </p>\n\n<pre><code>zip [1,2,3,4] [5,6,7,8] ++ zip [20,30] [30,40]\n</code></pre>\n\n<p>The priority and fixity of <code>(//)</code> isn't important at all here!</p>\n"}], "owner": {"reputation": 2001, "user_id": 988361, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9a433a44669c3a5dd72fb9065ec52b81?s=128&d=identicon&r=PG", "display_name": "egdmitry", "link": "https://stackoverflow.com/users/988361/egdmitry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 28739475, "answer_count": 2, "score": 1, "last_activity_date": 1424945177, "creation_date": 1424943464, "question_id": 28738850, "link": "https://stackoverflow.com/questions/28738850/data-arrays-operator-priority", "title": "Data.Array&#39;s // operator priority", "body": "<p>I have noticed that in the following example:    </p>\n\n<pre><code>incrementByIndices :: Array Int Int -&gt; [Int] -&gt; Array Int Int\nincrementByIndices arr indices = arr // zip indices (map (\\i -&gt; arr!i + 1) indices)\n</code></pre>\n\n<p>zip doesn't have to be surrounded by parenthesis. Why is that so? <code>:i (//)</code> didn't show different priority for <code>//</code> so I assume it's regular function application. Why don't I have a type check error stating that <code>zip</code> can't be <code>//</code>'s argument?</p>\n\n<p>Contrary to:</p>\n\n<pre><code>nub nub [1,2,3]\n</code></pre>\n"}, {"tags": ["haskell", "typeclass", "contravariance"], "comments": [{"owner": {"reputation": 1178, "user_id": 1940209, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/247799acb8cb63c48d278c09eb455283?s=128&d=identicon&r=PG", "display_name": "aavogt", "link": "https://stackoverflow.com/users/1940209/aavogt"}, "edited": false, "score": 0, "creation_date": 1425084087, "post_id": 28737332, "comment_id": 45831459, "body": "Did you end up trying this variation using associated types <a href=\"http://lpaste.net/6307517597139075072\" rel=\"nofollow noreferrer\">lpaste.net/6307517597139075072</a> ?"}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 1178, "user_id": 1940209, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/247799acb8cb63c48d278c09eb455283?s=128&d=identicon&r=PG", "display_name": "aavogt", "link": "https://stackoverflow.com/users/1940209/aavogt"}, "edited": false, "score": 0, "creation_date": 1425089638, "post_id": 28737332, "comment_id": 45832702, "body": "@aavogt Pretty sure that&#39;s the same as my first attempt, yeah. The issue was that the intermediate applications of <code>dApply</code> generated ambiguous type variable errors, even with the type of the final result fully specified"}, {"owner": {"reputation": 1178, "user_id": 1940209, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/247799acb8cb63c48d278c09eb455283?s=128&d=identicon&r=PG", "display_name": "aavogt", "link": "https://stackoverflow.com/users/1940209/aavogt"}, "edited": false, "score": 0, "creation_date": 1425093988, "post_id": 28737332, "comment_id": 45833430, "body": "Was <code>unFunc |$| fa |*| fb |*| fc</code> enough to trigger that in your case, or were you testing with something else? fwiw, with my paste, ghci can infer <code>unFunc |$| fa |*| fb |*| fc :: Divisible f =&gt; f a</code>"}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 1178, "user_id": 1940209, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/247799acb8cb63c48d278c09eb455283?s=128&d=identicon&r=PG", "display_name": "aavogt", "link": "https://stackoverflow.com/users/1940209/aavogt"}, "edited": false, "score": 0, "creation_date": 1425098964, "post_id": 28737332, "comment_id": 45834126, "body": "@aavogt Hmm, I&#39;ll give it a go when I&#39;ve got my dev machine handy. Maybe there&#39;s something different I didn&#39;t spot."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 1178, "user_id": 1940209, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/247799acb8cb63c48d278c09eb455283?s=128&d=identicon&r=PG", "display_name": "aavogt", "link": "https://stackoverflow.com/users/1940209/aavogt"}, "edited": false, "score": 0, "creation_date": 1425180418, "post_id": 28737332, "comment_id": 45854952, "body": "@aavogt That works perfectly as an answer to this question. I&#39;m not sure how I missed that; I think possibly when I was trying things that simple I was still trying to implement my combined Applicative/Divisible class directly, and in that case got the kind of ambiguous type variable errors I&#39;m talking about. If you want to make that an answer, I&#39;ll accept it."}], "answers": [{"comments": [{"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1424947747, "post_id": 28739440, "comment_id": 45764242, "body": "I find <code>func |$| fa |*| fb |*| fc |!| unFunc</code> is slightly hilarious; I may go with it purely for that reason. It does make &quot;curried&quot; usage a bit less pleasant though. And yeah, I&#39;d noticed that Divisible &quot;likes&quot; to be right associative; <code>|$| = contramap; |*| = divided</code> I believe works with my desired source text exactly <i>if</i> they&#39;re right associative. <code>|$| = divide; |*| = (.: divided)</code> <i>almost</i> works, but you either need an extra <code>|*| conquer</code> or have to change the last <code>|*|</code> to <code>$</code> (depending on whether you have the extra on the end or not)."}], "tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": false, "score": 3, "last_activity_date": 1424945757, "last_edit_date": 1424945757, "creation_date": 1424945126, "answer_id": 28739440, "question_id": 28737332, "link": "https://stackoverflow.com/questions/28737332/can-this-multi-parameter-type-class-be-simplified/28739440#28739440", "title": "Can this multi-parameter type class be simplified?", "body": "<p>I think the problem here is that \"<code>Applicative</code> style\" fits <em>horribly</em> with the way <code>Divisible</code>s compose, so you have no natural types to give your intermediate results if you insist on having exactly the <code>unFunc |$| fa |*| fb |*| fc</code> format. After all, the most direct way of writing it is</p>\n\n<pre><code>unFunc `contramap` (fa `divided` (fb `divided` (fc `divided` conquered)))\n</code></pre>\n\n<p>which associates in exactly the opposite way of what <code>Applicative</code> style does.</p>\n\n<p>Forcing it into that format anyway causes the code to pick up what looks to me similar to <code>Text.Printf</code>'s tricks for variable-length argument list overloading - a sure sign that you are fighting against the types.</p>\n\n<p>Instead I would suggest changing the usage slightly so that it can fit with more natural types for both <code>Applicative</code> and <code>Divisible</code>.  Perhaps something like:</p>\n\n<pre><code>func |$| fa |*| fb |*| fc |!| unFunc\n</code></pre>\n\n<p>Sample code showing the similarities (I leave it to you to actually unify them.)  I also changed the type of <code>unFunc</code> to fit this usage better.</p>\n\n<pre><code>import Data.Functor.Contravariant\nimport Data.Functor.Contravariant.Divisible\nimport Control.Applicative\n\n(|$|) :: Divisible f =&gt; t -&gt; f a -&gt; f a\nf |$| fa = fa -- For Divisibles, this end does nothing\n\n(|*|) :: Divisible f =&gt; f a -&gt; f b -&gt; f (a, b)\nfa |*| fb = divided fa fb\n\n(|!|) :: Contravariant f =&gt; f b -&gt; (a -&gt; b) -&gt; f a\nfz |!| unFunc = contramap unFunc fz\n\n(&lt;!&gt;) :: Applicative f =&gt; f z -&gt; t -&gt; f z\nfz &lt;!&gt; _ = fz -- For Applicatives, this end does nothing\n\n-- These two functions have the same type except for one using Divisible and the other Applicative\n\ndivide3 :: Divisible f =&gt; (a -&gt; b -&gt; c -&gt; z) -&gt; (z -&gt; ((a, b), c)) -&gt; f a -&gt; f b -&gt; f c -&gt; f z\ndivide3 func unFunc fa fb fc = func |$| fa |*| fb |*| fc |!| unFunc\n\napply3 :: Applicative f =&gt; (a -&gt; b -&gt; c -&gt; z) -&gt; (z -&gt; ((a, b), c)) -&gt; f a -&gt; f b -&gt; f c -&gt; f z\napply3 func unFunc fa fb fc = func &lt;$&gt; fa &lt;*&gt; fb &lt;*&gt; fc &lt;!&gt; unFunc\n</code></pre>\n\n<p>I can also see an alternative method where you drop the initial <code>|$|</code> part and use the fact that <code>Applicative</code>s support composition with pairs better than <code>Divisible</code>s support application of functions, so you could use the same method for <code>Applicative</code>s as I used above for <code>Divisible</code>s.</p>\n"}], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1424970568, "creation_date": 1424938378, "last_edit_date": 1424970568, "question_id": 28737332, "link": "https://stackoverflow.com/questions/28737332/can-this-multi-parameter-type-class-be-simplified", "title": "Can this multi-parameter type class be simplified?", "body": "<p>I made this type class to make <code>Divisible</code> functors (the \"contravariant analogue to <code>Applicative</code>\" - <a href=\"https://hackage.haskell.org/package/contravariant-1.2/docs/Data-Functor-Contravariant-Divisible.html\" rel=\"nofollow\">https://hackage.haskell.org/package/contravariant-1.2/docs/Data-Functor-Contravariant-Divisible.html</a>) usable with functions of multiple arguments in much the same way as <code>Applicative</code> functors are.</p>\n\n<p>The idea is that you write <code>unFunc |$| fa |*| fb |*| fc</code>, where:</p>\n\n<pre><code>unFunc :: z -&gt; (a, (b, (c, ())))\nfa :: f a\nfb :: f b\nfc :: f c\n</code></pre>\n\n<p>to get an <code>f z</code>, for some <code>Divisible</code> functor <code>f</code>. <code>|$|</code> is <code>divide</code> from <code>Data.Functor.Contravariant.Divisible</code>, and <code>|*|</code> is <code>dApply</code> from my code below:</p>\n\n<pre><code>{-# LANGUAGE FlexibleContexts\n           , FlexibleInstances\n           , FunctionalDependencies\n           , MultiParamTypeClasses\n           , TypeFamilies\n           , UndecidableInstances\n  #-}\n\nimport Control.Applicative ((&lt;$&gt;), (&lt;*&gt;), Applicative)\nimport Data.Functor.Contravariant.Divisible\n  ( Divisible(divide, conquer)\n  , divided\n  )\n\nresult :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; (a -&gt; c)\nresult = fmap\n\nclass Divisible f =&gt; DivisibleApply f t z r | f t z -&gt; r, r t -&gt; f, r t -&gt; z\n  where dApply :: (f (a, t) -&gt; f z) -&gt; f a -&gt; r\n\ninstance Divisible f =&gt; DivisibleApply f () z (f z)\n  where dApply = (. flip divided conquer)\n\ninstance DivisibleApply f b z r' =&gt; DivisibleApply f (a, b) z (f (a, b) -&gt; f z)\n  where dApply = flip (result.result) divided\n</code></pre>\n\n<p>This actually works! But the class <code>DivisibleApply</code> seems way too complicated. I'm only actually \"switching\" on the <code>t</code> parameter, and I actually want to be completely polymorphic in <code>f</code> and <code>z</code>; they're only class parameters because the instances need to instantiate <code>r</code> in terms of them.</p>\n\n<p>Originally I tried this with type families; the class had only a single parameter <code>t</code>, and the role of <code>r</code> was taken by an associated type. The problem I had with that (and many other variations) was that even when I could get it to accept the class and instances, applying it to more than one argument failed with ambiguous type variables. I believe this was because I wasn't communicating to haskell that I was using the same <code>f</code> all the way through.</p>\n\n<p>Is it possible to get back to simpler types for <code>dApply</code> while still keeping the <code>unFunc |$| fa |*| fb |*| fc</code> usage?</p>\n\n<p>(My ultimate goal is to use this to make a type class that encompasses <em>both</em> <code>Applicative</code> and <code>Divisible</code>; given a pair of functions <code>func :: a -&gt; b -&gt; c -&gt; z</code> and <code>unFunc :: z -&gt; (a, (b, (c, ())))</code> it should be possible to make a function <code>f a -&gt; f b -&gt; f c-&gt; f z</code> knowing only that <code>f</code> is either covariant or contravariant, without knowing which. Hence why I want to mirror the structure of <code>Applicative</code> usage)</p>\n"}]