[{"tags": ["haskell", "types", "variable-assignment", "typeclass", "parametric-polymorphism"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1556732869, "post_id": 55940390, "comment_id": 98533992, "body": "Since you write <code>g 1.3</code>, that means the type is more &quot;restricted&quot;, <code>gg</code> has as type <code>gg :: Fractional a =&gt; a</code>. Note however that (unless in some rare cases), you should not type variables, Haskell will always use the most generic type possible. You do not <i>assign</i> values to a variable, you declare a variable: once you assigned a value, you can never change it value again."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1556733150, "post_id": 55940390, "comment_id": 98534129, "body": "Related: <a href=\"https://stackoverflow.com/q/40432690/2751851\"><i>How to comfortably deal with the type system on Haskell?</i></a>"}, {"owner": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "edited": false, "score": 0, "creation_date": 1556733223, "post_id": 55940390, "comment_id": 98534165, "body": "I&#39;m not getting it.  Sorry.  The first part of :i Fractional is &quot;class Num a =&gt; Fractional a&quot;.  Doesn&#39;t that mean that a Fractional implements type class Num?  Or, is it that I&#39;m confusing myself over functions and variables.  A function argument has to implement specific type classes, but a variable can only accept certain types?  How would I type a variable to receive the result from g?  Just from the type definition of g?  Just saw your edit... I was wondering if typing variables was a bad move.  I guess it is."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1556733296, "post_id": 55940390, "comment_id": 98534195, "body": "@MarcL.Allen: it is correct that for a type in order to be a member of the <code>Fractional</code> typeclass, it needs to be a member of the <code>Num</code> typeclass, hence that means that <code>Fractional</code> is more &quot;<i>specific</i>&quot; than the <code>Num</code> typeclass, since more members (like <code>Int</code>) can be a member of the <code>Num</code> typeclass, but <i>not</i> of the <code>Fractional</code> typeclass."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1556733356, "post_id": 55940390, "comment_id": 98534219, "body": "@MarcL.Allen: typing variables is not a bad move, typically top level variables are typed in a Haskell code fragment. It however looks like you think it is some sort of &quot;variable declaration&quot; like in Java, etc. like <code>int i; i = 2</code>, it is not."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1556733775, "post_id": 55940390, "comment_id": 98534431, "body": "Short answer: &quot;generic&quot; doesn&#39;t mean &quot;untyped&quot;."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1556734580, "post_id": 55940390, "comment_id": 98534744, "body": "before the types even, <i><code>=</code> is <b>not</b> assignment. it is <b>definition</i></b>."}, {"owner": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556798063, "post_id": 55940390, "comment_id": 98555651, "body": "@DanielWagner I&#39;m not going to make a big deal over it, but I don&#39;t really think this is a duplicate question.  My question deals more with the misconception of what &quot;typing a variable&quot; means.  While the linked question does, in all the other information it provides, include answers to this question, the two questions really are not the same."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556802832, "post_id": 55940390, "comment_id": 98558463, "body": "@MarcL.Allen The rule of thumb I use is that if two questions generate the same answer then they&#39;re duplicates, even if they&#39;re not exactly the same wording. When I read this question, my instinct was to write up the &quot;types as protocols&quot; view again, since it perfectly explains what&#39;s going on; therefore I consider these two questions to generate the same answer. (It&#39;s just luck that you were asking specifically about <code>Num</code> and <code>Fractional</code>, like the linked question.) See also the <a href=\"https://meta.stackexchange.com/q/10841\">When are two questions considered duplicates?</a> discussion on meta-SO."}, {"owner": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556803322, "post_id": 55940390, "comment_id": 98558755, "body": "@DanielWagner Understood.  However, from the third paragraph under &quot;When are two questions considered duplicate&quot;, I believe these questions are merely related, even if you were thinking of using the same answer.  Your answer answers far more than either question asked, so it&#39;s not surprising that it can be used for different questions."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556810523, "post_id": 55940390, "comment_id": 98562966, "body": "@MarcL.Allen I too thought your question was more about the essence of <a href=\"https://stackoverflow.com/questions/tagged/parametric-polymorphism\">parametric-polymorphism</a>, than specifically type classes. but there&#39;s plenty duplicates for it under that view as well. I&#39;ll try to find some links, but you might as well just search / browse the tag itself."}], "answers": [{"comments": [{"owner": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "edited": false, "score": 0, "creation_date": 1556733513, "post_id": 55940476, "comment_id": 98534298, "body": "Oh.. OH!  Wait a sec... epiphany may be coming...."}, {"owner": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "edited": false, "score": 0, "creation_date": 1556734158, "post_id": 55940476, "comment_id": 98534591, "body": "So... <code>i :: a</code> implies that I could plug <code>i</code> into any function regardless of its requirements?  That <code>i :: a</code> says that <code>i</code> implements every possible type class? (EDIT: This seems to match with your forall edit)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "edited": false, "score": 0, "creation_date": 1556734668, "post_id": 55940476, "comment_id": 98534786, "body": "@MarcL.Allen Roughly, yes. It means that <code>i</code> can be used where you need an <code>Int</code>, a <code>Bool</code>, a <code>String</code>, a <code>Maybe [(Int, Bool)] -&gt; Char</code>, or any other type. For type classes: if a type class is not empty, i.e. there is some type <code>T</code> implementing the methods of the class (<code>instance C T where ...</code>) then <code>i</code> can be used as a value of <code>T</code>. Note that values belong to types, and types belong to type classes."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "edited": false, "score": 0, "creation_date": 1556734670, "post_id": 55940476, "comment_id": 98534787, "body": "@MarcL.Allen Yes, <code>i :: a</code> implies that I could plug <code>i</code> into any function regardless of its requirements. As for &quot;<code>i :: a</code> says that <code>i</code> implements every possible type class&quot;, on that one I give a resounding &quot;sort of&quot;. The statement holds the kernel of truth, I think, but your phrasing seems a bit off; whether a thing is in a type class or not is a property of <i>types</i>, but <code>i</code> is a computation, not a type."}, {"owner": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556734982, "post_id": 55940476, "comment_id": 98534906, "body": "@DanielWagner Not surprised... still early enough in the learning process that my language will be imprecise due to misunderstanding the finer points (e.g. assignment vs. definition)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556736186, "post_id": 55940476, "comment_id": 98535367, "body": "@DanielWagner can we perhaps always use &quot;calculation&quot; for pure Haskell values (following <a href=\"https://www.cs.kent.ac.uk/people/staff/dat/miranda/wadler87.pdf\" rel=\"nofollow noreferrer\">Wadler</a> following <a href=\"https://en.wikipedia.org/wiki/Kent_Recursive_Calculator\" rel=\"nofollow noreferrer\">Turner</a>), and reserve &quot;computation&quot; for monadic values (following <a href=\"https://en.wikipedia.org/wiki/Eugenio_Moggi\" rel=\"nofollow noreferrer\">Moggi</a>)? an inconsistent terminology is one of reasons ppl can have hard time learning Haskell."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556736398, "post_id": 55940476, "comment_id": 98535443, "body": "assignment/definition distinction is the key. with <i>assignment</i>, OP&#39;s expectations would be entirely reasonable. but since we <i>define</i> a <i>value</i> (and use a name only to refer to that value), <i>type</i> is the <i>value&#39;s</i> attribute, not the name&#39;s."}, {"owner": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556799192, "post_id": 55940476, "comment_id": 98556245, "body": "@WillNess I can&#39;t agree more, especially with your first comment. For instance, it seems to me that &quot;variables&quot; (that I think you are referring to as &quot;pure Haskell values&quot;) are nothing more than Haskell functions that take no arguments. Now, that may also not be correct, but I think it&#39;s closer than &quot;variables.&quot;  Had I known that, this and other questions may have been avoided entirely."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556809891, "post_id": 55940476, "comment_id": 98562624, "body": "no, no. there&#39;s lots of stuff, from the big guns too, on how Haskell&#39;s values are <i>not</i> nullary functions. If anything I&#39;d prefer &quot;names&quot; instead of variables, or &quot;named values&quot;, or &quot;bindings&quot;. But &quot;variables&quot; are fine too. In math they are too known as variables, and are constant, as well. --- re: pure values, <i>everything</i> is a pure value in Haskell. <code>x = 7+8</code> and <code>y = print x</code> both are. But @Daniel&#39;s point was, because of laziness, <code>x</code> is not immediately a value -- there&#39;s a whole <i>calculation</i> laying in wait behind it. (that&#39;s what you too were referring to, I believe). 1/"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556810038, "post_id": 55940476, "comment_id": 98562697, "body": "He just used that other word which I&#39;d much rather see used exclusively for the <code>print x</code>-like stuff. I.e. potentially &quot;effectful&quot; stuff. The distinction is subtle, <code>Maybe Int</code> is pure either way, it&#39;s just our interpretation of it that changes. But with <code>IO</code> the distinction is real. <code>print x</code> is an <code>IO ()</code> value denoting an I/O <i>computation</i>. that&#39;s what I meant. (and I gave links supporting these terminology choices) /2"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 9, "last_activity_date": 1556734024, "last_edit_date": 1592644375, "creation_date": 1556733205, "answer_id": 55940476, "question_id": 55940390, "link": "https://stackoverflow.com/questions/55940390/misconception-on-type-classes-and-variable-assignment-in-haskell/55940476#55940476", "title": "Misconception on Type Classes and variable assignment in Haskell", "body": "<blockquote>\n<pre><code>i :: a; i = 1\n</code></pre>\n<p>My expectation was that, since i was typed as generically as possible, I should be able to assign absolutely anything to it. (I know that I probably can't do anything with variable i, but that wasn't important.)</p>\n</blockquote>\n<p>No, it's the other way around. The type represents how that value <em>can be used</em> later on, i.e. it states that the user can use <code>i</code> pretending that it is of any type that might be required at that time. Essentially, the user chooses what the type <code>a</code> actually is, and the code defining <code>i :: a</code> must conform to any such choice of the user.</p>\n<p>(By the way we usually call <code>i = 1</code> &quot;binding&quot; or &quot;definition&quot;, not &quot;assignment&quot; since that would imply we can reassign later on.)</p>\n<blockquote>\n<pre><code>gg :: Num a =&gt; a; gg = g 1.3\n(error)\n</code></pre>\n</blockquote>\n<p>The same principle applies here. <code>gg</code> claims to be of any numeric type the user might want, but if the user later on chooses, say, <code>Int</code> the definition <code>g 1.3</code> does not fit <code>Int</code>.</p>\n<p>The user can choose the type using an explicit signature (<code>print (gg :: Int)</code>), or putting it into  context that &quot;forces&quot; the type (<code>print (length &quot;hello&quot; + gg)</code> forces <code>Int</code> since <code>length</code> returns <code>Int</code>).</p>\n<p>If you are familiar with &quot;generics&quot; in some other languages, you can draw a comparison with this code:</p>\n<pre><code>-- Haskell\ni :: a\ni = 1            -- type error\n\n-- pseudo-Java\n&lt;A&gt; A getI() {\n  return 1;      -- type error\n}\n</code></pre>\n<p>From a more theoretical perspective, you are thinking of the wrong quantifier. When you write <code>i :: a</code>, you are thinking <code>i :: exists a . a</code> (not a real Haskell type) which reads as &quot;<code>i</code> is a value of some type (chosen at definition time)&quot;. Instead in Haskell <code>i :: a</code> means <code>i :: forall a . a</code> which reads as &quot;<code>i</code> is a value of all types (any type that might be needed on use)&quot;. Hence it boils down to &quot;exists&quot; vs &quot;forall&quot;, or to &quot;who chooses what type type <code>a</code> actually is&quot;.</p>\n"}], "owner": {"reputation": 410, "user_id": 3772531, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c3ce8f5d6e74becbca6c006bdab5f549?s=128&d=identicon&r=PG&f=1", "display_name": "Marc L. Allen", "link": "https://stackoverflow.com/users/3772531/marc-l-allen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "closed_date": 1556734190, "accepted_answer_id": 55940476, "answer_count": 1, "score": 4, "last_activity_date": 1556737185, "creation_date": 1556732758, "last_edit_date": 1556737185, "question_id": 55940390, "link": "https://stackoverflow.com/questions/55940390/misconception-on-type-classes-and-variable-assignment-in-haskell", "closed_reason": "Duplicate", "title": "Misconception on Type Classes and variable assignment in Haskell", "body": "<p>Very new to Haskell and trying to understand how type classes and variables interact.</p>\n\n<p>My first thing to play with was:</p>\n\n<pre><code>i :: a; i = 1\n</code></pre>\n\n<p>My expectation was that, since i was typed as generically as possible, I should be able to assign absolutely anything to it.  (I know that I probably can't do anything with variable i, but that wasn't important.)</p>\n\n<p>But, I was wrong.  The above gives an error and requires that it be:</p>\n\n<pre><code>i :: Num a =&gt; a; i = 1\n</code></pre>\n\n<p>After playing around a bit more I came up with the following:</p>\n\n<pre><code>g :: Num a =&gt; a -&gt; a; g a = a + 1\ng 1\n(returned 2)\ngg :: Num a =&gt; a; gg = g 1\ngg\n(returned 2)\n</code></pre>\n\n<p>Ok... so far so good.  Let's try a Fractional parameter.</p>\n\n<pre><code>g :: Num a =&gt; a -&gt; a; g a = a + 1\ng 1.3\n(returned 2.3)\ngg :: Num a =&gt; a; gg = g 1.3\n(error)\n</code></pre>\n\n<p>So, please... what is it about variables that causes this?  From a non-functional programming background, it \"looks\" like I have a function that returns a value with a type implementing Num and tried to assign it to a variable with a type implementing Num.  Yet, the assignment fails.</p>\n\n<p>I'm sure this is some basic misconception I have.  It's probably the same thing that prevents the first example from working. I really want to get it straightened out before I start making far more serious conceptual errors.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1556726964, "post_id": 55938210, "comment_id": 98531416, "body": "In the future please share your whole code, because the lack of definitions makes your question harder to understand."}, {"owner": {"reputation": 55, "user_id": 9115438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c7a229f4feb012a6fed5b8464262439?s=128&d=identicon&r=PG&f=1", "display_name": "Aintsmartenough", "link": "https://stackoverflow.com/users/9115438/aintsmartenough"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1556728005, "post_id": 55938210, "comment_id": 98531868, "body": "@Li-yaoXia I can&#39;t really,this is a piece of code from a homework,if I share it people might find this and copy my code"}, {"owner": {"reputation": 3854, "user_id": 10607772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e478f2600848a3dc5238b7ffb2e148f6?s=128&d=identicon&r=PG", "display_name": "double-beep", "link": "https://stackoverflow.com/users/10607772/double-beep"}, "edited": false, "score": 4, "creation_date": 1556728173, "post_id": 55938210, "comment_id": 98531940, "body": "Please don&#39;t make more work for other people by vandalizing your posts. By posting on the Stack Exchange network, you&#39;ve granted a non-revocable right, under the <a href=\"//creativecommons.org/licenses/by-sa/3.0/\" rel=\"nofollow noreferrer\">CC BY-SA 3.0 license</a>, for Stack Exchange to distribute that content (i.e. regardless of your future choices). By Stack Exchange policy, the non-vandalized version of the post is the one which is distributed. Thus, any vandalism will be reverted. If you want to know more about deleting a post please see: <a href=\"//meta.stackexchange.com/q/5221\">How does deleting work?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 0, "last_activity_date": 1556727879, "last_edit_date": 1556727879, "creation_date": 1556726896, "answer_id": 55939190, "question_id": 55938210, "link": "https://stackoverflow.com/questions/55938210/tree-traversal-dfs/55939190#55939190", "title": "Tree Traversal - DFS", "body": "<p>You're keeping whole nodes in the <code>visited</code> set</p>\n\n<pre><code>| S.member node visited = ...\n        -- ^ Node s a\n</code></pre>\n\n<p>So you can have multiple nodes labeled by 4 but with different extra information.\nYou probably only want a <code>visited :: S.Set s</code>.</p>\n"}], "owner": {"reputation": 55, "user_id": 9115438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c7a229f4feb012a6fed5b8464262439?s=128&d=identicon&r=PG&f=1", "display_name": "Aintsmartenough", "link": "https://stackoverflow.com/users/9115438/aintsmartenough"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 125, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1556736432, "creation_date": 1556722516, "last_edit_date": 1556736432, "question_id": 55938210, "link": "https://stackoverflow.com/questions/55938210/tree-traversal-dfs", "title": "Tree Traversal - DFS", "body": "<p>I need to implement a DFS traversal on a Tree with a maximum depth ( so for example if the depth is 0 then you only show the root ).</p>\n\n<p>successors node will return a list of (Int,Tree) where Tree is basically the \"s\" in my Node s a</p>\n\n<pre><code>limitedDfsRec :: (ProblemState s a, Ord s, Ord a) =&gt; [Node s a] -&gt; Int -&gt; S.Set (Node s a)-&gt; [Node s a] -&gt; [Node s a]\nlimitedDfsRec [] _ _ result = reverse result\nlimitedDfsRec (node:coada) max_depth visited result | adancime node &gt; max_depth = limitedDfsRec coada max_depth visited result\n                                                    | S.member node visited = limitedDfsRec coada max_depth visited result\n                                                    | otherwise =\n                                                    let succesori = [(Nod copil (Just actiune_copil) (Just $ stare node) ((adancime node) + 1) []) | (actiune_copil,copil) &lt;- successors (stare node)]\n                                                    in limitedDfsRec (succesori ++ coada) max_depth (S.insert node visited) (node : result)   \n</code></pre>\n\n<p>You start from a node,if it's depth is greater than the maximum depth allowed you go to next element in the list (coada).\nIf the element is already visited then you go to the next element in the list.\nElse,you get all the children (succesori) and put them in the list (coada),you add the element to the visited and to the final result.\nThat function is used toghether with this one :</p>\n\n<pre><code>instance ProblemState Tree Int where\n    successors (Tree n)\n        | n == 2    = [(1, Tree 4), (2, Tree 6)]  -- 4 instead of 5 =&gt; cycle\n        | otherwise = [(1, Tree $ 2 * n + 1), (2, Tree $ 2 * n + 2)]\n\n    isGoal (Tree n) = n == 13\n</code></pre>\n\n<p>Which generates the children. Well,the problem is that the function above still visits nodes even if they are in the visited set and I don't understand why.</p>\n\n<p>So,for example, starting from Tree 0 with a maximum depth of 2 you should get [0,1,3,4,2,6] but my function gets [0,1,3,4,2,4,6] because when it gets to 2 it puts 4 and 6 in the list but when it gets to 4 it sees that 4 was not visited yet and puts it in the output (result).\nI want to see the problem with THIS code,not other ways it works because I need to use this on more than 2 children.</p>\n"}, {"tags": ["ajax", "haskell", "haskell-warp"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556719897, "post_id": 55936962, "comment_id": 98527897, "body": "Perhaps it&#39;s obvious to a warp expert, I don&#39;t know; but it&#39;s not obvious to me: what is your question?"}, {"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556720561, "post_id": 55936962, "comment_id": 98528196, "body": "The question is: how would you construct a wai/warp code, which would receive user input from an html page (like when you print stuff inside the google search bar), and give out what you&#39;ve just written within a new div inside the same html page? The code I&#39;m showing is my humble attempt of doing so, but most likely there is something wrong at its core."}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 1, "creation_date": 1556729206, "post_id": 55936962, "comment_id": 98532381, "body": "I don&#39;t know WAI/Warp at all, but is it possible that you want your <code>case pathInfo req</code> block to replace the <code>_</code> case of your <code>case queryString req</code> block? As is, the code reads to me like it&#39;s going to issue two responses to each request, so you&#39;re probably only ever seeing the first response, which ignores the query string and just serves another copy of <code>search.html</code>."}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 1, "creation_date": 1556729285, "post_id": 55936962, "comment_id": 98532412, "body": "Or for a more robust handler, maybe you want to match both at the same time with <code>case (pathInfo req, queryString req)</code>."}, {"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "edited": false, "score": 0, "creation_date": 1556746356, "post_id": 55936962, "comment_id": 98539169, "body": "Would you mind giving your own version of how you see it? This is actually what happens, and I do not get why is the the output behaving like this."}], "answers": [{"comments": [{"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "edited": false, "score": 0, "creation_date": 1556751401, "post_id": 55943324, "comment_id": 98540467, "body": "Genius!! Thank you so much. 1 remark -- without the equal sign in q=&quot;"}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "reply_to_user": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "edited": false, "score": 0, "creation_date": 1556751446, "post_id": 55943324, "comment_id": 98540480, "body": "I wondered about that! I saw it in your example but didn&#39;t know if it was right or wrong."}], "tags": [], "owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "is_accepted": true, "score": 1, "last_activity_date": 1556751466, "last_edit_date": 1556751466, "creation_date": 1556748600, "answer_id": 55943324, "question_id": 55936962, "link": "https://stackoverflow.com/questions/55936962/how-to-formulate-the-wai-querystring-properly/55943324#55943324", "title": "How to formulate the wai queryString properly?", "body": "<p>Disclaimer: I have not tried to compile this code. I have no experience with WAI/Warp. This is just something to try to see if it works!</p>\n\n<pre><code>app req resp = do\n  case (pathInfo req, queryString req) of\n    ([\"main\"], [(\"q\", Just stuff)]) -&gt;\n      resp $ responseLBS  status200 [(\"Content-Type\",\"text/html\")]  (fromStrict stuff)\n    ([\"main\"], _) -&gt;\n      resp $ responseFile status200 [(\"Content-Type\",\"text/html\")]  \"search.html\" Nothing\n    _ -&gt;\n      resp $ responseLBS  status404 [(\"Content-Type\",\"text/plain\")] \"No such file.\"\n</code></pre>\n\n<hr>\n\n<p>To make this a slightly more generally useful answer (if it does indeed fix the problem): in your original code, you have two <code>case</code> blocks that will execute in succession, and all branches of each block call <code>resp</code>, so you are guaranteed to call <code>resp</code> twice, which, I assume, would produce (or try to produce) two responses for each request. Generally speaking, that can't happen in HTTP, so you're probably going to get the first response only, which happens not to use the query string at all. The fix is just to make sure you only call <code>resp</code> once, after you've inspected everything you need to inspect about your request! I'm showing you one way to do that by matching against both the path and the query string at the same time, but of course there are other ways. You could match against <code>pathInfo req</code> first, and then match on <code>queryString req</code> inside some of those cases where it's relevant. Just make sure that <code>resp</code> only gets called once for each possible code path.</p>\n"}], "owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 55943324, "answer_count": 1, "score": -1, "last_activity_date": 1556751466, "creation_date": 1556717033, "last_edit_date": 1556745746, "question_id": 55936962, "link": "https://stackoverflow.com/questions/55936962/how-to-formulate-the-wai-querystring-properly", "title": "How to formulate the wai queryString properly?", "body": "<p>I'm trying to formulate code, which would allow me to print something inside an html input field, and then the Haskell code will return what I have printed in the next div (to make an Ajax search engine in the long run). The connection between the two seems established, but in a really strange way. More than that, I do not quite understand how to make cases for the queryString req in the following sequence. Here is the Haskell code:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nimport Network.Wai\nimport Network.Wai.Handler.Warp\nimport Network.HTTP.Types\nimport Data.ByteString.Lazy\n\nmain :: IO ()\nmain = run 3000 app\n\napp :: Application\napp req resp = do\n  case pathInfo req of\n    [\"main\"] -&gt; resp $ responseFile status200 [(\"Content-Type\",\"text/html\")] \"search.html\" Nothing\n    _ -&gt; resp $ responseLBS status404 [(\"Content-Type\",\"text/plain\")] \"No such file.\"\n  case queryString req of\n    [(\"q=\",Just stuff)] -&gt; resp $ responseLBS\n      status200\n      [(\"Content-Type\",\"text/html\")]\n      (fromStrict stuff)\n    [(\"q=\",Just \"\")] -&gt; resp $ responseLBS\n      status200\n      [(\"Content-Type\",\"text/html\")]\n      \"\"\n    _ -&gt; resp $ responseLBS\n      status404\n      [(\"Content-Type\",\"text/html\")]\n      \"sorry\"\n</code></pre>\n\n<p>And here is my search page:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;script&gt;\n  function getStuff(str) {\n    if (str.length == 0) {\n      document.getElementById(\"results\").innerHTML = \"\";\n      return;\n    } else {\n      var xmlhttp = new XMLHttpRequest();\n      xmlhttp.onreadystatechange = function() {\n        if (this.readyState == 4 &amp;&amp; this.status == 200) {\n          document.getElementById(\"results\").innerHTML = this.responseText;\n        }\n      };\n      xmlhttp.open(\"GET\", \"http://localhost:3000/main?q=\" + str, true);\n      xmlhttp.send();\n    }\n  }\n  &lt;/script&gt;\n  &lt;body&gt;\n    &lt;input type = \"text\" onkeyup = \"getStuff(this.value)\"/&gt;\n    &lt;p&gt;&lt;span id = \"results\"&gt;&lt;/span&gt;&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n"}, {"tags": ["linux", "haskell", "ghci"], "answers": [{"comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1556703995, "post_id": 55934326, "comment_id": 98521378, "body": "it might be worth adding that there&#39;s no harm in adding an extra space (or as many spaces as are desired) between the <code>biggerSorted</code> and the <code>=</code>, if the desire is for the <code>=</code> signs to be in the same column. (I have seen this done in code examples online.) The only important thing, as you say, is that the start of the <code>let</code> declarations - the variable names - line up."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1556705338, "last_edit_date": 1556705338, "creation_date": 1556703671, "answer_id": 55934326, "question_id": 55934254, "link": "https://stackoverflow.com/questions/55934254/how-to-fix-parse-error-on-input-when-compile-the-following-quicksort-examp/55934326#55934326", "title": "How to fix &#39;parse error on input \u2018=\u2019&#39; when compile the following quicksort example?", "body": "<p>The indentation of the two declarations in the <code>let</code> clause should match, like:</p>\n\n<pre><code>quicksort :: (Ord a) =&gt; [a] -&gt; [a]\nquicksort [] = []\nquicksort (x:xs) =\n  let smallerSorted = quicksort [a | a <b>&lt;-</b> xs, a &lt;= x]\n      biggerSorted = quicksort [a | a <b>&lt;-</b> xs, a &gt; x]  -- no extra spacing\n  in smallerSorted ++ [x] ++ biggerSorted</code></pre>\n\n<p>In your original question, you also forgot to use the <code>&lt;-</code> operator in the generator expression part of your list comprehension: you should thus write <code>a &lt;- xs</code>, instead of <code>a xs</code>.</p>\n\n<p>You can however, as <a href=\"https://stackoverflow.com/questions/55934254/how-to-fix-parse-error-on-input-when-compile-the-following-quicksort-examp/55934326?noredirect=1#comment98521378_55934326\">@RobinZigmond</a> says, add spaces before and after the <code>=</code>, as long as you have the same number of spaces before the first non-space character, this is fine, like:</p>\n\n<pre><code>quicksort :: (Ord a) =&gt; [a] -&gt; [a]\nquicksort [] = []\nquicksort (x:xs) =\n  let smallerSorted = quicksort [a | a &lt;- xs, a &lt;= x]\n      biggerSorted  = quicksort [a | a &lt;- xs, a &gt; x]  -- extra space before =\n  in smallerSorted ++ [x] ++ biggerSorted</code></pre>\n\n<p>Note that you can use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:partition\" rel=\"nofollow noreferrer\"><strong><code>partition :: (a -&gt; Bool) -&gt; [a] -&gt; ([a], [a])</code></strong></a> to split a list in two lists where the first sublist has elements that satisfy the predicate, and the latter has the elements that do <em>not</em> satisfy the predicate, like:</p>\n\n<pre><code>import Data.List(partition)\n\nquicksort :: (Ord a) =&gt; [a] -&gt; [a]\nquicksort [] = []\nquicksort (x:xs) =\n  let (smal, big) = partition (x &gt;) xs\n  in quicksort smal ++ x : quicksort big\n</code></pre>\n\n<p>The <code>partition</code> function is normally implemented in such way that it iterates only once over the given list, and only performs the test once. So this is typically (a bit) more efficient than using two list comprehensions that each individually filter the given list.</p>\n"}], "owner": {"reputation": 43, "user_id": 10639030, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Jack Nanray", "link": "https://stackoverflow.com/users/10639030/jack-nanray"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 55934326, "answer_count": 1, "score": 3, "last_activity_date": 1556705338, "creation_date": 1556703331, "last_edit_date": 1556703752, "question_id": 55934254, "link": "https://stackoverflow.com/questions/55934254/how-to-fix-parse-error-on-input-when-compile-the-following-quicksort-examp", "title": "How to fix &#39;parse error on input \u2018=\u2019&#39; when compile the following quicksort example?", "body": "<p>put the code below into a .hs file, tried to import it by \":t xx.hs\", but got an error.. I suspect it's syntax problem after seeing other questions.Hopefully someone could help me out. </p>\n\n<pre><code>quicksort :: (Ord a) =&gt; [a] -&gt; [a]\nquicksort [] = []\nquicksort (x:xs) =\n  let smallerSorted = quicksort [a | a  xs, a &lt;= x]\n       biggerSorted = quicksort [a | a  xs, a &gt; x]\n  in smallerSorted ++ [x] ++ biggerSorted\n</code></pre>\n\n<p>get error:  </p>\n\n<p>Not in scope: \u2018a\u2019\nFailed, modules loaded: none.</p>\n"}, {"tags": ["haskell", "compiler-errors", "fold", "type-mismatch", "map-function"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1556694462, "post_id": 55932720, "comment_id": 98518307, "body": "Hint: what is the type of <code>t</code>? An <code>[(Int, a)]</code>, or an <code>(Int, a)</code>. That being said, note that there is missing a <code>=</code> in your <code>setElements</code>."}, {"owner": {"reputation": 97, "user_id": 11246599, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-cJXdU9dermI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdlo9h1LhUm7JilsjVFkjOOVtiVUQ/mo/photo.jpg?sz=128", "display_name": "tal", "link": "https://stackoverflow.com/users/11246599/tal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1556695960, "post_id": 55932720, "comment_id": 98518705, "body": "i changed now t to be (Int, a), but it doesnt compile, am i missing something?"}, {"owner": {"reputation": 5911, "user_id": 1688785, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/07b2da937aa23792045dff6ff19556eb?s=128&d=identicon&r=PG", "display_name": "Caramiriel", "link": "https://stackoverflow.com/users/1688785/caramiriel"}, "edited": false, "score": 0, "creation_date": 1556696553, "post_id": 55932720, "comment_id": 98518866, "body": "Means the body of the function doesn&#39;t align up with the number of arguments specified. What should happen with the second argument of <code>setElements :: [(Int, a)] -&gt; [a] -&gt; [a]</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1556705791, "post_id": 55933507, "comment_id": 98522011, "body": "You could perhaps suggest using <code>splitAt</code> to simplify <code>setElement</code> to round off this answer."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1556705935, "post_id": 55933507, "comment_id": 98522069, "body": "@moonGoose that&#39;s a fair suggestion, although I&#39;m not sure it really belongs in the answer. Feel free to expand on it with another comment though, it&#39;ll still be there for later readers to see."}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": true, "score": 4, "last_activity_date": 1556718937, "last_edit_date": 1556718937, "creation_date": 1556699252, "answer_id": 55933507, "question_id": 55932720, "link": "https://stackoverflow.com/questions/55932720/replace-elements-in-the-list/55933507#55933507", "title": "Replace elements in the list", "body": "<p>Let's look at your function:</p>\n\n<pre><code>setElements :: [(Int, a)] -&gt; [a] -&gt; [a]\nsetElements = foldr (\\t l-&gt; setElement (fst t) (snd t) l) []\n</code></pre>\n\n<p>and recall the type of <code>foldr</code>:</p>\n\n<pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\n</code></pre>\n\n<p>In your use of <code>foldr</code>, you have <code>a</code> as <code>(Int, a)</code>  and <code>b</code> as <code>[a]</code>. And you only give it the first 2 arguments. So <code>foldr (\\t l-&gt; setElement (fst t) (snd t) l) []</code> has type <code>[(Int, a)] -&gt; [a]</code> - whereas <code>setElements</code> is supposed to have type <code>[(Int, a)] -&gt; [a] -&gt; [a]</code>. Note how these match exactly with the \"actual type\" and \"expected type\" reported by GHC in the error message.</p>\n\n<p>To fix this, I would actually take a step backwards. Folding is the right idea - your <code>setElement</code> function already modifies the original list (its third argument) based on an index and new value, and what you want is to take a list of pairs encoding this data, and keep on applying this function to update the original list repeatedly. (Of course this is Haskell so data is immutable - you're not literally updating it in place, but simply returning a new list each time. But sometimes talking loosely like this is easier.)</p>\n\n<p>That's exactly what a fold is. Let's try to write it out, without trying to be too fancy with a \"point-free\" approach, but instead fully applying it:</p>\n\n<pre><code>setElements :: [(Int, a)] -&gt; [a] -&gt; [a]\nsetElements ps as = foldr myFunction as ps\n    where myFunction = undefined\n</code></pre>\n\n<p>The <code>undefined</code> here is just a placeholder - it will cause a runtime error if you try to use the function (but won't cause a compilation error), and I've put it there because we need to think about that, the fold function usually being the trickiest part of implementing a fold. But let's check we understand what the other terms are doing: the list we are actually \"walking along\" is the list of <code>(Int, a)</code> terms that tell us what to insert and where - that's what I've called <code>ps</code> (the <code>p</code> is for \"pair\"). And because we are starting with the list of <code>a</code>s - which I've logically called <code>as</code> here - then that should be the starting accumulator value, which is the second argument to <code>foldr</code>.</p>\n\n<p>So all that remains is the fold function - which takes a pair and a list, and updates the list according to the values in the pair. Well this is the function you're already using:</p>\n\n<pre><code>\\t l-&gt; setElement (fst t) (snd t) l\n</code></pre>\n\n<p>or, rewritten with pattern matching (which I find much more readable, and for this reason I think is preferred by most Haskell developers):</p>\n\n<pre><code>\\(i, a) as -&gt; setElement i a as\n</code></pre>\n\n<p>So, substituting this in, we arrive at the following definition:</p>\n\n<pre><code>setElements :: [(Int, a)] -&gt; [a] -&gt; [a]\nsetElements ps as = foldr myFunction as ps\n    where myFunction = \\(i, a) as -&gt; setElement i a as\n</code></pre>\n\n<p>This now will compile and work correctly. But it's always worth taking a step back when you have a working function, and seeing if you can simplify its definition. In fact <code>myFunction</code> can be simplified quite a bit:</p>\n\n<pre><code>\\(i, a) as -&gt; setElement i a as\n</code></pre>\n\n<p>can first be \"eta-reduced\" to</p>\n\n<pre><code>\\(i, a) -&gt; setElement i a\n</code></pre>\n\n<p>which, using a standard library function, is simply <code>uncurry setElement</code>.</p>\n\n<p>At this stage we clearly don't need a <code>where</code> clause any more (in fact we never did before, but imo it aids readability for any lambda which isn't fairly trivial), and can just write:</p>\n\n<pre><code>setElements :: [(Int, a)] -&gt; [a] -&gt; [a]\nsetElements ps as = foldr (uncurry setElement) as ps\n</code></pre>\n\n<p>In fact, while I wouldn't necessarily recommend it, if we're playing code golf you can even go a step further and just write:</p>\n\n<pre><code>setElements = flip . foldr . uncurry $ setElement\n</code></pre>\n\n<p>I personally think the ability to be able to express relatively complex functions in a concise way, as above, is definitely part of the allure of Haskell. But, rather than try to write something like this straight away, in my opinion it's always best to start with something very concrete showing how you want to transform your data - and, only after getting that working, look for a more concise representation if you want to.</p>\n"}], "owner": {"reputation": 97, "user_id": 11246599, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-cJXdU9dermI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdlo9h1LhUm7JilsjVFkjOOVtiVUQ/mo/photo.jpg?sz=128", "display_name": "tal", "link": "https://stackoverflow.com/users/11246599/tal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 341, "favorite_count": 0, "accepted_answer_id": 55933507, "answer_count": 1, "score": 0, "last_activity_date": 1557425393, "creation_date": 1556694336, "last_edit_date": 1557425393, "question_id": 55932720, "link": "https://stackoverflow.com/questions/55932720/replace-elements-in-the-list", "title": "Replace elements in the list", "body": "<p>I need to implement a function that replaces elements in a list -- the\nindex to replace at is the <code>fst</code> in the tuple, and the <code>snd</code> in the tuple\nis what to replace it with. and I am asked to use <code>foldr</code> or <code>map</code> function.</p>\n\n<p>for example:</p>\n\n<pre><code>setElements   [(1, 'a'), (-4, 't'), (3, 'b')] \"#####\" = \"#a#b#\" \n</code></pre>\n\n<p>the <code>setElements</code> function doesn't compile:</p>\n\n<p>my code:</p>\n\n<pre><code>setElement :: Int -&gt; a -&gt; [a] -&gt; [a]\nsetElement n x xs = if ((n &lt; length xs) &amp;&amp; n &gt;= 0)\n                    then (take n xs) ++ [x] ++ (drop (n + 1) xs)\n                    else xs\n\nsetElements :: [(Int, a)] -&gt; [a] -&gt; [a]\nsetElements = foldr (\\t l-&gt; setElement (fst t) (snd t) l) [] \n</code></pre>\n\n<p>I get:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018[a]\u2019 with \u2018[a] -&gt; [a]\u2019 \n  Expected type: [(Int, a)] -&gt; [a] -&gt; [a] \n  Actual type: [(Int, a)] -&gt; [a] \n\u2022 Possible cause: \u2018foldr\u2019 is applied to too many arguments \n  In the expression: foldr (\\ t l -&gt; setElement (fst t) (snd t) l) [] \n  In an equation for \u2018setElements\u2019: \n      setElements = foldr (\\ t l -&gt; setElement (fst t) (snd t) l) [] \n\u2022 Relevant bindings include \n    setElements :: [(Int, a)] -&gt; [a] -&gt; [a] \n    (bound at hw3.hs:79:1) \n   | \n79 | setElements = foldr (\\t l-&gt; setElement (fst t) (snd t) l) [] \n   |\n</code></pre>\n\n<p>How can I fix the error?</p>\n"}, {"tags": ["haskell", "rust"], "answers": [{"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1556676444, "post_id": 55930784, "comment_id": 98514810, "body": "Oh, I was just missing the <code>move</code>. Thanks!"}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 10, "last_activity_date": 1556675994, "creation_date": 1556675994, "answer_id": 55930784, "question_id": 55930767, "link": "https://stackoverflow.com/questions/55930767/is-it-possible-to-write-haskells-flip-function-in-rust/55930784#55930784", "title": "Is it possible to write Haskell&#39;s flip function in Rust?", "body": "<p>I'm not sure what error you're getting, but I was able to implement it properly with this code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2b7f5d2e4627fca0dc7291247e546198\" rel=\"noreferrer\">playground link for testing</a>):</p>\n\n<pre><code>fn flip&lt;A, B, C, F&gt;(f: F) -&gt; impl Fn(B, A) -&gt; C where F: Fn(A, B) -&gt;C {\n    move |a,b| f(b, a)\n}\n\nfn main() {\n    let sub = |a, b| a - b;\n    let flipped = flip(sub);\n    println!(\"Result: {}\", flipped(5, 10));\n}\n</code></pre>\n\n<p>Note the <code>move</code> keyword here, which is required to force the closure returned by <code>flip</code> to take ownership of <code>f</code>.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 1, "accepted_answer_id": 55930784, "answer_count": 1, "score": 5, "last_activity_date": 1556675994, "creation_date": 1556675783, "question_id": 55930767, "link": "https://stackoverflow.com/questions/55930767/is-it-possible-to-write-haskells-flip-function-in-rust", "title": "Is it possible to write Haskell&#39;s flip function in Rust?", "body": "<p>Haskell's <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:flip\" rel=\"noreferrer\">flip</a> function is defined as follows:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>flip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c\nflip f x y =  f y x\n</code></pre>\n\n<p>All it does is take a function and return another function that has its two parameters reversed. If you called a function <code>f</code> as <code>f a b</code> (<code>f(a, b)</code> in Rust-like syntax), you would call <code>flip f</code> as <code>(flip f) b a</code>.</p>\n\n<p>My unsuccessful attempt at writing this in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn flip&lt;A, B, C, F: Fn(A, B) -&gt; C&gt;(f: F) -&gt; impl Fn(B, A) -&gt; C {\n    |a, b| f(b, a)\n}\n</code></pre>\n\n<p>Is it possible to write this in Rust?</p>\n"}, {"tags": ["haskell", "shake-build-system"], "comments": [{"owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "edited": false, "score": 0, "creation_date": 1556705241, "post_id": 55927604, "comment_id": 98521802, "body": "You can write whatever rules you want for Shake, replacing the success verifier with whatever suits you. See <a href=\"https://hackage.haskell.org/package/shake-0.17.8/docs/Development-Shake-Rule.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/shake-0.17.8/docs/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1556653555, "post_id": 55927732, "comment_id": 98509074, "body": "I get it that I can send a single hard-coded file, but I&#39;m not sure how to select a file with a command line argument."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1556653802, "post_id": 55927732, "comment_id": 98509171, "body": "@IgnatInsarov I guess that&#39;s a fairly orthogonal question, no? Use whatever command-line parsing library you like, then <code>want</code> or <code>need</code> the appropriate thing."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1556654285, "post_id": 55927732, "comment_id": 98509361, "body": "I considered that <code>shake</code> deals with the command line arguments in its own way. I use it as <code>main = shakeArgs shakeOptions $ do stuff</code>. I thought maybe there is some functionality out of the box to handle a case like I described. Or some sort of best practice."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1556658201, "post_id": 55927732, "comment_id": 98510837, "body": "@IgnatInsarov <code>shakeArgsWith</code> lets you plug your own stuff into shake&#39;s command-line parsing; or <code>shakeOptDescrs</code> lets you plug shake&#39;s command-line stuff into your own parser."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1556662543, "post_id": 55927732, "comment_id": 98512234, "body": "Maybe you can move this advice into the body of your answer? In order for it to obtain permanence."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1556716650, "post_id": 55927732, "comment_id": 98526391, "body": "@IgnatInsarov You&#39;re asking a separate question. If you want to ask and answer that, do it as a separate question."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1556653339, "creation_date": 1556653339, "answer_id": 55927732, "question_id": 55927604, "link": "https://stackoverflow.com/questions/55927604/a-phony-target-for-sending-a-file-via-e-mail/55927732#55927732", "title": "A phony target for sending a file via e-mail?", "body": "<p>Yes, shake supports this via <a href=\"http://hackage.haskell.org/package/shake-0.17.8/docs/Development-Shake.html#v:phony\" rel=\"nofollow noreferrer\"><code>phony</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "is_accepted": true, "score": 1, "last_activity_date": 1556705695, "creation_date": 1556705695, "answer_id": 55934680, "question_id": 55927604, "link": "https://stackoverflow.com/questions/55927604/a-phony-target-for-sending-a-file-via-e-mail/55934680#55934680", "title": "A phony target for sending a file via e-mail?", "body": "<p>The answer depends on whether you want to send the email once, or repeatedly, even if <code>pizza.box</code> doesn't change. In both cases let's imagine you want to write <code>BuildSystem send.pizza.box</code> to cause the email to be sent.</p>\n\n<p><strong>Send every time</strong></p>\n\n<p>If you want to send a copy of <code>pizza.box</code> every time you can use a <code>phony</code> rule:</p>\n\n<pre><code>phony \"send.pizza.box\" $ do\n    need [\"pizza.box\"]\n    cmd_ \"send-email\" \"pizza.box\"\n</code></pre>\n\n<p>If you want that to work for all files, you can generalise to:</p>\n\n<pre><code>phonys $ \\s -&gt; case stripPrefix \"send.\" s of\n    Nothing -&gt; Nothing\n    Just file -&gt; Just $ do\n        need [file]\n        cmd_ \"send-email\" [file]\n</code></pre>\n\n<p><strong>Send once</strong></p>\n\n<p>If you only want one copy of each changed <code>pizza.box</code> to be sent then you need to record evidence of that locally, to stop sending successive copies. The easiest way to do that is actually create a file <code>send.pizza.box</code>:</p>\n\n<pre><code>\"send.*\" %&gt; \\out -&gt; do\n    let src = drop 5 out\n    need [src]\n    cmd_ \"send-email\" [src]\n    writeFile' out \"\"\n</code></pre>\n\n<p>If you strongly want to avoid writing the <code>send.pizza.box</code> file you can use the <code>phony</code> technique from above combined with <code>addOracle</code> (but it's unlikely to be worth the additional hassle).</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 55934680, "answer_count": 2, "score": 0, "last_activity_date": 1556705695, "creation_date": 1556652785, "last_edit_date": 1556661481, "question_id": 55927604, "link": "https://stackoverflow.com/questions/55927604/a-phony-target-for-sending-a-file-via-e-mail", "title": "A phony target for sending a file via e-mail?", "body": "<p>I would like to execute a command that takes a specific file in the project <em>(building it as necessary)</em> and sends it somewhere externally. For example, it may be a command that uploads a web page, or sends an e-mail. It may even write some additional files, such as a log, but that is not the point of calling it.</p>\n\n<p>In other words, this action is evoked by naming its source, rather than the target \u2014 either because there is no tangible target, or it is insignificant and the action is primarily wanted for its side effect.</p>\n\n<p>I see it that an extra command line argument will have to be provided, like this:</p>\n\n<pre><code>% BuildSystem send pizza.box\n</code></pre>\n\n<p>The command above should be equivalent to the following:</p>\n\n<pre><code>% BuildSystem pizza.box\n% send pizza.box\n</code></pre>\n\n<p>Can <em>(and \"should\")</em> this be performed with the <code>shake</code> build system?</p>\n\n<hr>\n\n<p><strong>P.S.</strong> As <a href=\"https://stackoverflow.com/a/55927732\">Daniel suggests in an answer</a>, I can extend <code>shake</code>'s argument parser. But I am not sure if this is the best practice for a case like this. It seems a little at odds with the way <code>shake</code> behaves, treating every single command line argument as a self-contained goal. It is also a whole new logic for the operator to design, so much overhead for such a menial task.</p>\n\n<p>It might be more intuitive to request a <code>receipt</code> file for each <code>box</code> that is sent. For instance:</p>\n\n<pre><code>% BuildSystem pizza.receipt\n</code></pre>\n\n<p>\u2014 would then be equivalent to:</p>\n\n<pre><code>% BuildSystem pizza.box\n% send pizza.box &gt;pizza.receipt\n</code></pre>\n\n<p>On the downside, as I understand from <a href=\"https://stackoverflow.com/a/55459477\">an official answer to a question nearby</a>,we cannot have a pseudo-target like <code>pizza.send</code> that does not actually result in a file <code>pizza.send</code> being created. So I am not sure, again, if this is the right way.</p>\n\n<p><strong>P.S. 2</strong> It would be even better if we could replace the default <em>\"file exists\"</em> success verifier with a custom code. For instance, instead of verifying that a file <code>pizza.receipt</code> <em>(that we otherwise have no need for)</em> was indeed created, we may telephone the customer and ask them if they enjoyed the lunch. If we can arrange that, we can then invoke the corresponding rule with a <em>\"pseudo-file\"</em> target <code>pizza.send</code>. In general, build artifacts need not reside on the local file system at all, insofar as the code that can verify and retrieve them is given.</p>\n"}, {"tags": ["class", "haskell", "instance"], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556649826, "post_id": 55926902, "comment_id": 98507592, "body": "But now you&#39;re never going to be able to sensibly instantiate <code>Substitution</code>. I don&#39;t think this is the right direction to go."}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556650271, "post_id": 55926902, "comment_id": 98507759, "body": "Why not? You should be able to define any substitution that rearranges, but doesn&#39;t inspect, the <code>a</code> types in terms and literals. I&#39;m not entirely clear how the <code>Substitution</code> class is intended to be used in this example, so maybe there are more issues with making this usable."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556652281, "post_id": 55926902, "comment_id": 98508596, "body": "By parametricity, <code>asSub</code> cannot inspect its second argument at all. So <code>asSub</code> will associate each <code>\u03c3</code> with either <code>const Nothing</code> or <code>Just</code> (or something less defined), finally resulting in <code>applySubstitution \u03c3 t = t</code> (or something less defined)."}, {"owner": {"reputation": 5013, "user_id": 969617, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/2412de50d273085f5dcf3f2101c3996e?s=128&d=identicon&r=PG", "display_name": "beoliver", "link": "https://stackoverflow.com/users/969617/beoliver"}, "edited": false, "score": 0, "creation_date": 1556652995, "post_id": 55926902, "comment_id": 98508854, "body": "I have added a working example of what I am trying to achieve"}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 0, "creation_date": 1556657751, "post_id": 55926902, "comment_id": 98510712, "body": "That example cleared up a lot! See rewritten answer."}], "tags": [], "owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "is_accepted": true, "score": 1, "last_activity_date": 1556661193, "last_edit_date": 1556661193, "creation_date": 1556649314, "answer_id": 55926902, "question_id": 55926700, "link": "https://stackoverflow.com/questions/55926700/haskell-correct-types-for-class-and-instance/55926902#55926902", "title": "Haskell correct types for class and instance", "body": "<p>The error you're getting is a complaint that <code>Term a</code>, as specified in <code>instance Substitutable (Term a)</code>, is not the same type as the <code>Term a</code> that <code>\u03c3</code> accepts. This is because Haskell quantifies <code>a</code> over the <code>substitute</code> function, but not over the rest of the instance definition. So an implementation of <code>substitute</code> must accept a <code>\u03c3</code> that handles <code>Term a1</code> for <em>some</em> value of <code>a1</code>, which is not guaranteed to be the specific <code>a</code> that your instance is defined on. (Yes, your instance is defined over all <code>a</code>... but from inside the scope of the instance definition, it's as if a specific <code>a</code> has been chosen.)</p>\n\n<p>You can avoid this by parameterizing your <code>Substitutable</code> class by a type constructor instead of just a type, and passing the same <code>a</code> to that type constructor as is used in the <code>\u03c3</code> type.</p>\n\n<pre><code>{-# LANGUAGE UnicodeSyntax #-}\n\nimport qualified Data.Maybe as M\nimport qualified Data.List as L\n\ndata Term a = F a [Term a]\n            | V a deriving (Eq)\n\ndata Literal a = P a [Term a]\n               | E (Term a) (Term a) deriving (Eq)\n\nclass Substitutable f where\n  substitute :: f a -&gt; (Term a -&gt; Maybe (Term a)) -&gt; f a\n\ninstance Substitutable Term where\n  substitute x@(V _) \u03c3    = M.fromMaybe x (\u03c3 x)\n  substitute f@(F l xs) \u03c3 = M.fromMaybe f' (\u03c3 f)\n    where f' = F l (map (flip substitute \u03c3) xs)\n\ninstance Substitutable Literal where\n  substitute (P l xs) \u03c3 = P l (map (flip substitute \u03c3) xs)\n  substitute (E s t) \u03c3  = E (substitute s \u03c3) (substitute t \u03c3)\n\n(&lt;|) t \u03c3 = substitute t $ flip L.lookup \u03c3\n\n\n-- variables\nx  = V \"x\"\ny  = V \"y\"\n-- constants\na  = F \"a\" []\nb  = F \"b\" []\n-- functions\nfa = F \"f\" [a]\nfx = F \"f\" [x]\n\n\u03c3 = [(x,y), (fx, fa)]\n\n\nmain = print $ show $ (P \"p\" [x, b, fx] &lt;| \u03c3) == P \"p\" [y, b, fa]\n</code></pre>\n"}], "owner": {"reputation": 5013, "user_id": 969617, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/2412de50d273085f5dcf3f2101c3996e?s=128&d=identicon&r=PG", "display_name": "beoliver", "link": "https://stackoverflow.com/users/969617/beoliver"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 55926902, "answer_count": 1, "score": 1, "last_activity_date": 1556661193, "creation_date": 1556648399, "last_edit_date": 1556653958, "question_id": 55926700, "link": "https://stackoverflow.com/questions/55926700/haskell-correct-types-for-class-and-instance", "title": "Haskell correct types for class and instance", "body": "<p>I am struggling to describe what it means for terms and literals (first order logic) to be re-written. Ie I would like a function <code>applySubstitution</code> that can be called on both terms and literals. \nI thought that the substitution could be expressed as a function. However I am getting rigid type variable errors with the following code.</p>\n\n<pre><code>{-# LANGUAGE UnicodeSyntax #-}\n\nmodule Miniexample where\nimport qualified Data.Maybe as M\n\ndata Term a = F a [Term a]\n            | V a\n\ndata Literal a = P a [Term a]\n               | E (Term a) (Term a)\n\nclass Substitutable b where\n  substitute :: b -&gt; (Term a -&gt; Maybe (Term a)) -&gt; b\n\ninstance Substitutable (Term a) where\n  substitute x@(V _) \u03c3    = M.fromMaybe x (\u03c3 x)\n  substitute f@(F l xs) \u03c3 = M.fromMaybe f' (\u03c3 f)\n    where f' = F l (map (flip substitute \u03c3) xs)\n\ninstance Substitutable (Literal a) where\n  substitute (P l xs) \u03c3 = P l (map (flip substitute \u03c3) xs)\n  substitute (E s t) \u03c3  = E (substitute s \u03c3) (substitute t \u03c3)\n\nclass Substitution \u03c3 where\n  asSub :: \u03c3 -&gt; (a -&gt; Maybe a)\n\napplySubstitution \u03c3 t = substitute t (asSub \u03c3)\n\n(&lt;|) t \u03c3 = applySubstitution \u03c3 t\n</code></pre>\n\n<p>This gives be the following error:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018a1\u2019 with \u2018a\u2019\n  \u2018a1\u2019 is a rigid type variable bound by\n    the type signature for:\n      substitute :: forall a1.\n                    Term a -&gt; (Term a1 -&gt; Maybe (Term a1)) -&gt; Term a\n    at /.../Miniexample.hs:16:3-12\n  \u2018a\u2019 is a rigid type variable bound by\n    the instance declaration\n    at /.../Miniexample.hs:15:10-31\n  Expected type: Term a1\n    Actual type: Term a\n\u2022 In the first argument of \u2018\u03c3\u2019, namely \u2018x\u2019\n  In the second argument of \u2018M.fromMaybe\u2019, namely \u2018(\u03c3 x)\u2019\n  In the expression: M.fromMaybe x (\u03c3 x)\n\u2022 Relevant bindings include\n    \u03c3 :: Term a1 -&gt; Maybe (Term a1)\n      (bound at /.../Miniexample.hs:16:22)\n    x :: Term a\n      (bound at /.../Miniexample.hs:16:14)\n    substitute :: Term a -&gt; (Term a1 -&gt; Maybe (Term a1)) -&gt; Term a\n      (bound at /.../Miniexample.hs:16:3)\n</code></pre>\n\n<p>In my head, the type variable <code>b</code> in the <code>Substitutable</code> class should be able to take on (bad terminology I'm sure) the the value of <code>Term a</code>. </p>\n\n<p>Any hints would be greatly welcome.</p>\n\n<p>To give a more concrete example, the following works, but one needs to be explicit about which function <code>applyTermSub</code> or <code>applyLitSub</code> to call and secondly the implementation of the substitution map leaks into the implementation of the more general procedure. </p>\n\n<pre><code>module Miniexample where\nimport qualified Data.Maybe as M\nimport qualified Data.List as L\n\ndata Term a = F a [Term a]\n            | V a deriving (Eq)\n\ndata Literal a = P a [Term a]\n               | E (Term a) (Term a) deriving (Eq)\n\n\ntermSubstitute :: (Term a -&gt; Maybe (Term a)) -&gt; Term a -&gt; Term a\ntermSubstitute \u03c3 x@(V _)    = M.fromMaybe x (\u03c3 x)\ntermSubstitute \u03c3 f@(F l xs) = M.fromMaybe f' (\u03c3 f)\n    where f' = F l (map (termSubstitute \u03c3) xs)\n\nlitSubstitute :: (Term a -&gt; Maybe (Term a)) -&gt; Literal a -&gt; Literal a\nlitSubstitute \u03c3 (P l xs) = P l (map (termSubstitute \u03c3) xs)\nlitSubstitute \u03c3 (E s t)  = E (termSubstitute \u03c3 s) (termSubstitute \u03c3 t)\n\napplyTermSub :: (Eq a) =&gt; Term a -&gt; [(Term a, Term a)] -&gt; Term a\napplyTermSub t \u03c3 = termSubstitute (flip L.lookup \u03c3) t\n\napplyLitSub :: (Eq a) =&gt; Literal a -&gt; [(Term a, Term a)] -&gt; Literal a\napplyLitSub l \u03c3 = litSubstitute (flip L.lookup \u03c3) l\n\n-- variables\nx  = V \"x\"\ny  = V \"y\"\n-- constants\na  = F \"a\" []\nb  = F \"b\" []\n-- functions\nfa = F \"f\" [a]\nfx = F \"f\" [x]\n\n\u03c3 = [(x,y), (fx, fa)]\n\ntest = (applyLitSub (P \"p\" [x, b, fx]) \u03c3) == (P \"p\" [y, b, fa])\n</code></pre>\n\n<p>Ideally I would like to have an interface for substitutions (i.e one could use <code>Data.Map</code> etc) and secondly I would like a single substitute function that captures both term and literals.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1556639745, "post_id": 55924593, "comment_id": 98503001, "body": "This is more a case for codereview IMHO"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1556640084, "post_id": 55924593, "comment_id": 98503180, "body": "Consider a pair of types <code>data TemperatureScale = Fahrenheit | Celsius | ...</code> and <code>data Temperature = Temperature TemperatureScale Double</code>. Also, instead of defining n^2 conversion routines, define 2n routines to convert each temperature to and from a single canonical scale. For example, instead of defining <code>Fahrenheit &lt;-&gt; Celsius</code>, just use <code>Fahrenheit &lt;-&gt; Kelvin &lt;-&gt; Celsius</code>."}], "answers": [{"comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1556643597, "post_id": 55925200, "comment_id": 98504859, "body": "I&#39;ve applied @chepner&#39;s suggestion to cut down the conversions from n^2 to 2n"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1556645697, "post_id": 55925200, "comment_id": 98505780, "body": "Arguably temperature <i>should</i> be an instance of Eq, it just shouldn&#39;t use floating point. Fixed point seems fine for this: decide you don&#39;t care about anything smaller than a millionth of a degree, and use an Int scaled up by a million instead of a Float."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556645810, "post_id": 55925200, "comment_id": 98505822, "body": "With this approach, you definitely should have a role annotation."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556646012, "post_id": 55925200, "comment_id": 98505920, "body": "@dfeuer That role would be phantom, right? It&#39;s clearly not representational, but I don&#39;t totally get what &quot;nominal&quot; means."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556646054, "post_id": 55925200, "comment_id": 98505939, "body": "I don&#39;t think <code>Eq</code> is inherently a problem (as long as you don&#39;t allow NaN to be converted to a temperature), and you need that to get the more-useful <code>Ord</code> instance. The big floating-point problem is <code>Num</code>, and temperatures aren&#39;t <code>Num</code> anyway. You just have to watch out for the fact that any arithmetic will be approximate."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1556646152, "post_id": 55925200, "comment_id": 98505972, "body": "@amalloy, no, the role should be forced to <code>nominal</code>, which means &quot;pretend it&#39;s a GADT index&quot;. You really want <code>coerce (a :: Temperature &#39;Fahrenheit) :: Temperature &#39;Celsius</code> to barf."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556646425, "post_id": 55925200, "comment_id": 98506117, "body": "@dfeuer I thought nominal was the default? (Qualified by: I only learned about roles 5 minutes ago from your comment)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1556646457, "post_id": 55925200, "comment_id": 98506131, "body": "@amalloy You also need to avoid exporting the <code>Temperature</code> data constructor from the &quot;public&quot; interface."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556646546, "post_id": 55925200, "comment_id": 98506172, "body": "@Cubic, the default is the inferred role, which in this case will be <code>phantom</code>. But you can always impose a more restrictive role (<code>phantom &lt; representational &lt; nominal</code>) with a role annotation."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556646567, "post_id": 55925200, "comment_id": 98506180, "body": "@dfeuer I&#39;m not sure how helpful hiding the <code>Temperature</code> constructor would be considering you&#39;ll want <i>some</i> way to do a <code>Double -&gt; Temperature u</code> conversion. I suppose you could restrict to to <code>fromKelvin</code> or something like that, but that&#39;s not very ergonomic."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556646634, "post_id": 55925200, "comment_id": 98506208, "body": "@Cubic, you can make it very ergonomic using a pattern synonym."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556646692, "post_id": 55925200, "comment_id": 98506230, "body": "You can also expose an &quot;unsafe&quot; <code>coerceTemperature :: Coercion (Temperature u) Double</code> for coercing containers. Unlike the data constructor, that&#39;s <i>local</i> unsafety, which is easier to audit."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1556647040, "post_id": 55925200, "comment_id": 98506398, "body": "@amalloy Fixed point still has the same problem with &#39;wonky&#39; operations like <code>1&#47;3 * 3 &#47;= 1</code>; If you don&#39;t care about that you might as well use floating point. If you do the only real way around it is to use rational."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556648915, "post_id": 55925200, "comment_id": 98507224, "body": "Floating point probably makes more sense than fixed point, because small changes in temperature have a bigger impact when the temperature is low. Near absolute zero, tiny fractions of a degree have a huge impact. Around room temperature, a quarter of a degree this way or that probably won&#39;t matter much. At stellar temperatures, I don&#39;t imagine a few dozen degrees would matter too much. On the flip side, I would guess that <code>Double</code> can express temperatures far higher than anything that happens in the universe."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1556734379, "post_id": 55925200, "comment_id": 98534671, "body": "I am still trying to understand your post, hence  why I haven&#39;t closed it yet."}], "tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": false, "score": 5, "last_activity_date": 1556646781, "last_edit_date": 1556646781, "creation_date": 1556641667, "answer_id": 55925200, "question_id": 55924593, "link": "https://stackoverflow.com/questions/55924593/haskell-reducing-boilerplate/55925200#55925200", "title": "Haskell: Reducing Boilerplate", "body": "<p>Main problem seems to be the unit conversions, which you can make significantly shorter and less boilerplat-y using <code>DataKinds</code> and a bunch of other scary looking language extensions (only for 3 units, but you should be able to generalise this easily enough):</p>\n\n<pre><code>{-# LANGUAGE DataKinds,\n             KindSignatures,\n             RankNTypes,\n             ScopedTypeVariables,\n             AllowAmbiguousTypes,\n             TypeApplications #-}\ndata TemperatureUnit = Fahrenheit | Celsius | Kelvin\nnewtype Temperature (u :: TemperatureUnit) = Temperature Double deriving Eq\n\nclass Unit (u :: TemperatureUnit) where\n  unit :: TemperatureUnit\n\ninstance Unit Fahrenheit where unit = Fahrenheit\ninstance Unit Celsius where unit = Celsius\ninstance Unit Kelvin where unit = Kelvin\n\ninstance Show TemperatureUnit where\n  show Celsius = \"\u00b0C\"\n  show Fahrenheit = \"\u00b0F\"\n  show Kelvin = \"K\"\n\ninstance forall u. Unit u =&gt; Show (Temperature u) where\n  show (Temperature t) = show t ++ \" \" ++ show (unit @u)\n\nconvertTemperature :: forall u1 u2. (Unit u1, Unit u2) =&gt; Temperature u1 -&gt; Temperature u2\nconvertTemperature (Temperature t) = Temperature . fromKelvin (unit @u2) $ toKelvin (unit @u1) where\n  toKelvin Celsius = t + 273.15\n  toKelvin Kelvin = t\n  toKelvin Fahrenheit = (t - 32) * 5/9 + 273.15\n  fromKelvin Celsius k = k - 273.15\n  fromKelvin Kelvin k = k\n  fromKelvin Fahrenheit k = (k - 273.15) * 9/5 + 32\n</code></pre>\n\n<p>You can then use it like this:</p>\n\n<pre><code>-- the explicit type signatures here are only there to resolve\n-- ambiguities; In more realistic code you'd not need them as often\nmain = do\n  let (t1 :: Temperature Celsius) = Temperature 10.0\n      (t2 :: Temperature Fahrenheit) = Temperature 10.0\n  putStrLn $ show t1 ++ \" = \" ++ show (convertTemperature t1 :: Temperature Fahrenheit)\n  -- =&gt; 10.0 \u00b0C = 50.0 \u00b0F\n  putStrLn $ show t2 ++ \" = \" ++ show (convertTemperature t2 :: Temperature Celsius)\n  -- =&gt; 10.0 \u00b0F = -12.222222222222221 \u00b0C\n</code></pre>\n\n<p><a href=\"https://tio.run/##jVTJbtswEL3rKwZOD3ITK5EMI0gAFzWyHRzkUCe5MxZjEaJJlUuMou0/9Rv6Y@5os6jFQKWD7Jk3772ZoZQQnVLO9/ufkxN4XDw9vCwe7uCWGLJkItZnHrhXHluxjSDGKtpNfiMifXr@kfUSq7XMaJxnXoli5I33EAvO5W6xfWMbK60e4shjiyzjbE0Mk0LDyeS3F6NNeKbbjKrC0YtgBuZwTxJFRULxzy@4oVwzq/HXkvIPJjxBdwbJ3DrwLVxfd5nGSOWCbqVF6xBTxZBnA3ffPW/NidZQ6B7h2CVUUezF5pg@wPOY0IaINS1ZHO9FZVnn9tQpqPtroatgB1oOoI2shtIgV4nc9WZaN6HzZK04h9HfPzejOuw4LzL3h0yli9HlyFF6l4pwDjYo3VmYfynVfXfqdtxWbyWLHRVhA6enMMIbHyWuaPCrHeOSpPigyriFuIhaPgQbBeCXHsKzykw0zu20jIQw6USiIeq@QTcQwLuS22oitUcU@wRGdqJh0/kh18weG4bochqEMzd/GLVxo63V@AYmMEXJzzA7v3JZHGe1TooFKeKHMNUDUoS0M45eTuA3DLnq1fkMVafRfksKq7HEak7xDTJh5w2pfXSnGF4EF9X3wTdRt6iRP1KXWbMy6lHg1MvDE5anZ@6en4HV9v05UkO80X/yRsf63v8D\" rel=\"nofollow noreferrer\" title=\"Haskell \u2013 Try It Online\">Try it online!</a></p>\n\n<p>The trick here is that <code>DataKinds</code> allows us to lift regular data types to the kind level, and their data constructor to the the type level (which I understand aren't really different things in modern versions of GHC anymore? Sorry, I'm a bit shaky on the subject myself). We then just define a helper class to get the data version of the unit back so we can dispatch based on it. This allows us the sort of thing you tried to do with all your newtype wrappers, except with less newtype wrappers (and less instance declarations, and less named functions overall).</p>\n\n<p>The other thing of course is that you still have a combinatorial explosion between different unit conversions - you can either suck it up and write all <code>n^2</code> formulas for those by hand, or you can try to generalise it (may be possible for temperature units as per @chepner's comment, but I'm not sure it's possible for all sorts of things you could want to convert between). This approach can't solve that inherent problem, but it does remove some of the syntactic noise you incur with the <code>newtype</code>-per-unit approach.</p>\n\n<p>Your <code>increaseTemp</code> and <code>decreaseTemp</code> functions could be implemented as a single function <code>offsetTemperature</code> while allowing negative numbers. Although I think it'd make more sense to have them take a temperature with the same unit as the second parameter rather than just a <code>Double</code>:</p>\n\n<pre><code>offsetTemperature :: Temperature u -&gt; Temperature u -&gt; Temperature u\noffsetTemperature (Temperature t) (Temperature offset) = Temperature (t + offset)\n</code></pre>\n\n<hr>\n\n<p>PS: Temperature should probably <em>not</em> be an instance of <code>Eq</code> - floating point equality is notoriously wonky (predictable, but probably doesn't do what you want). I only kept it in here because it was in your example.</p>\n"}, {"comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1556647224, "post_id": 55926368, "comment_id": 98506485, "body": "Your TIO link links to my answer"}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1556734319, "post_id": 55926368, "comment_id": 98534652, "body": "so with <code>TypeApplications</code> you can pass types as arguments?  and why do that by using <code>Proxy</code>? Sorry, I am trying to understand what is gong on in your post."}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 0, "creation_date": 1556744256, "post_id": 55926368, "comment_id": 98538425, "body": "Look at <code>label</code>. In theory, <code>label</code> shouldn&#39;t need any arguments at all\u2014it&#39;s a constant for each instance of <code>TemperatureUnit</code>. However, if <code>label</code> just had type <code>String</code>, then the type parameter <code>u</code> wouldn&#39;t be involved at all, which leaves ambiguous exactly which <code>TemperatureUnit</code> instance you want to pull a <code>label</code> from. <code>Proxy</code> is the standard hack to deal with this problem; a <code>Proxy</code> is basically the same as <code>()</code>, but with a type parameter that is just along for the ride, the same way <code>u</code> is in <code>Temperature</code>. So far, none of this requires <code>TypeApplications</code>. (cont.)"}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 0, "creation_date": 1556744614, "post_id": 55926368, "comment_id": 98538544, "body": "But now, to actually invoke <code>label</code>, you need a <code>Proxy</code> of the appropriate type. You can write <code>label (Proxy :: Proxy u)</code> if you want, and that works just fine. With the <code>TypeApplications</code> extension, you can write that as <code>label (Proxy @u)</code>. There&#39;s nothing special about <code>Proxy</code> in this respect; it&#39;s just a polymorphic value being specialized to a particular type, and type applications give you a cleaner way to do so."}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1556744827, "post_id": 55926368, "comment_id": 98538616, "body": "(If you use <code>AllowAmbiguousTypes</code> as @Cubic did, you don&#39;t need these <code>Proxy</code> shenanigans at all, but switching off the ambiguity check is a little more scary than just enabling type application syntax, and I wanted to showcase a solution with a minimum of scary extensions.)"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1556789052, "post_id": 55926368, "comment_id": 98551175, "body": "FWIW <code>AllowAmbiguousTypes</code> sounds scary but I don&#39;t recall ever having a case where I had an ambiguous type by accident"}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1556885933, "post_id": 55926368, "comment_id": 98589932, "body": "@user11228628 how would you  rewrite the instances so that  <code>fromKelvin</code> also takes a <code>Temperature _</code> and <code>convertTemperature</code> still works?"}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1556887665, "post_id": 55926368, "comment_id": 98590875, "body": "@user11228628 NVM I figured it out :)"}], "tags": [], "owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "is_accepted": false, "score": 4, "last_activity_date": 1556648168, "last_edit_date": 1556648168, "creation_date": 1556646860, "answer_id": 55926368, "question_id": 55924593, "link": "https://stackoverflow.com/questions/55924593/haskell-reducing-boilerplate/55926368#55926368", "title": "Haskell: Reducing Boilerplate", "body": "<p>This is an adaptation of @Cubic's excellent answer, but: you don't need fancy data kinds to do this.</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables, TypeApplications #-}\n\nimport Data.Proxy\n\nnewtype Temperature u = Temperature Double deriving Eq\n\nclass TemperatureUnit u where\n  label :: Proxy u -&gt; String\n  toKelvin :: Temperature u -&gt; Double\n  fromKelvin :: Double -&gt; Temperature u\n\ninstance TemperatureUnit u =&gt; Show (Temperature u) where\n  show (Temperature t) = show t ++ \" \" ++ label (Proxy @u)\n\nconvertTemperature :: forall u1 u2. (TemperatureUnit u1, TemperatureUnit u2) =&gt; Temperature u1 -&gt; Temperature u2\nconvertTemperature = fromKelvin . toKelvin\n\ndata Fahrenheit\ndata Celsius\ndata Kelvin\n\ninstance TemperatureUnit Fahrenheit where\n  label _ = \"\u00b0F\"\n  toKelvin (Temperature t) = (t - 32) * 5/9 + 273.15\n  fromKelvin k = Temperature $ (k - 273.15) * 9/5 + 32\n\ninstance TemperatureUnit Celsius where\n  label _ = \"\u00b0C\"\n  toKelvin (Temperature t) = t + 273.15\n  fromKelvin k = Temperature $ k - 273.15\n\ninstance TemperatureUnit Kelvin where\n  label _ = \"K\"\n  toKelvin (Temperature t) = t\n  fromKelvin k = Temperature k\n</code></pre>\n\n<p><a href=\"https://tio.run/##jZPbTttAEIbv9ylGgQubEIMdRRVIrog4XYAQEtDbakmGepXNrru7JkVV36nP0BcLYzYlPiUQX0TrnX/m@2c8GbczlHK5/D3YgevxzeXD@PIc7iY6x@n9S47fuBH8UaLdh/I4znMpJtwJrSzsDP4wJua5Ng7OuOPRrdG/XhhTuHAUC/c4z9FwVxiEAtLa@UwXlBWmaMSzUD/g/CdjE8mtrUY9KOFIucjQIAOQ/BElHB/DWx26GHyFO2dITpdOX6GkVOV9vTBF@WoU9WT0fB23gqCAmoJMKeu4mmAHTEo1M72AoCYJ3yFt69KF5P3ttYN@H3r00J83E3grJ0VI9rV6RuOqUmJ80oZLCUUMRRLVEnugeL8NmYQlZg0wbrlMugqm1Q5F701lbErzhQueGVQZCufPpyitKKw//I/c2Lu1ujHR71S29@/vRa86xnYLAwcDGJK3PRgdHEEfki/DKB7VpzprfGe7EMxI5kNL6dHBiKTDZAvoylY35ekHlO7TYGuuLSwrdQfK1Ucg2@vPlnNOr1OY6jIvOupv3FyeVSfChjY@jA5JVP4ClzRF6zlv0OWFo7W9VtQDvxax34vUb4bfoI6Ps81XKdWVN/lk3mST7@Ur\" rel=\"nofollow noreferrer\" title=\"Haskell \u2013 Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<p>The advantage of the data kinds approach in this case, as far as I know, is that if you need that <code>TemperatureUnit</code> data type for some other purpose, you can reuse it instead of also defining <code>data Fahrenheit</code> etc. types as I did here. It also constrains the possible temperature types to what you define in the <code>TemperatureUnit</code> type, which could be good or bad for you. It's good that you get the extra type checking that you can't have a <code>TemperatureUnit Bool</code>, for example, but that sort of mistake would very likely be caught by the compiler elsewhere, albeit perhaps with a less clear error. And if you're exporting this functionality, you may want an open world of temperature types so that downstream modules can add their own.</p>\n\n<p>So if you don't already have a <code>TemperatureUnit</code> type in use elsewhere, IMO not using data kinds is simpler and more flexible.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 147, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1556648168, "creation_date": 1556639370, "question_id": 55924593, "link": "https://stackoverflow.com/questions/55924593/haskell-reducing-boilerplate", "title": "Haskell: Reducing Boilerplate", "body": "<p>What is the accepted way to reduce the amount of repetition in code like this?</p>\n\n<pre><code>newtype Fahrenheit = Fahrenheit Double deriving (Eq)\nnewtype Celsius    = Celsius   Double deriving (Eq)\nnewtype Kelvin     = Kelvin    Double deriving (Eq)\nnewtype Rankine    = Rankine   Double deriving (Eq)\nnewtype Reaumure   = Reaumure  Double deriving (Eq)\nnewtype Romer      = Romer     Double deriving (Eq)\nnewtype Delisle    = Delisle   Double deriving (Eq)\nnewtype Newton     = Newton    Double deriving (Eq)\n\ninstance Show Fahrenheit where\n  show (Fahrenheit f) = show f ++ \" \u00b0F\"\n\ninstance Show Celsius where\n  show (Celsius c) = show c ++ \" \u00b0C\"\n\ninstance Show Kelvin where\n  show (Kelvin k) = show k ++ \" K\"\n\ninstance Show Rankine where\n  show (Rankine r) = show r ++ \" \u00b0R\"\n\ninstance Show Reaumure where\n  show (Reaumure r) = show r ++ \" \u00b0R\u00e9\"\n\ninstance Show Romer  where\n  show (Romer  r) = show r ++ \" \u00b0R\u00f8\"\n\ninstance Show Delisle where\n  show (Delisle d) = show d ++ \" \u00b0De\"\n\ninstance Show Newton where\n  show (Newton n) = show n ++ \" N\u00b0\"\n\nclass Temperature a where\n  increaseTemp  :: a -&gt; Double -&gt; a\n  decreaseTemp  :: a -&gt; Double -&gt; a\n  toFahrenheit  :: a -&gt; Fahrenheit\n  toCelsius     :: a -&gt; Celsius\n  toKelvin      :: a -&gt; Kelvin\n  toRankine     :: a -&gt; Rankine\n  toReaumure    :: a -&gt; Reaumure\n  toRomer       :: a -&gt; Romer \n  toDelisle     :: a -&gt; Delisle\n  toNewton      :: a -&gt; Newton\n\ninstance Temperature Fahrenheit where\n  increaseTemp (Fahrenheit f) n = if n &lt; 0 then error \"negative val\" else Fahrenheit $ f + n\n  decreaseTemp (Fahrenheit f) n = if n &lt; 0 then error \"negative val\" else Fahrenheit $ f - n\n  toFahrenheit                  = id\n  toCelsius    (Fahrenheit f)   = Celsius  $ (f - 32) * 5 / 9\n  toKelvin     (Fahrenheit f)   = Kelvin   $ (f - 32) * 5 / 9 + 273.15\n  toRankine    (Fahrenheit f)   = Rankine  $ f + 458.67\n  toReaumure   (Fahrenheit f)   = Reaumure $ (f - 32) * 4 / 9\n  toRomer      (Fahrenheit f)   = Romer    $ (f - 32) * 7 / 24 + 7.5\n  toDelisle    (Fahrenheit f)   = Delisle  $ (212 - f) * 5 / 6\n  toNewton     (Fahrenheit f)   = Newton   $ (f - 32) * 11 / 60\n\ninstance Temperature Celsius where\n  increaseTemp (Celsius c) n = if n &lt; 0 then error \"negative val\" else Celsius   $ c + n\n  decreaseTemp (Celsius c) n = if n &lt; 0 then error \"negative val\" else Celsius   $ c - n\n  toFahrenheit  (Celsius c)   = Fahrenheit $ c * 9 / 5 + 32\n  toCelsius                  = id\n  toKelvin     (Celsius c)   = Kelvin    $ c + 273.15\n  toRankine    (Celsius c)   = Rankine   $ c * 9/5 + 491.67\n  toReaumure   (Celsius c)   = Reaumure  $ c * 4 / 5\n  toRomer      (Celsius c)   = Romer     $ c * 21 / 40 + 7.5\n  toDelisle    (Celsius c)   = Delisle   $ (100 - c) * 3 / 2\n  toNewton     (Celsius c)   = Newton    $ c * 33 / 100\n\ninstance Temperature Kelvin where\n  increaseTemp (Kelvin k) n = if n &lt; 0 then error \"negative val\" else Kelvin    $ k + n\n  decreaseTemp (Kelvin k) n = if n &lt; 0 then error \"negative val\" else Kelvin    $ k - n\n  toFahrenheit  (Kelvin k)   = Fahrenheit $ (k - 273.15)  *  9 / 5 + 32\n  toCelsius    (Kelvin k)   = Celsius   $ k - 273.15\n  toKelvin                  = id\n  toRankine    (Kelvin k)   = Rankine   $ k * 9 / 5\n  toReaumure   (Kelvin k)   = Reaumure  $ (k - 273.15) * 4 / 5\n  toRomer      (Kelvin k)   = Romer     $ (k - 273.15) * 21 / 40 + 7.5\n  toDelisle    (Kelvin k)   = Delisle   $ (373.15 - k) * 3 / 2\n  toNewton     (Kelvin k)   = Newton    $ (k - 273.15) * 33 / 100\n\n-- rest of the instances omitted.\n</code></pre>\n\n<p>also, in the Class definition is there a way of restricting the type of in the input variable to one of the Units. ie <code>toCelsius :: a -&gt; Celsius</code>, is there anything that can be done about constraining what that a can be? or is that implied by the fact that it will only work on Types that have instances declared.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 4, "creation_date": 1556627634, "post_id": 55921004, "comment_id": 98495750, "body": "Well you&#39;ve discovered why you need <code>Either</code>. Haskell has a strong static type system, and a function needs to return values of a specific type. It&#39;s not possible for a function to do as you want and return a string on some inputs and a list of integers on other inputs (as it would be in a dynamic language). But that is what <code>Either</code> is for. A value of type <code>Either a b</code> is either <code>Left x</code> where <code>x</code> is a value of type <code>a</code>, or <code>Right y</code> where <code>y</code> is a value of type <code>b</code>. Hopefully you can now see why this would be useful for your case."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1556628307, "post_id": 55921004, "comment_id": 98496105, "body": "<code>if condition then x else y</code> requires <code>x</code> and <code>y</code> to be of the same type. If they are not, say <code>x :: TypeX</code> and <code>y :: TypeY</code>, you can convert both to <code>Either TypeX TypeY</code> as follows: <code>if condition then Left x else Right y</code>. Since now the two <code>if</code> branches have the same type <code>Either TypeX TypeY</code>, it type checks, and that type will be the type of the value resulting from the <code>if</code>."}, {"owner": {"reputation": 41, "user_id": 11432055, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uIMlx.jpg?s=128&g=1", "display_name": "nutbunny", "link": "https://stackoverflow.com/users/11432055/nutbunny"}, "edited": false, "score": 0, "creation_date": 1556629558, "post_id": 55921004, "comment_id": 98496907, "body": "Thank you for the responses. I edited the post to reflect my attempt at trying the Either String [a] type and it seems to work!"}, {"owner": {"reputation": 23557, "user_id": 12266, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/6a2a454191fa75d4114ed05836a0b924?s=128&d=identicon&r=PG", "display_name": "Andrew Jaffe", "link": "https://stackoverflow.com/users/12266/andrew-jaffe"}, "edited": false, "score": 1, "creation_date": 1556635894, "post_id": 55921004, "comment_id": 98500756, "body": "And if you really do want to go back to printing the result as a string without the <code>Left</code> or <code>Right</code>, you can use <code>div a = putStrLn . either show show $ divisors a</code> which applies the same function (<code>show</code>) to each side of the <code>Either</code>, and prints that."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 5, "last_activity_date": 1556633955, "creation_date": 1556633955, "answer_id": 55922943, "question_id": 55921004, "link": "https://stackoverflow.com/questions/55921004/how-to-display-function-output-as-a-list-a-instead-of-a-string-show-a-in/55922943#55922943", "title": "How to display function output as a list, [a], instead of a string, show [a], in context of the example code below", "body": "<p><em>From @RobinZigmond:</em>  Well you've discovered why you need <code>Either</code>. Haskell has a strong static type system, and a function needs to return values of a specific type. It's not possible for a function to do as you want and return a string on some inputs and a list of integers on other inputs (as it would be in a dynamic language). But that is what <code>Either</code> is for. A value of type <code>Either a b</code> is either <code>Left x</code> where <code>x</code> is a value of type <code>a</code>, or <code>Right y</code> where <code>y</code> is a value of type <code>b</code>. Hopefully you can now see why this would be useful for your case.</p>\n\n<p><em>From @chi:</em> the construct</p>\n\n<pre><code>if condition then x else y\n</code></pre>\n\n<p>requires <code>x</code> and <code>y</code> to be of the same type. If they are not, say:</p>\n\n<pre><code>x :: TypeX\ny :: TypeY\n</code></pre>\n\n<p>you can convert both to <code>Either TypeX TypeY</code> as follows:</p>\n\n<pre><code>if condition then Left x else Right y\n</code></pre>\n\n<p>Since now the two <code>if</code> branches have the same type <code>Either TypeX TypeY</code>, it type checks, and that type will be the type of the value resulting from the <code>if</code>.</p>\n\n<p><em>From the original poster, @nutbunny:</em>  After reading some responses, I attempted the following:</p>\n\n<pre><code>divisors :: (Show a, Integral a) =&gt; a -&gt; Either String [a]\ndivisors a = if length [i | i &lt;- [2..a], mod a i == 0] &gt; 1\n             then Right [i | i &lt;- [2..a-1], mod a i == 0]\n             else Left (show a ++ \" is prime\")\n</code></pre>\n\n<p>and it seems to be working!</p>\n\n<p>Thank you for the suggestions!</p>\n"}], "owner": {"reputation": 41, "user_id": 11432055, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uIMlx.jpg?s=128&g=1", "display_name": "nutbunny", "link": "https://stackoverflow.com/users/11432055/nutbunny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 55922943, "answer_count": 1, "score": 4, "last_activity_date": 1556633955, "creation_date": 1556627380, "last_edit_date": 1556629214, "question_id": 55921004, "link": "https://stackoverflow.com/questions/55921004/how-to-display-function-output-as-a-list-a-instead-of-a-string-show-a-in", "title": "How to display function output as a list, [a], instead of a string, show [a], in context of the example code below", "body": "<p>I am starting to learn some programming and I have been given the following exercise:</p>\n\n<p><em>\"Create a function named divisors that takes an integer n > 1 and returns an array with all of the integer's divisors(except for 1 and the number itself), from smallest to largest. If the number is prime return the string '(integer) is prime'.\n<strong>Hint: Use divisors :: (Show a, Integral a) => a -> Either String [a]</strong>\"</em> </p>\n\n<p>I do not yet understand how to employ the Either type, so in the interim I have decided to begin tackling the problem in baby steps.</p>\n\n<p>Since part of the exercise requires constructing a function to distinguish between prime numbers and non-prime numbers, I decided to first create a provisional function: if the number (a) is not prime, I must display the list of its divisors [1..a]. If the number (a) is prime, I must display the string \"(a) is prime\".</p>\n\n<p>The following code works:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>divisors a = if length [i | i &lt;- [1..a], mod a i == 0 ] &gt; 2\n             then show [i | i &lt;- [1..a], mod a i == 0 ]\n             else show a ++ \" is prime\"\n</code></pre>\n\n<p>Some output of this function is:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>[1 of 1] Compiling Main             ( program.hs, interpreted )\nOk, one module loaded.\n*Main&gt; divisors 1\n\"1 is prime\"\n*Main&gt; divisors 2\n\"2 is prime\"\n*Main&gt; divisors 3\n\"3 is prime\"\n*Main&gt; divisors 4\n\"[1,2,4]\"\n*Main&gt; divisors 5\n\"5 is prime\"\n*Main&gt; divisors 6\n\"[1,2,3,6]\"\n*Main&gt; divisors 7\n\"7 is prime\"\n</code></pre>\n\n<p>However, I do need to display the list as a list [1..a] and not a string \"[1..a]\". I thus erased (show) from the (then) statement:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>divisors a = if length [i | i &lt;- [1..a], mod a i == 0 ] &gt; 2\n             then [i | i &lt;- [1..a], mod a i == 0 ]\n             else show a ++ \" is prime\"\n</code></pre>\n\n<p>but this throws up an error:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>program.hs:11:42: error:\n    * No instance for (Integral Char) arising from a use of `mod'\n    * In the first argument of `(==)', namely `mod a i'\n      In the expression: mod a i == 0\n      In a stmt of a list comprehension: mod a i == 0\n   |\n11 | divisors a = if length [i | i &lt;- [1..a], mod a i == 0 ] &gt; 2\n   |                                          ^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>I do not understand exactly what went wrong and need someone to explain how to display the output of non-prime numbers as a list instead of a string representation of the list.</p>\n\n<p>I do not mind if someone wants to explain how to answer the original exercise question employing the Either type in the solution, if they are willing to explain how to re-formulate my function to employ the Either type properly.</p>\n\n<p>EDIT:\nAfter reading some responses, I attempted the following:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>divisors :: (Show a, Integral a) =&gt; a -&gt; Either String [a]\ndivisors a = if length [i | i &lt;- [2..a], mod a i == 0] &gt; 1\n             then Right [i | i &lt;- [2..a-1], mod a i == 0]\n             else Left (show a ++ \" is prime\")\n</code></pre>\n\n<p>and it seems to be working!</p>\n\n<p>Thank you for the suggestions.</p>\n"}, {"tags": ["haskell", "show"], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556633690, "post_id": 55918600, "comment_id": 98499434, "body": "...and the error even tells you that this is the solution. &quot;Possible fix: add (Show a) to the context of the instance declaration&quot;."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 11, "last_activity_date": 1556618743, "creation_date": 1556618743, "answer_id": 55918600, "question_id": 55918560, "link": "https://stackoverflow.com/questions/55918560/no-instance-for-show-a-arising-from-a-use-of-show/55918600#55918600", "title": "No instance for (Show a) arising from a use of \u2018show\u2019", "body": "<p>In your line:</p>\n\n<blockquote><pre><code>    show (Leaf a) = &quot;{&quot; ++ <b>show a</b> ++ &quot;}&quot;</code></pre></blockquote>\n\n<p>You call <code>show a</code>, with <code>a</code> an element of type <code>a</code>, but it is <em>not</em> said that that type <code>a</code> is an instance of <code>Show</code>, you thus need to add a constraint to your <code>instance</code> declaration:</p>\n\n<pre><code>instance <b>Show a =&gt;</b> Show (LTree a) where\n    show (Leaf a) = &quot;{&quot; ++ show a ++ &quot;}&quot;\n    show (Node fe fd) = &quot;&lt;&quot; ++ (show fe)++ &quot;,&quot; ++(show fd)++ &quot;&gt;&quot;</code></pre>\n\n<p>So here we say that <code>LTree a</code> is an instance of show <em>given</em> <code>a</code> is an instance of <code>Show</code>. For your given sample data, we then obtain:</p>\n\n<pre><code>Prelude&gt; Node (Leaf 1) (Node (Node (Leaf 3) (Leaf 4)) (Node (Leaf 8) (Leaf 7)))\n&lt;{1},&lt;&lt;{3},{4}&gt;,&lt;{8},{7}&gt;&gt;&gt;\n</code></pre>\n"}], "owner": {"reputation": 125, "user_id": 11431681, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-U9ICv4--Yms/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdPRCkhl6_fAB5w-9vPVM4VL5_dfA/mo/photo.jpg?sz=128", "display_name": "rgralma", "link": "https://stackoverflow.com/users/11431681/rgralma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "accepted_answer_id": 55918600, "answer_count": 1, "score": 3, "last_activity_date": 1556621043, "creation_date": 1556618617, "last_edit_date": 1556621043, "question_id": 55918560, "link": "https://stackoverflow.com/questions/55918560/no-instance-for-show-a-arising-from-a-use-of-show", "title": "No instance for (Show a) arising from a use of \u2018show\u2019", "body": "<p>No instance for (Show a) arising from a use of \u2018show\u2019\nIn the first argument of \u2018(++)\u2019, namely \u2018show a\u2019</p>\n\n<pre><code>data LTree a = Leaf a | Node (LTree a) (LTree a)\ninstance Show (LTree a) where\n    show (Leaf a) = \"{\" ++ show a ++ \"}\"\n    show (Node fe fd) = \"&lt;\" ++ (show fe)++ \",\" ++(show fd)++ \"&gt;\"\n</code></pre>\n\n<pre><code>Node (Leaf 1) (Node (Node (Leaf 3) (Leaf 4)) (Node (Leaf 8) (Leaf 7)))\n</code></pre>\n\n<p>I should get:</p>\n\n<pre><code>&lt;{1},&lt;&lt;{3},{4}&gt;,&lt;{8},{7}&gt;&gt;&gt;\n</code></pre>\n"}, {"tags": ["haskell", "binary-search-tree"], "comments": [{"owner": {"reputation": 5932, "user_id": 1563130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F9nmW.jpg?s=128&g=1", "display_name": "Harald Gliebe", "link": "https://stackoverflow.com/users/1563130/harald-gliebe"}, "edited": false, "score": 4, "creation_date": 1556599020, "post_id": 55913972, "comment_id": 98482343, "body": "You can&#39;t. Your modification seems the right way to go"}, {"owner": {"reputation": 63, "user_id": 11430453, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-BEFdLQaypJQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd7Wl0ErMu3U_UaNdfwHH7MlSOciQ/mo/photo.jpg?sz=128", "display_name": "Mun Dong", "link": "https://stackoverflow.com/users/11430453/mun-dong"}, "reply_to_user": {"reputation": 5932, "user_id": 1563130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F9nmW.jpg?s=128&g=1", "display_name": "Harald Gliebe", "link": "https://stackoverflow.com/users/1563130/harald-gliebe"}, "edited": false, "score": 0, "creation_date": 1556601065, "post_id": 55913972, "comment_id": 98482875, "body": "@Harald Thank you for kind help. Could you provide insight why textbook not talk about obvious deficiency? It is not obvious to learning person :-( Still there must be good reason; what is reason?"}], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 11430453, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-BEFdLQaypJQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd7Wl0ErMu3U_UaNdfwHH7MlSOciQ/mo/photo.jpg?sz=128", "display_name": "Mun Dong", "link": "https://stackoverflow.com/users/11430453/mun-dong"}, "edited": false, "score": 0, "creation_date": 1556601120, "post_id": 55914306, "comment_id": 98482889, "body": "Thank for attempt to answer. I write same answer in question but still answer is answer. I wait for other answers with more insight into reasons. (Stackoverflow not letting me give +1 to answer, says I am not reputable)"}], "tags": [], "owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "is_accepted": false, "score": 3, "last_activity_date": 1556600913, "creation_date": 1556600913, "answer_id": 55914306, "question_id": 55913972, "link": "https://stackoverflow.com/questions/55913972/non-balanced-binary-tree/55914306#55914306", "title": "Non-balanced binary tree", "body": "<p>Your original definition only allow trees wit odd numbers of elements.</p>\n\n<p>You can fix it with</p>\n\n<pre><code>data Tree a = Empty | Node (Tree a) a (Tree a)\n</code></pre>\n\n<p>or you can store elements only in leafs</p>\n\n<pre><code>data Tree a = Leaf a | Node (Tree a) (Tree a)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 63, "user_id": 11430453, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-BEFdLQaypJQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd7Wl0ErMu3U_UaNdfwHH7MlSOciQ/mo/photo.jpg?sz=128", "display_name": "Mun Dong", "link": "https://stackoverflow.com/users/11430453/mun-dong"}, "edited": false, "score": 0, "creation_date": 1556637923, "post_id": 55914987, "comment_id": 98501941, "body": "Thank you for explanation and link, and for silencing doubts. Embarrassing how long time I try things out when I only need to just read more."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 6, "last_activity_date": 1556605260, "creation_date": 1556605260, "answer_id": 55914987, "question_id": 55913972, "link": "https://stackoverflow.com/questions/55913972/non-balanced-binary-tree/55914987#55914987", "title": "Non-balanced binary tree", "body": "<p>That definition of a binary tree is a <em>full binary tree</em>, which is</p>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Binary_tree\" rel=\"noreferrer\">\"a tree in which every node has either 0 or 2 children.\"</a></p>\n</blockquote>\n\n<p>It would have been clearer if the type had been named more explicitly:</p>\n\n<pre><code>data FullBinaryTree a = Leaf a | Node (FullBinaryTree a) a (FullBinaryTree a)\n</code></pre>\n\n<p>It's a thing, but often you see another definition of a binary tree that allows for empty nodes as well, as you suggest. The empty node is, however, typically named <code>Empty</code>:</p>\n\n<pre><code>data BinaryTree a = Empty | Node (BinaryTree a) a (BinaryTree a) deriving (Eq, Show)\n</code></pre>\n\n<p>Both are mathematically valid binary trees, but are obviously not the same. With <code>BinaryTree</code> you can create trees with zero, two, four, etc. values:</p>\n\n<pre><code>Prelude&gt; Empty\nEmpty\nPrelude&gt; Node Empty 42 $ Node Empty 1337 Empty\nNode Empty 42 (Node Empty 1337 Empty)\nPrelude&gt; Node Empty 42 $ Node (Node Empty 1337 Empty) 2112 (Node Empty 91235 Empty)\nNode Empty 42 (Node (Node Empty 1337 Empty) 2112 (Node Empty 91235 Empty))\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 11430453, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-BEFdLQaypJQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd7Wl0ErMu3U_UaNdfwHH7MlSOciQ/mo/photo.jpg?sz=128", "display_name": "Mun Dong", "link": "https://stackoverflow.com/users/11430453/mun-dong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 1, "accepted_answer_id": 55914987, "answer_count": 2, "score": 6, "last_activity_date": 1556605260, "creation_date": 1556598398, "last_edit_date": 1556601495, "question_id": 55913972, "link": "https://stackoverflow.com/questions/55913972/non-balanced-binary-tree", "title": "Non-balanced binary tree", "body": "<p>I enjoy reading engaging book \"Programming in Haskell\" (Second Edition) by Graham Hutton. In Chapter \"8 Declaring Types and classes\", section \"8.4 Recursive types\", page 97 bottom I find definition of binary tree:</p>\n\n<pre><code>data Tree a = Leaf a | Node (Tree a) a (Tree a)\n</code></pre>\n\n<p>This is nice binary tree but I cannot make it with 0, 2, 4, 5, 6, 8, ... elements. I write following file <code>bst.hs</code>:</p>\n\n<pre><code>data Tree a = Leaf a | Node (Tree a) a (Tree a)\n    deriving (Eq, Ord, Show, Read)\n</code></pre>\n\n<p>I start Haskell Interpreter in folder and load file.</p>\n\n<pre><code>$ ghci\nGHCi, version 8.6.4: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; :load bst.hs \n[1 of 1] Compiling Main             ( bst.hs, interpreted )\nOk, one module loaded.\n</code></pre>\n\n<p>Ok, one module loaded. But now I try show \"leaf\" or \"tree\" (as Leaf or Node) it is good.</p>\n\n<pre><code>*Main&gt; show (Leaf 3)\n\"Leaf 3\"\n*Main&gt; show (Node (Leaf 1) 2 (Leaf 3))\n\"Node (Leaf 1) 2 (Leaf 3)\"\n</code></pre>\n\n<p>But I fail miserably to make tree with only {1, 2}. How do I write such tree? I tried:</p>\n\n<pre><code>*Main&gt; show (Node (Leaf 1) 2 _)\n\n&lt;interactive&gt;:4:23: error:\n    \u2022 Found hole: _ :: Tree Integer\n    \u2022 In the third argument of \u2018Node\u2019, namely \u2018_\u2019\n      In the first argument of \u2018show\u2019, namely \u2018(Node (Leaf 1) 2 _)\u2019\n      In the expression: show (Node (Leaf 1) 2 _)\n    \u2022 Relevant bindings include\n        it :: String (bound at &lt;interactive&gt;:4:1)\n*Main&gt; show (Node (Leaf 1) 2)\n\n&lt;interactive&gt;:5:1: error:\n    \u2022 No instance for (Show (Tree Integer -&gt; Tree Integer))\n        arising from a use of \u2018show\u2019\n        (maybe you haven't applied a function to enough arguments?)\n    \u2022 In the expression: show (Node (Leaf 1) 2)\n      In an equation for \u2018it\u2019: it = show (Node (Leaf 1) 2)\n*Main&gt; show (Node (Leaf 1) 2 (Node))\n\n&lt;interactive&gt;:6:24: error:\n    \u2022 Couldn't match expected type \u2018Tree Integer\u2019\n                  with actual type \u2018Tree a0 -&gt; a0 -&gt; Tree a0 -&gt; Tree a0\u2019\n    \u2022 Probable cause: \u2018Node\u2019 is applied to too few arguments\n      In the third argument of \u2018Node\u2019, namely \u2018(Node)\u2019\n      In the first argument of \u2018show\u2019, namely \u2018(Node (Leaf 1) 2 (Node))\u2019\n      In the expression: show (Node (Leaf 1) 2 (Node))\n</code></pre>\n\n<p>Yes I maybe understand how it is wrong but how to make correct?</p>\n\n<p>Only answer to my beginner question is maybe to declare <code>Tree</code> as other suggested Tree on page 99:</p>\n\n<pre><code>data Tree a = Leaf | Node (Tree a) a (Tree a)\n</code></pre>\n\n<p>But how to make original tree with 0, 2, 4, ... elements? Or if not possible, why book not talk about it? There is always must be good reason, so what is reason?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 3, "creation_date": 1556590355, "post_id": 55912951, "comment_id": 98480665, "body": "Just out of curiosity: what are you using this for?"}, {"owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "reply_to_user": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 2, "creation_date": 1556590689, "post_id": 55912951, "comment_id": 98480728, "body": "To return a list of results or alternatively returning a list of errors if there&#39;s a failure. There&#39;s actually a bunch of parallel tasks I&#39;m performing behind this actually."}, {"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 1, "creation_date": 1556592708, "post_id": 55912951, "comment_id": 98481099, "body": "Try one of those <a href=\"https://hoogle.haskell.org/?hoogle=%5BEither%20a%20b%5D%20-%3E%20Either%20%5Ba%5D%20%5Bb%5D\" rel=\"nofollow noreferrer\">hoogle.haskell.org/&hellip;</a>"}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1556623502, "post_id": 55912951, "comment_id": 98493547, "body": "Shouldn&#39;t that be <code>f :: [Either a b] -&gt; ([[a], [b])</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 6, "last_activity_date": 1556592856, "creation_date": 1556592856, "answer_id": 55913368, "question_id": 55912951, "link": "https://stackoverflow.com/questions/55912951/a-function-from-either-a-b-to-either-a-b/55913368#55913368", "title": "A function from [Either a b] to Either [a] [b]", "body": "<p>Well certainly you can get a single Left or the Right using the either monad:</p>\n\n<pre><code>Prelude&gt; let a = [Right \"hello\", Right \"World\", Right \"Bye\"]\nPrelude&gt; sequence a\nRight [\"hello\",\"World\",\"Bye\"]\nPrelude&gt; let a = [Right \"hello\", Right \"World\", Left \"Bye\"]\nPrelude&gt; sequence a\nLeft \"Bye\"\n</code></pre>\n\n<p>But to get <em>all</em> the <code>Left</code> values doesn't seem like anything in the base or common libraries I know so you're probably left rolling your own solution.  That said, I think we can find a much more readable solution.  I propose:</p>\n\n<pre><code>f x | any isLeft x = lefts x\n    | otherwise    = rights x\n</code></pre>\n\n<p>or</p>\n\n<pre><code>f x | not (null ls) = ls\n    | otherwise     = rs\n where (ls,rs) = partitionEithers x\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 11, "last_activity_date": 1556592930, "creation_date": 1556592930, "answer_id": 55913379, "question_id": 55912951, "link": "https://stackoverflow.com/questions/55912951/a-function-from-either-a-b-to-either-a-b/55913379#55913379", "title": "A function from [Either a b] to Either [a] [b]", "body": "<p>This is (almost) <code>sequence</code> for <a href=\"https://hackage.haskell.org/package/either-5.0.1/docs/Data-Either-Validation.html\" rel=\"noreferrer\"><code>Validation</code></a>; you just need to convert your <code>a</code>s to <code>[a]</code>s. So:</p>\n\n<pre><code>traverse (eitherToValidation . first pure)\n</code></pre>\n\n<p>If you rewrite your producer to produce <code>Validation</code>s instead of <code>Either</code>s in the first place it will be even less noisy.</p>\n"}], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 240, "favorite_count": 1, "accepted_answer_id": 55913379, "answer_count": 2, "score": 7, "last_activity_date": 1556592930, "creation_date": 1556589278, "last_edit_date": 1556589869, "question_id": 55912951, "link": "https://stackoverflow.com/questions/55912951/a-function-from-either-a-b-to-either-a-b", "title": "A function from [Either a b] to Either [a] [b]", "body": "<p>Is there a name for the function defined as follows:</p>\n\n<pre><code>f :: [Either a b] -&gt; Either [a] [b]\nf x = let (y1, y2) = partitionEithers x in\n  case y1 of\n    [] -&gt; Right y2\n    _ -&gt; Left y1\n</code></pre>\n\n<p>Basically if the list contains at least on <code>Left</code> it returns all the <code>Left</code>s otherwise it returns all the <code>Right</code>s.</p>\n\n<p>Alternatively, are there some generalisation of this function over a type class that I've missed?</p>\n"}, {"tags": ["haskell", "yesod"], "comments": [{"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "edited": false, "score": 1, "creation_date": 1556577205, "post_id": 55911495, "comment_id": 98478163, "body": "Do not use <code>MonadCatch</code>, you are better of using <a href=\"https://www.stackage.org/haddock/lts-13.19/unliftio-0.2.10/UnliftIO-Exception.html\" rel=\"nofollow noreferrer\"><code>unliftio</code></a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "edited": false, "score": 0, "creation_date": 1556585149, "post_id": 55911495, "comment_id": 98479693, "body": "@lehins, that&#39;s a bold statement. Is there a particular reason it&#39;s true in this context?"}, {"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556588676, "post_id": 55911495, "comment_id": 98480316, "body": "@dfeuer That does sound like a bold statement, but I didn&#39;t mean anything by it :) That being said, I did not write it without reason and it does deserve it&#39;s own SO question. But in short, there would be a problem if exception being caught was <code>SomeException</code> rather than <code>ConstraintViolation</code>, cause then async exceptions would get caught as well. In this particular context, @danbrooks can use <code>catchAny</code> from <code>unliftio</code> to safely catch all synchronous exceptions to figure out which exceptions is being thrown and handle it appropriately. MonadCatch on the other hand would not be safe."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "edited": false, "score": 0, "creation_date": 1556590352, "post_id": 55911495, "comment_id": 98480663, "body": "@lehins, sadly, I&#39;m pretty sure there <i>is no</i> entirely safe way to do that. It&#39;s just not possible (as far as I know) to reliably determine whether a caught exception was thrown synchronously (<code>throwIO</code>), asynchronously (<code>throwTo</code>), or imprecisely (<code>throw</code>). I really wish that gap in the interface were filled."}, {"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556676275, "post_id": 55911495, "comment_id": 98514777, "body": "@dfeuer Maybe so, but there is much safer way to do it than what&#39;s done in <code>MonadCatch</code>. Eg.<code>asyncExceptionFromException</code> will tell you if the exception is designed to be an asynchronous one, but of course not that it was thrown asynchronously. At the same time <code>BlockedIndefinitely*</code> are not considered asynchronous, despite that they are thrown asynchronously."}], "owner": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 217, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1556612058, "creation_date": 1556576010, "last_edit_date": 1556612058, "question_id": 55911495, "link": "https://stackoverflow.com/questions/55911495/unable-to-catch-sql-exception-with-persistent-and-catch-function", "title": "Unable to catch Sql Exception with persistent and `catch` function", "body": "<p>I'm trying to run a <code>deleteWhere</code> query with Persistent, however sometimes this delete is unsuccessful due to foreign key violations (I don't want to trigger a cascading delete, I don't want users to be able to delete if the <code>Supplier</code> is used by other entities elsewhere in the system). Going off this <a href=\"https://github.com/yesodweb/yesod-cookbook/blob/master/cookbook/Handling-Persistence-Exception.md\" rel=\"nofollow noreferrer\">https://github.com/yesodweb/yesod-cookbook/blob/master/cookbook/Handling-Persistence-Exception.md</a> it looks like I am fine to use <code>catch</code> from <code>Control.Monad.Catch</code>.</p>\n\n<pre><code>import           Control.Monad.Catch\nimport qualified Database.Persist as P\nimport           Database.PostgreSQL.Simple.Errors (ConstraintViolation(..))\n\ndata DeleteSupplierResult\n  = DeleteSupplierSuccess\n  | DeleteSupplierForeignKeyViolation\n  | DeleteSupplierUncaughtError\n\ndeleteSupplier\n  :: MonadCatch m\n  =&gt; MonadIO m\n  =&gt; Key Supplier\n  -&gt; SqlPersistT m DeleteSupplierResult\ndeleteSupplier sid =\n  (DeleteSupplierSuccess &lt;$ deleteSupplierByKey sid) `catch` (return . catchFailures)\n  where\n    catchFailures = \\case\n      ForeignKeyViolation _ _ -&gt;\n        DeleteSupplierForeignKeyViolation\n\n      _ -&gt;\n        DeleteSupplierUncaughtError\n\ndeleteSupplierByKey :: MonadIO m =&gt; Key Supplier -&gt; SqlPersistT m ()\ndeleteSupplierByKey key =\n  P.deleteWhere [SupplierId P.==. key]\n</code></pre>\n\n<p>Is my issue that I am trying to match <code>ConstraintViolation</code> and this isn't the actual exception being thrown? How can I determine which error persistent is throwing and catch that?</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 4, "creation_date": 1556571802, "post_id": 55910708, "comment_id": 98476761, "body": "Sounds like <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:deleteBy\" rel=\"nofollow noreferrer\"><code>deleteBy</code></a>: <code>deleteBy (&gt;) 1 [5,-6,-7,9,10]</code>"}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1556572857, "post_id": 55910708, "comment_id": 98477062, "body": "Is the question, &quot;can I express <code>filterFirst</code> in terms of <code>map</code>, <code>filter</code>, and/or <code>foldr</code>?&quot;?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user11340751"}, "edited": false, "score": 0, "creation_date": 1556573080, "post_id": 55910708, "comment_id": 98477125, "body": "Yes. And once it&#39;s changed, I want to use it to help me understand replacing older, more basic functions with higher order functions. If someone could show me, or explain an easier way to translate it, I would be appreciative. I&#39;m just learning how to use them."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556573848, "post_id": 55910708, "comment_id": 98477350, "body": "You can write <code>filterFirst</code> (and essentially anything else) with <code>foldr</code>, but it will be rather inelegant. Using <code>mapAccumL</code> might provide a better result, but IMO explicit recursion is the best here."}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1556576003, "post_id": 55910708, "comment_id": 98477893, "body": "@melpomene <code>deleteBy (&gt;=)</code>, I think... this illustrates why passing non-symmetric functions to <code>deleteBy</code> is something I&#39;d be cautious of."}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1556577962, "post_id": 55910708, "comment_id": 98478330, "body": "@chi I think mapAccumL is unsuited because it is length-preserving (ie. you&#39;d have to map it to something like <code>Maybe a</code> then take the <code>Just</code>s). Something like <code>concatMapAccum</code> from Data.Conduit.List could do it if it had a non-conduit analog (though that is more general, can send 1 element to any number of results)."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1556880702, "post_id": 55910708, "comment_id": 98587305, "body": "@melpomene <code>deleteBy</code> would fit like a glove weren&#39;t it for its peculiar equivalence-expecting signature, which clashes with the general problem statement here. There actually have been calls to change <code>deleteBy</code> to <code>(a -&gt; Bool) -&gt; [a] -&gt; [a]</code>... but then, negated predicate aside, you end up with <code>filterFirst</code>, exactly as the OP presented it here."}], "answers": [{"tags": [], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "is_accepted": false, "score": 4, "last_activity_date": 1556577210, "last_edit_date": 1556577210, "creation_date": 1556574437, "answer_id": 55911236, "question_id": 55910708, "link": "https://stackoverflow.com/questions/55910708/changing-recursive-guards-into-higher-order-functions/55911236#55911236", "title": "Changing recursive guards into higher order functions", "body": "<p>First, let's flip the argument order of your function. This will make a few steps easier, and we can flip it back when we're done. (I'll call the flipped version <code>filterFirst'</code>.)</p>\n\n<pre><code>filterFirst' :: [a] -&gt; (a -&gt; Bool) -&gt; [a]\nfilterFirst' [] _ = []\nfilterFirst' (y:ys) x\n    | x y       = y : filterFirst' ys x\n    | otherwise = ys\n</code></pre>\n\n<p>Note that <code>filterFirst' ys (const True) = ys</code> for all <code>ys</code>. Let's substitute that in place:</p>\n\n<pre><code>filterFirst' :: [a] -&gt; (a -&gt; Bool) -&gt; [a]\nfilterFirst' [] _ = []\nfilterFirst' (y:ys) x\n    | x y       = y : filterFirst' ys x\n    | otherwise = filterFirst' ys (const True)\n</code></pre>\n\n<p>Use if-else instead of a guard:</p>\n\n<pre><code>filterFirst' :: [a] -&gt; (a -&gt; Bool) -&gt; [a]\nfilterFirst' [] _ = []\nfilterFirst' (y:ys) x = if x y then y : filterFirst' ys x else filterFirst' ys (const True)\n</code></pre>\n\n<p>Move the second argument to a lambda:</p>\n\n<pre><code>filterFirst' :: [a] -&gt; (a -&gt; Bool) -&gt; [a]\nfilterFirst' [] = \\_ -&gt; []\nfilterFirst' (y:ys) = \\x -&gt; if x y then y : filterFirst' ys x else filterFirst' ys (const True)\n</code></pre>\n\n<p>And now this is something we can turn into a <code>foldr</code>. The pattern we were going for is that <code>filterFirst' (y:ys)</code> can be expressed in terms of <code>filterFirst' ys</code>, without using <code>ys</code> otherwise, and we're now there.</p>\n\n<pre><code>filterFirst' :: Foldable t =&gt; t a -&gt; (a -&gt; Bool) -&gt; [a]\nfilterFirst' = foldr (\\y f -&gt; \\x -&gt; if x y then y : f x else f (const True)) (\\_ -&gt; [])\n</code></pre>\n\n<p>Now we just need to neaten it up a bit:</p>\n\n<pre><code>filterFirst' :: Foldable t =&gt; t a -&gt; (a -&gt; Bool) -&gt; [a]\nfilterFirst' = foldr go (const [])\n  where go y f x\n          | x y       = y : f x\n          | otherwise = f (const True)\n</code></pre>\n\n<p>And flip the arguments back:</p>\n\n<pre><code>filterFirst :: Foldable t =&gt; (a -&gt; Bool) -&gt; t a -&gt; [a]\nfilterFirst = flip $ foldr go (const [])\n  where go y f x\n          | x y       = y : f x\n          | otherwise = f (const True)\n</code></pre>\n\n<p>And we're done. <code>filterFirst</code> implemented in terms of <code>foldr</code>.</p>\n\n<hr>\n\n<p>Addendum: Although <code>filter</code> isn't strong enough to build this, <code>filterM</code> is when used with the State monad:</p>\n\n<pre><code>{-# LANGUAGE FlexibleContexts #-}\n\nimport Control.Monad.State\n\nfilterFirst :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilterFirst x ys = evalState (filterM go ys) False\n  where go y = do\n          alreadyDropped &lt;- get\n          if alreadyDropped || x y then\n            return True\n          else do\n            put True\n            return False\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1556642726, "post_id": 55911376, "comment_id": 98504429, "body": "IMO, the main downside of a fold here is the loss of sharing. This is where paramorphisms come in."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556645484, "post_id": 55911376, "comment_id": 98505684, "body": "(See my answer, and please feel free to edit it if you think you can help make it more accessible to Haskell beginners.)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1556645714, "post_id": 55911376, "comment_id": 98505788, "body": "An aside: I absolutely wouldn&#39;t consider higher-order use of <code>foldr</code> an anti-pattern. In some cases (not this one) it actually does produce clear code. In some cases (particularly when writing high-performance library code) it&#39;s necessary to take advantage of GHC&#39;s list fusion optimizations. And it&#39;s fairly often necessary when generalizing list-consuming functions to <code>Foldable</code>-consuming ones."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1556666714, "post_id": 55911376, "comment_id": 98513137, "body": "I find one aspect of this solution quite fun: In a foldr-with-four-arguments implementation, typically the fold operation either pre-composes functions (as in the foldl-from-foldr trick) or post-composes them (as in the dlist trick). Here it is necessary to do both, as we want to test the elements left-to-right without building a reversed list. That becomes plainer to the eye if we golf <code>go</code> into <code>go y ys = (bool id (y :) &lt;*&gt; ys) . (&lt;= p y)</code> ."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556991630, "post_id": 55911376, "comment_id": 98619588, "body": "@dfeuer have you changed your <a href=\"https://stackoverflow.com/questions/55522847/implementing-haskells-take-function-using-foldl/55584633#comment97756176_55523947\">recent opinion</a> or have I misunderstood it? what specifically had you objected to, there? what&#39;s your opinion about the sharing, paramorphism-equivalent  <code>filterFirst p xs = foldr go id xs xs where go x r ~(_:xs) | p x = x : r xs | otherwise = xs</code>? would it be good, fusion-wise? (meta clarification: I&#39;m not being argumentative here; I want to understand your position). thanks."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556992090, "post_id": 55911376, "comment_id": 98619725, "body": "(a variant: <code>... where go _ r (x:xs) | p x = ...</code>; might be clearer (?) )"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1557005499, "post_id": 55911376, "comment_id": 98622843, "body": "@WillNess, I don&#39;t see any contradiction. What are you getting at? And I see no advantage whatsoever to using <code>foldr</code> if you&#39;re going to walk the list by pattern matching in parallel."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1556575310, "creation_date": 1556575310, "answer_id": 55911376, "question_id": 55910708, "link": "https://stackoverflow.com/questions/55910708/changing-recursive-guards-into-higher-order-functions/55911376#55911376", "title": "Changing recursive guards into higher order functions", "body": "<p>If we really want, we can write <code>filterFirst</code> using <code>foldr</code>, since <code>foldr</code> is kind of \"universal\" -- it allows any list transformation we can perform using recursion. The main downside is that the resulting code is rather counter-intuitive. In my opinion, explicit recursion is far better in this case.</p>\n\n<p>Anyway here's how it is done. This relies on what I consider to be an antipattern, namely \"passing <em>four</em> arguments to <code>foldr</code>\". I call this an antipattern since <code>foldr</code> is usually called with three arguments only, and the result is not a function taking a fourth argument.</p>\n\n<pre><code>filterFirst :: (a-&gt;Bool)-&gt;[a]-&gt;[a]\nfilterFirst p xs = foldr go (\\_ -&gt; []) xs True\n   where\n   go y ys True \n      | p y = y : ys True \n      | otherwise = ys False\n   go y ys False = y : ys False\n</code></pre>\n\n<p>Clear? Not very much. The trick here is to exploit <code>foldr</code> to build a function <code>Bool -&gt; [a]</code> which returns the original list if called with <code>False</code>, and the filtered-first list if called with <code>True</code>. If we craft that function using</p>\n\n<pre><code>foldr go baseCase xs\n</code></pre>\n\n<p>the result is then obviously</p>\n\n<pre><code>foldr go baseCase xs True\n</code></pre>\n\n<p>Now, the base case must handle the empty list, and in such case we must return a function returning the empty list, whatever the boolean argument is. Hence, we arrive at</p>\n\n<pre><code>foldr go (\\_ -&gt; []) xs True\n</code></pre>\n\n<p>Now, we need to define <code>go</code>. This takes as arguments:</p>\n\n<ol>\n<li>a list element <code>y</code></li>\n<li>the result of the \"recursion\" <code>ys</code> (a function <code>Bool-&gt;[a]</code> for the rest of the list)</li>\n</ol>\n\n<p>and must return a function <code>Bool-&gt;[a]</code> for the larger list. So let's also consider</p>\n\n<ol start=\"3\">\n<li>a boolean argument</li>\n</ol>\n\n<p>and finally make <code>go</code> return a list. Well, if the boolean is <code>False</code> we must return the list unchanged, so</p>\n\n<pre><code>go y ys False = y : ys False\n</code></pre>\n\n<p>Note that <code>ys False</code> means \"the tail unchanged\", so we are really rebuilding the whole list unchanged.</p>\n\n<p>If instead the boolean is true, we query the predicate as in <code>p y</code>. If that is false, we discard <code>y</code>, and return the list tail unchanged</p>\n\n<pre><code>   go y ys True \n      | p y = -- TODO\n      | otherwise = ys False\n</code></pre>\n\n<p>If <code>p y</code> is true, we keep <code>y</code> and we return the list tail filtered.</p>\n\n<pre><code>   go y ys True \n      | p y = y : ys True\n      | otherwise = ys False\n</code></pre>\n\n<p>As a final note, we cold have used a pair <code>([a], [a])</code> instead of a function <code>Bool -&gt; [a]</code>, but that approach does not generalize as well to more complex cases.</p>\n\n<p>So, that's all. This technique is something nice to know, but I do not recommend it in real code which is meant to be understood by others.</p>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1557040130, "post_id": 55911454, "comment_id": 98627562, "body": "<a href=\"https://stackoverflow.com/a/11951590/849891\">map + zip = scanl</a> and we can do a lot with scanl."}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1557041261, "post_id": 55911454, "comment_id": 98627742, "body": "@WillNess lol I&#39;m not sure how I feel about that link, but I stand by the claim that <code>map</code> is <i>unsuited</i> to the task, if not <i>unusable</i>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1557042892, "post_id": 55911454, "comment_id": 98628020, "body": "my lesson from it was, that in Haskell, <code>[] a</code> is not an unordered collection of <code>a</code>s, and <code>zip</code> is just <code>map2 (,)</code>."}], "tags": [], "owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "is_accepted": false, "score": 3, "last_activity_date": 1556575788, "creation_date": 1556575788, "answer_id": 55911454, "question_id": 55910708, "link": "https://stackoverflow.com/questions/55910708/changing-recursive-guards-into-higher-order-functions/55911454#55911454", "title": "Changing recursive guards into higher order functions", "body": "<p>Joseph and chi's answers already show how to derive a <code>foldr</code> implementation, so I'll try to aid intuition.</p>\n\n<p><code>map</code> is length-preserving, <code>filterFirst</code> is not, so trivially <code>map</code> must be unsuited for implementing <code>filterFirst</code>.</p>\n\n<p><code>filter</code> (and indeed <code>map</code>) are memoryless - the same predicate/function is applied to each element of the list, regardless of the result on other elements. In <code>filterFirst</code>, behaviour changes once we see the first non-satisfactory element and remove it, so <code>filter</code> (and <code>map</code>) are unsuited.</p>\n\n<p><code>foldr</code> is used to reduce a structure to a summary value. It's very general, and it might not be immediately obvious without experience what sorts of things this may cover. <code>filterFirst</code> is in fact such an operation, though. The intuition is something like, \"can we build it in a single pass through the structure, building it up as we go(, with additional state stored as required)?\". I fear Joseph's answer obfuscates a little, as <code>foldr</code> with 4 parameters, it may not be immediately obvious what's going on, so let's try it a little differently.</p>\n\n<pre><code>filterFirst p xs = snd $ foldr (\\a (deleted,acc) -&gt; if not deleted &amp;&amp; not (p a) then (True,acc) else (deleted,a:acc) ) (False,[]) xs\n</code></pre>\n\n<p>Here's a first attempt. The \"extra state\" here is obviously the bool indicating whether or not we've deleted an element yet, and the list accumulates in the second element of the tuple. At the end we call <code>snd</code> to obtain just the list. This implementation has the problem, however, that we delete the <em>rightmost</em> element not satisfying the predicate, because <code>foldr</code> first combines the rightmost element with the neutral element, then the second-rightmost, and so on. </p>\n\n<pre><code>filterFirst p xs = snd $ foldl (\\(deleted,acc) a -&gt; if not deleted &amp;&amp; not (p a) then (True,acc) else (deleted,a:acc) ) (False,[]) xs\n</code></pre>\n\n<p>Here, we try using <code>foldl</code>. This does delete the leftmost non-satisfactory element, but has the side-effect of reversing the list. We can stick a <code>reverse</code> at the front, and this would solve the problem, but is somewhat unsatisfactory due to the double-traversal. </p>\n\n<p>Then, if you go back to <code>foldr</code>, having realized that (basically) if you want transform a list whilst preserving order that <code>foldr</code> is the correct variant, you play with it for a while and end up writing what Joseph suggested. I do however agree with chi that straightforward recursion is the best solution here. </p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 4, "last_activity_date": 1556655863, "last_edit_date": 1556655863, "creation_date": 1556645388, "answer_id": 55926036, "question_id": 55910708, "link": "https://stackoverflow.com/questions/55910708/changing-recursive-guards-into-higher-order-functions/55926036#55926036", "title": "Changing recursive guards into higher order functions", "body": "<p>There is a higher-order function that's appropriate here, but it's not in the base library. What's the trouble with <code>foldr</code>? If you just fold over the list, you'll end up rebuilding the whole thing, <em>including</em> the part after the deletion. </p>\n\n<p>A more appropriate function for the job is <a href=\"http://hackage.haskell.org/package/recursion-schemes-5.1.3/docs/Data-Functor-Foldable.html#v:para\" rel=\"nofollow noreferrer\"><code>para</code></a> from the <code>recursion-schemes</code> package (I've renamed one of the type variables):</p>\n\n<pre><code>para :: Recursive t =&gt; (Base t (t, r) -&gt; r) -&gt; t -&gt; r\n</code></pre>\n\n<p>In the case of lists, this specializes to</p>\n\n<pre><code>para :: (ListF a ([a], r) -&gt; r) -&gt; [a] -&gt; r\n</code></pre>\n\n<p>where</p>\n\n<pre><code>data ListF a b = Nil | Cons a b\n  deriving (Functor, ....)\n</code></pre>\n\n<p>This is pretty similar to <code>foldr</code>. The <code>recursion-schemes</code> equivalent of <code>foldr</code> is</p>\n\n<pre><code>cata :: Recursive t =&gt; (Base t r -&gt; r) -&gt; t -&gt; r\n</code></pre>\n\n<p>Which specializes to</p>\n\n<pre><code>cata :: (ListF a r -&gt; r) -&gt; [a] -&gt; r\n</code></pre>\n\n<hr>\n\n<p>Take a break here and figure out why the type of <code>cata</code> is basically equivalent to that of <code>foldr</code>.</p>\n\n<hr>\n\n<p>The difference between <code>cata</code> and <code>para</code> is that <code>para</code> passes the folding function not only the result of folding over the tail of the list, but also the tail of the list itself. That gives us an easy and efficient way to produce the rest of the list after we've found the first non-matching element:</p>\n\n<pre><code>filterFirst :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilterFirst f = para go\n  where\n    --go :: ListF a ([a], [a]) -&gt; [a]\n    go (Cons a (tl, r))\n      | f a = a : r\n      | otherwise = tl\n    go Nil = []\n</code></pre>\n\n<hr>\n\n<p><code>para</code> is a bit awkward for lists, since it's designed to fit into a more general context. But just as <code>cata</code> and <code>foldr</code> are basically equivalent, we could write a slightly less awkward function specifically for lists.</p>\n\n<pre><code>foldrWithTails\n  :: (a -&gt; [a] -&gt; b -&gt; b)\n  -&gt; b -&gt; [a] -&gt; b\nfoldrWithTails f n = go\n  where\n    go (a : as) = f a as (go as)\n    go [] = n\n</code></pre>\n\n<p>Then</p>\n\n<pre><code>filterFirst :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilterFirst f = foldrWithTails go []\n  where\n    go a tl r\n      | f a = a : r\n      | otherwise = tl\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1557153035, "post_id": 55929279, "comment_id": 98659963, "body": "Your presentation is much better than mine. I may have to borrow some of it if I have time to revise."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1557283586, "post_id": 55929279, "comment_id": 98708719, "body": "@dfeuer I, in turn, have borrowed your <code>foldrWithTails</code> <a href=\"https://stackoverflow.com/a/56032831/2751851\">for an answer elsewhere</a>."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 2, "last_activity_date": 1556664087, "last_edit_date": 1556664087, "creation_date": 1556662216, "answer_id": 55929279, "question_id": 55910708, "link": "https://stackoverflow.com/questions/55910708/changing-recursive-guards-into-higher-order-functions/55929279#55929279", "title": "Changing recursive guards into higher order functions", "body": "<p>Your function can also be expressed as an unfold, or, more specifically, as an apomorphism. Allow me to begin with a brief explanatory note, before the solution itself.</p>\n\n<hr>\n\n<p>The apomorphism is the recursion scheme dual to the paramorphism (see <a href=\"https://stackoverflow.com/a/55926036/2751851\">dfeuer's answer</a> for more about the latter). Apomorphisms are examples of unfolds, which generate a structure from a seed. For instance, <code>Data.List</code> offers <code>unfoldr</code>, a list unfold.</p>\n\n<pre><code>unfoldr :: (b -&gt; Maybe (a, b)) -&gt; b -&gt; [a]\n</code></pre>\n\n<p>The function given to <code>unfoldr</code> takes a seed and either produces a list element and a new seed (if the maybe-value is a <code>Just</code>) or terminates the list generation (if it is <code>Nothing</code>). Unfolds are more generally expressed by the <code>ana</code> function from <em>recursion-schemes</em> (\"ana\" is short for \"anamorphism\").</p>\n\n<pre><code>ana :: Corecursive t =&gt; (a -&gt; Base t a) -&gt; a -&gt; t\n</code></pre>\n\n<p>Specialised to lists, this becomes...</p>\n\n<pre><code>ana @[_] :: (b -&gt; ListF a b) -&gt; b -&gt; [a]\n</code></pre>\n\n<p>... which is <code>unfoldr</code> in different clothing.</p>\n\n<p>An apomorphism is an unfold in which the generation of the structure can be short-circuited at any point of the process, by producing, instead of a new seed, the rest of the structure in a fell swoop. In the case of lists, we have:</p>\n\n<pre><code>apo @[_] :: (b -&gt; ListF a (Either [a] b)) -&gt; b -&gt; [a]\n</code></pre>\n\n<p><code>Either</code> is used to trigger the short-circuit: with a <code>Left</code> result, the unfold short-circuits, while with a <code>Right</code> it proceeds normally.</p>\n\n<hr>\n\n<p>The solution in terms of <code>apo</code> is fairly direct:</p>\n\n<pre><code>{-# LANGUAGE LambdaCase #-}\n\nimport Data.Functor.Foldable\n\nfilterFirst :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilterFirst p = apo go\n  where\n  go = \\case\n    [] -&gt; Nil\n    a : as\n      | p a -&gt; Cons a (Right as) \n      | otherwise -&gt; case as of\n        [] -&gt; Nil\n        b : bs -&gt; Cons b (Left bs) \n</code></pre>\n\n<p>It is somewhat more awkward than dfeuer's <code>para</code>-based solution, because if we want to short-circuit without an empty list for a tail we are compelled to emit one extra element (the <code>b</code> in the short-circuiting case), and so we have to look one position ahead. This awkwardness would grow by orders of magnitude if, rather than <code>filterFirst</code>, we were to imp\u013aement plain old <code>filter</code> with an unfold, as beautifully explained in <a href=\"https://stackoverflow.com/q/18421926/2751851\"><em>List filter using an anamorphism</em></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1556886696, "post_id": 55967409, "comment_id": 98590334, "body": "<code>BrokenList</code> is <a href=\"https://wiki.haskell.org/Prime_numbers_miscellaneous#Implicit_Heap\" rel=\"nofollow noreferrer\">&quot;<code>People</code>&quot;</a> too. :)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1556901429, "post_id": 55967409, "comment_id": 98598657, "body": "@WillNess Thanks, that is very interesting! Though I had tried to find prior art on <code>BrokenList</code>, this particular search string would never have occurred to me :)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556909249, "post_id": 55967409, "comment_id": 98601719, "body": "<a href=\"https://mail.haskell.org/pipermail/haskell-cafe/2007-July/029391.html\" rel=\"nofollow noreferrer\">here&#39;s where it started</a>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1557110205, "post_id": 55967409, "comment_id": 98643131, "body": "I think it would pay to motivate the use of <code>hylo</code> by showing the unfused production and consumption of a <code>BrokenList</code>. It would also be nice to explain how using <code>BrokenList</code> is better (Easier to understand? Easier to modify somehow?) than a direct approach using <code>para</code> or raw pattern matching."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1557112822, "post_id": 55967409, "comment_id": 98643578, "body": "@dfeuer I&#39;ll look into doing that. As for what is better, the <code>para</code> solution is also fine, and explicit recursion isn&#39;t actually hard to follow in this specific case. Still, in spite of the relative verbosity I find the <code>hylo</code> solution very transparent. Maybe it&#39;s just an aesthetic feeling, but I find it very satisfying to see a datatype capturing an essential aspect of an algorithm like that. (<a href=\"https://stackoverflow.com/a/55816153/2751851\">Designer monoid <code>foldMap</code> solutions</a> make me happy in a similar way.)"}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 2, "last_activity_date": 1556880402, "last_edit_date": 1556880402, "creation_date": 1556877308, "answer_id": 55967409, "question_id": 55910708, "link": "https://stackoverflow.com/questions/55910708/changing-recursive-guards-into-higher-order-functions/55967409#55967409", "title": "Changing recursive guards into higher order functions", "body": "<p><em>This answer is inspired by <a href=\"https://stackoverflow.com/questions/55940787/filterfirst-in-haskell-using-higher-order-functions#comment98535277_55940787\">a comment from luqui</a> on a now-deleted question.</em></p>\n\n<p><code>filterFirst</code> can be implemented in a fairly direct way in terms of <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:span\" rel=\"nofollow noreferrer\"><code>span</code></a>:</p>\n\n<pre><code>filterFirst :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilterFirst p = (\\(yeas, rest) -&gt; yeas ++ drop 1 rest) . span p\n</code></pre>\n\n<p><code>span :: (a -&gt; Bool) -&gt; [a] -&gt; ([a], [a])</code> splits the list in two at the first element for which the condition doesn't hold. After <code>span</code>, we drop the first element of the second part of the list (with <code>drop 1</code> rather than <code>tail</code> so that we don't have to add a special case for <code>[]</code>), and reassemble the list with <code>(++)</code>.  </p>\n\n<p>As an aside, there is a near-pointfree spelling of this implementation which I find too pretty not to mention:</p>\n\n<pre><code>filterFirst :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilterFirst p = uncurry (++) . second (drop 1) . span p\n</code></pre>\n\n<hr>\n\n<p>While <code>span</code> is a higher order function, it would be perfectly understandable if you found this implementation disappointing in the context of your question. After all, <code>span</code> is not much more fundamental than <code>filterFirst</code> itself. Shouldn't we try going a little deeper, to see if we can capture the spirit of this solution while expressing it as a fold, or as some other recursion scheme?</p>\n\n<p>I believe functions like <code>filterFirst</code> can be fine demonstrations of <em>hylomorphisms</em>. A hylomorphism is an unfold (see <a href=\"https://stackoverflow.com/a/55929279/2751851\">my other answer</a> for more on that) that generates an intermediate data structure followed by a fold which turns this data structure into something else. Though it might look like that would require two passes to get a result (one through the input structure, and another through the intermediate one), if the hylomorphism implemented properly (as done in the <code>hylo</code> function of <em>recursion-schemes</em>) it can be done in a single pass, with the fold consuming pieces of the intermediate structure as they are generated by the unfold (so that we don't have to actually build it all only to tear it down).</p>\n\n<p>Before we start, here is the boilerplate needed to run what follows:</p>\n\n<pre><code>{-# LANGUAGE LambdaCase #-}\n{-# LANGUAGE DeriveFunctor #-}\n{-# LANGUAGE DeriveFoldable #-}\n{-# LANGUAGE DeriveTraversable #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TemplateHaskell #-}\n\nimport Data.Functor.Foldable\nimport Data.Functor.Foldable.TH\n</code></pre>\n\n<p>The strategy here is picking an intermediate data structure for the hylomorphism that expresses the essence of what we want to achieve. In this case, we will use this cute thing:</p>\n\n<pre><code>data BrokenList a = Broken [a] | Unbroken a (BrokenList a)\n    -- I won't actually use those instances here,\n    -- but they are nice to have if you want to play with the type.\n    deriving (Eq, Show, Functor, Foldable, Traversable)\nmakeBaseFunctor ''BrokenList \n</code></pre>\n\n<p><code>BrokenList</code> is very much like a list (<code>Broken</code> and <code>Unbroken</code> mirror <code>[]</code> and <code>(:)</code>, while the <code>makeBaseFunctor</code> incantation generates a <code>BrokenListF</code> base functor analogous to <code>ListF</code>, with <code>BrokenF</code> and <code>UnbrokenF</code> constructors), except that it has another list attached at its end (the <code>Broken</code> constructor). It expresses, in a quite literal way, the idea of a list being divided in two parts.</p>\n\n<p>With <code>BrokenList</code> at hand, we can write the hylomorphism. <code>coalgSpan</code> is the operation used for the unfold, and <code>algWeld</code>, the one used for the fold.</p>\n\n<pre><code>filterFirst p = hylo algWeld coalgSpan\n    where\n    coalgSpan = \\case\n        [] -&gt; BrokenF []\n        x : xs\n            | p x -&gt; UnbrokenF x xs\n            | otherwise -&gt; BrokenF xs\n    algWeld = \\case\n        UnbrokenF x yeas -&gt; x : yeas\n        BrokenF rest -&gt; rest\n</code></pre>\n\n<p><code>coalgSpan</code> breaks the list upon hitting a <code>x</code> element such that <code>p x</code> doesn't hold. Not adding that element to the second part of the list (<code>BrokenF xs</code> rather than <code>BrokenF (x : xs)</code>) takes care of the filtering. As for <code>algWeld</code>, it is used to concatenate the two parts (it is very much like what we would use to implement <code>(++)</code> using <code>cata</code>).</p>\n\n<p>(For a similar example of <code>BrokenList</code> in action, see the <code>breakOn</code> implementation in Note 5 of <a href=\"https://stackoverflow.com/a/49271176/2751851\">this older answer of mine</a>. It suggests what it would take to implement <code>span</code> using this strategy.)</p>\n\n<p>There are at least two good things about this <code>hylo</code>-based implementation. Firstly, it has good performance (casual testing suggests that, if compiled with optimisations, it is at least as good as, and possibly slightly faster than, the most efficient implementations in other answers here). Secondly, it reflects very closely your original, explicitly recursive implementation of <code>filterFirst</code> (or, at any rate, more closely than the fold-only and unfold-only implementations).</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user11340751"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 506, "favorite_count": 1, "accepted_answer_id": 55911376, "answer_count": 6, "score": 8, "last_activity_date": 1556880402, "creation_date": 1556571391, "last_edit_date": 1556662297, "question_id": 55910708, "link": "https://stackoverflow.com/questions/55910708/changing-recursive-guards-into-higher-order-functions", "title": "Changing recursive guards into higher order functions", "body": "<p>I'm trying to convert basic functions into higher order functions (specifically map, filter, or foldr). I was wondering if there are any simple concepts to apply where I could see old functions I've written using guards and turn them into higher order.</p>\n\n<p>I'm working on changing a function called <code>filterFirst</code> that removes the first element from the list (second argument) that does not satisfy a given predicate function (first argument).</p>\n\n<pre><code>filterFirst :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilterFirst _ [] = []\nfilterFirst x (y:ys)\n    | x y       = y : filterFirst x ys\n    | otherwise = ys\n</code></pre>\n\n<p>For an example:</p>\n\n<pre><code> greaterOne :: Num a=&gt;Ord a=&gt;a-&gt;Bool\n greaterOne x = x &gt; 1\n\n filterFirst greaterOne [5,-6,-7,9,10]\n [5,-7,9,10]\n</code></pre>\n\n<p>Based on the basic recursion, I was wondering if there might be a way to translate this (and similar functions) to higher order map, filter, or foldr. I'm not very advanced and these functions are new to me.</p>\n"}, {"tags": ["haskell", "concurrency", "jvm", "ghc"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1556568666, "post_id": 55909755, "comment_id": 98475604, "body": "Why <code>MVar (Map k v)</code> does not count? What functionality do you miss from that?"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1556568681, "post_id": 55909755, "comment_id": 98475612, "body": "1 may be OT here since it&#39;s a library recommendation question. You can use <code>forkOn</code> to assign a thread to a particular capability. Maybe you could elaborate a little more on your second question? What kind of control do you need exactly? There are some packages on hackage that implement various work stealing schemes"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1556568805, "post_id": 55909755, "comment_id": 98475666, "body": "@chi <code>MVar (Map k v)</code> prevents concurrent access altogether. Something like <code>ConcurrentHashMap</code> locks up only subsets of the map."}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1556568847, "post_id": 55909755, "comment_id": 98475682, "body": "Re. 1) I found ctrie and stm-containers with a quick search"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 1, "creation_date": 1556569084, "post_id": 55909755, "comment_id": 98475792, "body": "@jberryman I was sort of hoping there was something in the libraries that ship with GHC which would provide an abstraction layer over various work stealing schemes (as is the case in the Java standard library). Sounds like the answer to 2 is simply &quot;not in any of the boot libs, but perhaps on Hackage&quot;."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1556569604, "post_id": 55909755, "comment_id": 98475986, "body": "@moonGoose I&#39;m not sure I see why <code>stm-containers</code> need to have operations that live in the <code>STM</code> monad. I would expect concurrent data structures to have operations living in the <code>IO</code> monad and using <code>MVar</code> under the hood. As for <code>ctrie</code>, its API is quite lacking (I&#39;d expect at least some <code>updateLookupWithKey</code>-like function). Also, it hasn&#39;t been updated since 2017."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 2, "creation_date": 1556570253, "post_id": 55909755, "comment_id": 98476247, "body": "This is a very broad question to attempt to answer on SO. I&#39;d recommend reading Simon Marlow&#39;s free book, <i><a href=\"https://learning.oreilly.com/library/view/parallel-and-concurrent/9781449335939/\" rel=\"nofollow noreferrer\">Parallel and Concurrent Programming in Haskell</a></i>"}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 1, "creation_date": 1556570341, "post_id": 55909755, "comment_id": 98476276, "body": "@Alec As I understand it, STM is just an useful abstraction for working in a concurrent context, offering better properties than eg. <code>MVar</code> (see package description <a href=\"http://hackage.haskell.org/package/stm\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/stm</a>), so why wouldn&#39;t you want your structures&#39; operations to live there? You can transfer <code>atomically :: STM a -&gt; IO a</code>. You can also get the structure in <code>IO</code> if you want, see eg. <code>newIO :: IO (Map key value)</code>. Agreed re. <code>ctrie</code> but it&#39;s probably quite usable."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556659451, "post_id": 55920019, "comment_id": 98511248, "body": "<code>par</code> is (unofficially?) deprecated in favor of <code>parEval</code> (or the more primitively implemented but inferior <code>rpar</code>) in <code>Control.Parallel.Strategies</code>. <code>par</code> has issues controlling speculative computation because there&#39;s no clear way to tell the system whether or not you still intend to use a result being calculated speculatively (I think there may be GC issues too). Marlow seems to think the whole built-in parallelism mechanism is a bit too hard to control. He prefers the <code>Par</code> monad these days."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556660012, "post_id": 55920019, "comment_id": 98511436, "body": "There&#39;s one other mechanism for shared concurrent storage: atomic operations on <code>IORef</code> and various array types. These operations are good for writing lock-free structures, which are <i>sometimes</i> appropriate."}], "tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": false, "score": 3, "last_activity_date": 1556624032, "creation_date": 1556624032, "answer_id": 55920019, "question_id": 55909755, "link": "https://stackoverflow.com/questions/55909755/concurrent-programming-in-haskell/55920019#55920019", "title": "Concurrent programming in Haskell", "body": "<p>An entire book could be written on this topic, so I'll try to touch on just the points you're asking about.</p>\n\n<ul>\n<li><p>You can use the <code>par</code> combinator to schedule <em>pure</em> computations to be done at some future point in time. The RTS <em>already</em> implements work-stealing queues for this and <em>already</em> maintains one thread per CPU core for running them. (If you link your program with the appropriate switches.) Note that this won't help one bit for impure code, and won't let you specify which thread or which core the code executes on.</p></li>\n<li><p>For shared <em>mutable</em> storage, you have two options.</p>\n\n<ul>\n<li><p>Explicit locking using <code>MVar</code>. This has all the usual pitfalls of locking in other programming languages. (Deadlocks, forgetting to lock things, locking too many things, locking things too long, not locking them for long enough...) So <code>MVar (Map k v)</code> <em>absolutely</em> counts!</p></li>\n<li><p>STM. You seem to misunderstand what this does. The whole <em>point</em> of STM is that you <em>don't need locks</em>. It lets you use shared mutable data structures \"as if\" they're not shared, but it automatically prevents data races, inconsistent state, and all the other usual problems with not using locks. It also allows a thread to wait on multiple conditions simultaneously. It's an incredible framework!</p></li>\n</ul></li>\n<li><p>If you want to run code on a specific OS thread, you're probably looking for <code>forkOS</code> rather than <code>forkIO</code>.</p></li>\n</ul>\n\n<p>Given your use case, I suspect STM is probably what you're looking for. If you have a specific task you're trying to do, post another question and you will probably get more specific advise.</p>\n"}], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 483, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1556624032, "creation_date": 1556566530, "question_id": 55909755, "link": "https://stackoverflow.com/questions/55909755/concurrent-programming-in-haskell", "title": "Concurrent programming in Haskell", "body": "<p>Two (related) questions about concurrent programming in Haskell compared to Java/Scala:</p>\n\n<ol>\n<li><p>What do Haskeller's use for concurrent data structures? Is there anything analogous to Java's <code>java.util.concurrent.{ConcurrentHashMap, ConcurrentSkipListSet, ..}</code>. <code>MVar (Map k v)</code> does <em>not</em> count :). Shared mutable state is evil, but occasionally necessary. </p></li>\n<li><p>Is there any equivalent to Java's <code>ExecutorService</code>? AFAIK, Haskell threads (see <code>fork#</code>, <code>yield#</code>, etc. in <code>GHC.Exts</code>) are all scheduled by something built into the RTS. But what if I specifically want to use a fork join pool, or schedule some computations on a thread pool? Being able to put <code>Future</code>'s on specific execution contexts is really handy in Scala, and I don't know how to do that in Haskell.</p></li>\n</ol>\n"}, {"tags": ["haskell", "opengl", "glut"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1556555424, "post_id": 55907243, "comment_id": 98470237, "body": "For games I&#39;d also recommend <code>sdl2</code> - which has proper support for keyboards and gamepads among other things - over <code>GLUT</code>; You might also want to check out the <code>OpenGL</code> package which has higher level bindings than the one in <code>OpenGLRaw</code>"}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 5564561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d883e6efc1006239ae00a7a57b4a7f37?s=128&d=identicon&r=PG&f=1", "display_name": "Ste1891", "link": "https://stackoverflow.com/users/5564561/ste1891"}, "edited": false, "score": 0, "creation_date": 1556557623, "post_id": 55907359, "comment_id": 98471126, "body": "Thanks, it works now.  I&#39;d misinterpreted what the type of KeyboardCallback meant."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1556555116, "creation_date": 1556555116, "answer_id": 55907359, "question_id": 55907243, "link": "https://stackoverflow.com/questions/55907243/is-there-any-way-i-can-use-glut-to-meet-this-requirement-in-a-haskell-program/55907359#55907359", "title": "Is there any way I can use GLUT to meet this requirement in a Haskell program?", "body": "<p>You say</p>\n\n<blockquote>\n  <p>any IO action it might perform to do this (such as writing to an IORef) would require it to have a reference to such an object</p>\n</blockquote>\n\n<p>so give it a reference to such an object!</p>\n\n<pre><code>handle_input :: IORef ControlButton -&gt; Char -&gt; Position -&gt; IO ()\nhandle_input = {- I bet you can write this yourself -}\n\niteration :: IORef ControlButton -&gt; Int -&gt; IO ()\niteration = {- same -}\n\nmain = do\n    {- ... -}\n    ref &lt;- newIORef Default_control\n    keyboardCallback $= Just (handle_input ref)\n    {- ... -}\n    iteration ref 0\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 5564561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d883e6efc1006239ae00a7a57b4a7f37?s=128&d=identicon&r=PG&f=1", "display_name": "Ste1891", "link": "https://stackoverflow.com/users/5564561/ste1891"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 55907359, "answer_count": 1, "score": 2, "last_activity_date": 1556555116, "creation_date": 1556554689, "question_id": 55907243, "link": "https://stackoverflow.com/questions/55907243/is-there-any-way-i-can-use-glut-to-meet-this-requirement-in-a-haskell-program", "title": "Is there any way I can use GLUT to meet this requirement in a Haskell program?", "body": "<p>I'm developing an open source 3D game engine using Haskell and OpenGL.  The code that initialises a window and OpenGL context, as well as the code to get user input currently uses direct WinAPI calls.  I now want to make the application multiplatform and initially thought GLUT could be used to replace the above solution, but have run into a problem related to call backs.</p>\n\n<p>In my application the function update_play (within the IO monad) has the following line.</p>\n\n<pre><code>control &lt;- messagePump (hwnd_ io_box)\n</code></pre>\n\n<p>where messagePump is an IO action that checks the window message queue for keyboard input and returns an Int to indicate either that a certain valid key is pressed or no valid input.  update_play branches on the result and recurses to update the game state.  If you'd like some more context, this link is to the relevant module on Github: <a href=\"https://github.com/Mushy-pea/Game-Dangerous/blob/master/Game_logic.hs\" rel=\"nofollow noreferrer\">https://github.com/Mushy-pea/Game-Dangerous/blob/master/Game_logic.hs</a></p>\n\n<p>The problem I have with GLUT is that it handles keyboard input with callbacks and the one closest to my requirement (binding within Graphics.UI.GLUT on Hackage) is defined as follows.</p>\n\n<pre><code>type KeyboardCallback = Char -&gt; Position -&gt; IO ()\n</code></pre>\n\n<p>Below is a test program I'd hoped would prove this approach would work.  As the callback (handle_input below) is called by the GLUT event loop with arguments that represent the user input, it seems impossible to get any information into it from the rest of my program.  It therefore seems impossible for my program to get a result from it, as any IO action it might perform to do this (such as writing to an IORef) would require it to have a reference to such an object.</p>\n\n<p>In the example I've tried using exceptions to communicate but they don't get caught, which I suspect is due to handle_input being called by a foreign library.  If anyone can suggest how I might solve this (i.e. get an Int back from the callback, like I do from messagePump in my actual application) I'd be grateful.  Thanks.</p>\n\n<pre><code>module Main where\n\nimport System.IO\nimport Data.Bits\nimport Control.Exception\nimport Graphics.GL.Core33\nimport Graphics.UI.GLUT\n\ndata ControlButton = W_key | S_key | A_key | D_key | Default_control deriving (Eq, Show)\n\ninstance Exception ControlButton\n\nmain = do\n  initialize \"test.exe\" []\n  initialWindowSize $= (Size 800 800)\n  initialDisplayMode $= [RGBAMode, WithAlphaComponent, WithDepthBuffer, DoubleBuffered]\n  window_id &lt;- createWindow \"Test\"\n  actionOnWindowClose $= Exit\n  displayCallback $= repaint_window\n  keyboardCallback $= (Just handle_input)\n  glClearColor 0 0 0.75 0\n  iteration 0\n\niteration :: Int -&gt; IO ()\niteration c = do\n  threadDelay 33333\n  putStr (\"\\nc: \" ++ show c)\n  control &lt;- catch check_events (\\e -&gt; map_control e)\n  if control == 1 then putStr \"\\nW pressed\"\n  else if control == 2 then putStr \"\\nS pressed\"\n  else if control == 3 then putStr \"\\nA pressed\"\n  else if control == 4 then putStr \"\\nD pressed\"\n  else return ()\n  iteration (c + 1)\n\ncheck_events :: IO Int\ncheck_events = do\n  mainLoopEvent\n  return 0\n\nmap_control :: ControlButton -&gt; IO Int\nmap_control e = do\n  if e == W_key then return 1\n  else if e == S_key then return 2\n  else if e == A_key then return 3\n  else if e == D_key then return 4\n  else return 0\n\nrepaint_window :: IO ()\nrepaint_window = do\n  glClear (GL_COLOR_BUFFER_BIT .|. GL_DEPTH_BUFFER_BIT)\n  swapBuffers\n\nhandle_input :: Char -&gt; Position -&gt; IO ()\nhandle_input key position = do\n  if key == 'w' then throw W_key\n  else if key == 's' then throw S_key\n  else if key == 'a' then throw A_key\n  else if key == 'd' then throw D_key\n  else throw Default_control\n</code></pre>\n\n<p>Steven</p>\n"}, {"tags": ["haskell", "types", "default", "monads", "side-effects"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1556555073, "post_id": 55906606, "comment_id": 98470067, "body": "This is not a good idea. In a lazy language it is very hard to predict when expressions get evaluated, but on the other hand we do not care that much since purity ensures that the final result is the same. Your instance breaks this property: <code>let t=def in (t,t)</code> becomes no longer equivalent to <code>(def, def)</code>, since the latter can evaluate to a pair with different components. More pragmatically, <code>def</code> might be evaluated only at print-to-screen-time instead of at creation-time, causing very puzzling timestamps."}], "answers": [{"comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1556553021, "post_id": 55906690, "comment_id": 98469083, "body": "Technically you <i>can</i> do that with usafe-IO, but that won&#39;t work the way you expect."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1556553060, "post_id": 55906690, "comment_id": 98469114, "body": "Yes, there is a second approximation which is different from the first. But my answer, and my recommendation, stands."}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1556555460, "post_id": 55906690, "comment_id": 98470254, "body": "Do you think the <code>Default (IO a)</code> instance provided &quot;should&quot; be there from a design standpoint? I guess it gives convenience sometimes, at the cost of preventing default-from-(IO-)-environment instances?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1556558120, "post_id": 55906690, "comment_id": 98471332, "body": "@moonGoose The IO and function instances synergize well: libraries which take a callback, say, <code>KeyEvent -&gt; IO ()</code>, can be easily given <code>def</code> and that is a sensible default (basically, ignore the event and do nothing). I think I am pretty okay ruling out instances which do actual IO; despite liking <code>Default</code> more than most Haskellers, and so probably using it more than most, I haven&#39;t really felt any pain from ruling out exciting IO instances."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 4, "last_activity_date": 1556552585, "creation_date": 1556552585, "answer_id": 55906690, "question_id": 55906606, "link": "https://stackoverflow.com/questions/55906606/side-effects-inside-instance-declaration/55906690#55906690", "title": "Side Effects inside instance declaration", "body": "<p>To a first approximation: you can't do that. Once in IO, always in IO (and there is already a <code>Default</code> instance for <code>IO a</code> that doesn't do what you want). Cook up a different plan.</p>\n"}, {"comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1556553061, "post_id": 55906814, "comment_id": 98469116, "body": "This still won&#39;t work the way the OP expects. Depending on reasons, sometimes it will be the actual now, other times it will be some point from the past."}, {"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1556553259, "post_id": 55906814, "comment_id": 98469224, "body": "This is because there is no meaningful way how it can work, but it will work in first approximation. Because compiler doesn&#39;t cache function call result."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556562114, "post_id": 55906814, "comment_id": 98473005, "body": "@talex, function call results aren&#39;t cached, but this isn&#39;t considered a function call in that context. Without optimization it will be implemented using a function call (applying a dictionary argument) and therefore presumably not cached. With optimization, the specializer will almost certainly lift the call out to the top level, and run the <code>IO</code> action only the first time a timestamp is requested."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1556562414, "post_id": 55906814, "comment_id": 98473131, "body": "The usual advice applies. Beginning Haskell programmers shouldn&#39;t use any unsafe <code>IO</code> (except what&#39;s in <code>Debug.Trace</code>). Advanced Haskell programmers know that they should almost never use unsafe <code>IO</code>. There are a <i>very small number</i> of situations where advanced programmers know they can use it safely (usually in combination with the FFI). In the rest, they will take extreme care and may well ship subtly buggy code until someone trips over it. Yes, that includes the advanced Haskell programmers who wrote the GHC runtime system; this stuff is <i>hard</i> to get right."}], "tags": [], "owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "is_accepted": false, "score": 0, "last_activity_date": 1556553020, "creation_date": 1556553020, "answer_id": 55906814, "question_id": 55906606, "link": "https://stackoverflow.com/questions/55906606/side-effects-inside-instance-declaration/55906814#55906814", "title": "Side Effects inside instance declaration", "body": "<p>Since <code>getCurrentTime :: IO UTCTime</code> you can't just call it. There is no function with type <code>IO a -&gt; a</code></p>\n\n<p>Except <code>unsafePerformIO</code> (and other magic stuff like it). I strongly discourage you from taking that route.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556561704, "post_id": 55907225, "comment_id": 98472812, "body": "I agree that would be reasonable in a hypothetical world in which overlapping instances are reasonable. We don&#39;t live in that world, however."}], "tags": [], "owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "is_accepted": false, "score": 2, "last_activity_date": 1556558449, "last_edit_date": 1556558449, "creation_date": 1556554616, "answer_id": 55907225, "question_id": 55906606, "link": "https://stackoverflow.com/questions/55906606/side-effects-inside-instance-declaration/55907225#55907225", "title": "Side Effects inside instance declaration", "body": "<p>I'd throw into the mix that you could write this for a type where the default value requires an IO action, </p>\n\n<pre><code>instance {-# OVERLAPPING #-} Default (IO CustomDateStamp) where\n    def = CustomDateStamp &lt;$&gt; getCurrentTime\n</code></pre>\n\n<p>(easily adjustable for eg. an mtl-stack). Somewhat controversial because overlapping is naughty.</p>\n\n<p>EDIT: Requires <code>OVERLAPPING</code>, <code>IO CustomDateStamp</code> is more specific than <code>IO a</code> so it should select this instance when in scope.</p>\n"}], "owner": {"reputation": 13393, "user_id": 1772334, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/36bbc437a85c7654d1841ad508c78acb?s=128&d=identicon&r=PG", "display_name": "Abraham P", "link": "https://stackoverflow.com/users/1772334/abraham-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1556558449, "creation_date": 1556552301, "last_edit_date": 1556552821, "question_id": 55906606, "link": "https://stackoverflow.com/questions/55906606/side-effects-inside-instance-declaration", "title": "Side Effects inside instance declaration", "body": "<p>Say I wanted to create a wrapper for <a href=\"http://hackage.haskell.org/package/time-1.9.2/docs/Data-Time-Clock.html\" rel=\"nofollow noreferrer\">UTCTime</a>:</p>\n\n<pre><code>data CustomDateStamp = CustomDateStamp\n    { \n      stampValue :: UTCTime\n    } deriving (Show, Eq, Ord, Typeable)\n</code></pre>\n\n<p>Now say I wanted to construct a default for that to \"now\", e.g.</p>\n\n<pre><code>instance Default CustomDateStamp where\n    def = CustomDateStamp getCurrentTime def\n</code></pre>\n\n<p>This (obviously) fails with: </p>\n\n<pre><code>   \u2022 Couldn't match expected type \u2018UTCTime\u2019\n                  with actual type \u2018IO UTCTime\u2019\n    \u2022 In the first argument of \u2018CustomDateStamp\u2019, namely \u2018getCurrentTime\u2019\n      In the expression: CustomDateStamp getCurrentTime def\n      In an equation for \u2018def\u2019: def = CustomDateStamp getCurrentTime def\n    |\n98  |     def = CustomDateStamp getCurrentTime def\n    |                   ^^^^^^^^^^^^^^\n</code></pre>\n\n<p>My question is, how can I use sideeffecty operations inside instance definitions? Is this even possible? What's the preferred approach to this sort of situation?</p>\n"}, {"tags": ["if-statement", "haskell"], "answers": [{"comments": [{"owner": {"reputation": 167, "user_id": 11426990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83513622a4a19d1bcdf43d7b7bd3fb9d?s=128&d=identicon&r=PG&f=1", "display_name": "Ron Wiese", "link": "https://stackoverflow.com/users/11426990/ron-wiese"}, "edited": false, "score": 0, "creation_date": 1556541913, "post_id": 55903618, "comment_id": 98462964, "body": "Thanks a lot. I am haskell beginner. Do u have any advice for practicing functions in general?"}, {"owner": {"reputation": 173, "user_id": 11407658, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55e3a31f9aede58b2b6ce0d686adba0c?s=128&d=identicon&r=PG&f=1", "display_name": "Buh13246", "link": "https://stackoverflow.com/users/11407658/buh13246"}, "reply_to_user": {"reputation": 167, "user_id": 11426990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83513622a4a19d1bcdf43d7b7bd3fb9d?s=128&d=identicon&r=PG&f=1", "display_name": "Ron Wiese", "link": "https://stackoverflow.com/users/11426990/ron-wiese"}, "edited": false, "score": 1, "creation_date": 1556542038, "post_id": 55903618, "comment_id": 98463022, "body": "there is a good free haskell book for beginners. I&#39;m not a big fan but its easy for beginners: <a href=\"http://learnyouahaskell.com\" rel=\"nofollow noreferrer\">learnyouahaskell.com</a>"}], "tags": [], "owner": {"reputation": 173, "user_id": 11407658, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55e3a31f9aede58b2b6ce0d686adba0c?s=128&d=identicon&r=PG&f=1", "display_name": "Buh13246", "link": "https://stackoverflow.com/users/11407658/buh13246"}, "is_accepted": true, "score": 8, "last_activity_date": 1556541645, "creation_date": 1556541645, "answer_id": 55903618, "question_id": 55903560, "link": "https://stackoverflow.com/questions/55903560/simplify-if-statements-in-function/55903618#55903618", "title": "Simplify if-statements in function", "body": "<p>Try this</p>\n\n<pre><code>f x y z\n  |\u00a0y &gt;=15 &amp;&amp; y &lt; 23 = x*5\n  | otherwise = f(x+4) (y+7) z\n</code></pre>\n"}], "owner": {"reputation": 167, "user_id": 11426990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83513622a4a19d1bcdf43d7b7bd3fb9d?s=128&d=identicon&r=PG&f=1", "display_name": "Ron Wiese", "link": "https://stackoverflow.com/users/11426990/ron-wiese"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 55903618, "answer_count": 1, "score": 0, "last_activity_date": 1556568838, "creation_date": 1556541401, "last_edit_date": 1556568838, "question_id": 55903560, "link": "https://stackoverflow.com/questions/55903560/simplify-if-statements-in-function", "title": "Simplify if-statements in function", "body": "<p>The following function includes multiple if-then-else statements. Is it possible to simplify the code without using the inner if-then-else statement? </p>\n\n<pre><code>f x y z = if y &gt;= 15 \n            then (if y &lt; 23 then x*5 else f (x+4) (y+7) z) \n            else f(x+4) (y+7) z\n</code></pre>\n"}, {"tags": ["performance", "haskell", "time-complexity", "space-complexity"], "comments": [{"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1556539655, "post_id": 55902855, "comment_id": 98461653, "body": "It looks like in second example compiler failed to inline <code>list</code> so it actually calculate it, store in memory, and read it from memory."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1556541647, "post_id": 55902855, "comment_id": 98462810, "body": "@talex Inlining <code>let x = expensiveComputation in f x x</code> can be harmful in the general case, since it can cause <code>x</code> to be computed twice. Using <code>where</code> we can have a similar issue. I think GHC is pretty conservative with inlining in this case, since it can cause performance disasters (e.g. doing two recursive calls instead of one can cause an exponential blowup)."}, {"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556544570, "post_id": 55902855, "comment_id": 98464358, "body": "@chi yes, but in this case inlining lead to no computation at all. It will be computed on the fly."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1556545002, "post_id": 55902855, "comment_id": 98464628, "body": "@talex I agree, but I don&#39;t expect GHC to understand that in this case, it can safely inline. Detecting when one can and when one can not inline looks non trivial."}], "answers": [{"comments": [{"owner": {"reputation": 677, "user_id": 3536806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c5321e2babfa1c70186599163a3c188?s=128&d=identicon&r=PG&f=1", "display_name": "Dominik Schrempf", "link": "https://stackoverflow.com/users/3536806/dominik-schrempf"}, "edited": false, "score": 0, "creation_date": 1556600441, "post_id": 55903994, "comment_id": 98482707, "body": "Thank you! What is your opinion with respect to using let/where clauses? I often use them in situations where giving names to sub-expressions is useful for readability and to reduce code redundance; and in these cases I do not think about performance at all (actually, I thought that using where in exam2 would result in a speed benefit). Or, is there a way to write more readable and less redundant code (like exam2) that runs as fast as exam1?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 677, "user_id": 3536806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c5321e2babfa1c70186599163a3c188?s=128&d=identicon&r=PG&f=1", "display_name": "Dominik Schrempf", "link": "https://stackoverflow.com/users/3536806/dominik-schrempf"}, "edited": false, "score": 0, "creation_date": 1556609756, "post_id": 55903994, "comment_id": 98486290, "body": "@DominikSchrempf I use let/where to structure code for readability first. Then, if performance is a concern, I can make some adjustments. If <code>let x = ...</code> is only used once, there is no difference, and the compiler will probably inline it. If it is used twice or more, one has to ask themselves &quot;do I want this information to be stored and reused? or is cheaper to recompute it?&quot;. Usually, if <code>x</code> has a fixed memory size(e.g. it&#39;s a single int), it&#39;s best to reuse it. If instead it is a list/tree/whatever, it depends. In your code I might go with <code>[1..n]++[1..n]</code>, <code>exam3</code> or <code>exam4</code> above."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 677, "user_id": 3536806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c5321e2babfa1c70186599163a3c188?s=128&d=identicon&r=PG&f=1", "display_name": "Dominik Schrempf", "link": "https://stackoverflow.com/users/3536806/dominik-schrempf"}, "edited": false, "score": 1, "creation_date": 1556610059, "post_id": 55903994, "comment_id": 98486444, "body": "@DominikSchrempf Haskell performance is admittedly a bit of a black art. It is not as obvious to see what is going on since the optimizer might either do a great job or fail to do that unexpectedly. Laziness makes it harder to estimate performance, too. Still, with some experience, one quickly learns the most common performance pitfalls, and how to avoid them. E.g. it is known that if you use <code>++</code> a lot, passing large lists as a first argument, especially recursively, it is probably better to use &quot;difference lists&quot; instead of plain lists."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 6, "last_activity_date": 1556542960, "creation_date": 1556542960, "answer_id": 55903994, "question_id": 55902855, "link": "https://stackoverflow.com/questions/55902855/haskell-performance-of-where-clause/55903994#55903994", "title": "Haskell; performance of where clause", "body": "<p>You can inspect GHC Core using <code>-ddump-simpl</code> and observe the optimized code GHC produced. Core is not as readable as Haskell, but usually one can still get the idea of what is going on.</p>\n\n<p>For <code>exam2</code> we get plain boring code:</p>\n\n<pre><code>exam2\n  = \\ (n_aX5 :: Int) -&gt;\n      case n_aX5 of { GHC.Types.I# y_a1lJ -&gt;\n      let {\n        list_s1nF [Dmd=&lt;S,U&gt;] :: [Int]\n        [LclId]\n        list_s1nF = GHC.Enum.eftInt 1# y_a1lJ } in\n      ++ @ Int list_s1nF list_s1nF\n      }\n</code></pre>\n\n<p>Roughly, this defines <code>list_s1nF</code> as <code>[1..n]</code> (<code>eftInt</code> = enum from to) and calls <code>++</code>. No inlining happened here. GHC was afraid to inline <code>list_s1nF</code> since it is used twice, and inlining a definition in such case can be harmful. Indeed if <code>let x = expensive in x+x</code> is inlined, <code>expensive</code> might get recomputed twice, which is bad. Here GHC trusts the programmer, thinking that if they used a <code>let / where</code> they want that to be computed only once. Failing to inline <code>list_s1nF</code> prevents further optimization.</p>\n\n<p>So this code allocates <code>list = [1..n]</code>, and then copies that resulting in <code>1:2:...:n:list</code> where the tail pointer is made to point to the original list.\nCopying an arbitrary list requires to follow a pointer chain and allocating cells for the new list, which is intuitively more expensive than <code>[1..n]</code> which only needs to allocate the cells for the new list and keep a counter around.</p>\n\n<p>Instead, <code>exam1</code> is optimized much further: after some minor unboxing</p>\n\n<pre><code>exam1\n  = \\ (w_s1os :: Int) -&gt;\n      case w_s1os of { GHC.Types.I# ww1_s1ov -&gt;\n      PerfList.$wexam1 ww1_s1ov\n      }\n</code></pre>\n\n<p>we get to the actual worker function.</p>\n\n<pre><code>PerfList.$wexam1\n  = \\ (ww_s1ov :: GHC.Prim.Int#) -&gt;\n      let {\n        n_a1lT :: [Int]\n        [LclId]\n        n_a1lT = GHC.Enum.eftInt 1# ww_s1ov } in\n      case GHC.Prim.&gt;# 1# ww_s1ov of {\n        __DEFAULT -&gt;\n          letrec {\n            go_a1lX [Occ=LoopBreaker] :: GHC.Prim.Int# -&gt; [Int]\n            [LclId, Arity=1, Str=&lt;L,U&gt;, Unf=OtherCon []]\n            go_a1lX\n              = \\ (x_a1lY :: GHC.Prim.Int#) -&gt;\n                  GHC.Types.:\n                    @ Int\n                    (GHC.Types.I# x_a1lY)\n                    (case GHC.Prim.==# x_a1lY ww_s1ov of {\n                       __DEFAULT -&gt; go_a1lX (GHC.Prim.+# x_a1lY 1#);\n                       1# -&gt; n_a1lT\n                     }); } in\n          go_a1lX 1#;\n        1# -&gt; n_a1lT\n      }\n</code></pre>\n\n<p>Here, the first \"enum from to\" <code>[1..n]</code> was inlined, and that also triggered the inlining of <code>++</code>. The resulting recursive function <code>go_a1lX</code> only relies of <code>:</code> and basic arithmetics. When the recursion is over, <code>n_a1lT</code> is returned which is the second \"enum from to\" <code>[1..n]</code>. This is not inlined, since it would trigger no more optimization.</p>\n\n<p>Here, no list is generated and then copied, so we get better performance.</p>\n\n<p>Note that this also produces optimized code:</p>\n\n<pre><code>exam3 :: Int -&gt; [Int]\nexam3 n = list1 ++ list2\n  where list1 = [1 .. n]\n        list2 = [1 .. n]\n</code></pre>\n\n<p>as well as this, since GHC won't automatically cache the result of functions, so those can be inlined.</p>\n\n<pre><code>exam4 :: Int -&gt; [Int]\nexam4 n = list () ++ list ()\n  where list () = [1 .. n]\n</code></pre>\n"}], "owner": {"reputation": 677, "user_id": 3536806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c5321e2babfa1c70186599163a3c188?s=128&d=identicon&r=PG&f=1", "display_name": "Dominik Schrempf", "link": "https://stackoverflow.com/users/3536806/dominik-schrempf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 0, "accepted_answer_id": 55903994, "answer_count": 1, "score": 6, "last_activity_date": 1556542960, "creation_date": 1556538941, "last_edit_date": 1592644375, "question_id": 55902855, "link": "https://stackoverflow.com/questions/55902855/haskell-performance-of-where-clause", "title": "Haskell; performance of where clause", "body": "<p>I was analyzing the effect of <code>where</code> clauses on performance of Haskell programs.</p>\n<p>In <a href=\"https://www.cs.kent.ac.uk/people/staff/sjt/craft2e/\" rel=\"noreferrer\">Haskell, The craft of functional programming, Thomspson</a>, chapter 20.4, I found the following example:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>exam1 :: Int -&gt; [Int]\nexam1 n = [1 .. n] ++ [1 .. n]\n\nexam2 :: Int -&gt; [Int]\nexam2 n = list ++ list\n  where list = [1 .. n]\n</code></pre>\n<p>and, I quote,</p>\n<blockquote>\n<p>The time taken to calculate [exam1] will be <code>O(n)</code>, and the space used will be <code>O(1)</code>, but we will have to calculate the expression <code>[1 .. n]</code> <em>twice</em>.</p>\n<p>...</p>\n<p>The effect [of exam2] is to compute the list <code>[1 .. n]</code> once, so that we save its value after calculating it in order to be able to use it again.</p>\n<p>...</p>\n<p>If we save something by referring to it in a <code>where</code> clause, we have to pay the penalty of the space that it occupies.</p>\n</blockquote>\n<p>So I go wild and think that the <code>-O2</code> flag must handle this and choose the best behavior for me. I analyze the time-complexity of these two examples using Criterion.</p>\n<pre class=\"lang-hs prettyprint-override\"><code>import Criterion.Main\n\nexam1 :: Int -&gt; [Int]\nexam1 n = [1 .. n] ++ [1 .. n]\n\nexam2 :: Int -&gt; [Int]\nexam2 n = list ++ list\n  where list = [1 .. n]\n\nm :: Int\nm = 1000000\n\nmain :: IO ()\nmain = defaultMain [ bench &quot;exam1&quot; $ nf exam1 m\n                   , bench &quot;exam2&quot; $ nf exam2 m\n                   ]\n</code></pre>\n<p>I compile with <code>-O2</code>, and find:</p>\n<pre><code>benchmarking exam1\ntime                 15.11 ms   (15.03 ms .. 15.16 ms)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 15.11 ms   (15.08 ms .. 15.14 ms)\nstd dev              83.20 \u03bcs   (53.18 \u03bcs .. 122.6 \u03bcs)\n\nbenchmarking exam2\ntime                 76.27 ms   (72.84 ms .. 82.75 ms)\n                     0.987 R\u00b2   (0.963 R\u00b2 .. 0.997 R\u00b2)\nmean                 74.79 ms   (70.20 ms .. 77.70 ms)\nstd dev              6.204 ms   (3.871 ms .. 9.233 ms)\nvariance introduced by outliers: 26% (moderately inflated)\n</code></pre>\n<p>What a difference! Why would that be? I thought that <code>exam2</code> should be faster but memory inefficient (according to the quote above). But no, it is actually much slower (and probably more memory inefficient but that needs to be tested).</p>\n<p>Maybe it is slower because <code>[1 .. 1e6]</code> has to be stored in memory, and this takes a lot of time. What do you think?</p>\n<p>PS: I found <a href=\"https://stackoverflow.com/questions/8688719/in-haskell-performance-and-where-binding\">a possibly related question</a>, but not really.</p>\n"}, {"tags": ["haskell", "floating-point", "infinity"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1556540531, "post_id": 55902725, "comment_id": 98462126, "body": "<i>What&#39;s wrong with <code>last [0..]</code>?</i>"}, {"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 3, "creation_date": 1556540740, "post_id": 55902725, "comment_id": 98462234, "body": "@leftaroundabout Infinite loop."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1556540982, "post_id": 55902725, "comment_id": 98462385, "body": "Actually that&#39;s not the only problem (<code>succ</code> just stops working in floating point, already around 1e16), but, you know what I was going at..."}, {"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1556541372, "post_id": 55902725, "comment_id": 98462629, "body": "@leftaroundabout Tbh, I don&#39;t. Either this is some inside joke I&#39;m not getting or some clever use of laziness I don&#39;t understand :("}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1556544837, "post_id": 55902725, "comment_id": 98464530, "body": "@gaazkam It was a joke."}], "answers": [{"comments": [{"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1556553715, "post_id": 55902912, "comment_id": 98469451, "body": "<code>Numeric.Limits</code> also has these."}], "tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 8, "last_activity_date": 1556539135, "creation_date": 1556539135, "answer_id": 55902912, "question_id": 55902725, "link": "https://stackoverflow.com/questions/55902725/how-to-produce-infinity-in-haskell/55902912#55902912", "title": "How to produce infinity in Haskell?", "body": "<p>The <a href=\"http://hackage.haskell.org/package/ieee754\" rel=\"noreferrer\"><code>iee754</code></a> package has functions and constants specific to that floating point format.</p>\n\n<p>In particular, it has the <code>Numeric.IEEE.infinity</code> constant for members for the <code>IEEE</code> class (which float and double belong to). It is pretty much just implemented as <code>1/0</code> though, so your call if you want the package dependency for a prettier name.</p>\n"}], "owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 454, "favorite_count": 0, "accepted_answer_id": 55902912, "answer_count": 1, "score": 3, "last_activity_date": 1556539135, "creation_date": 1556538444, "question_id": 55902725, "link": "https://stackoverflow.com/questions/55902725/how-to-produce-infinity-in-haskell", "title": "How to produce infinity in Haskell?", "body": "<p>Similarily to <a href=\"https://stackoverflow.com/questions/55902511/how-to-produce-a-nan-in-haskell\">How to produce a NaN in Haskell</a> ...</p>\n\n<p>In C, there is the <code>INFINITY</code> macro, defined by <code>math.h</code>.</p>\n\n<p>Again, in <a href=\"http://hackage.haskell.org/package/ClassyPrelude-0.1/docs/Prelude-Math.html\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/ClassyPrelude-0.1/docs/Prelude-Math.html</a> I can see falicities to test for infnity, but not to produce one.</p>\n\n<p>Therefore, is my only choice something like <code>1/0</code>?</p>\n"}, {"tags": ["haskell", "floating-point", "nan"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556552985, "post_id": 55902511, "comment_id": 98469064, "body": "Although I agree the question is not the same, and it was correct of you to open two separate questions, the answer is the same, so it is correct of me to close this as a duplicate. =P"}], "owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 73, "favorite_count": 0, "closed_date": 1556552959, "answer_count": 0, "score": 4, "last_activity_date": 1556537702, "creation_date": 1556537702, "question_id": 55902511, "link": "https://stackoverflow.com/questions/55902511/how-to-produce-a-nan-in-haskell", "closed_reason": "Duplicate", "title": "How to produce a NaN in Haskell", "body": "<p>In C, <code>math.h</code> defines <code>nan</code>. Is there a similar facility in Haskell whose only purpose is to produce a NaN?</p>\n\n<p>Or is something like <code>0/0</code> or <code>acos(2)</code> my only choice?</p>\n\n<p><a href=\"http://hackage.haskell.org/package/ClassyPrelude-0.1/docs/Prelude-Math.html\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/ClassyPrelude-0.1/docs/Prelude-Math.html</a> &lt;- I can see there is <code>isnan</code> defined there, but nothing to produce a NaN.</p>\n"}, {"tags": ["haskell", "recursion", "functional-programming"], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 11426572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97995591ff2b1f290696c83d00dea3f5?s=128&d=identicon&r=PG&f=1", "display_name": "D.Grigal", "link": "https://stackoverflow.com/users/11426572/d-grigal"}, "edited": false, "score": 0, "creation_date": 1556537728, "post_id": 55902215, "comment_id": 98460662, "body": "Thanks for the help ! I understand it a little bit better now. But there is another problem the code compiles but when I run it the program hangs without any output"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 1, "user_id": 11426572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97995591ff2b1f290696c83d00dea3f5?s=128&d=identicon&r=PG&f=1", "display_name": "D.Grigal", "link": "https://stackoverflow.com/users/11426572/d-grigal"}, "edited": false, "score": 0, "creation_date": 1556540449, "post_id": 55902215, "comment_id": 98462088, "body": "Thanks, unfortunately I&#39;m not able to debug it at the moment, sounds like there&#39;s an infinite recursion going on. Will let you know when I come up with a fix. (Happy to take suggestions from the gallery as well :) )"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 1, "user_id": 11426572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97995591ff2b1f290696c83d00dea3f5?s=128&d=identicon&r=PG&f=1", "display_name": "D.Grigal", "link": "https://stackoverflow.com/users/11426572/d-grigal"}, "edited": false, "score": 0, "creation_date": 1556541517, "post_id": 55902215, "comment_id": 98462719, "body": "OK, working through it by hand I&#39;ve figured out why it&#39;s in an infinite loop. I forgot I need a non-recusive case in <code>firstResult</code> too! Will edit straight away to add this. (Actually, in doing so I&#39;ve realised there were bigger problems. Apologies again, let me completely rewrite this...)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 1, "user_id": 11426572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97995591ff2b1f290696c83d00dea3f5?s=128&d=identicon&r=PG&f=1", "display_name": "D.Grigal", "link": "https://stackoverflow.com/users/11426572/d-grigal"}, "edited": false, "score": 0, "creation_date": 1556542425, "post_id": 55902215, "comment_id": 98463237, "body": "Right, apologies for this, turned out my main mistake was simply that I forgot to sum the list before making the recursive call. I am suitably embarrassed, please try the new version and let me know if anything goes wrong."}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": true, "score": 2, "last_activity_date": 1556542367, "last_edit_date": 1556542367, "creation_date": 1556536571, "answer_id": 55902215, "question_id": 55901933, "link": "https://stackoverflow.com/questions/55901933/cant-figure-out-simple-haskell-recursion-problem/55902215#55902215", "title": "Cant figure out simple haskell recursion problem", "body": "<p>Your function is fine for just one iteration. You just need to call it recursively until you get a 1-digit result (or an empty list, of course). </p>\n\n<p>We'll start with your existing function, which I've renamed and rewritten so that it returns the list in the opposite order (with the units digit first). This isn't necessary at all, and you can use exactly your previous definition (since the only thing we're interested in so far is the sum of the list, for which the order doesn't matter), but this will be more convenient if you need to reconstruct the number from the digit list (and should also I think perform a bit better):</p>\n\n<pre><code>todigitsOnce :: Integral x =&gt; x -&gt; [x]\ntodigitsOnce 0 = []\ntodigitsOnce x = x `mod` 10 : todigitsOnce (x `div` 10)\n</code></pre>\n\n<p>And here is the recursive <code>toDigit</code> function:</p>\n\n<pre><code>toDigit :: Integral x =&gt; x -&gt; [x]\ntoDigit x\n    | length firstResult &lt; 2 = firstResult\n    | otherwise = toDigit . sum $ firstResult\n    where firstResult = todigitsOnce x\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "is_accepted": false, "score": 2, "last_activity_date": 1556544888, "last_edit_date": 1556544888, "creation_date": 1556544375, "answer_id": 55904401, "question_id": 55901933, "link": "https://stackoverflow.com/questions/55901933/cant-figure-out-simple-haskell-recursion-problem/55904401#55904401", "title": "Cant figure out simple haskell recursion problem", "body": "<p>At alternative answer, in particular because you're doing recursive digit (base 10) sum and default <code>show</code> instance is base 10, you can round-trip via strings and nicely write with a view pattern,</p>\n\n<pre><code>{-# LANGUAGE ViewPatterns #-}\n\ndigitSum :: Int -&gt; Int\ndigitSum x@(show -&gt; (_:\"\")) = x\ndigitSum (show -&gt; cs) = digitSum $ sum . map ( read . (:[]) ) $ cs\n</code></pre>\n\n<p>If the string representation is any single character (ie. <code>0 &lt;= x &lt;= 9</code>) then just return <code>x</code>, otherwise recurse on the sum of the integers in the string representation.</p>\n\n<p>You can still use view patterns (imo) nicely without roundtripping, but it does require the auxiliary function to express an integer as a list of its digits,</p>\n\n<pre><code>import Data.List (unfoldr)\nimport Data.Tuple (swap)\n\ndigitList :: (Integral a) =&gt; a -&gt; [a]\ndigitList 0 = [0]\ndigitList n = unfoldr f n\n    where f 0 = Nothing\n          f i = Just . swap $ i `divMod` 10\n\ndigitSum' :: (Integral a) =&gt; a -&gt; a\ndigitSum' (digitList -&gt; x:[]) = x\ndigitSum' (digitList -&gt; xs) = digitSum' $ sum xs \n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1556553848, "last_edit_date": 1556553848, "creation_date": 1556553524, "answer_id": 55906948, "question_id": 55901933, "link": "https://stackoverflow.com/questions/55901933/cant-figure-out-simple-haskell-recursion-problem/55906948#55906948", "title": "Cant figure out simple haskell recursion problem", "body": "<p>A positive number and its digit sum are always congruent modulo 9. What's more, since all nonzero numbers have at least one positive digit and no negative digits, there is no way to get a digit sum of 0 from a positive number. Therefore:</p>\n\n<pre><code>digitSum x = case (x, x `mod` 9) of\n    (0, _) -&gt; 0\n    (_, 0) -&gt; 9\n    (_, v) -&gt; v\n</code></pre>\n\n<p>Try it out in ghci:</p>\n\n<pre><code>&gt; digitSum 888\n6\n</code></pre>\n\n<p>This function may not do what you expect on negative numbers -- but then, the original also doesn't handle negative numbers gracefully, so... =)</p>\n"}], "owner": {"reputation": 1, "user_id": 11426572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97995591ff2b1f290696c83d00dea3f5?s=128&d=identicon&r=PG&f=1", "display_name": "D.Grigal", "link": "https://stackoverflow.com/users/11426572/d-grigal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "accepted_answer_id": 55902215, "answer_count": 3, "score": -1, "last_activity_date": 1556553848, "creation_date": 1556535532, "question_id": 55901933, "link": "https://stackoverflow.com/questions/55901933/cant-figure-out-simple-haskell-recursion-problem", "title": "Cant figure out simple haskell recursion problem", "body": "<p>I'm trying to write a simple haskell program that sums up the digits of an integer for example my integer is 888 so the sum should be 8+8+8=24. I got this part down but I want my program to keep going until there is nothing to add for example after the addition of 8+8+8 = 24 it should add 2 + 4 = 6 and then return 6. Thanks for help !</p>\n\n<pre><code>import System.IO\nimport Data.List\n\ninteger = 888\n\ntodigits :: Integral x =&gt; x -&gt; [x]\ntodigits 0 = []\ntodigits x = todigits (x `div` 10) ++ [x `mod` 10]\n\nadd::[Int]-&gt;Int\nadd (x:xs) = sum(x:xs)\n\nadded = add (todigits integer)\n\nmain = do\n    print(added)\n</code></pre>\n"}, {"tags": ["haskell", "profiling", "conways-game-of-life"], "comments": [{"owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "edited": false, "score": 0, "creation_date": 1556529481, "post_id": 55899839, "comment_id": 98456647, "body": "Perhaps this is better suited for <a href=\"https://codereview.stackexchange.com/\">codereview.stackexchange.com</a>?"}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1556529719, "post_id": 55899839, "comment_id": 98456775, "body": "&quot;Exponentially slower&quot; suggests a laziness bug. However, you&#39;d think printing out the whole board would neatly avoid that problem. Also, the profile says the program ran for &quot;0.00 secs&quot;, which seems a bit short. Hmm..."}, {"owner": {"reputation": 4250, "user_id": 224612, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vfUAt.png?s=128&g=1", "display_name": "Piotr Justyna", "link": "https://stackoverflow.com/users/224612/piotr-justyna"}, "edited": false, "score": 0, "creation_date": 1556532341, "post_id": 55899839, "comment_id": 98458141, "body": "Thanks for your comments. I agree, it is better suited for codereview. Moved it there: <a href=\"https://codereview.stackexchange.com/questions/219355/why-is-my-haskell-program-so-slow-programming-in-haskell-game-of-life\" title=\"why is my haskell program so slow programming in haskell game of life\">codereview.stackexchange.com/questions/219355/&hellip;</a> (the close vote is mine)"}, {"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "edited": false, "score": 0, "creation_date": 1556534664, "post_id": 55899839, "comment_id": 98459233, "body": "You should not be using lists in place of where arrays are a better choice. See an extremely fast Game of Life implementation at the end of this section: <a href=\"https://github.com/lehins/massiv#stencil\" rel=\"nofollow noreferrer\">github.com/lehins/massiv#stencil</a>"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 6, "last_activity_date": 1556533226, "creation_date": 1556533226, "answer_id": 55901334, "question_id": 55899839, "link": "https://stackoverflow.com/questions/55899839/why-is-my-haskell-program-so-slow-programming-in-haskell-game-of-life/55901334#55901334", "title": "Why is my haskell program so slow? Programming in Haskell, game of life", "body": "<p>I printed <code>length board</code> and in only a few steps it reached >1000 elements. Likely, you have many duplicates there that keep accumulating.</p>\n\n<p>Indeed, you forgot the recursive call here:</p>\n\n<pre><code>removeDuplicates :: Eq a =&gt; [a] -&gt; [a]\nremoveDuplicates [] = []\nremoveDuplicates (x:xs) = x:filter (/= x) (removeDuplicates xs)\n                                        -- ^^^^^^^^^^^^^^^^^^^ --\n</code></pre>\n\n<p>After this, the program became much faster.</p>\n\n<p>Note that using lists for boards is quite suboptimal, and one should use arrays/vectors instead. Still, the bottleneck here was the number of duplicates which was exponentially blowing up, and even using lists it's still acceptable for reasonably small boards.</p>\n"}], "owner": {"reputation": 4250, "user_id": 224612, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vfUAt.png?s=128&g=1", "display_name": "Piotr Justyna", "link": "https://stackoverflow.com/users/224612/piotr-justyna"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 179, "favorite_count": 0, "accepted_answer_id": 55901334, "answer_count": 1, "score": 5, "last_activity_date": 1556533226, "creation_date": 1556527737, "last_edit_date": 1556529431, "question_id": 55899839, "link": "https://stackoverflow.com/questions/55899839/why-is-my-haskell-program-so-slow-programming-in-haskell-game-of-life", "title": "Why is my haskell program so slow? Programming in Haskell, game of life", "body": "<p>I'm going through the \"Programming in Haskell\" book (second edition) and noticed that the \"game of life\" example is getting extremely slow after some iterations (it looks like it's getting exponentially slower with every iteration). I profiled it, but can't see anything suspicious in the <code>prof</code> file.</p>\n\n<p>I'm probably missing something obvious, can you help me figure out what it is?</p>\n\n<p>Here's my code:</p>\n\n<pre><code>import System.IO\n\nmain = do\n    hSetBuffering stdout NoBuffering\n    life glider\n\ntype Position = (Int, Int)\n\ntype Board = [Position]\n\nwidth :: Int\nwidth = 10\n\nheight :: Int\nheight = 10\n\nglider :: Board\nglider = [(4,2),(2,3),(4,3),(3,4),(4,4)]\n\nclear :: IO ()\nclear = putStr \"\\ESC[2J\"\n\nwriteAt :: Position -&gt; String -&gt; IO ()\nwriteAt position text = do\n    goto position\n    putStr text\n\ngoto :: Position -&gt; IO ()\ngoto (x, y) = putStr (\"\\ESC[\" ++ (show y) ++ \";\" ++ (show x) ++ \"H\")\n\nshowCells :: Board -&gt; IO ()\nshowCells board = sequence_ [writeAt singlePosition \"0\" | singlePosition &lt;- board]\n\nisAlive :: Board -&gt; Position -&gt; Bool\nisAlive board position = elem position board\n\nisEmpty :: Board -&gt; Position -&gt; Bool\nisEmpty board position = not (isAlive board position)\n\nneighbors :: Position -&gt; [Position]\nneighbors (x, y) = \n    [(x - 1, y - 1),\n    (x, y - 1),\n    (x + 1, y - 1),\n    (x - 1, y),\n    (x + 1, y),\n    (x - 1, y + 1),\n    (x, y + 1),\n    (x + 1, y + 1)]\n\nwrap :: Position -&gt; Position\nwrap (x, y) =\n    (((x - 1) `mod` width) + 1,\n    ((y - 1) `mod` height) + 1)\n\nnumberOfLiveNeighbors :: Board -&gt; Position -&gt; Int\nnumberOfLiveNeighbors board = length . filter (isAlive board) . neighbors\n\nsurvivors :: Board -&gt; [Position]\nsurvivors board =\n    [singlePosition |\n    singlePosition &lt;- board,\n    elem (numberOfLiveNeighbors board singlePosition) [2, 3]]\n\nbirths :: Board -&gt; [Position]\nbirths board =\n    [singlePosition |\n    singlePosition &lt;- removeDuplicates (concat (map neighbors board)),\n    isEmpty board singlePosition,\n    numberOfLiveNeighbors board singlePosition == 3]\n\nremoveDuplicates :: Eq a =&gt; [a] -&gt; [a]\nremoveDuplicates [] = []\nremoveDuplicates (x:xs) = x:filter (/= x) xs\n\nnextGeneration :: Board -&gt; Board\nnextGeneration board = (survivors board) ++ (births board)\n\nlife :: Board -&gt; IO ()\nlife board = do\n    clear\n    showCells board\n    _ &lt;- getChar\n    life (nextGeneration board)\n</code></pre>\n\n<p>And here's the <code>prof</code> file:</p>\n\n<pre><code>    Mon Apr 29 08:57 2019 Time and Allocation Profiling Report  (Final)\n\n       Main.exe +RTS -p -RTS\n\n    total time  =        0.00 secs   (0 ticks @ 1000 us, 1 processor)\n    total alloc =      83,504 bytes  (excludes profiling overheads)\n\nCOST CENTRE MODULE           SRC                     %time %alloc\n\nwriteAt     Main             Main.hs:(30,1)-(32,15)    0.0    6.3\nshowCells   Main             Main.hs:38:1-82           0.0    1.8\nlife        Main             Main.hs:(86,1)-(90,31)    0.0    2.3\ngoto        Main             Main.hs:35:1-68           0.0   11.2\nclear       Main             Main.hs:27:1-24           0.0   12.5\nCAF         GHC.IO.Exception &lt;entire-module&gt;           0.0    2.3\nCAF         GHC.IO.Handle.FD &lt;entire-module&gt;           0.0   62.4\n\n\n                                                                                 individual      inherited\nCOST CENTRE   MODULE                   SRC                    no.     entries  %time %alloc   %time %alloc\n\nMAIN          MAIN                     &lt;built-in&gt;             109          0    0.0    0.8     0.0  100.0\n CAF          GHC.TopHandler           &lt;entire-module&gt;        165          0    0.0    0.1     0.0    0.1\n CAF          GHC.IO.Handle.FD         &lt;entire-module&gt;        145          0    0.0   62.4     0.0   62.4\n CAF          GHC.IO.Exception         &lt;entire-module&gt;        143          0    0.0    2.3     0.0    2.3\n CAF          GHC.IO.Encoding.CodePage &lt;entire-module&gt;        136          0    0.0    0.2     0.0    0.2\n CAF          GHC.IO.Encoding          &lt;entire-module&gt;        135          0    0.0    0.1     0.0    0.1\n CAF          Main                     &lt;entire-module&gt;        116          0    0.0    0.1     0.0    8.9\n  clear       Main                     Main.hs:27:1-24        220          1    0.0    0.4     0.0    0.4\n  glider      Main                     Main.hs:24:1-40        226          1    0.0    0.0     0.0    0.0\n  main        Main                     Main.hs:(9,1)-(11,15)  218          1    0.0    0.1     0.0    8.4\n   life       Main                     Main.hs:(86,1)-(90,31) 222          1    0.0    0.2     0.0    8.3\n    showCells Main                     Main.hs:38:1-82        225          1    0.0    1.8     0.0    8.1\n     writeAt  Main                     Main.hs:(30,1)-(32,15) 228          5    0.0    0.7     0.0    6.3\n      goto    Main                     Main.hs:35:1-68        230          5    0.0    5.6     0.0    5.6\n main         Main                     Main.hs:(9,1)-(11,15)  219          0    0.0    0.0     0.0   25.2\n  clear       Main                     Main.hs:27:1-24        221          0    0.0   11.0     0.0   11.0\n  life        Main                     Main.hs:(86,1)-(90,31) 223          0    0.0    2.0     0.0   14.2\n   clear      Main                     Main.hs:27:1-24        224          0    0.0    1.1     0.0    1.1\n   showCells  Main                     Main.hs:38:1-82        227          0    0.0    0.0     0.0   11.1\n    writeAt   Main                     Main.hs:(30,1)-(32,15) 229          0    0.0    5.6     0.0   11.1\n     goto     Main                     Main.hs:35:1-68        231          0    0.0    5.6     0.0    5.6\n</code></pre>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 3, "creation_date": 1556506125, "post_id": 55896331, "comment_id": 98449034, "body": "How would you flatten a list, without a <code>Maybe</code> present?"}], "answers": [{"tags": [], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "is_accepted": true, "score": 9, "last_activity_date": 1556506115, "creation_date": 1556506115, "answer_id": 55896362, "question_id": 55896331, "link": "https://stackoverflow.com/questions/55896331/flattening-a-list-of-maybe-elements-from-just-x1-x2-to-just-x1-x2/55896362#55896362", "title": "Flattening a list of Maybe elements from Just [[x1],[x2]] to Just [x1,x2]", "body": "<p>To turn a list like <code>[[1],[2]]</code>, into <code>[1,2]</code>, use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:concat\" rel=\"noreferrer\"><code>concat</code></a>. In your case, since the list is inside a <code>Maybe</code>, you'll need to call <code>fmap concat</code> on it.</p>\n\n<p>Also, note that any time you call <code>sequence</code> (or <code>sequenceA</code>) on the result of <code>map</code>, <code>fmap</code>, or <code>&lt;$&gt;</code>, you can save a function by combining both into <code>mapM</code> (or <code>traverse</code>).</p>\n"}], "owner": {"reputation": 63, "user_id": 9270910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OH3qG.jpg?s=128&g=1", "display_name": "weztex", "link": "https://stackoverflow.com/users/9270910/weztex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 2, "accepted_answer_id": 55896362, "answer_count": 1, "score": 4, "last_activity_date": 1556521650, "creation_date": 1556505673, "last_edit_date": 1556521650, "question_id": 55896331, "link": "https://stackoverflow.com/questions/55896331/flattening-a-list-of-maybe-elements-from-just-x1-x2-to-just-x1-x2", "title": "Flattening a list of Maybe elements from Just [[x1],[x2]] to Just [x1,x2]", "body": "<p>I have a function I'm supposed to define like so:</p>\n\n<pre><code>func :: (a -&gt; Maybe [b]) -&gt; [a] -&gt; Maybe [b]\n</code></pre>\n\n<p>Some examples of how it's supposed to work :</p>\n\n<pre><code>func (\\x -&gt; if x == 0 then Nothing else Just [x]) [1,2]\n</code></pre>\n\n<p>Should result in: </p>\n\n<blockquote>\n  <p>Just [1,2]</p>\n</blockquote>\n\n<p>Another example:</p>\n\n<pre><code>func (\\x -&gt; if x == 0 then Nothing else Just [x]) [1,0]\n</code></pre>\n\n<blockquote>\n  <p>Nothing</p>\n</blockquote>\n\n<p>If anything in the list is a <code>Nothing</code>, then the function returns <code>Nothing</code>. Otherwise if all the elements in the list return a <code>Just [x]</code> then it's supposed to return a list like: <code>Just [x1, x2, ...]</code>.</p>\n\n<p>I tried using <code>fmap</code> for similar calls to the above which returns something like:</p>\n\n<blockquote>\n  <p>[Just [1], Just [2], ...]</p>\n</blockquote>\n\n<p>If I use <code>sequence</code> on the list <code>fmap</code> returns, it'll follow the rules of the above (returning a <code>Nothing</code> if anything in the list is a <code>Nothing</code>), which is great. Except it returns a list like this: </p>\n\n<blockquote>\n  <p>Just [[1],[2]] </p>\n</blockquote>\n\n<p>which is not the format I need. In that case I would need it to be:</p>\n\n<blockquote>\n  <p>Just [1,2]</p>\n</blockquote>\n\n<p>As I just started learning Haskell and monads are still a fresh topic to me, I'm having some trouble figuring how to format this list or if there's a better way of solving this problem. I cannot change the function type signature.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1556639744, "post_id": 55895740, "comment_id": 98503000, "body": "Thanks, actually needed to keep the values so <code>replicateM</code> it is."}, {"owner": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1556664024, "post_id": 55895740, "comment_id": 98512578, "body": "You are still discarding values with <code>&gt;&gt;</code>."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1556666904, "post_id": 55895740, "comment_id": 98513173, "body": "there is no value to bind though?  <code>do modify shuffle; deck &lt;- get; pure $ bestCard deck</code> returns a value. In any case it works fine for me?"}, {"owner": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1556671128, "post_id": 55895740, "comment_id": 98513920, "body": "Oh, I misread the precedence. If you want to get the best card out each time, you do need <code>replicateM</code>."}], "tags": [], "owner": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "is_accepted": true, "score": 8, "last_activity_date": 1556497926, "creation_date": 1556497926, "answer_id": 55895740, "question_id": 55895692, "link": "https://stackoverflow.com/questions/55895692/haskell-chaining-state-monad/55895740#55895740", "title": "Haskell: Chaining State Monad", "body": "<p>The most succinct way to do it is <a href=\"https://www.stackage.org/haddock/lts-13.18/base-4.12.0.0/Control-Monad.html#v:replicateM_\" rel=\"noreferrer\"><code>replicateM_</code></a>, which repeats a monadic action a specified number of times and discards the result:</p>\n\n<pre><code>replicateM_ 5 $ modify shuffle\n</code></pre>\n\n<p>Because State is a monad, you only have to care about repeating an action, not specifically working with State. I found the above function by <a href=\"https://www.stackage.org/lts-13.18/hoogle?q=Monad%20m%20%3D%3E%20Int%20-%3E%20m%20a%20-%3E%20m%20%28%29\" rel=\"noreferrer\">searching Hoogle</a> for the signature of the function I wanted:</p>\n\n<pre><code>Monad m =&gt; Int -&gt; m a -&gt; m ()\n</code></pre>\n\n<p>Note that the result doesn't even require a monad, just an applicative:</p>\n\n<pre><code>replicateM_ :: Applicative m =&gt; Int -&gt; m a -&gt; m ()\n</code></pre>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 55895740, "answer_count": 1, "score": 4, "last_activity_date": 1556639716, "creation_date": 1556497364, "last_edit_date": 1556639716, "question_id": 55895692, "link": "https://stackoverflow.com/questions/55895692/haskell-chaining-state-monad", "title": "Haskell: Chaining State Monad", "body": "<p>If I have a function that shuffles a \"deck of cards\", how do I use the <code>State Monad</code> to iterate through a defined set number of shuffles and then return a result?</p>\n\n<p>For example I have the following function that will do 1 shuffle of the deck then return a specific card:</p>\n\n<pre><code>step :: State [String] String\nstep = do\n  modify shuffle\n  deck &lt;- get\n  pure $ bestCard deck\n</code></pre>\n\n<p>What I would like to be able to do is iterate through the state changes 5 times before I return the value.</p>\n\n<p>What I have tried is this:</p>\n\n<pre><code>steps :: Int -&gt; State [String] String\nsteps n = case n of\n  0 -&gt; do\n    deck &lt;- get\n    pure $ bestCard deck\n  _ -&gt; do\n    modify shuffle\n    steps (n - 1)\n</code></pre>\n\n<p>but that looks far from being the correct way of doing it, even though it works.</p>\n\n<p>NB. I am aware this can be done without using <code>State Monad</code> but I am trying to use this example to learn how to use <code>State</code>.</p>\n\n<p>edit:</p>\n\n<p>Thanks to @Koterpillar, I can use <code>replicateM</code> to get what I want.</p>\n\n<p><code>evalState (replicateM n $ modify shuffle &gt;&gt; get &gt;&gt;= pure . bestCard)</code></p>\n"}, {"tags": ["haskell", "coq"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556481388, "post_id": 55894015, "comment_id": 98444607, "body": "My guess is that <code>rewrite</code> never affects the extracted code. It works with type <code>x=y</code> in <code>Prop</code>, so that disappears. Also, <code>x=y</code> could be a mere proposition (e.g. if we admit Streicher&#39;s axiom K) making it a data type carrying no information during extraction. (HoTT might change that, though.)"}, {"owner": {"reputation": 3208, "user_id": 1809211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf049ef367dd9aa5f7e3220f4bec3ad3?s=128&d=identicon&r=PG", "display_name": "Yves", "link": "https://stackoverflow.com/users/1809211/yves"}, "edited": false, "score": 0, "creation_date": 1556603183, "post_id": 55894015, "comment_id": 98483481, "body": "Your example is not self-contained.  where do <code>Sn_gt_0</code>, <code>Sn_eq_Sm</code>, <code>add_nSm</code> come from?  This makes the work of people who want to help harder."}, {"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "reply_to_user": {"reputation": 3208, "user_id": 1809211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf049ef367dd9aa5f7e3220f4bec3ad3?s=128&d=identicon&r=PG", "display_name": "Yves", "link": "https://stackoverflow.com/users/1809211/yves"}, "edited": false, "score": 0, "creation_date": 1556613825, "post_id": 55894015, "comment_id": 98488401, "body": "@Yves sorry, I added the entire file now."}], "answers": [{"comments": [{"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 0, "creation_date": 1556613894, "post_id": 55914789, "comment_id": 98488435, "body": "I added the missing parts. Note that I deliberately did not prove all lemmas and left some of them (two) as <code>Admitted</code>, just to make sure they play no role at the extraction show."}, {"owner": {"reputation": 2860, "user_id": 5153939, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/23c8632c6c7311e1410f9a207a50762d?s=128&d=identicon&r=PG&f=1", "display_name": "eponier", "link": "https://stackoverflow.com/users/5153939/eponier"}, "edited": false, "score": 0, "creation_date": 1556637487, "post_id": 55914789, "comment_id": 98501686, "body": "@Yves I like the step-by-step analysis, but the first paragraph is somehow confusing, since it seems to explain that <code>rewrite</code> never has an impact on the extracted term. I think this is not what you intended to write, but it would probably be better to emphasize that this paragraph applies to the particular example shown in the question."}, {"owner": {"reputation": 3208, "user_id": 1809211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf049ef367dd9aa5f7e3220f4bec3ad3?s=128&d=identicon&r=PG", "display_name": "Yves", "link": "https://stackoverflow.com/users/1809211/yves"}, "reply_to_user": {"reputation": 2860, "user_id": 5153939, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/23c8632c6c7311e1410f9a207a50762d?s=128&d=identicon&r=PG&f=1", "display_name": "eponier", "link": "https://stackoverflow.com/users/5153939/eponier"}, "edited": false, "score": 0, "creation_date": 1556724468, "post_id": 55914789, "comment_id": 98530263, "body": "@eponier: thank you for this comment.  Actually, I changed my mind between two versions of the answer, because I really believed that rewrite would never have an impact.  Then I remembered about an example like the nat_type family of types and I changed my mind.  I will have to rework my answer.  Thanks again."}], "tags": [], "owner": {"reputation": 3208, "user_id": 1809211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf049ef367dd9aa5f7e3220f4bec3ad3?s=128&d=identicon&r=PG", "display_name": "Yves", "link": "https://stackoverflow.com/users/1809211/yves"}, "is_accepted": true, "score": 1, "last_activity_date": 1556630714, "last_edit_date": 1556630714, "creation_date": 1556604117, "answer_id": 55914789, "question_id": 55894015, "link": "https://stackoverflow.com/questions/55894015/coq-extraction-to-haskell/55914789#55914789", "title": "Coq extraction to Haskell", "body": "<p>Every time you use <code>rewrite</code>, the goal is actually a type (a formula) whose own type is <code>Prop</code>.  So the effect of the <code>rewrite</code> tactic will is discarded because the part of the term where it took place was discarded.</p>\n\n<p>the extraction tool does not look at tactics: it remove expressions whose type has type <code>Prop</code> from the term that will be executed.  The whole system is designed in such a way that these expressions should not have an effect on computation.</p>\n\n<p>In a sense, it is a distinction between compile-time verification and run-time verification.  All the proofs that you do in Coq are compile-time verifications, at run-time they don't need to be redone, so they are removed from the code.  The <code>Prop</code> sort is used to mark computations that happen only at compile-time and won't have an effect on the execution at run-time.</p>\n\n<p>You can somehow predict the content of the Haskell extracted program by looking at the result of <code>Print div_q_r.</code></p>\n\n<p>The result contains instances of <code>existT</code> and instance of <code>exist</code>.  The type of <code>existT</code> is :</p>\n\n<pre><code>forall (A : Type) (P : A -&gt; Type) (x : A), P x -&gt; {x : A &amp; P x}\n</code></pre>\n\n<p>The notation <code>{x : A &amp; P x}</code> is for <code>@sigT A P</code>.  In turn the type of <code>sigT</code> is</p>\n\n<pre><code>forall A : Type, (A -&gt; Type) -&gt; Type\n</code></pre>\n\n<p>The type of <code>existT P xx pp</code>  is <code>@sigT A P</code> and the type of the latter is <code>Type</code>.  In consequence, the extraction tool decides that this term contains data that is important at run time.  Moreover, the second component of <code>sigT A P</code>, has type <code>P xx</code> which itself has type <code>Type</code>, so this also is important at run time:  it won't be discarded.</p>\n\n<p>Now let's turn our attention to expression of the form <code>exist _ _</code>.  Such an expression has type <code>@sig A P</code> and <code>sig</code> has type :</p>\n\n<pre><code>forall A: Type, (A -&gt; Prop) -&gt; Type\n</code></pre>\n\n<p>So an expression <code>exist Q y qq</code> contains <code>y</code> whose type has type <code>Type</code> and <code>qq</code> whose type is <code>Q y</code> and has type <code>Prop</code>.  Information on how to compute <code>y</code> will be kept at run time, but information on how to compute <code>qq</code> is discarded.</p>\n\n<p>If you want to know where <code>rewrite</code> had an effect in the proof, you only need to look for instances of <code>eq_ind</code> and <code>eq_ind_r</code> in the result of <code>Print div_q_r.</code>  You will see that these instances are subterms of the third argument of <code>exist</code> statements.  This is the reason why they don't appear in the final result.  It is not because the extraction has special treatement of rewrites, it is because it has a special behavior on the type of types <code>Prop</code> (we also call it the <em>sort</em> <code>Prop</code>).</p>\n\n<p>It is possible to construct functions where <code>rewrite</code> leaves a trace in the extraction result, but I am not sure that these functions behave correctly in Haskell.</p>\n\n<pre><code>Definition nat_type n :=\n  match n with O =&gt; nat | S p =&gt; bool end.\n\nDefinition strange n : nat_type (n * 0).\nrewrite Nat.mul_0_r.\nexact n.\nDefined.\n</code></pre>\n"}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 55914789, "answer_count": 1, "score": 2, "last_activity_date": 1556630714, "creation_date": 1556480867, "last_edit_date": 1556613800, "question_id": 55894015, "link": "https://stackoverflow.com/questions/55894015/coq-extraction-to-haskell", "title": "Coq extraction to Haskell", "body": "<p>I have the following Coq implementation of integer division with remainder.\nWhen I extract it to Haskell <strong>everything works fine</strong>. I compared the Coq version to the generated Haskell version and tried to understand what's going on. It seems that <code>rewrite</code> <strong>is simply removed here</strong>,\nand what actually steers the extraction here are <code>induction</code>, <code>destruct</code>, <code>exists</code> and <code>specialize</code>. Is there any scenario where <code>rewrite</code> is used during extraction? Also, some variables names are kept (like <code>q0</code> and <code>m0''</code>) but others change (<code>r0</code> to <code>h</code>) is there any reason to change names? Here is the Coq code followed by the extracted code:</p>\n\n<pre><code>(***********)\n(* IMPORTS *)\n(***********)\nRequire Import Coq.Arith.PeanoNat.\nRequire Import Coq.Structures.OrdersFacts.\n\nLemma Sn_eq_Sm: forall n m,\n  (n = m) -&gt; ((S n) = (S m)).\nProof.\n  intros n m H.\n  rewrite H.\n  reflexivity.\nQed.\n\nLemma Sn_lt_Sm: forall n m,\n  (n &lt; m) -&gt; ((S n) &lt; (S m)).\nProof.\n  intros n0 m0 H.\n  unfold lt in H.\n  apply Nat.lt_succ_r.\n  apply H.\nQed.\n\nLemma add_nSm : forall (n m : nat),\n  (n + (S m)) = S (n + m).\nProof.\n  intros n m.\n  induction n.\n  - reflexivity.\n  - simpl.\n    apply Sn_eq_Sm.\n    apply IHn.\nQed.\n\nLemma n_lt_m: forall n m,\n  ((n &lt;? m) = false) -&gt; (m &lt;= n).\nProof.\nAdmitted.\n\nLemma n_le_m_le_n: forall n m,\n  (n &lt;= m) -&gt; ((m &lt;= n) -&gt; (m = n)).\nProof.\nAdmitted.\n\nLemma Sn_ge_0: forall n,\n  0 &lt;= (S n).\nProof.\n  induction n as [|n' IHn'].\n  - apply le_S. apply le_n.\n  - apply le_S. apply IHn'.\nQed.\n\nLemma n_ge_0: forall n,\n  0 &lt;= n.\nProof.\n  induction n as [|n' IHn'].\n  - apply le_n.\n  - apply le_S. apply IHn'.\nQed.\n\nLemma Sn_gt_0: forall n,\n  0 &lt; (S n).\nProof.\n  induction n as [|n' IHn'].\n  - apply le_n.\n  - apply le_S. apply IHn'.\nQed.\n\nLemma n_le_m_implies_Sn_le_Sm: forall n m,\n  (n &lt;= m) -&gt; ((S n) &lt;= (S m)).\nProof.\n  induction n as [|n' IHn'].\n  - induction m as [|m' IHm'].\n    + intros H1. apply le_n.\n    + intros H1. apply le_S.\n      apply IHm'. apply n_ge_0.\n  - induction m as [|m' IHm'].\n    + intros H1. inversion H1. \n    + intros H1. inversion H1. \n      apply le_n. apply IHm' in H0 as H2.\n      apply le_S in H2. apply H2.\nQed.\n\n(****************************************)\n(* division with quotient and remainder *)\n(****************************************)\nDefinition div_q_r: forall n m : nat,\n   {     q:nat &amp; {     r:nat | (n = q * (S m) + r) /\\ (r &lt; (S m))}}.\nProof.\n  induction n as [|n' IHn'].\n  - exists 0. exists 0. split. reflexivity. apply Sn_gt_0.\n  - intros m0.\n    destruct m0 as [|m0''] eqn:E1.\n    + exists (S n'). exists 0. split.\n      * rewrite Nat.add_0_r with (n:=(S n') * 1).\n        rewrite Nat.mul_1_r with (n:=(S n')). reflexivity.\n      * specialize Sn_gt_0 with (n:=0). intros H. apply H.\n    + specialize IHn' with (m:=(S m0'')).\n      destruct IHn' as [q0 H]. destruct H as [r0 H].\n      destruct (r0 &lt;? (S m0'')) eqn:E2.\n      * exists q0. exists (S r0). split.\n        -- rewrite add_nSm with (n:=q0 * S (S m0'')). \n           apply Sn_eq_Sm. apply proj1 in H as H1. apply H1.\n        -- apply Nat.ltb_lt in E2. apply Sn_lt_Sm. apply E2.\n      * exists (S q0). exists 0. split.\n        -- apply proj2 in H as H2. rewrite Nat.lt_succ_r in H2.\n           apply n_lt_m in E2. apply n_le_m_le_n in H2.\n           apply proj1 in H as H1. rewrite H2 in H1. rewrite H1.\n           rewrite &lt;- add_nSm with (n:=q0 * S (S m0'')) (m:=S m0'').\n           rewrite Nat.add_0_r.\n           rewrite Nat.mul_succ_l with (n:=q0) (m:=S (S m0'')).\n           reflexivity. apply E2.\n        -- unfold \"&lt;\". apply n_le_m_implies_Sn_le_Sm. apply Sn_ge_0.\nQed.\n\n(********************************)\n(* Extraction Language: Haskell *)\n(********************************)\nExtraction Language Haskell.\n\n(***************************)\n(* Use Haskell basic types *)\n(***************************)\nRequire Import ExtrHaskellBasic.\n\n(****************************************)\n(* Use Haskell support for Nat handling *)\n(****************************************)\nRequire Import ExtrHaskellNatNum.\nExtract Inductive Datatypes.nat =&gt; \"Prelude.Integer\" [\"0\" \"Prelude.succ\"]\n\"(\\fO fS n -&gt; if n Prelude.== 0 then fO () else fS (n Prelude.- 1))\".\n\n(***************************)\n(* Extract to Haskell file *)\n(***************************)\nExtraction \"/home/oren/GIT/some_file_Haskell.hs\" div_q_r.\n</code></pre>\n\n<p>And here is the extracted Haskell code:</p>\n\n<pre><code>div_q_r :: Prelude.Integer -&gt; Prelude.Integer -&gt; SigT Prelude.Integer\n           Prelude.Integer\ndiv_q_r n =\n  nat_rec (\\_ -&gt; ExistT 0 0) (\\n' iHn' m0 -&gt;\n    (\\fO fS n -&gt; if n Prelude.== 0 then fO () else fS (n Prelude.- 1))\n      (\\_ -&gt; ExistT (Prelude.succ n')\n      0)\n      (\\m0'' -&gt;\n      let {iHn'0 = iHn' (Prelude.succ m0'')} in\n      case iHn'0 of {\n       ExistT q0 h -&gt;\n        let {b = ltb h (Prelude.succ m0'')} in\n        case b of {\n         Prelude.True -&gt; ExistT q0 (Prelude.succ h);\n         Prelude.False -&gt; ExistT (Prelude.succ q0) 0}})\n      m0) n\n</code></pre>\n"}, {"tags": ["haskell", "traversable"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1556531276, "post_id": 55893655, "comment_id": 98457581, "body": "Minor point: note that &quot;empty&quot; might be a misleading name, since there is a value for <code>Empty a</code>, namely <code>Empty</code>. Someone could instead expect that an empty type has no (non bottom) values, like <code>Void</code> in the libraries, or like (using a GHC extension) <code>data Empty a</code> without any constructor."}], "answers": [{"comments": [{"owner": {"reputation": 145, "user_id": 5255089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb99414b7f1cbc6d5a1dc99d217c6125?s=128&d=identicon&r=PG", "display_name": "Eryk Ciepiela", "link": "https://stackoverflow.com/users/5255089/eryk-ciepiela"}, "edited": false, "score": 0, "creation_date": 1556479926, "post_id": 55893813, "comment_id": 98444191, "body": "thanks, that&#39;s exactly what I was looking for, its implementation is the same as mine, good to know it&#39;s already there in base."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 145, "user_id": 5255089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb99414b7f1cbc6d5a1dc99d217c6125?s=128&d=identicon&r=PG", "display_name": "Eryk Ciepiela", "link": "https://stackoverflow.com/users/5255089/eryk-ciepiela"}, "edited": false, "score": 0, "creation_date": 1556531580, "post_id": 55893813, "comment_id": 98457752, "body": "@ErykCiepiela <code>Proxy</code> is often used to allow the caller to &quot;pass a type&quot; to a function. E.g. if <code>f :: SomeClass a =&gt; Proxy a -&gt; Int</code> the caller can choose <code>a</code> using something like <code>f (Proxy :: Proxy Bool)</code>. Without the proxy argument, the type become ambiguous and is rejected (well, now GHC can also allow those, and I actually prefer ambiguous types + type arguments as a style, but let&#39;s neglect that). If that&#39;s your intent behind <code>Empty a</code>, use <code>Proxy</code> instead. Otherwise, <code>Const ()</code> may be more appropriate to signal your intent (hard to tell, though)."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556534439, "post_id": 55893813, "comment_id": 98459121, "body": "@chi I wondered about how natural using <code>Proxy</code> in this case would feel, too, but then I saw <a href=\"https://www.reddit.com/r/haskell/comments/47uquu/comment/d0g69bn\" rel=\"nofollow noreferrer\">this comment by Edward Kmett</a>, which gave me enough confidence to mention it here."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 13, "last_activity_date": 1556479449, "creation_date": 1556479449, "answer_id": 55893813, "question_id": 55893655, "link": "https://stackoverflow.com/questions/55893655/empty-traversable-does-it-make-sense-is-it-provided-in-any-library/55893813#55893813", "title": "&quot;Empty&quot; traversable - does it make sense, is it provided in any library?", "body": "<p>As far as types in <em>base</em> go, <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Proxy.html\" rel=\"noreferrer\"><code>Proxy</code></a> is precisely that. <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Const.html\" rel=\"noreferrer\"><code>Const ()</code></a> would also work. (There is also <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Generics.html#t:U1\" rel=\"noreferrer\"><code>U1</code></a>, but that is part of the generics machinery, and might feel a tad out of place in other contexts.)</p>\n"}], "owner": {"reputation": 145, "user_id": 5255089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb99414b7f1cbc6d5a1dc99d217c6125?s=128&d=identicon&r=PG", "display_name": "Eryk Ciepiela", "link": "https://stackoverflow.com/users/5255089/eryk-ciepiela"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 55893813, "answer_count": 1, "score": 6, "last_activity_date": 1556479449, "creation_date": 1556478337, "question_id": 55893655, "link": "https://stackoverflow.com/questions/55893655/empty-traversable-does-it-make-sense-is-it-provided-in-any-library", "title": "&quot;Empty&quot; traversable - does it make sense, is it provided in any library?", "body": "<p>I'm writing a piece of Haskell code that uses the abstraction of <code>Traversable</code>. Behind this abstraction I want to be able to conceal all regular traversable structures like lists, trees, maps etc, with special case of <code>Data.Functor.Identity.Identity</code> as an elementary structure containing single value. I would also want to cover a case of an \"empty\" structure. Does such \"empty\" traversable instance exist? Maybe it is  already provided by any library?</p>\n\n<p>My first (and maybe naive) attempt to define such instance would be as follows. Does it make sense?</p>\n\n<pre><code>data Empty a = Empty\n\ninstance Functor Empty where\n    fmap _ _ = Empty\n\ninstance Foldable Empty where\n    foldr _ init _ = init\n\ninstance Traversable Empty where\n    sequenceA _ = pure Empty\n</code></pre>\n"}, {"tags": ["haskell", "haskell-lens"], "answers": [{"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 2, "creation_date": 1556447977, "post_id": 55889156, "comment_id": 98435892, "body": "<code>Control.Lens.Fold.has</code> works as the negation of <code>isn&#39;t</code>."}, {"owner": {"reputation": 6006, "user_id": 239558, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/2362bc1c423993bbdb8548a3a059702c?s=128&d=identicon&r=PG", "display_name": "user239558", "link": "https://stackoverflow.com/users/239558/user239558"}, "edited": false, "score": 0, "creation_date": 1556479386, "post_id": 55889156, "comment_id": 98444063, "body": "Thanks! There seems to be <code>Control.Lens.Extras.is</code>"}], "tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": true, "score": 6, "last_activity_date": 1556445787, "creation_date": 1556445787, "answer_id": 55889156, "question_id": 55889073, "link": "https://stackoverflow.com/questions/55889073/what-is-the-equivalent-to-span-using-lens/55889156#55889156", "title": "What is the equivalent to `span` using `lens`?", "body": "<p>You could say</p>\n\n<pre><code>(as, rest) = break (isn't _A) list\n</code></pre>\n\n<p><code>isn't</code> is defined in <a href=\"http://hackage.haskell.org/package/lens-4.17.1/docs/Control-Lens-Prism.html#v:isn-39-t\" rel=\"noreferrer\">Control.Lens.Prism</a>. Unfortunately there doesn't seem to be a corresponding function <code>is' p = not . isn't p</code>, although</p>\n\n<pre><code>(as, rest) = span (isRight . matching _A) list\n</code></pre>\n\n<p>would also work.</p>\n"}], "owner": {"reputation": 6006, "user_id": 239558, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/2362bc1c423993bbdb8548a3a059702c?s=128&d=identicon&r=PG", "display_name": "user239558", "link": "https://stackoverflow.com/users/239558/user239558"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 55889156, "answer_count": 1, "score": 4, "last_activity_date": 1556446148, "creation_date": 1556445213, "last_edit_date": 1556446148, "question_id": 55889073, "link": "https://stackoverflow.com/questions/55889073/what-is-the-equivalent-to-span-using-lens", "title": "What is the equivalent to `span` using `lens`?", "body": "<p>Let's say I have</p>\n\n<pre><code>data SumType = A | B | C\n\nlist = [A, B, B, A, C, A]\n\n(as, rest) = span (\\case A -&gt; True; _ -&gt; False) list\n</code></pre>\n\n<p>Assuming I have the prism <code>_A</code>, is there a way to write this more succinctly using <code>lens</code>?</p>\n"}, {"tags": ["haskell", "vim"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1556482140, "post_id": 55887881, "comment_id": 98444794, "body": "I can&#39;t be sure because I have never used HIE with Vim, but I suspect you can see the full message by opening <a href=\"https://stackoverflow.com/q/1747091/2751851\">Vim&#39;s quickfix window</a>."}, {"owner": {"reputation": 443, "user_id": 4183297, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/UNM2l.jpg?s=128&g=1", "display_name": "Theodora", "link": "https://stackoverflow.com/users/4183297/theodora"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1556518413, "post_id": 55887881, "comment_id": 98451775, "body": "Thanks a lot for your help !  This is exactly what I want !!!"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1556535005, "post_id": 55887881, "comment_id": 98459386, "body": "You&#39;re welcome. I have converted my comment into an answer, for the sake of completeness."}], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 1, "last_activity_date": 1556534942, "creation_date": 1556534942, "answer_id": 55901803, "question_id": 55887881, "link": "https://stackoverflow.com/questions/55887881/how-to-see-the-entire-hint-information-when-using-hie-haskell-ide-engine-in-vi/55901803#55901803", "title": "How to see the entire hint information when using hie (haskell ide engine) in vim 8?", "body": "<p>HIE is using Vim's quickfix window to display that linter message. You can expand the window with the <code>:copen</code> command. See <a href=\"https://stackoverflow.com/q/1747091/2751851\">this question</a> for other relevant commands.</p>\n"}], "owner": {"reputation": 443, "user_id": 4183297, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/UNM2l.jpg?s=128&g=1", "display_name": "Theodora", "link": "https://stackoverflow.com/users/4183297/theodora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 55901803, "answer_count": 1, "score": 0, "last_activity_date": 1556534942, "creation_date": 1556435226, "question_id": 55887881, "link": "https://stackoverflow.com/questions/55887881/how-to-see-the-entire-hint-information-when-using-hie-haskell-ide-engine-in-vi", "title": "How to see the entire hint information when using hie (haskell ide engine) in vim 8?", "body": "<p>I'm familiarizing myself with hie on vim8.0.\nThe suggestion information below the status line would be pretty useful.\n<a href=\"https://i.stack.imgur.com/iWZ1K.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/iWZ1K.jpg\" alt=\"enter image description here\"></a>\nFor example, in this case, the information is:</p>\n\n<p>\"... do filter gamelength  allWords :: IO WordList why not : filter gameLength...\"</p>\n\n<p>However I can only see part of the information. After googling for about 2 hours. I start to realize this information might be different from things in status-line.\nI configured the hie following this instruction on my Mac.\n<a href=\"https://github.com/haskell/haskell-ide-engine#using-hie-with-vim-or-neovim\" rel=\"nofollow noreferrer\">https://github.com/haskell/haskell-ide-engine#using-hie-with-vim-or-neovim</a></p>\n\n<p>So, my question is how can I see the entire information? </p>\n\n<p>Thanks a lot for any possible help !</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 6, "creation_date": 1556375971, "post_id": 55881632, "comment_id": 98421960, "body": "The data constructor name is missing. You want something like <code>data Test = Test [Int]</code> instead."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 6, "creation_date": 1556376019, "post_id": 55881632, "comment_id": 98421971, "body": "you also probably want a <code>newtype</code> rather than <code>data</code> if your type is simply a wrapper for a list"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1556377762, "post_id": 55881632, "comment_id": 98422452, "body": "<code>newtype</code> still needs a data constructor name in front of the <code>[Int]</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556377952, "post_id": 55881632, "comment_id": 98422507, "body": "yes of course @WillNess, apologies if that wasn&#39;t clear"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1556378055, "post_id": 55881632, "comment_id": 98422539, "body": "@RobinZigmond I&#39;m just being needlessly thorough. :) it was a side note really."}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1556384580, "post_id": 55881632, "comment_id": 98424263, "body": "What materials are you using for study?"}, {"owner": {"reputation": 1778, "user_id": 421652, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/2jNxG.jpg?s=128&g=1", "display_name": "Ultimate Gobblement", "link": "https://stackoverflow.com/users/421652/ultimate-gobblement"}, "edited": false, "score": 1, "creation_date": 1556390643, "post_id": 55881632, "comment_id": 98425864, "body": "I was reading Learn You A Haskell for Great Good. The examples on chapter 7 didn&#39;t include lists and some didn&#39;t have the constructor name. Should probably have fiddled around with it a bit more before asking, but anyway I have it working with newtype now."}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 8, "last_activity_date": 1556377925, "last_edit_date": 1556377925, "creation_date": 1556377489, "answer_id": 55881871, "question_id": 55881632, "link": "https://stackoverflow.com/questions/55881632/how-to-create-a-data-type-containing-a-list/55881871#55881871", "title": "How to create a data type containing a list", "body": "<h3>An Answer</h3>\n\n<p>You need to include a constructor, which you haven't done.</p>\n\n<pre><code>data Test = Test [Int]\n</code></pre>\n\n<p>Consider reviewing Haskell's several type declarations, their use, and their syntax.</p>\n\n<h2>Haskell Type Declarations</h2>\n\n<p><strong>data</strong></p>\n\n<p>Allows declaration of zero or more <strong>constructor</strong>s each with zero or more <strong>fields</strong>.</p>\n\n<p><strong>newtype</strong></p>\n\n<p>Allows declaration of one constructor with one field.  This field is strict.</p>\n\n<p><strong>type</strong></p>\n\n<p>Allows creation of a type <em>alias</em> which can be textually interchanged with the type to the right of the equals at any use.</p>\n\n<p><strong>constructor</strong></p>\n\n<p>Allows creation of a value of the declared type.  Also allows decomposition of values to obtain the individual fields (via pattern matching)</p>\n\n<h2>Examples</h2>\n\n<p><strong>data</strong></p>\n\n<pre><code>data Options = OptionA Int | OptionB Integer | OptionC PuppyAges\n      ^           ^     ^      ^        ^        ^         ^\n      |           |   Field    |        |        |         |\n    type         Constructor   |        |     Constructor  |\n                         Constructor   Field              Field\n    deriving (Show)\n\nmyPuppies = OptionB 1234\n</code></pre>\n\n<p><strong>newtype</strong></p>\n\n<pre><code>newtype PuppyAges = AgeList [Int] deriving (Show)\n\nmyPuppies :: PuppyAges\nmyPuppies = AgeList [1,2,3,4]\n</code></pre>\n\n<p>Because the types (PuppyAges) and the constructors  (AgeList) are in different namespaces people can and often do use the same name for each, such as <code>newtype X = X [Int]</code>.</p>\n\n<p><strong>type</strong></p>\n\n<pre><code>type IntList = [Int]\n\nthisIsThat :: IntList -&gt; [Int]\nthisIsThat x = x\n</code></pre>\n\n<p><strong>constructor</strong>s (more)</p>\n\n<pre><code>option_is_a_puppy_age :: Options -&gt; Bool\noption_is_a_puppy_age (OptionC _) = True\noption_is_a_puppy_age () = False\n\noption_has_field_of_value :: Options -&gt; Int -&gt; Bool\noption_has_field_of_value (OptionA a) x = x == a\noption_has_field_of_value (OptionB b) x = fromIntegral x == b\noption_has_field_of_value (OptionC (AgeList cs)) x = x `elem` cs\n\nincrement_option_a :: Options -&gt; Options\nincrement_option_a (OptionA a) = OptionA (a+1)\nincrement_option_a x           = x\n</code></pre>\n"}], "owner": {"reputation": 1778, "user_id": 421652, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/2jNxG.jpg?s=128&g=1", "display_name": "Ultimate Gobblement", "link": "https://stackoverflow.com/users/421652/ultimate-gobblement"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 55881871, "answer_count": 1, "score": 0, "last_activity_date": 1556377925, "creation_date": 1556375845, "question_id": 55881632, "link": "https://stackoverflow.com/questions/55881632/how-to-create-a-data-type-containing-a-list", "title": "How to create a data type containing a list", "body": "<p>I'm trying to create a data type class that contains a list:</p>\n\n<pre><code>data Test = [Int] deriving(Show)\n</code></pre>\n\n<p>But Haskell can't parse the constructor. What am i doing wrong here and how can I best achieve what I'm trying to do?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1556395276, "post_id": 55881254, "comment_id": 98427059, "body": "You can fix it by using <code>instance (Show a, Show p) =&gt; Show (SigT a p) where</code>"}], "answers": [{"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 5, "last_activity_date": 1556373498, "creation_date": 1556373498, "answer_id": 55881284, "question_id": 55881254, "link": "https://stackoverflow.com/questions/55881254/haskell-show-instance/55881284#55881284", "title": "Haskell Show instance", "body": "<p>Have you read this part of the error message: \"Use FlexibleInstances if you want to disable this.\"? This refers to the <code>FlexibleInstances</code> language extension, which you can enable by writing</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\n</code></pre>\n\n<p>on top of a source file, or (if you are in ghci) by writing <code>:set -XFlexibleInstances</code></p>\n"}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 55881284, "answer_count": 1, "score": -1, "last_activity_date": 1556373498, "creation_date": 1556373290, "question_id": 55881254, "link": "https://stackoverflow.com/questions/55881254/haskell-show-instance", "title": "Haskell Show instance", "body": "<p>I have this data type <code>data SigT a p = ExistT a p</code> and I want to write a specified <code>Show</code> for it. I tried this:</p>\n\n<pre><code>instance Show (SigT Integer Integer) where\n  show (ExistT q r) = \"quotient = \" ++ show q ++ \"remainder = \" ++ show r\n</code></pre>\n\n<p>But I get this error:</p>\n\n<pre><code>EXAMPLE_05_Driver.hs:8:10: error:\n    \u2022 Illegal instance declaration for \u2018Show (SigT Integer Integer)\u2019\n        (All instance types must be of the form (T a1 ... an)\n         where a1 ... an are *distinct type variables*,\n         and each type variable appears at most once in the instance head.\n         Use FlexibleInstances if you want to disable this.)\n    \u2022 In the instance declaration for \u2018Show (SigT Integer Integer)\u2019\n</code></pre>\n"}, {"tags": ["string", "haskell", "prefix"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1556371484, "post_id": 55880938, "comment_id": 98420732, "body": "So <code>Album</code> is something like <code>(String, a, b, c)</code> and <code>Database</code> is <code>[Album]</code>? Please provide a <i>complete</i> example that demonstrates what you code does that diverges from your expectation."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1556371558, "post_id": 55880938, "comment_id": 98420758, "body": "And if this is related to <a href=\"https://stackoverflow.com/q/55855747/1126841\">stackoverflow.com/q/55855747/1126841</a>, don&#39;t you guys have a  teacher you can ask?"}, {"owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 1, "creation_date": 1556372455, "post_id": 55880938, "comment_id": 98420994, "body": "You know that as you&#39;ve currently typed it, <code>[&quot;Uriah&quot;]</code> would constitute a valid prefix for <code>[&quot;Uriah&quot;, &quot;Heep&quot;]</code>, but <code>[&quot;Uri&quot;]</code>would not, don&#39;t you?"}, {"owner": {"reputation": 3, "user_id": 11417543, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e77da0fba944af1b6e5787a8ba77026?s=128&d=identicon&r=PG&f=1", "display_name": "ZachDeath", "link": "https://stackoverflow.com/users/11417543/zachdeath"}, "edited": false, "score": 0, "creation_date": 1556372625, "post_id": 55880938, "comment_id": 98421045, "body": "So the function is looking for the first element in the list as a prefix? when i want it too be looking for characters as a prefix instead?"}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 1, "last_activity_date": 1556469320, "creation_date": 1556469320, "answer_id": 55892369, "question_id": 55880938, "link": "https://stackoverflow.com/questions/55880938/isprefixof-not-working-correctly-during-pattern-matching-segment/55892369#55892369", "title": "IsPrefixOf not working correctly during pattern matching segment", "body": "<p>I think you've maybe formed the impression that the type for strings in Haskell is <code>[String]</code>.  However, this type represents a <strong>list</strong> of strings, not a single string.  The type for a single string is just <code>String</code>.</p>\n\n<p>As a result, your choice of these types is a little odd:</p>\n\n<pre><code>type Title = [String]\ntype Artist = [String]\n</code></pre>\n\n<p>This means that each album:</p>\n\n<pre><code>type Album  =  (Title, Artist, Year, Sales)\n</code></pre>\n\n<p>has a <code>Title</code> that's a <strong>list</strong> of strings and an <code>Artist</code> that's a <strong>list</strong> of strings.  I guess I can see that you might want multiple artists (though then the type should perhaps be named <code>Artists</code> in plural form), but I think that a single string for the album title ought to be enough.</p>\n\n<p>The reason I bring this up is that there's an ambiguity in what your function <code>displayAlbumsByPrefix</code> should do if there's an entry like this in the database:</p>\n\n<pre><code>...\n([\"Dark Side of the Moon\", \"Gold CD Ultradisc Re-release\"], [\"Pink Floyd\"], 1979, 2520000),\n...\n</code></pre>\n\n<p>Should it be included in the list generated by a <code>displayAlbumsByPrefix [\"G\"]</code> call?  Or are you checking only the prefix of the first string in the <code>Title</code> list?  What if there's an entry in the database where the title is an empty list <code>[]</code>?</p>\n\n<p>Anyway, let's set that aside and assume you want to stick with your current code, that by convention the database will always include titles that are lists of exactly one string <code>[\"like this\"]</code>, and that you want to filter on the prefix of that string.</p>\n\n<p>In that case, you're almost there.  The code:</p>\n\n<pre><code>searchByPrefix :: [String] -&gt; Album -&gt; Bool\nsearchByPrefix prefx (t, a, y, s)\n  | isPrefixOf prefx t = True\n  | otherwise = False\n</code></pre>\n\n<p>when called as, say:</p>\n\n<pre><code>searchByPrefix [\"G\"] ([\"Greatest Hits\"],[\"Queen\"],...)\n</code></pre>\n\n<p>creates the argument bindings <code>prefx=[\"G\"]</code> and <code>t=[\"Greatest Hits\"]</code>.  The <code>isPrefixOf</code> call checks to see if the one-element list <code>[\"G\"]</code> is a prefix of the one-element list <code>[\"Greatest Hits\"]</code> -- in other words, is the element <code>\"G\"</code> equal to <code>\"Greatest Hits\"</code>.  That's clearly <code>False</code> which is why your code isn't doing what you want.  Compare the following to see what's going on:</p>\n\n<pre><code>&gt; isPrefixOf [\"G\"] [\"Goo\"]    -- False  -- string \"G\" is not equal to string \"Goo\"\n&gt; isPrefixOf \"G\" \"Goo\"        -- True   -- character 'G' is equal to character 'G'\n</code></pre>\n\n<p>You can fix this by calling <code>isPrefixOf</code> on the heads of the lists instead of the lists themselves:</p>\n\n<pre><code>searchByPrefix :: [String] -&gt; Album -&gt; Bool\nsearchByPrefix prefx (t, a, y, s)\n  | isPrefixOf (head prefx) (head t) = True  -- change this line\n  | otherwise = False\n</code></pre>\n\n<p>This will fail with a runtime error if either the prefix or the title list in a database record are empty, and it will silently ignore any additional elements after the first in these lists.</p>\n\n<p>You could also do the same thing via a pattern match instead:</p>\n\n<pre><code>searchByPrefix :: [String] -&gt; Album -&gt; Bool\nsearchByPrefix [prefx] ([t], a, y, s)   -- or change this line\n  | isPrefixOf prefx t = True\n  | otherwise = False\n</code></pre>\n\n<p>and this version will fail with a runtime error if the database contains a record with a <code>Title</code> that's something other than a one-element list, or if <code>searchByPrefix</code> is called with a prefix other than a one-element list.  (So extra elements will cause a runtime error instead of being silently ignored.)</p>\n"}], "owner": {"reputation": 3, "user_id": 11417543, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e77da0fba944af1b6e5787a8ba77026?s=128&d=identicon&r=PG&f=1", "display_name": "ZachDeath", "link": "https://stackoverflow.com/users/11417543/zachdeath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 55892369, "answer_count": 1, "score": -2, "last_activity_date": 1556472984, "creation_date": 1556370956, "last_edit_date": 1556472984, "question_id": 55880938, "link": "https://stackoverflow.com/questions/55880938/isprefixof-not-working-correctly-during-pattern-matching-segment", "title": "IsPrefixOf not working correctly during pattern matching segment", "body": "<p>I am very new to Haskell. I have a a list which is acting as a database and i want to search the titles of the list with a prefix that you can insert. The type data for the titles is [String]</p>\n\n<p>Finally managed to make the code compile but instead of searching for a prefix the function only works if the full title is inserted. So for example I would like to search [\"G\"] and have the two results pop up but unless the full title is entered the search garners no results.</p>\n\n<pre><code>-- Types\ntype Title = [String]\ntype Artist = [String]\ntype Year = Int\ntype Sales = Int\n\n-- Define Album type here\ntype Album  =  (Title, Artist, Year, Sales)\n\n-- Define database type here\ntype Database = [Album]\n</code></pre>\n\n<p>Then the database follows this pattern</p>\n\n<pre><code>[([\"Greatest Hits\"                 ],        [ \"Queen\"          ],   1981,    6300000),\n([\"Gold: Greatest Hits\"            ],        [ \"ABBA\"           ],   1992,   5400000),\n...\n</code></pre>\n\n<p>-</p>\n\n<pre><code>- Detects if the prefix is in the string ahead of it\n    searchByPrefix :: [String] -&gt; Album -&gt; Bool\n    searchByPrefix prefx (t, a, y, s)\n      | isPrefixOf prefx t = True\n      | otherwise = False\n\n    -- A function that displays all the albums by a certain artist\n    displayAlbumsByPrefix :: [String] -&gt; Database -&gt;  String\n    displayAlbumsByPrefix prefx database = albumsToString (filter (searchByPrefix (prefx)) database)\n</code></pre>\n\n<p>Where albumsToString is just a function that displays the database neatly.</p>\n\n<p>I understand the issue is probably a massive oversight.</p>\n"}, {"tags": ["haskell", "compiler-construction", "category-theory"], "comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1556367172, "post_id": 55880423, "comment_id": 98419532, "body": "By &#39;&gt; 1-Arity`, what exactly do you mean? I haven&#39;t seen the word &#39;arity&#39; used in this context before."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1556367682, "post_id": 55880423, "comment_id": 98419655, "body": "I have added some definition @bradrn :-) Thanks"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1556368412, "post_id": 55880423, "comment_id": 98419858, "body": "Thanks! So you mean like e.g. <code>data Toy b next = ... | Operation next next</code>, where <code>next</code> appears twice?"}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1556368475, "post_id": 55880423, "comment_id": 98419874, "body": "yeah exactly :-)"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1556369420, "post_id": 55880423, "comment_id": 98420121, "body": "I&#39;m honestly not sure what that would do. I tried experimenting in GHCi but couldn&#39;t get the <code>Show</code> instance to work properly. Then again I&#39;ve never used free monads so I&#39;m probably not the best person to answer this question. (By the way, could you edit in an example of a 2-arity eDSL? I know I was able to figure it out but I feel it&#39;s still not too obvious from the question...)"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1556389948, "post_id": 55880423, "comment_id": 98425693, "body": "Can you clarify: are you trying to figure out how to represent conditionals and loops in an eDSL expressed as a free monad?"}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 7, "last_activity_date": 1556479991, "last_edit_date": 1556479991, "creation_date": 1556388590, "answer_id": 55883464, "question_id": 55880423, "link": "https://stackoverflow.com/questions/55880423/free-monad-for-ast-1-arity/55883464#55883464", "title": "Free Monad for AST &gt; 1-arity?", "body": "<p>The representation and composition of trees with a generalized notion of arity is in fact one of the core features of free monads.</p>\n\n<p>For example, binary trees can be defined as a free monad as follows:</p>\n\n<pre><code>data BinF a = Node a a\ntype Bin = Free BinF\n\nnode :: Bin a -&gt; Bin a -&gt; Bin a\nnode l r = Free (Node l r)\n\nexample :: Bin Int\nexample = node (node (pure 0)\n                     (pure 1))\n               (pure 2)\n{-\n  +---+---0\n   \\   \\--1\n    \\-2\n -}\n</code></pre>\n\n<p>An isomorphic representation is</p>\n\n<pre><code>data BinF a = Node (Bool -&gt; a)\n{- The product type (a, a) is isomorphic to (Bool -&gt; a). -}\n</code></pre>\n\n<p>The idea behind this is that a tree node can be seen as a demand for input (in this case, an input of type <code>Bool</code>), which is used to select one of the children of the node. Thus, a binary tree can be seen as a parser of bitstreams.</p>\n\n<pre><code>type Bin = Free BinF\n\nnextBit :: Bin Bool\nnextBit = Free (Node (\\b -&gt; Pure b))\n\nexample :: Bin Int\nexample = do\n  b1 &lt;- nextBit\n  if b1 then do\n    b2 &lt;- nextBit\n    if b2 then\n      pure 0\n    else\n      pure 1\n  else\n    pure 2\n</code></pre>\n\n<p>Of course, you can represent other arities by changing the <code>Bool</code> type (or the number of fields of <code>Node</code> in the original formulation).</p>\n\n<p>For a more practical example, <a href=\"https://blog.poisson.chat/posts/2018-04-26-pipes-free-monad.html\" rel=\"nofollow noreferrer\">the pipes library is build around such a free monad</a>.</p>\n"}], "owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 158, "favorite_count": 1, "accepted_answer_id": 55883464, "answer_count": 1, "score": 6, "last_activity_date": 1556479991, "creation_date": 1556367064, "last_edit_date": 1556367536, "question_id": 55880423, "link": "https://stackoverflow.com/questions/55880423/free-monad-for-ast-1-arity", "title": "Free Monad for AST &gt; 1-arity?", "body": "<p>When I'm saying <code>1-arity | 2-arity | n-arity</code>, I'm referring to tree in grap theory <a href=\"https://en.wikipedia.org/wiki/K-ary_tree\" rel=\"noreferrer\">k-ary tree</a> : </p>\n\n<blockquote>\n  <p>a k-ary tree is a rooted tree in which each node has no more than k children</p>\n</blockquote>\n\n<p>I have been using Free Monad in my project to create a small eDSL in haskell... but all the example I have seen are only 1-ary tree (Linear AST) like this one : </p>\n\n<p><a href=\"https://i.stack.imgur.com/abYdY.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/abYdY.png\" alt=\"enter image description here\"></a> </p>\n\n<p>this datatype lift on <code>Free</code> Monad :</p>\n\n<pre><code>data Toy b next =\n    Output b next\n  | Bell next\n  | Done\n</code></pre>\n\n<p>I would like to implement a more complex eDSL than a Linear one... Is Free Monad a solution for that ? and if yes, do you have examples of Free Monad > 1-Ary  ?  </p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 9305736, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a15518b9853962021c68f917de266b1?s=128&d=identicon&r=PG&f=1", "display_name": "ssrvz", "link": "https://stackoverflow.com/users/9305736/ssrvz"}, "edited": false, "score": 0, "creation_date": 1556366111, "post_id": 55880192, "comment_id": 98419259, "body": "I added deriving (Eq, Ord) to T1 , Eq works fine but Ord has the same error"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1556366642, "post_id": 55880192, "comment_id": 98419399, "body": "Does <code>Matrix</code> have an <code>Ord</code> instance?"}, {"owner": {"reputation": 23, "user_id": 9305736, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a15518b9853962021c68f917de266b1?s=128&d=identicon&r=PG&f=1", "display_name": "ssrvz", "link": "https://stackoverflow.com/users/9305736/ssrvz"}, "edited": false, "score": 0, "creation_date": 1556366728, "post_id": 55880192, "comment_id": 98419425, "body": "Hmm...I don&#39;t think it has one. Ok.. so I must do it mannualy."}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": false, "score": 4, "last_activity_date": 1556365303, "creation_date": 1556365303, "answer_id": 55880192, "question_id": 55880133, "link": "https://stackoverflow.com/questions/55880133/i-get-an-error-when-i-try-deriving-eq-how-can-i-fix-this/55880192#55880192", "title": "I get an error when i try deriving eq. How can i fix this?", "body": "<p>In your example, a value of type <code>TT</code> contains a value of type <code>T1</code>; thus, to equate two values of type <code>TT</code>, you also need to know how to equate two values of type <code>T1</code>. But you haven't defined an <code>Eq</code> instance for <code>T1</code>! Add a <code>deriving (Eq)</code> clause to <code>T1</code> and the error will go away. The same applies to <code>Ord</code>.</p>\n\n<p>In general, if you have a type <code>A</code>, which contains a value of type <code>B</code>, in order to derive a typeclass on <code>A</code>, you need to derive that same typeclass on <code>B</code>. As described above, this occurs because in order to implement the methods of that typeclass on <code>A</code>, you need to already know how that typeclass behaves on <code>B</code> e.g. you can't equate <code>A</code> values unless you know how <code>B</code> values are equal (which is your example above). Another example: if you want to show values of type <code>A</code> as a <code>String</code>, you need to be able to convert <code>B</code> to a string.</p>\n"}], "owner": {"reputation": 23, "user_id": 9305736, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a15518b9853962021c68f917de266b1?s=128&d=identicon&r=PG&f=1", "display_name": "ssrvz", "link": "https://stackoverflow.com/users/9305736/ssrvz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1556365303, "creation_date": 1556364815, "question_id": 55880133, "link": "https://stackoverflow.com/questions/55880133/i-get-an-error-when-i-try-deriving-eq-how-can-i-fix-this", "title": "I get an error when i try deriving eq. How can i fix this?", "body": "<p>I am getting this error:</p>\n\n<ul>\n<li>No instance for (Eq T1)\n    arising from the first field of <code>TT' (type</code>Matrix T1')\n  Possible fix:\n    use a standalone 'deriving instance' declaration,\n      so you can specify the instance context yourself\n\n<ul>\n<li>When deriving the instance for (Eq TT)\n|\n20 |              } deriving (Eq, Ord)</li>\n</ul></li>\n</ul>\n\n<p>and I don't know why and how I can fix this ( error is the same for Ord)</p>\n\n<p>Here's my code:</p>\n\n<pre><code>import Data.Matrix\ndata T1 = T1 { x :: Char\n             , y :: Int \n             , z :: Int \n             }\ninstance Show T1 where\n    show t1 = [(x t1)] \n\ndata TT = TT { myMap :: Matrix T1\n             , flag :: Int\n             } deriving (Eq, Ord)\n</code></pre>\n\n<p>Any idea?</p>\n"}, {"tags": ["haskell", "naming-conventions", "category-theory", "monoids"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1556358520, "post_id": 55879092, "comment_id": 98417408, "body": "I think it&#39;s best to think of <code>&lt;&gt;</code> as being unrelated to other <code>&lt;...&gt;</code> operators. (But maybe there&#39;s some connection I can&#39;t see)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1556368296, "post_id": 55879092, "comment_id": 98419824, "body": "I think it&#39;s a bit of a tongue-in-cheek reference to the idea that <code>&lt;...&gt;</code> itself is some sort of operator on other operators. If you think that <code>&lt;x&gt;</code> performs some sort of common lifting operation on an operator <code>x</code>, then the generic associative operator &quot;lifts&quot; no particular operator, and so <code>&lt;...&gt;</code> &quot;wraps&quot; the null operator to produce <code>&lt;&gt;</code>."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556450973, "post_id": 55879092, "comment_id": 98436634, "body": "@chi Applicative is (just like monads famously are) a monoid in the appropriate category. <a href=\"https://arxiv.org/abs/1406.4823\" rel=\"nofollow noreferrer\">arxiv.org/abs/1406.4823</a> But I very much doubt that this was the justification behind the name decision."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1556368587, "post_id": 55880137, "comment_id": 98419894, "body": "<code>&lt;*&gt;</code> is an ASCII representation of the symbol <code>\u229b</code> used in <a href=\"http://www.staff.city.ac.uk/~ross/papers/Applicative.pdf\" rel=\"nofollow noreferrer\">the paper that introduced applicative functors</a>. I&#39;m not sure, but I think the same paper introduced <code>&lt;$&gt;</code> as an infix synonym for <code>fmap</code>. (It was defined in terms of <code>pure</code> and <code>\u229b</code>, with the proof of its equivalence to <code>fmap</code> left unstated.)"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556368667, "post_id": 55880137, "comment_id": 98419921, "body": "Wow, I didn&#39;t know that @chepner! Can I edit that in?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1556368680, "post_id": 55880137, "comment_id": 98419927, "body": "There&#39;s also the fact that applicative functors are a type of monoidal functor, which could suggest that <code>&lt;&gt;</code> is thus a monoid operator without any functorial overtones."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556368717, "post_id": 55880137, "comment_id": 98419938, "body": "@chepner What&#39;s a monoidal functor?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556368947, "post_id": 55880137, "comment_id": 98419998, "body": "Ugh, you had to ask :) Someone with a better grasp of category theory could give a better summary. A monoidal functor is just a functor between monoidal categories, and a monoidal category is a category <code>C</code> equipped with (wait for it) an associative bifunctor <code>foo :: C x C -&gt; C</code> with an identity object in <code>C</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556369005, "post_id": 55880137, "comment_id": 98420012, "body": "Anyway, feel free to add any of this to your answer."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 1, "creation_date": 1556369614, "post_id": 55880137, "comment_id": 98420179, "body": "@bradrn : about monoidal functor : <a href=\"https://stackoverflow.com/questions/50702929/monoidal-functor-is-applicative-but-where-is-the-monoid-typeclass-in-the-definit\" title=\"monoidal functor is applicative but where is the monoid typeclass in the definit\">stackoverflow.com/questions/50702929/&hellip;</a>"}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": false, "score": 1, "last_activity_date": 1556369936, "last_edit_date": 1556369936, "creation_date": 1556364886, "answer_id": 55880137, "question_id": 55879092, "link": "https://stackoverflow.com/questions/55879092/meaning-of-in-this-family/55880137#55880137", "title": "meaning of `&lt;&gt;` in this family `&lt;*&gt;,&lt;$&gt;,&lt;&amp;&gt;`", "body": "<p>As far as I can see, <code>&lt;..&gt;</code> has no <em>general</em> meaning. However, there are certainly some connections with other operators, and most of the listed operators have some sort of mnemonic meaning:</p>\n\n<ul>\n<li><code>$</code> is function application: <code>f $ x = f x</code>. <code>&lt;$&gt;</code> is clearly inspired by <code>$</code>: while <code>f $ x</code> applies <code>f</code> to <code>x</code>, <code>f &lt;$&gt; x</code> applies <code>f</code> to each element inside <code>x</code>. (Personally, <code>&lt;$&gt;</code> is my favourite operator.)</li>\n<li>The same relation holds between <code>&amp;</code> and <code>&lt;&amp;&gt;</code>.</li>\n<li><code>&lt;&gt;</code> is the monoidal append operator: <code>\"x\" &lt;&gt; \"y\" &lt;&gt; \"z\"</code>, <code>Sum 1 &lt;&gt; Sum 2 &lt;&gt; Sum 3</code>. (<strong>EDIT:</strong> The following may or may not be correct - see edit below for more details.) As far as I'm aware those exact characters were just chosen to look nice, although there might be a connection with the use of <code>\u2022</code> in mathematics to represent some arbitrary operator.</li>\n<li>(This was just speculation - see edit below for a more solid account.) <s>I think <code>&lt;*&gt;</code> was chosen to have a nice resonance with <code>&lt;$&gt;</code>: <code>f &lt;$&gt; x &lt;*&gt; y &lt;*&gt; z</code>. Additionally tuples are also known as product types (e.g. OCaml represents tuple types like <code>Int * String</code>, corresponding to Haskell <code>(Int, String)</code>), so there might be a resonance there with applying <code>f $ (x, y, z)</code> (not that anyone would ever do that instead of plain <code>f x y z</code> or <code>f (x, y, z)</code>).</s> </li>\n</ul>\n\n<p><strong>EDIT:</strong> Turns out that @chepner knew a bit more about the history than I do - thanks for commenting! In the <a href=\"http://www.staff.city.ac.uk/~ross/papers/Applicative.pdf\" rel=\"nofollow noreferrer\">original paper introducing applicative functors</a>, the operator name <code>\u229b</code> was used for the applicative operation; it was ASCII-fied as <code>&lt;*&gt;</code>. The same paper introduced <code>&lt;$&gt;</code>. Also <code>&lt;&gt;</code> <em>may</em> have been inspired by <code>&lt;*&gt;</code> as monoids and applicatives turn out to be related categorically. So amazingly enough, all the angled brackets did turn out to be related to each other! (Albeit very indirectly and tenuously...)</p>\n"}, {"comments": [{"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1556369274, "post_id": 55880662, "comment_id": 98420078, "body": "@duplode : about &#39;&lt;*&gt;&#39; you can look at this post : <a href=\"https://stackoverflow.com/questions/55513329/does-in-have-a-special-meaning?noredirect=1#comment97734081_55513329\" title=\"does in have a special meaning\">stackoverflow.com/questions/55513329/&hellip;</a>"}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1556369896, "post_id": 55880662, "comment_id": 98420254, "body": "sorry to be more accurate the <code>*</code> in <code>&lt;*&gt;</code> is deliberate for example so why <code>&lt;&gt;</code> would be accidental ? it could have been something else than &lt;&gt; to avoid confusion with the set of  <code>&lt;..&gt;</code>"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1556371446, "post_id": 55880662, "comment_id": 98420715, "body": "[1/2] @NicolasHenin (1) I meant to link to that other question of yours, but momentarily forgot about it. Now fixed. (2) When it comes to explaining why things are named as they are, I think it is important to look closely at their history. Perhaps Ed Kmett will show up here and correct me by saying he was thinking of <code>&lt;*&gt;</code> when he wrote the first version of <i>semigroups</i>, but right now I don&#39;t see evidence of there being a connection, except by an after-the-fact analogy (which is entirely fine, as long as we recognise it as being after-the-fact)."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1556371470, "post_id": 55880662, "comment_id": 98420722, "body": "[2/2] @NicolasHenin It is important to be aware that <i>base</i>, or Haskell as a whole really, didn&#39;t come about in one fell swoop, but rather as the result of a long history of intertwining lines of inquiry and development."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1556374908, "post_id": 55880662, "comment_id": 98421672, "body": "@NicolasHenin Digging a little further, I found direct evidence for the origin of the <code>&lt;&gt;</code> name -- see my latest edit. Also, I have removed the XMonad <code>&lt;+&gt;</code> example, as including it would be anachronistic (its type originally was <code>ManageHook -&gt; ManageHook -&gt; ManageHook</code>; it only got generalised to the type of <code>mappend</code> with XMonad 0.10 from late 2011)."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1556438307, "post_id": 55880662, "comment_id": 98433783, "body": "thanks for all the references and the explanations !"}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 8, "last_activity_date": 1559604581, "last_edit_date": 1559604581, "creation_date": 1556369037, "answer_id": 55880662, "question_id": 55879092, "link": "https://stackoverflow.com/questions/55879092/meaning-of-in-this-family/55880662#55880662", "title": "meaning of `&lt;&gt;` in this family `&lt;*&gt;,&lt;$&gt;,&lt;&amp;&gt;`", "body": "<p>Those names didn't come out of some overarching conceptual scheme. The best way to see that is by tracing their histories:</p>\n\n<ul>\n<li><p>McBride and Paterson's <a href=\"http://www.staff.city.ac.uk/~ross/papers/Applicative.html\" rel=\"nofollow noreferrer\"><em>Applicative programming with effects</em></a> uses an asterisk in a circle, \u229b, as the binary operator of <code>Applicative</code> (note that <a href=\"https://stackoverflow.com/a/55514013/2751851\">there are theoretical reasons</a> to pick a <code>*</code>-like symbol that suggests a product). When <a href=\"https://downloads.haskell.org/ghc/6.6/docs/html/libraries/base/Control-Applicative.html\" rel=\"nofollow noreferrer\"><code>Control.Applicative</code> made it to <em>base</em></a> (that is, in <em>base</em>-2.1/GHC 6.6/October 2006), that became <code>&lt;*&gt;</code>, which is, as far as I can see, the closest ASCII approximation to that.</p></li>\n<li><p>The first version of <code>Control.Applicative</code> already featured <code>&lt;$&gt;</code>, and the final version of <em>Applicative programming with effects</em> I linked to above also mentions it (with the minor difference that the <code>&lt;$&gt;</code> there has an <code>Applicative</code> constraint). The point of picking a mashup of <code>$</code> and <code>&lt;*&gt;</code> as the <code>fmap</code> operator was presumably allowing us to write nice-looking applicative style expressions (<code>f &lt;$&gt; u &lt;*&gt; v &lt;*&gt; w</code>) that could be acceptable substitutes for the idiom brackets mentioned in that paper (which, rendered in ASCII, look like <code>[| f u v w |]</code>).</p></li>\n<li><p>The <code>Monoid</code> class came into being even earlier in the history of <em>base</em> (it already existed as of GHC 5.04.2, <a href=\"http://downloads.haskell.org/~ghc/5.04.2/docs/html/base/Control.Monad.Monoid.html\" rel=\"nofollow noreferrer\">in a <code>Control.Monad.Monoid</code> module</a>); however, there wasn't an infix version of <code>mappend</code> in <em>base</em> until version 4.5 (GHC 7.4, early 2012). <em>Applicative programming with effects</em> also mentions monoids, and suggests a circled plus, \u2295, as a binary operator for <code>mappend</code>. As far as I can tell, the <code>&lt;&gt;</code> name was first suggested by Ross Paterson <a href=\"https://mail.haskell.org/pipermail/libraries/2009-September/012540.html\" rel=\"nofollow noreferrer\">in a Libraries mailing list thread from 2009</a>, and made its way into a <a href=\"https://gitlab.haskell.org/ghc/ghc/issues/3339\" rel=\"nofollow noreferrer\">preexisting GHC proposal</a>, and presumably also to <a href=\"http://hackage.haskell.org/package/semigroups\" rel=\"nofollow noreferrer\">Edward Kmett's <em>semigroups</em> package</a>, whose <code>Data.Semigroup</code> module was eventually adopted by <em>base</em>. Paterson chose <code>&lt;&gt;</code> for it being a neutral name, which wouldn't suggest any specific monoid (see also: <a href=\"https://stackoverflow.com/q/23794894/2751851\"><em>Why is the <code>mappend</code> infix alias <code>&lt;&gt;</code> instead of <code>+</code>?</em></a>).</p></li>\n</ul>\n"}], "owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 2, "accepted_answer_id": 55880662, "answer_count": 2, "score": 1, "last_activity_date": 1559604581, "creation_date": 1556357372, "last_edit_date": 1556380753, "question_id": 55879092, "link": "https://stackoverflow.com/questions/55879092/meaning-of-in-this-family", "title": "meaning of `&lt;&gt;` in this family `&lt;*&gt;,&lt;$&gt;,&lt;&amp;&gt;`", "body": "<p>I'm Trying to expand my understanding about symbols in Haskell :</p>\n\n<pre><code> $  : Function Application operator (Allow you to apply arguments over a function)\n &amp;  : flipped version of Function Application Operator? (&amp;) = flip ($)\n&lt;&gt;  : associative operator (You'll find it in Semigroups and Monoids)\n&lt;$&gt; : function application ($) lifted over a Functor structure\n&lt;&amp;&gt; : flipped functor map\n&lt;*&gt; : applicative operator\n</code></pre>\n\n<p>Can we make a link between <code>&lt;&gt;</code> and this family <code>&lt;*&gt;,&lt;$&gt;,&lt;&amp;&gt;</code>? I made a quick conclusion when only looking at <code>&lt;*&gt;,&lt;$&gt;,&lt;&amp;&gt;</code> that <code>&lt;..&gt;</code> was related to something over a structure, but then what is the link between structure and associative operator ?</p>\n"}, {"tags": ["haskell", "ghc"], "answers": [{"comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1556471546, "post_id": 55892023, "comment_id": 98442055, "body": "A peculiarity worth noting -- the library and tests need to have separate <code>hs-source-dirs</code>.  If you try to build the test executable in a directory that contains a copy of the plug-in source, you&#39;ll get a <code>Module imports form a cycle</code> error claiming that <code>MyPlugin</code> imports itself."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 5, "last_activity_date": 1556467201, "creation_date": 1556467201, "answer_id": 55892023, "question_id": 55878912, "link": "https://stackoverflow.com/questions/55878912/how-to-test-ghc-plugins/55892023#55892023", "title": "How to test GHC plugins?", "body": "<p>If you're using Cabal, it should manage everything for you:</p>\n\n<code>my-plugin.cabal</code>\n\n<pre class=\"lang-none prettyprint-override\"><code>cabal-version: 2.4\nname: my-plugin\nversion: 1.0.0.0\n\nlibrary\n  build-depends: base ^&gt;= 4.12.0.0\n               , ghc ^&gt;= 8.6.1\n  hs-source-dirs: src\n  exposed-modules: MyPlugin\n\n-- could also be an internal library, executable, etc\ntest-suite test-plugin\n  type: exitcode-stdio-1.0\n  -- the dependency on my-plugin is everything, placing it\n  -- in the package DB of the GHC compiling this test\n  build-depends: base, my-plugin\n  hs-source-dirs: test\n  ghc-options: -fplugin=MyPlugin\n  main-is: Main.hs\n</code></pre>\n\n<code>src/MyPlugin.hs</code>\n\n<pre><code>module MyPlugin(plugin) where\nimport GhcPlugins\n-- this is an example plugin from the manual\n-- it prints the names of the non-recursive bindings in each module\n\nplugin :: Plugin\nplugin = defaultPlugin {\n  installCoreToDos = install\n  }\n\ninstall :: [CommandLineOption] -&gt; [CoreToDo] -&gt; CoreM [CoreToDo]\ninstall _ todo = do\n  return (CoreDoPluginPass \"Say name\" pass : todo)\n\npass :: ModGuts -&gt; CoreM ModGuts\npass guts = do dflags &lt;- getDynFlags\n               bindsOnlyPass (mapM (printBind dflags)) guts\n  where printBind :: DynFlags -&gt; CoreBind -&gt; CoreM CoreBind\n        printBind dflags bndr@(NonRec b _) = do\n          putMsgS $ \"Non-recursive binding named \" ++ showSDoc dflags (ppr b)\n          return bndr\n        printBind _ bndr = return bndr\n</code></pre>\n\n<code>test/Main.hs</code>\n\n<pre><code>module Main where\nimport Numeric.Natural\nimport Prelude hiding (even, odd)\n\n-- printed\nx :: Int\nx = 5\n\n-- not printed\nfixObvious :: (a -&gt; a) -&gt; a\nfixObvious f = f (fixObvious f)\n\n-- printed\nfixSubtle :: (a -&gt; a) -&gt; a\nfixSubtle f = let x = f x in x\n\n-- neither printed\neven, odd :: Natural -&gt; Bool\neven 0 = True\neven n = odd (n - 1)\nodd 0 = False\nodd n = even (n - 1)\n\n-- printed\nmain :: IO ()\nmain = return ()\n-- if the plugin were more interesting, you may want to test that any\n-- modified definitions act like you expect them to\n</code></pre>\n"}], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 3, "answer_count": 1, "score": 15, "last_activity_date": 1556467201, "creation_date": 1556355776, "question_id": 55878912, "link": "https://stackoverflow.com/questions/55878912/how-to-test-ghc-plugins", "title": "How to test GHC plugins?", "body": "<p>Recent versions of GHC have a new \"plugins\" feature, where you can write ordinary Haskell code, compile it as usual, and then insert it into the compiler so it can fiddle with GHC's internal state.</p>\n\n<p>Which is <em>very</em> cool. However, there's a small snag: In order to do this, the plugin has to be already compiled (seems obvious) and <em>registered as a package in the package DB!</em></p>\n\n<p>That's fine once the plugin is finished; package it up and put it on Hackage for all to enjoy. But how do you get around this while trying to <em>develop</em> the package? How does your edit-compile-execute cycle work when at every edit, you have to manually deregister the old package, build the new one, and register it?</p>\n\n<p>Basically, is there some way I can side-step this requirement while trying to develop a plugin?</p>\n"}, {"tags": ["haskell", "ghc", "haskell-stack"], "comments": [{"owner": {"reputation": 7033, "user_id": 288201, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b4b21f0f66f55fe614e7eeac6807f7f4?s=128&d=identicon&r=PG", "display_name": "Koterpillar", "link": "https://stackoverflow.com/users/288201/koterpillar"}, "edited": false, "score": 0, "creation_date": 1556358362, "post_id": 55878447, "comment_id": 98417371, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/45533610/upgrading-the-ghc-version-being-used-by-haskell-stack\">upgrading the ghc version being used by haskell stack</a>"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1556364491, "post_id": 55878447, "comment_id": 98418865, "body": "Try editing the <code>resolver</code> field in  <code>&#47;home&#47;bradn&#47;.stack&#47;global-project&#47;stack.yaml</code>."}], "answers": [{"comments": [{"owner": {"reputation": 832, "user_id": 5009459, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/f726d0f8972102c15733fff4a01d61dc?s=128&d=identicon&r=PG", "display_name": "JBarros35", "link": "https://stackoverflow.com/users/5009459/jbarros35"}, "edited": false, "score": 0, "creation_date": 1613313999, "post_id": 56101903, "comment_id": 117031431, "body": "sorry but you answered anything"}], "tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": false, "score": 1, "last_activity_date": 1557683414, "creation_date": 1557683414, "answer_id": 56101903, "question_id": 55878447, "link": "https://stackoverflow.com/questions/55878447/how-to-i-change-the-default-ghc-compiler-version-on-stack/56101903#56101903", "title": "How to I change the default GHC compiler version on Stack", "body": "<p>You've misunderstood the <code>stack config</code> command. Wherever you use <code>--compiler</code>, you are telling Stack which compiler version it should use for the current command - but since editing the config doesn't use any kind of compiler, this doesn't really change anything.</p>\n\n<p>Just running <code>stack config set</code> gives you</p>\n\n<pre><code>Missing: COMMAND\n\nUsage: stack config set COMMAND [--help]\n  Sets a field in the project's stack.yaml to value\n</code></pre>\n\n<p>which explains the problem better. If you ask for help, Stack tells you that the only valid <code>COMMAND</code> values are <code>resolver</code>, <code>system-ghc</code>, and <code>install-ghc</code>.</p>\n\n<p>So you can set the <code>resolver</code> to a particular compiler version, with</p>\n\n<pre><code>stack config set resolver ghc-8.0.2\n</code></pre>\n\n<p>But you can't set the compiler from the command line, because it's not a supported command for <code>stack config set</code>.</p>\n"}], "owner": {"reputation": 185, "user_id": 1657666, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/265150b21cb471f3f4bb1e8d68c0e5bd?s=128&d=identicon&r=PG", "display_name": "user1657666", "link": "https://stackoverflow.com/users/1657666/user1657666"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2012, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1557683414, "creation_date": 1556351553, "last_edit_date": 1556362497, "question_id": 55878447, "link": "https://stackoverflow.com/questions/55878447/how-to-i-change-the-default-ghc-compiler-version-on-stack", "title": "How to I change the default GHC compiler version on Stack", "body": "<p>I am trying to set an enverionment for Haskell and I installed stack. After the installation I realized the GHC 8.6.4 version is not the one that I need (8.0.2). </p>\n\n<pre><code>compiler-exe: /home/manny/.stack/programs/x86_64-linux/ghc-tinfo6- \n8.6.4/bin/ghc\ncompiler-bin: /home/manny/.stack/programs/x86_64-linux/ghc-tinfo6- \n8.6.4/bin\ncompiler-tools-bin: /home/manny/.stack/compiler-tools/x86_64-linux- \ntinfo6/ghc-8.6.4/bin\n</code></pre>\n\n<p>So I installed the GHC 8.0.2. I know if I change the global-config file I could resolve the problem indication the right compiler that I want but what is the proper command to make such change avoiding editing the configuration files ?</p>\n\n<p>I tried:</p>\n\n<pre><code>stack config set --compiler ghc-8.0.2\n</code></pre>\n\n<p>without success. My compiler is still 8.6.4.</p>\n\n<pre><code>~/.stack$ stack ghc -- --version\nThe Glorious Glasgow Haskell Compilation System, version 8.6.4\n</code></pre>\n\n<p>Thank you!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2825, "user_id": 6600000, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1jFof.jpg?s=128&g=1", "display_name": "Keivan Esbati", "link": "https://stackoverflow.com/users/6600000/keivan-esbati"}, "edited": false, "score": 1, "creation_date": 1556342431, "post_id": 55877397, "comment_id": 98414362, "body": "can&#39;t seem to make my code compile? Please attach any error message you are getting"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1556342680, "post_id": 55877397, "comment_id": 98414401, "body": "Start by breaking your code into smaller, easier-to-manage pieces. <code>getMedian</code>, for example, should be defined as a separate function, not in the middle of the IO action that will use it."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1556342830, "post_id": 55877397, "comment_id": 98414417, "body": "Also, you misusing the <code>do</code> notation; it&#39;s for simplifying monadic operations, not just introducting a block of code."}, {"owner": {"reputation": 1, "user_id": 11418563, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EfwoD3VfxE0/AAAAAAAAAAI/AAAAAAAAAWA/hV6qXLhk1YU/photo.jpg?sz=128", "display_name": "Travis C", "link": "https://stackoverflow.com/users/11418563/travis-c"}, "edited": false, "score": 0, "creation_date": 1556374536, "post_id": 55877397, "comment_id": 98421574, "body": "Right now, i can&#39;t get past &quot;parse error&quot;  on main = median"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556468713, "post_id": 55877397, "comment_id": 98441279, "body": "that whole code block is riddled with bugs. it is impossible to fully address in less than 20 pages of text or so. :( and the fact that the error message wasn&#39;t included didn&#39;t help either."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1556350852, "creation_date": 1556350852, "answer_id": 55878367, "question_id": 55877397, "link": "https://stackoverflow.com/questions/55877397/troubles-with-haskell-program-to-find-ther-median-of-a-list/55878367#55878367", "title": "Troubles with Haskell program to find ther median of a list", "body": "<p>This is a bit too broad: I'll focus only on the first part where you read the input.</p>\n\n<pre><code>putStr \"Type a single number: \"\n    hFlush stdout\n    line &lt;- getLine\n    let n = read line\n    if (n == Nothing)\n        then\n            \"No values entered, restarting program\"\n            median\n\n        else\n            n:list\n</code></pre>\n\n<p>Here you use strings (<code>\"No values entered, restarting program\"</code>) and lists (<code>n:list</code>) as if they were IO actions, but they are not. To read input, I recommend writing an auxiliary recursive helper. Here's an example:</p>\n\n<pre><code>getNumberList :: IO [Integer]\ngetNumberList = do\n   putStr \"Type a single number: \"\n   hFlush stdout\n   line &lt;- getLine\n   case line of\n      \"\" -&gt; return []   -- no more numbers to read\n      _  -&gt; do          -- a number was entered\n         let n = read line\n         rest &lt;- getNumberList  -- recursively read the others\n         return (n:rest)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61, "user_id": 11235803, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efcf6079e81dffe2bea86d12ade6cc5c?s=128&d=identicon&r=PG&f=1", "display_name": "Jankun", "link": "https://stackoverflow.com/users/11235803/jankun"}, "is_accepted": false, "score": 0, "last_activity_date": 1556361622, "creation_date": 1556361622, "answer_id": 55879680, "question_id": 55877397, "link": "https://stackoverflow.com/questions/55877397/troubles-with-haskell-program-to-find-ther-median-of-a-list/55879680#55879680", "title": "Troubles with Haskell program to find ther median of a list", "body": "<p><code>n:list</code> does not add <code>n</code> to beginning of list <code>list</code>. It creates a <strong>new</strong> list containing <code>n</code> at index 0 followed by list <code>list</code>.</p>\n\n<p>Try that in ghci:</p>\n\n<p><code>let a = [] -- creates an empty list called a\n0:a -- creates a new list but does nothing with the result\nlet b = 0:a -- creates a new list and save that value in b</code></p>\n\n<p>Now value of <code>a</code> is <code>[]</code> and value of <code>b</code> is <code>[0]</code></p>\n"}, {"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 0, "last_activity_date": 1556466964, "creation_date": 1556466964, "answer_id": 55891991, "question_id": 55877397, "link": "https://stackoverflow.com/questions/55877397/troubles-with-haskell-program-to-find-ther-median-of-a-list/55891991#55891991", "title": "Troubles with Haskell program to find ther median of a list", "body": "<p>The parse error you're getting is the result of the last block of code:</p>\n\n<pre><code>let n = read line\n    if (line == \"y\")\n        then\n            median\n        else\n            return ()\n</code></pre>\n\n<p>Because the <code>if</code> construct is indented, I believe it's being parsed as another <code>let</code> binding, like this:</p>\n\n<pre><code>let x = 1\n    y = 1 + x\n</code></pre>\n\n<p>and the parser is very confused by the time it hits <code>main</code>.</p>\n\n<p>I think perhaps you meant:</p>\n\n<pre><code>let n = read line\nif (line == \"y\")\n    then\n        median\n    else\n        return ()\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 11418563, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EfwoD3VfxE0/AAAAAAAAAAI/AAAAAAAAAWA/hV6qXLhk1YU/photo.jpg?sz=128", "display_name": "Travis C", "link": "https://stackoverflow.com/users/11418563/travis-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "answer_count": 3, "score": -2, "last_activity_date": 1556466964, "creation_date": 1556341245, "last_edit_date": 1556341575, "question_id": 55877397, "link": "https://stackoverflow.com/questions/55877397/troubles-with-haskell-program-to-find-ther-median-of-a-list", "title": "Troubles with Haskell program to find ther median of a list", "body": "<p>I need to write a haskell program that prompts for a sequence of integers from the user, one integer for each line, ending with a blank line to mark the end. Once the end of list is indicated, the program finds the median of the list created and prompts if the user wants to go again. </p>\n\n<p>Ive spent quite a bit of time on this but am very new to haskell and can't seem to make my code compile. Here's what i have so far:</p>\n\n<pre><code>module Main where\n\nimport System.IO\nimport Data.List\n\n-- median.hs\n\n\n-- Repeatedly prompt the user for numbers to find the median of. Ends by\n-- asking the user if they want to go again. User types y to go again or\n-- anything else to end the program\n\n-- User needs to enter only a single integer on each line, ending with\n-- a blank line entered. If this isn't followed the program will crash.\n\n\nmedian = do\n\n    let list = []\n\n    putStr \"This is a basic program that finds the median of a list of numbers entered.\"\n    putStr \"To enter the list, enter each number individually followed by a blank line to end your list.\"\n    putStr \"\"\n    putStr \"*********************************************************************************************************\"\n    putStr \"*********************************************************************************************************\"\n    putStr \"\"\n    putStr \"Begin entering the list\"\n    putStr \"\"\n\n    putStr \"Type a single number: \"\n    hFlush stdout\n    line &lt;- getLine\n    let n = read line\n    if (n == Nothing)\n        then\n            \"No values entered, restarting program\"\n            median\n\n        else\n            n:list\n\n    putStr \"\"         --List fully entered, calculate median and print value\n    putStr \"The median of your number is: \"\n\n    let newList = createList list where\n        createList list = do\n            putStr \"Type a single number or nothing to complete the list: \"\n            hFlush stdout\n            input &lt;- getLine\n            do\n                case input of\n                    Nothing -&gt; Nothing\n                    x -&gt; createList (x:list)\n\n    let med = calcMedian newList where\n        calcMedian :: [Integer] -&gt; Integer\n        calcMedian [] = 0\n        calcMedian xs = result where\n            result = do\n                if (n `mod` 2 == 0) then getMiddle sorted else head $ drop a sorted where\n                    getMiddle [] = 0\n                    getMiddle xs = (a' + b') `div` 2 where\n                        a' = head $ drop a xs\n                        b' = head $ drop b xs\n                        a = (n `div` 2)\n                        b = n' - 1\n                        n' = n `div` 2\n                        n = length xs\n            a = (n - 1) `div` 2\n            n = length xs\n            sorted = sort xs\n\n    show med\n    putStr \"Would you like to go again? (y or n): \"\n    hFlush stdout\n    line &lt;- getLine\n\n    let n = read line\n        if (line == \"y\")\n            then\n                median\n            else\n                return ()\n\nmain = median\n</code></pre>\n"}, {"tags": ["haskell", "monad-transformers", "maybe", "io-monad"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 2, "creation_date": 1556327384, "post_id": 55876425, "comment_id": 98412596, "body": "Why did you reach for monad transformers here?"}, {"owner": {"reputation": 392, "user_id": 1893075, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82c678be91d3694aefb5e9a2dd69aa80?s=128&d=identicon&r=PG&f=1", "display_name": "Bilentor", "link": "https://stackoverflow.com/users/1893075/bilentor"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1556327573, "post_id": 55876425, "comment_id": 98412613, "body": "@Carl I searched for using two types of monads in a do block (which I understand is not possible) and found some threads suggesting use of <code>lift</code> and monad transformers. I didn&#39;t know much about monad transformers so took this as a learning moment. Still not sure if it&#39;s the right thing to use here."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 3, "creation_date": 1556327938, "post_id": 55876425, "comment_id": 98412659, "body": "So what do you want to happen when <code>f</code> returns <code>Nothing</code>?"}, {"owner": {"reputation": 392, "user_id": 1893075, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82c678be91d3694aefb5e9a2dd69aa80?s=128&d=identicon&r=PG&f=1", "display_name": "Bilentor", "link": "https://stackoverflow.com/users/1893075/bilentor"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1556328166, "post_id": 55876425, "comment_id": 98412690, "body": "I am actually not sure what would be the best way. I could throw an error and not write to the file in which case I would have to use the <code>case</code> statement so I guess that kinda answers my question?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1556329042, "post_id": 55876425, "comment_id": 98412777, "body": "One detail worth emphasising is that <code>&lt;-</code> in a do-block doesn&#39;t literally extract the value from the monad. Rather, it merely allows you to work <i>as if</i> you could extract it. For instance, if you have <code>x &lt;- m</code> in a <code>Maybe</code> do-block, you can then use the rest of the do block to specify what will be done with <code>x</code> <i>in case <code>m</code> is not <code>Nothing</code></i>. If <code>m</code> turns out to be <code>Nothing</code>, and the possibility remains there, there will be no <code>x</code> to work with, and the failure will be propagated through <code>&gt;&gt;=</code> accordingly."}, {"owner": {"reputation": 392, "user_id": 1893075, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82c678be91d3694aefb5e9a2dd69aa80?s=128&d=identicon&r=PG&f=1", "display_name": "Bilentor", "link": "https://stackoverflow.com/users/1893075/bilentor"}, "edited": false, "score": 0, "creation_date": 1556333001, "post_id": 55876425, "comment_id": 98413202, "body": "Right, so if <code>x &lt;- m</code> in a <code>Maybe</code> <code>do</code> block is <code>Nothing</code>, it kinda &quot;short circuits&quot; the whole thing?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1556334347, "post_id": 55876425, "comment_id": 98413355, "body": "@Bilentor Yes.  If <code>m</code> is <code>Nothing</code> there, everything else in the block is ignored and the result of the whole thing is <code>Nothing</code>."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1556354625, "post_id": 55876425, "comment_id": 98416554, "body": "Related: <a href=\"https://stackoverflow.com/questions/32579133/simplest-non-trivial-monad-transformer-example-for-dummies-iomaybe\" title=\"simplest non trivial monad transformer example for dummies iomaybe\">stackoverflow.com/questions/32579133/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 392, "user_id": 1893075, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82c678be91d3694aefb5e9a2dd69aa80?s=128&d=identicon&r=PG&f=1", "display_name": "Bilentor", "link": "https://stackoverflow.com/users/1893075/bilentor"}, "edited": false, "score": 0, "creation_date": 1556328402, "post_id": 55876501, "comment_id": 98412719, "body": "Thanks for explaining that. I didn&#39;t know about <code>fromMaybe</code> which actually makes sense in my problem."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1556329417, "post_id": 55876501, "comment_id": 98412822, "body": "@Carl Well spotted. I have added that to the answer; thanks."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1556344230, "post_id": 55876501, "comment_id": 98414618, "body": "@Carl omg DUH <code>traverse_</code> for this.  I have always invented my own combinator that does the same thing.  Need to remember that <code>Maybe</code> is a &quot;collection&quot;. Thanks."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 4, "last_activity_date": 1556329805, "last_edit_date": 1556329805, "creation_date": 1556328231, "answer_id": 55876501, "question_id": 55876425, "link": "https://stackoverflow.com/questions/55876425/monad-transformers-with-io-and-maybe/55876501#55876501", "title": "Monad transformers with IO and Maybe", "body": "<p>Let's stick for a moment with your first snippet. If <code>f input</code> is a <code>Maybe String</code>, and you want to pass its result to <code>writeFile \"out.txt\"</code>, which takes a <code>String</code>, you need to deal with the possibility of <code>f input</code> being <code>Nothing</code>. You don't have to literally use a case-statement. For instance:</p>\n\n<ul>\n<li><p><code>maybe</code> from the Prelude is case analysis packaged as a function;</p></li>\n<li><p><code>fromMaybe</code> from <code>Data.Maybe</code> lets you easily supply a default value, if that makes sense for your use case;</p></li>\n<li><p><a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#v:traverse_\" rel=\"nofollow noreferrer\"><code>traverse_</code></a> and <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#v:for_\" rel=\"nofollow noreferrer\"><code>for_</code></a> from <code>Data.Foldable</code> could be used to silently ignore <code>Nothing</code>-ness:</p>\n\n<pre><code>for_ (f input) (writeFile \"out.txt\") -- Does nothing if `f input` is `Nothing`.\n</code></pre></li>\n</ul>\n\n<p>Still, no matter what you choose to do, it will involve handling <code>Nothing</code> somehow.</p>\n\n<p>As for <code>MaybeT</code>, you don't really want monad transformers here. <code>MaybeT IO</code> is for when you want something like a <code>Maybe</code> computation but in which you can also include <code>IO</code> computations. If <code>f :: String -&gt; Maybe String</code> already does what you want, you don't need to add an underlying <code>IO</code> layer to it.</p>\n"}], "owner": {"reputation": 392, "user_id": 1893075, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82c678be91d3694aefb5e9a2dd69aa80?s=128&d=identicon&r=PG&f=1", "display_name": "Bilentor", "link": "https://stackoverflow.com/users/1893075/bilentor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "accepted_answer_id": 55876501, "answer_count": 1, "score": 0, "last_activity_date": 1556329805, "creation_date": 1556326860, "question_id": 55876425, "link": "https://stackoverflow.com/questions/55876425/monad-transformers-with-io-and-maybe", "title": "Monad transformers with IO and Maybe", "body": "<p>I am trying to stack up IO and Maybe monads but either I don't understand monad transformers well enough or this is not possible using transformers. Can some one help me understand this?</p>\n\n<pre><code>f :: String -&gt; Maybe String\n\nmain :: IO ()\nmain = do\n  input &lt;- getLine            -- IO String\n  output &lt;- f input           -- Maybe String (Can't extract because it is IO do block)\n  writeFile \"out.txt\" output  -- gives error because writeFile expects output :: String\n</code></pre>\n\n<p>In the above simplified example, I have a function <code>f</code> that returns a <code>Maybe String</code> and I would like to have a neat way of extracting this in the <code>IO</code> do block. I tried</p>\n\n<pre><code>f :: String -&gt; MaybeT IO String\n\nmain :: IO ()\nmain = do\n  input &lt;- getLine              -- IO String\n  output &lt;- runMaybeT (f input) -- Extracts output :: Maybe String instead of String\n  writeFile \"out.txt\" output    -- gives error because writeFile expects output :: String\n</code></pre>\n\n<p>which lets me extract the <code>Maybe String</code> out in the second line of <code>do</code> block but I need to extract the string out of that. Is there a way to do this without using <code>case</code>?</p>\n"}, {"tags": ["haskell", "exception", "error-handling"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556312449, "post_id": 55874465, "comment_id": 98409539, "body": "Using a suitable monad is fairly common for errors/exceptions. <code>Either e</code> is fine, and even <code>Maybe</code> could be appropriate. <code>Except e</code> is essentially <code>Either e</code> with a better name. <code>MonadException</code> generalizes all these approaches, but its generality is not often needed (IMO). I&#39;d stay away from IO, as a default, since that will make every catch to be possible only inside IO. Forget about <code>fail</code>, rather use <code>Control.Monad.Exception.throw</code> or something more specific like <code>throwE</code>."}, {"owner": {"reputation": 579, "user_id": 8426314, "user_type": "registered", "profile_image": "https://graph.facebook.com/10101771879690894/picture?type=large", "display_name": "Nathan Wilson", "link": "https://stackoverflow.com/users/8426314/nathan-wilson"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556313873, "post_id": 55874465, "comment_id": 98409978, "body": "As a very tame example, I recently had to convert a <code>[IO (Either Text [Either Text Int])]</code> to an <code>IO (Either Text [[Int]])</code> in just a toy project, which required a lot more thought than seemed reasonable to me.  Wouldn&#39;t that problem continue to escalate the deeper you are into your program logic?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556316169, "post_id": 55874465, "comment_id": 98410657, "body": "@NathanWilson I could imagine arriving at that type by doing something like this: you start with a <code>[FilePath]</code> telling some resources to load from disk, and you have a loader of type <code>FilePath -&gt; IO (Either Text Resource)</code> that might throw an error because of syntax errors. Each resource has some contained <code>Elements</code>, so you have an <code>Resource -&gt; [Element]</code> accessor, and then some validator that does some computation on an <code>Element</code> but might discover invalid data, so it has type <code>Element -&gt; Either Text Int</code>. You combine all these in the natural way, and arrive at a god-awful type."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556316179, "post_id": 55874465, "comment_id": 98410665, "body": "Here&#39;s an alternative: change your loader to have type <code>loader :: FilePath -&gt; ExceptT Text IO Resource</code>; your accessor can stay <code>elements :: Resource -&gt; [Element]</code>; change your validator to have type <code>compute :: Element -&gt; ExceptT Text IO Int</code>. Now the natural way of combining them lands you at <code>forM paths $ \\path -&gt; loader path &gt;&gt;= mapM compute . elements</code> which has the nice clean type <code>ExceptT Text IO [[Int]]</code>. The weaving of <code>Either Text</code>s and <code>IO</code> is hidden in the implementation of that monad&#39;s bind and happens at each step, so it never arrives at god-awful."}, {"owner": {"reputation": 579, "user_id": 8426314, "user_type": "registered", "profile_image": "https://graph.facebook.com/10101771879690894/picture?type=large", "display_name": "Nathan Wilson", "link": "https://stackoverflow.com/users/8426314/nathan-wilson"}, "edited": false, "score": 0, "creation_date": 1556319121, "post_id": 55874465, "comment_id": 98411332, "body": "Wow that&#39;s much more elegant. And yes you&#39;ve correctly deduced pretty much the exact sequence to arrive me at an <code>[IO (Either Text [Either Text Int])]</code> :).  I haven&#39;t really gotten the hang of monad transformers yet, but maybe this means it&#39;s time for me to dive in."}], "owner": {"reputation": 579, "user_id": 8426314, "user_type": "registered", "profile_image": "https://graph.facebook.com/10101771879690894/picture?type=large", "display_name": "Nathan Wilson", "link": "https://stackoverflow.com/users/8426314/nathan-wilson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 157, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1556310031, "creation_date": 1556310031, "question_id": 55874465, "link": "https://stackoverflow.com/questions/55874465/handling-invalid-states-in-haskell", "title": "Handling invalid states in haskell", "body": "<p>I'm trying to get a better feel for how to handle error states in Haskell, since there seem to be a lot of ways to do it.  Ideally, my data structures would make any invalid inputs unrepresentable, but despite considerable effort to the contrary, I still occasionally end up working with data where the type system can allow invalid states.  As an example, let's consider that my program input is the training results for a neural network.  In order for math to work, each matrix needs to have the correct bounds, and that's not (really) representable by the type system.  If data is invalid, there's really nothing the application can do but halt any further processing and notify someone of the problem (so it's not recoverable).  What's the best way to handle this in Haskell?  It seems like I could:</p>\n\n<p>1) Use <code>error</code> or other partial functions when processing my data.  My understanding is this should only be used to represent a bug in the code.  So it would have to be coupled with some sort of validation at the point that I load the data, and any point \"after\" that check I just assume that the data is in a valid format.  This feels imperative to me, and doesn't seem to fit very well with lazy, declarative code.</p>\n\n<p>2) Throw an exception when processing the data using <code>Control.Exception.throw</code>, and then catch it at the top level where I can alert someone.  Contrary to <code>error</code>, I believe this doesn't indicate a bug in the program, so perhaps there wouldn't be verification when I load the data beyond what can be represented through the type system?  The presence or absence of an exception when processing the data would define the verification.</p>\n\n<p>3) Lift any data processing that could fail into the IO monad and use <code>Control.Exception.throwIO</code>.</p>\n\n<p>4) Lift any data processing that could fail into the IO monad and use <code>fail</code> (I've read that using <code>fail</code> frowned on by the community?)</p>\n\n<p>5) Return an <code>Either</code> or something similar, and let that bubble up through all your logic.  I've definitely had some cases where composing <code>Either</code>s becomes (to me) exceedingly impractical.</p>\n\n<p>6) Use Control.Monad.Exception, which I only marginally understand, but seems to involve lifting any data processing that could fail into some exceptional monad, that I think is supposed to be more easily composeable than <code>Either</code>?</p>\n\n<p>and I'm not even sure that's all the options.  Is there an approach to this problem that's generally accepted by the community, or is this really an opinionated topic?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 7, "last_activity_date": 1556313849, "last_edit_date": 1556313849, "creation_date": 1556308805, "answer_id": 55874256, "question_id": 55874057, "link": "https://stackoverflow.com/questions/55874057/accessing-list-positions-inside-functions-like-map-in-haskell/55874256#55874256", "title": "Accessing list positions inside functions like map in Haskell", "body": "<p>I generally avoid using any indices at all, if possible. In this case, what you're really working with is: any one element of the list with <em>all the other</em> elements. No need to express that with index comparison, instead write a function that will give you a suitable look into the list:</p>\n\n<pre><code>pickouts :: [a] -> [(a,[a])]\npickouts [] = []\npickouts (x:xs) = (x,xs) : (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Arrow.html#v:second\" rel=\"nofollow noreferrer\">second</a> (x:) <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-60--36--62-\" rel=\"nofollow noreferrer\">&lt;$></a> pickouts xs)</code></pre>\n\n<p>Then, the actual computation becomes just</p>\n\n<pre><code>f :: Double -&gt; [(Double,Double)] -&gt; Double\nf x points = sum [q * product [x-p | (p,_)&lt;-ps] | ((_,q),ps) &lt;- pickouts points]\n</code></pre>\n"}], "owner": {"reputation": 1778, "user_id": 421652, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/2jNxG.jpg?s=128&g=1", "display_name": "Ultimate Gobblement", "link": "https://stackoverflow.com/users/421652/ultimate-gobblement"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 55874256, "answer_count": 1, "score": 1, "last_activity_date": 1556313849, "creation_date": 1556307805, "question_id": 55874057, "link": "https://stackoverflow.com/questions/55874057/accessing-list-positions-inside-functions-like-map-in-haskell", "title": "Accessing list positions inside functions like map in Haskell", "body": "<p>I have just tried rewriting some code, originally a short Javascript function, in Haskell. The original has 2 nested loops and the inner loop contains a check for equality against both loop counters: </p>\n\n<pre><code>function f(x, points){\n  var i, j;\n  var n = points.length;\n  var result = 0;\n\n  for(i=0; i&lt;n; i++){\n    var xprod = 1;\n    for(j=0; j&lt;n; j++){\n      if(j != i){\n        xprod *= (x - points[j][0]);\n      }\n    }\n    result += points[i][1] * xprod;\n  }\n  return result;\n}\n</code></pre>\n\n<p>I was hoping to be able to simplify it in Haskell, but I couldn't figure out how get hold of the i and j values without effectively writing out every step of the original recursively. In Javascript Array.map passes the list position into the callback function as the second parameter, but it seems that map in Haskell doesn't do this. My current Haskell version looks awful to me as I'm passing in 2 copies of the array (one for each loop):</p>\n\n<pre><code>xproduct :: Int -&gt; Int -&gt; Double -&gt; [(Double,Double)] -&gt; Double\nxproduct _ _ _ [] = 1       \nxproduct i j x (pt:todo) \n  | i == j =  (xproduct i (j+1) x todo) \n  | otherwise = (xproduct i (j+1) x todo) * (x - (fst pt))\n\nsolvestep :: Int -&gt; Double -&gt; [(Double,Double)] -&gt; [(Double,Double)] -&gt; Double \nsolvestep _ _ _ [] = 0\nsolvestep i x pts (pt:todo) = ((snd pt) * xprod) + (solvestep (i+1) x pts todo)\n  where xprod = xproduct i 0 x pts\n\nsolve :: Double -&gt; [(Double,Double)] -&gt; Double\nsolve x points = solvestep 0 x points points\n</code></pre>\n\n<p>Is there a better way to do this?</p>\n"}, {"tags": ["haskell", "exception", "monads", "monad-transformers"], "answers": [{"comments": [{"owner": {"reputation": 814, "user_id": 4856302, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/a309298c4cc7c39ef019d42c018e171e?s=128&d=identicon&r=PG&f=1", "display_name": "shooqie", "link": "https://stackoverflow.com/users/4856302/shooqie"}, "edited": false, "score": 0, "creation_date": 1556309070, "post_id": 55874033, "comment_id": 98408319, "body": "So something like: <code>f n `catchError` throwError &quot;NOPE&quot;</code>? It doesn&#39;t work"}, {"owner": {"reputation": 814, "user_id": 4856302, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/a309298c4cc7c39ef019d42c018e171e?s=128&d=identicon&r=PG&f=1", "display_name": "shooqie", "link": "https://stackoverflow.com/users/4856302/shooqie"}, "edited": false, "score": 1, "creation_date": 1556310098, "post_id": 55874033, "comment_id": 98408676, "body": "Okay, I see. <code>f n `catchError` (\\_ -&gt; throwError &quot;NOPE&quot;)</code> works as intended. Thank you!"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 3, "last_activity_date": 1556307695, "creation_date": 1556307695, "answer_id": 55874033, "question_id": 55873906, "link": "https://stackoverflow.com/questions/55873906/throwe-and-catche-with-exceptt-monad-on-the-bottom-of-monadic-stack/55874033#55874033", "title": "throwE and catchE with ExceptT monad on the bottom of monadic stack", "body": "<p>You need more than <code>lift</code> to lift <code>catch</code> through a monad transformer. In fact, there are transformers with no way to lift <code>catch</code> at all (such as <code>ContT</code>). However for <code>ReaderT</code> there is, and the easiest way to make use of that is via <code>Control.Monad.Error.catchError</code> from the mtl library.</p>\n"}], "owner": {"reputation": 814, "user_id": 4856302, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/a309298c4cc7c39ef019d42c018e171e?s=128&d=identicon&r=PG&f=1", "display_name": "shooqie", "link": "https://stackoverflow.com/users/4856302/shooqie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1556307695, "creation_date": 1556307099, "question_id": 55873906, "link": "https://stackoverflow.com/questions/55873906/throwe-and-catche-with-exceptt-monad-on-the-bottom-of-monadic-stack", "title": "throwE and catchE with ExceptT monad on the bottom of monadic stack", "body": "<p>Say I have a monadic stack like this:</p>\n\n<pre><code>import Control.Monad.Trans.Reader\nimport Control.Monad.Trans.Except\nimport Control.Monad.Trans\n\ntype MyMonad = ReaderT Env (ExceptT String IO) -- Env is irrelevant\n</code></pre>\n\n<p>And a function (simplified, but the idea holds):</p>\n\n<pre><code>f :: Integer -&gt; MyMonad Integer\nf 42 = lift $ throwE \"42 is an ILLEGAL number\"\nf n = return n\n</code></pre>\n\n<p>What I now want to do is call <code>f</code> from another function, but catch the thrown exception if it occurs and somehow handle it (for instance, throw another exception but with the message changed). I'm having a hard time figuring out what kind of lift operations should be done here for it to be done properly. I tried something like this:</p>\n\n<pre><code>g n = do\n  x &lt;- (f n) `catchE'` (\\_ -&gt; lift $ throwE \"nope, still illegal\")\n  return x\nwhere catchE' - lift . catchE\n</code></pre>\n\n<p>but it obviously won't work because <code>catchE'</code> takes something in the <code>ExceptT</code> monad, not <code>MyMonad</code>. Can it be done easily? Perhaps changing the structure of the monad stack could help?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1556298124, "post_id": 55872091, "comment_id": 98404133, "body": "You probably need to install <code>matrix</code>, so <code>cabal install matrix</code>."}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1556301258, "post_id": 55872091, "comment_id": 98405315, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/7265550/haskell-could-not-find-module-system\">Haskell Could not find module `System&#39;</a>"}], "owner": {"reputation": 23, "user_id": 9305736, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a15518b9853962021c68f917de266b1?s=128&d=identicon&r=PG&f=1", "display_name": "ssrvz", "link": "https://stackoverflow.com/users/9305736/ssrvz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 305, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1556298079, "creation_date": 1556298079, "question_id": 55872091, "link": "https://stackoverflow.com/questions/55872091/i-can-t-import-data-matrix", "title": "I can t import Data.Matrix", "body": "<p>I am trying to import Data.Matrix and I am getting this error:</p>\n\n<p>Could not find module `Data.Matrix'\n    Perhaps you meant Data.Ratio (from base-4.12.0.0)\n    Use -v to see a list of the files searched for.\n   |\n10 | import Data.Matrix</p>\n\n<p>I don't know if I should install it or something like this and if I should do it, then how?</p>\n"}, {"tags": ["javascript", "sqlite", "haskell"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1556289879, "post_id": 55869718, "comment_id": 98399943, "body": "It&#39;s not missing from the tutorial. How to communicate between Haskell and JavaScript is literally in the next paragraph after the code you&#39;re quoting here on the <a href=\"https://github.com/lettier/webviewhs\" rel=\"nofollow noreferrer\">github page</a>"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1556289958, "post_id": 55869718, "comment_id": 98399983, "body": "You should also take a look at the examples: <a href=\"https://github.com/lettier/webviewhs/tree/master/examples\" rel=\"nofollow noreferrer\">github.com/lettier/webviewhs/tree/master/examples</a>"}, {"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1556295294, "post_id": 55869718, "comment_id": 98402817, "body": "@Cubic no its not. That does not create a window nor gets anything back. Sorry that I just don&#39;t see it here. Think my question is quite clear and that specific example is not available unfortunately."}, {"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "reply_to_user": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1556295415, "post_id": 55869718, "comment_id": 98402879, "body": "@Michael Litchard: wouldn&#39;t have posted the question if I didn&#39;t try and tried all examples. It is a very specific question and documentation other than the examples on github are very limited to non-existent."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1556324400, "post_id": 55869718, "comment_id": 98412178, "body": "@Madderote Actually there is plenty of documentation at <a href=\"https://lettier.github.io/webviewhs/\" rel=\"nofollow noreferrer\">lettier.github.io/webviewhs</a>"}], "answers": [{"comments": [{"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "edited": false, "score": 0, "creation_date": 1556528799, "post_id": 55872312, "comment_id": 98456301, "body": "Thanks Cubic. Answered with exactly what I needed to know. Now I can comfortably concentrate on learning Haskell again 8) By the way: thanks for the comments on the development. Have to say though that I actually like this one the best when it comes to Haskell GUIs."}], "tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 1, "last_activity_date": 1556299145, "creation_date": 1556299145, "answer_id": 55872312, "question_id": 55869718, "link": "https://stackoverflow.com/questions/55869718/haskell-webviewhs-getelementbyid-from-a-webpage/55872312#55872312", "title": "Haskell Webviewhs getElementById from a webpage", "body": "<p>As the <a href=\"https://github.com/lettier/webviewhs\" rel=\"nofollow noreferrer\">github page</a> shows, you can receive data from JS with a callback, and execute arbitrary JS in the window from Haskell. This is enough to do any sort of communication you might want, here's an example that that executes some Haskell on a button press and then shows the result in the webpage:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE OverloadedStrings, QuasiQuotes #-}\nmodule Main where\n\nimport System.Directory(getCurrentDirectory)\nimport Text.Printf\nimport Control.Monad(void)\nimport Language.Javascript.JMacro\nimport qualified Graphics.UI.Webviewhs as WHS\nimport qualified Data.Text as T\n\nwindowCallback window = do\n  return True\n\nhandleJSRequest window request = void . WHS.runJavaScript window $ [jmacro|\n  show_response `(printf \"'Got response: %s'\" request :: String)`\n  |]\n\nmain :: IO ()\nmain = void $ do\n  dir &lt;- getCurrentDirectory\n  WHS.withWindowLoop\n    WHS.WindowParams\n      { WHS.windowParamsTitle = \"Test\"\n      , WHS.windowParamsUri = T.pack $ printf \"file://%s/example.html\" dir\n      , WHS.windowParamsWidth = 800\n      , WHS.windowParamsHeight = 600\n      , WHS.windowParamsResizable = True\n      , WHS.windowParamsDebuggable = True\n      }\n    handleJSRequest\n    windowCallback\n</code></pre>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Example&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      function show_response(response) {\n        document.getElementById('response').innerHTML = response;\n      }\n      function submit() {\n        var value = document.getElementById('textbox').value;\n        window.external.invoke(value)\n      }\n    &lt;/script&gt;\n    &lt;input type=\"text\" id=\"textbox\"/&gt;\n    &lt;input value=\"say hello\" type=\"button\" onclick=\"submit()\"/&gt;\n    &lt;p id=\"response\"&gt;&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<hr>\n\n<p>You should note though that the haskell webview library has only 2 commits, the last of which was more than 7 months ago, so it's not exactly being actively developed at the moment.</p>\n"}], "owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 55872312, "answer_count": 1, "score": -2, "last_activity_date": 1556299145, "creation_date": 1556288896, "question_id": 55869718, "link": "https://stackoverflow.com/questions/55869718/haskell-webviewhs-getelementbyid-from-a-webpage", "title": "Haskell Webviewhs getElementById from a webpage", "body": "<p>Still most potential for a GUI to Haskell for me, but missing some essential info in the examples, being a noob Haskeller. Assuming one of the examples: </p>\n\n<pre><code>{-\n  webviewhs\n  (C) 2018 David Lettier\n  lettier.com\n-}\n\n{-# LANGUAGE\n    OverloadedStrings\n#-}\n\nimport qualified Graphics.UI.Webviewhs as WHS\n\nmain :: IO ()\nmain =\n  WHS.createWindowAndBlock\n    WHS.WindowParams\n      { WHS.windowParamsTitle      = \"webviewhs - How do I create a window and have it run itself?\"\n        -- This could be a localhost URL to your single-page application (SPA).\n      , WHS.windowParamsUri        = \"https://lettier.github.com\"\n      , WHS.windowParamsWidth      = 800\n      , WHS.windowParamsHeight     = 600\n      , WHS.windowParamsResizable  = True\n      , WHS.windowParamsDebuggable = True\n      }\n</code></pre>\n\n<p>This creates a window in which I can load a custom webpage. Assuming this webpage has a <code>&lt;input type=\"text\" id=\"mytext\"&gt;</code> and there's a button next to it. Not that it matters but <code>&lt;button type=\"submit\" id=\"sendtohaskell\"&gt;</code>. How would I go about getting the info in the textfield to Haskell by pressing the button? There's no example like that in the tutorial. For me it is the missing link to get info from a webapp, processing it in Haskell and returning it to eg. SQLite.</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 7, "creation_date": 1556268473, "post_id": 55863927, "comment_id": 98388123, "body": "I&#39;m really not sure what you&#39;re asking here. I don&#39;t see different &quot;forms&quot; of recursion here - whatever that would mean - they&#39;re all just <code>if</code> statements which recurse in one case and otherwise calculate a result directly. (And all imo would be more readable with guards rather than an <code>if</code> statement.)"}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1556272885, "post_id": 55863927, "comment_id": 98390498, "body": "All iteration is recursion in Haskell. Linear vs tree recursion is a feature of the funtion in question, and can be decided even at a syntactic level. Tail recursion is an implementation question, for which I do not believe GHC provides any guarantees, though it will often do so if given suitable input. Beyond that, I am also unsure what you&#39;re asking."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 1, "creation_date": 1556279415, "post_id": 55863927, "comment_id": 98393861, "body": "@moonGoose Tail-call <i>optimization</i> is a implementation question; <code>f1</code> is tail-recursive no matter how the function is evaluated."}, {"owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "edited": false, "score": 0, "creation_date": 1556285837, "post_id": 55863927, "comment_id": 98397607, "body": "@Napkin: I&#39;d call those different <i>recursion schemes</i>. And is there a strategy for picking a recursion scheme? Isn&#39;t this sort of like asking if there&#39;s a strategy for problem solving in general?"}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 2, "last_activity_date": 1556282060, "creation_date": 1556282060, "answer_id": 55867778, "question_id": 55863927, "link": "https://stackoverflow.com/questions/55863927/understanding-different-forms-of-recursion/55867778#55867778", "title": "Understanding different forms of recursion", "body": "<p>The strategy is to look at how the return value of each recursive call is used:</p>\n\n<ul>\n<li>In <code>f1</code>, the return value is itself returned immediately</li>\n<li>In <code>f2</code>, the return value of a <em>single</em> recursive call is used to compute the return value of the original call.</li>\n<li>In <code>f3</code> and <code>f4</code>, the return values of <em>multiple</em> recursive calls are used to compute the return value of the original call.</li>\n</ul>\n\n<p>(The fact that you need to make a recursive call to <code>f3</code> in order to compute an argument for <em>another</em> recursive call doesn't, I think, affect any classification you are asked to make.)</p>\n"}], "owner": {"reputation": 13, "user_id": 11394265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fec5c8d01e84fe7b81d2840e77863fd?s=128&d=identicon&r=PG&f=1", "display_name": "Napkin", "link": "https://stackoverflow.com/users/11394265/napkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1556282060, "creation_date": 1556268276, "last_edit_date": 1556278649, "question_id": 55863927, "link": "https://stackoverflow.com/questions/55863927/understanding-different-forms-of-recursion", "title": "Understanding different forms of recursion", "body": "<p>I am trying to practice some recursive functions in haskell. The following random functions show some different forms of recursions and iterations. I have problems understanding which form of recursion or iteration is connected to a function. I know the recursion forms tail recursion, linear recursion and tree recursion and the regular iteration. Is there any strategy to assign one of the four different forms i know every function?</p>\n\n<pre><code>f1 x y z = if x &gt; y then f1 (x+2) (y-1) z else y\n\nf2 x y z = if z /= 0 then y + x + f2 (x-1) (y-1) (z-2) else 1\n\nf3 x y z = if y &lt; 0 then True\nelse (f3 (f3 (x-2) (y-4) (z-6)) (4*y) (z-2)) + (f3 6 (y-2) (z*2))\n\nf4 x y z = if z &gt; 0 then (f4 (x-y) (y+1) (x-z)) + (f4 2 x z) else y+x- \n(2*z)\n</code></pre>\n"}, {"tags": ["haskell", "coq", "coq-extraction"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1556283458, "post_id": 55868122, "comment_id": 98396173, "body": "Can you really not, for example, use <code>Prop</code> information to show that a case you&#39;ve reached is impossible when constructing a <code>Type</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1556284196, "post_id": 55868122, "comment_id": 98396591, "body": "@luqui I can&#39;t recall, but I think Coq indeed does an exception for inductive types having zero or one trivial constructors, since they carry no &quot;data&quot;. A quick experiment seems to confirm this."}, {"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 0, "creation_date": 1556286327, "post_id": 55868122, "comment_id": 98397951, "body": "I&#39;m still a bit confused, does it mean that <code>div_2_even_number</code> can <b>not</b> be proved? is there any way to define (and extract) <code>div_2_any_number</code>?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 0, "creation_date": 1556289729, "post_id": 55868122, "comment_id": 98399861, "body": "@OrenIshShalom how is <code>Nat.Even</code> defined?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1556289822, "post_id": 55868122, "comment_id": 98399917, "body": "<code>div_2_even_number</code> can be proved, but not directly from the <code>Nat.Even</code> assumption. Think of what it would extract to: if you erase the proofs (<code>Nat.Even</code> and <code>n = p + p</code>) you are left with a function <code>nat -&gt; nat</code>, which should map even numbers to their halves, and which will never be applied to odd numbers (because they do not have proofs of <code>Nat.Even</code> in the source language). Therefore <code>div_2_even_number</code> has to do at least as much computation as a division by two to construct the result <code>p : nat</code>, plus potentially additional work to construct the proof term for <code>n = p + p</code>."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 2, "creation_date": 1556289940, "post_id": 55868122, "comment_id": 98399974, "body": "@chi is correct, if the expected type is of sort <code>Type</code>, you can only destruct proof terms which are noninformative, and that allows you to destruct proofs of <code>False</code> in &quot;impossible cases&quot;."}, {"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1556290687, "post_id": 55868122, "comment_id": 98400398, "body": "@luqui here it is: <code>Nat.Even = fun n : nat =&gt; exists m : nat, n = 2 * m      : nat -&gt; Prop</code>"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 6, "last_activity_date": 1556284344, "last_edit_date": 1556284344, "creation_date": 1556283347, "answer_id": 55868122, "question_id": 55862398, "link": "https://stackoverflow.com/questions/55862398/proofs-role-in-coq-extractions/55868122#55868122", "title": "Proofs&#39; role in Coq extractions", "body": "<p>You are working with types in different sorts.</p>\n\n<pre><code>&gt; Check (Nat.Even 8).\nNat.Even 8\n     : Prop\n\n&gt; Check {p:nat | 8=p+p}.\n{p : nat | 8 = p + p}\n     : Set\n</code></pre>\n\n<p>A feature of the Coq type system is that you can not eliminate a value whose type is in <code>Prop</code> to obtain something whose type is not in <code>Prop</code> (roughly -- some exception is done by Coq for <code>Prop</code> types which carry no information, like <code>True</code> and <code>False</code>, but we are not in that case). Roughly put you can not use a proof of a proposition for anything but to prove another proposition.</p>\n\n<p>This limitation is unfortunately required to allow <code>Prop</code> to be impredicative (we want <code>forall P: Prop, P-&gt;P</code> to be a type in sort <code>Prop</code>) and to be consistent with the law of excluded middle. We can not have everything or we meet Berardi's paradox.</p>\n"}, {"tags": [], "owner": {"reputation": 20092, "user_id": 1633770, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/756c8a42111c3cb893e90cd17d115a36?s=128&d=identicon&r=PG", "display_name": "Arthur Azevedo De Amorim", "link": "https://stackoverflow.com/users/1633770/arthur-azevedo-de-amorim"}, "is_accepted": true, "score": 8, "last_activity_date": 1556292322, "creation_date": 1556292322, "answer_id": 55870681, "question_id": 55862398, "link": "https://stackoverflow.com/questions/55862398/proofs-role-in-coq-extractions/55870681#55870681", "title": "Proofs&#39; role in Coq extractions", "body": "<p>Though what chi said is correct, in this case you can actually extract the witness <code>p</code> from the existence proof.  When you have a boolean predicate <code>P : nat -&gt; bool</code>, if <code>exists p, P p = true</code>, you can compute some <code>p</code> that satisfies the predicate by running the following function from 0:</p>\n\n<pre><code>find p := if P p then p else find (S p)\n</code></pre>\n\n<p>You cannot write this function directly in Coq, but it is possible to do so by crafting a special inductive proposition.  This pattern is implemented in the <a href=\"https://math-comp.github.io/math-comp/htmldoc/mathcomp.ssreflect.choice.html\" rel=\"noreferrer\">choice module</a> of the mathematical components library:</p>\n\n<pre><code>From mathcomp Require Import ssreflect ssrfun ssrbool ssrnat eqtype choice.\n\n(* == is the boolean equality test *)\nDefinition even n := exists p, (n == 2 * p) = true.\n\nDefinition div_2_even_number n (nP : even n) : {p | (n == 2 * p) = true} :=\n  Sub (xchoose nP) (xchooseP nP).\n</code></pre>\n\n<p>The <code>xchoose : (exists n, P n = true) -&gt; nat</code> function performs the above search, and <code>xchooseP</code> shows that the its result satisfies the boolean predicate. (The actual types are more general than this, but when instantiated to <code>nat</code> they yield this signature.)  I have used the boolean equality operator to simplify the code, but it would have been possible to use <code>=</code> instead.</p>\n\n<p>That being said, if you care about running your code, programming in this fashion is terribly inefficient: you need to perform <code>n / 2</code> <code>nat</code> comparisons to test divide <code>n</code>.  It is much better to write a simply typed version of the division function:</p>\n\n<pre><code>Fixpoint div2 n :=\n  match n with\n  | 0 | 1 =&gt; 0\n  | S (S n) =&gt; S (div2 n)\n  end.\n</code></pre>\n"}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 1, "accepted_answer_id": 55870681, "answer_count": 2, "score": 7, "last_activity_date": 1560507168, "creation_date": 1556262163, "last_edit_date": 1560507168, "question_id": 55862398, "link": "https://stackoverflow.com/questions/55862398/proofs-role-in-coq-extractions", "title": "Proofs&#39; role in Coq extractions", "body": "<p>I'm trying to understand what is the role of proofs in Coq extractions.\nI have the following example of floor integer division by two taken from <a href=\"https://www.springer.com/gp/book/9783540208549\" rel=\"noreferrer\">here</a>. For my first try I used the <code>Admitted</code> keyword:</p>\n\n<pre><code>(*********************)\n(* div_2_even_number *)\n(*********************)\nDefinition div_2_even_number: forall n,\n  (Nat.Even n) -&gt; {p:nat | n=p+p}.\nProof.\nAdmitted.\n\n(*************)\n(* test_even *)\n(*************)\nDefinition test_even: forall n,\n  {Nat.Even n}+{Nat.Even (pred n)}.\nProof.\nAdmitted.\n\n(********************)\n(* div_2_any_number *)\n(********************)\nDefinition div_2_any_number (n:nat):\n  {p:nat | n = p+p}+{p:nat | (pred n) = p+p} :=\n  match (test_even n) with\n  | left h =&gt; inl _ (div_2_even_number n h)\n  | right h' =&gt; inr _ (div_2_even_number (pred n) h')\n  end.\n\n(***************************)\n(* Extract to Haskell file *)\n(***************************)\nExtraction \"/home/oren/some_file.hs\" div_2_any_number.\n</code></pre>\n\n<p>When I examine the resulting Haskell file I see that it is indeed missing:</p>\n\n<pre><code>div_2_even_number :: Prelude.Integer -&gt; Prelude.Integer\ndiv_2_even_number =\n  Prelude.error \"AXIOM TO BE REALIZED\"\n\ntest_even :: Prelude.Integer -&gt; Prelude.Bool\ntest_even =\n  Prelude.error \"AXIOM TO BE REALIZED\"\n\ndiv_2_any_number :: Prelude.Integer -&gt; Prelude.Either Prelude.Integer\n                    Prelude.Integer\ndiv_2_any_number n =\n  case test_even n of {\n   Prelude.True -&gt; Prelude.Left (div_2_even_number n);\n   Prelude.False -&gt; Prelude.Right (div_2_even_number (pred n))}\n</code></pre>\n\n<p>So I figured OK, let's prove <code>div_2_even_number</code>:</p>\n\n<pre><code>(*********************)\n(* div_2_even_number *)\n(*********************)\nDefinition div_2_even_number: forall n,\n  (Nat.Even n) -&gt; {p:nat | n=p+p}.\nProof.\n  intros n0 H.\n  unfold Nat.Even in H.\n  destruct H as [m0].\n  exists m0.\nQed.\n</code></pre>\n\n<p>But I get the following error:</p>\n\n<pre><code>Error: Case analysis on sort Set is not allowed for inductive definition ex.\n</code></pre>\n\n<p>What's going on here? I'm obviously missing something here.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1556237418, "post_id": 55859071, "comment_id": 98379317, "body": "As far as I can see, you don&#39;t need to have <code>NoteS</code> and <code>NoteF</code> as separate types. With something like <code>data Note = Sharp BaseNote | Flat BaseNote</code>, you would already be able to distinguish sharps and flats through the <code>Sharp</code> and <code>Flat</code> constructors while writing the <code>Eq</code> instance. (Note that there may well be a better encoding than the one I have just suggested.)"}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1556237558, "post_id": 55859071, "comment_id": 98379338, "body": "Indeed - for <code>Eq</code> this would work but then I would have to really calculate for intervals instead of just using <code>Ord</code> for intervals. My idea here is like <code>NoteS D + 5</code> to get the perfect fifth. Okay I would have to use halfsteps but for the sake of this question it should not matter."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1556238691, "post_id": 55859071, "comment_id": 98379542, "body": "You won&#39;t really be able to use <code>+</code>, as that&#39;s about the only operation from the <code>Num</code> typeclass that makes sense for <code>Notes</code>."}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556238975, "post_id": 55859071, "comment_id": 98379600, "body": "@chepner You are right! Maybe using <code>Enum</code> is more appropriate here."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1556239503, "post_id": 55859071, "comment_id": 98379706, "body": "I think I see what you want (to run through the chromatic scale using different picks of note names), and it does make sense, but I&#39;m not sure achieving it in this way would be worth the trouble. The main thing that causes me some alarm is having three separate note types with no clear indication of which is the canonical representation of notes in your model. Besides making the model harder to understand, that could easily lead to a tangle of conversion functions all around, which might be more annoying to deal with than the upfront investment in writing some extra code for the instances."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1556298937, "post_id": 55859071, "comment_id": 98404451, "body": "I don&#39;t think it makes much musical sense to use separate constructors for sharps, flats (and naturals). These are all just notes on a twelve-tone scale."}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1556305643, "post_id": 55859071, "comment_id": 98407087, "body": "In the end I went with @duplode &#39;s first idea + implementing <code>Enum</code> first. With that, <code>Eq</code> instance is a 3 liner and I can type in ghci: <code>take 12 [(Natural C),(Natural G)..]</code> and voil&#224; - I have the circle of fifths: <code>[Natural C,Natural G,Natural D,Natural A,Natural E,Natural B,Sharp F,Sharp C,Sharp G,Sharp D,Sharp A,Natural F]</code> Isn&#39;t that pretty? :)"}], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1556251437, "post_id": 55859402, "comment_id": 98381814, "body": "<code>offset</code> is nice because double sharps flats do occur, on occasion."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1556240132, "creation_date": 1556240132, "answer_id": 55859402, "question_id": 55859071, "link": "https://stackoverflow.com/questions/55859071/algebraic-data-type-intended-name-collision-how-to/55859402#55859402", "title": "Algebraic data type (intended) name collision.. how to?", "body": "<p>If you must keep the data representation as you have it there, the standard namespacing mechanism in Haskell is modules. So you could write</p>\n\n<pre><code>module Sharps where data NoteS = ...\n\nmodule Flats where data NoteF = ...\n\nmodule Main where\nimport Sharps as S\nimport Flats as F\n</code></pre>\n\n<p>(Of course, don't forget that for GHC, each module must go in its own file with an appropriate filename.) Then, in <code>Main</code>, you could refer to <code>Sharps.C</code> or <code>S.C</code> to get the <code>NoteS</code> constructor, and <code>Flats.C</code> or <code>F.C</code> to get the <code>NoteF</code> constructor.</p>\n\n<p>But may I propose a different solution? How about naming the natural notes, and simply having a type that records how sharp or flat you've gone from there? After all, you're going to want to handle double sharps and double flats eventually, I'm sure. So:</p>\n\n<pre><code>data Natural = A | B | C | D | E | F | G\ndata Note = Note\n    { natural :: Natural\n    , offset :: Int -- positive for sharp, negative for flat, say\n    }\n</code></pre>\n\n<p>(There are many other data representation choices you could make as well.)</p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556255388, "post_id": 55859533, "comment_id": 98382678, "body": "Nice. Plus this lets you reuse the derived instances for a bunch of stuff (<code>Eq</code>, <code>Ord</code>, <code>Bounded</code>, <code>Enum</code> all come nice and clean). However, if you ever want to display notes to musicians (as opposed to other machines) you do sometimes want to distinguish between the sharp and flat versions; e.g. a musician would holler if your pretty-printed F major scale was <code>F G A A# C...</code> instead of <code>F G A Bb C...</code>."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 5, "last_activity_date": 1556241240, "creation_date": 1556241240, "answer_id": 55859533, "question_id": 55859071, "link": "https://stackoverflow.com/questions/55859071/algebraic-data-type-intended-name-collision-how-to/55859533#55859533", "title": "Algebraic data type (intended) name collision.. how to?", "body": "<p>Another idea is to use a pattern synonym. You can have a single type representing notes, and synonyms to rename some of them.</p>\n\n<p><a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms\" rel=\"noreferrer\">https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms</a></p>\n\n<pre><code>{-# LANGUAGE PatternSynonym #-}\n\ndata Note = C | SC | D | SD | E | F | SF | G | SG | B\n\npattern FD = SC\npattern FE = SD\npattern FG = SF\npattern FB = SG\n</code></pre>\n"}], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 55859402, "answer_count": 2, "score": 0, "last_activity_date": 1556285507, "creation_date": 1556236787, "last_edit_date": 1556285507, "question_id": 55859071, "link": "https://stackoverflow.com/questions/55859071/algebraic-data-type-intended-name-collision-how-to", "title": "Algebraic data type (intended) name collision.. how to?", "body": "<p>I had the idea to implement my own little music theory module in Haskell.</p>\n\n<p>Starting with notes (<code>Note</code>) makes sense and right there and then I ran into this nasty syntactic problem, I have no idea how real Haskellers handle it.</p>\n\n<pre><code>data Note = Sharp NoteS | Flat NoteF deriving (Show)\n\ndata NoteS = \n    C | SC | D | SD | E | F | SF | G | SG | B\n    deriving (Ord,Show,Eq)\n\ndata NoteF = \n    C | FD | D | FE | E | F | FG | G | FB | B\n    deriving (Ord,Show,Eq)\n\ninstance Eq Note where\n    (==) (NoteS n1) (NoteS n2) = n1 == n2\n    (==) (NoteF n1) (NoteF n2) = n1 == n2\n    (==) (NoteS n1) (NoteF n2) = ???\n    (==) (NoteF n1) (NoteS n2) = ???\n    ...\n\nflatToSharp :: Note -&gt; NoteS\nsharpToFlat :: Note -&gt; NoteF\n</code></pre>\n\n<p>As most might know, a sharp C and a flat D are synonymous in general but sometimes it is prefered to use one or the other depending on context. So I hoped to use the fact that both <code>NoteS</code> and <code>NoteF</code> are instances of <code>Ord</code> (e.g. for interval calculation). But in both representations, the plain notes (C,D,E,F...) have the same names in both types.</p>\n\n<p>Now I could think of ways to \"hack\" around this syntactic problem. But it would either have ugly syntactic implications or run time implications (e.g. use Strings instead of a types, lots of testing and error checking,...).</p>\n\n<p>So here is my question to Haskell professionals... How would I do it in the spirit of my idea without too many concessions to this \"namespace\" problem of Haskell?</p>\n\n<p>I tried <code>{-# LANGUAGE DuplicateRecordFields #-}</code> but it does not help with unions, obviously.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 7130, "user_id": 10239789, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YeHJm.png?s=128&g=1", "display_name": "TrebledJ", "link": "https://stackoverflow.com/users/10239789/trebledj"}, "edited": false, "score": 4, "creation_date": 1556219933, "post_id": 55856229, "comment_id": 98373868, "body": "Haskell isn&#39;t Python. Stripping away scope seems like an ungood idea..."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1556220075, "post_id": 55856229, "comment_id": 98373926, "body": "Are you perhaps looking for <code>IORef</code> or <code>STRef</code>?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 3, "creation_date": 1556221101, "post_id": 55856229, "comment_id": 98374416, "body": "Looking at your pseudocode: What if the <code>else</code> branch of the <code>if</code> is taken? Then <code>val1</code> and <code>val2</code> haven&#39;t been defined - how would you <code>show</code> them?"}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1556235374, "post_id": 55856229, "comment_id": 98378946, "body": "Note that the point about the <code>else</code> branch is exactly why you should <i>want</i> to do this by returning values, not trying to bind variables inside the control structure and use them outside. The type system then <i>ensures</i> that you return something of the right type on every branch of your control structure (and will ensue that you continue to do so when you change this code in future)."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1556221807, "creation_date": 1556221807, "answer_id": 55856702, "question_id": 55856229, "link": "https://stackoverflow.com/questions/55856229/save-values-beyond-control-structures/55856702#55856702", "title": "Save values beyond control structures", "body": "<p>Perhaps you want something like this. Remember that <code>&lt;-</code> is binding, not assignment, so you can't redefine a variable.</p>\n\n<pre><code>foo = do   \n  (val1, val2) &lt;- if True then do\n      val1 &lt;- return 3\n      (...)\n      val2 &lt;- return 6\n      (...)\n      return (val1, val2) \n    else\n      return (2, 0)\n\n  _ &lt;- putStrLn $ show(val1) ++ show(val2)\n\n  return ()\n</code></pre>\n\n<p>If you absolutely must have mutating variables, then you need either something like <code>IORef</code>, <code>STRef</code> or perhaps a <code>State</code> monad or <code>StateT</code> transformer. Hard to tell with the information the OP posted.</p>\n"}, {"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 6, "last_activity_date": 1556221830, "creation_date": 1556221830, "answer_id": 55856708, "question_id": 55856229, "link": "https://stackoverflow.com/questions/55856229/save-values-beyond-control-structures/55856708#55856708", "title": "Save values beyond control structures", "body": "<p>You could use the <a href=\"http://hackage.haskell.org/package/transformers/docs/Control-Monad-Trans-State.html\" rel=\"noreferrer\">State monad</a>:</p>\n\n<pre><code>import Control.Monad.Trans.State\n\ndata MyState = MyState { val1 :: Int, val2 :: Int } deriving (Eq, Show)\n\nfoo :: State MyState String\nfoo = do\n  put $ MyState { val1 = 2, val2 = 0 }\n  if True\n    then do\n      modify (\\s -&gt; s { val1 = 3 })\n      -- ...\n      modify (\\s -&gt; s { val2 = 6 })\n    else\n      return ()\n  MyState v1 v2 &lt;- get\n  return $ show v1 ++ show v2\n</code></pre>\n\n<p>GHCi:</p>\n\n<pre><code>*Q55856229&gt; runState foo $ MyState 0 0\n(\"36\",MyState {val1 = 3, val2 = 6})\n</code></pre>\n"}], "owner": {"reputation": 30, "user_id": 5349285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7f6SV.jpg?s=128&g=1", "display_name": "Thomas Meyer", "link": "https://stackoverflow.com/users/5349285/thomas-meyer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1556277887, "creation_date": 1556219772, "last_edit_date": 1556277887, "question_id": 55856229, "link": "https://stackoverflow.com/questions/55856229/save-values-beyond-control-structures", "title": "Save values beyond control structures", "body": "<p>Question: is there a way to \"store\" values beyond control structures</p>\n\n<p>Disclaimer: the following code framework is without any true sense -> it's only for better understanding the question...</p>\n\n<p>The control structure could do \"anything\" -> that's the reason why I don't want to return  values like the structure would be a normal function...</p>\n\n<p>-> in this case you also can't just call the foo function recursive with changed values cause the foo function would have to jump then into the control structure where it left... etc...</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foo = do\n  val1 &lt;- return 2\n  val2 &lt;- return 0\n\n  _ &lt;- if True then do\n      val1 &lt;- return 3\n      (...)\n      val2 &lt;- return 6\n      (...)\n      return () \n    else\n      return ()\n\n  _ &lt;- putStrLn $ show(val1) ++ show(val2)\n\n  return ()\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1556213599, "post_id": 55854726, "comment_id": 98370987, "body": "@4castle Nice! Sadly, won&#39;t work if the condition is more arbitrary..."}, {"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1556213734, "post_id": 55854726, "comment_id": 98371049, "body": "@4castle &#39;Twas my bad, I provided a too simple example... Maybe my edited version of my Q will help"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556214051, "post_id": 55854726, "comment_id": 98371176, "body": "<code>foldMap (Any.) [(&#39;a&#39;==), isDigit, (`elem` [&#39;d&#39;..&#39;g&#39;])]</code> isn&#39;t too bad, although it doesn&#39;t have exactly the same type."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1556222764, "post_id": 55854726, "comment_id": 98375142, "body": "@DanielWagner Aren&#39;t you just missing a call to <code>getAny</code> to fix that, though? <code>getAny . foldMap ...</code>"}], "answers": [{"tags": [], "owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "is_accepted": false, "score": 8, "last_activity_date": 1556213944, "creation_date": 1556213944, "answer_id": 55854881, "question_id": 55854726, "link": "https://stackoverflow.com/questions/55854726/how-to-nicely-denote-the-alternative-of-three-conditions/55854881#55854881", "title": "How to nicely denote the alternative of three conditions?", "body": "<p>You can use <code>sequence</code> to convert a <code>[a -&gt; Bool]</code> to a <code>a -&gt; [Bool]</code>. Then you can use <code>or</code> to combine that <code>[Bool]</code> value.</p>\n\n<pre><code>isACOrDigitOrDG = or . sequence\n    [ (== 'a')\n    , isDigit\n    , (`elem` ['d'..'g'])\n    ]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 4, "creation_date": 1556214174, "post_id": 55854925, "comment_id": 98371235, "body": "Note that you have to work a bit harder if you want this (or yours) to be short-circuiting: <a href=\"http://hackage.haskell.org/package/cond-0.4.1.1/docs/Control-Conditional.html#v:-60--124--124--62-\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/cond-0.4.1.1/docs/&hellip;</a>"}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1556214355, "post_id": 55854925, "comment_id": 98371328, "body": "The advantage of lifting <code>(||)</code> over sequence- or monoid-based solutions, which are also nice, is that you can mix <code>||</code> and <code>&amp;&amp;</code> with this approach if you need to."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1556215004, "post_id": 55854925, "comment_id": 98371617, "body": "I thought I understood how to use liftA2 on boolean operators, but you have shown me there are some subtleties I didn&#39;t realize yet. Cool solution."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1556284549, "post_id": 55854925, "comment_id": 98396844, "body": "@ReinHenrichs No extra care is needed. The package you linked to takes extra care because it is trying to generalize over arbitrary monads; but the reader family of monads in particular is already sufficiently lazy in their &quot;side effects&quot;. You can see it&#39;s so for yourself: <code>liftA2 (||) (const True) undefined undefined</code> returns <code>True</code> as necessary with no extra work."}], "tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": false, "score": 8, "last_activity_date": 1556214085, "creation_date": 1556214085, "answer_id": 55854925, "question_id": 55854726, "link": "https://stackoverflow.com/questions/55854726/how-to-nicely-denote-the-alternative-of-three-conditions/55854925#55854925", "title": "How to nicely denote the alternative of three conditions?", "body": "<p>You can lift the <code>(||)</code> operator:</p>\n\n<pre><code>(&lt;||&gt;) = liftA2 (||)\n\n&gt; :t (== 'a') &lt;||&gt; isDigit &lt;||&gt; (`elem` ['d'..'g'])\n(== 'a') &lt;||&gt; isDigit &lt;||&gt; (`elem` ['d'..'g']) :: Char -&gt; Bool\n\n&gt; (== 'a') &lt;||&gt; isDigit &lt;||&gt; (`elem` ['d'..'g']) $ 'a'\nTrue\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "edited": false, "score": 0, "creation_date": 1556226005, "post_id": 55857164, "comment_id": 98376354, "body": "<code>Depending on your definition of &quot;nice&quot;</code> - Honestly, I don&#39;t have any such definition. I&#39;m a newbie to Haskell, I&#39;d sooner ask you what is the definition of &quot;nice&quot;. But I note that, I suppose, Haskellers like point free and dislike function application when not necessary, so I <i>thought</i> that <code>c == &#39;a&#39; || isDigit c || c </code>elem` [&#39;d&#39;..&#39;g&#39;]` would <i>probably</i> not be considered nice by experienced Haskellers, hence my Q."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "edited": false, "score": 0, "creation_date": 1556235318, "post_id": 55857164, "comment_id": 98378938, "body": "It was somewhat tongue-in-cheek, as it involves a bit of abstraction. I&#39;ll add some description of how <code>anyOf</code> gets built. (The point-free version is intentionally commented, as I&#39;m not sure if anyone would ever find that &quot;obvious&quot;.)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1556284708, "post_id": 55857164, "comment_id": 98396920, "body": "<code>anyOf fs c = any ($c) fs</code>. And then you can just inline it; <code>isACOrDigitOrDG c = any ($c) [...]</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556285055, "post_id": 55857164, "comment_id": 98397146, "body": "I distinctly remember use <code>($c)</code> when writing this up; I don&#39;t remember why I didn&#39;t include it. I think it got lost in the shuffle when I was trying to figure out if the OP wanted a point-free solution or not."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1556235666, "last_edit_date": 1556235666, "creation_date": 1556224161, "answer_id": 55857164, "question_id": 55854726, "link": "https://stackoverflow.com/questions/55854726/how-to-nicely-denote-the-alternative-of-three-conditions/55857164#55857164", "title": "How to nicely denote the alternative of three conditions?", "body": "<p>Depending on your definition of \"nice\", you could write</p>\n\n<pre><code>isACOrDigitOrDG :: Char -&gt; Bool\nisACOrDigitOrDG = anyOf [(== 'a'), isDigit, (`elem` ['d'..'g'])]\n   where anyOf fs c = or (fs &lt;*&gt; [c])\n      -- anyOf = (or .) . (. pure) . (&lt;*&gt;)\n</code></pre>\n\n<p><code>or :: [Bool] -&gt; Bool</code> is true if any value in its input is true. The applicative instance for lists says that <code>fs &lt;*&gt; xs</code> applies each function in <code>fs</code> to each value in <code>xs</code>, and collects the results in a single list (for our purposes here, the order doesn't matter). Since we only have one <code>Char</code>, we create a list so that <code>fs &lt;*&gt; [c]</code> applies each predicate to the input character. <code>or</code> then tells us if any of those applications succeeded.</p>\n\n<p>Honestly, though? For a fixed set of predicates, there's nothing wrong with </p>\n\n<pre><code>isACOrDigitOrDG c = c == 'a' || isDigit c || c `elem` ['d'..'g']\n</code></pre>\n\n<p>Point-free style can be hit-or-miss; sometimes it captures the <em>idea</em> of what you want to do better than a pointed defintion, other times it's just terse for the sake of terseness. I often write a function in both styles before deciding which one I'll want to read later.</p>\n\n<p>As a third option between the two, you might take advantage of a list comprehension:</p>\n\n<pre><code>isACOrDigitOrDG c = or [f c | f &lt;- tests]\n    where tests = [(== 'a')\n                  ,isDigit\n                  ,(`elem` ['d'..'g'])\n                  ]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": false, "score": 1, "last_activity_date": 1556294650, "creation_date": 1556294650, "answer_id": 55871278, "question_id": 55854726, "link": "https://stackoverflow.com/questions/55854726/how-to-nicely-denote-the-alternative-of-three-conditions/55871278#55871278", "title": "How to nicely denote the alternative of three conditions?", "body": "<p>Another version that is similar to the other answers and short circuiting: </p>\n\n<pre><code>isACOrDigitOrDG x = any ($x) [(=='a'), isDigit, (`elem` ['d'..'g'])]\n</code></pre>\n\n<p>or if you'd rather have the slightly ridiculous pointfree version:</p>\n\n<pre><code>isACOrDigitOrDG = flip any [(=='a'), isDigit, (`elem` ['d'..'g'])] . flip ($)\n</code></pre>\n\n<p>or even better, just give that a name and use it:</p>\n\n<pre><code>satisfies :: [a -&gt; Bool] -&gt; a -&gt; Bool\nsatisfies ps x = any ($x) ps\n\nisACOrDigitOrDG = satisfies [(=='a'), isDigit, (`elem` ['d'..'g'])] \n</code></pre>\n"}], "owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "answer_count": 4, "score": 0, "last_activity_date": 1556294650, "creation_date": 1556213341, "last_edit_date": 1556233539, "question_id": 55854726, "link": "https://stackoverflow.com/questions/55854726/how-to-nicely-denote-the-alternative-of-three-conditions", "title": "How to nicely denote the alternative of three conditions?", "body": "<p>Assume I have a character <code>c :: Char</code> . Now I want to see if it's equal to <code>a</code> or <code>isDigit</code>:</p>\n\n<pre><code>isAOrDigit = (||) &lt;$&gt; (=='a') &lt;*&gt; (isDigit)\n</code></pre>\n\n<p>So far so good. But now I want to see if it's equal to <code>a</code>, <code>isDigit</code> or is between <code>d</code> and <code>g</code>. Unfortunately, since <code>||</code> only accepts 2 arguments, I can't say <code>(||) &lt;$&gt; (=='a') &lt;*&gt; (isDigit) &lt;*&gt; (`elem`['d'..'g'])</code>.</p>\n\n<p>Is there any nice way to write this or do i have to fall back to this:</p>\n\n<pre><code>isACOrDigitOrDG c = c == 'a' || isDigit c || c `elem` ['d'..'g']\n</code></pre>\n\n<p>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1556213028, "post_id": 55854566, "comment_id": 98370729, "body": "Don&#39;t you just want <code>traverse</code>? (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/Data.Foldable.html#for_\" rel=\"nofollow noreferrer\">Literally</a>, <code>for_ = flip traverse</code>)."}, {"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556213421, "post_id": 55854566, "comment_id": 98370909, "body": "I may want to do that, but I also want to understand what&#39;s happening with the order of function application here."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1556214318, "post_id": 55854566, "comment_id": 98371309, "body": "How does (4) fail for you? It works just fine here."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1556562697, "post_id": 55854566, "comment_id": 98473263, "body": "very thorough investigation! case (4) succeeds though."}, {"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "edited": false, "score": 0, "creation_date": 1556570058, "post_id": 55854566, "comment_id": 98476167, "body": "Thank you, I&#39;ve added an update note on this."}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1556562627, "post_id": 55854825, "comment_id": 98473234, "body": "a side note, ($) actually binds the weakest: <code>*Main&gt; :i ($)</code> says <code>infixr 0 $</code> i.e. level 0, while the functional application (i.e. &quot;space&quot;) binds at the level 10."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 4, "last_activity_date": 1556213699, "creation_date": 1556213699, "answer_id": 55854825, "question_id": 55854566, "link": "https://stackoverflow.com/questions/55854566/changing-the-order-of-arguments-for-function-and-list-with-flip-in-haskell/55854825#55854825", "title": "Changing the order of arguments for function and list with flip in haskell", "body": "<p>Because that's how the <code>$</code> operator works. This operator is not part of Haskell syntax, but a regular user-defined operator, like any other. It's defined like this:</p>\n\n<pre><code>f $ x = f x\n</code></pre>\n\n<p>Therefore, if you write something like:</p>\n\n<pre><code>f a $ b\n</code></pre>\n\n<p>That is the same as:</p>\n\n<pre><code>f a b\n</code></pre>\n\n<p>But if you write something like:</p>\n\n<pre><code>f $ a b\n</code></pre>\n\n<p>That is the same as:</p>\n\n<pre><code>f (a b)\n</code></pre>\n\n<p>This is because function application <code>a b</code> (i.e. function <code>a</code> applied to argument <code>b</code>) has the highest precedence in Haskell, nothing can bind stronger than the function application, including the <code>$</code> operator.</p>\n\n<p>Therefore, your first attempt:</p>\n\n<pre><code>flip for_ $ (\\x -&gt; T.putStrLn $ T.pack $ show x ) [1..10] \n</code></pre>\n\n<p>Is really equivalent to:</p>\n\n<pre><code>flip for_ ( (\\x -&gt; T.putStrLn $ T.pack $ show x ) [1..10] )\n</code></pre>\n\n<p>Which is clearly not what you meant.</p>\n"}], "owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 55854825, "answer_count": 1, "score": 1, "last_activity_date": 1556570039, "creation_date": 1556212615, "last_edit_date": 1556570039, "question_id": 55854566, "link": "https://stackoverflow.com/questions/55854566/changing-the-order-of-arguments-for-function-and-list-with-flip-in-haskell", "title": "Changing the order of arguments for function and list with flip in haskell", "body": "<p>I have the following (from <a href=\"https://stackoverflow.com/a/55854047/1052117\">here</a>):</p>\n\n<pre><code>for_ [1..10] $ (\\x -&gt; T.putStrLn $ T.pack $ show x )\n</code></pre>\n\n<p>I'm trying to rewrite this in terms more like</p>\n\n<pre><code>applylike myfunction toList\n</code></pre>\n\n<p>rather than</p>\n\n<pre><code>applylike tolist myfunction\n</code></pre>\n\n<p>I understand the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:flip\" rel=\"nofollow noreferrer\">flip function can be employed to change argument order</a>:</p>\n\n<blockquote>\n<pre><code>flip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c\n</code></pre>\n  \n  <p>flip f takes its (first) two arguments in the reverse order of f.</p>\n\n<pre><code>&gt;&gt;&gt; flip (++) \"hello\" \"world\"\n\"worldhello\"\n</code></pre>\n</blockquote>\n\n<p>This works as my original:</p>\n\n<pre><code>import Data.Foldable (for_)\n\n:t flip\n-- 1\nfor_ [1..10] $ (\\x -&gt; T.putStrLn $ T.pack $ show x )\n-- success\n</code></pre>\n\n<p>But when I try to apply it directly, this fails:</p>\n\n<pre><code>-- 2\nflip for_ $ (\\x -&gt; T.putStrLn $ T.pack $ show x ) [1..10] \n-- fail\n</code></pre>\n\n<p>I notice, however, that if I remove the <code>$</code> operator which was required in (1), it succeeds:  </p>\n\n<pre><code>-- 3\nflip for_ (\\x -&gt; T.putStrLn $ T.pack $ show x ) [1..10] \n-- success\n</code></pre>\n\n<p>But I don't understand why that scans correctly.  When I remove the $ operator from the original non-flipped version (1), that also fails.</p>\n\n<pre><code>-- 4    \nfor_ [1..10] (\\x -&gt; T.putStrLn $ T.pack $ show x )\n-- fail\n</code></pre>\n\n<p>How are these being parsed that <code>$</code> is required in (1) and required not to be present in (3)?</p>\n\n<h2>Update</h2>\n\n<p>Apologies: <code>4</code> above does succeed.  I must have had a typo while investigating this, which certainly added to my confusion.  For future readers, <code>4</code> does not fail and the universe makes more sense, and both comments and the answer accepted below were very helpful in this investigation.</p>\n"}, {"tags": ["haskell", "monads", "io-monad", "do-notation"], "answers": [{"comments": [{"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "edited": false, "score": 0, "creation_date": 1556211180, "post_id": 55854047, "comment_id": 98369898, "body": "Thank you, and this is helpful, but when I change the return type of the lambda to be the same as the x that comes in as \\x as I do in the update 2 and just do the print as incidental rather than the return, I still get the same error.  I understand your for_ loop is correct, but why does my revised fmap not work like the function I am replacing up top?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "edited": false, "score": 0, "creation_date": 1556215511, "post_id": 55854047, "comment_id": 98371820, "body": "@Mittenchops <code>fmap</code> on a list produces a list. Your original code did not involve any lists. Try asking GHCi about the type of your expressions, you will see that they are of type <code>[IO ()]</code> instead of <code>IO something</code>, so you need <code>sequence_</code> if you want to actually run the list of IO actions."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 1, "last_activity_date": 1556210505, "creation_date": 1556210505, "answer_id": 55854047, "question_id": 55853955, "link": "https://stackoverflow.com/questions/55853955/fmap-into-a-do-block-fails-with-a-print-error/55854047#55854047", "title": "fmap into a do block fails with a print error", "body": "<p>The type of <code>fmap f [1..10]</code> is <code>[T]</code> where <code>T</code> is the return type of <code>f</code>.</p>\n\n<p>In your case, <code>T = IO ()</code>, so the type of the full expression is <code>[IO ()]</code>.</p>\n\n<p>IO actions can not be printed, so GHCi complains when you try to print that list. You might want to run those actions instead of printing them, using something like <code>sequence_ (fmap f [1..10])</code>.</p>\n\n<p>Alternatively, consider ditching <code>fmap</code> and instead using something like</p>\n\n<pre><code>import Data.Foldable (for_)\n\nmain = do\n   putStrLn \"hello\"\n   for_ [1..10] $ \\i -&gt; do\n      putStrLn \"in the loop\"\n      print (i*2)\n   putStrLn \"out of the loop\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "edited": false, "score": 0, "creation_date": 1556569919, "post_id": 55898957, "comment_id": 98476113, "body": "This is a very helpful explanation.  Thank you!"}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1556607719, "last_edit_date": 1556607719, "creation_date": 1556523952, "answer_id": 55898957, "question_id": 55853955, "link": "https://stackoverflow.com/questions/55853955/fmap-into-a-do-block-fails-with-a-print-error/55898957#55898957", "title": "fmap into a do block fails with a print error", "body": "<p>You wrote:</p>\n\n<blockquote>\n  <p>but when I change the return type of the lambda to be the same as the x that comes in as \\x as I do in the update 2 ... </p>\n</blockquote>\n\n<p>No, no. You don't. A lambda function returns the value of its <em>last expression</em>. Your lambda function has just <em>one</em> expression in it -- <em>the entire <code>do { ... }</code> block</em> defines a value, which is that lambda function's return value. Not <code>x</code>. The <code>return</code> belongs to the <code>do</code>, not the lambda expression. It is easier to see if we write it with the explicit separators, as </p>\n\n<pre><code>fmap (\\x -&gt; do {\n              let m = T.pack $ show x ;\n              T.putStrLn $ m ;\n              return x\n              } ) [1..10]\n</code></pre>\n\n<p>The <code>do</code> block as a whole has the same monadic type as each of its line statements. </p>\n\n<p>One of those is <code>putStrLn ...</code>, whose type is <code>IO ()</code>. So your lambda function returns <code>IO t</code> for some <code>t</code>. </p>\n\n<p>And because of <code>return x</code>, <code>t</code> is the type of <code>x</code>. We have <code>return :: Monad m =&gt; t -&gt; m t</code>, so with <code>m ~ IO</code> it is <code>return :: t -&gt; IO t</code>.</p>\n\n<p><code>x</code> comes from the argument list <code>Num t =&gt; [t]</code>, so overall you have </p>\n\n<pre><code>Num t =&gt; fmap (fx :: t -&gt; IO t) (xs :: [t]) :: [IO t]\n</code></pre>\n\n<p>or</p>\n\n<pre><code>           xs :: [t]\n        fx    ::  t  -&gt;  IO t\n   ----------------------------\n   fmap fx xs ::        [IO t]\n</code></pre>\n"}], "owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 55854047, "answer_count": 2, "score": 1, "last_activity_date": 1556607719, "creation_date": 1556210174, "last_edit_date": 1556523768, "question_id": 55853955, "link": "https://stackoverflow.com/questions/55853955/fmap-into-a-do-block-fails-with-a-print-error", "title": "fmap into a do block fails with a print error", "body": "<p>I'm trying to understand why a function I have written with a do-block can't be rewritten to fmap a similar lambda expression over a list.</p>\n\n<p>I have the following:</p>\n\n<pre><code>-- This works\ntest1 x = do \n        let m = T.pack $ show x\n        T.putStrLn m\n\ntest1 1\n</code></pre>\n\n<p>Produces</p>\n\n<pre><code>1\n</code></pre>\n\n<p>But</p>\n\n<pre><code>-- This fails\nfmap (\\x -&gt; do \n              let m = T.pack $ show x\n              T.putStrLn m\n              ) [1..10]\n\n-- And this also fails\nfmap (\\x -&gt; do \n             T.putStrLn $ T.pack $ show x\n                ) [1..10]\n</code></pre>\n\n<p>With error:</p>\n\n<pre><code>&lt;interactive&gt;:1:1: error:\n    \u2022 No instance for (Show (IO ())) arising from a use of \u2018print\u2019\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>My putStrLn is consistent between the working and the non-working.  The imports are the same.  My show-pack-putstrln dance required to print is also consistent between the working and the non-working.</p>\n\n<p>What is happening that the use of print is changing between the working and non-working?</p>\n\n<h2>Update 1</h2>\n\n<pre><code>-- I was also surprised that this fails\nfmap (T.putStrLn $ T.pack $ show) [1..10]\n-- it seemed as similar as possible to the test1 function but mapped.\n\n&lt;interactive&gt;:1:7: error:\n    \u2022 Couldn't match expected type \u2018Integer -&gt; b\u2019 with actual type \u2018IO ()\u2019\n    \u2022 In the first argument of \u2018fmap\u2019, namely \u2018(T.putStrLn $ pack $ show)\u2019\n      In the expression: fmap (T.putStrLn $ pack $ show) [1 .. 10]\n      In an equation for \u2018it\u2019: it = fmap (T.putStrLn $ pack $ show) [1 .. 10]\n    \u2022 Relevant bindings include it :: [b] (bound at &lt;interactive&gt;:1:1)\n&lt;interactive&gt;:1:29: error:\n    \u2022 Couldn't match type \u2018() -&gt; String\u2019 with \u2018String\u2019\n      Expected type: String\n        Actual type: () -&gt; String\n    \u2022 Probable cause: \u2018show\u2019 is applied to too few arguments\n      In the second argument of \u2018($)\u2019, namely \u2018show\u2019\n      In the second argument of \u2018($)\u2019, namely \u2018pack $ show\u2019\n      In the first argument of \u2018fmap\u2019, namely \u2018(T.putStrLn $ pack $ show)\u2019\n</code></pre>\n\n<h2>Update 2</h2>\n\n<pre><code>-- This lambda returns x of the same type as \\x\n-- even while incidentally printing along the way\nfmap (\\x -&gt; do \n              let m = T.pack $ show x\n              T.putStrLn $ m\n              return x\n              ) [1..10]\n</code></pre>\n\n<p>But also fails with:</p>\n\n<pre><code>&lt;interactive&gt;:1:1: error:\n    \u2022 No instance for (Show (IO Integer)) arising from a use of \u2018print\u2019\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 8, "last_activity_date": 1556209869, "last_edit_date": 1556209869, "creation_date": 1556208708, "answer_id": 55853556, "question_id": 55853389, "link": "https://stackoverflow.com/questions/55853389/failing-to-putstrln-something-just-assigned/55853556#55853556", "title": "Failing to putStrLn something just assigned", "body": "<p>No they are not identical.</p>\n\n<p>The first one, inlined, parses as:</p>\n\n<pre><code>T.putStrLn (T.pack (show (x * 2)))\n</code></pre>\n\n<p>The second one parses as:</p>\n\n<pre><code>(T.putStrLn T.pack) (show (x * 2))\n</code></pre>\n\n<p>You can't putStrLn of the <code>pack</code> function and then apply that result, as a function, to the input <code>show y</code>.  You probably wanted:</p>\n\n<pre><code>T.putStrLn $ T.pack $ show (x * 2)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>T.putStrLn (T.pack (show (x * 2)))\n</code></pre>\n\n<p><strong>EDIT: Reading the error message</strong>, this is what it's trying to help you understand:</p>\n\n<pre><code>T.putStrLn T.pack $ show y\n            ^\n             |\n     Couldn't match expected type \u2018Text\u2019 with actual type \u2018String -&gt; Text\u2019\n</code></pre>\n\n<p>The value <code>T.pack</code>  is of type <code>String -&gt; Text</code> but the type checker knows, based on <code>T.putStrLn</code>, this value should be type <code>Text</code> if things are to work.</p>\n\n<pre><code>    T.putStrLn T.pack $ show y\n        |\n     Couldn't match expected type \u2018String -&gt; IO b\u2019 with actual type \u2018IO ()\u2019\n      \u2022 The first argument of ($) takes one argument,\n        but its type \u2018IO ()\u2019 has none\n</code></pre>\n\n<p>If the first argument to <code>$</code>, <code>T.putStrLn T.pack</code>, were to type check then the result is dictated by the result of <code>T.putStrLn</code> which is <code>IO ()</code>.  However, the first argument of <code>$</code> must \"take one argument\" (be type <code>a -&gt; b</code>) and <code>IO ()</code> clearly does not.</p>\n"}], "owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 36, "favorite_count": 0, "accepted_answer_id": 55853556, "answer_count": 1, "score": 0, "last_activity_date": 1556209974, "creation_date": 1556208040, "last_edit_date": 1556209974, "question_id": 55853389, "link": "https://stackoverflow.com/questions/55853389/failing-to-putstrln-something-just-assigned", "title": "Failing to putStrLn something just assigned", "body": "<p>I have three examples below. I am trying to understand why in the first case, I can assign the variable, but not print it.  In the second, if I assign the whole thing as a string, I can print it later just fine.  But in the third, if I do the compute and then try to print, this fails:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric,  OverloadedStrings, RankNTypes, KindSignatures, FlexibleContexts, AllowAmbiguousTypes #-}\n:ext OverloadedStrings \n\nimport Data.Text as T\nimport Data.Text.IO as T\n\n-- This works\nmm1 x = do \n        T.putStrLn \"Testing m1\"\n        let m = T.pack $ show x\n            y = x * 2\n        T.putStrLn \"Here is m\"\n        T.putStrLn m\n        T.putStrLn \"y has been assigned successfully, but not printed.\"\n\nmm1 10\n\n-- This also works\nmm2 x = do \n        T.putStrLn \"Testing m2\"\n        let m = T.pack $ show x\n            y = T.pack $ show $ x * 2\n        T.putStrLn \"Here is m\"\n        T.putStrLn m\n        T.putStrLn \"Here is y\"\n        T.putStrLn y  -- this prints fine\n\nmm2 10\n\n\n-- But This does not work\nmm3 x = do \n        T.putStrLn \"Testing m3\"\n        let m = T.pack $ show x\n            y = x * 2\n        T.putStrLn \"Here is m\"\n        T.putStrLn m\n        T.putStrLn \"y has been assigned cannot be printed:\"\n        T.putStrLn T.pack $ show y\n\nmm3 10\n</code></pre>\n\n<p>My error is:</p>\n\n<pre><code>&lt;interactive&gt;:8:9: error:\n    \u2022 Couldn't match expected type \u2018String -&gt; IO b\u2019 with actual type \u2018IO ()\u2019\n    \u2022 The first argument of ($) takes one argument,\n      but its type \u2018IO ()\u2019 has none\n      In a stmt of a 'do' block: T.putStrLn pack $ show y\n      In the expression:\n        do T.putStrLn \"Testing m3\"\n           let m = pack $ show x\n               y = x * 2\n           T.putStrLn \"Here is m\"\n           T.putStrLn m\n           ....\n    \u2022 Relevant bindings include mm3 :: a -&gt; IO b (bound at &lt;interactive&gt;:1:1)\n&lt;interactive&gt;:8:20: error:\n    \u2022 Couldn't match expected type \u2018Text\u2019 with actual type \u2018String -&gt; Text\u2019\n    \u2022 Probable cause: \u2018pack\u2019 is applied to too few arguments\n      In the first argument of \u2018T.putStrLn\u2019, namely \u2018pack\u2019\n      In the expression: T.putStrLn pack\n      In a stmt of a 'do' block: T.putStrLn pack $ show y\n</code></pre>\n\n<p>I don't understand what this error is telling me.</p>\n\n<p>Specifically, if</p>\n\n<pre><code>    let\n        y = T.pack $ show $ x * 2\n    T.putStrLn y  -- this prints fine\n</code></pre>\n\n<p>works.  Why does:</p>\n\n<pre><code>    let\n        y = x * 2\n    T.putStrLn T.pack $ show y\n</code></pre>\n\n<p>fail?  These should be exactly identical, right?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1556197669, "post_id": 55849637, "comment_id": 98361855, "body": "Unrelated to your question, I strongly recommend beginners not use type aliases. They don&#39;t provide type safety and rarely provide cleaner intuition into the meaning of code."}, {"owner": {"reputation": 297, "user_id": 9596377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a8cf9de78ea1b11df3681d8524522b7?s=128&d=identicon&r=PG&f=1", "display_name": "slemoine", "link": "https://stackoverflow.com/users/9596377/slemoine"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1556198301, "post_id": 55849637, "comment_id": 98362323, "body": "thanks for the advice, I keep it in mind. At first the function signature looked  overwhelming to me without aliases that&#39;s why I used it. I clearly understand that alias does&#39;nt provide type safety though."}], "answers": [{"comments": [{"owner": {"reputation": 297, "user_id": 9596377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a8cf9de78ea1b11df3681d8524522b7?s=128&d=identicon&r=PG&f=1", "display_name": "slemoine", "link": "https://stackoverflow.com/users/9596377/slemoine"}, "edited": false, "score": 0, "creation_date": 1556198800, "post_id": 55849922, "comment_id": 98362670, "body": "thanks Robin I was totally focus on the reading input part, clearly missing the point about writing data. Is it some kind of re-arranging execution order according to function combination performed by haskell here ? Could you guide me to a better approach here please ?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 297, "user_id": 9596377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a8cf9de78ea1b11df3681d8524522b7?s=128&d=identicon&r=PG&f=1", "display_name": "slemoine", "link": "https://stackoverflow.com/users/9596377/slemoine"}, "edited": false, "score": 1, "creation_date": 1556199290, "post_id": 55849922, "comment_id": 98362993, "body": "I hesitate to say what a &quot;better approach&quot; would be, especially since I did little more than skim your code, but one thing that occurs to me is that, since your map has a very simple relation between the keys and values, you could probably rewrite this using just lists rather than maps. (A Map is more efficient than a list mainly for looking things up by key, which I don&#39;t think you ever do.) Then by <code>map</code>ping over the list you preserve the order of the input. This is more or less off the top of my head so I might have overlooked something."}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": false, "score": 3, "last_activity_date": 1556197329, "creation_date": 1556197329, "answer_id": 55849922, "question_id": 55849637, "link": "https://stackoverflow.com/questions/55849637/string-ordering-using-fold/55849922#55849922", "title": "String ordering using fold", "body": "<p>According to the <a href=\"https://hackage.haskell.org/package/containers-0.4.0.0/docs/Data-Map.html\" rel=\"nofollow noreferrer\">docs</a> for Data.Map, <code>Map.keys</code> returns \"all keys of the map in ascending order\". (Recall that the <code>Map</code> type requires its keys to be of a type that's an instance of <code>Ord</code>.)</p>\n\n<p>Since <code>\"A\"</code> comes before <code>\"B\"</code> in the natural order, I think your use of <code>Map.keys</code> is causing <code>writeData</code> to have the \"ask for A\" action before the \"ask for B\" one.</p>\n"}, {"comments": [{"owner": {"reputation": 297, "user_id": 9596377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a8cf9de78ea1b11df3681d8524522b7?s=128&d=identicon&r=PG&f=1", "display_name": "slemoine", "link": "https://stackoverflow.com/users/9596377/slemoine"}, "edited": false, "score": 0, "creation_date": 1556200753, "post_id": 55850622, "comment_id": 98363972, "body": "Many thanks for your detailed answer ! I clearly understand what was wrong now. &quot;This means you&#39;ve done something wrong, and I&#39;m sure it made you uncomfortable when you saw it, too&quot; you&#39;re absolutely right about it ^^."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 2, "last_activity_date": 1556199468, "creation_date": 1556199468, "answer_id": 55850622, "question_id": 55849637, "link": "https://stackoverflow.com/questions/55849637/string-ordering-using-fold/55850622#55850622", "title": "String ordering using fold", "body": "<p><code>Map</code>s are ordered. That's why most of the functions that work on <code>Map k v</code>s have a <code>Ord k</code> constraint. I think, internally, they are kept as some sort of binary tree.  There is no reordering of execution, just reordering of data. If you want a \"map-like\" structure that stays in the order you want rather than being sorted, use association lists:</p>\n\n<pre><code>type Assoc k v = [(k, v)]\n-- usually we don't use this alias; [(k, v)] is shorter and widely understood\n</code></pre>\n\n<p>In <code>Prelude</code>, you will find</p>\n\n<pre><code>lookup :: Eq a =&gt; k -&gt; [(k, v)] -&gt; Maybe v\n</code></pre>\n\n<p>and all other map-like operations can be implemented through basic list manipulation.</p>\n\n<p>In your code, you should thus change:</p>\n\n<pre><code>type ItemRegistry = [(String, InputLine)]\n</code></pre>\n\n<hr/>\n\n<p>Also, if you use <code>foldl</code> to write some function from lists to lists, it will reverse the order, generally. This is because</p>\n\n<pre><code>foldl c n [x, y, z] = c (foldl c n [x, y]) z\n</code></pre>\n\n<p>which says to do something with the last element before doing something with the rest of the list, while</p>\n\n<pre><code>foldr c n [x, y, z] = c x (foldr c n [x, y])\n</code></pre>\n\n<p>means to do something with the first element before processing the rest. If you are used to strict languages, this is backwards. In a lazy language, things on the \"outside\" of an expression \"happen\" first; in a strict language things on the \"inside\" happen first.</p>\n\n<p>This was not a problem for <code>Map</code>, because <code>Map.insert</code> is unordered (as long as there are no duplicate keys); it doesn't matter in what order you insert keys into a <code>Map</code>, because the <code>Map</code> will always be sorted according to the <code>Ord</code> instance. It is, however, a problem for association lists, which preserve order. You should thus say:</p>\n\n<pre><code>getInput :: [String] -&gt; ItemsRegistry\n-- getInput = foldr (\\category acc -&gt; (category, insertCategory category) : acc) []\n-- but that should really be\ngetInput = map (\\category -&gt; (category, insertCategory category))\n-- which you can turn into\n-- getInput = map ((,) &lt;*&gt; insertCategory)\n-- if you want\n</code></pre>\n\n<hr/>\n\n<p>Finally, your <code>writeLine</code> and <code>writeData</code> are questionable. Notice:</p>\n\n<pre><code>writeData path data_ = [ writeLine path k (Map.lookup k data_) |  k &lt;- Map.keys data_ ]\n</code></pre>\n\n<p><code>k</code> is definitely a key to <code>data_</code>, but <code>Map.lookup k data_ :: Maybe InputLine</code>. Why? It won't ever be <code>Nothing</code>. The same would happen for <code>Data.List.lookup</code>. This means you've done something wrong, and I'm sure it made you uncomfortable when you saw it, too. I see you band-aided it by making <code>writeLine</code> accept a <code>Maybe</code>, making it a no-op if it receives <code>Nothing</code>, but that's just dodgy.</p>\n\n<p>If you were using <code>Map</code> (which you can't, really, as I've said), you would use this function, which turns a <code>Map</code> into an association list.</p>\n\n<pre><code>-- alias toAscList\nData.Map.assocs :: Map k a -&gt; [(k, a)]\n</code></pre>\n\n<p>And you would say</p>\n\n<pre><code>writeData path data_ = [ writeLine path k v | (k, v) &lt;- assocs data_ ] \n</code></pre>\n\n<p>(If you think this look inefficient, it isn't. The documentation for <code>assocs</code> says it is subject to list fusion, meaning that the intermediate <code>assocs data_</code> list that appears to be created here gets optimized out of existence.)</p>\n\n<p>Of course, we already <em>have</em> an association list. This makes <code>writeData</code> even simpler:</p>\n\n<pre><code>-- do be careful; Map.insert clobbers duplicates, but (:)ing onto an association\n-- list means duplicate keys are preserved\n-- you'd need to run nubBy ((==) `on` fst) on data if that's an issue\n-- *that* might be inefficient (O(n^2) in the length of data_)\nwriteData path data_ = [ writeLine path k v | (k, v) &lt;- data_ ]\n-- or even\n-- writeData path = map (uncurry (writeLine path))\n-- if you want to be confusing\n-- writeData = map . uncurry . writeLine\n\nwriteLine :: String -&gt; String -&gt; InputLine -&gt; IO ()\nwriteLine path category lines = do words &lt;- lines\n                                   appendFile path $ formatLine category $ unwords words\n</code></pre>\n"}], "owner": {"reputation": 297, "user_id": 9596377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a8cf9de78ea1b11df3681d8524522b7?s=128&d=identicon&r=PG&f=1", "display_name": "slemoine", "link": "https://stackoverflow.com/users/9596377/slemoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 55850622, "answer_count": 2, "score": 1, "last_activity_date": 1556199468, "creation_date": 1556196336, "last_edit_date": 1556198871, "question_id": 55849637, "link": "https://stackoverflow.com/questions/55849637/string-ordering-using-fold", "title": "String ordering using fold", "body": "<p>I'm a newbie in haskell and start to write my first small program.</p>\n\n<p>The purpose: The app asks the user to input items for some categories. All inputs are stored in a Map Category [Item] (or Map String [String]). Once all categories has been fulfilled, the map is written to a file.</p>\n\n<pre><code>import qualified Data.Map as Map\n\ntype InputLine = IO [String]\n\ntype ItemsRegistry = Map.Map String InputLine\n\n--main = do sequence . printValues . getInput $ [\"head\", \"body\"]\n\nmain = do\n  writeFile \"data.txt\" \"\"\n  putStrLn \"Write the word \\\"stop\\\" to end the input\"\n  sequence . writeData \"data.txt\" . getInput $ [\"B\", \"A\"]\n\ngetInput :: [String] -&gt; ItemsRegistry\ngetInput cat = foldl (\\acc category -&gt; Map.insert category (insertCategory category) acc) Map.empty cat\n\ninsertCategory :: String -&gt; InputLine\ninsertCategory category = do\n  putStrLn $ \"Add items for category \" ++ category\n  insertItem []\n\ninsertItem :: [String] -&gt; InputLine\ninsertItem values = do\n  x &lt;- getLine\n  case x of \"stop\" -&gt; return values\n            x -&gt; insertItem (x:values)\n\nwriteData ::  String -&gt; ItemsRegistry -&gt; [IO ()]\nwriteData path data_ = [ writeLine path k (Map.lookup k data_) |  k &lt;- Map.keys data_ ]\n\n-- filepath category lineOfItems\nwriteLine :: String -&gt; String -&gt; Maybe InputLine -&gt; IO ()\nwriteLine path category (Just line) = line &gt;&gt;= (\\words -&gt; appendFile path $ formatLine category (unwords words))  \nwriteLine path category Nothing = return ()\n\nformatLine :: String -&gt; String -&gt; String\nformatLine category items = category ++ \" \" ++ items ++ \"\\n\"\n\n--printValues :: ItemsRegistry -&gt; [IO ()]\n--printValues l = [ v &gt;&gt;= putStrLn . show | (k,v) &lt;- Map.toList l]\n</code></pre>\n\n<p>When running the above I can't figure out why it asks me for input category A before B since I used a foldl ? Seems like there is some lexical ordering behind it but I can't understand why.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 5, "creation_date": 1556191662, "post_id": 55848048, "comment_id": 98358305, "body": "Please share your attempt(s) and explain what is going wrong with them."}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 3, "creation_date": 1556191683, "post_id": 55848048, "comment_id": 98358320, "body": "First you figure out how to select the second element from a quadruple. Then you use <code>map</code> and <code>zip</code>."}], "answers": [{"tags": [], "owner": {"reputation": 785, "user_id": 5478942, "user_type": "registered", "accept_rate": 38, "profile_image": "https://lh6.googleusercontent.com/-E0u3n2mQxTk/AAAAAAAAAAI/AAAAAAAABUI/1PPJs1QQ7BU/photo.jpg?sz=128", "display_name": "Solomon Bothwell", "link": "https://stackoverflow.com/users/5478942/solomon-bothwell"}, "is_accepted": false, "score": 0, "last_activity_date": 1556232441, "creation_date": 1556232441, "answer_id": 55858579, "question_id": 55848048, "link": "https://stackoverflow.com/questions/55848048/how-to-join-2-lists-together/55858579#55858579", "title": "How to join 2 list&#39;s together", "body": "<p>so you have two lists:</p>\n\n<pre><code>tupleList :: [(a, b, c, d)]\ntupleList = [(a1, b1, c1, d1), (a2, b2, c2, d2)]\n\nintList :: [Int]\nintList = [1, 2]\n</code></pre>\n\n<p>You are going to want map the <code>tupleList</code> into a new shape that only holds the values you want:</p>\n\n<pre><code>mapTuple :: [(a, b, c, d)] -&gt; [b]\n</code></pre>\n\n<p>Then you are going to want to combine those values with the <code>intList</code> to create your final list of tuples:</p>\n\n<pre><code>zip :: [a] -&gt; [b] -&gt; [(a, b])\n</code></pre>\n\n<p>This second function called <code>zip</code> already exists in the prelude.</p>\n\n<p>The first function is going to be something you implement. You can do this with a higher order function called <code>fmap</code> which has the signature:</p>\n\n<pre><code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>This signature means that <code>fmap</code> takes a function from <code>a -&gt; b</code> and uses it to convert all the <code>a</code> values in some <code>Functor</code> into <code>b</code> values. To make this easier to grok, lets make <code>fmap</code> a concrete to <code>List</code>, which is a member of the <code>Functor</code> typeclass:</p>\n\n<pre><code>fmap :: (a -&gt; b) -&gt; [a] -&gt; [b]\n</code></pre>\n\n<p>So all we need is to write a function <code>a -&gt; b</code>, apply that to <code>fmap</code>, and then apply our <code>[a]</code> and then we get back a <code>[b]</code>!</p>\n\n<p>In this situation our <code>a</code> would be <code>(a, b, c, d)</code>, our <code>b</code> would be <code>b</code>, and the function would look like:</p>\n\n<pre><code>f :: (a, b, c, d) -&gt; b\n</code></pre>\n\n<p>Applying that function to fmap we would get:</p>\n\n<pre><code>fmap f :: [(a, b, c, d)] -&gt; [b]\n</code></pre>\n\n<p>We are almost done. Now we want to use <code>fmap f</code> in our main function to to convert the <code>tupleList</code> then <code>zip</code> the result with our <code>intList</code>:</p>\n\n<pre><code>mainFunction :: [(a, b, c, d)] -&gt; [Int] -&gt; [(b, Int)]\nmainFunction xs ys = zip (mapTuple xs) ys\n    where f (a, b, c, d) = b\n          mapTuple zs = fmap f zs\n</code></pre>\n\n<p>Tada! Let me know if you have any more questions.</p>\n"}], "owner": {"reputation": 11, "user_id": 11410189, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55dc8df33b68bf5c87bee58d30446784?s=128&d=identicon&r=PG&f=1", "display_name": "Sam", "link": "https://stackoverflow.com/users/11410189/sam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "answer_count": 1, "score": -4, "last_activity_date": 1556232441, "creation_date": 1556191085, "question_id": 55848048, "link": "https://stackoverflow.com/questions/55848048/how-to-join-2-lists-together", "title": "How to join 2 list&#39;s together", "body": "<p>I have a list of tuples <code>[(a1, b1, c1, d1), (a2, b2, c2 d2), (a3, b3, c3, d3), ..., (a50, b50, c50 ,d50)]</code> and a second list of Int's, <code>[2, 1, 4, 3, ..., 50th]</code>. How do I join these two list's such that the resulting list resembles <code>[(b1, 2), (b2, 1), (b3, 4), ..., (b50, 50th)]</code>. Thanks</p>\n"}, {"tags": ["haskell", "recursion", "tail-recursion"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1556187956, "post_id": 55847058, "comment_id": 98356234, "body": "What are those problems?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1556188066, "post_id": 55847058, "comment_id": 98356305, "body": "I&#39;m no expert but I don&#39;t believe the concept of tail-recursion is that significant in Haskell, since Haskell doesn&#39;t have a &quot;call stack&quot; that recursive functions consume space from. (Converting recursive functions to being tail-recursive is very important in imperative languages, however, to avoid stack overflows.)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1556192538, "post_id": 55847058, "comment_id": 98358764, "body": "@RobinZigmond It&#39;s important in languages with tail-call optimization. Otherwise, tail recursion is no more efficient than regular recursion."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556192628, "post_id": 55847058, "comment_id": 98358828, "body": "True @chepner, I realised after I wrote that that it&#39;s only significant in languages with TCO (why, Python, why?). But I figured that the point was clear enough even without that (important) technicality."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1556192928, "post_id": 55847058, "comment_id": 98358994, "body": "Python likes its stack traces more than efficient recursion, sadly."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 11394265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fec5c8d01e84fe7b81d2840e77863fd?s=128&d=identicon&r=PG&f=1", "display_name": "Napkin", "link": "https://stackoverflow.com/users/11394265/napkin"}, "edited": false, "score": 0, "creation_date": 1556191196, "post_id": 55847819, "comment_id": 98358063, "body": "Thank a lot. I tried some variations and found a very similar solution. So does the performance issue also apply to this variant of tail-recursion?  hB x = hBHelp x 50     where hBHelp x y | x &gt; 20 = y  \t                 | otherwise = hBHelp (x+1) (x*x + y)"}, {"owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "reply_to_user": {"reputation": 13, "user_id": 11394265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fec5c8d01e84fe7b81d2840e77863fd?s=128&d=identicon&r=PG&f=1", "display_name": "Napkin", "link": "https://stackoverflow.com/users/11394265/napkin"}, "edited": false, "score": 0, "creation_date": 1556193712, "post_id": 55847819, "comment_id": 98359429, "body": "@Napkin: Yes, they&#39;re equivalent, but yours is nicer, so I substituted mine for it. You could give Criterion a try with <code>stack install criterion</code>. :-)"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1556197289, "post_id": 55847819, "comment_id": 98361610, "body": "Good answer, but it looks like your benchmarks might have been run without <code>-O2</code>.   Compiling with GHC 8.6.4, I get similar results to yours without optimization, but with <code>-O2</code> there&#39;s about a 20x speed-up and the tail recursive version actually beats out the non-tail recursive version for this particular example. Your advice still stands, though.  It would be wrong to draw the conclusion that tail recursive versions will always (or even usually) be faster, and it would be a very bad idea to get into the habit of automatically writing code this way without performance testing."}], "tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 3, "last_activity_date": 1556279032, "last_edit_date": 1556279032, "creation_date": 1556190224, "answer_id": 55847819, "question_id": 55847058, "link": "https://stackoverflow.com/questions/55847058/convert-recursive-function-to-tail-recursive-function-concept-of-tail-recursion/55847819#55847819", "title": "Convert recursive function to tail recursive function. Concept of tail recursion", "body": "<p>As Robin Zigmond says, the concept of tail recursion doesn't apply in the same way in Haskell as it does in non-lazy languages. In languages with <em>non-lazy</em> semantics (so not Haskell), what you can do to achieve tail recursion is to move the expression that causes stack use to an accumulating argument like so:</p>\n\n<pre><code>h :: Int -&gt; Int\nh x = if x &gt; 20 then 50 else x*x + h (x+1)\n\ng :: Int -&gt; Int\ng z = g' z 50 where\n  g' x y\n    | x &gt; 20 = y\n    | otherwise = g' (x+1) (x*x + y)\n</code></pre>\n\n<p>Here the outer expression of the function body of <code>g'</code> is a call to itself, so if this were a non-lazy language, you wouldn't need to preserve the stack frames of old recursive calls before resolving the <code>x*x + ...</code> part of the expression. In Haskell this evaluates differently, though.</p>\n\n<p>Comparing your <code>h</code> and this <code>g</code> in a micro-benchmark,</p>\n\n<pre><code>module Main where\n\nimport Criterion\nimport Criterion.Main\n\nmain :: IO ()\nmain = defaultMain [ bgroup \"tail-recursion\" [ bench \"h\" $ nf h 1\n                                             , bench \"g\" $ nf g 1\n                                             ]\n                   ]\n</code></pre>\n\n<p>you actually get worse performance from this <code>g'</code>:</p>\n\n<pre><code>benchmarking tail-recursion/h\ntime                 826.7 ns   (819.1 ns .. 834.7 ns)\n                     0.993 R\u00b2   (0.988 R\u00b2 .. 0.997 R\u00b2)\nmean                 911.1 ns   (866.4 ns .. 971.9 ns)\nstd dev              197.7 ns   (149.3 ns .. 241.3 ns)\n\nbenchmarking tail-recursion/g\ntime                 1.742 \u03bcs   (1.730 \u03bcs .. 1.752 \u03bcs)\n                     1.000 R\u00b2   (0.999 R\u00b2 .. 1.000 R\u00b2)\nmean                 1.742 \u03bcs   (1.729 \u03bcs .. 1.758 \u03bcs)\nstd dev              47.44 ns   (34.69 ns .. 66.29 ns)\n</code></pre>\n\n<p>You can get some of that performance back by making the arguments of <code>g'</code> strict,</p>\n\n<pre><code>{-# LANGUAGE BangPatterns #-}\n\ng2 :: Int -&gt; Int\ng2 z = g' z 50 where\n  g' !x !y\n    | x &gt; 20 = y\n    | otherwise = g' (x+1) (x*x + y)\n</code></pre>\n\n<p>but it both looks and performs worse than the original <code>h</code>:</p>\n\n<pre><code>benchmarking tail-recursion/g2\ntime                 1.340 \u03bcs   (1.333 \u03bcs .. 1.349 \u03bcs)\n                     1.000 R\u00b2   (0.999 R\u00b2 .. 1.000 R\u00b2)\nmean                 1.344 \u03bcs   (1.336 \u03bcs .. 1.355 \u03bcs)\nstd dev              33.40 ns   (24.71 ns .. 48.94 ns)\n</code></pre>\n\n<p><strong>Edit:</strong> As K. A. Buhr pointed out, I forgot the <code>-O2</code> flag for GHC; doing this provides the following micro-benchmark results:</p>\n\n<pre><code>h  time: 54.27 ns   (48.05 ns .. 61.24 ns)\ng  time: 24.50 ns   (21.15 ns .. 27.35 ns)\ng2 time: 25.47 ns   (22.19 ns .. 29.06 ns)\n</code></pre>\n\n<p>at which point the accumulating argument version does perform better and the <code>BangPatterns</code> version only performs as well, but both look worse than the original.</p>\n\n<p>So a moral when trying to optimize code in general: Don't do it prematurely. And a moral when trying to optimize Haskell code in particular: You won't necessarily know that it matters until you try, and usually the most abstract solution that relies on library functions performs well.</p>\n"}], "owner": {"reputation": 13, "user_id": 11394265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fec5c8d01e84fe7b81d2840e77863fd?s=128&d=identicon&r=PG&f=1", "display_name": "Napkin", "link": "https://stackoverflow.com/users/11394265/napkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 275, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1556279032, "creation_date": 1556187762, "last_edit_date": 1556278687, "question_id": 55847058, "link": "https://stackoverflow.com/questions/55847058/convert-recursive-function-to-tail-recursive-function-concept-of-tail-recursion", "title": "Convert recursive function to tail recursive function. Concept of tail recursion", "body": "<p>I am trying to convert some recursive functions in haskell. To get some experience with this type of functions i tried to understand the concept of tail-recursion. To get a clue i want to start with very easy functions to understand the concept behind tail-recursion. The following code shows a random recursive function i wrote. I want to convert it to a tail-recursive variant but i have problems using the theoretical concept on actual code. </p>\n\n<pre><code>h x = if x &gt; 20 then 50 else x*x + h (x+1)\n</code></pre>\n"}, {"tags": ["haskell", "leveldb"], "answers": [{"comments": [{"owner": {"reputation": 990, "user_id": 2936186, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EOPOx.jpg?s=128&g=1", "display_name": "H&#233;cate", "link": "https://stackoverflow.com/users/2936186/h%c3%a9cate"}, "edited": false, "score": 0, "creation_date": 1556194385, "post_id": 55844801, "comment_id": 98359803, "body": "Thank you very much! I should have looked for tests in the first place indeed :)"}], "tags": [], "owner": {"reputation": 2578, "user_id": 395863, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/d694caab02e48b350c52fda041cc75cf?s=128&d=identicon&r=PG", "display_name": "Raveline", "link": "https://stackoverflow.com/users/395863/raveline"}, "is_accepted": true, "score": 1, "last_activity_date": 1556180394, "creation_date": 1556180394, "answer_id": 55844801, "question_id": 55843599, "link": "https://stackoverflow.com/questions/55843599/no-instance-for-monadleveldb-io-compilation-error-in-test-suite/55844801#55844801", "title": "&quot;No instance for (MonadLevelDB IO)&quot; compilation error in test suite", "body": "<p>I am not familiar with higher-levelDB but from the look of the code, I think the issue is probably that when you write lines like these:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>spec :: Spec\nspec = parallel $ do\n    it \"Fetch an already-existing user\" $ do\n        user &lt;- getUser \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\"\n        user `shouldBe` ( Just $ User \"toto\" \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\" True \"toto92\" \"\" )\n</code></pre>\n\n<p>You're not in the monadic context you need. Using <code>it</code> you only live in the hspec context, which is ignorant of all DB-related things. Have a look at the (fairly abstract) signature of <code>it</code>: </p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>it :: (HasCallStack, Example a) =&gt; String -&gt; a -&gt; SpecWith (Arg a)\n</code></pre>\n\n<p>We're far from the constraint of your <code>EuphrateMonad</code> stack there. So you'll need to add something in between, to enter the required context (getting the connection to levelDB, managing transaction, etc.).</p>\n\n<p>In such cases, I find it helps to look at the library code directly and see if there are any test suites and how the author create their context. You're in luck, <a href=\"https://github.com/jeremyjh/higher-leveldb/blob/master/test/Database/LevelDB/HigherSpec.hs\" rel=\"nofollow noreferrer\">there are tests in this library</a>. Look at the definition and use of <code>withDBT</code> and <code>withDBRT</code>, this should point you towards the right direction.</p>\n"}], "owner": {"reputation": 990, "user_id": 2936186, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EOPOx.jpg?s=128&g=1", "display_name": "H&#233;cate", "link": "https://stackoverflow.com/users/2936186/h%c3%a9cate"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 32, "favorite_count": 0, "accepted_answer_id": 55844801, "answer_count": 1, "score": 0, "last_activity_date": 1556180394, "creation_date": 1556175877, "question_id": 55843599, "link": "https://stackoverflow.com/questions/55843599/no-instance-for-monadleveldb-io-compilation-error-in-test-suite", "title": "&quot;No instance for (MonadLevelDB IO)&quot; compilation error in test suite", "body": "<p>I am trying to use <a href=\"https://hackage.haskell.org/package/higher-leveldb-0.5.0.2/\" rel=\"nofollow noreferrer\">higher-leveldb</a> in my Haskell application, and I am getting a compilation error in my test suite that I do not understand (or at least, I do not have the knowledge to properly fix it).</p>\n\n<p>For context, I have the following helper to fetch and decode a user from the database:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>getUser :: (MonadLevelDB m) =&gt; Text -&gt; m (Maybe User)\ngetUser uuid = do\n  let key = toStrict . encode $ uuid\n  result &lt;- LevelDB.get key -- m (Maybe Value)\n  case result of\n      Just value -&gt; return ( decodeStrict' value :: Maybe User) -- Ideal type\n      Nothing    -&gt; return Nothing\n</code></pre>\n\n<p>And the following test suite:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\ntype EuphrateMonad m = (MonadLevelDB m, MonadUnliftIO m, MonadIO m)\n\nmain :: IO ()\nmain = runCreateLevelDB \"/tmp/mydb\" \"test\" levelDBMain\n\nlevelDBMain :: (EuphrateMonad m) =&gt; m ()\nlevelDBMain = do\n    setup\n    test &lt;- liftIO $ testSpec \"euphrate\" spec\n    liftIO $ Test.Tasty.defaultMain test\n\n\nspec :: Spec\nspec = parallel $ do\n    it \"Fetch an already-existing user\" $ do\n        user &lt;- getUser \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\"\n        user `shouldBe` ( Just $ User \"toto\" \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\" True \"toto92\" \"\" )\n\n    it \"Delete a user\" $ do\n      deleteUser \"2e940724-936e-4700-826b-367faabac141\"\n      user &lt;- getUser \"2e940724-936e-4700-826b-367faabac141\"\n      user `shouldBe` Nothing\n\nusers :: [User]\nusers = [ User \"toto\" \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\" True \"toto92\" \"\"\n        , User \"J\u00e9r\u00f4me\" \"2e940724-936e-4700-826b-367faabac141\" False \"j\u00e9j\u00e9du32\" \"nah.\"\n        ]\n\nsetup :: (EuphrateMonad m) =&gt; m ()\nsetup =\n  for_ users createUser\n</code></pre>\n\n<p>Now, the error I get is :</p>\n\n<pre><code>euphrate/test/Main.hs:29:17: error:\n    \u2022 No instance for (MonadLevelDB IO) arising from a use of \u2018getUser\u2019\n    \u2022 In a stmt of a 'do' block:\n        user &lt;- getUser \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\"\n      In the second argument of \u2018($)\u2019, namely\n        \u2018do user &lt;- getUser \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\"\n            user\n              `shouldBe`\n                (Just\n                   $ User\n                       \"toto\" \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\" True \"toto92\" \"\")\u2019\n      In a stmt of a 'do' block:\n        _ &lt;- it \"Fetch an already-existing user\"\n               $ do user &lt;- getUser \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\"\n                    user\n                      `shouldBe`\n                        (Just\n                           $ User\n                               \"toto\" \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\" True \"toto92\" \"\")\n   |\n29 |         user &lt;- getUser \"664798e1-7fac-4e0b-9fc6-757f4fb0409c\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n</code></pre>\n\n<p>I am first and foremost looking for ways to better understand this type of situations. I have some basic understanding of transformers, through Reader and Writer, but I don't feel very helped by what I know of that.</p>\n\n<p>Thanks for reading :)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 3, "creation_date": 1556175300, "post_id": 55842612, "comment_id": 98349321, "body": "The link your providing is for <code>BasicPrelude</code> which some alternate prelude.  You\u2019ll have to import it."}], "answers": [{"comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1556177887, "post_id": 55843253, "comment_id": 98350619, "body": "&quot;It is still unclear to me where tshow is and why it appears on Hoogle, but cannot be imported from Prelude, Data.Text or Data.Text.IO.&quot; I&#39;m not sure why this is unclear. Hoogle is just a search engine for all publicly available Haskell modules/packages, including 3rd-party ones. The search for <a href=\"https://hoogle.haskell.org/?hoogle=tshow&amp;scope=set%3Astackage\" rel=\"nofollow noreferrer\">tshow</a> has plenty of hits but if you look at the package names you will see none are base packages. But <a href=\"https://hackage.haskell.org/package/text-1.2.3.1/docs/Data-Text.html#v:pack\" rel=\"nofollow noreferrer\">pack</a> is in the standard library&#39;s <code>Text</code> module."}, {"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1556198503, "post_id": 55843253, "comment_id": 98362472, "body": "Thanks. The confusion is that basicprelude turns out not to be the basic prelude, but is in fact a non basic, alternative prelude. I understand this is self evident to you, but for someone learning, and navigating the jungle of conflicting string libraries required to do even basic tasks, this was yet another surprise."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1556198774, "post_id": 55843253, "comment_id": 98362653, "body": "&quot;I understand this is self evident to you&quot; - far from it, and apologies if I came off as condescending. I&#39;m very much still learning Haskell, have never done anything much in the way of &quot;practical&quot; programs in it, and barely know my way around large parts of even the standard library, let alone all the thousands of packages on Hackage. But perhaps that&#39;s why I know a bit better which libraries are included with GHC and which aren&#39;t :)"}], "tags": [], "owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "is_accepted": true, "score": 1, "last_activity_date": 1556175014, "last_edit_date": 1556175014, "creation_date": 1556174422, "answer_id": 55843253, "question_id": 55842612, "link": "https://stackoverflow.com/questions/55842612/reading-numeric-as-text-tshow-and-show-in-haskell/55843253#55843253", "title": "Reading numeric as Text, tshow and show in Haskell", "body": "<p>It is still unclear to me where <code>tshow</code> is and why it appears on Hoogle, but cannot be imported from <code>Prelude</code>, <code>Data.Text</code> or <code>Data.Text.IO</code>.</p>\n\n<p>But this executes without error:</p>\n\n<pre><code>mm2 x = do \n        T.putStrLn \"Testing x being input as an integer and converted to Text\"\n        let m = T.pack $ show x\n        T.putStrLn m\n        -- y &lt;- x * 2\n        -- putStrLn y\n\nmm2 10\n</code></pre>\n\n<p>First <code>show</code> from <code>Prelude</code> to go from <code>Integer -&gt; String</code> then <code>T.pack</code> to go from <code>String -&gt; Text</code>.</p>\n"}], "owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 55843253, "answer_count": 1, "score": 0, "last_activity_date": 1556175014, "creation_date": 1556171578, "last_edit_date": 1556173889, "question_id": 55842612, "link": "https://stackoverflow.com/questions/55842612/reading-numeric-as-text-tshow-and-show-in-haskell", "title": "Reading numeric as Text, tshow and show in Haskell", "body": "<p>I'm trying to read an integer to Text:</p>\n\n<pre><code>-- This works\nmm x = do \n        T.putStrLn \"Testing x being input as Text\"\n        T.putStrLn x\n        -- y &lt;- x * 2\n        -- putStrLn y\n\nmm \"10\"\n</code></pre>\n\n<p>Produces</p>\n\n<pre><code>Testing x being input as Text\n10\n</code></pre>\n\n<p>Great.  If it starts as Text, this works.  This is fine.</p>\n\n<p>But</p>\n\n<pre><code>-- This does not work\nmm2 x = do \n        T.putStrLn \"Testing x being input as an integer and converted to Text\"\n        let m = tshow x\n        T.putStrLn m\n        -- y &lt;- x * 2\n        -- putStrLn y\n\nmm2 10\n\n&lt;interactive&gt;:3:17: error:\n    \u2022 Variable not in scope: tshow :: p -&gt; t\n    \u2022 Perhaps you meant \u2018show\u2019 (imported from Prelude)\n</code></pre>\n\n<p>I understand from <a href=\"https://hackage.haskell.org/package/basic-prelude-0.7.0/docs/BasicPrelude.html#v:tshow\" rel=\"nofollow noreferrer\">here</a> that <code>tshow</code>:</p>\n\n<pre><code>tshow :: Show a =&gt; a -&gt; Text\n</code></pre>\n\n<p>should exist in <code>Prelude</code> and should turn this a into Text.</p>\n\n<p>Non-t, regular-<code>show</code> also fails:</p>\n\n<pre><code>-- This does not work\nmm2 x = do \n        T.putStrLn \"Testing x being input as an integer and converted to Text\"\n        let m = show x\n        T.putStrLn m\n        -- y &lt;- x * 2\n        -- putStrLn y\n\nmm2 10\n</code></pre>\n\n<p>with</p>\n\n<pre><code>&lt;interactive&gt;:4:20: error:\n    \u2022 Couldn't match type \u2018String\u2019 with \u2018Text\u2019\n      Expected type: Text\n        Actual type: String\n    \u2022 In the first argument of \u2018Data.Text.IO.putStrLn\u2019, namely \u2018m\u2019\n      In a stmt of a 'do' block: Data.Text.IO.putStrLn m\n      In the expression:\n        do Data.Text.IO.putStrLn \"Testing x being input as an integer and converted to Text\"\n           let m = show x\n           Data.Text.IO.putStrLn m\n</code></pre>\n\n<p>And so does</p>\n\n<pre><code>-- This does not work\nmm2 x = do \n        T.putStrLn \"Testing x being input as an integer and converted to Text\"\n        let m = T.pack x\n        T.putStrLn m\n        -- y &lt;- x * 2\n        -- putStrLn y\n\nmm2 10\n</code></pre>\n\n<p>with</p>\n\n<pre><code>&lt;interactive&gt;:1:5: error:\n    \u2022 No instance for (Num String) arising from the literal \u201810\u2019\n    \u2022 In the first argument of \u2018mm2\u2019, namely \u201810\u2019\n      In the expression: mm2 10\n      In an equation for \u2018it\u2019: it = mm2 10\n</code></pre>\n\n<p>How can I read/show/pack/cast an integer as Text?  What am I doing wrong that this is difficult?</p>\n\n<h2>Update 1</h2>\n\n<p>And also</p>\n\n<pre><code>-- This does not work\nimport qualified Data.Text.IO as T\nimport qualified Data.Text as TS\nmm2 x = do \n        T.putStrLn \"Testing x being input as an integer and converted to Text\"\n        let m = T.tshow x\n        T.putStrLn m\n        -- y &lt;- x * 2\n        -- putStrLn y\n\nmm2 10\n</code></pre>\n\n<p>Produces</p>\n\n<pre><code>&lt;interactive&gt;:3:17: error:\n    Not in scope: \u2018T.tshow\u2019\n    No module named \u2018T\u2019 is imported.\n</code></pre>\n\n<h2>Update 2</h2>\n\n<p>And </p>\n\n<pre><code>mm2 x = do \n        T.putStrLn \"Testing x being input as an integer and converted to Text\"\n        let m = TS.tshow x\n        T.putStrLn m\n        -- y &lt;- x * 2\n        -- putStrLn y\n\nmm2 10\n</code></pre>\n\n<p>produces</p>\n\n<pre><code>&lt;interactive&gt;:3:17: error:\n    Not in scope: \u2018TS.tshow\u2019\n    No module named \u2018TS\u2019 is imported.\n</code></pre>\n"}, {"tags": ["haskell", "coq"], "comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1556173271, "post_id": 55842315, "comment_id": 98348434, "body": "What if you change the <code>Prop</code> to <code>Type</code>? I think part of the point of <code>Prop</code> is that two proofs of the same <code>Prop</code> can be treated as the same (there is an axiom for this called <code>proof_irrelevance</code> in the standard library). This would correspond to each <code>Prop</code> only having one inhabitant (which is the case for <code>()</code> in Haskell). I&#39;m not sure if this is always the case. I know that in a system like HoTT, you don&#39;t necessarily want proof irrelevance, but maybe that is captured by using <code>Type</code> instead of <code>Prop</code> (or maybe you just don&#39;t use the <code>proof_irrelevance</code> axiom?)."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1556173315, "post_id": 55842315, "comment_id": 98348450, "body": "Also, I suspect that there will still be some limitations. After all, Coq has a dependently typed type system and Haskell does not (although GHC is eventually heading in that direction, I believe)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556199690, "post_id": 55842315, "comment_id": 98363249, "body": "Those are <i>not</i> empty types, but unit types. Empty types have no (non-bottom) inhabitants like <code>Void</code>, while the unit type <code>()</code> as an inhabitant, namely <code>()</code>."}, {"owner": {"reputation": 14306, "user_id": 2747511, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/h6jTZ.jpg?s=128&g=1", "display_name": "Anton Trunov", "link": "https://stackoverflow.com/users/2747511/anton-trunov"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1556261703, "post_id": 55842315, "comment_id": 98384852, "body": "@chi Great observation. It seems that the extractor could use something like <code>newtype Void = Void Void</code> and <code>type Divides = Void</code>, etc. And then put <code>undefined</code> at every place a term of type <code>Divides</code> is expected."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 14306, "user_id": 2747511, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/h6jTZ.jpg?s=128&g=1", "display_name": "Anton Trunov", "link": "https://stackoverflow.com/users/2747511/anton-trunov"}, "edited": false, "score": 2, "creation_date": 1556266921, "post_id": 55842315, "comment_id": 98387390, "body": "@AntonTrunov Actually, I prefer the current translation. Abusing bottoms feels wrong. At most, I would use <code>Void</code> to translate uninhabited types (but doing that is hard, since we can&#39;t decide it)."}], "answers": [{"comments": [{"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 0, "creation_date": 1556175359, "post_id": 55843161, "comment_id": 98349349, "body": "So ideally <code>divides</code> and <code>prime</code> should be eliminated altogether from extracted file right? How come they exist there?"}, {"owner": {"reputation": 14306, "user_id": 2747511, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/h6jTZ.jpg?s=128&g=1", "display_name": "Anton Trunov", "link": "https://stackoverflow.com/users/2747511/anton-trunov"}, "reply_to_user": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 0, "creation_date": 1556176447, "post_id": 55843161, "comment_id": 98349878, "body": "@OrenIshShalom Great question! Updated the answer."}], "tags": [], "owner": {"reputation": 14306, "user_id": 2747511, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/h6jTZ.jpg?s=128&g=1", "display_name": "Anton Trunov", "link": "https://stackoverflow.com/users/2747511/anton-trunov"}, "is_accepted": true, "score": 5, "last_activity_date": 1556176423, "last_edit_date": 1556176423, "creation_date": 1556174079, "answer_id": 55843161, "question_id": 55842315, "link": "https://stackoverflow.com/questions/55842315/extracting-prop-from-coq-to-haskell-results-in-empty-type/55843161#55843161", "title": "Extracting Prop from Coq to Haskell results in empty type", "body": "<p>This is expected behavior. Things from <code>Prop</code> are propositions meaning those are computationally irrelevant because propositions are there to ensure correctness, e.g. to represent pre- and post- conditions of an algorithm, not to take part in computations.</p>\n\n<p>The situation is analogous with that of types in statically-typed languages -- one usually wants to erase types from runtime. Here we would like to have the terms that are proofs erased too.</p>\n\n<p>This is supported by Coq's type system which prohibits leaking logical information from types in <code>Prop</code> to <code>Type</code>, e.g.</p>\n\n<pre><code>Definition foo : True \\/ True -&gt; nat :=\n  fun t =&gt; match t with\n        | or_introl _ =&gt; 0\n        | or_intror _ =&gt; 42\n        end.\n</code></pre>\n\n<p>Results in</p>\n\n<blockquote>\n<pre><code>Error:\nIncorrect elimination of \"t\" in the inductive type \"or\":\nthe return type has sort \"Set\" while it should be \"Prop\".\nElimination of an inductive object of sort Prop\nis not allowed on a predicate in sort Set\nbecause proofs can be eliminated only to build proofs.\n</code></pre>\n</blockquote>\n\n<p>A natural question arises:</p>\n\n<blockquote>\n  <p>So ideally <code>divides</code> and <code>prime</code> should be eliminated altogether from extracted file right? How come they exist there?</p>\n</blockquote>\n\n<p>As Pierre Letouzey explains in his <a href=\"https://www.irif.fr/~letouzey/download/letouzey_extr_cie08.pdf\" rel=\"nofollow noreferrer\">overview of extraction in Coq</a>:</p>\n\n<blockquote>\n  <p>Let us summarize now the current status of Coq extraction. The theoretical extraction function described in [7] is still relevant and used as the core of the extraction system. This function collapses (but <em>cannot completely remove</em>) both logical parts (living in sort <code>Prop</code>) and types. A complete removal would induce dangerous changes in the evaluation of terms, and can even lead to errors or non- termination in some situations.</p>\n</blockquote>\n"}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 55843161, "answer_count": 1, "score": 1, "last_activity_date": 1556176423, "creation_date": 1556169804, "question_id": 55842315, "link": "https://stackoverflow.com/questions/55842315/extracting-prop-from-coq-to-haskell-results-in-empty-type", "title": "Extracting Prop from Coq to Haskell results in empty type", "body": "<p>I'm trying to make sure that a <strong>useless <code>Prop</code> is discarded when extracting Coq to Haskell</strong>. However, when I use the following example, I see that both <code>divides</code> and <code>prime</code> are extracted as Haskell empty types. Why is that?</p>\n\n<pre><code>(***********)\n(* isPrime *)\n(***********)\nFixpoint isPrime (p : nat) : bool :=\n  match p with\n  | 0 =&gt; false\n  | 1 =&gt; false\n  | S p' =&gt; (negb (helper p p'))\n  end.\n\n(***********)\n(* divides *)\n(***********)\nDefinition divides (n p : nat) : Prop :=\n  exists (m : nat), ((mult m n) = p).\n\n(*********)\n(* prime *)\n(*********)\nDefinition prime (p : nat) : Prop :=\n  (p &gt; 1) /\\ (forall (n : nat), ((divides n p) -&gt; ((n = 1) \\/ (n = p)))).\n\n(***************************)\n(* Extract to Haskell file *)\n(***************************)\nExtraction \"/home/oren/some_file.hs\" isPrime divides prime.\n</code></pre>\n\n<p>And here is what happens to <code>divides</code> and <code>prime</code>:</p>\n\n<pre><code>type Divides = ()\n\ntype Prime = ()\n</code></pre>\n\n<p>What's the use of extracting them?</p>\n"}, {"tags": ["haskell", "import"], "comments": [{"owner": {"reputation": 116, "user_id": 8913528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/543d32ab8a13de3822308785d6803d46?s=128&d=identicon&r=PG&f=1", "display_name": "Th&#233;ophile Choutri", "link": "https://stackoverflow.com/users/8913528/th%c3%a9ophile-choutri"}, "edited": false, "score": 1, "creation_date": 1556169735, "post_id": 55842205, "comment_id": 98347303, "body": "Have you tried importing it in a qualified manner?"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1556169938, "post_id": 55842324, "comment_id": 98347367, "body": "It is reported (by me) and fixed in newer GHCs."}], "tags": [], "owner": {"reputation": 1069, "user_id": 4299824, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-LKWkrlvV9UE/AAAAAAAAAAI/AAAAAAAABYQ/OWKjHFpdGGs/photo.jpg?sz=128", "display_name": "YAMAMOTO Yuji", "link": "https://stackoverflow.com/users/4299824/yamamoto-yuji"}, "is_accepted": true, "score": 6, "last_activity_date": 1556170309, "last_edit_date": 1556170309, "creation_date": 1556169865, "answer_id": 55842324, "question_id": 55842205, "link": "https://stackoverflow.com/questions/55842205/no-module-named-t-is-imported-but-i-just-imported-it/55842324#55842324", "title": "No module named \u2018T\u2019 is imported---but I just imported it", "body": "<p><code>putStrLn</code> is not provided by <a href=\"http://hackage.haskell.org/package/text-1.2.3.1/docs/Data-Text.html\" rel=\"noreferrer\"><code>Data.Text</code></a>, but <a href=\"http://hackage.haskell.org/package/text-1.2.3.1/docs/Data-Text-IO.html\" rel=\"noreferrer\"><code>Data.Text.IO</code></a>.<br>\nThe error message is actually confusing.<br>\nI'll check if the problem is reported.</p>\n"}], "owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 55842324, "answer_count": 1, "score": 7, "last_activity_date": 1556170309, "creation_date": 1556169188, "question_id": 55842205, "link": "https://stackoverflow.com/questions/55842205/no-module-named-t-is-imported-but-i-just-imported-it", "title": "No module named \u2018T\u2019 is imported---but I just imported it", "body": "<p>This seems as simple as possible:</p>\n\n<pre><code>import Data.Text as T\n\nlet x = \"test\"\nT.putStrLn x\n</code></pre>\n\n<p>But I get:</p>\n\n<pre><code>&lt;interactive&gt;:1:1: error:\n    Not in scope: \u2018T.putStrLn\u2019\n    No module named \u2018T\u2019 is imported.\n</code></pre>\n\n<p>Why is T not imported?  Why is <code>Data.Text</code> not imported as T?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 43134, "user_id": 1726343, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/55744f355c4714fd473c50e799165a70?s=128&d=identicon&r=PG", "display_name": "Asad Saeeduddin", "link": "https://stackoverflow.com/users/1726343/asad-saeeduddin"}, "edited": false, "score": 1, "creation_date": 1556152097, "post_id": 55840189, "comment_id": 98343893, "body": "I don&#39;t think you can use lambda case to match on predicates (although there&#39;s guard syntax for this). Probably a good way to start out with this is to just accept all the arguments and then introduce a typed hole, then see what you can do with the arguments to produce a value of the expected type. In other words, change the implementation of <code>annualizeMonthlyExpense</code> to <code>annualizeMonthlyExpense mp ml2p d = _</code>."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1556152862, "post_id": 55840189, "comment_id": 98344022, "body": "What are you trying to do with <code>AnnualPayment = 12 * MonthlyPayment</code>? Haskell has no assignment statement, so this makes no sense. Also, all identifier names must start with a lowercase letter; identifiers starting with an uppercase letter are either types or constructors, and as such it is (usually) impossible to do calculations with them."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 1, "creation_date": 1556152881, "post_id": 55840189, "comment_id": 98344026, "body": "<code>\\case</code> defines an anonymous function. That&#39;s why the extension that you enabled to get it is called <i>lambda</i> case."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 1, "creation_date": 1556152945, "post_id": 55840189, "comment_id": 98344043, "body": "Also, as for <code>\\case</code>, as @SilvioMayolo has already mentioned this requires the <code>LambdaCase</code> syntax extension to be enabled. If you haven&#39;t done that, you&#39;ll have to define an auxiliary variable like <code>\\x -&gt; case x of &lt;stuff&gt;</code>."}], "answers": [{"comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1556186486, "post_id": 55840480, "comment_id": 98355375, "body": "This answer could be slightly enhanced by mentioning <code>MultiWayIf</code> and that you <i>can</i> have one or more conditions <i>after</i> a pattern in a <code>case</code> expression."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 2, "creation_date": 1556196640, "post_id": 55840480, "comment_id": 98361155, "body": "<code>MultiWayIf</code> doesn&#39;t really don&#39;t anything here compared to guards. It&#39;s only useful in the middle of expression."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 2, "last_activity_date": 1556210281, "last_edit_date": 1556210281, "creation_date": 1556154559, "answer_id": 55840480, "question_id": 55840189, "link": "https://stackoverflow.com/questions/55840189/truncate-1-year-payments-from-long-schedule-in-case-statement-haskell/55840480#55840480", "title": "Truncate 1-year payments from long schedule in `\\case` statement (Haskell)", "body": "<p>Pattern matching doesn't work like that: patterns cannot be boolean conditions, they have to be data shapes, e.g. <code>Just x</code> or <code>a:b:c</code> or <code>Right y</code> or <code>Left Nothing</code> or some such.</p>\n\n<p>To use boolean conditions like this, use function guards:</p>\n\n<pre><code>annualizeMonthlyExpense a b\n  | (MonthsLeftToPay &gt; 12) = (AnnualPayment = 12 * MonthlyPayment)\n  | otherwise = (AnnualPayment = (12 - MonthsLeftToPay) * MonthlyPayment)\n</code></pre>\n\n<hr>\n\n<p>But this is not the only problem with your function.</p>\n\n<p>For one, variables cannot be <code>CamelCased</code>, they have to start with a lower-case character. This means that <code>MonthsLeftToPay</code> or <code>AnnualPayment</code> are invalid variable names.</p>\n\n<p>From your types, I can guess that by <code>MonthsLeftToPay</code> you probably meant the second parameter, which you named <code>b</code>. Similarly, <code>MonthlyPayment</code> probably means <code>a</code>. But I'm not sure what <code>AnnualPayment</code> is. </p>\n\n<p>Judging by the non-sensical syntax <code>AnnualPayment = ...</code>, I infer that perhaps you meant it to be the result of the function? If so, just write the result after the equality sign:</p>\n\n<pre><code>annualizeMonthlyExpense a b\n  | b &gt; 12 = 12 * a\n  | otherwise = (12 - b) * a\n</code></pre>\n\n<hr>\n\n<p>Further, your type signature specifies three parameters (<code>MonthlyPayment</code>, <code>MonthsLeftToPay</code>, and <code>Double</code>), but your argument list names only two. This will not compile.</p>\n\n<p>If you meant to completely ignore the third parameter, you can use an underscore in its place:</p>\n\n<pre><code>annualizeMonthlyExpense a b _\n  | b &gt; 12 = 12 * a\n  | otherwise = (12 - b) * a\n</code></pre>\n"}], "owner": {"reputation": 677, "user_id": 2636579, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/b615adca01077d21372bbbed1b998617?s=128&d=identicon&r=PG", "display_name": "reallymemorable", "link": "https://stackoverflow.com/users/2636579/reallymemorable"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 55840480, "answer_count": 1, "score": 0, "last_activity_date": 1556210281, "creation_date": 1556151652, "question_id": 55840189, "link": "https://stackoverflow.com/questions/55840189/truncate-1-year-payments-from-long-schedule-in-case-statement-haskell", "title": "Truncate 1-year payments from long schedule in `\\case` statement (Haskell)", "body": "<p>I am trying to build a function to look at incoming records that detail monthly payment amounts and remaining monthly pay periods in order to derive what the total annual payments will be.</p>\n\n<p>This is what I have so far:</p>\n\n<pre><code>annualizeMonthlyExpense :: MonthlyPayment -&gt; MonthsLeftToPay -&gt; Double -&gt; Double\nannualizeMonthlyExpense a b = \\case\n  (MonthsLeftToPay &gt; 12) -&gt; (AnnualPayment = 12 * MonthlyPayment)\n  (MonthsLeftToPay &lt; 12) -&gt; (AnnualPayment = (12 - MonthsLeftToPay) * MonthlyPayment)\n</code></pre>\n\n<p>I believe that at a conceptual level, I have it correct, but my syntax is definitely off.</p>\n\n<p>In particular, I would like to know how to not just to return the total payment for the rest of the year, but also include it as part of a tuple that has the number of periods used in the annualized calculation.</p>\n"}]