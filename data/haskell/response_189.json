[{"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 0, "creation_date": 1535229497, "post_id": 51978885, "comment_id": 90992498, "body": "<code>getGlobalManager</code> sounds like it will create a global manager if doesn&#39;t exist and reuse the same one whenever the function is called. If so, does it make sense to let <code>printResponse</code> call <code>getGlobalManager</code> by itself."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 0, "creation_date": 1535343726, "post_id": 51978885, "comment_id": 91015230, "body": "@zhangchiqing I just looked at the code and it seems using it inside <code>printResponse</code> will likely create it two times, so I would avoid that approach."}, {"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 0, "creation_date": 1535477232, "post_id": 51978885, "comment_id": 91077152, "body": "The implementation of <code>getGlobalManager</code> seems like a singleton pattern that uses <code>IORef</code>. I tested in the REPL, if I call <code>newTlsManager</code> twice, the second time is as slow as the first time. But If I call <code>getGlobalManager</code> twice, the second time is way faster than the first time. Isn&#39;t the second time using the cached Manager created from the first time?"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 1, "creation_date": 1535478653, "post_id": 51978885, "comment_id": 91077792, "body": "@zhangchiqing I have to see the code once more to confirm it. I will try to see it tomorrow."}, {"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 0, "creation_date": 1535484151, "post_id": 51978885, "comment_id": 91080332, "body": "Thanks @Sibi. My only concern is if there are multiple calls to <code>getGlobalManager</code> simultaneously before the first <code>Manager</code> gets cached, then there will be multiple <code>Manager</code> created. But I think such chance can be mitigated by calling <code>getGlobalManager</code> at application startup phase as a &quot;warm up&quot;. No?"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 1, "creation_date": 1535639144, "post_id": 51978885, "comment_id": 91149411, "body": "@LeoZhang I just confirmed this with Michael Snoyman: Using <code>getGlobalManager</code> inside <code>printResponse</code> shouldn&#39;t be problematic as it&#39;s cached and multiple <code>Manger</code> won&#39;t be created."}, {"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 0, "creation_date": 1535648470, "post_id": 51978885, "comment_id": 91155085, "body": "Awesome! Thank you Sibi"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1568715978, "post_id": 51978885, "comment_id": 102354476, "body": "@Sibi <code>getGlobalManager</code> internally uses <code>globalManager</code> which uses <code>unsafePerformIO</code>. Is this really safe? Any issues you&#39;ve faced in production?"}], "tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 3, "last_activity_date": 1535002132, "creation_date": 1535002132, "answer_id": 51978885, "question_id": 51976632, "link": "https://stackoverflow.com/questions/51976632/share-http-manager-between-requests/51978885#51978885", "title": "Share http Manager between requests", "body": "<p>These days, I just use <a href=\"https://www.stackage.org/haddock/lts-12.7/http-client-tls-0.3.5.3/Network-HTTP-Client-TLS.html#v:getGlobalManager\" rel=\"nofollow noreferrer\">getGlobalManager</a>. Recently, Yesod were also made to use this by default. Also you don't need to use separate manager for http and https. A sample example demonstrating it:</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack script --resolver lts-12.7\n{-# LANGUAGE OverloadedStrings #-}\nimport qualified Data.ByteString.Lazy.Char8 as L8\nimport           Network.HTTP.Client        (defaultManagerSettings, Manager)\nimport           Network.HTTP.Simple\nimport Network.HTTP.Client.TLS (getGlobalManager)\n\nmain :: IO ()\nmain = do\n    manager &lt;- getGlobalManager\n\n    printResponse manager \"http://httpbin.org/get\"\n    printResponse manager \"https://google.com\"\n\nprintResponse :: Manager -&gt; Request -&gt; IO ()    \nprintResponse mgr url = do\n  let request = setRequestManager mgr url\n  response &lt;- httpLBS request\n\n  putStrLn $ \"The status code was: \" ++  show (getResponseStatusCode response)\n  print $ getResponseHeader \"Content-Type\" response\n  L8.putStrLn $ getResponseBody response\n</code></pre>\n"}], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 51978885, "answer_count": 1, "score": 0, "last_activity_date": 1535002132, "creation_date": 1534981930, "question_id": 51976632, "link": "https://stackoverflow.com/questions/51976632/share-http-manager-between-requests", "title": "Share http Manager between requests", "body": "<p>I'm using the library http-client and http-client-tls to make http requests.</p>\n\n<p>The documentation <a href=\"https://haskell-lang.org/library/http-client\" rel=\"nofollow noreferrer\">https://haskell-lang.org/library/http-client</a> mentioned \"It is highly advisable to share your Manager value throughout your application\"</p>\n\n<p>If I'm building a function that takes a <code>String</code> as an API HOST (i.e \"<a href=\"http://localhost:3030\" rel=\"nofollow noreferrer\">http://localhost:3030</a>\", or \"<a href=\"https://www.example.org\" rel=\"nofollow noreferrer\">https://www.example.org</a>\") and makes a request to it, do I need to create two managers - a http Manager to share between http requests if the API host is <code>http</code>, and a https Manager to share between https requests if the API host is <code>https</code>?</p>\n\n<p>What's the best practice to \"share\" the Manager between requests? </p>\n\n<p>Is it possible to have a globally shared Manager or Managers (ssl and non-ssl)? Since a http request will be sent in an IO anyway, is it possible to  create globally shared Managers in an IO and then read the corresponding Manager within an IO whenever sending a http/https request.</p>\n"}, {"tags": ["haskell", "newtype"], "comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1534976418, "post_id": 51975899, "comment_id": 90902262, "body": "The answers to both the question in the title and the one in your body are &quot;yes&quot;. Beyond that, I&#39;m not sure what you&#39;re asking."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1534977082, "post_id": 51975899, "comment_id": 90902428, "body": "Why wouldn&#39;t this be possible? Remember that, in Haskell, functions are also data."}], "answers": [{"comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 2, "creation_date": 1535009628, "post_id": 51976236, "comment_id": 90910649, "body": "It&#39;s only opaque if the constructor isn&#39;t exported, isn&#39;t it?"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 2, "last_activity_date": 1534978464, "creation_date": 1534978464, "answer_id": 51976236, "question_id": 51975899, "link": "https://stackoverflow.com/questions/51975899/can-we-declare-a-newtype-with-a-function/51976236#51976236", "title": "Can we declare a newtype with a function?", "body": "<blockquote>\n  <p><code>(s -&gt; (s, a))</code> is a function, isn't it?</p>\n</blockquote>\n\n<p>Not sure if that answers your question, but: technically speaking <em>no</em>, <code>(s -&gt; (s, a))</code> is not a function, it's a <em>function type</em>. I.e., a type whose values are functions. Thus <code>State</code> is a new type whose values are internally given as functions (but from the outside, are just &ldquo;values of some opaque, named type&rdquo;).</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1534979329, "creation_date": 1534979329, "answer_id": 51976342, "question_id": 51975899, "link": "https://stackoverflow.com/questions/51975899/can-we-declare-a-newtype-with-a-function/51976342#51976342", "title": "Can we declare a newtype with a function?", "body": "<p>Functions are values, too. As far as defining a type, record syntax simply provides a shortcut for</p>\n\n<pre><code>newtype State s a = StateOf (s -&gt; (s, a))\n\nrunState :: State s a -&gt; s -&gt; (s, a)\nrunState (StateOf f) = f\n</code></pre>\n\n<p>(Record syntax also provides additional pattern-matching and value construction syntax.)</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 158, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1534979329, "creation_date": 1534976177, "question_id": 51975899, "link": "https://stackoverflow.com/questions/51975899/can-we-declare-a-newtype-with-a-function", "title": "Can we declare a newtype with a function?", "body": "<pre><code>newtype State s a = StateOf (s -&gt; (s, a))\n</code></pre>\n\n<p><code>(s -&gt; (s, a))</code> is a function, isn't it?</p>\n\n<p><code>newtype State s a = State { runState :: s -&gt; (s, a) }</code> such expression make sense since record syntax is allowed. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1534972476, "post_id": 51973633, "comment_id": 90900869, "body": "The only reason this doesn&#39;t work is that the types don&#39;t match up. You <i>can</i> use <code>where</code> in this context - read the error message!"}], "answers": [{"comments": [{"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 0, "creation_date": 1534965581, "post_id": 51973710, "comment_id": 90897896, "body": "Does it though?  Copy/pasting the OP&#39;s code into ghci works fine for me.  I&#39;m curious as to what the error he reports is."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 0, "creation_date": 1534965688, "post_id": 51973710, "comment_id": 90897939, "body": "Ah, good point. I fixed the other error the OP didn&#39;t point out specifically, which is that <code>fun</code> has the wrong type to be used as it is in the <code>do</code> block."}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 0, "creation_date": 1534966301, "post_id": 51973710, "comment_id": 90898214, "body": "Isn&#39;t that the requirement that <code>main :: IO ()</code>?  So having a <code>main :: IO a</code> would also be rejected by the compiler (unless I am misremembering something)."}, {"owner": {"reputation": 483, "user_id": 8953741, "user_type": "registered", "accept_rate": 71, "profile_image": "https://graph.facebook.com/118643528911159/picture?type=large", "display_name": "Aron Lee", "link": "https://stackoverflow.com/users/8953741/aron-lee"}, "edited": false, "score": 0, "creation_date": 1534966461, "post_id": 51973710, "comment_id": 90898283, "body": "you nail it, thanks. Now I understand a bit about &#39;where and let  in&#39;"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1534966815, "post_id": 51973710, "comment_id": 90898454, "body": "<code>main</code> is just a name that can be bound to anything. If it is used as the entry point to a complete program, then it must be bound to an <code>IO</code> action for the program to run. Here, the more general monad constraint simply comes from the fact that it is bound to a value defined by a <code>do</code> block."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1534967240, "post_id": 51973710, "comment_id": 90898632, "body": "The Haskell2010 report simply says that a Haskell program must have a module <code>Main</code> that exports a name <code>main</code> with type <code>IO t</code>, whose return value of type <code>t</code> is ignored. <code>t</code> is not required to be <code>()</code>, but it&#39;s a good reminder that your program won&#39;t be affected by whatever value the root <code>IO</code> action returns."}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 0, "creation_date": 1534968547, "post_id": 51973710, "comment_id": 90899172, "body": "Understood.  As an aside, it&#39;s perfectly valid (if not a bit arcane) to write main (which has the type <code>Int</code>) as OP did.  I guess is because of the monad instance for <code>(-&gt;)</code>?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1534969200, "post_id": 51973710, "comment_id": 90899462, "body": "Ah, OK. No, I think the reason is that no other features of the <code>do</code> syntax (specifically, <code>&lt;-</code> or the implicit <code>&gt;&gt;</code>) or a monad (like a call to <code>return</code>) are used. <code>do fun x</code> gets reduced to simply <code>fun x</code>."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 5, "last_activity_date": 1534970074, "last_edit_date": 1534970074, "creation_date": 1534965449, "answer_id": 51973710, "question_id": 51973633, "link": "https://stackoverflow.com/questions/51973633/use-where-outside-the-haskell-function/51973710#51973710", "title": "Use where outside the Haskell function", "body": "<p>Your function has the wrong type to be used as the final expression in a <code>do</code> block. It needs to return an <code>Monad m =&gt; m Int</code> value, not simply an <code>Int</code>. As <code>main</code> (in its usual use) is required to be an <code>IO</code> action, this means <code>m</code> should be <code>IO</code>.</p>\n\n<pre><code> fun :: Int -&gt; IO Int\n fun n = return (n + 1)    \n</code></pre>\n\n<p>A <code>let</code> would be more appropriate than a <code>where</code> in this case, though.</p>\n\n<pre><code>main = do\n  let x = 30 in fun x\n</code></pre>\n\n<p>Now, <code>x</code> is in scope <em>only</em> for the call to <code>fun</code>. If you wrote</p>\n\n<pre><code>main = do\n  let x = 30\n  fun x\n</code></pre>\n\n<p>then <code>x</code> is technically in scope for the rest of the <code>do</code> block, not just the call to <code>fun</code>. Despite sharing the same keyword <code>let</code>, there is a distinct difference between a <code>let</code> in a <code>do</code> block and a regular <code>let</code> expression. (The relationship is that</p>\n\n<pre><code>do\n  let name = value\n  foo\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>let name = value\nin do\n    foo\n</code></pre>\n\n<p>)</p>\n\n<hr>\n\n<p>Note that <code>do</code> itself does <em>not</em> create a monadic value; it is simply syntactic sugar for various operators which <em>assume</em> monadic properties. A quick overview:</p>\n\n<ol>\n<li><code>do { x &lt;- y; foo x; }</code> becomes <code>y &gt;&gt;= (\\x -&gt; foo x)</code>.</li>\n<li><code>do { foo; bar; }</code> becomes <code>foo &gt;&gt; bar</code>.</li>\n<li><code>do { let x = y; foo; }</code> becomes <code>let x = y in do foo</code></li>\n<li><code>do foo</code> becomes <code>foo</code>.</li>\n</ol>\n\n<p>Most relevant to your code is rule 4; a single expression in a <code>do</code> block is equivalent to the expression by itself, meaning you can strip the <code>do</code>. Only after the <code>do</code> block is desugared does Haskell begin to type-check the result.</p>\n"}], "owner": {"reputation": 483, "user_id": 8953741, "user_type": "registered", "accept_rate": 71, "profile_image": "https://graph.facebook.com/118643528911159/picture?type=large", "display_name": "Aron Lee", "link": "https://stackoverflow.com/users/8953741/aron-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 1, "accepted_answer_id": 51973710, "answer_count": 1, "score": -1, "last_activity_date": 1534970074, "creation_date": 1534965118, "question_id": 51973633, "link": "https://stackoverflow.com/questions/51973633/use-where-outside-the-haskell-function", "title": "Use where outside the Haskell function", "body": "<p>I'm wondering whether we can use <strong>where</strong> outside a function?\ne.g.</p>\n\n<pre><code>fun::Int-&gt;Int\nfun n = n + 1\n\nmain = do\n     fun x where x = 30\n</code></pre>\n\n<p>Obviously it does't work when I compile it,</p>\n\n<p>I want to declare x as local variable for <strong>fun</strong> only   </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1534964061, "post_id": 51973388, "comment_id": 90897191, "body": "What part about it specifically are you asking about? <code>(&#47;=x)</code>?"}, {"owner": {"reputation": 31, "user_id": 10261354, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/--tWxvE2Sx3k/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaN5E9l37LN4D-KnkZOR7UEQqwQ4QQ/mo/photo.jpg?sz=128", "display_name": "pippo inzaghi", "link": "https://stackoverflow.com/users/10261354/pippo-inzaghi"}, "reply_to_user": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1534964161, "post_id": 51973388, "comment_id": 90897245, "body": "the entire let (group1, rest) = splitWhen (/=x) xs                    in (x:group1) : group rest"}, {"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1534964287, "post_id": 51973388, "comment_id": 90897303, "body": "You&#39;ll need to look up deconstruction to figure out the part right after <code>let</code>, and recursion and the cons constructor for the part after <code>in</code>. Explaining the entirety of those lines is overly broad though."}], "answers": [{"comments": [{"owner": {"reputation": 31, "user_id": 10261354, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/--tWxvE2Sx3k/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaN5E9l37LN4D-KnkZOR7UEQqwQ4QQ/mo/photo.jpg?sz=128", "display_name": "pippo inzaghi", "link": "https://stackoverflow.com/users/10261354/pippo-inzaghi"}, "edited": false, "score": 0, "creation_date": 1534964936, "post_id": 51973531, "comment_id": 90897597, "body": "So i apply <code>splitWhen</code> first and this generates me a tuple of lists <code>([a],[a])</code>. To this i apply the lambda function, which adds the x to the first list of the tuple and it iterate to the second. Did i get it?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 31, "user_id": 10261354, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/--tWxvE2Sx3k/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaN5E9l37LN4D-KnkZOR7UEQqwQ4QQ/mo/photo.jpg?sz=128", "display_name": "pippo inzaghi", "link": "https://stackoverflow.com/users/10261354/pippo-inzaghi"}, "edited": false, "score": 1, "creation_date": 1534965139, "post_id": 51973531, "comment_id": 90897700, "body": "Basically. Keep in mind, though, that Haskell is lazy, so <code>splitWhen</code> will only be called once someone starts using the return value of <code>group</code>. Better to say that <code>group1</code> and <code>rest</code> are bound to the tuple elements returned by <code>splitWhen</code> and used in the body of the <code>let</code> expression to produce the desired list."}, {"owner": {"reputation": 31, "user_id": 10261354, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/--tWxvE2Sx3k/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaN5E9l37LN4D-KnkZOR7UEQqwQ4QQ/mo/photo.jpg?sz=128", "display_name": "pippo inzaghi", "link": "https://stackoverflow.com/users/10261354/pippo-inzaghi"}, "edited": false, "score": 0, "creation_date": 1534965386, "post_id": 51973531, "comment_id": 90897812, "body": "Yes, Thanks you very much."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 5, "last_activity_date": 1534965594, "last_edit_date": 1534965594, "creation_date": 1534964671, "answer_id": 51973531, "question_id": 51973388, "link": "https://stackoverflow.com/questions/51973388/understanding-a-let-expression-in-haskell/51973531#51973531", "title": "Understanding a let-expression in Haskell", "body": "<p><code>let</code> expressions are syntactic sugar for the immediate application of an anonymous function. That is,</p>\n\n<pre><code>let (group1, rest) = splitWhen (/=x) xs\n    in (x:group1) : group rest\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>(\\(group1, rest) -&gt; (x:group1) : group rest) (splitWhen (/=x) xs)\n</code></pre>\n\n<p>Put another way, <code>let</code> inverts the positions of the body of the function and the argument to the function. Compare</p>\n\n<pre><code>let name =  value in body\n(  \\name -&gt; body  )  value\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "is_accepted": false, "score": 2, "last_activity_date": 1534965930, "creation_date": 1534965930, "answer_id": 51973824, "question_id": 51973388, "link": "https://stackoverflow.com/questions/51973388/understanding-a-let-expression-in-haskell/51973824#51973824", "title": "Understanding a let-expression in Haskell", "body": "<pre><code>let (group1, rest) = splitWhen (/=x) xs\n</code></pre>\n\n<p>This calls <code>splitWhen (/=x) xs</code> and uses pattern matching on the returned tuple to assign it to <code>(group1, rest)</code>. Then these values can be used in</p>\n\n<pre><code>in (x:group1) : group rest\n</code></pre>\n\n<p>To calculate the final result of the function.</p>\n\n<p>You can implement this as a <code>where</code> clause and get the same behavior:</p>\n\n<pre><code>group (x:xs) = (x:group1) : group rest\n    where (group1, rest) = splitWhen (/=x) xs\n</code></pre>\n"}], "owner": {"reputation": 31, "user_id": 10261354, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/--tWxvE2Sx3k/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaN5E9l37LN4D-KnkZOR7UEQqwQ4QQ/mo/photo.jpg?sz=128", "display_name": "pippo inzaghi", "link": "https://stackoverflow.com/users/10261354/pippo-inzaghi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 240, "favorite_count": 1, "accepted_answer_id": 51973531, "answer_count": 2, "score": 0, "last_activity_date": 1534965930, "creation_date": 1534963891, "last_edit_date": 1534964488, "question_id": 51973388, "link": "https://stackoverflow.com/questions/51973388/understanding-a-let-expression-in-haskell", "title": "Understanding a let-expression in Haskell", "body": "<p>I'm new to Haskell and currently studying it for an exam. I have been learning it from learnyouahaskell. I don't understand the following let-expression in the group function.</p>\n\n<pre><code>splitWhen :: (a -&gt; Bool) -&gt; [a] -&gt; ([a],[a])    \nsplitWhen p xs = (takeWhile (not . p) xs, dropWhile (not . p) xs)\n\ngroup :: (Eq a) =&gt; [a] -&gt; [[a]]\ngroup [] = []\ngroup (x:xs) = let (group1, rest) = splitWhen (/=x) xs\n                   in (x:group1) : group rest\n</code></pre>\n\n<p>I know what splitWhen does: <code>splitWhen even [1,2,3] =&gt; ([1],[2,3])</code></p>\n\n<p>I know that the function group produce the follow:</p>\n\n<pre><code>group [1,1,2,1,3,3,3] =&gt; [[1,1],[2],[1],[3,3,3]]\n</code></pre>\n\n<p>I don't understand how it works. Can someone please explain it to me?\nThank you.</p>\n"}, {"tags": ["haskell", "monads"], "answers": [{"comments": [{"owner": {"reputation": 169, "user_id": 4386129, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/100000394595220/picture?type=large", "display_name": "BarbedWire", "link": "https://stackoverflow.com/users/4386129/barbedwire"}, "edited": false, "score": 0, "creation_date": 1534956305, "post_id": 51971482, "comment_id": 90893627, "body": "I was just trying to understand where that monad was and what type it had :)) Thank you,"}, {"owner": {"reputation": 169, "user_id": 4386129, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/100000394595220/picture?type=large", "display_name": "BarbedWire", "link": "https://stackoverflow.com/users/4386129/barbedwire"}, "edited": false, "score": 0, "creation_date": 1534964270, "post_id": 51971482, "comment_id": 90897298, "body": "Thank you all for clarifying me the main thing I&#39;ve missed at the very beginning: there is no need to either ReaderT or (,) b monad instances when the functional arrow  (reader) is the only monad I need. Since the function signature is a monad we can use do-notation inside and every row inside the do-block is the monadic computation - thats the function which has the same argument - a tuple. And this do-version can be actually desugared like David Young suggested. No ReaderT, no partial tuple!! Finally this little puzzle has been solved. :)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1534956274, "last_edit_date": 1534956274, "creation_date": 1534955947, "answer_id": 51971482, "question_id": 51971403, "link": "https://stackoverflow.com/questions/51971403/haskell-type-inference-readert-and-tuple/51971482#51971482", "title": "Haskell type inference (ReaderT and tuple)", "body": "<pre><code>ex3 :: (a, b) -&gt; (b, a)\n</code></pre>\n\n<p>means, in prefix notation</p>\n\n<pre><code>ex3 :: (-&gt;) (a, b) (b, a)\n       -----------m\n                   ------t\n</code></pre>\n\n<p>Hence the monad is <code>m = (-&gt;) (a, b)</code> which is the Reader monad (up to isomorphism) with a pair as its implicit argument / read-only state.</p>\n\n<p>You don't need a monoid. The plain reader monad is enough. If you want to use <code>ReaderT</code>, use the identity monad as the inner monad.</p>\n\n<pre><code>ex2 :: Monoid b =&gt; ReaderT (a, b) Identity (b, a)\nex2 = ReaderT $ \n  \\pair -&gt; Identity (fst pair) &gt;&gt;= \n  \\a -&gt; Identity (snd pair) &gt;&gt;= \n  \\b -&gt; Identity (b, a) \n</code></pre>\n\n<p>Of course, the code above could be simplified.</p>\n"}, {"tags": [], "owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "is_accepted": false, "score": 2, "last_activity_date": 1534962785, "last_edit_date": 1534962785, "creation_date": 1534956621, "answer_id": 51971657, "question_id": 51971403, "link": "https://stackoverflow.com/questions/51971403/haskell-type-inference-readert-and-tuple/51971657#51971657", "title": "Haskell type inference (ReaderT and tuple)", "body": "<p>You have not quite desugared this from <code>do</code> notation to <code>(&gt;&gt;=)</code> calls. A direct translation would look like this:</p>\n\n<pre><code>ex2 :: ReaderT (a, b) ((,) b) a\nex2 = ReaderT $\n  fst &gt;&gt;= (\\a -&gt;         -- a &lt;- fst\n  snd &gt;&gt;= (\\b -&gt;         -- b &lt;- snd\n  return (b, a)))        -- return (b, a)\n</code></pre>\n\n<p>Also, you aren't actually using the monadness of <code>(,) b</code>, even though it fits into the slot here for the \"inner monad\" of <code>ReaderT</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 169, "user_id": 4386129, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/100000394595220/picture?type=large", "display_name": "BarbedWire", "link": "https://stackoverflow.com/users/4386129/barbedwire"}, "is_accepted": false, "score": 0, "last_activity_date": 1534965517, "creation_date": 1534965517, "answer_id": 51973733, "question_id": 51971403, "link": "https://stackoverflow.com/questions/51971403/haskell-type-inference-readert-and-tuple/51973733#51973733", "title": "Haskell type inference (ReaderT and tuple)", "body": "<p>So to summarize: </p>\n\n<ol>\n<li>Type of monad is (->) r - just function or simple reader; </li>\n<li><p>How to desugar the initial function without do: </p>\n\n<pre><code>ex3' :: (a, b) -&gt; (b, a)\nex3' = fst &gt;&gt;=\n  \\a -&gt; snd &gt;&gt;=\n  \\b -&gt; return (b, a)\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 169, "user_id": 4386129, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/100000394595220/picture?type=large", "display_name": "BarbedWire", "link": "https://stackoverflow.com/users/4386129/barbedwire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 1, "answer_count": 3, "score": 1, "last_activity_date": 1534965517, "creation_date": 1534955648, "question_id": 51971403, "link": "https://stackoverflow.com/questions/51971403/haskell-type-inference-readert-and-tuple", "title": "Haskell type inference (ReaderT and tuple)", "body": "<p>Exploring this material: <a href=\"https://artyom.me/lens-over-tea-2\" rel=\"nofollow noreferrer\">Lens over tea</a> I've encountered an interesting (simple at first) point:</p>\n\n<pre><code>ex3 :: (a, b) -&gt; (b, a)\nex3 = do\n a &lt;- fst\n b &lt;- snd\n return (b, a)\n</code></pre>\n\n<p>Everything's fine, but what type of monad does this function use (since we have a do-block inside). After a few attempts I arrived to this conclusion:</p>\n\n<pre><code>ex2 :: ReaderT (a, b) ((,) b) a\nex2 = ReaderT $ do\n  a &lt;- fst\n  b &lt;- snd \n  return (b, a)\n\nex3 :: (a, b) -&gt; (b, a)\nex3 = runReaderT ex2\n</code></pre>\n\n<p>So, we have ReaderT that uses inner monad ((,) b). Interestingly enough - I got not enough satisfaction with this and decided to rewrite ex2 not using do-notation. This is what I got:</p>\n\n<pre><code>ex2 :: Monoid b =&gt; ReaderT (a, b) ((,) b) a\nex2 = ReaderT $ \n  \\pair -&gt; return (fst pair) &gt;&gt;= \n  \\a -&gt; return (snd pair) &gt;&gt;= \n  \\b -&gt; (b, a) \n</code></pre>\n\n<p>or even: </p>\n\n<pre><code>ex2 :: Monoid b =&gt; ReaderT (a, b) ((,) b) a\nex2 = ReaderT $ \n  \\pair -&gt; (mempty, fst pair) &gt;&gt;= \n  \\a -&gt; (mempty, snd pair) &gt;&gt;= \n  \\b -&gt; (b, a) \n</code></pre>\n\n<p>Both variants require b to have a Monoid type restriction. \nThe question is: can I write this functions with (>>=) only and without using a Monoid restriction - like we have with do-notation variant? Apparently we do the same with or without do-notation. Maybe the even difference, that we have to construct monads at every step in the second and thirst fuctions and this requires us to state that \"b\" should be a monoid - some monoid. And in the first case we just extract our values from some monad - not constructing them. Can anybody explain am I thinking in the right direction? </p>\n\n<p>Thank you!!</p>\n"}, {"tags": ["list", "haskell", "prolog", "replicate", "successor-arithmetics"], "comments": [{"owner": {"reputation": 21445, "user_id": 812818, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/bffad8ee5a559e7b747a839a1ed35416?s=128&d=identicon&r=PG", "display_name": "Daniel Lyons", "link": "https://stackoverflow.com/users/812818/daniel-lyons"}, "edited": false, "score": 2, "creation_date": 1534954902, "post_id": 51971113, "comment_id": 90892847, "body": "Prolog doesn&#39;t evaluate like that. Try <code>replicate(s(X), Y, [Y|Z]) :- replicate(X, Y, Z).</code> instead."}, {"owner": {"reputation": 13, "user_id": 9820128, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edb6c9b590ad0ad536770f70e50e4a36?s=128&d=identicon&r=PG&f=1", "display_name": "HaskellDude", "link": "https://stackoverflow.com/users/9820128/haskelldude"}, "reply_to_user": {"reputation": 21445, "user_id": 812818, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/bffad8ee5a559e7b747a839a1ed35416?s=128&d=identicon&r=PG", "display_name": "Daniel Lyons", "link": "https://stackoverflow.com/users/812818/daniel-lyons"}, "edited": false, "score": 0, "creation_date": 1534955025, "post_id": 51971113, "comment_id": 90892920, "body": "Oh alright that worked out! Thanks a lot @DanielLyons"}, {"owner": {"reputation": 21445, "user_id": 812818, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/bffad8ee5a559e7b747a839a1ed35416?s=128&d=identicon&r=PG", "display_name": "Daniel Lyons", "link": "https://stackoverflow.com/users/812818/daniel-lyons"}, "edited": false, "score": 0, "creation_date": 1534955658, "post_id": 51971113, "comment_id": 90893279, "body": "No problem. :) Just pay attention to Prolog, it&#39;s evaluation scheme is <i>very</i> different than other languages like Haskell. :)"}, {"owner": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1535028481, "post_id": 51971113, "comment_id": 90921715, "body": "@Will: Is the <a href=\"https://stackoverflow.com/questions/tagged/haskell\">haskell</a> tag really appropriate?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "edited": false, "score": 0, "creation_date": 1535043160, "post_id": 51971113, "comment_id": 90931111, "body": "@false the OP referred to the Haskell library function, as a reference."}, {"owner": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1535045290, "post_id": 51971113, "comment_id": 90932149, "body": "@Will: Indeed, but why would anyone who searches tag <a href=\"https://stackoverflow.com/questions/tagged/haskell\">haskell</a>, want to find this question."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "edited": false, "score": 0, "creation_date": 1535045432, "post_id": 51971113, "comment_id": 90932214, "body": "@false that&#39;s how I understand tagging: to reflect what&#39;s in the question."}, {"owner": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "edited": false, "score": 0, "creation_date": 1535045564, "post_id": 51971113, "comment_id": 90932293, "body": "They are rather here to make things discoverable."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "edited": false, "score": 0, "creation_date": 1535045691, "post_id": 51971113, "comment_id": 90932349, "body": "@false we have five slots to fill. I pick the five most pertinent things about the question and use them as tags. Haskell here seems to be the least pertinent, but still pertinent. I don&#39;t have anything to replace it with."}, {"owner": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1535093367, "post_id": 51971113, "comment_id": 90946876, "body": "@Will: We do not have to fill them all."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "edited": false, "score": 0, "creation_date": 1535117333, "post_id": 51971113, "comment_id": 90960735, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/178687/discussion-between-will-ness-and-false\">continue this discussion in chat</a>."}], "answers": [{"comments": [{"owner": {"reputation": 10335, "user_id": 772868, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/dt3Kv.jpg?s=128&g=1", "display_name": "false", "link": "https://stackoverflow.com/users/772868/false"}, "edited": false, "score": 1, "creation_date": 1535028675, "post_id": 51976627, "comment_id": 90921844, "body": "... and what&#39;s further not the same, is that <code>replicate(N, s(0), [A,B])</code> determines <code>N</code> <i>and</i> <code>A</code> and <code>B</code>."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 2, "last_activity_date": 1535006485, "last_edit_date": 1535006485, "creation_date": 1534981899, "answer_id": 51976627, "question_id": 51971113, "link": "https://stackoverflow.com/questions/51971113/succ-not-getting-removed-on-pred/51976627#51976627", "title": "succ not getting removed on pred", "body": "<p>This is Haskell's <code>replicate</code> coded with the (deprecated) <code>n+k</code> patterns:</p>\n\n<pre><code>replicate 0 _ = []\nreplicate (n+1) a = a : x where x = replicate n a\n</code></pre>\n\n<p>This directly corresponds to the Prolog definition:</p>\n\n<pre><code>replicate(0, _, []).\nreplicate(s(N), A, [A | X]) :- replicate(N, A, X).\n</code></pre>\n\n<p>We just move the result into the arguments list, and make it the last argument to the predicate: </p>\n\n<pre><code>    x = replicate n a    -----&gt;     replicate(N, A, X).\n</code></pre>\n\n<p>The pattern matching is the same. What's not the same, is that Prolog is not an expression-oriented language. There are no expressions which get evaluated before being used as arguments in the next <em>function</em> <em>call</em>; instead, there are terms which are auto-quoted, always, used <em>as is</em> as arguments to <em>predicates</em>. </p>\n"}], "owner": {"reputation": 13, "user_id": 9820128, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edb6c9b590ad0ad536770f70e50e4a36?s=128&d=identicon&r=PG&f=1", "display_name": "HaskellDude", "link": "https://stackoverflow.com/users/9820128/haskelldude"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 1, "accepted_answer_id": 51976627, "answer_count": 1, "score": 1, "last_activity_date": 1535028441, "creation_date": 1534954608, "last_edit_date": 1535028441, "question_id": 51971113, "link": "https://stackoverflow.com/questions/51971113/succ-not-getting-removed-on-pred", "title": "succ not getting removed on pred", "body": "<pre><code>/* Define a Prolog predicate replicate/3 which corresponds to\n * the Haskell function of the same name, except that the numeric\n * argument is expressed symbolically.\n *\n * For example, replicate(s(s(s(0))),a,[a,a,a]) should be satisfied.\n */\n</code></pre>\n\n<p>So far I've come to this solution:</p>\n\n<pre><code>replicate(0,_,[]).\nreplicate(X,Y,[Y|Z]) :- replicate(p(X),Y,Z).\n</code></pre>\n\n<p>but the problem is that the s(s(s(0))) is not getting reduced by the pred function. it results into p(p(p(s(s(s(0))))))</p>\n\n<p>could you guys help me out?</p>\n"}, {"tags": ["scala", "haskell", "currying", "function-composition"], "comments": [{"owner": {"reputation": 113221, "user_id": 100754, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/7804ebae32fbadef38537d74a915c22f?s=128&d=identicon&r=PG", "display_name": "Sinan &#220;n&#252;r", "link": "https://stackoverflow.com/users/100754/sinan-%c3%9cn%c3%bcr"}, "edited": false, "score": 0, "creation_date": 1534954548, "post_id": 51971008, "comment_id": 90892630, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/7179229/scala-currying-and-overloading\">Scala, currying and overloading</a>"}, {"owner": {"reputation": 332, "user_id": 3305862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47e8244f4ddb782226025e067ecb0c02?s=128&d=identicon&r=PG", "display_name": "FerranJr", "link": "https://stackoverflow.com/users/3305862/ferranjr"}, "edited": false, "score": 2, "creation_date": 1534954727, "post_id": 51971008, "comment_id": 90892749, "body": "Probably this is the answer you look for <a href=\"https://stackoverflow.com/questions/28566214/andthen-for-function-of-two-arguments-in-scala\" title=\"andthen for function of two arguments in scala\">stackoverflow.com/questions/28566214/&hellip;</a>"}, {"owner": {"reputation": 501, "user_id": 5263758, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7dc1fd8f8eed84ff7d3de811affff38e?s=128&d=identicon&r=PG&f=1", "display_name": "KaC", "link": "https://stackoverflow.com/users/5263758/kac"}, "edited": false, "score": 1, "creation_date": 1535007857, "post_id": 51971008, "comment_id": 90909762, "body": "Thanks for the suggestions, but it&#39;s not the same question. There&#39;s no overloading, and it&#39;s not Function2 since it is curried (so Function1 twice, which has andThen)."}], "answers": [{"tags": [], "owner": {"reputation": 20027, "user_id": 7662670, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fPasV.jpg?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/7662670/tim"}, "is_accepted": true, "score": 2, "last_activity_date": 1535019389, "last_edit_date": 1535019389, "creation_date": 1535017129, "answer_id": 51982710, "question_id": 51971008, "link": "https://stackoverflow.com/questions/51971008/how-to-compose-curried-functions-in-scala/51982710#51982710", "title": "How to compose curried functions in Scala", "body": "<p>This should work:</p>\n\n<pre><code>def x = a _ andThen (_ andThen b)\n</code></pre>\n\n<p>The first <code>_</code> avoids invoking <code>a</code> and makes it into a function value. This value is of type <code>String=&gt;String=&gt;Int</code>, i.e. a function that takes <code>String</code> and returns <code>String=&gt;Int</code>.</p>\n\n<p>The argument to the <code>andThen</code> method is a function that takes the result of the original function and modifies it. So in this case it requires a function that takes <code>String=&gt;Int</code> and returns a new value, a function <code>String=&gt;Boolean</code>. We can fabricate this new function by using <code>andThen</code> on the original function. This takes the result of <code>a</code> and composes it with the new function <code>b</code>.</p>\n"}], "owner": {"reputation": 501, "user_id": 5263758, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7dc1fd8f8eed84ff7d3de811affff38e?s=128&d=identicon&r=PG&f=1", "display_name": "KaC", "link": "https://stackoverflow.com/users/5263758/kac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 382, "favorite_count": 0, "accepted_answer_id": 51982710, "answer_count": 1, "score": -1, "last_activity_date": 1535019389, "creation_date": 1534954213, "last_edit_date": 1535011153, "question_id": 51971008, "link": "https://stackoverflow.com/questions/51971008/how-to-compose-curried-functions-in-scala", "title": "How to compose curried functions in Scala", "body": "<p>Is it possible compose functions in Scala that are curried? For example:</p>\n\n<pre><code>def a(s1: String)(s2: String): Int = s1.length + s2.length\ndef b(n: Int): Boolean = n % 2 == 0\n\ndef x : String =&gt; String =&gt; Boolean = a andThen b\n\nx(\"blabla\")(\"foo\") \n</code></pre>\n\n<p>Edit : </p>\n\n<p>I've found a way of doing it in Haskell :</p>\n\n<pre><code>a :: String -&gt; String -&gt; Int\na s1 s2 = length s1 + length s2\n\nb :: Int -&gt; Bool\nb n = mod n 2 == 0\n\nc :: String -&gt; String -&gt; Bool \nc = curry (b . (uncurry a))\n</code></pre>\n"}, {"tags": ["haskell", "recursive-datastructures", "category-theory"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1534944580, "post_id": 51967948, "comment_id": 90886204, "body": "In a poset category, an initial object is the bottom (&quot;least&quot;), and a final one is the top (&quot;greatest&quot;). So, by extension, it makes sense to call the initial algebra the least fixed point, etc. even if that&#39;s a little abuse, I think."}, {"owner": {"reputation": 938, "user_id": 474311, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/aad241f867909f119502ffbff53849af?s=128&d=identicon&r=PG", "display_name": "Dan Onea\u021b\u0103", "link": "https://stackoverflow.com/users/474311/dan-onea%c8%9b%c4%83"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534945792, "post_id": 51967948, "comment_id": 90887059, "body": "@chi Thanks for the comment! Just to make sure I understand this correctly. One object is initial and the other is terminal, but they are leaving in different categories, right? The first one is initial in <b>F-Alg(C)</b>, the second one is terminal in <b>F-Coalg(C)</b>. I guess we cannot &quot;compare&quot; them, or it just doesn&#39;t matter?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1534946617, "post_id": 51967948, "comment_id": 90887582, "body": "Both are isomorphisms, though. We have <code>a: FA-&gt;A</code> and <code>b: B-&gt;FB</code>. So, in particular, <code>a^-1 : A-&gt;FA</code> is also a coalgebra and <code>b^-1: FB-&gt;B</code> is an algebra. Hence, we get an algebra-morphism <code>A-&gt;B</code> and a coalgebra morphism <code>A-&gt;B</code>. (They might be the same ones if we think of them as C-morphisms). So, we could say that A is &quot;less&quot; than B since there&#39;s a morphism between them in C. It is not a proper comparison since C is a category, not a poset, but there is some analogy. In a sense, a category is an extension of a preorder."}], "answers": [{"comments": [{"owner": {"reputation": 938, "user_id": 474311, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/aad241f867909f119502ffbff53849af?s=128&d=identicon&r=PG", "display_name": "Dan Onea\u021b\u0103", "link": "https://stackoverflow.com/users/474311/dan-onea%c8%9b%c4%83"}, "edited": false, "score": 1, "creation_date": 1535037848, "post_id": 51975967, "comment_id": 90928053, "body": "Thank you for the answer and for the reference \u2013 I&#39;ll check it out! If I understood correctly, the definition of &quot;least fixed point&quot; from category theory generalizes the notion from order theory. I would also like to make the connection with data types: where does the interpretation of recursive data types as least fixed points come from? Is it from domain theory? (I&#39;m sorry, but my background in type theory and semantics is very weak.)"}, {"owner": {"reputation": 9111, "user_id": 90088, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c018f213204496b4bbf481e7c8e6c15c?s=128&d=identicon&r=PG", "display_name": "Bartosz Milewski", "link": "https://stackoverflow.com/users/90088/bartosz-milewski"}, "reply_to_user": {"reputation": 938, "user_id": 474311, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/aad241f867909f119502ffbff53849af?s=128&d=identicon&r=PG", "display_name": "Dan Onea\u021b\u0103", "link": "https://stackoverflow.com/users/474311/dan-onea%c8%9b%c4%83"}, "edited": false, "score": 2, "creation_date": 1535132856, "post_id": 51975967, "comment_id": 90969633, "body": "Adamek gives an interesting example of the identity functor, for which every object is a fixed point, but there is only one least fixed point (up to isomorphism)--the initial object."}], "tags": [], "owner": {"reputation": 9111, "user_id": 90088, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c018f213204496b4bbf481e7c8e6c15c?s=128&d=identicon&r=PG", "display_name": "Bartosz Milewski", "link": "https://stackoverflow.com/users/90088/bartosz-milewski"}, "is_accepted": false, "score": 3, "last_activity_date": 1534976631, "creation_date": 1534976631, "answer_id": 51975967, "question_id": 51967948, "link": "https://stackoverflow.com/questions/51967948/why-do-initial-algebras-correspond-to-data-and-final-coalgebras-to-codata/51975967#51975967", "title": "Why do initial algebras correspond to data and final coalgebras to codata?", "body": "<p>My understanding is that, in principle, there may be many solutions to the fixed point equation <code>T \u2245 F T</code>. By Lambek's lemma, the initial algebra, if it exists, is one of those fixed points. In fact it's the least fixed point. </p>\n\n<p>There is a universal condition that defines the <em>least</em> fixed point, along the lines of there being a unique morphism to any other fixed point that satisfy certain commutation conditions. </p>\n\n<p>In other words, not every fixed point defines the initial algebra. </p>\n\n<p>The same argument applies to final coalgebras and greatest fixed points. </p>\n\n<p>See, for instance, <a href=\"https://core.ac.uk/download/pdf/82239173.pdf\" rel=\"nofollow noreferrer\">Least Fixed Point of a Functor </a>.</p>\n"}], "owner": {"reputation": 938, "user_id": 474311, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/aad241f867909f119502ffbff53849af?s=128&d=identicon&r=PG", "display_name": "Dan Onea\u021b\u0103", "link": "https://stackoverflow.com/users/474311/dan-onea%c8%9b%c4%83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 5, "answer_count": 1, "score": 7, "last_activity_date": 1534976631, "creation_date": 1534944279, "last_edit_date": 1534948282, "question_id": 51967948, "link": "https://stackoverflow.com/questions/51967948/why-do-initial-algebras-correspond-to-data-and-final-coalgebras-to-codata", "title": "Why do initial algebras correspond to data and final coalgebras to codata?", "body": "<p>If I understand correctly, we can model inductive data types as initial F-algebras and co-inductive data types as final F-coalgebras (for an appropriate endofunctor <code>F</code>) [<a href=\"https://en.wikipedia.org/wiki/Initial_algebra#Use_in_computer_science\" rel=\"noreferrer\">1</a>]. I understand that according to Lambek's lemma the initial algebras (and final coalgebras) are fixed point solutions of the isomorphism <code>T \u2245 F T</code>, but I don't see why the initial algebra is the <em>least</em> fixed point, while the final coalgebra is the <em>greatest</em> fixed point. (Is it obvious that the isomorphism <code>T \u2245 F T</code> has a solution?)</p>\n\n<p>Also I'm not really clear on how are inductive and co-inductive data types defined in type theory. Are there any recommended resources on this topic and maybe their relationship to category theory?</p>\n\n<p>Thank you!</p>\n"}, {"tags": ["haskell", "visual-studio-code"], "comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 1, "creation_date": 1534947568, "post_id": 51967935, "comment_id": 90888217, "body": "Have you followed <a href=\"https://github.com/haskelly-dev/Haskelly#installation\" rel=\"nofollow noreferrer\">the installation instructions</a>? Specifically, have you run <code>stack build intero</code> in your code directory?"}, {"owner": {"reputation": 2781, "user_id": 1540547, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/4f07f7dc869bd71c0ba13719468daeab?s=128&d=identicon&r=PG", "display_name": "jorgen", "link": "https://stackoverflow.com/users/1540547/jorgen"}, "reply_to_user": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1535094400, "post_id": 51967935, "comment_id": 90947347, "body": "Yep! (Now I have a regression to this error anyway, probably about time to give up: <a href=\"https://stackoverflow.com/questions/51949355/vscode-with-git-submodules-gives-errors/51949599?noredirect=1#comment90858320_51949599\" title=\"vscode with git submodules gives errors\">stackoverflow.com/questions/51949355/&hellip;</a>)"}], "owner": {"reputation": 2781, "user_id": 1540547, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/4f07f7dc869bd71c0ba13719468daeab?s=128&d=identicon&r=PG", "display_name": "jorgen", "link": "https://stackoverflow.com/users/1540547/jorgen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 166, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1534948213, "creation_date": 1534944234, "last_edit_date": 1534948213, "question_id": 51967935, "link": "https://stackoverflow.com/questions/51967935/vscode-haskelly-error", "title": "VSCode Haskelly error", "body": "<p>I'm trying to use VSCode with the extension <code>Haskelly</code> to work with <code>haskell</code>. When I select a word, right click and choose \"Go to definition\" or \"Peek definition\" it displays <code>No definition found for ...</code>.</p>\n\n<p>In the console I see the following error:</p>\n\n<p><a href=\"https://i.stack.imgur.com/uIBDs.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/uIBDs.png\" alt=\"Error\"></a></p>\n"}, {"tags": ["haskell", "arrows", "hxt"], "comments": [{"owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 0, "creation_date": 1534934677, "post_id": 51965050, "comment_id": 90880015, "body": "What&#39;s the error message you get?"}, {"owner": {"reputation": 152, "user_id": 3832665, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/520fa46dfc3474e5183d8810bc4ee58b?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/3832665/james"}, "reply_to_user": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 0, "creation_date": 1534935590, "post_id": 51965050, "comment_id": 90880517, "body": "I&#39;ve updated the question to include it!"}], "answers": [{"comments": [{"owner": {"reputation": 152, "user_id": 3832665, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/520fa46dfc3474e5183d8810bc4ee58b?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/3832665/james"}, "edited": false, "score": 0, "creation_date": 1535490433, "post_id": 52064992, "comment_id": 91082831, "body": "Thanks! You have helped me fix it!"}], "tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": true, "score": 1, "last_activity_date": 1535484501, "creation_date": 1535484501, "answer_id": 52064992, "question_id": 51965050, "link": "https://stackoverflow.com/questions/51965050/haskell-hxt-splitting-up-xml-data/52064992#52064992", "title": "Haskell HXT splitting up XML data", "body": "<p>You're declaring <code>func</code> here to be a helper function which takes some <code>a</code>, and then computes <code>a &gt;&gt;&gt; getLayer &gt;&gt;&gt; getRec</code>.</p>\n\n<p>As</p>\n\n<pre><code>getRec :: IOSArrow XmlTree XmlTree\n(&gt;&gt;&gt;)  :: (Category cat) =&gt; cat a b -&gt; cat b c -&gt; cat a c\n</code></pre>\n\n<p>GHC can deduce that <code>a &gt;&gt;&gt; getRec</code> means that <code>cat ~ IOSArrow, b ~ XmlTree, c ~ XmlTree</code>, leaving the variable <code>a</code> with the undecided type <code>IOSArrow a XmlTree</code>, and so</p>\n\n<pre><code>func :: a -&gt; IOSArrow XmlTree XmlTree\n</code></pre>\n\n<p>And</p>\n\n<pre><code>map :: (x -&gt; y) -&gt; [x] -&gt; [y]\n\nmap func :: [a] -&gt; [IOSArrow XmlTree XmlTree]\n</code></pre>\n\n<p>Since</p>\n\n<pre><code>(&gt;&gt;.) :: a b c -&gt; ([c] -&gt; [d]) -&gt; a b d \n\ngetScene &gt;&gt;. :: ([XmlTree] -&gt; [d]) -&gt; IOSArrow XmlTree d\n</code></pre>\n\n<p>And now GHC is very certain that <code>a ~ XmlTree, d ~ IOSArrow XmlTree XmlTree</code>, giving</p>\n\n<pre><code>getScene &gt;&gt;. map func \n  :: IOSArrow \n       XmlTree \n       (IOSArrow XmlTree XmlTree)\n</code></pre>\n\n<p>The issue comes from your <code>map func</code> - <code>&gt;&gt;.</code> expects a pure function as its second argument. <code>func</code>, in your case, is a function producing an arrow, which is not pure.</p>\n\n<p>I guess you might want to use <a href=\"https://hackage.haskell.org/package/hxt-9.3.1.16/docs/Control-Arrow-ArrowList.html#v:applyA\" rel=\"nofollow noreferrer\">applyA</a>, which lets you generate an arrow from an input, and then apply that arrow, which is exactly what you're doing here. In this case, you'd write</p>\n\n<pre><code>process = applyA (getScene &gt;&gt;. map func)\n    ...\n</code></pre>\n\n<p>Note that you're working with list arrows, so the type signature would just be</p>\n\n<pre><code>process :: IOSArrow XmlTree XmlTree\n</code></pre>\n"}], "owner": {"reputation": 152, "user_id": 3832665, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/520fa46dfc3474e5183d8810bc4ee58b?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/3832665/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 52064992, "answer_count": 1, "score": 1, "last_activity_date": 1535484501, "creation_date": 1534934532, "last_edit_date": 1534935578, "question_id": 51965050, "link": "https://stackoverflow.com/questions/51965050/haskell-hxt-splitting-up-xml-data", "title": "Haskell HXT splitting up XML data", "body": "<p>I'm pretty new to arrows so go easy on me...</p>\n\n<p>I'm trying to count the number of a specific nodes in an XML file. The XML file is layed out so that under the root, we have a list of scenes and under each scene we have a list of layers which each has a node called 'recs'. I want to count the number of rects in each scene. I don't fully understand how HXT works.</p>\n\n<p>I shall copy an extract of my code that is causing the problem</p>\n\n<pre><code>process :: IOSArrow XmlTree [XmlTree]\nprocess getScene &gt;&gt;. map func\n    where func a = a &gt;&gt;&gt; getLayer &gt;&gt;&gt; getRec\n</code></pre>\n\n<p>Each of those get functions are of type <code>IOSArrow XmlTree XmlTree</code> </p>\n\n<p>Why doesn't this work? And how do I fix it?</p>\n\n<p>Error Message:</p>\n\n<pre><code>count_dirty.hs:20:16: error:\n    \u2022 Couldn't match type \u2018Data.Tree.NTree.TypeDefs.NTree XNode\u2019\n                     with \u2018IOSLA (XIOState ()) a0 XmlTree\u2019\n      Expected type: [XmlTree] -&gt; [IOSLA (XIOState ()) a0 XmlTree]\n        Actual type: [IOSLA (XIOState ()) a0 XmlTree]\n                     -&gt; [IOSLA (XIOState ()) a0 XmlTree]\n    \u2022 In the second argument of \u2018(&gt;&gt;.)\u2019, namely \u2018map func\u2019\n      In the second argument of \u2018(&gt;&gt;&gt;)\u2019, namely \u2018getScene &gt;&gt;. map func\u2019\n      In the expression:\n        readDocument [withValidate no] file &gt;&gt;&gt; getScene &gt;&gt;. map func\n   |\n20 |   getScene &gt;&gt;. map func\n   |                ^^^^^^^^\n</code></pre>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "currying"], "comments": [{"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 0, "creation_date": 1534929721, "post_id": 51963290, "comment_id": 90877305, "body": "A function that takes one k-tuple argument is sometimes said to take k arguments. This is normal terminology in mathematics."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1534932417, "post_id": 51963290, "comment_id": 90878844, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/36314/what-is-currying\">What is &#39;Currying&#39;?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 191, "user_id": 10152792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cdbcaa874842feb6653e37899fbc0023?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Mroz", "link": "https://stackoverflow.com/users/10152792/daniel-mroz"}, "is_accepted": false, "score": 5, "last_activity_date": 1534928957, "creation_date": 1534928957, "answer_id": 51963409, "question_id": 51963290, "link": "https://stackoverflow.com/questions/51963290/haskell-currying-explanation-needed/51963409#51963409", "title": "Haskell currying explanation needed", "body": "<p>The type <code>a -&gt; b -&gt; c</code> is actually <code>a -&gt; (b -&gt; c)</code>. </p>\n\n<p>So <code>f</code> doesn't take two arguments, of type <code>a</code> and a <code>b</code> and return <code>c</code>, it takes one argument of type <code>a</code>, and returns <code>b -&gt; c</code>, a function from <code>b</code> to <code>c</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 9, "last_activity_date": 1534929182, "creation_date": 1534929182, "answer_id": 51963465, "question_id": 51963290, "link": "https://stackoverflow.com/questions/51963290/haskell-currying-explanation-needed/51963465#51963465", "title": "Haskell currying explanation needed", "body": "<blockquote>\n  <p>Yet <code>f</code> takes two arguments and <code>g</code> only one.</p>\n</blockquote>\n\n<p>No, in fact <em>both</em> functions take <em>one</em> parameter. In fact in Haskell <em>all</em> functions take <em>exactly</em> one parameter.</p>\n\n<p>If you write a signature like:</p>\n\n<pre><code>f :: a -&gt;  b -&gt; c\n</code></pre>\n\n<p>then this is a less verbose form of:</p>\n\n<pre><code>f :: a -&gt; (b -&gt; c)\n</code></pre>\n\n<p>How does that work? <code>f</code> is a function that takes one parameter, and then returns another <em>function</em> that again takes a parameter.</p>\n\n<p>So take for example a function <code>add :: Int -&gt; Int -&gt; Int</code>.</p>\n\n<p>If we write <code>add 5 2</code>, we thus calculate <code>5 + 2</code>. It looks like it takes two parameters, but in fact we have written <code>(add 5) 2</code>. We thus call the <code>add</code> function with <code>5</code> as parameter. This returns a function (let us call this function <code>add5 :: Int -&gt; Int</code>). So this <code>add5</code> function adds <code>5</code> to a number. So if we then call <code>add5 2</code>, then we obtain <code>7</code>, since <code>add5</code> returns <code>5</code> added to the parameter.</p>\n\n<p>We can however construct a function (like <code>g</code>) that takes one parameter that is a 2-tuple, so we can use another type to pass two values as <em>one</em> parameter. In fact you can see <code>g(5, 2)</code> is actually <code>g (5, 2)</code>: you <em>call</em> the function with <em>one</em> parameter, a 2-tuple <code>(5, 2)</code>.</p>\n\n<p>So the currying aims to transform such <code>g</code> function that takes <em>one</em> parameter (a 2-tuple) into a function <code>f</code> that takes again <em>one</em> parameter, and this will then construct a function that will take the second element of the original 2-tuple.</p>\n"}], "owner": {"reputation": 1375, "user_id": 1881719, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/f9d319fb5c2669d9bab860c9b2227505?s=128&d=identicon&r=PG", "display_name": "Wouter Vandenputte", "link": "https://stackoverflow.com/users/1881719/wouter-vandenputte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 352, "favorite_count": 0, "accepted_answer_id": 51963465, "answer_count": 2, "score": 4, "last_activity_date": 1534929182, "creation_date": 1534928582, "question_id": 51963290, "link": "https://stackoverflow.com/questions/51963290/haskell-currying-explanation-needed", "title": "Haskell currying explanation needed", "body": "<p>I'm trying to understand the concept of currying and went to the <a href=\"https://wiki.haskell.org/Currying\" rel=\"nofollow noreferrer\">Haskell documentation</a>. However, it says that </p>\n\n<blockquote>\n  <p>f is the curried form of g</p>\n</blockquote>\n\n<p>Yet f takes two arguments and g only one. Since currying is converting a function which takes multiple arguments to a function which takes one argument and returns another function, shouldn't 'g' be the curried function?</p>\n\n<p>From the haskell documentation</p>\n\n<blockquote>\n  <p>Currying is the process of transforming a function that takes multiple arguments into a function that takes just a single argument and returns another function if any arguments are still needed.</p>\n</blockquote>\n\n<pre><code>f :: a -&gt; b -&gt; c\nis the curried form of\ng :: (a, b) -&gt; c\n</code></pre>\n\n<p>So this does seem contradictory to me and I also don't see any of these 2 functions return a function either.</p>\n"}, {"tags": ["haskell", "types", "ghc"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1534921622, "post_id": 51961404, "comment_id": 90873098, "body": "A common mistake: the list constructors are <code>[]</code> and <code>(:)</code> (with <i>round brackets</i>), actually the brackets are not always necessary, but using square ones, is not an option."}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 3, "creation_date": 1534922192, "post_id": 51961404, "comment_id": 90873361, "body": "<code>if x == True || y == True then False else True</code> --&gt; <code>not (x || y)</code>."}, {"owner": {"reputation": 177, "user_id": 3236691, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c84a6a71cc99edc221ef095cc0480c0c?s=128&d=identicon&r=PG&f=1", "display_name": "TheMagicalCake", "link": "https://stackoverflow.com/users/3236691/themagicalcake"}, "edited": false, "score": 0, "creation_date": 1534924171, "post_id": 51961404, "comment_id": 90874350, "body": "I didn&#39;t want to use the built in not, as i&#39;m going to build a not with this nor later"}], "answers": [{"comments": [{"owner": {"reputation": 177, "user_id": 3236691, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c84a6a71cc99edc221ef095cc0480c0c?s=128&d=identicon&r=PG&f=1", "display_name": "TheMagicalCake", "link": "https://stackoverflow.com/users/3236691/themagicalcake"}, "edited": false, "score": 0, "creation_date": 1534924129, "post_id": 51961529, "comment_id": 90874330, "body": "Why would the last line catch errors in this case? And yes I knew I could make the norBit a little simpler, but I did not want to use the built in not function"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 177, "user_id": 3236691, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c84a6a71cc99edc221ef095cc0480c0c?s=128&d=identicon&r=PG&f=1", "display_name": "TheMagicalCake", "link": "https://stackoverflow.com/users/3236691/themagicalcake"}, "edited": false, "score": 0, "creation_date": 1534924251, "post_id": 51961529, "comment_id": 90874386, "body": "Because <code>_</code> is a wildcard. Now the first two lines catch the cases where either both lists are empty, or both lists are non-empty. So the <i>remaining</i> cases are the ones where the first list is empty and the right one is non-empty, or vice versa."}, {"owner": {"reputation": 177, "user_id": 3236691, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c84a6a71cc99edc221ef095cc0480c0c?s=128&d=identicon&r=PG&f=1", "display_name": "TheMagicalCake", "link": "https://stackoverflow.com/users/3236691/themagicalcake"}, "edited": false, "score": 0, "creation_date": 1534924319, "post_id": 51961529, "comment_id": 90874422, "body": "I see, Thanks a lot!"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1534921932, "creation_date": 1534921932, "answer_id": 51961529, "question_id": 51961404, "link": "https://stackoverflow.com/questions/51961404/haskell-cannot-match-expected-type-bool-to-type-t0/51961529#51961529", "title": "Haskell cannot match expected type &#39;Bool&#39; to type [t0]", "body": "<p>The list constructors in Haskell are <code>[]</code> and <code>(x:xs)</code>, note that the second constructor uses <em>round</em> brackets.</p>\n\n<p>If you write <code>[_:__]</code>, then that is valid syntax as well: since Haskell thinks you write a pattern <code>[(x:xs)]</code>, so a <em>singleton</em> list, where the <em>first</em> element matches the <code>(x:xs)</code> pattern. But that should mean that the type is an <code>[[a]]</code>, instead of an <code>[a]</code>, and since a <code>Bool</code> is <em>not</em> a type alias for a list type, the problem can not be resolved.</p>\n\n<p>You can fix the situation here by writing <em>round brackets</em>:</p>\n\n<pre><code>nor :: Bits -&gt; Bits -&gt; Bits\nnor [] <b>(_:_)</b> = error \"mismatched length\"\nnor <b>(_:_)</b> [] = error \"mismatched length\"\nnor [] [] = []\nnor (x:xs) (y:ys) = (norBit x y):nor xs ys\n    where norBit x y = if x == True || y == True then False else True</code></pre>\n\n<p>Or we can rewrite the function to:</p>\n\n<pre><code>nor :: Bits -&gt; Bits -&gt; Bits\nnor (x:xs) (y:ys) = not (x || y) : nor xs ys\nnor [] [] = []\nnor _ _ = error \"mismatched length\"</code></pre>\n\n<p>Note that due to laziness, in case you for example <code>take k</code> of the result, with <code>k</code> smaller than the length of <em>both</em> lists, it will <em>not</em> raise an error.</p>\n"}], "owner": {"reputation": 177, "user_id": 3236691, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c84a6a71cc99edc221ef095cc0480c0c?s=128&d=identicon&r=PG&f=1", "display_name": "TheMagicalCake", "link": "https://stackoverflow.com/users/3236691/themagicalcake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 207, "favorite_count": 0, "accepted_answer_id": 51961529, "answer_count": 1, "score": 0, "last_activity_date": 1534921932, "creation_date": 1534921461, "question_id": 51961404, "link": "https://stackoverflow.com/questions/51961404/haskell-cannot-match-expected-type-bool-to-type-t0", "title": "Haskell cannot match expected type &#39;Bool&#39; to type [t0]", "body": "<p>New to haskell and I keep running into this cryptic error when I try to pattern match a non empty list</p>\n\n<p>Code:</p>\n\n<pre><code>type Bits = [Bool]\n\nnor :: Bits -&gt; Bits -&gt; Bits\nnor [] [_:__] = error \"mismatched length\"\nnor [_:__] [] = error \"mismatched length\"\nnor [] [] = []\nnor (x:xs) (y:ys) = (norBit x y):nor xs ys\n    where norBit x y = if x == True || y == True then False else True\n\nmain = do\n    print (nor [True] [False])\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>gates.hs:4:9:\nCouldn't match expected type \u2018Bool\u2019 with actual type \u2018[t0]\u2019\nIn the pattern: _ : __\nIn the pattern: [_ : __]\nIn an equation for \u2018nor\u2019: nor [] [_ : __] = []\n</code></pre>\n"}, {"tags": ["haskell", "monads", "functor", "applicative"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534919539, "post_id": 51960848, "comment_id": 90872173, "body": "There are two instances of <code>&gt;&gt;=</code> there, which one is problematic?"}, {"owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534919651, "post_id": 51960848, "comment_id": 90872223, "body": "I think the first one. But if anyone can explain the whole line, that will be great."}, {"owner": {"reputation": 791, "user_id": 1587319, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1c8a88b9a8d79a518cba52a7a8d099f9?s=128&d=identicon&r=PG", "display_name": "pdexter", "link": "https://stackoverflow.com/users/1587319/pdexter"}, "edited": false, "score": 0, "creation_date": 1534920422, "post_id": 51960848, "comment_id": 90872547, "body": "&quot;I think it takes a functor f a and a function, then return another functor f b&quot; that&#39;s not accurate. Try understanding the type of <code>&gt;&gt;=</code> first. Then choose an implementation of the monad type class and fill in the implementation step by step."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "reply_to_user": {"reputation": 791, "user_id": 1587319, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1c8a88b9a8d79a518cba52a7a8d099f9?s=128&d=identicon&r=PG", "display_name": "pdexter", "link": "https://stackoverflow.com/users/1587319/pdexter"}, "edited": false, "score": 1, "creation_date": 1534920606, "post_id": 51960848, "comment_id": 90872644, "body": "@pdexter is it really inaccurate? &quot;Takes a functor&quot; (<code>f a</code>) &quot;and a function&quot; (<code>a-&gt;f b</code>), &quot;then return another functor&quot; (<code>f b</code>). What exactly do you object to?"}, {"owner": {"reputation": 791, "user_id": 1587319, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1c8a88b9a8d79a518cba52a7a8d099f9?s=128&d=identicon&r=PG", "display_name": "pdexter", "link": "https://stackoverflow.com/users/1587319/pdexter"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1534921915, "post_id": 51960848, "comment_id": 90873238, "body": "@n.m. it&#39;s not the most accurate explanation of <code>&gt;&gt;=</code> to somebody."}], "answers": [{"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 5, "last_activity_date": 1607767896, "last_edit_date": 1607767896, "creation_date": 1534920621, "answer_id": 51961192, "question_id": 51960848, "link": "https://stackoverflow.com/questions/51960848/how-does-derived-from-pure-and/51961192#51961192", "title": "How does &lt;*&gt; derived from pure and (&gt;&gt;=)?", "body": "<p>Applicative is a Functor. Monad is also a Functor. We can see the <em>&quot;Functorial&quot;</em> values as standing for computations of their &quot;contained&quot; \u2044 produced <em>pure</em> values (like <code>IO a</code>, <code>Maybe a</code>, <code>[] a</code>, etc.), as being the allegories of \u2044 metaphors for the various kinds of computations.</p>\n<p>Functors describe \u2044 denote notions \u2044 types of computations, and Functorial values are reified computations which are &quot;run&quot; \u2044 <em>interpreted</em> in a <em>separate</em> step which is thus akin to that famous additional <em>indirection</em> step by adding which, allegedly, any computational problem can be solved.</p>\n<p>Both <code>fs</code> and <code>as</code> are your Functorial values, and <em>bind</em> (<code>(&gt;&gt;=)</code>, or in <code>do</code> notation <code>&lt;-</code>) &quot;gets&quot; the carried values &quot;in&quot; the functor.  <em>Bind</em> though belongs to Monad.</p>\n<p>What we can implement in Monad with (using <code>return</code> as just a synonym for <code>pure</code>)</p>\n<pre><code>do { f &lt;- fs ;       -- fs &gt;&gt;= ( \\ f -&gt;     -- fs  :: F (a -&gt; b)   -- f :: a -&gt; b\n     a &lt;- as ;       -- as &gt;&gt;= ( \\ a -&gt;     -- as  :: F  a         -- a :: a\n     return (f a)    -- return (f a) ) )    -- f a ::         b\n   }                                        -- ::     F       b\n</code></pre>\n<p>( or, with <a href=\"https://downloads.haskell.org/%7Eghc/latest/docs/html/users_guide/glasgow_exts.html?monad-comprehensions#monad-comprehensions\" rel=\"nofollow noreferrer\">MonadComprehensions</a>,</p>\n<pre><code>    [ f a | f &lt;- fs, a &lt;- as ]\n</code></pre>\n<p>), we get from the Applicative's <code>&lt;*&gt;</code> which expresses the same computation combination, but without the full power of Monad. <a href=\"https://stackoverflow.com/a/39647091/849891\">The difference is</a>, with Applicative <code>as</code> is not dependent on the value <code>f</code> there, &quot;produced by&quot; the computation denoted by <code>fs</code>. Monadic Functors allow such dependency, with</p>\n<pre><code>    [ bar x y | x &lt;- xs, y &lt;- foo x ]\n</code></pre>\n<p>but Applicative Functors forbid it.</p>\n<p>With Applicative all the &quot;computations&quot; (like <code>fs</code> or <code>as</code>) must be known &quot;in advance&quot;; with Monad they can be calculated -- purely -- based on the results of the previous &quot;computation steps&quot; (like <code>foo x</code> is doing: for (each) <em>value</em> <code>x</code> that the <em>computation</em> <code>xs</code> <em>will</em> produce, new computation <code>foo x</code> will be (purely) calculated, the computation that will produce (some) <code>y</code>(s) in its turn).</p>\n<hr />\n<p>If you want to see how the types are aligned in the <code>&gt;&gt;=</code> expressions, here's your expression with its subexpressions named, so they can be annotated with their types,</p>\n<pre><code>exp = fs &gt;&gt;= g                                -- fs &gt;&gt;= \n      where  g f = xs &gt;&gt;= h                   --  (\\ f -&gt; xs &gt;&gt;=\n                   where  h x = return (f x)  --           ( \\ x -&gt; pure (f x) ) )\n\n x   ::    a\n f   ::    a -&gt; b\n f x ::         b\n return (f x) ::      F b\n h   ::    a -&gt;       F b    -- (&gt;&gt;=) :: F a -&gt; (a -&gt; F b) -&gt; F b\n xs  :: F  a                 --          xs     h\n                             --           &lt;-----\n xs &gt;&gt;= h ::          F b\n g f ::               F b\n g   ::   (a -&gt; b) -&gt; F b   -- (&gt;&gt;=) :: F (a-&gt;b) -&gt; ((a-&gt;b) -&gt; F b) -&gt; F b\n fs  :: F (a -&gt; b)          --          fs          g\n                            --           &lt;----------\n fs &gt;&gt;= g ::          F b\n exp ::               F b\n</code></pre>\n<p>and the types of the two <code>(&gt;&gt;=)</code> applications fit:</p>\n<pre><code> (fs :: F (a -&gt; b))  &gt;&gt;=  (g :: (a -&gt; b) -&gt; F b)) :: F b\n (xs :: F  a      )  &gt;&gt;=  (h :: (a       -&gt; F b)) :: F b\n</code></pre>\n<p>Thus, the overall type is indeed</p>\n<pre><code>foo :: F (a -&gt; b) -&gt; F a -&gt; F b\nfoo fs xs = fs &gt;&gt;= g                   -- foo = (&lt;*&gt;)\n            where  g f = xs &gt;&gt;= h \n                         where  h x = return (f x)\n</code></pre>\n<hr />\n<p>In the end, we can see monadic bind as an implementation of <code>do</code>, and treat the <code>do</code> notation</p>\n<pre><code>     do {\n</code></pre>\n<p>abstractly, axiomatically, as consisting of the lines of the form</p>\n<pre><code>           a &lt;- F a ;\n           b &lt;- F b ;\n           ......\n           n &lt;- F n ;\n           return (foo a b .... n)\n        }\n</code></pre>\n<p>(with <code>a</code>, <code>F b</code>, etc. denoting <em>values</em> of the corresponding <em>types</em>), such that it describes the overall combined computation of the type <code>F t</code>, where <code>foo :: a -&gt; b -&gt; ... -&gt; n -&gt; t</code>. And when none of the <code>&lt;-</code>'s right-hand side's expressions is dependent on no preceding left-hand side's variable, it's not essentially Monadic, but just an Applicative computation that this <code>do</code> block is describing.</p>\n<p>Because of the Monad laws it is enough to define the meaning of <code>do</code> blocks with just two <code>&lt;-</code> lines. For Functors, just one <code>&lt;-</code> line is allowed ( <code>fmap f xs = do { x &lt;- xs; return (f x) }</code>).</p>\n<p>Thus, Functors/Applicative Functors/Monads <a href=\"https://stackoverflow.com/a/44118041/849891\">are EDSLs</a>, <em>embedded</em> domain-specific languages, because the computation-descriptions are themselves <em>values</em> of our language (those to the right of the arrows in <code>do</code> notation).</p>\n<hr />\n<p>Lastly, a types mandala for you:</p>\n<pre><code>                  T    a\n                  T   (a  -&gt;     b)\n                      (a  -&gt;  T  b)\n                 -------------------\n                  T          (T  b)\n                 -------------------\n                  T              b\n</code></pre>\n<p>This contains three in one:</p>\n<pre><code>       F   a                    A    a                  M   a\n           a  -&gt;  b             A   (a -&gt; b)                a  -&gt;  M  b\n      --------------           --------------          -----------------\n       F          b             A         b             M             b\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": true, "score": 8, "last_activity_date": 1534923914, "last_edit_date": 1534923914, "creation_date": 1534920795, "answer_id": 51961231, "question_id": 51960848, "link": "https://stackoverflow.com/questions/51960848/how-does-derived-from-pure-and/51961231#51961231", "title": "How does &lt;*&gt; derived from pure and (&gt;&gt;=)?", "body": "<p>Lets start with the type we're implementing:</p>\n\n<pre><code>(&lt;*&gt;) :: Monad f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>(The normal type of <code>&lt;*&gt;</code> of course has an <code>Applicative</code> constraint, but here we're trying to use <code>Monad</code> to implement <code>Applicative</code>)</p>\n\n<p>So in <code>fs &lt;*&gt; as = _</code>, <code>fs</code> is an \"f of functions\" (<code>f (a -&gt; b)</code>), and <code>as</code> is an \"f of <code>a</code>s\".</p>\n\n<p>We'll start by binding <code>fs</code>:</p>\n\n<pre><code>(&lt;*&gt;) :: Monad f =&gt; f ( a -&gt; b) -&gt; f a -&gt; f b\nfs &lt;*&gt; as\n  = fs &gt;&gt;= _\n</code></pre>\n\n<p>If you actually compile that, GHC will tell us what type the hole (<code>_</code>) has:</p>\n\n<pre><code>foo.hs:4:12: warning: [-Wtyped-holes]\n    \u2022 Found hole: _ :: (a -&gt; b) -&gt; f b\n      Where: \u2018a\u2019, \u2018f\u2019, \u2018b\u2019 are rigid type variables bound by\n               the type signature for:\n                 (Main.&lt;*&gt;) :: forall (f :: * -&gt; *) a b.\n                               Monad f =&gt;\n                               f (a -&gt; b) -&gt; f a -&gt; f b\n               at foo.hs:2:1-45\n</code></pre>\n\n<p>That makes sense. Monad's <code>&gt;&gt;=</code> takes an <code>f a</code> on the left and a function <code>a -&gt; f b</code> on the right, so by binding an <code>f (a -&gt; b)</code> on the left the function on the right gets to receive an <code>(a -&gt; b)</code> function \"extracted\" from <code>fs</code>. And provided we can write a function that can use that to return an <code>f b</code>, then the whole bind expression will return the <code>f b</code> we need to meet the type signature for <code>&lt;*&gt;</code>.</p>\n\n<p>So it'll look like:</p>\n\n<pre><code>(&lt;*&gt;) :: Monad f =&gt; f ( a -&gt; b) -&gt; f a -&gt; f b\nfs &lt;*&gt; as\n  = fs &gt;&gt;= (\\f -&gt; _)\n</code></pre>\n\n<p>What can we do there? We've got <code>f :: a -&gt; b</code>, and we've still got <code>as :: f a</code>, and we need to make an <code>f b</code>. If you're used to <code>Functor</code> that's obvious; just <code>fmap f as</code>. <code>Monad</code> implies <code>Functor</code>, so this does in fact work:</p>\n\n<pre><code>(&lt;*&gt;) :: Monad f =&gt; f ( a -&gt; b) -&gt; f a -&gt; f b\nfs &lt;*&gt; as\n  = fs &gt;&gt;= (\\f -&gt; fmap f as)\n</code></pre>\n\n<p>It's also, I think, a <em>much</em> easier way to understand the way <code>Applicative</code> can be implemented generically using the facilities from <code>Monad</code>.</p>\n\n<p>So why is your example written using another <code>&gt;&gt;=</code> and <code>pure</code> instead of just <code>fmap</code>? It's kind of harkening back to the days when <code>Monad</code> did <em>not</em> have <code>Applicative</code> and <code>Functor</code> as superclasses. <code>Monad</code> always \"morally\" implied both of these (since you can implement <code>Applicative</code> and <code>Functor</code> using only the features of <code>Monad</code>), but Haskell didn't always require there to be these instances, which leads to books, tutorials, blog posts, etc explaining <em>how</em> to implement these using only <code>Monad</code>. The example line given is simply inlining the definition of <code>fmap</code> in terms of <code>&gt;&gt;=</code> and <code>pure</code> (<code>return</code>)<sup>1</sup>.</p>\n\n<p>I'll continue to unpack as if we didn't have <code>fmap</code>, so that it leads to the version you're confused by.</p>\n\n<p>If we're not going to use <code>fmap</code> to combine <code>f :: a -&gt; b</code> and <code>as :: f a</code>, then we'll need to bind <code>as</code> so that we have an expression of type <code>a</code> to apply <code>f</code> to:</p>\n\n<pre><code>(&lt;*&gt;) :: Monad f =&gt; f ( a -&gt; b) -&gt; f a -&gt; f b\nfs &lt;*&gt; as\n  = fs &gt;&gt;= (\\f -&gt; as &gt;&gt;= (\\a -&gt; _))\n</code></pre>\n\n<p>Inside that hole we need to make an <code>f b</code>, and we have <code>f :: a -&gt; b</code> and <code>a :: a</code>. <code>f a</code> gives us a <code>b</code>, so we'll need to call <code>pure</code> to turn that into an <code>f b</code>:</p>\n\n<pre><code>(&lt;*&gt;) :: Monad f =&gt; f ( a -&gt; b) -&gt; f a -&gt; f b\nfs &lt;*&gt; as\n  = fs &gt;&gt;= (\\f -&gt; as &gt;&gt;= (\\a -&gt; pure (f a)))\n</code></pre>\n\n<p>So that's what this line is doing.</p>\n\n<ol>\n<li>Binding <code>fs :: f (a -&gt; b)</code> to get access to an <code>f :: a -&gt; b</code></li>\n<li>Inside the function that has access to <code>f</code> it's binding <code>as</code> to get access to <code>a :: a</code></li>\n<li>Inside the function that has access to <code>a</code> (which is still inside the function that has access to <code>f</code> as well), call <code>f a</code> to make a <code>b</code>, and call <code>pure</code> on the result to make it an <code>f b</code></li>\n</ol>\n\n<hr>\n\n<p><sup>1</sup> You can implement <code>fmap</code> using <code>&gt;&gt;=</code> and <code>pure</code> as <code>fmap f xs = xs &gt;&gt;= (\\x -&gt; pure (f x))</code>, which is also <code>fmap f xs = xs &gt;&gt;= pure . f</code>. Hopefully you can see that the inner bind of your example is simply inlining the first version.</p>\n"}, {"tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 1, "last_activity_date": 1534922168, "creation_date": 1534922168, "answer_id": 51961585, "question_id": 51960848, "link": "https://stackoverflow.com/questions/51960848/how-does-derived-from-pure-and/51961585#51961585", "title": "How does &lt;*&gt; derived from pure and (&gt;&gt;=)?", "body": "<p>You can define <code>(&lt;*&gt;)</code> in terms of <code>(&gt;&gt;=)</code> and <code>return</code> because all monads are applicative functors. You can read more about this in the <a href=\"https://wiki.haskell.org/Functor-Applicative-Monad_Proposal\" rel=\"nofollow noreferrer\">Functor-Applicative-Monad Proposal</a>. In particular, <code>pure = return</code> and <code>(&lt;*&gt;) = ap</code> is the shortest way to achieve an Applicative definition given an existing Monad definition.</p>\n\n<p>See the type signatures for <code>(&lt;*&gt;)</code>, <code>ap</code> and <code>(&gt;&gt;=)</code>:</p>\n\n<pre><code>(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b\nap    :: Monad       m =&gt; m (a -&gt; b) -&gt; m a -&gt; m b\n(&gt;&gt;=) :: Monad       m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>The type signature for <code>(&lt;*&gt;)</code> and <code>ap</code> are nearly equivalent. Since <code>ap</code> is written using <code>do</code>-notation, it is equivalent to some use of <code>(&gt;&gt;=)</code>. I'm not sure this helps, but I find the definition of <code>ap</code> readable. Here's a rewrite:</p>\n\n<pre><code>  ap m1 m2 = do { x1 &lt;- m1; x2 &lt;- m2; return (x1 x2) }\n\u2261 ap m1 m2 = do\n    x1 &lt;- m1\n    x2 &lt;- m2\n    return (x1 x2)\n\u2261 ap m1 m2 =\n    m1 &gt;&gt;= \\x1 -&gt;\n    m2 &gt;&gt;= \\x2 -&gt;\n    return (x1 x2)\n\u2261 ap m1 m2 = m1 &gt;&gt;= \\x1 -&gt; m2 &gt;&gt;= \\x2 -&gt; return (x1 x2)\n\u2261 ap mf ma = mf &gt;&gt;= (\\f -&gt; ma &gt;&gt;= (\\a -&gt; pure (f a)))\n</code></pre>\n\n<p>Which is your definition. You could show that this definition upholds the <a href=\"https://en.wikibooks.org/wiki/Haskell/Applicative_functors#Applicative_functor_laws\" rel=\"nofollow noreferrer\">applicative functor laws</a>, since not everything defined in terms of <code>(&gt;&gt;=)</code> and <code>return</code> does that.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 2, "accepted_answer_id": 51961231, "answer_count": 3, "score": 6, "last_activity_date": 1607767896, "creation_date": 1534918845, "last_edit_date": 1556870677, "question_id": 51960848, "link": "https://stackoverflow.com/questions/51960848/how-does-derived-from-pure-and", "title": "How does &lt;*&gt; derived from pure and (&gt;&gt;=)?", "body": "<pre><code>class Applicative f =&gt; Monad f where\n       return :: a -&gt; f a\n       (&gt;&gt;=) :: f a -&gt; (a -&gt; f b) -&gt; f b\n</code></pre>\n\n<p><code>(&lt;*&gt;)</code> can be derived from pure and <code>(&gt;&gt;=)</code>:</p>\n\n<pre><code>fs &lt;*&gt; as =\n    fs &gt;&gt;= (\\f -&gt; as &gt;&gt;= (\\a -&gt; pure (f a)))\n</code></pre>\n\n<p>For the line </p>\n\n<pre><code>fs &gt;&gt;= (\\f -&gt; as &gt;&gt;= (\\a -&gt; pure (f a)))\n</code></pre>\n\n<p>I am confused by the usage of <code>&gt;&gt;=</code>. I think it takes a functor <code>f a</code> and a function, then return another functor <code>f b</code>. But in this expression, I feel lost. </p>\n"}, {"tags": ["haskell", "vector", "repa", "storable"], "answers": [{"tags": [], "owner": {"reputation": 203, "user_id": 827415, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/9c5b6a24d960070ad2cb62b55146ca05?s=128&d=identicon&r=PG", "display_name": "Invoke", "link": "https://stackoverflow.com/users/827415/invoke"}, "is_accepted": false, "score": 1, "last_activity_date": 1534936319, "creation_date": 1534936319, "answer_id": 51965585, "question_id": 51958883, "link": "https://stackoverflow.com/questions/51958883/how-to-implement-correctly-foreign-storable-to-create-vectors/51965585#51965585", "title": "How to implement correctly Foreign.Storable to create Vectors?", "body": "<p>I found the problem: <code>sizeOf</code>.</p>\n\n<p>As I was implement it, it relied on <code>vec</code> to exist and have defined values, however, that's not the case. The memory size should be known to the Vector storable implementation before hand, which is why it was creating the error.</p>\n\n<p>So, for now I have fixed the size to \"4\", but do not use that if what you want is to have a runtime allocation.</p>\n\n<p>Here is the commit for that solution:</p>\n\n<ul>\n<li><a href=\"https://github.com/rval735/cnn-phd/commit/5984b1ea7145c600a6127e063258524226de5fe5\" rel=\"nofollow noreferrer\">https://github.com/rval735/cnn-phd/commit/5984b1ea7145c600a6127e063258524226de5fe5</a></li>\n</ul>\n"}], "owner": {"reputation": 203, "user_id": 827415, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/9c5b6a24d960070ad2cb62b55146ca05?s=128&d=identicon&r=PG", "display_name": "Invoke", "link": "https://stackoverflow.com/users/827415/invoke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1534936319, "creation_date": 1534902951, "last_edit_date": 1534909578, "question_id": 51958883, "link": "https://stackoverflow.com/questions/51958883/how-to-implement-correctly-foreign-storable-to-create-vectors", "title": "How to implement correctly Foreign.Storable to create Vectors?", "body": "<p>I have been working in a project that has been using lists to calculate artificial neural network operations. Now, I would like to transform that to <code>Data.Vector</code> to improve its efficiency. However, I have been having a trouble at the moment to implement <code>Foreign.Storable</code> for a definition that is essential.</p>\n\n<p>Ok, so first, I have used <code>Data.Array.Repa</code> for the calculations, with a type synonym like the following (<a href=\"https://github.com/rval735/cnn-phd/blob/master/ProjectScope/PP-DNNInHaskell/Haskell-Example/src/CANTypes.hs\" rel=\"nofollow noreferrer\"><code>CAMTypes.hs</code></a>):</p>\n\n<pre><code>type NTTVU = Array U VShape NTT\n</code></pre>\n\n<p>Then later I wanted to use <code>Data.Vector</code> as follows:</p>\n\n<pre><code>import qualified Data.Vector.Storable as VS\n-- ...\ntrs = createThreshold 3 0 [9,8,7] :: NTTVU\n</code></pre>\n\n<p>However, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$&gt; VS.singleton trs\n*** Exception: Prelude.undefined\nCallStack (from HasCallStack):\n  error, called at libraries/base/GHC/Err.hs:79:14 in base:GHC.Err\n  undefined, called at ./Data/Vector/Storable/Mutable.hs:131:22 in vector-0.12.0.1-JlawpRjIcMJIYPJVsWriIA:Data.Vector.Storable.Mutable\nCallStack (from -prof):\n  Data.Vector.Storable.Mutable.basicUnsafeNew.size (Data/Vector/Storable/Mutable.hs:131:7-36)\n  Data.Vector.Storable.Mutable.basicUnsafeNew (Data/Vector/Storable/Mutable.hs:(124,3)-(132,38))\n  Data.Vector.Storable.Mutable.CAF:lvl12_r7YZK (&lt;no location info&gt;)\n</code></pre>\n\n<p>I have already done the implementation for <code>instance Storable NTTVU where</code>, but still complains; I enabled profiling, but does not tell me more about it; tried debugging by steps but no success as well. Hopefully someone knows a lot about it and how to solve it.</p>\n\n<p>For more context, <a href=\"https://github.com/rval735/cnn-phd/tree/master/ProjectScope/PP-DNNInHaskell/Haskell-Example\" rel=\"nofollow noreferrer\">the whole project</a>, and the related files:</p>\n\n<ul>\n<li><a href=\"https://github.com/rval735/cnn-phd/blob/master/ProjectScope/PP-DNNInHaskell/Haskell-Example/src/CANTypesStorable.hs\" rel=\"nofollow noreferrer\">https://github.com/rval735/cnn-phd/blob/master/ProjectScope/PP-DNNInHaskell/Haskell-Example/src/CANTypesStorable.hs</a></li>\n<li><a href=\"https://github.com/rval735/cnn-phd/blob/master/ProjectScope/PP-DNNInHaskell/Haskell-Example/GHCI-Scripts/ReplicateVectorError.hsi\" rel=\"nofollow noreferrer\">https://github.com/rval735/cnn-phd/blob/master/ProjectScope/PP-DNNInHaskell/Haskell-Example/GHCI-Scripts/ReplicateVectorError.hsi</a></li>\n</ul>\n"}, {"tags": ["haskell", "types", "syntax", "polymorphism", "typeclass"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1534869956, "post_id": 51953206, "comment_id": 90856946, "body": "What is <code>fct</code> doing here?"}, {"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 4, "creation_date": 1534870420, "post_id": 51953206, "comment_id": 90857146, "body": "That looks like it annotating the return, not the argument. It already knows what the argument type is since you&#39;re passing a literal. You&#39;re telling it that the call to that function will evaluate to an <code>Int</code>, so that means that <code>read</code> must return an <code>Int</code>."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 6, "last_activity_date": 1534922767, "last_edit_date": 1534922767, "creation_date": 1534871673, "answer_id": 51953719, "question_id": 51953206, "link": "https://stackoverflow.com/questions/51953206/why-passing-a-concrete-type-to-function-solves-the-error/51953719#51953719", "title": "Why passing a concrete type to function solves the error?", "body": "<p><code>(fct 4 :: Int)</code> means <code>(fct 4) :: Int</code>, not <code>fct (4 :: Int)</code>. The former specifies that the result of <code>fct</code> must be <code>Int</code>, hence <code>read</code> must be used to turn a string into an <code>Int</code>.</p>\n\n<p>Instead, the literal <code>4</code> is left unconstrained. This triggers the so-called defaulting rules, which choose <code>Integer</code> for its type. Such defaulting, roughly, happens when a numeric literal is left ambiguous. Defaulting was introduced to let code like <code>print 4</code> work without annotations -- a small \"special case\" for programmers' convenience.</p>\n\n<p>Concluding: <code>show</code> is called to turn <code>4 :: Integer</code> into the string <code>\"4\"</code>, which is then read back into <code>4 :: Int</code>.</p>\n"}], "owner": {"reputation": 850, "user_id": 5484068, "user_type": "registered", "accept_rate": 18, "profile_image": "https://www.gravatar.com/avatar/a2ec720ad8a18aa36c86f0d6db5672fb?s=128&d=identicon&r=PG&f=1", "display_name": "vincedjango", "link": "https://stackoverflow.com/users/5484068/vincedjango"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1534922767, "creation_date": 1534869572, "last_edit_date": 1534900831, "question_id": 51953206, "link": "https://stackoverflow.com/questions/51953206/why-passing-a-concrete-type-to-function-solves-the-error", "title": "Why passing a concrete type to function solves the error?", "body": "<p><em>p.s:</em> I wasn't sure how to name my question, fell free to let me know how I should have named it.</p>\n\n<p>If not specifying the concrete type, I get this error, which is very clear and easy to solve:</p>\n\n<blockquote>\n  <p><em>Ambiguous type variable <code>a0</code> arising from a use of <code>fct</code>\n  prevents the constraint <code>(Read a0)</code> from being solved.\n  Probable fix: use a type annotation to specify what <code>a0</code> should be.</em></p>\n</blockquote>\n\n<p>I just need more explanation on why it worked? How <code>Read</code> will know what is the type to return:</p>\n\n<pre><code>fct :: (Show a, Read b) =&gt; a -&gt; b\nfct = read . show\n\nmain = do\n  -- DOES NOT WORK: -- print (fct 4)   \n  -- WORKS: -- print (fct 4 :: Int)\n</code></pre>\n"}, {"tags": ["haskell", "yesod"], "comments": [{"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1534876223, "post_id": 51948039, "comment_id": 90859931, "body": "Have you tried removing the type signature of getAuthId ?"}, {"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1535053993, "post_id": 51948039, "comment_id": 90936245, "body": "I marked it as duplicate, as you suggseted. If you found the answer (in the duplicated post) you can answer and accept your own answer saying it&#39;s over and maybe write a small summary of the accepted answer."}], "owner": {"reputation": 1724, "user_id": 3286513, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/bc0cef8062401f1b84db320cb56c28bd?s=128&d=identicon&r=PG", "display_name": "Steven L.", "link": "https://stackoverflow.com/users/3286513/steven-l"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 0, "closed_date": 1535147171, "answer_count": 0, "score": 0, "last_activity_date": 1534852178, "creation_date": 1534852178, "question_id": 51948039, "link": "https://stackoverflow.com/questions/51948039/yesod-type-error-authid-master-vs-key-user", "closed_reason": "Duplicate", "title": "Yesod Type Error - AuthId master vs. Key User", "body": "<p>I have a Yesod application. My current goal is to have the application use a email / password for authentication. However, I am running into a type error.</p>\n\n<p>I believe I am following the directions in the <a href=\"https://www.yesodweb.com/book/authentication-and-authorization\" rel=\"nofollow noreferrer\">Yesod Book</a> properly. This is my current <a href=\"https://lpaste.net/5865328122487898112\" rel=\"nofollow noreferrer\">code for Foundation.hs</a>.</p>\n\n<p>The error is as follows:</p>\n\n<pre><code>\u2022 Could not deduce: m ~ HandlerFor site0\n  from the context: (MonadHandler m, HandlerSite m ~ master)\n    bound by the type signature for:\n              getAuthId :: forall (m :: * -&gt; *) master.\n                            (MonadHandler m, HandlerSite m ~ master) =&gt;\n                            Creds master -&gt; m (Maybe (AuthId master))\n    at src/Foundation.hs:206:18-102\n  \u2018m\u2019 is a rigid type variable bound by\n    the type signature for:\n      getAuthId :: forall (m :: * -&gt; *) master.\n                  (MonadHandler m, HandlerSite m ~ master) =&gt;\n                  Creds master -&gt; m (Maybe (AuthId master))\n    at src/Foundation.hs:206:18-102\n  Expected type: m (Maybe (AuthId master))\n    Actual type: HandlerFor site0 (Maybe (Key User))\n\u2022 In the expression:\n    runDB\n      $ do x &lt;- insertBy $ User (credsIdent creds) Nothing Nothing False\n          return\n            $ Just\n                $ case x of\n                    Left (Entity userid _) -&gt; userid\n                    Right userid -&gt; userid\n  In an equation for \u2018getAuthId\u2019:\n      getAuthId creds\n        = runDB\n            $ do x &lt;- insertBy $ User (credsIdent creds) Nothing Nothing False\n                return\n                  $ Just\n                      $ case x of\n                          Left (Entity userid _) -&gt; userid\n                          Right userid -&gt; userid\n  In the instance declaration for \u2018YesodAuth App\u2019\n\u2022 Relevant bindings include\n    getAuthId :: Creds master -&gt; m (Maybe (AuthId master))\n      (bound at src/Foundation.hs:207:5)\n|\n|     getAuthId creds = runDB $ do\n|                       ^^^^^^^^^^...\n</code></pre>\n\n<p>The part that I am focusing on is:</p>\n\n<pre><code>Expected type: m (Maybe (AuthId master))\nActual type: HandlerFor site0 (Maybe (Key User))\n</code></pre>\n\n<p>Here is what I (think) I know:</p>\n\n<ul>\n<li>m ~ HandlerFor site0</li>\n<li>type AuthId App = UserId</li>\n<li>type UserId = Key User</li>\n</ul>\n\n<p>Note: I have assumed that Template Haskell has generated the type alias <code>type UserId = Key User</code> based on <a href=\"https://www.yesodweb.com/book/persistent\" rel=\"nofollow noreferrer\">Persistent chapter of the Yesod Book</a> (search for <code>PersonId</code> on that page) and the fact that my models file contains the following:</p>\n\n<pre><code>-- By default this file is used by `persistFileWith` in Model.hs (which is imported by Foundation.hs)\n-- Syntax for this file here: https://github.com/yesodweb/persistent/blob/master/docs/Persistent-entity-syntax.md\n\nUser\n    email Text\n    password Text Maybe\n    verkey Text Maybe\n    verified Bool\n    UniqueUser email\n    deriving Typeable\n</code></pre>\n\n<p>If I make all these substitutions, the conclusion that I come to is that expected type is <code>m (Maybe (AuthId master))</code>, which is equivalent to <code>m (Maybe UserId)</code>, which is equivalent to <code>m (Maybe (Key User))</code>. For the actual type, <code>HandlerFor site0 (Maybe (Key User))</code> is equivalent to <code>m (Maybe (Key User))</code>. It seems to me that the expected and actual types are the same, but the compiler is not coming to that same conclusion. </p>\n\n<p>I was wondering what I need to do here to address the issue that the compiler is having. </p>\n\n<p>P.S. I originally posted this question on Reddit. Normally I don't post to two different places, but this is blocking me from proceeding further. </p>\n"}, {"tags": ["haskell", "types", "type-level-computation", "path-dependent-type"], "comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1534842678, "post_id": 51944931, "comment_id": 90839963, "body": "Our organization implemented package <a href=\"https://github.com/kowainik/typerep-map\" rel=\"nofollow noreferrer\"><code>typerep-map</code></a> that contains <code>Map</code> from types to values. And it&#39;s possible to apply function to values of given type with <code>typerep-map</code> (though it won&#39;t quite work for your example). But the idea is that you don&#39;t need <i>path-dependent-types</i> for this. It&#39;s enough to have RTTI (runtime type information)."}, {"owner": {"reputation": 15219, "user_id": 91522, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5de8b254c711059975670fba5ec10ab1?s=128&d=identicon&r=PG", "display_name": "Eric", "link": "https://stackoverflow.com/users/91522/eric"}, "reply_to_user": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1534845036, "post_id": 51944931, "comment_id": 90841305, "body": "Here is a formulation of a similar problem (closer to my use case). I have a HList containing functions. Some functions have n-arguments, some of them 0. I want to get an element of type <code>a</code> from this HList. I would like to apply the following algorithm. If I have find a function whose output type is <code>a</code> then I have 2 cases. Either this is a 0-ary function then I get a value of type <code>a</code>, done. Or this is a function of n arguments each of those I might be able to get from my HList by recursively running the same algorithm. If nothing matches in terms of types then I want to get a type error"}], "answers": [{"tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": false, "score": 5, "last_activity_date": 1534866384, "last_edit_date": 1534866384, "creation_date": 1534858357, "answer_id": 51949932, "question_id": 51944931, "link": "https://stackoverflow.com/questions/51944931/simulate-a-path-dependent-type-in-haskell/51949932#51949932", "title": "Simulate a path-dependent type in Haskell", "body": "<p>This is a proof search problem (\"find occurrences of <code>String</code> in this list\"), so you can expect that the solution will involve type class Prolog. I'll answer a simpler version of your question (namely \"find the <em>first</em> occurrence of <code>String</code>\") and let you figure out how to adjust it for your exact use case.</p>\n\n<p>Since we're doing a proof search, let's start by writing down the proof object we'll be searching for.</p>\n\n<pre><code>data Contains a as where\n    Here :: Contains a (a ': as)\n    There :: Contains a as -&gt; Contains a (b ': as)\n</code></pre>\n\n<p>A value of type <code>Contains a as</code> is a constructive proof that you can find <code>a</code> in the type-level list <code>as</code>. Structurally, <code>Contains</code> is like a natural number (compare <code>There (There Here)</code> with <code>S (S Z)</code>) identifying the location of <code>a</code> in the list <code>as</code>. To prove that <code>a</code> is in <code>as</code> you give its index.</p>\n\n<p>For example, you can <code>replace</code> an element at a given location in an <code>HList</code> with a new element of the same type.</p>\n\n<pre><code>replace :: a -&gt; Contains a as -&gt; HList as -&gt; HList as\nreplace x Here (HCons y ys) = HCons x ys\nreplace x (There i) (HCons y ys) = HCons y (replace x i ys)\n</code></pre>\n\n<hr>\n\n<p>We want to search for an <code>a</code> within a given list using type class Prolog. There are two cases - either you find the <code>a</code> at the head of the list, or it's somewhere in the tail. (If <code>a</code> is not in <code>as</code>, using <code>contains</code> will fail with a \"no instance\" error.) Ideally we'd write something like this:</p>\n\n<pre><code>class CONTAINS a as where\n    contains :: Contains a as\n\ninstance CONTAINS a (a ': as) where\n    contains = Here\n\ninstance CONTAINS a as =&gt; CONTAINS a (b ': as) where\n    contains = There contains  -- recursively call `contains` on the sublist\n</code></pre>\n\n<p>but this fails the overlapping instance rule. Instance contexts and type equalities are not inspected during instance search - the elaborator doesn't backtrack - so neither of these instances is more specific than the other.</p>\n\n<p>Fortunately there's <a href=\"https://wiki.haskell.org/GHC/AdvancedOverlap\" rel=\"nofollow noreferrer\">a well-known solution</a> to this problem. It involves using a closed type family to tell <code>a</code> and <code>b</code> apart. You define an auxiliary class <code>CONTAINS'</code> with an extra parameter, in this case a <code>Bool</code> telling you whether <code>a</code> can be found at the head of <code>as</code>.</p>\n\n<pre><code>class CONTAINS' (eq :: Bool) a (as :: [*]) where\n    contains' :: Contains a as\n</code></pre>\n\n<p>Then you define instances for the cases when <code>eq</code> is <code>True</code> or <code>False</code>. The elaborator can tell these instances apart, because <code>True</code> and <code>False</code> are visibly different. Note that the step case recursively calls <code>CONTAINS</code>.</p>\n\n<pre><code>instance CONTAINS' True a (a ': as) where\n    contains' = Here\n\ninstance CONTAINS a as =&gt; CONTAINS' False a (b ': as) where\n    contains' = There contains\n</code></pre>\n\n<p>Finally you define your <code>CONTAINS</code> instance in terms of <code>CONTAINS'</code>, and use the result of <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Type-Equality.html\" rel=\"nofollow noreferrer\"><code>==</code></a>, a closed type family which tests whether its arguments are equal, to pick an instance.</p>\n\n<pre><code>instance CONTAINS' (a == b) a (b ': as) =&gt; CONTAINS a (b ': as) where\n    contains = contains' @(a == b)\n</code></pre>\n\n<p>(This is one of the very few acceptable uses of Boolean type families.)</p>\n\n<p>Now you can use <code>CONTAINS</code> as you would any other class. When you try and instantiate <code>a</code> and <code>as</code> GHC will attempt to search for an <code>a</code> inside <code>as</code>, and the <code>contains</code> method will return its index.</p>\n\n<pre><code>example :: Contains Int '[Bool, Int, Char]\nexample = contains\n\n-- \"no instance for CONTAINS\"\nfailingExample :: Contains String '[Bool, Int, Char]\nfailingExample = contains\n</code></pre>\n\n<p>This is a fairly simple example and the code is already quite messy. You can definitely approach the example in your question in the same manner, but all told I'm not convinced that static checking is worth the complexity in this instance. Have you considered an implementation based on <code>Typeable</code>?</p>\n"}, {"comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1534870260, "post_id": 51952823, "comment_id": 90857080, "body": "I like the way you&#39;ve calculated an <code>Elem</code> at the type level using a type family and then reflected it down. I wouldn&#39;t have thought to do it like that! Saves a lot of the overlapping instance junk in my answer."}, {"owner": {"reputation": 15219, "user_id": 91522, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5de8b254c711059975670fba5ec10ab1?s=128&d=identicon&r=PG", "display_name": "Eric", "link": "https://stackoverflow.com/users/91522/eric"}, "edited": false, "score": 0, "creation_date": 1535378462, "post_id": 51952823, "comment_id": 91032638, "body": "Thanks both for your in-depth solutions!"}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 3, "last_activity_date": 1537647574, "last_edit_date": 1537647574, "creation_date": 1534868048, "answer_id": 51952823, "question_id": 51944931, "link": "https://stackoverflow.com/questions/51944931/simulate-a-path-dependent-type-in-haskell/51952823#51952823", "title": "Simulate a path-dependent type in Haskell", "body": "<p>A <a href=\"https://ghc.haskell.org/trac/ghc/ticket/15552\" rel=\"nofollow noreferrer\">bug</a> breaks this in current GHCs. Once the fix is merged in, this should work fine. In the meantime, the other answer can tide you over.</p>\n\n<p>First, define</p>\n\n<pre><code>data Elem :: k -&gt; [k] -&gt; Type where\n  Here :: Elem x (x : xs)\n  There :: Elem x xs -&gt; Elem x (y : xs)\n</code></pre>\n\n<p>An <code>Elem x xs</code> tells you where to find an <code>x</code> in an <code>xs</code>. Also, here's an existential wrapper:</p>\n\n<pre><code>data EntryOfVal v kvs = forall k. EntryOfVal (Elem (k, v) kvs)\n-- to be clear, this is the type constructor (,) :: Type -&gt; Type -&gt; Type\ntype family EntryOfValKey (eov :: EntryOfVal v kvs) :: Type where\n  EntryOfValKey ('EntryOfVal (_ :: Elem (k, v) kvs)) = k\ntype family GetEntryOfVal (eov :: EntryOfVal v kvs) :: Elem (EntryOfValKey eov, v) kvs where\n  GetEntryOfVal ('EntryOfVal e) = e\n</code></pre>\n\n<p>If you have an <code>Elem</code> at the type level, you may materialize it</p>\n\n<pre><code>class MElem (e :: Elem (x :: k) xs) where\n  mElem :: Elem x xs\ninstance MElem Here where\n  mElem = Here\ninstance MElem e =&gt; MElem (There e) where\n  mElem = There (mElem @_ @_ @_ @e)\n</code></pre>\n\n<p>Similarly, you may materialize an <code>EntryOfVal</code></p>\n\n<pre><code>type MEntryOfVal eov = MElem (GetEntryOfVal eov) -- can be a proper constraint synonym\nmEntryOfVal :: forall v kvs (eov :: EntryOfVal v kvs).\n               MEntryOfVal eov =&gt;\n               EntryOfVal v kvs\nmEntryOfVal = EntryOfVal (mElem @_ @_ @_ @(GetEntryOfVal eov))\n</code></pre>\n\n<p>If a type is an element of a list of types, then you may extract a value of that type from an <code>HList</code> of that list of types:</p>\n\n<pre><code>indexH :: Elem t ts -&gt; HList ts -&gt; t\nindexH Here (HCons x _) = x\nindexH (There i) (HCons _ xs) = indexH i xs\n</code></pre>\n\n<p>(I feel the need to point out how fundamentally important <code>indexH</code> is to <code>HList</code>. For one, <code>HList ts</code> is isomorphic to its indexer <code>forall t. Elem t ts -&gt; t</code>. Also, <code>indexH</code> has a dual, <code>injS :: Elem t ts -&gt; t -&gt; Sum ts</code> for suitable <code>Sum</code>.)</p>\n\n<p>Meanwhile, up on the type level, this function can give you the first possible <code>EntryOfVal</code> given a value type and a list:</p>\n\n<pre><code>type family FirstEntryOfVal (v :: Type) (kvs :: [Type]) :: EntryOfVal v kvs where\n  FirstEntryOfVal v ((k, v) : _) = 'EntryOfVal Here\n  FirstEntryOfVal v (_ : kvs) = 'EntryOfVal (There (GetEntryOfVal (FirstEntryOfVal v kvs)))\n</code></pre>\n\n<p>The reason for separating the materialization classes from <code>FirstEntryOfVal</code> is because the classes are reusable. You can easily write new type families that return <code>Elem</code>s or <code>EntryOfVal</code>s and materialize them. Merging them together into one monolithic class is messy, and now you have to rewrite the \"logic\" (not that there is much) of <code>MElem</code> every time instead of reusing it. My approach does, however, give a higher up-front cost. However, the code required is entirely mechanical, so it is conceivable that a TH library could write it for you. I don't know a library that <em>can</em> handle this, but <code>singletons</code> plans to.</p>\n\n<p>Now, this function can get you a value given a <code>EntryOfVal</code> proof:</p>\n\n<pre><code>indexHVal :: forall v kvs. EntryOfVal v kvs -&gt; HList kvs -&gt; v\nindexHVal (EntryOfVal e) = snd . indexH e\n</code></pre>\n\n<p>And now GHC can do some thinking for you:</p>\n\n<pre><code>indexHFirstVal :: forall v kvs. MEntryOfVal (FirstEntryOfVal v kvs) =&gt;\n                  HList kvs -&gt; v\nindexHFirstVal = indexHVal (mEntryOfVal @_ @_ @(FirstEntryOfVal v kvs))\n</code></pre>\n\n<p>Once you have the value, you need to find the keys. For efficiency (O(n) vs. O(n^2), I think) reasons and for my sanity, we won't make a mirror of <code>EntryOfVal</code>, but use a slightly different type. I'll just give the boilerplate without explanation, now</p>\n\n<pre><code>-- for maximal reuse:\n-- data All :: (k -&gt; Type) -&gt; [k] -&gt; Type\n-- where an All f xs contains an f x for every x in xs\n-- plus a suitable data type to recover EntriesOfKey from All\n-- not done here mostly because All f xs's materialization\n-- depends on f's, so we'd need more machinery to generically\n-- do that\n-- in an environment where the infrastructure already exists\n-- (e.g. in singletons, where our materializers decompose as a\n-- composition of SingI materialization and SingKind demotion)\n-- using All would be feasible\ndata EntriesOfKey :: Type -&gt; [Type] -&gt; Type where\n  Nowhere :: EntriesOfKey k '[]\n  HereAndThere :: EntriesOfKey k kvs -&gt; EntriesOfKey k ((k, v) : kvs)\n  JustThere :: EntriesOfKey k kvs -&gt; EntriesOfKey k (kv : kvs)\nclass MEntriesOfKey (esk :: EntriesOfKey k kvs) where\n  mEntriesOfKey :: EntriesOfKey k kvs\ninstance MEntriesOfKey Nowhere where\n  mEntriesOfKey = Nowhere\ninstance MEntriesOfKey e =&gt; MEntriesOfKey (HereAndThere e) where\n  mEntriesOfKey = HereAndThere (mEntriesOfKey @_ @_ @e)\ninstance MEntriesOfKey e =&gt; MEntriesOfKey (JustThere e) where\n  mEntriesOfKey = JustThere (mEntriesOfKey @_ @_ @e)\n</code></pre>\n\n<p>The logic:</p>\n\n<pre><code>type family AllEntriesOfKey (k :: Type) (kvs :: [Type]) :: EntriesOfKey k kvs where\n  AllEntriesOfKey _ '[] = Nowhere\n  AllEntriesOfKey k ((k, _) : kvs) = HereAndThere (AllEntriesOfKey k kvs)\n  AllEntriesOfKey k (_ : kvs) = JustThere (AllEntriesOfKey k kvs)\n</code></pre>\n\n<p>The actual value manipulation</p>\n\n<pre><code>updateHKeys :: EntriesOfKey k kvs -&gt; (k -&gt; k) -&gt; HList kvs -&gt; HList kvs\nupdateHKeys Nowhere f HNil = HNil\nupdateHKeys (HereAndThere is) f (HCons (k, v) kvs) = HCons (f k, v) (updateHKeys is f kvs)\nupdateHKeys (JustThere is) f (HCons kv kvs) = HCons kv (updateHKeys is f kvs)\n</code></pre>\n\n<p>Get GHC to think some more</p>\n\n<pre><code>updateHAllKeys :: forall k kvs. MEntriesOfKey (AllEntriesOfKey k kvs) =&gt;\n                  (k -&gt; k) -&gt; HList kvs -&gt; HList kvs\nupdateHAllKeys = updateHKeys (mEntriesOfKey @_ @_ @(AllEntriesOfKey k kvs))\n</code></pre>\n\n<p>All together now:</p>\n\n<pre><code>replaceAll :: forall t kvs.\n              (MEntryOfVal (FirstEntryOfVal t kvs), MEntriesOfKey (AllEntriesOfKey t kvs)) =&gt;\n              HList kvs -&gt; HList kvs\nreplaceAll xs = updateHAllKeys (const $ indexHFirstVal @t xs) xs\n</code></pre>\n"}], "owner": {"reputation": 15219, "user_id": 91522, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5de8b254c711059975670fba5ec10ab1?s=128&d=identicon&r=PG", "display_name": "Eric", "link": "https://stackoverflow.com/users/91522/eric"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 227, "favorite_count": 1, "accepted_answer_id": 51952823, "answer_count": 2, "score": 3, "last_activity_date": 1537647574, "creation_date": 1534841308, "last_edit_date": 1534863429, "question_id": 51944931, "link": "https://stackoverflow.com/questions/51944931/simulate-a-path-dependent-type-in-haskell", "title": "Simulate a path-dependent type in Haskell", "body": "<p>Here is a simplified example of what I want to do. Let's say you have a <code>HList</code> of pairs:</p>\n\n<pre><code>let hlist = HCons (1, \"1\") (HCons (\"0\", 2) (HCons (\"0\", 1.5) HNil))\n</code></pre>\n\n<p>Now I want to write a function <code>replaceAll</code> which will replace all the \"keys\" of a given type with the first \"value\" of the same type. For example, with the <code>HList</code> above I would like to replace all the <code>String</code> keys with <code>\"1\"</code> which is the first value of type <code>String</code> found in the <code>HList</code></p>\n\n<pre><code> replaceAll @String hlist =\n    HCons (1, \"1\") (HCons (\"1\", 2) (HCons (\"1\", 1.5) HNil))\n</code></pre>\n\n<p>This seems to require path-dependent types in order to \"extract\" the type of the first pair and being able to use it to direct the replacement of keys in a second step but I don't know how to encode this in Haskell.</p>\n"}, {"tags": ["haskell", "random", "floating-point", "precision"], "comments": [{"owner": {"reputation": 139300, "user_id": 298225, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ef102f4ee36e58d09e0b27cd5393a1d8?s=128&d=identicon&r=PG", "display_name": "Eric Postpischil", "link": "https://stackoverflow.com/users/298225/eric-postpischil"}, "edited": false, "score": 1, "creation_date": 1534834898, "post_id": 51942734, "comment_id": 90836013, "body": "The quality of software is how well it serves the goal to be achieved. What is the goal to be achieved in this case? If the client of the generator just wants some samples from an evenly spaced distribution, then the first generator is good. If you want to model a uniform distribution over the reals as finely as possible, then maybe this is better. But, if we picked a sample from a uniform distribution over the reals and rounded it to the nearest representable value, we would not end up with your distribution, because a point at the low end of a binade (&#189;, &#188;,\u2026) should be less frequent\u2026"}, {"owner": {"reputation": 139300, "user_id": 298225, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ef102f4ee36e58d09e0b27cd5393a1d8?s=128&d=identicon&r=PG", "display_name": "Eric Postpischil", "link": "https://stackoverflow.com/users/298225/eric-postpischil"}, "edited": false, "score": 1, "creation_date": 1534835126, "post_id": 51942734, "comment_id": 90836114, "body": "\u2026 than points inside the binade, because, for a point inside the binade, all points in (x\u2212&#189;u, x+&#189;u) round to representable value x, where u is the ULP for the binande (and the endpoints may or may not be included, depending on the low bit of x), but, for x the low endpoint, only points in (x\u2212&#188;u, x+&#189;u) round to x, because, below x-&#188;u, the high value in the next lower binade is closer. Another consideration is how the client is going to use the samples. A common thing to do is multiply by some b and add a, so scale to an interval [a, a+b).\u2026"}, {"owner": {"reputation": 139300, "user_id": 298225, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ef102f4ee36e58d09e0b27cd5393a1d8?s=128&d=identicon&r=PG", "display_name": "Eric Postpischil", "link": "https://stackoverflow.com/users/298225/eric-postpischil"}, "edited": false, "score": 1, "creation_date": 1534835225, "post_id": 51942734, "comment_id": 90836166, "body": "\u2026 Even with a and b merely 1, your fine-tuning goes out the window as low bits are lost when 1 is added. And the effects of rounding during the multiply and the add (with other values of a and b, not just 1) may skew the distribution. So, again, what generator is good for what application depends on the application."}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "reply_to_user": {"reputation": 139300, "user_id": 298225, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ef102f4ee36e58d09e0b27cd5393a1d8?s=128&d=identicon&r=PG", "display_name": "Eric Postpischil", "link": "https://stackoverflow.com/users/298225/eric-postpischil"}, "edited": false, "score": 0, "creation_date": 1534835704, "post_id": 51942734, "comment_id": 90836410, "body": "@EricPostpischil &quot;If you want to model a uniform distribution over the reals as finely as possible&quot;, yes, that&#39;s my goal. But since the RNG is supposed to be for right-open ranges, rather than &quot;rounded it to the nearest representable value&quot;, it&#39;s &quot;rounded it down&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1534989834, "post_id": 51968195, "comment_id": 90904835, "body": "Though, since my original version had <code>O(2\u207f)</code> time complexity (where <code>n</code> is the length of exponent bits of FP type) and you divided it by a constant factor, it will still be <code>O(2\u207f)</code>. Also, if I generated a random single 2\u207f-bit integer for the FP RNG, the time complexity will be worse <code>\u0398(2\u207f)</code>, since the system RNG can only generate integers with a fixed bit length."}], "tags": [], "owner": {"reputation": 112912, "user_id": 2410359, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/pIl9T.png?s=128&g=1", "display_name": "chux - Reinstate Monica", "link": "https://stackoverflow.com/users/2410359/chux-reinstate-monica"}, "is_accepted": true, "score": 1, "last_activity_date": 1534945081, "creation_date": 1534945081, "answer_id": 51968195, "question_id": 51942734, "link": "https://stackoverflow.com/questions/51942734/should-floating-point-rng-be-preciser-near-0/51968195#51968195", "title": "Should Floating-Point RNG be preciser near 0?", "body": "<blockquote>\n  <p>Should Floating-Point RNG be preciser near 0?</p>\n</blockquote>\n\n<p>Depends on function goals as well commented by <a href=\"https://stackoverflow.com/questions/51942734/should-floating-point-rng-be-preciser-near-0#comment90836013_51942734\">@Eric Postpischil</a>.  </p>\n\n<p>It is like asking if <code>tan(x)</code> is better than <code>sin(x)</code>: it depends on the goal.  Both give the same answers for small <code>x</code> yet differ in another part of the range.</p>\n\n<hr>\n\n<blockquote>\n  <p>Can my version be considered as a better version?</p>\n</blockquote>\n\n<p>A reason why it is not better: time to complete can be quite large in the worst case - even though it may be rare.</p>\n\n<blockquote>\n  <p>the RNG makes recursion through [\u00bc,\u00bd), [\u215b,\u00bc), and so on, until the range is denormal.</p>\n</blockquote>\n\n<p>Recursion though [\u00bc,\u00bd), [\u215b,\u00bc) to denormal can take <em>thousands of recursions</em>. </p>\n\n<p>To help a tad, instead code could generate a random exponent, still recursively, yet faster (MSBit of n-bit <code>random</code> becomes exponent unless the random was 0, then a recursive call needed.) </p>\n\n<p>This reduces the recursion by a factor on N (bit width of <code>random</code> number).</p>\n\n<p>Yet a solution that does not potential recurse <a href=\"https://en.wikipedia.org/wiki/20_(number)\" rel=\"nofollow noreferrer\">scores</a> of times, needs a different <code>random</code> to compute the exponent.</p>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 51968195, "answer_count": 1, "score": 3, "last_activity_date": 1534945081, "creation_date": 1534832617, "last_edit_date": 1534836470, "question_id": 51942734, "link": "https://stackoverflow.com/questions/51942734/should-floating-point-rng-be-preciser-near-0", "title": "Should Floating-Point RNG be preciser near 0?", "body": "<p>The Floating-Point RNG from <code>System.Random</code> looks simple, yet inaccurate to me:</p>\n\n<pre><code>instance Random Double where\n  randomR = randomRFloating\n  random rng     = \n    case random rng of \n      (x,rng') -&gt; \n          -- We use 53 bits of randomness corresponding to the 53 bit significand:\n          ((fromIntegral (mask53 .&amp;. (x::Int64)) :: Double)  \n       /  fromIntegral twoto53, rng')\n   where \n    twoto53 = (2::Int64) ^ (53::Int64)\n    mask53 = twoto53 - 1\n</code></pre>\n\n<p>Though this RNG indeed produces FP numbers uniformly, there is one thing that I'm doubtful of: <strong>There are some numbers in the range that the RNG cannot produce.</strong></p>\n\n<p>Specifically, \"too\" precise numbers. For example, this RNG can produce (represented as binary IEEE Double-precision FP; sign, exponent, and then mantissa):</p>\n\n<pre><code>0 01111111101 0000000000000000000000000000000000000000000000000000\n</code></pre>\n\n<p>which is exactly \u00bc, but cannot produce:</p>\n\n<pre><code>0 01111111101 0000000000000000000000000000000000000000000000000001\n</code></pre>\n\n<p>because that last <code>1</code> (barely) has too much precision.</p>\n\n<p>I doubted if this should happen, so I wrote my own uniform FP RNG:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n\nimport Data.Bifunctor\nimport System.Random\n\nrandomFloat1to2 :: (RandomGen g, Random a, RealFloat a) =&gt; g -&gt; (a, g) -- Uniformly generates random Float among [1,2)\nrandomFloat1to2 g = first (1+) (random g)\n\nrandomFloatExp :: forall a g. (RandomGen g, Random a, RealFloat a) =&gt; Int -&gt; g -&gt; (a, g) -- Uniformly generates random Float among [0, 2^(exp+1))\nrandomFloatExp exp g = let\n    (minexp, _) = floatRange (0 :: a)\n    (upperHalf, g') = random g\n    in if exp == minexp\n        then (0, g') -- Denormal numbers treated as 0\n        else if upperHalf\n            then first (2^^exp *) (randomFloat1to2 g')\n            else randomFloatExp (exp-1) g'\n\nrandomFloat :: (RandomGen g, Random a, RealFloat a) =&gt; g -&gt; (a, g) -- Uniformly generates random Float among [0,1)\nrandomFloat = randomFloatExp (-1)\n</code></pre>\n\n<p>Explanation:</p>\n\n<p>Among the <code>Double</code> numbers in the range [0,1), all numbers in [\u00bd,1) have IEEE exponent <code>01111111110</code> while the others have lower one. So the RNG makes a coin flip:</p>\n\n<p>If a head comes out, the RNG picks a random number among [\u00bd,1) via multiplying \u00bd and a random number among [1,2). Since the default <code>random</code> effectively picks a random mantissa, we can add 1 to it to make a uniform RNG for the range [1,2).</p>\n\n<p>If not, the RNG makes recursion through [\u00bc,\u00bd), [\u215b,\u00bc), and so on, until the range is denormal.</p>\n\n<p>Can my version be considered as a better version?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "is_accepted": true, "score": 1, "last_activity_date": 1534795063, "creation_date": 1534795063, "answer_id": 51937735, "question_id": 51936453, "link": "https://stackoverflow.com/questions/51936453/text-encoding-when-combining-http-conduit-and-scalpel-core/51937735#51937735", "title": "text encoding when combining http-conduit and scalpel-core", "body": "<p>You're correct to want to decode/encode UTF8 here, you only need to make small changes:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main where\n\nimport Lib\nimport Network.HTTP.Simple\nimport qualified Data.ByteString.Lazy.Char8 as L8\nimport Text.HTML.Scalpel\nimport Data.Text.Lazy.Encoding (decodeUtf8, encodeUtf8)\n\nmain :: IO ()\nmain = do\n    let address = \"http://www.myriobiblos.gr/bible/nt2/matthew/1.asp\"\n    response &lt;- httpLBS address\n    putStrLn $ \"The status code was: \" ++\n                show (getResponseStatusCode response)\n    print $ getResponseHeader \"Content-Type\" response\n    let responseBody = decodeUtf8 $ getResponseBody response\n    let innerText = scrapeStringLike responseBody\n                        $ do chroot \"tr\" $ do text \"tr\"\n    case innerText of\n       (Just content) -&gt; L8.writeFile \"ch1.txt\"  (encodeUtf8 content)\n       Nothing -&gt; return ()\n</code></pre>\n\n<p>Decode the body to get text content, manipulate that, and encode it again to get bytes to write to disk.</p>\n"}], "owner": {"reputation": 2659, "user_id": 581085, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/5ef2ca8729e462595f1500b554ef95e0?s=128&d=identicon&r=PG", "display_name": "Dragno", "link": "https://stackoverflow.com/users/581085/dragno"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 51937735, "answer_count": 1, "score": 1, "last_activity_date": 1534796813, "creation_date": 1534789011, "last_edit_date": 1534796813, "question_id": 51936453, "link": "https://stackoverflow.com/questions/51936453/text-encoding-when-combining-http-conduit-and-scalpel-core", "title": "text encoding when combining http-conduit and scalpel-core", "body": "<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main where\n\nimport Lib\nimport Network.HTTP.Simple\nimport qualified Data.ByteString.Lazy.Char8 as L8\nimport Text.HTML.Scalpel.Core\nimport Data.Text.Lazy.Encoding (decodeUtf8)\nimport qualified Data.Text.Lazy.IO as L\nmain :: IO ()\nmain = do\n    let address = \"http://www.myriobiblos.gr/bible/nt2/matthew/1.asp\"\n    response &lt;- httpLBS address\n    putStrLn $ \"The status code was: \" ++\n                show (getResponseStatusCode response)\n    print $ getResponseHeader \"Content-Type\" response\n    let responseBody = getResponseBody response\n</code></pre>\n\n<p>If the code above is followed by <code>L8.writeFile \"ch1.txt\" responseBody</code>, then the text is saved without problem in the encoding. But if the code is followed by</p>\n\n<pre><code>    let innerText = scrapeStringLike responseBody\n                        $ do chroot \"tr\" $ do text \"tr\"\n    case innerText of\n       (Just content) -&gt; L8.writeFile \"ch1.txt\"  content\n       Nothing -&gt; L8.writeFile \"ch1.txt\" \"\"\n</code></pre>\n\n<p>then the resulting text is scrambled. As you can see in my import list I have tried to use the Data.Text type but I'm doing something wrong. Also when I tried to use decodeUtf8 on responseBody or on content then I took the following message:</p>\n\n<blockquote>\n  <p>ch1.txt: commitAndReleaseBuffer: invalid argument (invalid character)</p>\n</blockquote>\n\n<p>Any ideas of what I'm doing wrong?</p>\n"}, {"tags": ["haskell", "haskell-lens", "lenses"], "comments": [{"owner": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "edited": false, "score": 0, "creation_date": 1534786323, "post_id": 51935621, "comment_id": 90821663, "body": "Could you please include imports?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "edited": false, "score": 0, "creation_date": 1534786585, "post_id": 51935621, "comment_id": 90821782, "body": "@robx it&#39;s the lens-aeson package."}], "answers": [{"comments": [{"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1534788194, "post_id": 51936187, "comment_id": 90822463, "body": "<code>re _Array</code>  adds <code>Contravariant f</code> to the context :("}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1534834103, "post_id": 51936187, "comment_id": 90835629, "body": "the type of <code>%~</code> does not align correctly: Couldn&#39;t match type \u2018vector-0.12.0.1:Data.Vector.Vector a0                            -&gt; f0 (vector-0.12.0.1:Data.Vector.Vector a0)\u2019                      with \u2018vector-0.12.0.1:Data.Vector.Vector Value\u2019`"}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1534834939, "post_id": 51936187, "comment_id": 90836031, "body": "I managed to get it working by adapting the type of the function, Thanks for the answer."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 2, "last_activity_date": 1534787931, "creation_date": 1534787931, "answer_id": 51936187, "question_id": 51935621, "link": "https://stackoverflow.com/questions/51935621/how-can-i-reconstruct-a-json-array-from-a-slice-using-lens/51936187#51936187", "title": "How can I reconstruct a JSON array from a slice using lens?", "body": "<p><code>_Array</code> is a <code>Prism</code>. This means you can invert it to get <code>re _Array :: AsValue t =&gt; Getter (Vector Value) t</code>.</p>\n\n<pre><code>e ^? key \"headers\" . nth 0 . _Array . sliced 0 2 . re _Array\n</code></pre>\n\n<p>You can also use <code>over</code> (or its alias <code>(%~)</code>):</p>\n\n<pre><code>e ^? key \"headers\" . nth 0 . to (over _Array (slice 0 2))\ne ^? key \"headers\" . nth 0 . to (_Array %~ slice 0 2)\n</code></pre>\n"}], "owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 51936187, "answer_count": 1, "score": 0, "last_activity_date": 1534792895, "creation_date": 1534785322, "last_edit_date": 1534787958, "question_id": 51935621, "link": "https://stackoverflow.com/questions/51935621/how-can-i-reconstruct-a-json-array-from-a-slice-using-lens", "title": "How can I reconstruct a JSON array from a slice using lens?", "body": "<p>I would like to extract a slice of a JSON array using lenses, and get a <code>Value</code> back. More specifically, I am trying to do the following:</p>\n\n<pre><code>$ import qualified Data.ByteString.Lazy as LBS\n$ import Data.Aeson.Lens\n$ import Control.Lens\n$ let e = \"{\\\"headers\\\":[[\\\"Host\\\",\\\"localhost:9090\\\"],[\\\"Accept-Encoding\\\",\\\"gzip\\\"]]}\" :: LBS.ByteString\n$ e ^? key \"headers\" . nth 0 . _Array . sliced 0 2\n$ Just [String \"Host\",String \"localhost:9090\"]\n</code></pre>\n\n<p>It works but I would like the result to be a <code>Value</code> and not a <code>List</code>. How can I \"reconstruct\" a JSON array as part of the lens expression?</p>\n"}, {"tags": ["haskell", "yesod", "persistent"], "answers": [{"comments": [{"owner": {"reputation": 7297, "user_id": 1176156, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/89604545aa57aa3d14306af60126e193?s=128&d=identicon&r=PG", "display_name": "MaxGabriel", "link": "https://stackoverflow.com/users/1176156/maxgabriel"}, "edited": false, "score": 1, "creation_date": 1534809168, "post_id": 51935059, "comment_id": 90829666, "body": "&quot;Looking specification at&quot; &lt;- Seems like a typo"}], "tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": false, "score": 1, "last_activity_date": 1534822623, "last_edit_date": 1534822623, "creation_date": 1534782798, "answer_id": 51935059, "question_id": 51934760, "link": "https://stackoverflow.com/questions/51934760/error-while-getting-current-user-id/51935059#51935059", "title": "Error while getting current user id", "body": "<p>Looking specifically at:</p>\n\n<pre><code>registerFilePath :: String -&gt; FilePath\nregisterFilePath f = do\n    (_,muser) &lt;- requireAuthPair\n    uploadDirectory &lt;/&gt; showText (userIdent muser) &lt;/&gt; f\n</code></pre>\n\n<p>The type signature of this doesn't look right. You're saying that you're returning a <em>pure</em> <code>FilePath</code> value, but in fact it should be wrapped up in some monadic type, e.g. <code>String -&gt; Handler FilePath</code>. You'd also likely need to add a <code>return $</code> before the <code>uploadDirectory</code>.</p>\n"}], "owner": {"reputation": 11, "user_id": 10250932, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-KDznm_Ypr4U/AAAAAAAAAAI/AAAAAAAAAgc/nsg9f3FMgS0/photo.jpg?sz=128", "display_name": "Felipe Argolo", "link": "https://stackoverflow.com/users/10250932/felipe-argolo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1534822623, "creation_date": 1534781678, "question_id": 51934760, "link": "https://stackoverflow.com/questions/51934760/error-while-getting-current-user-id", "title": "Error while getting current user id", "body": "<p>I am running through a minor problem that I cannot solve.\nYesod with postgres template.</p>\n\n<p>My goal is to create a new directory named after current uid.</p>\n\n<pre><code>-- model\n-- User\n     ident Text\n--   ...\n\n-- Handler\nuploadDirectory :: FilePath\nuploadDirectory = \"static/docs\"\n\nwriteToServer :: FileInfo -&gt; Handler FilePath\nwriteToServer file = do\n    let filename = unpack $ fileName file\n        filepath = registerFilePath filename\n    liftIO $ fileMove file filepath\n    return filename\n\nregisterFilePath :: String -&gt; FilePath\nregisterFilePath f = do\n    (_,muser) &lt;- requireAuthPair\n    uploadDirectory &lt;/&gt; showText (userIdent muser) &lt;/&gt; f\n</code></pre>\n\n<p>I get:</p>\n\n<pre><code>*\"Couldn't match type \u2018AuthEntity (HandlerSite [])\u2019 with \u2018User\u2019\nExpected type: [(AuthId (HandlerSite []), User)]\nActual type: [(AuthId (HandlerSite []), AuthEntity (HandlerSite []))]\"*\n</code></pre>\n\n<p>It seems that calling userIdent requires muser to be of Persistent type 'User'.\nHowever requireAuthPair returns an AuthEntity (HandlerSite []).</p>\n\n<p>I guess requireAuthPair is not defined for this situation. Any help?</p>\n\n<p>Yours faithfully,\nFelipe Argolo</p>\n\n<p>PS: I did not alter the postgres template authentication settings.\nI'm testing with dummy authenticantion first</p>\n"}, {"tags": ["haskell", "syntax"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1534776370, "post_id": 51933246, "comment_id": 90816500, "body": "What do you mean with &quot;<i>what happens afterwards</i>&quot;?"}, {"owner": {"reputation": 475, "user_id": 6346482, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh4.googleusercontent.com/-pejxz6NLUb0/AAAAAAAAAAI/AAAAAAAAAHI/N2mNSw_SLzs/photo.jpg?sz=128", "display_name": "DORpapst", "link": "https://stackoverflow.com/users/6346482/dorpapst"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1534776880, "post_id": 51933246, "comment_id": 90816810, "body": "Sorry, that was bad written by me, I have corrected this. I just meant what the rest of the list means. Indeed nothing happens because it&#39;s just a definition."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1534777323, "post_id": 51933246, "comment_id": 90817092, "body": "There are countless Haskell tutorials available, and any of them should discuss the type declaration syntax used here. Meanwhile, doing a good and thorough job of answering the question asked here is quite involved and would require covering currying, parametric polymorphism, and ad-hoc polymorphism, each a chapter in its own right. So I vote to close as &quot;too broad&quot; -- but do have a read through some tutorials, which should have the requisite chapters already written."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 4, "creation_date": 1534778808, "post_id": 51933246, "comment_id": 90817992, "body": "Please, please read <a href=\"http://learnyouahaskell.com/chapters\" rel=\"nofollow noreferrer\">LYAH</a> before asking questions like this. LYAH is a fantastic resource for beginners on the basics of Haskell."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1534791768, "post_id": 51933246, "comment_id": 90823988, "body": "see <a href=\"https://wiki.haskell.org/Keywords#.3D.3E\" rel=\"nofollow noreferrer\">wiki.haskell.org/Keywords#.3D.3E</a>, <a href=\"https://wiki.haskell.org/Keywords#-.3E\" rel=\"nofollow noreferrer\">wiki.haskell.org/Keywords#-.3E</a>, <a href=\"https://wiki.haskell.org/Keywords#\" rel=\"nofollow noreferrer\">wiki.haskell.org/Keywords#</a>:: ."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1534787430, "post_id": 51933610, "comment_id": 90822154, "body": "Paragraph two isn&#39;t quite right. If there are no constraints on <code>a</code>, one simply writes <code>a -&gt; String</code>, or you can write <code>() =&gt; a -&gt; String</code> if you really want to think of the type signature as being constrained with the trivial constraint that is always satisfied.  <code>a =&gt; a -&gt; String</code> tries to use <code>a</code> as both a constraint and an inhabited type, and no types have both of those kinds. Also, <code>=&gt;</code> definitely does not denote a \u03a0-type nor a type-level function."}, {"owner": {"reputation": 2544, "user_id": 3374593, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b52e8f3dbba2dd84cee919766d30125d?s=128&d=identicon&r=PG&f=1", "display_name": "L&#230;rne", "link": "https://stackoverflow.com/users/3374593/l%c3%a6rne"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534945813, "post_id": 51933610, "comment_id": 90887069, "body": "Okay I&#39;ve misunderstood <code>=&gt;</code> since ever.  The type-level function was only an allegory.  Marking the answer as purely wrong."}], "tags": [], "owner": {"reputation": 2544, "user_id": 3374593, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b52e8f3dbba2dd84cee919766d30125d?s=128&d=identicon&r=PG&f=1", "display_name": "L&#230;rne", "link": "https://stackoverflow.com/users/3374593/l%c3%a6rne"}, "is_accepted": false, "score": 0, "last_activity_date": 1534945755, "last_edit_date": 1534945755, "creation_date": 1534777500, "answer_id": 51933610, "question_id": 51933246, "link": "https://stackoverflow.com/questions/51933246/haskell-understand-definition-of-functions/51933610#51933610", "title": "Haskell Understand Definition of functions", "body": "<p><strong>EDIT from the author</strong> <em>While this explanation is close enough for my base level and the OP base level, this reply is simply wrong, see the comments below.  Please consider other answers.</em></p>\n\n<p>A function that take, let's say an <code>Integer</code> and returns a <code>Float</code> will be written <code>Integer -&gt; Float</code>. </p>\n\n<p>However, your function may be more generic.  For instance it can work on any type and return a String.  A dummy name, like <code>a</code>, will be used for the input type.  Since the signature is variadic upon <code>a</code>, the dependence on the variadic type will be written with <code>=&gt;</code>.  Hence the signature would be <code>a =&gt; a -&gt; String</code>.  If you ever did type theory, this is a \u03a0-type.  Else, think of <code>=&gt;</code> as the arrow used to denote a \"function of types\".  Here that \"function of types\" takes type <code>a</code> and return type <code>a -&gt; String</code>, which is a regular function type. (Note that <code>=&gt;</code> has lower priority than <code>-&gt;</code> for putting brackets, because else it makes no sense).</p>\n\n<p>If the type you're depending upon cannot be anytype, but must be a type with some properties, you have to specify its class of properties by giving the class name before the type.  In you question, a type that behaves like a real-valued floating point number is of class <code>Floating</code>.</p>\n\n<p>Thus, <code>Floating a =&gt; a -&gt; a</code> is a dependent function type, depending on <code>a</code> which must be of class <code>Floating</code>.  Likewise, <code>(RealFrac a, Integral b) =&gt; a -&gt; b</code> is a double dependent function type, the first dependency must be of class <code>RealFrac</code> while the second must be of class <code>Integral</code>.</p>\n\n<p><code>::</code> is just the separator between the value (or, in type theory, a \"witness\") and its type. <code>truncate :: (RealFrac a, Integral b) =&gt; a -&gt; b</code> just means that <code>truncate</code> is of (double-dependent) type <code>(RealFrac a, Integral b) =&gt; a -&gt; b</code></p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 5, "last_activity_date": 1534778868, "last_edit_date": 1534778868, "creation_date": 1534777714, "answer_id": 51933667, "question_id": 51933246, "link": "https://stackoverflow.com/questions/51933246/haskell-understand-definition-of-functions/51933667#51933667", "title": "Haskell Understand Definition of functions", "body": "<blockquote>\n  <p>I know <code>::</code> is about definition the function</p>\n</blockquote>\n\n<p>er, no. <code>::</code> means that you're giving a <em>type signature</em>, this is not necessarily related to defining the function (though in practice, you <em>should</em> give a type signature to every function you write, and even if you don't, the compiler will infer a signature).</p>\n\n<pre><code>sqrt :: Double -&gt; Double       -- } type signature\n\nsqrt 0 = 0                     -- \u23ab\nsqrt 1 = 1                     -- \u23aa\nsqrt 2 = 1.4  -- should do     -- \u23ac definition\nsqrt 4 = 2                     -- \u23aa\nsqrt _ = error \"too hard\"      -- \u23ad\n</code></pre>\n\n<p>Now \u2013 as you've seen these signatures are actually a bit different, not just <code>Double -&gt; Double</code>. Specifically, the signature <code>sqrt :: Floating a =&gt; a -&gt; a</code> is parsed as</p>\n\n<pre><code>sqrt :: forall a .\n       (Floating a)\n      =&gt; (a -&gt; a)\n</code></pre>\n\n<p>which means, this actually works <em>for all</em> types <code>a</code> (including, but not limited to <code>Double</code>), provided they have an <code>instance Floating</code>. I.e., the type must support the interface of the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Floating\" rel=\"nofollow noreferrer\"><code>Floating</code> class</a>. For each of these types, the signature will be \u201ctype to itself\u201d, i.e.</p>\n\n<pre><code>sqrt :: Double -&gt; Double\nsqrt :: Complex Double -&gt; Complex Double\nsqrt :: Float -&gt; Float\nsqrt :: ExactSymbolic -&gt; ExactSymbolic\n</code></pre>\n\n<p>but not e.g. <code>sqrt :: String -&gt; String</code>, because <code>String</code> is not an instance of <code>Floating</code>, nor <code>Bool -&gt; Char</code>, which doesn't even match the <code>a -&gt; a</code> pattern.</p>\n\n<p>For the other examples it's similar:</p>\n\n<ul>\n<li><code>(+) :: Num a =&gt; a -&gt; a -&gt; a</code> defines an operator that can be used as e.g. <code>Int -&gt; Int -&gt; Int</code> or <code>Rational -&gt; Rational -&gt; Rational</code>, for all types in the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Num\" rel=\"nofollow noreferrer\"><code>Num</code> class</a>.</li>\n<li><code>truncate :: (RealFrac a, Integral b) =&gt; a -&gt; b</code> can actually convert between two <em>different</em> types, for instance <code>Double -&gt; Int</code> or <code>Rational -&gt; Integer</code>. Requirement is that the argument is in the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:RealFrac\" rel=\"nofollow noreferrer\"><code>RealFrac</code> class</a>, and the result in the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Integral\" rel=\"nofollow noreferrer\"><code>Integral</code> class</a>.</li>\n</ul>\n\n<hr>\n\n<p>How all of these functions are <em>defined</em> is another matter \u2013 the type signature doesn't tell you that (although for particularly \u201cfundamental\u201d functions, there may actually be only one sensible way to implement it given the type signature). To see how a function is defined, you need to look at the source code. This is normally linked from the Haddock documentation, the little <code>Source</code> link right of the signature. For built-in functions like <code>(+)</code> on <code>Double</code> you won't find any definition though, since these actually just resolve to primops, i.e. hardware processor instructions.</p>\n"}], "owner": {"reputation": 475, "user_id": 6346482, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh4.googleusercontent.com/-pejxz6NLUb0/AAAAAAAAAAI/AAAAAAAAAHI/N2mNSw_SLzs/photo.jpg?sz=128", "display_name": "DORpapst", "link": "https://stackoverflow.com/users/6346482/dorpapst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 51933667, "answer_count": 2, "score": -2, "last_activity_date": 1534945755, "creation_date": 1534776251, "last_edit_date": 1534776886, "question_id": 51933246, "link": "https://stackoverflow.com/questions/51933246/haskell-understand-definition-of-functions", "title": "Haskell Understand Definition of functions", "body": "<p>I am not quite able to find a good manual for the following:\nIf I want to get the definition of a functionality in Haskell, then I am using <code>:t</code>\nSo for example with:</p>\n\n<pre><code>:t sqrt\n:t (+)\n:t truncate\n</code></pre>\n\n<p>I will get:</p>\n\n<pre><code>sqrt :: Floating a =&gt; a -&gt; a\n(+) :: Num a =&gt; a -&gt; a -&gt; a\ntruncate :: (RealFrac a, Integral b) =&gt; a -&gt; b\n</code></pre>\n\n<p>I am just not sure how to understand the syntax here, concerning on <code>=&gt;</code> and <code>-&gt;</code>.\nI know <code>::</code> is about definition the function, but what does the rest mean, concerning the function definition. This will be important to understand functions in general.</p>\n"}, {"tags": ["haskell", "haskell-diagrams"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1534771986, "post_id": 51931656, "comment_id": 90813694, "body": "Why are you defining a new backend? Why not just call <code>renderDia</code> (or whatever) at two different types in your program?"}, {"owner": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534773908, "post_id": 51931656, "comment_id": 90814984, "body": "To be honest, I&#39;m not completely sure. Chances are that I couldn&#39;t get things to type check without a concrete backend type back when I tried that approach. Knowing that&#39;s the default correct approach(?), I&#39;ll give it another shot. I&#39;m still curious how/whether the composed backend would work though."}], "answers": [{"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1570358690, "post_id": 51959164, "comment_id": 102881973, "body": "I wonder why this awesome <code>Back</code> constraint synonym is not in the <code>diagrams</code> package yet."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1570359092, "post_id": 51959164, "comment_id": 102882066, "body": "I am not sure I understand why is there <code>Renderable (Text Double) b</code> there. What benefit does it add?"}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1570384409, "post_id": 51959164, "comment_id": 102888405, "body": "My point was that each program can define a type alias to suit its local needs. I frequently need Text, and usually use Double, but a program with different needs can use only the constraints it needs."}], "tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 3, "last_activity_date": 1534905476, "creation_date": 1534905476, "answer_id": 51959164, "question_id": 51931656, "link": "https://stackoverflow.com/questions/51931656/how-to-define-a-diagrams-backend-that-combines-several-primitive-backends/51959164#51959164", "title": "How to define a Diagrams backend that combines several primitive backends", "body": "<p>I agree with other-Daniel about keeping the <code>Diagram</code> polymorphic and using it at two types.  Something like:</p>\n\n<pre><code>dia :: forall b. (Renderable (Path V2 Double) b, V b ~ V2, N b ~ Double) =&gt; Diagram b\ndia = circle 1\n</code></pre>\n\n<p>The type sigs will only get worse as you add primitive types, so I'd probably define a constraint for all the primitives I want:</p>\n\n<pre><code>type Back b = (V b ~ V2, N b ~ Double, \n    Renderable (Path V2 Double) b, Renderable (Text Double) b)\n\ndia2 :: Back b =&gt; Diagram b\ndia2 = circle 1 # fc blue\n</code></pre>\n\n<p>I don't think we can write <code>renderRTree</code> for your <code>Multi</code> and have it type-check.  We expect that <em>all</em> the instances of <code>Renderable _ Multi</code> will be of the form <code>(Renderable p SVG, Renderable p Rasterific) =&gt; Renderable p Multi</code>, which should be enough to write <code>toA</code>.  But we can't (AFAIK) promise this to GHC, because <code>Renderable</code> is an open type class.</p>\n"}], "owner": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1534905476, "creation_date": 1534771193, "last_edit_date": 1534778411, "question_id": 51931656, "link": "https://stackoverflow.com/questions/51931656/how-to-define-a-diagrams-backend-that-combines-several-primitive-backends", "title": "How to define a Diagrams backend that combines several primitive backends", "body": "<p>I would like to make the same program use two different <a href=\"https://diagrams.github.io/\" rel=\"nofollow noreferrer\">Diagrams</a> backends, notably <a href=\"https://hackage.haskell.org/package/diagrams-rasterific\" rel=\"nofollow noreferrer\">diagrams-rasterific</a> to generate PNGs, and <a href=\"https://hackage.haskell.org/package/diagrams-svg\" rel=\"nofollow noreferrer\">diagrams-svg</a> to generate SVGs, from the same diagram. Since Diagrams seems to be designed around using a single backend, I'm trying to define a composed backend, but am running into trouble defining <code>renderToTree</code> for the <a href=\"https://hackage.haskell.org/package/diagrams-core-1.4.1.1/docs/Diagrams-Core-Types.html#t:Backend\" rel=\"nofollow noreferrer\"><code>Backend</code></a> instance:</p>\n\n<pre><code>import Diagrams.Core\nimport Diagrams.Core.Types\n\nimport qualified Diagrams.Backend.Rasterific as BackendA\nimport qualified Diagrams.Backend.SVG as BackendB\n\ntokenA :: BackendA.B\ntokenA = BackendA.Rasterific\n\ntokenB :: BackendB.B\ntokenB = BackendB.SVG\n\ndata Multi = Multi\n  deriving (Eq, Ord, Read, Show)\n\ntype B = Multi\n\ndata MultiResult n = MultiResult (Result BackendA.B V2 n) (Result BackendB.B V2 n)\n-- alternatively:\n-- data MultiResult n =\n--     ResultA (Result BackendA.B V2 n)\n--   | ResultB (Result BackendB.B V2 n)\n\ntype instance V Multi = V2\ntype instance N Multi = Double\n\ninstance (TypeableFloat n, Show n) =&gt; Backend Multi V2 n where\n  data Render Multi V2 n =\n      RenderMulti\n          { renderA :: Render BackendA.B V2 n\n          , renderB :: Render BackendB.B V2 n\n          }\n  -- alternatively:\n  -- data Render Multi V2 n =\n  --     RenderA (renderA :: Render BackendA.B V2 n)\n  --   | RenderB (renderB :: Render BackendB.B V2 n)\n\n  type Result Multi V2 n = MultiResult n\n\n  data Options Multi V2 n = MultiOptions\n\n  renderRTree _ o tree = MultiResult\n      (renderRTree tokenA (toOptA o) (treeToA tree))\n      (renderRTree tokenB (toOptB o) (treeToB tree))\n</code></pre>\n\n<p>I'm unclear of how to defer to the individual backend implementations' <code>renderRTree</code> functions here. In either alternative structure (with the Render and Result types as sums or products), I'm failing to make the types match up. Concretely, in this approach, I'm stuck at</p>\n\n<pre><code>treeToA :: RTree Multi V2 n a -&gt; RTree BackendA.B V2 n a\ntreeToA = fmap f\n  where\n    f (RAnnot a) = RAnnot a\n    f (RStyle s) = RStyle s\n    f REmpty = REmpty\n    f (RPrim x) = RPrim (toA x)\n\ntoA :: Prim Multi V2 n -&gt; Prim BackendA.B V2 n\ntoA = ???\n</code></pre>\n\n<p>but I'm not that confident this is even the way to go.</p>\n\n<p><code>toOptA</code>, <code>toOptB</code> aren't a problem, I can fill those in once they're needed. I can also provide <code>Renderable</code> instance for this backend with either approach, e.g.</p>\n\n<pre><code>instance (Show n, TypeableFloat n) =&gt; Renderable (Path V2 n) Multi where\n  render _ x = RenderMulti (render tokenA x) (render tokenB x)\n</code></pre>\n"}, {"tags": ["haskell", "ellipse", "codeworld"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534764582, "post_id": 51928089, "comment_id": 90809188, "body": "<code>scaled</code> is not sufficient for this, unless both foci share either the same x- or y-coordinate. If they don&#39;t, you&#39;d additionally need a rotation, which gets fiddly. It would be easier with a general matrix transformation, but I think CodeWorld has no support for such transformations (<code>diagrams</code> has). Perhaps it would be easier to approximate the ellipse as a <a href=\"https://code.world/doc.html?shelf=help/codeworld.shelf#v:polygon\" rel=\"nofollow noreferrer\">polygon</a>, using <a href=\"https://en.wikipedia.org/wiki/Ellipse#Ellipse_as_an_affine_image_of_the_unit_circle_x%C2%B2+y%C2%B2=1\" rel=\"nofollow noreferrer\">a standard parametrization</a> of the general ellipse."}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 0, "creation_date": 1534769507, "post_id": 51928089, "comment_id": 90812117, "body": "I am not sure what you mean. Given two points in the plane there are infinitely many Ellipses that can go through them"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534769852, "post_id": 51928089, "comment_id": 90812325, "body": "Are the coordinates intended to be on the circumference of the ellipse? If so, two points is not enough. Indeed, it&#39;s easy to draw two ellipses that intersect at four points, so at least five is needed in general. Unfortunately then you have a different problem, namely that not all sets of five points can be touched by a single ellipse (e.g. draw a square and put the fifth point anywhere in the interior)."}], "owner": {"reputation": 69, "user_id": 10248239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88a2ab69a05db6b09e16db5e3ff42dd2?s=128&d=identicon&r=PG&f=1", "display_name": "CB010101", "link": "https://stackoverflow.com/users/10248239/cb010101"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 281, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1534758522, "creation_date": 1534758522, "question_id": 51928089, "link": "https://stackoverflow.com/questions/51928089/how-to-draw-an-ellipse-in-codeworld-haskell-given-co-ordinates", "title": "How to draw an ellipse in codeworld haskell given co-ordinates", "body": "<p>I need to draw an ellipse given two co-ordinates</p>\n\n<pre><code>Ellipse Coords\n        Coords\n</code></pre>\n\n<p>but i'm not sure how to do this with vertices, co-vertices, foci, and a centre point. I'm basically confused as to which points go into the two co-ordinates. \nI have this so far</p>\n\n<pre><code>Ellipse (a, b)(c, d)       = scaled(solidCircle(1) (???)\nCircle (a, b)(c, d)        = (solidCircle (r))\n                                            where xc = ((c-a)*(c-a))\n                                                  yc = ((d-b)*(d-b))\n                                                   r = sqrt(xc +yc)\n</code></pre>\n\n<p>I included the circle equation as I'm using scaled circle.</p>\n\n<p>Thank you!</p>\n"}, {"tags": ["haskell", "codeworld"], "answers": [{"tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 1, "last_activity_date": 1534750450, "creation_date": 1534750450, "answer_id": 51925990, "question_id": 51925762, "link": "https://stackoverflow.com/questions/51925762/how-to-match-constructor-with-codeworld-function-haskell/51925990#51925990", "title": "How to match constructor with codeworld function haskell", "body": "<p>As you pointed out, your problem is that solidRectangle takes as second parameter a double and you are passing a tuple of double (<code>Coords</code>) to it. </p>\n\n<pre><code>shapeToPicture (Rectangle x y) = solidRectangle x y -- By data definition y :: (Double, Double)\n</code></pre>\n\n<p>Depending on what <code>y</code> means in <code>solidRectangle x y</code> you can take either the first or the second of <code>(Double, Double)</code>. E.g.</p>\n\n<pre><code>shapeToPicture (Rectangle x y) = solidRectangle x $ fst y\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "is_accepted": false, "score": 1, "last_activity_date": 1534750528, "creation_date": 1534750528, "answer_id": 51926015, "question_id": 51925762, "link": "https://stackoverflow.com/questions/51925762/how-to-match-constructor-with-codeworld-function-haskell/51926015#51926015", "title": "How to match constructor with codeworld function haskell", "body": "<p>Your <code>Rectangle</code> constructor for <code>Shape</code> has the type <code>Coords -&gt; Coords -&gt; Shape</code>, which is the same as <code>(Double, Double) -&gt; (Double, Double) -&gt; Shape</code>.  There are four numbers involved, stored as two pairs of two each.  Your pattern match looked like:</p>\n\n<pre><code>shapeToPicture (Rectangle x y)      = solidRectangle x y\n</code></pre>\n\n<p>If you match up the types, you'll find that <code>x :: Coords</code> and <code>y :: Coords</code>.  So <code>x</code> and <code>y</code> are each a <strong>pair</strong> of numbers, rather than a single number.</p>\n\n<p>This probably isn't what you wanted.  You probably meant something like this instead:</p>\n\n<pre><code>shapeToPicture (Rectangle (x1, y1) (x2, y2)) = ...\n</code></pre>\n\n<p>The pattern matching now breaks apart the pairs, giving you names for the x and y coordinates within each one.</p>\n\n<p>The next question is how to fill in the right-hand side.  Unfortunately, this depends on what the <code>Rectangle</code> constructor <strong>means</strong>, and I don't know.  Do you?  Did you design  the type yourself, or was it given as part of an assignment?  If you don't know what it means, then you probably need to figure that out before you can write the right-hand side of this equation.</p>\n"}], "owner": {"reputation": 69, "user_id": 10248239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88a2ab69a05db6b09e16db5e3ff42dd2?s=128&d=identicon&r=PG&f=1", "display_name": "CB010101", "link": "https://stackoverflow.com/users/10248239/cb010101"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 496, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1534750528, "creation_date": 1534749497, "question_id": 51925762, "link": "https://stackoverflow.com/questions/51925762/how-to-match-constructor-with-codeworld-function-haskell", "title": "How to match constructor with codeworld function haskell", "body": "<p>so I've looked around for hours and can't find an answer to match what I need, although many are along the same line so I'm sorry if this is somehow a repost.</p>\n\n<p>In haskell, I have this</p>\n\n<pre><code>shapeToPicture :: Shape -&gt; Picture\nshapeToPicture (Line p1 p2)         = polyline [p1, p2]\nshapeToPicture (Rectangle x y)      = solidRectangle x y\nshapeToPicture (Polygon [points])   = solidPolygon [points]\nshapeToPicture (Polygon [])         = solidPolygon []\nshapeToPicture (Polygon x)          = solidPolygon x\nshapeToPicture (Ellipse a b)        = scaled(solidCircle(1), a, b)\nshapeToPicture (Circle a b)         = (solidCircle (a, b))\n</code></pre>\n\n<p>and the Polygon and Line one's will compile, but Rectangle, Circle, and Ellipse will have the error message</p>\n\n<pre><code>src/View.hs:46:57: error:\n    \u2022 Couldn't match type \u2018(Double, Double)\u2019 with \u2018Double\u2019\n      Expected type: Double\n        Actual type: Coords\n    \u2022 In the second argument of \u2018solidRectangle\u2019, namely \u2018b\u2019\n      In the expression: (solidRectangle a b)\n      In an equation for \u2018shapeToPicture\u2019:\n          shapeToPicture (Rectangle a b) = (solidRectangle a b)\n   |\n46 | shapeToPicture (Rectangle a b)      = (solidRectangle a b)\n   |                                                         ^\nFailed, two modules loaded.\n</code></pre>\n\n<p>I know I have a constructor 'Rectangle' which takes coords, and a codeworld function 'solidRectangle' which takes a Double, but I don't know how to match those so that the code will compile. This message is the same for Circle and Ellipse for the same reason.</p>\n\n<p>note: this is how the constructors are defined</p>\n\n<pre><code>type Coords = (Double, Double)\n\ndata Shape\n  = Line Coords\n         Coords\n  | Polygon [Coords]\n  | Rectangle Coords\n              Coords\n  | Circle Coords\n           Coords\n  | Ellipse Coords\n            Coords\n  deriving (Show)\n</code></pre>\n\n<p>Thank you.</p>\n"}, {"tags": ["csv", "haskell"], "comments": [{"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1534728003, "post_id": 51923083, "comment_id": 90795749, "body": "What is the exact compiler error?"}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 1, "creation_date": 1534728133, "post_id": 51923083, "comment_id": 90795776, "body": "And what is the point of <code>makeFloatList</code>? You typed a lot of code that takes a list of exactly nine floats and returns that exact same list."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1534730178, "post_id": 51923083, "comment_id": 90796124, "body": "@user266782, I took the liberty of adding a copy of the error message that I saw when compiling your program.  If the error you got was different, feel free to edit it."}], "answers": [{"comments": [{"owner": {"reputation": 9, "user_id": 2667782, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/chZOK.jpg?s=128&g=1", "display_name": "ZenoSol", "link": "https://stackoverflow.com/users/2667782/zenosol"}, "edited": false, "score": 0, "creation_date": 1534766578, "post_id": 51923274, "comment_id": 90810329, "body": "Thank you!  This worked great.  I&#39;ll be sure to post the error text next time."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 2, "last_activity_date": 1534729964, "creation_date": 1534729964, "answer_id": 51923274, "question_id": 51923083, "link": "https://stackoverflow.com/questions/51923083/haskell-parse-csv-file-into-list-of-lists-of-floats/51923274#51923274", "title": "Haskell: Parse CSV file into list of lists of floats", "body": "<p>The right-hand side of the case:</p>\n\n<pre><code>Right v -&gt; ...\n</code></pre>\n\n<p>needs to be an IO action that not only converts <code>v</code> to the list of type <code>[[Float]]</code> that you want, but also <em>uses</em> the result somehow in some IO (the same way your first, successful attempt tried to print it out).</p>\n\n<p>Converting <code>v</code> to a <code>[[Float]]</code> is actually pretty easy.  You don't need <code>V.concatMap</code> or <code>makeFloatList</code>.  Instead, using <code>V.toList</code> to convert it to a list of rows, if you give it the right type signature, the <code>decode</code> function will \"figure out\" that you want each row to be a list of floats.  So, you can just write:</p>\n\n<pre><code>Right v -&gt; do let mylist = V.toList v :: [[Float]]\n              ...\n</code></pre>\n\n<p>but you still have to decide what to do with <code>mylist</code>.  Printing it would be an option:</p>\n\n<pre><code>Right v -&gt; do let mylist = V.toList v :: [[Float]]\n              print v\n</code></pre>\n\n<p>giving:</p>\n\n<pre><code>&gt; main\n[[2.0,112.0,66.0,22.0,0.0,25.0,0.307,24.0,0.0],\n [3.0,113.0,44.0,13.0,0.0,22.4,0.14,22.0,0.0]]\n&gt;\n</code></pre>\n"}], "owner": {"reputation": 9, "user_id": 2667782, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/chZOK.jpg?s=128&g=1", "display_name": "ZenoSol", "link": "https://stackoverflow.com/users/2667782/zenosol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 166, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1534730108, "creation_date": 1534727832, "last_edit_date": 1534730108, "question_id": 51923083, "link": "https://stackoverflow.com/questions/51923083/haskell-parse-csv-file-into-list-of-lists-of-floats", "title": "Haskell: Parse CSV file into list of lists of floats", "body": "<p>I'm new to Haskell and trying to read a csv file and make a list of lists of floats and I get 'IO' compiler error.  Ubuntu 18.04 with GHCI 8.0.2.   CSV file looks like this: </p>\n\n<pre><code>2,112,66,22,0,25.0,0.307,24,0\n3,113,44,13,0,22.4,0.140,22,0\n</code></pre>\n\n<p>My code:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\nimport qualified Data.ByteString.Lazy as BL\nimport Data.Csv\nimport qualified Data.Vector as V\n\nmain = do\n    csvData &lt;- BL.readFile \"data/pima.csv\"\n    case decode NoHeader csvData of\n        Left err -&gt; putStrLn err\n        --Right v -&gt; V.forM_ v ( printMyStuff ) --this works\n        Right v -&gt; V.concatMap v makeFloatList --'IO' compile fail\n\n\nprintMyStuff [v1 :: Float, v2 :: Float, v3 :: Float,\n           v4 :: Float, v5 :: Float, v6 :: Float,\n           v7 :: Float, v8 :: Float, v9 :: Float] =\n    putStrLn ( show v1 ++ \", \" ++ show v2 ++ \", \" ++ show v3 ++\n         \", \" ++ show v4 ++ \", \" ++ show v5 ++ \", \" ++ show v6 ++\n         \", \" ++ show v7 ++ \", \" ++ show v8 ++ \", \" ++ show v9)\n\nmakeFloatList [v1 :: Float, v2 :: Float, v3 :: Float,\n           v4 :: Float, v5 :: Float, v6 :: Float,\n           v7 :: Float, v8 :: Float, v9 :: Float] =\n                                     [v1,v2,v3,v4,v5,v6,v7,v8,v9]\n</code></pre>\n\n<p>and the (first) error message is:</p>\n\n<pre><code>CSVFloat.hs:11:20: error:\n    \u2022 Couldn't match type \u2018V.Vector\u2019 with \u2018IO\u2019\n      Expected type: IO ()\n        Actual type: V.Vector ()\n    \u2022 In the expression: V.concatMap v makeFloatList\n      In a case alternative: Right v -&gt; V.concatMap v makeFloatList\n      In a stmt of a 'do' block:\n        case decode NoHeader csvData of\n          Left err -&gt; putStrLn err\n          Right v -&gt; V.concatMap v makeFloatList\n   |\n11 |         Right v -&gt; V.concatMap v makeFloatList --'IO' compile fail\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["haskell", "esqueleto"], "comments": [{"owner": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "edited": false, "score": 0, "creation_date": 1534711167, "post_id": 51918799, "comment_id": 90792997, "body": "Please include an esqueleto schema to run these queries against."}, {"owner": {"reputation": 19, "user_id": 10015390, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-V73u5RvmqDU/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq3yMo6sDebHHWg79c6GKAfCr6VXwQ/mo/photo.jpg?sz=128", "display_name": "Eugine Kosenko", "link": "https://stackoverflow.com/users/10015390/eugine-kosenko"}, "reply_to_user": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "edited": false, "score": 0, "creation_date": 1534769449, "post_id": 51918799, "comment_id": 90812076, "body": "Ok, I&#39;ve found the answer here: <a href=\"https://github.com/bitemyapp/esqueleto/issues/103\" rel=\"nofollow noreferrer\">github.com/bitemyapp/esqueleto/issues/103</a>"}, {"owner": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "edited": false, "score": 0, "creation_date": 1534848445, "post_id": 51918799, "comment_id": 90843262, "body": "Would you condense that discussion into an answer for this site?"}, {"owner": {"reputation": 19, "user_id": 10015390, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-V73u5RvmqDU/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq3yMo6sDebHHWg79c6GKAfCr6VXwQ/mo/photo.jpg?sz=128", "display_name": "Eugine Kosenko", "link": "https://stackoverflow.com/users/10015390/eugine-kosenko"}, "reply_to_user": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "edited": false, "score": 0, "creation_date": 1534942125, "post_id": 51918799, "comment_id": 90884470, "body": "We ought to state the table, in which the rows will be counted. The easiest way for this is to use ScopedTypeVariables language extension, and describe locally the types of arguments:  ``` [Value c2] &lt;- select $                      from $ &#40;_ :: SqlExpr (Entity Topic)) -&gt;                          do                            return countRows ```"}], "owner": {"reputation": 19, "user_id": 10015390, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-V73u5RvmqDU/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq3yMo6sDebHHWg79c6GKAfCr6VXwQ/mo/photo.jpg?sz=128", "display_name": "Eugine Kosenko", "link": "https://stackoverflow.com/users/10015390/eugine-kosenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 119, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1534942338, "creation_date": 1534689851, "last_edit_date": 1534942338, "question_id": 51918799, "link": "https://stackoverflow.com/questions/51918799/row-count-and-similar-in-esqueleto", "title": "Row count and similar in Esqueleto", "body": "<p>Ok, I'll be more concrete</p>\n\n<pre><code>{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n\nimport Database.Persist.TH\nimport Database.Persist.Sqlite\nimport Database.Esqueleto\nimport Control.Monad.IO.Class\n\nshare [mkPersist sqlSettings, mkMigrate \"migrateAll\"] [persistLowerCase|\nTopic\n   title String\n|]\n\nmain :: IO ()\nmain = do\n  runSqlite \"test.sqlite\" $ do\n       runMigration migrateAll\n       [Value c1] &lt;- select $\n                     from $ \\t -&gt;\n                     do\n                           return countRows\n       liftIO $ putStrLn $ show (c1 :: Int)\n</code></pre>\n\n<p>This code causes an error</p>\n\n<pre><code>est2.hs:26:22: error:\n\u2022 Ambiguous type variable \u2018a0\u2019 arising from a use of \u2018from\u2019\n  prevents the constraint \u2018(From\n                              SqlQuery SqlExpr SqlBackend a0)\u2019 from being solved.\n  Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.\n</code></pre>\n\n<p>That is because the compiler does not know, which table it must use to calculate the count of rows. This thing may be done with a workaround like</p>\n\n<pre><code>   [Value c1] &lt;- select $\n                 from $ \\t -&gt;\n                     do\n                       orderBy [asc (t ^. TopicTitle)]\n                       return countRows\n   liftIO $ putStrLn $ show (c1 :: Int)\n</code></pre>\n\n<p>However, this is awkful, dull and artifical. Is there another, simplier way to fix this code?</p>\n\n<p>The <em>answer</em> is:</p>\n\n<p>We ought to state the table, in which the rows will be counted. The easiest way for this is to use ScopedTypeVariables language extension, and describe locally the types of arguments:</p>\n\n<p><code>\n[Value c2] &lt;- select $\n                     from $ \\(_ :: SqlExpr (Entity Topic)) -&gt;\n                         do\n                           return countRows\n</code></p>\n"}, {"tags": ["haskell", "type-families", "induction"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1534685158, "post_id": 51917531, "comment_id": 90785974, "body": "&quot;These TypeLits cannot be useless?...&quot; - you&#39;re currently experiencing Stage 1, Denial"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1534703445, "post_id": 51917531, "comment_id": 90791061, "body": "@BenjaminHodgson, they&#39;re certainly limited, but I wouldn&#39;t go as far as to call them <i>useless</i>. One thing they&#39;re good for is APIs. <code>type family ToRealNat (n :: TL.Nat) :: Nat where {ToRealNat 0 = &#39;Z; ToRealNat n = &#39;S (ToRealNat (n-1))}</code>. You can also go the other way. That provides a much nicer interface than making users type in their Peano numerals by hand."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534937579, "post_id": 51917531, "comment_id": 90881562, "body": "@dfeuer How safe is this? It is evident that, for n &lt; 0, the function is undefined. I gave it a try in repl, and it appears that the type synonym would simply be left unresolved. I wonder if that is the defined behaviour, rather than compiler stack overflow. And whether there is a way to bake in the <code>n &gt;= 0</code> restriction."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534939975, "post_id": 51917531, "comment_id": 90883087, "body": "@dfeuer And how is that supposed to work? A definition like <code>type V (n :: TL.Nat) = Vector (ToRealNat n); zip&#39; :: V n a -&gt; V n b -&gt; V n (a, b); zip&#39; = zip</code> typechecks, but its call site does not, even with type annotations. <i>(Unless the vector is trivial, that is, <code>VZ</code>)</i>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534951102, "post_id": 51917531, "comment_id": 90890569, "body": "@IgnatInsarov, you probably want something like <code>class (n&#39; ~ ToRealNat n, n ~ FromRealNat n&#39;) =&gt; ToRealNatC n n&#39;; instance (n&#39; ~ ToRealNat n, n ~ FromRealNat n&#39;) =&gt; ToRealNatC n n&#39;; zip&#39; :: ToRealNatC n n&#39; =&gt; Vector n&#39; a -&gt; Vector n&#39; b -&gt; Vector n&#39; (a, b)</code>. That will give you much better inference."}], "answers": [{"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534687915, "post_id": 51918447, "comment_id": 90786836, "body": "By chance you know the reasoning behind <i>not</i> providing induction on <code>Nat</code> in GHC/base by default? For instance, is it hard, but planned, or is it dangerous and forbidden?"}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534689244, "post_id": 51918447, "comment_id": 90787210, "body": "No particular reason. My impression is that <code>TypeLits</code> was initially intended as no more than a second-class syntactic sugar. While <code>Nat</code> is now fairly good with the plugin, <code>Symbol</code> is still just a black-box with not many operations, and is mainly used to abstract over record field names and such."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1534702520, "post_id": 51918447, "comment_id": 90790817, "body": "You can even postulate an induction principle: <code>indNat :: p 0 -&gt; (forall k. p k -&gt; p (k+1)) -&gt; SNat n -&gt; p n</code>. Each such principle has two variants: a constant-time version when <code>p</code> only has one constructor (e.g., equality evidence) and a version that actually builds up the result value step by step."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1534703142, "post_id": 51918447, "comment_id": 90790985, "body": "(The constant-time version is dangerous, of course, since the passed function may not be total.)"}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 5, "last_activity_date": 1534687502, "creation_date": 1534687502, "answer_id": 51918447, "question_id": 51917531, "link": "https://stackoverflow.com/questions/51917531/how-do-i-apply-inductive-reasoning-to-ghc-typelits-nat/51918447#51918447", "title": "How do I apply inductive reasoning to `GHC.TypeLits.Nat`?", "body": "<p>There is no induction on <code>TypeLits</code>, which by default does make them nearly useless, but you can improve the situation in two ways.</p>\n\n<p><strong>Use <a href=\"http://hackage.haskell.org/package/ghc-typelits-natnormalise-0.6.2/docs/GHC-TypeLits-Normalise.html\" rel=\"noreferrer\"><code>ghc-typelits-natnormalise</code></a></strong>. It's a GHC plugin which adds an arithmetic solver to the type checker, and causes GHC to consider many equal <code>Nat</code> expressions equal. This is very convenient and is compatible with the next solution. Your <code>zip</code> works with this out of the box.</p>\n\n<p><strong>Postulate whatever properties you need.</strong> You should only postulate proofs of true statements, and only proofs of equalities or other computationally irrelevant data types, in order to avoid potential memory safety issues. For example, your <code>zip</code> works the following way:</p>\n\n<pre><code>{-# language\n    RankNTypes, TypeApplications, TypeOperators,\n    GADTs, TypeInType, ScopedTypeVariables #-}\n\nimport GHC.TypeLits\nimport Data.Type.Equality\nimport Unsafe.Coerce\n\ndata Vector (n :: Nat) a\n  where\n    VZ :: Vector 0 a\n    (:::) :: a -&gt; Vector n a -&gt; Vector (n + 1) a\n\nlemma :: forall n m k. (n :~: (m + 1)) -&gt; (n :~: (k + 1)) -&gt; m :~: k\nlemma _ _ = unsafeCoerce (Refl @n)\n\nvzip :: Vector n a -&gt; Vector n b -&gt; Vector n (a, b)\nvzip VZ VZ = VZ\nvzip ((a ::: (as :: Vector m a)) :: Vector n a)\n     ((b ::: (bs :: Vector k b)) :: Vector n b) =\n  case lemma @n @m @k Refl Refl of\n    Refl -&gt; (a, b) ::: vzip as bs\n</code></pre>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 3, "accepted_answer_id": 51918447, "answer_count": 1, "score": 5, "last_activity_date": 1534687502, "creation_date": 1534680691, "question_id": 51917531, "link": "https://stackoverflow.com/questions/51917531/how-do-i-apply-inductive-reasoning-to-ghc-typelits-nat", "title": "How do I apply inductive reasoning to `GHC.TypeLits.Nat`?", "body": "<p>Consider this definition of <code>zip</code> for the usual vectors length indexed by Peano numerals:</p>\n\n<pre><code>{-# language DataKinds          #-}\n{-# language KindSignatures     #-}\n{-# language GADTs              #-}\n{-# language TypeOperators      #-}\n{-# language StandaloneDeriving #-}\n{-# language FlexibleInstances  #-}\n{-# language FlexibleContexts   #-}\n\nmodule Vector\n  where\n\nimport Prelude hiding (zip)\n\ndata N\n  where\n    Z :: N\n    S :: N -&gt; N\n\ndata Vector (n :: N) a\n  where\n    VZ :: Vector Z a\n    (:::) :: a -&gt; Vector n a -&gt; Vector (S n) a\n\ninfixr 1 :::\n\nderiving instance Show a =&gt; Show (Vector n a)\n\nclass Zip z\n  where\n    zip :: z a -&gt; z b -&gt; z (a, b)\n\ninstance Zip (Vector n) =&gt; Zip (Vector (S n))\n  where\n    zip (x ::: xs) (y ::: ys) = (x, y) ::: zip xs ys\n\ninstance Zip (Vector Z)\n  where\n    zip _ _ = VZ\n\n-- ^\n-- \u03bb :t zip (1 ::: 2 ::: 3 ::: VZ) (4 ::: 5 ::: 6 ::: VZ)\n-- zip (1 ::: 2 ::: 3 ::: VZ) (4 ::: 5 ::: 6 ::: VZ)\n--   :: (Num a, Num b) =&gt; Vector ('S ('S ('S 'Z))) (a, b)\n-- \u03bb zip (1 ::: 2 ::: 3 ::: VZ) (4 ::: 5 ::: 6 ::: VZ)\n-- (1,4) ::: ((2,5) ::: ((3,6) ::: VZ))\n</code></pre>\n\n<p>Typing in unary numbers is wearysome <em>(even though I have a macro for that)</em>. Fortunately, there is <code>GHC.TypeLits</code>. Let us use it:</p>\n\n<pre><code>module Vector\n  where\n\nimport Prelude hiding (zip)\nimport GHC.TypeLits\n\ndata Vector (n :: Nat) a\n  where\n    VZ :: Vector 0 a\n    (:::) :: a -&gt; Vector n a -&gt; Vector (n + 1) a\n\ninfixr 1 :::\n\nderiving instance Show a =&gt; Show (Vector n a)\n\nclass Zip z\n  where\n    zip :: z a -&gt; z b -&gt; z (a, b)\n\ninstance Zip (Vector n) =&gt; Zip (Vector (n + 1))\n  where\n    zip (x ::: xs) (y ::: ys) = (x, y) ::: zip xs ys\n\ninstance Zip (Vector 0)\n  where\n    zip _ _ = VZ\n</code></pre>\n\n<p>\u2014 But no:</p>\n\n<pre><code>    \u2022 Illegal type synonym family application in instance:\n        Vector (n + 1)\n    \u2022 In the instance declaration for \u2018Zip (Vector (n + 1))\u2019\n   |\n28 | instance Zip (Vector n) =&gt; Zip (Vector (n + 1))\n   |                            ^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>So I replace the class with an ordinary function:</p>\n\n<pre><code>zip :: Vector n a -&gt; Vector n b -&gt; Vector n (a, b)\nzip (x ::: xs) (y ::: ys) = (x, y) ::: zip xs ys\nzip VZ VZ = VZ\n</code></pre>\n\n<p>\u2014 But now I cannot make use of inductive reasoning anymore:</p>\n\n<pre><code>Vector.hs:25:47: error:\n    \u2022 Could not deduce: n2 ~ n1\n      from the context: n ~ (n1 + 1)\n        bound by a pattern with constructor:\n                   ::: :: forall a (n :: Nat). a -&gt; Vector n a -&gt; Vector (n + 1) a,\n                 in an equation for \u2018zip\u2019\n        at Vector.hs:25:6-13\n      or from: n ~ (n2 + 1)\n        bound by a pattern with constructor:\n                   ::: :: forall a (n :: Nat). a -&gt; Vector n a -&gt; Vector (n + 1) a,\n                 in an equation for \u2018zip\u2019\n        at Vector.hs:25:17-24\n      \u2018n2\u2019 is a rigid type variable bound by\n        a pattern with constructor:\n          ::: :: forall a (n :: Nat). a -&gt; Vector n a -&gt; Vector (n + 1) a,\n        in an equation for \u2018zip\u2019\n        at Vector.hs:25:17-24\n      \u2018n1\u2019 is a rigid type variable bound by\n        a pattern with constructor:\n          ::: :: forall a (n :: Nat). a -&gt; Vector n a -&gt; Vector (n + 1) a,\n        in an equation for \u2018zip\u2019\n        at Vector.hs:25:6-13\n      Expected type: Vector n1 b\n        Actual type: Vector n2 b\n    \u2022 In the second argument of \u2018zip\u2019, namely \u2018ys\u2019\n      In the second argument of \u2018(:::)\u2019, namely \u2018zip xs ys\u2019\n      In the expression: (x, y) ::: zip xs ys\n    \u2022 Relevant bindings include\n        ys :: Vector n2 b (bound at Vector.hs:25:23)\n        xs :: Vector n1 a (bound at Vector.hs:25:12)\n   |\n25 | zip (x ::: xs) (y ::: ys) = (x, y) ::: zip xs ys\n   |                                               ^^\n</code></pre>\n\n<p>Am I failing to observe something obvious? These <code>TypeLits</code> cannot be useless?.. How is it supposed to work?</p>\n"}, {"tags": ["haskell", "dependent-type", "gadt", "type-families", "singleton-type"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1534702760, "post_id": 51916782, "comment_id": 90790890, "body": "I wonder if <code>removeElem</code>&#39;s type is correct. The type family <code>RemoveElem</code> removes the first occurrence, but the <code>prf :: Elem a v</code> argument could point to a different occurrence, as far as I can see. <code>removeElem</code> removes the occurrence pointed to by <code>prf</code>, so the resulting type could be different. Am I wrong?"}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534709339, "post_id": 51916782, "comment_id": 90792533, "body": "@chi that&#39;s right. In general, the type level function must closely mirror the value level one, which is not the case here."}, {"owner": {"reputation": 6123, "user_id": 179702, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tKelv.jpg?s=128&g=1", "display_name": "romanb", "link": "https://stackoverflow.com/users/179702/romanb"}, "edited": false, "score": 0, "creation_date": 1534772980, "post_id": 51916782, "comment_id": 90814380, "body": "I&#39;m not sure yet what problem you&#39;re seeing, but I added some information to the end of the post that may be of use."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1534792235, "post_id": 51916782, "comment_id": 90824185, "body": "&quot;To be useful, <code>a</code> and <code>v</code> need to refer to singleton types&quot;? What does that mean? If anything, <code>a</code> and <code>v</code> have 0 values, because they don&#39;t have type <code>Type</code> (and even that&#39;s a stretch, because asking how many values a type has is a question that really only makes sense in <code>Type</code>)."}, {"owner": {"reputation": 6123, "user_id": 179702, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tKelv.jpg?s=128&g=1", "display_name": "romanb", "link": "https://stackoverflow.com/users/179702/romanb"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1534879053, "post_id": 51916782, "comment_id": 90861130, "body": "@HTNW Good point, that may be a poor choice of words. I just wanted to express that a type like <code>Elem Int (Int &#39;::: &#39;Nil)</code> is not meaningful in Haskell where types are not values, as compared to e.g. Idris where <code>Elem Int (Int :: Nil)</code> refers to the <code>Int</code> type as the first value in a vector of types. I.e. <code>Elem</code> is only useful when it describes a relationship between two values. How would you have phrased it? Maybe something like &quot;To be useful, <code>a</code> and <code>v</code> must be indices of singleton types.&quot;?"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1534885421, "post_id": 51916782, "comment_id": 90863934, "body": "<code>Elem Int (Int ::: Nil)</code> is perfectly meaningful. You can e.g. define <code>data HList :: Vect n Type -&gt; Type where { HNil :: HList Nil; HCons :: t -&gt; HList ts -&gt; HList (t ::: ts) }</code> (I recommend unsized lists, however), write <code>indexH :: forall (t :: Type) (ts :: Vect n Type). Elem t ts -&gt; HList ts -&gt; t</code>, and then <code>indexH @_ @Int @(Int ::: Nil) (Here :: Elem Int (Int ::: Nil)) (HCons 5 HNil :: HList (Int ::: Nil)) :: Int</code>. You were trying to say \u201cThere need to be singletons for <code>a</code> and <code>v</code> for <code>Elem a v</code> to be useful.\u201d but that is simply false."}], "answers": [{"comments": [{"owner": {"reputation": 6123, "user_id": 179702, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tKelv.jpg?s=128&g=1", "display_name": "romanb", "link": "https://stackoverflow.com/users/179702/romanb"}, "edited": false, "score": 0, "creation_date": 1534799162, "post_id": 51936975, "comment_id": 90827087, "body": "&quot;Consider [1, 2, 1]. [..] The Elem argument says to delete the third element, which would give [1, 2], but the type signature says it must be a [2, 1].&quot;  Thanks, now I also understand @chi&#39;s comment. Though such an <code>Elem</code> can not be obtained from <code>isElem</code>, this is certainly undesirable."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 5, "last_activity_date": 1534795026, "last_edit_date": 1534795026, "creation_date": 1534791583, "answer_id": 51936975, "question_id": 51916782, "link": "https://stackoverflow.com/questions/51916782/proving-a-type-inequality-to-ghc/51936975#51936975", "title": "Proving a type inequality to GHC", "body": "<p>Consider <code>[1, 2, 1]</code>. <code>RemoveElem 1 [1, 2, 1]</code> is <code>[2, 1]</code>. Now, the call <code>removeElem 1 (There $ There $ Here) ([1, 2, 1]  :: SNatVect 3 [1, 2, 1]) :: SNatVect 2 [2, 1]</code>, should compile. This is wrong. The <code>Elem</code> argument says to delete the third element, which would give <code>[1, 2]</code>, but the type signature says it must be a <code>[2, 1]</code>.</p>\n\n<p>First, <code>SNatVect</code> is a bit broken. It has two <code>Nat</code> arguments:</p>\n\n<pre><code>data SNatVect :: forall n. Nat -&gt; Vect n a -&gt; Type where ...\n</code></pre>\n\n<p>The first is <code>n</code>, and the second is the unnamed <code>Nat</code>. By the structure of <code>SNatVect</code>, they are always equal. It allows an <code>SNatVect</code> to double as an equality proof, but it's probably not the intention to have it that way. You probably meant</p>\n\n<pre><code>data SNatVect (n :: Nat) :: Vect n Nat -&gt; Type where ...\n</code></pre>\n\n<p>There is no way to write this signature in source Haskell using just the normal <code>-&gt;</code> syntax. However, when GHC prints this type, you sometimes get</p>\n\n<pre><code>SNatVect :: forall (n :: Nat) -&gt; Vect n Nat -&gt; Type\n</code></pre>\n\n<p>But this is redundant. You can take the <code>Nat</code> as an implicit <code>forall</code> argument, and have it inferred from the <code>Vect</code>s type:</p>\n\n<pre><code>data SNatVect (xs :: Vect n Nat) where\n  SNatNil  :: SNatVect 'Nil\n  SNatCons :: SNat x -&gt; SNatVect xs -&gt; SNatVect (x '::: xs)\n</code></pre>\n\n<p>This gives</p>\n\n<pre><code>SNatVect :: forall (n :: Nat). Vect n Nat -&gt; Type\n</code></pre>\n\n<p>Second, try writing</p>\n\n<pre><code>removeElem :: forall (n :: Nat) (x :: Nat) (xs :: Vect (S n) Nat).\n              Elem x xs -&gt; SNatVect xs -&gt; Vect n Nat\n</code></pre>\n\n<p>Note how the <code>SNat</code> argument is gone, and how the return type is a simple <code>Vect</code>. The <code>SNat</code> argument made the type \"too big\", so you got caught up making it sort of work when the function just wouldn't make sense. The <code>SNatVect</code> return type meant you were skipping steps. Roughly, every function has three forms: the basic one, <code>f :: a -&gt; b -&gt; c</code>; the type-level one, <code>type family F (x :: a) (y :: b) :: c</code>; and the dependent one, <code>f :: forall (x :: a) (y :: b). Sing x -&gt; Sing y -&gt; Sing (F x y)</code>. Each is implemented in the \"same\" way, but trying to implement one without implementing its predecessors is a surefire way to get confused.</p>\n\n<p>Now, you can lift this up a little bit:</p>\n\n<pre><code>data SElem (e :: Elem x (xs :: Vect n k)) where\n  SHere :: forall x xs. SElem ('Here :: Elem x (x '::: xs))\n  SThere :: forall x y xs (e :: Elem x xs). SElem e -&gt; SElem ('There e :: Elem x (y '::: xs))\n\ntype family RemoveElem (xs :: Vect (S n) a) (e :: Elem x xs) :: Vect n a\n</code></pre>\n\n<p>Take note of the relationship between the types of <code>removeElem</code> and <code>RemoveElem</code>. The reordering of the arguments is because the type of <code>e</code> depends on <code>xs</code>, so they need to be ordered accordingly. Alternatively: the <code>xs</code> argument was promoted from <code>forall</code>'d-and-implicitly-given to explicitly-given, and then the <code>Sing xs</code> argument was nixed because it contained no information, due to being a singleton.</p>\n\n<p>Finally, you can write this function:</p>\n\n<pre><code>sRemoveElem :: forall (xs :: Vect (S n) Nat) (e :: Elem x xs).\n               SElem e -&gt; SNatVect xs -&gt; SNatVect (RemoveElem xs e)\n</code></pre>\n"}], "owner": {"reputation": 6123, "user_id": 179702, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tKelv.jpg?s=128&g=1", "display_name": "romanb", "link": "https://stackoverflow.com/users/179702/romanb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 2, "accepted_answer_id": 51936975, "answer_count": 1, "score": 10, "last_activity_date": 1534839700, "creation_date": 1534674977, "last_edit_date": 1534839700, "question_id": 51916782, "link": "https://stackoverflow.com/questions/51916782/proving-a-type-inequality-to-ghc", "title": "Proving a type inequality to GHC", "body": "<p>For educational purposes, I have been trying to reconstruct an example from the book \"Type-Driven Development with Idris\" (namely <a href=\"https://github.com/edwinb/TypeDD-Samples/blob/master/Chapter9/RemoveElem.idr\" rel=\"nofollow noreferrer\">RemoveElem.idr</a>) in Haskell via use of various language extensions and singleton types. The gist of it is a function that removes an element from a non-empty vector, given a proof that the element is in fact in the vector. The following code is self-contained (GHC 8.4 or later). The problem appears at the very end:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE EmptyCase #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE LambdaCase #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE StandaloneDeriving #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE TypeInType #-}\n\nimport Data.Kind\nimport Data.Type.Equality\nimport Data.Void\n\n-- | Inductively defined natural numbers.\ndata Nat = Z | S Nat deriving (Eq, Show)\n\n-- | Singleton types for natural numbers.\ndata SNat :: Nat -&gt; Type where\n    SZ :: SNat 'Z\n    SS :: SNat n -&gt; SNat ('S n)\n\nderiving instance Show (SNat n)\n\n-- | \"Demote\" a singleton-typed natural number to an ordinary 'Nat'.\nfromSNat :: SNat n -&gt; Nat\nfromSNat SZ = Z\nfromSNat (SS n) = S (fromSNat n)\n\n-- | A decidable proposition.\ndata Dec a = Yes a | No (a -&gt; Void)\n\n-- | Propositional equality of natural numbers.\neqSNat :: SNat a -&gt; SNat b -&gt; Dec (a :~: b)\neqSNat  SZ     SZ    = Yes Refl\neqSNat  SZ    (SS _) = No (\\case {})\neqSNat (SS _)  SZ    = No (\\case {})\neqSNat (SS a) (SS b) = case eqSNat a b of\n    No  f    -&gt; No (\\case Refl -&gt; f Refl)\n    Yes Refl -&gt; Yes Refl\n\n-- | A length-indexed list (aka vector).\ndata Vect :: Nat -&gt; Type -&gt; Type where\n    Nil   :: Vect 'Z a\n    (:::) :: a -&gt; Vect n a -&gt; Vect ('S n) a\n\ninfixr 5 :::\n\nderiving instance Show a =&gt; Show (Vect n a)\n\n-- | @Elem a v@ is the proposition that an element of type @a@\n-- is contained in a vector of type @v@. To be useful, @a@ and @v@\n-- need to refer to singleton types.\ndata Elem :: forall a n. a -&gt; Vect n a -&gt; Type where\n    Here  :: Elem x (x '::: xs)\n    There :: Elem x xs -&gt; Elem x (y '::: xs)\n\nderiving instance Show a =&gt; Show (Elem a v)\n\n------------------------------------------------------------------------\n-- From here on, to simplify things, only vectors of natural\n-- numbers are considered.\n\n-- | Singleton types for vectors of 'Nat's.\ndata SNatVect :: forall n. Nat -&gt; Vect n Nat -&gt; Type where\n    SNatNil  :: SNatVect 'Z 'Nil\n    SNatCons :: SNat a -&gt; SNatVect n v -&gt; SNatVect ('S n) (a '::: v)\n\nderiving instance Show (SNatVect n v)\n\n-- | \"Demote\" a singleton-typed vector of 'SNat's to an\n-- ordinary vector of 'Nat's.\nfromSNatVect :: SNatVect n v -&gt; Vect n Nat\nfromSNatVect SNatNil = Nil\nfromSNatVect (SNatCons a v) = fromSNat a ::: fromSNatVect v\n\n-- | Decide whether a value is in a vector.\nisElem :: SNat a -&gt; SNatVect n v -&gt; Dec (Elem a v)\nisElem _  SNatNil        = No (\\case {})\nisElem a (SNatCons b as) = case eqSNat a b of\n    Yes Refl   -&gt; Yes Here\n    No notHere -&gt; case isElem a as of\n        Yes there   -&gt; Yes (There there)\n        No notThere -&gt; No $ \\case\n            Here        -&gt; notHere Refl\n            There there -&gt; notThere there\n\ntype family RemoveElem (a :: Nat) (v :: Vect ('S n) Nat) :: Vect n Nat where\n    RemoveElem a (a '::: as) = as\n    RemoveElem a (b '::: as) = b '::: RemoveElem a as\n\n-- | Remove a (singleton-typed) element from a (non-empty, singleton-typed)\n-- vector, given a proof that the element is in the vector.\nremoveElem :: forall (a :: Nat) (v :: Vect ('S n) Nat)\n    . SNat a\n    -&gt; Elem a v\n    -&gt; SNatVect ('S n) v\n    -&gt; SNatVect n (RemoveElem a v)\nremoveElem x prf (SNatCons y ys) = case prf of\n    Here        -&gt; ys\n    There later -&gt; case ys of\n        SNatNil    -&gt; case later of {}\n        SNatCons{} -&gt; SNatCons y (removeElem x later ys)\n            -- ^ Could not deduce:\n            --            RemoveElem a (y '::: (a2 '::: v2))\n            --          ~ (y '::: RemoveElem a (a2 '::: v2))\n</code></pre>\n\n<p>Apparently, the type system needs convincing that the types of the values <code>x</code> and <code>y</code> cannot possibly be equal in that branch of the code, so that the second equation of the type family can be used unambiguously to reduce the return type as required. I don't know how to do that. Naively, I would like the constructor <code>There</code> and thus the pattern match on <code>There later</code> to carry / reveal a proof of the type inequality to GHC.</p>\n\n<p>The following is an obviously redundant and partial solution that just demonstrates the type inequality that is needed in order for GHC to type-check the recursive call:</p>\n\n<pre><code>        SNatCons{} -&gt; case (x, y) of\n            (SZ, SS _) -&gt; SNatCons y (removeElem x later ys)\n            (SS _, SZ) -&gt; SNatCons y (removeElem x later ys)\n</code></pre>\n\n<p>Now e.g. this works:</p>\n\n<pre><code>\u03bb&gt; let vec = SNatCons SZ (SNatCons (SS SZ) (SNatCons SZ SNatNil))\n\u03bb&gt; :t vec\nvec\n  :: SNatVect ('S ('S ('S 'Z))) ('Z '::: ('S 'Z '::: ('Z '::: 'Nil)))\n\u03bb&gt; let Yes prf = isElem (SS SZ) vec\n\u03bb&gt; :t prf\nprf :: Elem ('S 'Z) ('Z '::: ('S 'Z '::: ('Z '::: 'Nil)))\n\u03bb&gt; let vec' = removeElem (SS SZ) prf vec\n\u03bb&gt; :t vec'\nvec' :: SNatVect ('S ('S 'Z)) ('Z '::: ('Z '::: 'Nil))\n\u03bb&gt; fromSNatVect vec'\nZ ::: (Z ::: Nil)\n</code></pre>\n\n<h1>Resolution</h1>\n\n<p>As hinted at in @chi's comment and elaborated in <a href=\"https://stackoverflow.com/a/51936975/179702\">HTNW's answer</a>, I was trying to solve the wrong problem by writing <code>removeElem</code> with the above type signature and type family, and if I would have been able to, the resulting program would have been ill-typed.</p>\n\n<p>The following are the corrections I made based on HTNW's answer (you may want to read it before continuing here).</p>\n\n<p>The first mistake, or unnecessary complication, was to repeat the length of the vector in <code>SNatVect</code>s type. I thought it necessary in order to write <code>fromSNatVect</code>, but it certainly isn't:</p>\n\n<pre><code>data SNatVect (v :: Vect n Nat) :: Type where\n    SNatNil  :: SNatVect 'Nil\n    SNatCons :: SNat a -&gt; SNatVect v -&gt; SNatVect (a '::: v)\n\nderiving instance Show (SNatVect v)\n\nfromSNatVect :: forall (v :: Vect n Nat). SNatVect v -&gt; Vect n Nat\n-- implementation unchanged\n</code></pre>\n\n<p>Now there are two approaches to writing <code>removeElem</code>. The first takes an <code>Elem</code>, an <code>SNatVect</code> and returns a <code>Vect</code>:</p>\n\n<pre><code>removeElem :: forall (a :: Nat) (n :: Nat) (v :: Vect ('S n) Nat)\n    . Elem a v\n    -&gt; SNatVect v\n    -&gt; Vect n Nat\nremoveElem prf (SNatCons y ys) = case prf of\n    Here        -&gt; fromSNatVect ys\n    There later -&gt; case ys of\n        SNatNil    -&gt; case later of {}\n        SNatCons{} -&gt; fromSNat y ::: removeElem later ys\n</code></pre>\n\n<p>The second takes an <code>SElem</code>, an <code>SNatVect</code> and returns an <code>SNatVect</code>, using a <code>RemoveElem</code> type family that mirrors the value-level function:</p>\n\n<pre><code>data SElem (e :: Elem a (v :: Vect n k)) where\n    SHere  :: forall x xs. SElem ('Here :: Elem x (x '::: xs))\n    SThere :: forall x y xs (e :: Elem x xs). SElem e -&gt; SElem ('There e :: Elem x (y '::: xs))\n\ntype family RemoveElem (xs :: Vect ('S n) a) (e :: Elem x xs) :: Vect n a where\n    RemoveElem (x '::: xs) 'Here = xs\n    RemoveElem (x '::: xs) ('There later) = x '::: RemoveElem xs later\n\nsRemoveElem :: forall (xs :: Vect ('S n) Nat) (e :: Elem x xs)\n    . SElem e\n    -&gt; SNatVect xs\n    -&gt; SNatVect (RemoveElem xs e)\nsRemoveElem prf (SNatCons y ys) = case prf of\n    SHere        -&gt; ys\n    SThere later -&gt; case ys of\n        SNatNil    -&gt; case later of {}\n        SNatCons{} -&gt; SNatCons y (sRemoveElem later ys)\n</code></pre>\n\n<p>Interestingly, both versions do away with passing the element to remove as a separate argument, since that information is contained in the <code>Elem</code> / <code>SElem</code> value. The <code>value</code> argument can also be removed from the Idris version of that function, though then the <a href=\"https://github.com/edwinb/TypeDD-Samples/blob/master/Chapter9/RemoveElem.idr#L20\" rel=\"nofollow noreferrer\">removeElem_auto</a> variant may be a bit confusing, as it will then only have the vector as an explicit argument and remove the first element of the vector if the implicit <code>prf</code> argument is not explicitly used with a different proof.</p>\n"}, {"tags": ["haskell", "ghci"], "answers": [{"tags": [], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "is_accepted": true, "score": 1, "last_activity_date": 1534677999, "creation_date": 1534677999, "answer_id": 51917156, "question_id": 51916682, "link": "https://stackoverflow.com/questions/51916682/cant-get-rid-of-this-type-error/51917156#51917156", "title": "Can&#39;t get rid of this type error", "body": "<p>You made a wrong pattern matching. As <code>solve</code> must accept a list of size of exactly 4, the pattern matching must be like this:</p>\n\n<pre><code>solve [_,r,_,a] = ...\n</code></pre>\n\n<p>Which can be de-sugared to:</p>\n\n<pre><code>solve (_:r:_:a:[]) = ...\n</code></pre>\n\n<p>Or even further de-sugared:</p>\n\n<pre><code>solve (_:(r:(_:(a:[])))) = ...\n</code></pre>\n\n<p>Remember, <code>:</code> takes an element on left and a list on right!</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user2226112"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 51917156, "answer_count": 1, "score": 2, "last_activity_date": 1534677999, "creation_date": 1534674185, "question_id": 51916682, "link": "https://stackoverflow.com/questions/51916682/cant-get-rid-of-this-type-error", "title": "Can&#39;t get rid of this type error", "body": "<p>I'm trying to solve <a href=\"https://www.hackerrank.com/challenges/climbing-the-leaderboard/problem\" rel=\"nofollow noreferrer\">this problem</a>.</p>\n\n<p>This is my code:</p>\n\n<pre><code>import Data.List (nub)\n\nmain = interact $ unwords . map show . solve . map words . lines\n\nsolve :: [[String]] -&gt; [Int]\nsolve (_:r:_:a) = map (rank . read) a\n    where records = nub $ map read r :: [Int]\n          rank n = (length $ takeWhile (&gt; n) records) + 1\n</code></pre>\n\n<p>The compiler throws this error:</p>\n\n<pre><code>    * Couldn't match type `[Char]' with `Char'\n      Expected type: [String]\n        Actual type: [[String]]\n    * In the second argument of `map', namely `a'\n      In the expression: map (rank . read) a\n      In an equation for `solve':\n          solve (_ : r : _ : a)\n            = map (rank . read) a\n            where\n                records = nub $ map read r :: [Int]\n                rank n = (length $ takeWhile (&gt; n) records) + 1\n  |\n6 | solve (_:r:_:a) = map (rank . read) a\n  |\n</code></pre>\n\n<p>I don't understand what the issue is. When I piece it together line by line in GHCi, it works:</p>\n\n<pre><code>GHCi&gt; import Data.List (nub)\nGHCi&gt; records = nub $ map read [\"100\", \"100\", \"50\", \"40\", \"40\", \"20\", \"10\"] :: [Int]\nGHCi&gt; rank n = (length $ takeWhile (&gt; n) records) + 1\nGHCi&gt; a = [\"5\", \"25\", \"50\", \"120\"]\nGHCi&gt; map (rank . read) a\n[6,4,2,1]\n</code></pre>\n"}, {"tags": ["haskell", "applicative"], "answers": [{"comments": [{"owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "edited": false, "score": 0, "creation_date": 1534670547, "post_id": 51916124, "comment_id": 90782336, "body": "Why <code>x==0</code> will return <code>Nothing</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "edited": false, "score": 0, "creation_date": 1534670772, "post_id": 51916124, "comment_id": 90782391, "body": "Because <code>recipMay</code> returns <code>Nothing</code> in such case, hence <code>fmap</code> does the same."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1534669476, "creation_date": 1534669476, "answer_id": 51916124, "question_id": 51916079, "link": "https://stackoverflow.com/questions/51916079/what-does-do-in-addrecip-x-y-fmap-recipmay-x-recipmay-y/51916124#51916124", "title": "What does &lt;*&gt; do in addRecip x y = fmap (+) (recipMay x) &lt;*&gt; recipMay y?", "body": "<p>Here the functor is <code>Maybe</code>. That <code>&lt;*&gt;</code> will return <code>Nothing</code> if either argument is <code>Nothing</code> (i.e., it involved a division by zero)</p>\n\n<pre><code>Nothing &lt;*&gt; _       = Nothing\n_       &lt;*&gt; Nothing = Nothing\n</code></pre>\n\n<p>In the remaining case, it just applies the wrapped function:</p>\n\n<pre><code>Just f &lt;*&gt; Just x = Just (f x)\n</code></pre>\n\n<p>Also note that</p>\n\n<pre><code>fmap (+) (recipMay x) &lt;*&gt; recipMay y\n</code></pre>\n\n<p>is a slightly unusual notation. Usually that's written as</p>\n\n<pre><code>(+) &lt;$&gt; recipMay x &lt;*&gt; recipMay y\n</code></pre>\n\n<p>which is completely equivalent, since <code>fmap</code> is written as the infix <code>&lt;$&gt;</code>, but arguably more readable.</p>\n\n<p>Here, <code>fmap (+) (recipMay x)</code> (or <code>(+) &lt;$&gt; recipMay x</code>) means</p>\n\n<pre><code>if x == 0\nthen Nothing \nelse Just (\\a -&gt; 1/x + a)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "is_accepted": true, "score": 3, "last_activity_date": 1534671189, "creation_date": 1534671189, "answer_id": 51916327, "question_id": 51916079, "link": "https://stackoverflow.com/questions/51916079/what-does-do-in-addrecip-x-y-fmap-recipmay-x-recipmay-y/51916327#51916327", "title": "What does &lt;*&gt; do in addRecip x y = fmap (+) (recipMay x) &lt;*&gt; recipMay y?", "body": "<p>&lt;*> Applies an applicative value to another. It's a richer counterpart to regular function application. The applicative values are decorated in some way, for example, it can be optional whether there's any value as you would perceive it (for Maybe, which is your case), or there can be very many values (for List).</p>\n\n<p>The application of one applicative value to the other therefore has some special behaviour. For lists, a &lt;*> b applies each member of a to each member of b making a huge list of all combinations whilst for Maybe (which is your case) a &lt;*> b gives Just (a' b') if a and b are (Just a') and (Just b') and gives Nothing if either or both a and b are Nothing - for Maybe, in summary, it's function application for optional values where the result is absent if any value involved is absent.</p>\n\n<p>There are some rules to how &lt;*> is implemented which means that you can always view this as [apply a \"contained function\" to a \"contained value\"] and as long as you do all your work in the contained domain (using &lt;$>, &lt;*>, pure, >>=, &lt;|>, etc) then you can think of it as the same as regular function application, but when you come to \"extract\" values you get to see the added richness.</p>\n"}, {"comments": [{"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1534717079, "post_id": 51916436, "comment_id": 90794157, "body": "&quot;For a list&quot; ...&quot;applying every element in the second collection to every function in the first collection.\u201d The list comprehension is Cartesian, each fs with every xs. Should it be a zip fs xs? Ambiguous."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 1, "creation_date": 1534717348, "post_id": 51916436, "comment_id": 90794220, "body": "@fp_mora: well there exists a type for such kind of <code>&lt;*&gt;</code>: the <code>ZipList</code> <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Applicative.html#t:ZipList\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.11.1.0/docs/&hellip;</a> :)"}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1534720830, "post_id": 51916436, "comment_id": 90794749, "body": "Totally impressive and of great use. TY!"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 3, "last_activity_date": 1534671978, "creation_date": 1534671978, "answer_id": 51916436, "question_id": 51916079, "link": "https://stackoverflow.com/questions/51916079/what-does-do-in-addrecip-x-y-fmap-recipmay-x-recipmay-y/51916436#51916436", "title": "What does &lt;*&gt; do in addRecip x y = fmap (+) (recipMay x) &lt;*&gt; recipMay y?", "body": "<p>The <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Applicative.html#v:-60--42--62-\" rel=\"nofollow noreferrer\"><strong><code>(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b</code></strong></a> comes from the <code>Applicative</code> typeclass. An <code>Applicative</code> is a (quoting the documentation) \"<em>A functor with application.</em>\". You can think of a <code>Functor</code> as a collection (although there are other types that are no collections that are functors, like a function for example).</p>\n\n<p>If we see a functor as a collection then the <code>(&lt;*&gt;)</code> operator thus takes two of these collections. The first collection stores functions of type <code>a -&gt; b</code>, and the latter is a collection of <code>b</code>s. The result is then a collection (the same type of collection) of <code>b</code>s, by applying every element in the second collection to every function in the first collection.</p>\n\n<p>So for a list it looks like:</p>\n\n<pre><code>(&lt;*&gt;) :: [a -&gt; b] -&gt; [a] -&gt; [b]\n(&lt;*&gt;) fs xs = [fi xj | fi &lt;- fs, xj &lt;- xs]\n</code></pre>\n\n<p>A <code>Maybe</code> is also some sort of collection: it either contains <em>no</em> elements (the <code>Nothing</code> case), or <em>one</em> element (the <code>Just x</code> case with <code>x</code> the element). You can thus see a <code>Maybe</code> as a collection with \"<em>multiplicity</em>\" 0..1.</p>\n\n<p>In case one of the two operands is a <code>Nothing</code> (or both), then the result is a <code>Nothing</code> as well, since if there is no function, or no element, there is no \"result\" of a function application. Only in case both operands are <code>Just</code>s (so <code>Just f</code> and <code>Just x</code>), we can perform function application (so <code>Just (f x)</code>):</p>\n\n<pre><code>(&lt;*&gt;) :: Maybe (a -&gt; b) -&gt; Maybe a -&gt; Maybe b\n(&lt;*&gt;) (Just f) (Just x) = Just (f x)\n(&lt;*&gt;) _ _ = Nothing\n</code></pre>\n\n<p>In this specific case, we can analyze the use:</p>\n\n<pre><code>addRecip :: Double -&gt; Double -&gt; Maybe Double\naddRecip x y = (fmap (+) (recipMay x)) &lt;*&gt; recipMay y\n  where\n    recipMay a | a == 0 = Nothing\n               | otherwise = Just (1 / a)\n</code></pre>\n\n<p>We thus see two operands: <code>fmap (+) (RecipMay x)</code> and <code>recipMay y</code>. In case <code>x</code> and/or <code>y</code> are <code>0</code>, then the operands are respectively <code>Nothing</code>. Since in that case the corresponding <code>recipMay</code> is <code>Nothing</code>.</p>\n\n<p>We thus could write it like:</p>\n\n<pre><code>addRecip :: Double -&gt; Double -&gt; Maybe Double\naddRecip x y | x == 0 = Nothing\n             | y == 0 = Nothing\n             | otherwise = Just ((1/x) + (1/y))\n</code></pre>\n\n<p>But in the above we thus repeat the <code>== 0</code>, and <code>1/</code> logic twice.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 51916327, "answer_count": 3, "score": 1, "last_activity_date": 1534671978, "creation_date": 1534669083, "question_id": 51916079, "link": "https://stackoverflow.com/questions/51916079/what-does-do-in-addrecip-x-y-fmap-recipmay-x-recipmay-y", "title": "What does &lt;*&gt; do in addRecip x y = fmap (+) (recipMay x) &lt;*&gt; recipMay y?", "body": "<pre><code>addRecip :: Double -&gt; Double -&gt; Maybe Double\naddRecip x y = fmap (+) (recipMay x) &lt;*&gt; recipMay y\n  where\n    recipMay a | a == 0 = Nothing\n               | otherwise = Just (1 / a)\n</code></pre>\n\n<p>I look up some explanation for <code>&lt;*&gt;</code>.</p>\n\n<p><code>&lt;*&gt;</code> takes a functor that contains a function taking an <code>a</code> and returning a <code>b</code>, and a functor that contains an a, and it returns a functor that contains <code>a</code> <code>b</code>. So <code>&lt;*&gt;</code> kind of extract the function from a functor and applies it to an arguments also inside a functor, and finally returns the result into a functor</p>\n\n<p>This is an example:</p>\n\n<pre><code>fs &lt;*&gt; xs = [f x | f &lt;- fs, x &lt;- xs]\n</code></pre>\n\n<p>But in my case, it seems a bit different. The elements in <code>recipMay x</code> are not functions.</p>\n"}, {"tags": ["haskell", "newtype", "coerce"], "comments": [{"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 2, "creation_date": 1534671362, "post_id": 51915219, "comment_id": 90782527, "body": "See my answer regarding your criticism of <code>coerce</code> as shorthand. You don&#39;t coerce the inputs and outputs (that is indeed little if any better than applying newtype constructors/getters); instead <code>coerce</code> the <i>function</i> you want to call so it has a different type. As for safety; it&#39;s no more or less safe than manually unwrapping. If you want to make that impossible, don&#39;t export the newtype constructors, and <code>coerce</code> won&#39;t work either. If you can mess up with coerce, you can also mess up with manual newtype unwrapping."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1534816289, "post_id": 51915219, "comment_id": 90830917, "body": "I agree with your uneasiness about coerce -- though coerce won&#39;t do anything that you couldn&#39;t otherwise do safely.  In particular, newtypes are not coercible <i>unless their constructors are in scope</i>.  So if you are properly using <a href=\"https://wiki.haskell.org/Smart_constructors\" rel=\"nofollow noreferrer\">smart constructors</a>, for example, coerce can&#39;t hurt you."}], "answers": [{"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534662797, "post_id": 51915373, "comment_id": 90780692, "body": "I should have mentioned that <code>coerce</code> is unsuitable for this purpose, since it defies type safety."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534662826, "post_id": 51915373, "comment_id": 90780696, "body": "@IgnatInsarov Why does <code>coerce</code> defy type safety? Are you sure you&#39;re not thinking of <code>unsafeCoerce</code>?"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 4, "creation_date": 1534662863, "post_id": 51915373, "comment_id": 90780707, "body": "@IgnatInsarov This is a common misconception. <code>coerce</code> is completely safe. You can&#39;t <code>coerce</code> integer to string for example. It&#39;s possible with <code>unsafeCoerce</code> only."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1534665791, "post_id": 51915373, "comment_id": 90781301, "body": "@DavidYoung Not like totally defies. It is just that I do not trust myself with it. See the postscriptum I added to my question."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534666124, "post_id": 51915373, "comment_id": 90781385, "body": "@IgnatInsarov It&#39;s possible to implement function like <code>via @Sum @Int (&lt;&gt;) 3 4</code> which results into <code>3 + 4</code> using <code>coerce</code>."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534666483, "post_id": 51915373, "comment_id": 90781447, "body": "@Shersh Yes, it sounds like a perfect fit. I think it would be great if you expand your answer with the definition and use of this function. It is a great use case for <code>TypeApplications</code>, too. I wonder if we could draft a <code>viaN</code> function that lifts a function of any number of arguments this way."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534693357, "post_id": 51915373, "comment_id": 90788292, "body": "@IgnatInsarov I&#39;ve added <code>via</code> function. It&#39;s an open question how to support it for arbitrary number of variables. Though, I guess, well-known trick with polyvariadic functions could work."}], "tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": false, "score": 6, "last_activity_date": 1534693297, "last_edit_date": 1534693297, "creation_date": 1534662677, "answer_id": 51915373, "question_id": 51915219, "link": "https://stackoverflow.com/questions/51915219/is-there-a-shorthand-for-operations-like-fromnewtype-f-tonewtype/51915373#51915373", "title": "Is there a shorthand for operations like `fromNewtype . f . toNewtype`?", "body": "<p>Yes, there's! It's a <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Coerce.html#v:coerce\" rel=\"nofollow noreferrer\"><code>coerce</code></a> function from <code>base</code> package. It allows to convert from <code>newtype</code> and to <code>newtype</code> automatically. GHC actually has a big chunk of theory behind coercions.</p>\n\n<p>In <a href=\"https://github.com/kowainik/relude\" rel=\"nofollow noreferrer\"><code>relude</code></a> I called this function <code>under</code>.</p>\n\n<pre><code>ghci&gt; newtype Foo = Foo Bool deriving Show\nghci&gt; under not (Foo True)\nFoo False\nghci&gt; newtype Bar = Bar String deriving Show\nghci&gt; under (filter (== 'a')) (Bar \"abacaba\")\nBar \"aaaa\"\n</code></pre>\n\n<p>You can see the whole module here:</p>\n\n<ul>\n<li><a href=\"http://hackage.haskell.org/package/relude-0.2.0/docs/Relude-Extra-Newtype.html\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/relude-0.2.0/docs/Relude-Extra-Newtype.html</a></li>\n</ul>\n\n<p>It's also possible to implement custom functions for binary operators as well:</p>\n\n<pre><code>ghci&gt; import Data.Coerce \nghci&gt; :set -XScopedTypeVariables \nghci&gt; :set -XTypeApplications \nghci&gt; :{\nghci| via :: forall n a . Coercible a n =&gt; (n -&gt; n -&gt; n) -&gt; (a -&gt; a -&gt; a)\nghci| via = coerce\nghci| :}\nghci&gt; :{\nghci| viaF :: forall n a . Coercible a (n a) =&gt; (n a -&gt; n a -&gt; n a) -&gt; (a -&gt; a -&gt; a)\nghci| viaF = coerce\nghci| :}\nghci&gt; via @(Sum Int) @Int (&lt;&gt;) 3 4\n7\nghci&gt; viaF @Sum @Int (&lt;&gt;) 3 5\n8\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": false, "score": 6, "last_activity_date": 1534663982, "last_edit_date": 1534663982, "creation_date": 1534663220, "answer_id": 51915420, "question_id": 51915219, "link": "https://stackoverflow.com/questions/51915219/is-there-a-shorthand-for-operations-like-fromnewtype-f-tonewtype/51915420#51915420", "title": "Is there a shorthand for operations like `fromNewtype . f . toNewtype`?", "body": "<p><code>coerce</code> from <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Coerce.html\" rel=\"nofollow noreferrer\">Data.Coerce</a> can be pretty great for this sort of thing. You can use it to convert between different types with the same representation (like between a type and a newtype wrapper, or vice versa). For example:</p>\n\n<pre><code>\u03bb coerce (3 :: Int) :: Sum Int\nSum {getSum = 3}\nit :: Sum Int\n\n\u03bb coerce (3 :: Sum Int) :: Int\n3\nit :: Int\n</code></pre>\n\n<p>It was developed to solve the problem that it is cost-free to e.g. convert an <code>Int</code> into a <code>Sum Int</code> by applying <code>Sum</code>, but it isn't necessarily cost-free to e.g convert a <code>[Int]</code> to a <code>[Sum Int]</code> by applying <code>map Sum</code>. The compiler might be able to optimise away the traversal of the list spine from <code>map</code> or it might not, but we know that the same structure in memory can serve as either a <code>[Int]</code> or a <code>[Sum Int]</code>, because the list structure doesn't depend on any properties of the elements and the element types have identical representation between those two cases. <code>coerce</code> (plus the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#roles\" rel=\"nofollow noreferrer\">role system</a>) allows us to make use of this fact to convert between the two in a way that is guaranteed not to do any runtime work, but still have the compiler check that it's safe to do so:</p>\n\n<pre><code>\u03bb coerce [1, 2, 3 :: Int] :: [Sum Int]\n[Sum {getSum = 1},Sum {getSum = 2},Sum {getSum = 3}]\nit :: [Sum Int]\n</code></pre>\n\n<p>Something that wasn't at all obvious to me at first is that <code>coerce</code> is not limited to coercing \"structures\"! Because all it's doing is allowing us to substitute types (including parts of compound types) when the representations are identical, it works just as well to coerce <em>code</em>:</p>\n\n<pre><code>\u03bb addInt = (+) @ Int\naddInt :: Int -&gt; Int -&gt; Int\n\n\u03bb let addSum :: Sum Int -&gt; Sum Int -&gt; Sum Int\n|     addSum = coerce addInt\n| \naddSum :: Sum Int -&gt; Sum Int -&gt; Sum Int\n\n\u03bb addSum (Sum 3) (Sum 19)\nSum {getSum = 22}\nit :: Sum Int\n</code></pre>\n\n<p>(In the above example I had to define a monotype version of <code>+</code> because <code>coerce</code> is so generic the type system otherwise doesn't know which version of <code>+</code> I'm asking to coerce to <code>Sum Int -&gt; Sum Int -&gt; Sum Int</code>; I could instead have given an inline type signature on the argument to <code>coerce</code>, but that looks less tidy. Often in real usage the context is sufficient to determine the \"source\" and \"target\" types of the <code>coerce</code>)</p>\n\n<p>I once wrote a library that provided a few different ways of paramterising types via newtypes, and provided similar APIs with each scheme. The modules implementing the APIs were full of type signatures and <code>foo' = coerce foo</code> style definitions; it felt really nice that I was barely doing any work other than stating the types that I wanted.</p>\n\n<p>Your example (using <code>mappend</code> on <code>Sum</code> to implement addition, without having to explicitly convert back and forth) could look like:</p>\n\n<pre><code>\u03bb let (+) :: Int -&gt; Int -&gt; Int\n|     (+) = coerce (mappend @ (Sum Int))\n| \n(+) :: Int -&gt; Int -&gt; Int\n\n\u03bb 3 + 8\n11\nit :: Int\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 1, "creation_date": 1534785998, "post_id": 51916175, "comment_id": 90821553, "body": "I&#39;m happy to see <code>coercible-utils</code> mentioned here! :) Would you mind changing the link to <code>ala</code> to <a href=\"http://hackage.haskell.org/package/coercible-utils-0.0.0/docs/CoercibleUtils.html#v:ala\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/coercible-utils-0.0.0/docs/&hellip;</a> though? This way it&#39;s more clear that <code>coercible-utils</code> is available from Hackage."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 9, "last_activity_date": 1534788993, "last_edit_date": 1534788993, "creation_date": 1534669959, "answer_id": 51916175, "question_id": 51915219, "link": "https://stackoverflow.com/questions/51915219/is-there-a-shorthand-for-operations-like-fromnewtype-f-tonewtype/51916175#51916175", "title": "Is there a shorthand for operations like `fromNewtype . f . toNewtype`?", "body": "<p>Your \"spiked monster\" example is better handled by putting the summands into a list and using the <code>ala</code> function available <a href=\"http://hackage.haskell.org/package/coercible-utils-0.0.0/docs/CoercibleUtils.html#v:ala\" rel=\"nofollow noreferrer\">here</a>, which has type:</p>\n\n<pre><code>ala :: (Coercible a b, Coercible a' b') \n    =&gt; (a -&gt; b) \n    -&gt; ((a -&gt; b) -&gt; c -&gt; b')   \n    -&gt; c \n    -&gt; a' \n</code></pre>\n\n<p>where</p>\n\n<ul>\n<li><code>a</code> is the <em>unwrapped</em> base type.</li>\n<li><code>b</code> is the newtype that wraps <code>a</code>.</li>\n<li><code>a -&gt; b</code> is the newtype constructor.</li>\n<li><code>((a -&gt; b) -&gt; c -&gt; b')</code> is a function that, knowing how to wrap values of the base type <code>a</code>, knows how to process a value of type <code>c</code> (almost always a container of <code>a</code>s) and return a wrapped result <code>b'</code>. In practice this function is almost always <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Foldable.html#v:foldMap\" rel=\"nofollow noreferrer\"><code>foldMap</code></a>.</li>\n<li><code>a'</code> the <em>unwrapped</em> final result. The unwrapping is handled by <code>ala</code> itself.</li>\n</ul>\n\n<p>in your case, it would be something like:</p>\n\n<pre><code>ala Sum foldMap [1,2::Integer]\n</code></pre>\n\n<p>\"ala\" functions can be implemented through means other than <code>coerce</code>, for example <a href=\"http://hackage.haskell.org/package/newtype-generics-0.5.3/docs/Control-Newtype-Generics.html#v:ala\" rel=\"nofollow noreferrer\">using generics</a> to handle the unwrapping, or even <a href=\"http://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Wrapped.html#v:ala\" rel=\"nofollow noreferrer\">lenses</a>.</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 422, "favorite_count": 1, "accepted_answer_id": 51916175, "answer_count": 3, "score": 8, "last_activity_date": 1534788993, "creation_date": 1534661227, "last_edit_date": 1534665668, "question_id": 51915219, "link": "https://stackoverflow.com/questions/51915219/is-there-a-shorthand-for-operations-like-fromnewtype-f-tonewtype", "title": "Is there a shorthand for operations like `fromNewtype . f . toNewtype`?", "body": "<p>A pattern that presents itself the more often the more type safety is being introduced via <code>newtype</code> is to project a value <em>(or several values)</em> to a <code>newtype</code> wrapper, do some operations, and then retract the projection. An ubiquitous example is that of <code>Sum</code> and <code>Product</code> monoids:</p>\n\n<pre><code>\u03bb x + y = getSum $ Sum x `mappend` Sum y\n\u03bb 1 + 2\n3\n</code></pre>\n\n<p>I imagine a collection of functions like <code>withSum</code>, <code>withSum2</code>, and so on, may be automagically rolled out for each <code>newtype</code>. Or maybe a parametrized <code>Identity</code> may be created, for use with <code>ApplicativeDo</code>. Or maybe there are some other approaches that I could not think of.</p>\n\n<p>I wonder if there is some prior art or theory around this.</p>\n\n<p><strong>P.S.</strong> &nbsp; I am unhappy with <code>coerce</code>, for two reasons:</p>\n\n<ul>\n<li><p><strong>safety</strong> &nbsp; I thought it is not very safe. After being pointed that it is actually safe, I\ntried a few things and I could not do anything harmful, because it requires a type annotation\nwhen there is a possibility of ambiguity. For example:</p>\n\n<pre><code>\u03bb newtype F = F Int deriving Show\n\u03bb newtype G = G Int deriving Show\n\u03bb coerce . (mappend (1 :: Sum Int)) . coerce $ F 1 :: G\nG 2\n\u03bb coerce . (mappend (1 :: Product Int)) . coerce $ F 1 :: G\nG 1\n\u03bb coerce . (mappend 1) . coerce $ F 1 :: G\n...\n    \u2022 Couldn't match representation of type \u2018a0\u2019 with that of \u2018Int\u2019\n        arising from a use of \u2018coerce\u2019\n...\n</code></pre>\n\n<p>But I would still not welcome <code>coerce</code>, because it is far too easy to strip a safety label and\nshoot someone, once the reaching for it becomes habitual. Imagine that, in a cryptographic\napplication, there are two values: <code>x :: Prime Int</code> and <code>x' :: Sum Int</code>. I would much rather\ntype <code>getPrime</code> and <code>getSum</code> every time I use them, than <code>coerce</code> everything and have one day\nmade a catastrophic mistake.</p></li>\n<li><p><strong>usefulness</strong> &nbsp; <code>coerce</code> does not bring much to the table regarding a <em>shorthand</em> for\ncertain operations. The leading example of my post, that I repeat here:</p>\n\n<pre><code>\u03bb getSum $ Sum 1 `mappend` Sum 2\n3\n</code></pre>\n\n<p>\u2014 Turns into something along the lines of this spiked monster:</p>\n\n<pre><code>\u03bb coerce $ mappend @(Sum Integer) (coerce 1) (coerce 2) :: Integer\n3\n</code></pre>\n\n<p>\u2014 Which is hardly of any benfit.</p></li>\n</ul>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 1851482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/450f76f93a2ae86b8a73f9f6c5bd0e9e?s=128&d=identicon&r=PG", "display_name": "user1851482", "link": "https://stackoverflow.com/users/1851482/user1851482"}, "edited": false, "score": 0, "creation_date": 1534706277, "post_id": 51913676, "comment_id": 90791821, "body": "Thankyou so much, thats helped me alot :)"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 3, "last_activity_date": 1534640916, "creation_date": 1534640916, "answer_id": 51913676, "question_id": 51912671, "link": "https://stackoverflow.com/questions/51912671/plotting-a-random-walk-in-haskell/51913676#51913676", "title": "Plotting a Random walk in Haskell", "body": "<p>The problem is that <code>toFile</code>'s third argument is an action in a special <code>EC</code> monad.  This monad can't do IO, so you can't include IO actions like <code>getStdGen</code> in its do-block.</p>\n\n<p>Instead, use a separate outer IO do-block to get the random number stream you need as a pure value, and then you can freely use it in the inner EC do-block, like so:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  -- this is do-block for the IO monad\n  nums &lt;- randomRs (-1,1) &lt;$&gt; getStdGen\n  toFile def \"random_walk.png\" $ do\n    -- this is the do-block for the EC monad\n    layout_title .= \"Random Walk\"\n    setColors [opaque blue, opaque red]\n    plot (line \"random walk\" [ take 100 $ walk (0,0) nums ])\n\nwalk :: (Float, Float) -&gt; [Float] -&gt; [(Float, Float)]\nwalk (x,y) (dx:dy:list) = (x+dx,y+dy):(walk (x+dx,y+dy) list)\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 1851482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/450f76f93a2ae86b8a73f9f6c5bd0e9e?s=128&d=identicon&r=PG", "display_name": "user1851482", "link": "https://stackoverflow.com/users/1851482/user1851482"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1534706478, "creation_date": 1534627576, "last_edit_date": 1534706478, "question_id": 51912671, "link": "https://stackoverflow.com/questions/51912671/plotting-a-random-walk-in-haskell", "title": "Plotting a Random walk in Haskell", "body": "<p>Im trying to plot a random walk in haskell.\nIm useing getStdGen for the random nummbers.\nIm useing Chart.Easy for the plotting.\nIm a pleb at haskell and I cant understand the compiler error Im getting.</p>\n\n<pre><code>import Graphics.Rendering.Chart.Easy\nimport Graphics.Rendering.Chart.Backend.Cairo\nimport System.Random\n\nmain = toFile def \"random_walk.png\" $ do\n layout_title .= \"Random Walk\"\n setColors [opaque blue, opaque red]\n g &lt;- getStdGen\n plot (line \"random walk\" [ take 100 $ walk (0,0) ( randoms g :: [Float])])\n\nwalk :: (Float, Float) -&gt; [Float] -&gt; [(Float, Float)]\nwalk (x,y) (dx:dy:list) = (x+dx,y+dy):(walk (x+dx,y+dy) list)\n</code></pre>\n\n<p>The error is: </p>\n\n<pre><code>[1 of 1] Compiling Main             ( simple.hs, interpreted )\n\nsimple.hs:8:7: error:\n    * Couldn't match type `IO'\n                     with `Control.Monad.Trans.State.Lazy.StateT\n                             (Layout Float Float) (Control.Monad.Trans.State.Lazy.State CState)'\n      Expected type: Control.Monad.Trans.State.Lazy.StateT\n                       (Layout Float Float)\n                       (Control.Monad.Trans.State.Lazy.State CState)\n                       StdGen\n        Actual type: IO StdGen\n    * In a stmt of a 'do' block: g &lt;- getStdGen\n      In the second argument of `($)', namely\n        `do layout_title .= \"Random Walk\"\n            setColors [opaque blue, opaque red]\n            g &lt;- getStdGen\n            plot\n              (line\n                 \"random walk\" [take 100 $ walk (0, 0) (randoms g :: [Float])])'\n      In the expression:\n        toFile def \"random_walk.png\"\n          $ do layout_title .= \"Random Walk\"\n               setColors [opaque blue, opaque red]\n               g &lt;- getStdGen\n               plot\n                 (line\n                    \"random walk\" [take 100 $ walk (0, 0) (randoms g :: [Float])])\n  |\n8 |  g &lt;- getStdGen\n  |       ^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>Dose anyone understand? Can anyone help me? Any other comments?</p>\n\n<p>After code was fixed, the reslut was \n<a href=\"https://i.stack.imgur.com/mWRQv.png\" rel=\"nofollow noreferrer\">this image.</a></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 64542, "user_id": 10008173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ea5d6d5d63e054acb8cfa95a39240d?s=128&d=identicon&r=PG&f=1", "display_name": "David Maze", "link": "https://stackoverflow.com/users/10008173/david-maze"}, "edited": false, "score": 1, "creation_date": 1534625795, "post_id": 51912419, "comment_id": 90775056, "body": "An important observation in your error message: <code>len(l)</code> doesn&#39;t parse to a function call like in most other languages, but as two separate expressions <code>len</code> and <code>(l)</code>.  Writing <code>(len l)</code> (and, correspondingly, <code>(reverseS l)</code>) might be more correct and confuse the compiler less."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534626446, "post_id": 51912419, "comment_id": 90775199, "body": "<code>takeAux len(l) reverseS(l)</code> is calling <code>takeAux</code> with <i>four</i> arguments (the parentheses are redundant)."}, {"owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "edited": false, "score": 0, "creation_date": 1534627221, "post_id": 51912419, "comment_id": 90775337, "body": "Oh wow, I totally missed that! Thank you for the observation. You are correct, I am calling length when, in fact, in my code I also implemented a lenS function which works with Lists of the type Snoc.   I really appreciate all of your corrections, it&#39;s helping me a big deal to improve."}], "answers": [{"comments": [{"owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "edited": false, "score": 0, "creation_date": 1534627479, "post_id": 51912498, "comment_id": 90775380, "body": "Thank you so much. I actually just realized I was using the len functions rather than the one I declared (lenS, for Snoc lists). I also appreciate the observation regarding complexity. I&#39;ll get onto that as well."}, {"owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "edited": false, "score": 1, "creation_date": 1534628462, "post_id": 51912498, "comment_id": 90775594, "body": "My code runs now. I will curry the right way from now on. Thank you for pointing it out. :)"}], "tags": [], "owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "is_accepted": true, "score": 2, "last_activity_date": 1534625907, "creation_date": 1534625907, "answer_id": 51912498, "question_id": 51912419, "link": "https://stackoverflow.com/questions/51912419/haskell-couldnt-match-type/51912498#51912498", "title": "Haskell: Couldn&#39;t match type?", "body": "<p>You're not writing curried applications right. Should be something like</p>\n\n<pre><code>takeS n l = if n &gt;= (len l) then \n           takeAux (len l) (reverseS l) else takeAux n (reverseS l) where\n               takeAux 0 l = l\n               takeAux n l = (Snoc (takeAux (n-1) (initS l)) (lastS l)) \n</code></pre>\n\n<p>Parentheses are used for grouping in Haskell, never as an operator (tuple construction put aside.)</p>\n\n<p>As a side note, there are few inconsistencies in your code:</p>\n\n<ol>\n<li><p>Are there any name clashes with standard Prelude in your code? <code>len</code> is a standard function that measures the length of lists.</p></li>\n<li><p><code>reverse</code> is quadratic. Why do you need <code>headS</code> and <code>tailS</code> here, when you've got init and last in no time (i.e. in O(1))?</p></li>\n<li><p>There's inconsistency in <code>takeS</code> contract: <code>takeS 2 NilS</code> is an error yet <code>takeS 3 (Snoc NilS 42)</code> returns a tsil. You don't really need length in the last match.</p></li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "edited": false, "score": 1, "creation_date": 1534627259, "post_id": 51912527, "comment_id": 90775343, "body": "Thank you John, I will keep that in mind from now on. Much appreciated."}], "tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": false, "score": 2, "last_activity_date": 1534626094, "creation_date": 1534626094, "answer_id": 51912527, "question_id": 51912419, "link": "https://stackoverflow.com/questions/51912419/haskell-couldnt-match-type/51912527#51912527", "title": "Haskell: Couldn&#39;t match type?", "body": "<p>The type checker has messed up the type of <code>takeAux</code> in a very interesting way.  The error message is therefore confusing.  Write a type signature above takeAux in the where clause <code>takeAux :: Int -&gt; ListS a -&gt; ListS a</code> and haskell will give you a much better error message centered at a different line.</p>\n\n<p>As a general rule when you get a type checking error on an auxilriy function without a type signature and the cause is not blindly obvious, adding a type signature will give you a much clearer error message.  It also helps to document your code.</p>\n"}], "owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 51912498, "answer_count": 2, "score": 0, "last_activity_date": 1534626094, "creation_date": 1534625225, "question_id": 51912419, "link": "https://stackoverflow.com/questions/51912419/haskell-couldnt-match-type", "title": "Haskell: Couldn&#39;t match type?", "body": "<p>One last question regarding type matching (for the time being, at least, lol).</p>\n\n<p>In the following <strong>takeS</strong> formula right at the bottom of my code, I want to output a specific number of elements in a Snoc list defined as follows:</p>\n\n<pre><code>data ListS a = NilS \n              |Snoc (ListS a) a deriving Show\n\ninitS :: ListS a -&gt; ListS a\ninitS NilS          = error \"Empty List\"\ninitS (Snoc a b)    = a\n\nlastS :: ListS a -&gt; a\nlastS NilS          = error \"Empty List\"\nlastS (Snoc _ b)    = b\n\nheadS :: ListS a -&gt; a\nheadS NilS          = error \"Empty List\"\nheadS (Snoc NilS b) = b\nheadS (Snoc a b)    = headS a\n\ntailS :: ListS a -&gt; ListS a\ntailS NilS          = error \"Empty List\"\ntailS (Snoc NilS a) = NilS\ntailS (Snoc a b)    = (Snoc (tailS a) b)    \n\nreverseS :: ListS a -&gt; ListS a\nreverseS NilS = NilS\nreverseS l = (Snoc (reverseS(tailS(l))) (headS l))\n\ntakeS :: Int -&gt; ListS a -&gt; ListS a\ntakeS 0 _    = NilS\ntakeS _ NilS = error \"Empty List\"\ntakeS n l    = if n &gt;= len(l) then \n               takeAux len(l) reverseS(l) else takeAux n reverseS(l) where\n                   takeAux 0 l = l\n                   takeAux n l = (Snoc (takeAux (n-1) initS(l)) (lastS l)) \n</code></pre>\n\n<p>When I try to compile, I get the following error:</p>\n\n<pre><code>C:\\Users\\Google Drive\\Ejercicio01.hs:31:20: error:\n    * Couldn't match type `ListS a4' with `ListS a3 -&gt; ListS a3'\n      Expected type: t -&gt; (ListS a3 -&gt; ListS a3) -&gt; ListS a4 -&gt; ListS a4\n        Actual type: t -&gt; ListS a4 -&gt; ListS a4\n    * In an equation for `takeS':\n          takeS n l\n            = if n &gt;= len (l) then\n                  takeAux len (l) reverseS (l)\n              else\n                  takeAux n reverseS (l)\n            where\n                takeAux 0 l = l\n                takeAux n l = (Snoc (takeAux (n - 1) initS (l)) (lastS l))\n    * Relevant bindings include\n        takeAux :: t -&gt; (ListS a3 -&gt; ListS a3) -&gt; ListS a4 -&gt; ListS a4\n          (bound at C:\\Users\\Google Drive\\Ejercicio01.hs:31:20)\n   |\n97 |                    takeAux 0 l = l\n   |                    ^^^^^^^^^^^^^^^^...\nFailed, no modules loaded.\n</code></pre>\n\n<p>As I see  it, I'm trying to output the same type of list, but Haskell says I am creating a different type when calling the auxiliary function. Is that correct? It can get a bit confusing when dealing with these kind of errors at the beginning, so, besides helping me out by pointing at what the problem is, I would like to know if there's a repository or guide to understand better the intricacies of Haskell.  </p>\n\n<p>Thank you!</p>\n"}, {"tags": ["function", "haskell", "multiline", "read-eval-print-loop", "ghci"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 6, "creation_date": 1534622205, "post_id": 51912092, "comment_id": 90774257, "body": "You are probably running this in <code>ghci</code>, then you need to define it in a multiline statement."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1534622251, "post_id": 51912092, "comment_id": 90774266, "body": "The linked duplicate is about GHCi and <code>let</code>. Even if you&#39;re not using <code>let</code> in GHCi, it&#39;s implicit, so the same answers apply."}, {"owner": {"reputation": 97, "user_id": 5620451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1878ed09c7c507e846a4520f87b5e38?s=128&d=identicon&r=PG&f=1", "display_name": "Maritza Esparza", "link": "https://stackoverflow.com/users/5620451/maritza-esparza"}, "edited": false, "score": 0, "creation_date": 1534623242, "post_id": 51912092, "comment_id": 90774478, "body": "Yeah the problem was solved when I added the functions on their own source file and loaded it on ghci, thanks! that was a silly mistake."}], "owner": {"reputation": 97, "user_id": 5620451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1878ed09c7c507e846a4520f87b5e38?s=128&d=identicon&r=PG&f=1", "display_name": "Maritza Esparza", "link": "https://stackoverflow.com/users/5620451/maritza-esparza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1534622185, "answer_count": 0, "score": 0, "last_activity_date": 1534672152, "creation_date": 1534622010, "last_edit_date": 1534672152, "question_id": 51912092, "link": "https://stackoverflow.com/questions/51912092/non-exhaustive-patterns-in-recursive-length-function", "closed_reason": "Duplicate", "title": "Non-exhaustive patterns in recursive length function", "body": "<p>I'm new to the Haskell language and doing an exercise of the book Get programming with Haskell, I tried the following function:</p>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>myLength [] = 0\nmyLength (x:xs) = 1 + myLength xs\n</code></pre>\n\n\n\n<p>But throws the exception: <code>Non-exhaustive patterns in function myLength</code> when calling the function with all patterns:</p>\n\n<ul>\n<li>an empty array</li>\n<li>an array of just one item</li>\n<li>with more items.</li>\n</ul>\n\n<p>I'm using GHCi, version 8.0.2 and the book uses Haskell version 8.0.1.</p>\n\n<p>I'm not so sure about what case isn't being covered, sorry I'm very new to haskell and I'll be great to know what piece is missing.</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534607933, "post_id": 51910125, "comment_id": 90770812, "body": "What do you mean by invertible? The obvious definition is something like &quot;if <code>liftA2 (,) xs ys == liftA2 (,) xs&#39; ys&#39;</code>, then <code>xs == xs&#39;</code> and <code>ys == ys&#39;</code>&quot;. But the usual <code>Applicative</code> instance for lists (which I think you&#39;re calling the &quot;direct sum&quot;), which you claim is invertible, does not satisfy this definition (e.g. <code>liftA2 (,) [] [()] == liftA2 (,) [()] []</code>), so I&#39;m unclear on exactly what you want here. (And this is not a quibble about emptiness: there are also non-empty lists which break invertibility.)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1534608253, "post_id": 51910125, "comment_id": 90770903, "body": "&quot;One may say that <code>zip</code> is a method of <code>Applicative</code>&quot;. Why? And <i>all</i> monids are &quot;endo-monoids&quot;; the definition starts with a single type and a <i>closed</i> binary operation on that type."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1534608631, "post_id": 51910125, "comment_id": 90771012, "body": "@chepner Well, maybe the usual <code>Hask</code> understanding of &quot;monoid&quot; must be expanded. For instance, length indexed vectors are an obvious monoid, it is just that there is a type level <i>(also monoidal)</i> operation involved in the definition of <code>mappend</code>. Notice also that a monad is a monoid in the category of endofunctors."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1534608981, "post_id": 51910125, "comment_id": 90771112, "body": "@chepner Because <code>zip</code> is <code>liftA2 (,)</code> in <code>Control.Appicative.ZipList</code>. Also, because <code>Applicative</code> actually somewhat stands for &quot;monoidal functor&quot;, and the <a href=\"https://en.wikipedia.org/wiki/Monoidal_functor\" rel=\"nofollow noreferrer\">definition thereof</a> would strike you with its similarity to the type of <code>zip</code>."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534609477, "post_id": 51910125, "comment_id": 90771247, "body": "@DanielWagner By <i>&quot;invertible&quot;</i> I mean that <i>arrows can be retracted</i>. Observe also the definition of a strong monoidal functor, say, <a href=\"https://ncatlab.org/nlab/show/monoidal+functor\" rel=\"nofollow noreferrer\">at nLab</a> or <a href=\"https://en.wikipedia.org/wiki/Monoidal_functor\" rel=\"nofollow noreferrer\">at Wikipedia</a> <i>(which <code>Applicative</code> is, contrary to Hackage, <a href=\"https://cstheory.stackexchange.com/a/12414/48223\">not</a>)</i>. Your example mandates that I, at the very least, add &quot;non-trivial&quot; somewhere in the corresponding passage of my post. However, I am not sure I am able to discover the non-trivial pathological cases you are mentioning."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534610074, "post_id": 51910125, "comment_id": 90771403, "body": "@IgnatInsarov For example, take any <code>m &#47;= n</code> and consider that <code>liftA2 (,) (replicate m x) (replicate n y) == liftA2 (,) (replicate n x) (replicate m y)</code>."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534611876, "post_id": 51910125, "comment_id": 90771848, "body": "@DanielWagner Oh, you are right. I will be thinking it through."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 2, "creation_date": 1534619405, "post_id": 51910125, "comment_id": 90773575, "body": "Thinking about vectors and matrices there are possibly operations to be made from a binary operation than you\u2019ve considered. As well as the Cartesian product kind (<code>(a -&gt; b -&gt; c) -&gt; v n a -&gt; v m b -&gt; v (n * m) c</code>) and the zip kind (<code>(a -&gt; b -&gt; c) -&gt; v n a -&gt; v n b -&gt; v n c</code>), there is a contraction kind for matrices: <code>Monoid c =&gt; (</code>a -&gt; b -&gt; c) -&gt; m x y a -&gt; m y z b -&gt; m x z c`. That said I think the right place for this would be a shape-indexed applicative. This works for vectors which are obviously zippable and the size is easily expressed. It also works for functions. It doesn\u2019t for maps."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1534622354, "post_id": 51910125, "comment_id": 90774289, "body": "I can&#39;t write a proper answer right now, but anyway: (1) FWIW, I don&#39;t think of <code>ZipList</code> zipping as unsafe; rather, I see it and the &quot;safe&quot; zipping you describe as variations on the same theme (it helps that the trimming performed by ordinary <code>zip</code> is useful sometimes). (2) That said, one option is <a href=\"http://hackage.haskell.org/package/adjunctions-4.4/docs/Data-Functor-Rep.html\" rel=\"nofollow noreferrer\"><code>Representable</code></a> -- have a look at <code>mzipRep</code> -- which limits us to things with fixed shape (fixed size vectors, infinite streams, functions, etc.)."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1534673885, "post_id": 51910125, "comment_id": 90783113, "body": "@duplode I am encouraging you to write an answer at a later time then. It will take me a while to decipher the documentation to this module you linked, and there may as well be someone else interested in the same question, who will most certainly enjoy reading your answer too."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534771452, "post_id": 51910125, "comment_id": 90813346, "body": "For matrix addition, zero-padding is actually quite a sensible thing to do: dynamically-sized matrices represent finite-rank linear mappings \u211d^\u221e \u2192 \u211d^\u221e, and if one is shorter than the other it simply means that its other entries are taken to be zero. The reason most data languages (of the Matlab tradition) throw an error when adding matrices of different dimension is that they don&#39;t have a proper type system. The proper representation of \u201cmatrices\u201d in a well-typed language like Haskell is as a <a href=\"http://hackage.haskell.org/package/linearmap-category\" rel=\"nofollow noreferrer\">category of linear mappings</a>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534772363, "post_id": 51910125, "comment_id": 90813959, "body": "Reading through the question again, I don&#39;t think it&#39;s really focused sensibly. You first start about applicatives, but then make your bullet points about monoids instead. Keep in mind that \u201cmonoidal functor\u201d doesn&#39;t really have much to do with <code>Monoid</code>: the former refers to the single <i>type-level monoid</i> (<code>()</code>, <code>(,)</code>), the latter to various value-level monoids among Haskell types."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534772683, "post_id": 51910125, "comment_id": 90814178, "body": "Apart from that, I don&#39;t understand your objection about <code>ZipList</code> being \u201cunsafe\u201d. It has the semantics of a zip which means you drop elements, fine. That&#39;s just how it works. If you don&#39;t want to even allow different-length zipping to typecheck, well, you&#39;ll need a suitable fixed-length type."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534806046, "post_id": 51910125, "comment_id": 90829032, "body": "@leftaroundabout I am not sure I am ready to agree. (1) <i>&quot;That&#39;s just how it works&quot;</i> may be said about implicit state and pointer arithmetics, too. (2) I am thinking that a tuple is an instance of a free monoid, like a list or an hlist. Specifically, one usually puts things <code>x :: A</code> and <code>y :: B</code> in a tuple <code>(x, y)</code> because a function <code>f :: A -&gt; B -&gt; C</code> will be available at a later time that will meld them. So, one may as well wrap them in <code>data W = WA A | WB B | WC C</code> and define an <code>instance Monoid W where mappend (WA x) (WB y) = WC $ f x y</code>. Does this justify my argument better?"}, {"owner": {"reputation": 448, "user_id": 4416280, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c4e7c5ba681838526fb520fc8f36dec?s=128&d=identicon&r=PG&f=1", "display_name": "Zemyla", "link": "https://stackoverflow.com/users/4416280/zemyla"}, "edited": false, "score": 0, "creation_date": 1581440953, "post_id": 51910125, "comment_id": 106431284, "body": "&quot;Not enough laws&quot; will always be a problem for <code>Applicative</code>, because every single <code>Applicative</code> type also allows an <code>Applicative</code> instance which goes the other way. See <code>Control.Applicative.Backwards</code>."}], "answers": [{"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534927234, "post_id": 51950729, "comment_id": 90875964, "body": "From what you say, it must be very easy to obtain an <code>instance Representable</code> for a container with two elements <i>(<code>Bool -&gt; a</code>)</i>, or with infinite number of elements <i>(<code>Natural -&gt; a</code>)</i>, but I wonder to what type of functions an <code>instance Representable (Vector (n :: Nat))</code> would correspond <i>(Where <code>Vector</code> and <code>Nat</code> are similar to those I outlined in a <a href=\"https://stackoverflow.com/q/51917531\">nearby question</a>)</i>. Do we have a suitable type <i>(like, <code>FinOrd (n :: Nat)</code>?..)</i> in Haskell?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1534944651, "post_id": 51950729, "comment_id": 90886259, "body": "@IgnatInsarov That is feasible indeed. Cf. for instance <a href=\"http://hackage.haskell.org/package/finite-typelits-0.1.4.2/docs/Data-Finite.html\" rel=\"nofollow noreferrer\"><i>finite-typelits</i></a>, which in turn can be used to implement fixed size vectors <a href=\"http://hackage.haskell.org/package/vector-sized-1.0.4.0/docs/Data-Vector-Sized.html#g:22\" rel=\"nofollow noreferrer\">with an exact <code>zip</code></a> in the style of what Dan Robertson suggested <a href=\"https://stackoverflow.com/questions/51910125/if-zip-were-a-method-of-a-lawful-type-class-of-which-then/51950729?noredirect=1#comment90773575_51910125\">in a comment here</a>."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 8, "last_activity_date": 1549930068, "last_edit_date": 1549930068, "creation_date": 1534861014, "answer_id": 51950729, "question_id": 51910125, "link": "https://stackoverflow.com/questions/51910125/if-zip-were-a-method-of-a-lawful-type-class-of-which-then/51950729#51950729", "title": "If `zip` were a method of a lawful type class, of which then?", "body": "<p>Exact zipping (as the <a href=\"http://hackage.haskell.org/package/safe-0.3.17/docs/Safe-Exact.html\" rel=\"nofollow noreferrer\"><em>safe</em></a> package calls it) can be expressed through <a href=\"http://hackage.haskell.org/package/adjunctions-4.4/docs/Data-Functor-Rep.html\" rel=\"nofollow noreferrer\">the <code>Representable</code> class</a>. There is a fair amount of theory associated with <code>Representable</code>. For our current purposes, we can focus on...</p>\n\n<blockquote>\n  <p>A <code>Functor</code> <code>f</code> is <code>Representable</code> if <code>tabulate</code> and <code>index</code> witness an isomorphism to <code>(-&gt;) x</code>.</p>\n</blockquote>\n\n<p>... and:</p>\n\n<blockquote>\n  <p>Representable endofunctors over the category of Haskell types are isomorphic to the reader monad and so inherit a very large number of properties for free.</p>\n</blockquote>\n\n<p>Since <code>Representable</code> functors are isomorphic to functions from some type (e.g. an homogeneous pair is isomorphic to <code>Bool -&gt; a</code>, and an infinite stream is isomorphic to <code>Nat -&gt; a</code>), exact zipping can be achieved by zipping the functions pointwise. That is what <a href=\"http://hackage.haskell.org/package/adjunctions-4.4/docs/Data-Functor-Rep.html#v:mzipRep\" rel=\"nofollow noreferrer\"><code>mzipRep</code></a>, the default implementation for <code>MonadZip</code>'s <code>mzip</code>, does:</p>\n\n<pre><code>mzipRep :: Representable f =&gt; f a -&gt; f b -&gt; f (a, b)\nmzipRep as bs = tabulate (index as &amp;&amp;&amp; index bs)\n</code></pre>\n\n<p>While <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Monad-Zip.html\" rel=\"nofollow noreferrer\"><code>MonadZip</code> is a rather awkward class</a> (it is primarily part of the implementation of the <code>MonadComprehensions</code> extension), it has a relevant law, which I will restate it in non-monadic terms:</p>\n\n<blockquote>\n  <p>Information preservation: if <code>() &lt;$ u = () &lt;$ v</code> then <code>munzip (mzip u v) = (u, v)</code></p>\n</blockquote>\n\n<p>In other words, if <code>u</code> and <code>v</code> have the same shape, then <code>mzip</code> does not drop information (and so it can be undone by <code>munzip</code>). As <code>Representable</code> implies there being just one possible shape, it allows us to drop the condition, thus getting exact zipping.</p>\n\n<hr>\n\n<p>Tangential notes:</p>\n\n<blockquote>\n  <p>The <code>ZipList</code> definition is clearly unsafe. It is defined to, given two lists of distinct length, crop the longer one to the length of the shorter.</p>\n</blockquote>\n\n<p>I'd say that depends on what you want to use zipping for. Sometimes you will want or need exact zipping, and sometimes you won't (for instance, consider the commonplace trick of attaching indices to a list with <code>zip [0..]</code>); and sometimes padding rather than trimming will be what makes sense (cf. <a href=\"https://stackoverflow.com/questions/51910125/if-zip-were-a-method-of-a-lawful-type-class-of-which-then?noredirect=1#comment90813346_51910125\">leftaroundabout's comment</a>). That is why I prefer calling exact zipping \"exact\", rather than \"safe\".</p>\n\n<blockquote>\n  <p>There is, however, an annoying complication in that there are very often two ways to define the <code>Applicative</code> that both appear suitable. Why so? I propose that the answer is <em>\"not enough laws\"</em>.</p>\n</blockquote>\n\n<p>I very much disagree with the view that a class is underspecified if it allows more than one instance for some data type. I'd rather say that e.g. lists with the cartesian product applicative and lists with the zipping applicative are different structures, characterised by the relevant morphisms -- it just happens that they can be represented in Haskell through the same data type.</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 511, "favorite_count": 1, "accepted_answer_id": 51950729, "answer_count": 1, "score": 4, "last_activity_date": 1549930068, "creation_date": 1534606260, "last_edit_date": 1534612703, "question_id": 51910125, "link": "https://stackoverflow.com/questions/51910125/if-zip-were-a-method-of-a-lawful-type-class-of-which-then", "title": "If `zip` were a method of a lawful type class, of which then?", "body": "<p><strong>why the question</strong> &nbsp; One may say that <code>zip</code> is a method of <code>Applicative</code>, the usual instance being <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Applicative.html#t:ZipList\" rel=\"nofollow noreferrer\"><code>ZipList</code></a>. I am unhappy with it because it is unsafe. I am unhappy with <a href=\"https://hackage.haskell.org/package/these-0.7.4/docs/Data-Align.html\" rel=\"nofollow noreferrer\"><code>Align</code></a> too, because it is, by virtue of being all-encompassing, overly complicated and not specific enough for usual cases.</p>\n\n<p><strong>lawful classes</strong> &nbsp; Some type classes in Haskell may be dubbed <em>lawful</em>. This means that they come with equalities that must hold \u2014 the laws for a class. It is ordinary that these laws come from category theoretic conceptualization of an aspect of programming. For example, <code>Monad</code> is a conceptualization of <em>computations</em> <em>(whatever is meant by that)</em> via the eponymous category theory device.</p>\n\n<p><strong>overlaying things</strong> &nbsp; The usual operation to want to do with boxes of things is to lay them on top of each other, and if they are monoid, they will meld.</p>\n\n<p>Examples:</p>\n\n<ul>\n<li><a href=\"https://doisinkidney.com/posts/2017-09-25-applicative-arithmetic.html\" rel=\"nofollow noreferrer\">Arithmetics with Maybe.</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Matrix_addition\" rel=\"nofollow noreferrer\">Addition of matrices.</a></li>\n</ul>\n\n<p><strong>not enough laws</strong> &nbsp; The conceptualization of this concept is via monoidal functors, and the corresponding <code>Applicative</code> type class. There is, however, an annoying complication in that there are very often two ways to define the <code>Applicative</code> that both appear suitable. Why so? I propose that the answer is <em>\"not enough laws\"</em>.</p>\n\n<p>Examples:</p>\n\n<ul>\n<li><p>For arithmetics:</p>\n\n<ul>\n<li>The <code>Sum</code> monoid is the actual <em>\"endo-monoid\"</em>. It is only legal for kin things. You cannot sum mass and force, for instance.</li>\n<li>The <code>Product</code> monoid takes numbers of dimension <code>a</code> &amp; <code>b</code> to a number of dimension <code>c</code>. Multiplying mass and force is legal and gets us to warmth.</li>\n</ul>\n\n<p>So, the right choice of monoid may be inferred from types.</p></li>\n<li><p>For lists:</p>\n\n<ul>\n<li>The usual <a href=\"https://en.wikipedia.org/wiki/Direct_sum\" rel=\"nofollow noreferrer\">direct sum</a> of lists is the more safe one. It works with any finite number of elements trivially, and with co-finite number thereof with a <em>\"diagonal process\"</em> definition such as <a href=\"http://okmij.org/ftp/papers/LogicT.pdf\" rel=\"nofollow noreferrer\">LogicT</a>.</li>\n<li>The <code>ZipList</code> definition is clearly unsafe. It is defined to, given two lists of distinct length, crop the longer one to the length of the shorter.</li>\n<li>Length indexed vectors are the device that allows for a safe definition of <code>zip</code>, by demanding a proof that the given lists are of same length.</li>\n</ul></li>\n<li><p>For matrices:</p>\n\n<ul>\n<li>The usual addition of matrices has the <em>(very reasonable)</em> requirement of dimension homogeneity, the same as with length indexed vectors mentioned above. Since matrices are habitually used in various real world simulations, such as 3D graphics, once matrices begin to get cropped or zero-padded, people would complain quite immediately, so a <code>ZipMatrix</code> definition along the lines of <code>ZipList</code> above does not appear attractive.</li>\n<li>The stranger <a href=\"https://en.wikipedia.org/wiki/Kronecker_product\" rel=\"nofollow noreferrer\">Kronecker multiplication</a> is reminiscent of the direct product of lists. And it admits the definition of <code>Monad</code>, too.</li>\n</ul></li>\n</ul>\n\n<p><strong>two cases</strong> &nbsp; From these examples, it reveals itself that there are two distinct ideas mixed up in the thing we call a <em>\"monoid\"</em> or a <em>\"monoidal functor\"</em>, and the distinction is <em>very</em> important for programming <em>(unlike, perhaps, pure theory)</em> because it would clean up confusion, remove unsafeties and, primarily, because there are, in each case, <em>two completely unrelated algorithms to run</em>.</p>\n\n<hr>\n\n<p>I am thinking that maybe invertibility <em>(also called</em> \"strength\"<em>)</em> of the monoidal functor is what matters. But the results of the Sum and the Product monoidal operation on Peano naturals are indistinguishable. <em>(I am unsure whether they can be considered monoidal endofunctors.)</em> So, I am turned to a guess that the changing of types is the hallmark. Multiplication of physical quantities does not type check as a <code>Monoid</code>, even!</p>\n\n<p><strong>P.S.</strong> There presents itself an instance of <code>Monad</code> for length indexed vectors over cartesian products and for matrices over Kronecker multiplication, with some sort of <code>fold zip</code> as <code>join</code>.</p>\n"}, {"tags": ["haskell", "lambda", "map-function"], "comments": [{"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 0, "creation_date": 1534605399, "post_id": 51910006, "comment_id": 90770117, "body": "Note that function in Haskell are pure, so just &quot;apply&quot; the function on a list would do nothing. I&#39;m not sure what you want to do."}, {"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 0, "creation_date": 1534605444, "post_id": 51910006, "comment_id": 90770125, "body": "Did you know about lambda function in Haskell?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1534605638, "post_id": 51910006, "comment_id": 90770170, "body": "Haskell is a functional language so there is not much <i>doing</i> things, it is more <i>defining</i> things. If the function is a monad (for example a state or <code>IO</code> monad), then <code>mapM</code> is probably the closest to that."}, {"owner": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "edited": false, "score": 0, "creation_date": 1534605733, "post_id": 51910006, "comment_id": 90770194, "body": "Im trying to use resolve_on function on every element in c1, so like c1 = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;] I want to do resolve_on &quot;a&quot; c1 c2, resolve_on &quot;b&quot; c1 c2 and resolve_on &quot;c&quot; c1 c2 by using map function. (map resolve_on c1? )"}], "answers": [{"comments": [{"owner": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "edited": false, "score": 0, "creation_date": 1534606550, "post_id": 51910067, "comment_id": 90770417, "body": "Hi I want to ask what does this &quot;|&quot; notation mean here, does it signal the start of the for loop (c&lt;-c1)?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "edited": false, "score": 1, "creation_date": 1534606710, "post_id": 51910067, "comment_id": 90770456, "body": "see <a href=\"https://wiki.haskell.org/Keywords#.7C\" rel=\"nofollow noreferrer\">wiki.haskell.org/Keywords#.7C</a>. I&#39;ve also edited the answer."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "edited": false, "score": 0, "creation_date": 1534607213, "post_id": 51910067, "comment_id": 90770580, "body": "you&#39;re welcome. :) I believe it is easier to grasp new things when seeing several ways of doing the same thing, at once, including pseudocode."}, {"owner": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "edited": false, "score": 0, "creation_date": 1534608641, "post_id": 51910067, "comment_id": 90771014, "body": "Hi, one more question, is it possible to add a condition directly inside , like  [ if c <code>elem</code> c2 then resolve_on c c1 c2 | c &lt;- c1 ]?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "edited": false, "score": 1, "creation_date": 1534609418, "post_id": 51910067, "comment_id": 90771232, "body": "yes (you should really look up &quot;list comprehension&quot; to get the full picture, but you could also browse the page I linked, e.g. <a href=\"https://wiki.haskell.org/Keywords#.2C\" rel=\"nofollow noreferrer\">see this</a>): <code>[ resolve_on c c1 c2 | c &lt;- c1, elem c c2 ]</code>. Any Boolean value serves as a filter: the element <code>c</code> is skipped if the expression has the value <code>False</code>."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 5, "last_activity_date": 1534607057, "last_edit_date": 1534607057, "creation_date": 1534605760, "answer_id": 51910067, "question_id": 51910006, "link": "https://stackoverflow.com/questions/51910006/how-to-apply-function-to-every-element-in-a-list-in-haskell/51910067#51910067", "title": "how to apply function to every element in a list in Haskell?", "body": "<p>When in doubt, start with list comprehensions:</p>\n\n<pre><code>-- for (Char c) in c1:                     do { c &lt;- c1\n--   yield (resolve_on c c1 c2)               ; return (resolve_on c c1 c2) }\n\nresolvents c1 c2 = [ resolve_on c c1 c2 | c &lt;- c1 ]\n\n    -- read it:    a list of\n    --              (resolve_on c c1 c2)\n    --                                  for        -- or: for every\n    --                                    c\n    --                                      in c1\n</code></pre>\n\n<p>This is indeed a <code>map</code>,</p>\n\n<pre><code>                 = map (\\c -&gt; resolve_on c c1 c2) c1\n</code></pre>\n\n<p>This uses a <em>lambda</em> (i.e., unnamed) <em>function</em>, receiving one argument named <code>c</code>.</p>\n\n<p>The <code>do</code> code in the comments would also work. It is in <code>do</code> notation, and is equivalent to the list comprehension.</p>\n"}], "owner": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2124, "favorite_count": 0, "accepted_answer_id": 51910067, "answer_count": 1, "score": 0, "last_activity_date": 1534614649, "creation_date": 1534605279, "last_edit_date": 1534614649, "question_id": 51910006, "link": "https://stackoverflow.com/questions/51910006/how-to-apply-function-to-every-element-in-a-list-in-haskell", "title": "how to apply function to every element in a list in Haskell?", "body": "<p>I want to apply resolve_on to every element in list c1, like</p>\n\n<pre><code>for(Char c:c1){\nresolve_on c c1 c2;}\n</code></pre>\n\n<p>So how can I do this using map function?</p>\n\n<pre><code>resolvents :: [Char] -&gt; [Char] -&gt; [[Char]]\nresolvents c1 c2 =  map (//what should I do) c1\n\nresolve_on :: Char -&gt; [Char] -&gt; [Char] -&gt; [Char]\nresolve_on c c1 c2\n</code></pre>\n"}, {"tags": ["haskell", "scotty"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1534596355, "post_id": 51908524, "comment_id": 90767739, "body": "Haskell threads are very cheap, since the runtime can run many of them on a single OS thread. They are indeed green threads. Often, making threads block is the simplest and most efficient choice -- the runtime is going to reuse the OS thread for other green threads, anyway, so nothing is lost. Synchronize green threads using <code>MVar</code>s or <code>TVar</code>s (or any other concurrency primitive), as you did above, and don&#39;t be afraid to call <code>forkIO</code> many times (even for short tasks) if you need more concurrency."}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534596616, "post_id": 51908524, "comment_id": 90767820, "body": "So you said that for instance in my Http server implementation when I receive a request is not running in OS but in a green thread so the program can continue receiving request?. if that&#39;s so, is doing that automatically."}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534596701, "post_id": 51908524, "comment_id": 90767843, "body": "Because here in my example the OS thread is the one that is creating the green thread and blocking until the green thread finish"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534598666, "post_id": 51908524, "comment_id": 90768345, "body": "In the code above there&#39;s too much synchronization. One new thread is spawned, and the original thread immediately waits for it to complete (<code>takeMVar</code>). That&#39;s pointless, as it is. It could be useful, instead, if the original thread did something after the <code>forkIO</code> and before the <code>takeMVar</code>."}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534599953, "post_id": 51908524, "comment_id": 90768668, "body": "No, the idea was to free the OS thread to be able to process new request, and leave the green thread to persist/read database"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534600627, "post_id": 51908524, "comment_id": 90768826, "body": "I&#39;m not familiar with Scotty, but that might have already started a Haskell thread for you. If so, you can write synchronous code in your handler, since it is being already run in its own thread. To test this hypothesis, add some delay/debug prints, and access your server from two windows at the same time -- they should be processed in parallel."}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534602967, "post_id": 51908524, "comment_id": 90769463, "body": "Ok I will try that. Now I want to rephrase my question. How can Haskell from a OS thread create a green thread and don\u2019t be blocked waiting for that thread to be finish."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534606591, "post_id": 51908524, "comment_id": 90770424, "body": "The RTS does not really perform blocking system calls -- it uses something like select/poll in POSIX systems to wait for IO and dispatch it to waiting threads. Further, it performs &quot;context switches&quot; between green threads every N ms or so."}], "answers": [{"comments": [{"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1534615740, "post_id": 51911057, "comment_id": 90772764, "body": "Thank you so much for such a great explanation about how Haskell take care of the OS threads and we run only green threads!. Regarding the use of ForkIO in Scotty is just because I&#39;m learning async programing"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 4, "last_activity_date": 1534613207, "creation_date": 1534613207, "answer_id": 51911057, "question_id": 51908524, "link": "https://stackoverflow.com/questions/51908524/blocking-threads-in-haskell/51911057#51911057", "title": "Blocking Threads in Haskell", "body": "<p>Okay, there's a lot to unpack here.  First, let's discuss your specific code example.  The correct way to write your <code>responseUsers</code> handler for Scotty is:</p>\n\n<pre><code>responseUsers :: ActionM ()\nresponseUsers = do\n  users &lt;- getAllUsers\n  json (show users)\n</code></pre>\n\n<p>Even if <code>getAllUsers</code> takes a day and a half to run and a hundred clients are all making <code>getAllUsers</code> requests at once, nothing else will block, and your Scotty server will continue handling requests.  To see this, consider the following server:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nimport Web.Scotty\nimport Control.Concurrent\nimport Control.Monad.IO.Class\nimport qualified Data.Text.Lazy as T\n\nmain = scotty 8080 $ do\n  get \"/fast\" $ html \"&lt;h1&gt;Fast Response&lt;/h1&gt;&lt;p&gt;I'm ready!\"\n  get \"/slow\" $ liftIO (threadDelay 30000000) &gt;&gt; html \"&lt;h1&gt;Slow&lt;/h1&gt;&lt;p&gt;Whew, finally!\"\n  get \"/pure\" $ html $ \"&lt;h1&gt;Answer&lt;/h1&gt;&lt;p&gt;The answer is \" \n                &lt;&gt; (T.pack . show . sum $ [1..1000000000])\n</code></pre>\n\n<p>If you compile this and start it up, you can open multiple browser tabs to:</p>\n\n<pre><code>http://localhost:8080/slow\nhttp://localhost:8080/pure\nhttp://localhost:8080/fast\n</code></pre>\n\n<p>and you'll see that the <code>fast</code> link returns immediately, even while the <code>slow</code> and <code>pure</code> links are blocked on an IO and pure computation respectively.  (There's nothing special about <code>threadDelay</code> -- it could have been any IO action, like accessing a database or reading a big file or proxying to another HTTP server or whatever.)  You can keep launching multiple additional requests for <code>fast</code>, <code>slow</code>, and <code>pure</code>, and the slow ones will chug away in the background while the server continues to accept more requests.  (The <code>pure</code> computation is a little different than the <code>slow</code> computation -- it will only block the first time around, all threads waiting on it will return an answer at once, and subsequent requests will be fast.  If we tricked Haskell into recomputing it for every request, or if it actually depended on some information supplied in the request as might be the case in a more realistic server, it would act more or less like the <code>slow</code> computation, though.)</p>\n\n<p>You don't need any kind of callback here, and you don't need the main thread to \"wait\" on the result.  The threads that are forked by Scotty to handle each request can perform whatever computation or IO activity is needed and then return the response to the client directly, without affecting any other threads.</p>\n\n<p>What's more, unless you compiled this server with <code>-threaded</code> and provide a thread count >1 either at compile or run time, <strong>it only runs in one OS thread.</strong>  So, by default, it's doing all this in a single OS thread automatically!</p>\n\n<p>Second, this isn't actually anything special about Scotty.  You should think of the Haskell runtime as providing a threaded abstraction layer on top of the OS thread mechanism, and the OS threads are an implementation detail that you don't have to worry about (well, except in unusual situations, like if you're interfacing with an external library that requires certain things to happen in certain OS threads).</p>\n\n<p>So, all Haskell threads, even the \"main\" thread, are green, and are run on top of a sort of virtual machine that will run just fine on top of a single OS thread, no matter how many green threads block for whatever reason.</p>\n\n<p>Therefore, a typical pattern for writing an asynchronous request handler is:</p>\n\n<pre><code>loop :: IO ()\nloop = do\n  req &lt;- getRequest\n  forkIO $ handleRequest req\n  loop\n</code></pre>\n\n<p>Note that there's no callback needed here.  The <code>handleRequest</code> function runs in a separate green thread for each request that can perform long-running pure CPU-bound computations, blocking IO operations, and whatever else is needed, and the handling thread doesn't need to communicate the result back to the main thread in order to finally service the request.  It can just communicate the result to the client directly.</p>\n\n<p>Scotty is basically built around this pattern, so it automatically dispatches multiple requests without requiring callbacks or blocking OS threads.</p>\n"}], "owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 1, "accepted_answer_id": 51911057, "answer_count": 1, "score": 0, "last_activity_date": 1534613207, "creation_date": 1534594293, "last_edit_date": 1534612393, "question_id": 51908524, "link": "https://stackoverflow.com/questions/51908524/blocking-threads-in-haskell", "title": "Blocking Threads in Haskell", "body": "<p>I'm start coding async with Haskell, and for now I'm using <code>forkIO</code> which create a green thread(It's that correct? is a green thread?) and then I'm using a <code>MVar</code> to communicate from the new thread to the main thread once I finish and I have the value. Here my code:</p>\n\n<pre><code>responseUsers :: ActionM ()\nresponseUsers = do emptyVar &lt;- liftAndCatchIO $newEmptyMVar\n                   liftAndCatchIO $ forkIO $ do\n                                             users &lt;- getAllUsers\n                                             putMVar emptyVar users\n                   users &lt;- liftAndCatchIO $ takeMVar emptyVar\n                   json (show users) \n</code></pre>\n\n<p>After read <code>MVar</code> class I can see is a block thread class where if the MVar is empty block the thread until is filled.</p>\n\n<p>I'm coming from <code>Scala</code> where in other do avoid block we have the concept of callbacks in the Future object, where thread <code>A</code> can create a Thread <code>B</code> and receive a <code>Future</code>.</p>\n\n<p>Then subscribe in a callback function <code>onComplete</code> which it will be invoked once the thread <code>B</code> has finish with the value.</p>\n\n<p>But during that time, thread <code>A</code> is not blocked and can be reused for another operations.</p>\n\n<p>For instance in our Http server framework like <code>Vertx</code> or <code>Grizzly</code> normally is configure to have small number of OS threads(4-8) since they should never be blocked.</p>\n\n<p>Dont we have another pure no blocking mechanism in Haskell?</p>\n\n<p>Regards</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1534605051, "post_id": 51908232, "comment_id": 90770033, "body": "your type is isomorphic to the regular cons list. with it your function is actually <code>nthFromEnd</code>. Maintaining your list&#39;s length together with the list will make it trivial to implement. Otherwise, just take the nth element from the reversed list, or do the equivalent computation with <code>foldr</code>, fusing the reversing and the length measuring (not unlike the code in the answer). As for the <i>O(1)</i> appending, you could e.g. use <a href=\"https://stackoverflow.com/questions/43941551/explicit-purely-functional-data-structure-for-difference-lists/43945275#43945275\">a different data type</a> to represent the lists."}, {"owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1534609139, "post_id": 51908232, "comment_id": 90771165, "body": "Thank you Will Ness, I never thought about applying foldr either. Great suggestions."}], "answers": [{"comments": [{"owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "edited": false, "score": 1, "creation_date": 1534596905, "post_id": 51908602, "comment_id": 90767905, "body": "Willem Van Onsem, you are not only generous but extremely clear when it comes to sharing your knowledge. Thank you for your detailed answer and many solutions to this particular problem. I&#39;m currently studying your solutions to understand the thought process more clearly. It&#39;s so well explained. Thanks a lot, mate!"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1534594856, "creation_date": 1534594856, "answer_id": 51908602, "question_id": 51908232, "link": "https://stackoverflow.com/questions/51908232/haskell-obtaining-the-nth-element-in-a-snoc-list/51908602#51908602", "title": "Haskell: Obtaining the Nth element in a Snoc list", "body": "<p>We can use a \"<em>try-and-error</em>\" approach where we first try to find that element in the \"prefix list\", and if that is not sufficient (since the index is larger), we then try the current element. If that still is not enough, it is up to the \"parent call\" to handle the situation. We can do this by first defining a function with a slightly different output type:</p>\n\n<pre><code>nthShelp :: Int -&gt; ListS a -&gt; <b>Either a Int</b></code></pre>\n\n<p>So it returns <code>Left x</code> in case it has found the element (<code>x</code> being the element), or <code>Right</code>n<code>, with</code>n` the \"remaining\" elements it needs to walk through.</p>\n\n<p>So we can define this with:</p>\n\n<pre><code>nthShelp :: Int -&gt; ListS a -&gt; Either a Int\nnthShelp n NilS = Right n\nnthShelp n (Snoc hs t) = progress nhs\n    where nhs = nthElementS n hs\n          progress lx@(Left _) = lx\n          progress (Right 0) = Left t\n          progress (Right n) = Right (n-1)</code></pre>\n\n<p>So we first call recursively on the head of the list, and then the recursive calls are resolved by decrementing the index until it hits zero, in which case we return the corresponding <code>Left t</code>, and that <code>Left t</code> is than passed back out of the recursive calls.</p>\n\n<p>We can make use of the fact that <code>Either a</code> is a <code>Monad</code> istance, and write this more effective like:</p>\n\n<pre><code>nthShelp :: Int -&gt; ListS a -&gt; Either a Int\nnthShelp n NilS = Right n\nnthShelp n (Snoc hs t) = nthElementS n hs >>= progress\n    where progress 0 = Left t\n          progress n = Right (n-1)</code></pre>\n\n<p>Then we can write <code>nthElementS</code> in terms of <code>nthShelp</code> with:</p>\n\n<pre><code>nthElementS :: Int -&gt; ListS a -&gt; a\nnthElementS n l | n &lt; 0 = error \"Index too small\"\n                | Left a &lt;- nthShelp n l = a\n                | otherwise = error \"Index too large\"\n</code></pre>\n\n<p>In terms of time complexity, it is still <em>O(n)</em> (with <em>n</em> the <em>length</em> of the list, not the index we want to obtain). There is no way to do it better with this data structure, since we need to know the number of elements in the prefix, before we know what element to return.</p>\n\n<blockquote>\n  <p>As an additional inquiry: What would be the best way to implement a function that concatenates 2 Cons lists? I am already thinking of a solution but it would require an auxiliary function to keep track of the Nth position, and again, I feel that's not going to make full use of Haskell's advantages over other languages.</p>\n</blockquote>\n\n<p>Well you can see a concatenation here as replacing the (usally deeply) nested <code>NlS</code> of the <em>second</em> list, by the first list. So if we concatenate <code>concatS l1 NilS</code>, then it is <code>l1</code>, if we concatenate <code>concatS l1 (Snoc NilS x)</code>, then it is <code>Snic l1 x)</code>. So we can define this recursively as:</p>\n\n<pre><code>concatS :: ListS a -&gt; ListS a -&gt; ListS a\nconcatS l1 NilS = l1\nconcatS l1 (Snoc l2 x) = Snoc (concatS l1 l2) x\n</code></pre>\n\n<p>A disadvantage of the above approach is that it still will work in <em>O(n)</em> if the first list is <code>NilS</code> (so empty). We can add a guard for this, to handle that case:</p>\n\n<pre><code>concatS :: ListS a -&gt; ListS a -&gt; ListS a\nconcatS NilS = id\nconcatS l1 = go\n    where go NilS = l1\n          go (Snoc l2 x) = Snoc (go l2) x\n</code></pre>\n"}], "owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 583, "favorite_count": 1, "accepted_answer_id": 51908602, "answer_count": 1, "score": 3, "last_activity_date": 1534609057, "creation_date": 1534592312, "last_edit_date": 1534609057, "question_id": 51908232, "link": "https://stackoverflow.com/questions/51908232/haskell-obtaining-the-nth-element-in-a-snoc-list", "title": "Haskell: Obtaining the Nth element in a Snoc list", "body": "<p>I wrote the following function to find the Nth element on a given Snoc list (reverse cons) but I think it's not the most optimal solution to the problem. I was wondering if you would please share some insights, code or advice to see a different solution; one that you might consider does the job more efficiently:</p>\n\n<p>Here's my function:</p>\n\n<pre><code>data ListS a = NilS \n              |Snoc (ListS a) a deriving Show\n\nlen :: ListS a -&gt; Int\nlen NilS       = 0\nlen (Snoc a b) = 1 + len(a) \n\nnthElementS :: Int -&gt; ListS a -&gt; a\nnthElementS _ NilS = error \"Empty List\"\nnthElementS n s    = if n &lt; 0 || n &gt;= len(s) then error \"Invalid Index\" \n                     else nthAux ((len(s)-1)-n) s where\n                          nthAux 0 (Snoc a b) = b\n                          nthAux m (Snoc a b) = nthAux (m-1) a\n</code></pre>\n\n<p>Some examples:</p>\n\n<pre><code>Main&gt; nthElementS 0 (Snoc (Snoc (Snoc (Snoc (Snoc NilS 1) 2) 3) 4) 5)\n1\n\nMain&gt; nthElementS 2 (Snoc (Snoc (Snoc (Snoc (Snoc NilS 1) 2) 3) 4) 5) \n3\n</code></pre>\n\n<p>As an additional inquiry: What would be the best way to implement a function that concatenates 2 Snoc lists? I am already thinking of a solution but it would require an auxiliary function to keep track of the Nth position, and again, I feel that's not going to make full use of Haskell's advantages over other languages.</p>\n\n<p>Thanks in advance.</p>\n"}, {"tags": ["haskell", "monads", "monad-transformers", "io-monad"], "comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1534585611, "post_id": 51906879, "comment_id": 90764956, "body": "<code>liftIO a = do { b &lt;- liftIO a; ...</code> &lt;- here you call <code>liftIO</code> recursively for argument itself. Hence the infinite loop."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534585734, "post_id": 51906879, "comment_id": 90764976, "body": "I don&#39;t think <code>MonadIO</code> works like you think it works. Look at <a href=\"https://hackage.haskell.org/package/transformers-0.3.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" rel=\"nofollow noreferrer\">all defined instances</a> of <code>MonadIO</code>. See the pattern? All the instances apart from <code>IO</code> itself are transformers, and in order to be a <code>MonadIO</code> they need to transform a <code>MonadIO</code>. IOW if you want your monad to be a <code>MonadIO</code>, it needs to contain an actual <code>IO a</code> value somewhere inside, directly or indirectly. Otherwise you cannot lift from <code>IO a</code> to <code>Logger a</code>, because you can never escape the <code>IO</code>."}, {"owner": {"reputation": 704, "user_id": 962242, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9d9a6af953fc82d6eda347af3296f4a3?s=128&d=identicon&r=PG", "display_name": "DBS", "link": "https://stackoverflow.com/users/962242/dbs"}, "edited": false, "score": 0, "creation_date": 1534587729, "post_id": 51906879, "comment_id": 90765405, "body": "But what if I want to convert from one monad type to another ? This will help me in chaining from one monad to another to create a flow ?"}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 4, "creation_date": 1534590700, "post_id": 51906879, "comment_id": 90766154, "body": "Your <code>Logger</code> monad is identical to the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Functor-Identity.html#t:Identity\" rel=\"nofollow noreferrer\"><code>Identity</code></a> monad. Since <code>Identity</code> doesn&#39;t have a <code>MonadIO</code> instance, neither can your <code>Logger</code>. However, there is a <code>MonadIO</code> instance for <a href=\"https://hackage.haskell.org/package/transformers-0.3.0.0/docs/Control-Monad-Trans-Identity.html#t:IdentityT\" rel=\"nofollow noreferrer\"><code>IdentityT</code></a>."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1534591452, "post_id": 51906879, "comment_id": 90766354, "body": "You need to start by deciding what Logger is going to do that IO doesn&#39;t already do. For instance, should it carry a file handle for the log file? Once you know that the design will start to become clearer."}, {"owner": {"reputation": 704, "user_id": 962242, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9d9a6af953fc82d6eda347af3296f4a3?s=128&d=identicon&r=PG", "display_name": "DBS", "link": "https://stackoverflow.com/users/962242/dbs"}, "edited": false, "score": 0, "creation_date": 1534597370, "post_id": 51906879, "comment_id": 90768036, "body": "With liftIO :: IO a -&gt; m a, I should be able to pass any IO monad and convert to another monad type &#39;m&#39; right ?"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1534622198, "post_id": 51906879, "comment_id": 90774254, "body": "No, not in general.  The signature is actually <code>liftIO :: MonadIO m =&gt; IO a -&gt; m a</code>, and the <code>MonadIO m</code> bit isn&#39;t just a trivial constraint.  If a monad <code>m</code> has a <code>liftIO</code> instance, that&#39;s an indication that it <b>already has IO functionality</b>, either because it <b>is</b> the IO monad or because it&#39;s part of a monad stack with <code>IO</code> at its base.  Your <code>Logger</code> monad can&#39;t have a <code>liftIO</code> instance (except one that&#39;s either unsafe or doesn&#39;t terminate) because your <code>Logger</code> monad has no existing IO functionality."}], "answers": [{"comments": [{"owner": {"reputation": 704, "user_id": 962242, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9d9a6af953fc82d6eda347af3296f4a3?s=128&d=identicon&r=PG", "display_name": "DBS", "link": "https://stackoverflow.com/users/962242/dbs"}, "edited": false, "score": 0, "creation_date": 1534737330, "post_id": 51912673, "comment_id": 90797400, "body": "Thanks @K. A. Buhr I will try out the suggestions you mentioned and update here"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 2, "last_activity_date": 1534627579, "creation_date": 1534627579, "answer_id": 51912673, "question_id": 51906879, "link": "https://stackoverflow.com/questions/51906879/monad-and-monadio-for-custom-type/51912673#51912673", "title": "Monad and MonadIO for custom type", "body": "<p>As noted in the comments, I think you've misunderstood what <code>MonadIO</code> and <code>liftIO</code> do.</p>\n\n<p>These typeclasses and functions come from <code>mtl</code> library.  Rather unfortunately, <code>mtl</code> stands for \"monad transformer library\", but <a href=\"https://blog.jle.im/entry/mtl-is-not-a-monad-transformer-library.html\" rel=\"nofollow noreferrer\">mtl is not a monad transformer library</a>.  Rather, <code>mtl</code> is a set of typeclasses that allow you to take a monad that --- and this is important --- <strong>already has a particular type of functionality</strong> and provide that monad with a consistent interface around that functionality.  This ends up being really useful for working with actual monad transformers.  That's because <code>mtl</code> allows you to use <code>tell</code> and <code>ask</code> and <code>put</code> to access the <code>Writer</code>, <code>Reader</code>, and <code>State</code> functionality of your monad transformer stack in a consistent way.</p>\n\n<p>Separately from this transformer business, if you already have a custom monad, say that supports arbitrary IO and has <code>State</code> functionality, then you can define a <code>MonadState</code> instance to make the standard state operations (<code>state</code>, <code>get</code>, <code>gets</code>, <code>put</code>, <code>modify</code>) available for your custom monad, and you can define a <code>MonadIO</code> instance to allow an arbitrary IO action to be executed in your custom monad using <code>liftIO</code>.  However, none of these typeclasses are capable of adding functionality to a monad that it doesn't already have.  In particular, you can't transform an arbitrary monadic action <code>m a</code> into an <code>IO a</code> using a <code>MonadIO</code> instance.</p>\n\n<p>Note that the <code>transformers</code> package contains types that <strong>are</strong> capable of adding functionality to a monad that it doesn't already have (e.g., adding reader or writer functionality), but there is no transformer to add <code>IO</code> to an arbitrary monad.  Such a transformer would be impossible (without unsafe or nonterminating operations).</p>\n\n<p>Also note that the signature for <code>liftIO :: MonadIO m =&gt; IO a -&gt; m a</code> puts a <code>MonadIO</code> constraint on <code>m</code>, and this isn't just a trivial constraint.  It actually indicates that <code>liftIO</code> only works for monads <code>m</code> that <strong>already have IO functionality</strong>, so either <code>m</code> <em>is</em> the IO monad, or it's a monad stack with <code>IO</code> at its base.  Your <code>Logger</code> example doesn't have IO functionality and so can't have a (sensible) <code>MonadIO</code> instance.</p>\n\n<p>Getting back to your specific problem, it's actually a little bit hard to steer you right here without knowing exactly what you're trying to do.  If you just want to add file-based logging to an existing IO computation, then defining a new transformer stack will probably do the trick:</p>\n\n<pre><code>type LogIO = ReaderT Handle IO\n\nlogger :: (Show a) =&gt; a -&gt; LogIO ()\nlogger a = do\n  h &lt;- ask\n  liftIO $ hPrint h a\n\nrunLogIO :: LogIO a -&gt; FilePath -&gt; IO a\nrunLogIO act fp = withFile fp AppendMode $ \\h -&gt; runReaderT act h\n</code></pre>\n\n<p>and you can write things like:</p>\n\n<pre><code>main :: IO ()\nmain = runLogIO start \"test.log\"\n\nstart :: LogIO ()\nstart = do\n  logger \"Starting program\"\n  liftIO . putStrLn $ \"Please enter your name:\"\n  n &lt;- liftIO $ getLine\n  logger n\n  liftIO . putStrLn $ \"Hello, \" ++ n\n  logger \"Ending program\"\n</code></pre>\n\n<p>The need to add <code>liftIO</code> calls when using IO actions within the <code>LogIO</code> monad is ugly but largely unavoidable.    </p>\n\n<p>This solution would also work for adding file-based logging to pure computations, with the understanding that you have to convert them to IO computations anyway if you want to safely log to a file.</p>\n\n<p>The more general solution is to define your own monad <em>transformer</em> (not merely your own monad), like <code>LoggerT m</code>, together with an associated <code>MonadLogger</code> type class that will add file-based logging to to any IO-capable monad stack.  The idea would be that you could then create arbitrary custom monad stacks:</p>\n\n<pre><code>type MyMonad = StateT Int (LoggerT IO)\n</code></pre>\n\n<p>and then write code that mixes monadic computations from different layers (like mixing state computations and file-based logging):</p>\n\n<pre><code>newSym :: String -&gt; MyMonad String\nnewSym pfx = do\n  n &lt;- get\n  logger (pfx, n)\n  put (n+1)\n  return $ pfx ++ show n\n</code></pre>\n\n<p>Is this what you what you're trying to do?  If not, maybe you could describe, either here or in a new question, how you're trying to add logging to some example code.</p>\n"}], "owner": {"reputation": 704, "user_id": 962242, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9d9a6af953fc82d6eda347af3296f4a3?s=128&d=identicon&r=PG", "display_name": "DBS", "link": "https://stackoverflow.com/users/962242/dbs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 518, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1534627579, "creation_date": 1534582000, "last_edit_date": 1534583776, "question_id": 51906879, "link": "https://stackoverflow.com/questions/51906879/monad-and-monadio-for-custom-type", "title": "Monad and MonadIO for custom type", "body": "<p>I have a Logger type of kind <code>* -&gt; *</code> which can take any type and log the value in a file. I am trying to implement this in a monadic way so that I log and keep working the same. My code looks like </p>\n\n<pre><code>import Control.Applicative\nimport Control.Monad\nimport System.IO\nimport Control.Monad.IO.Class\n\ninstance Functor Logger where\n  fmap = liftM\n\ninstance Applicative Logger where\n  pure = return\n  (&lt;*&gt;) = ap\n\nnewtype Logger a = Logger a deriving (Show)\n\ninstance Monad (Logger) where\n  return  = Logger\n  Logger logStr &gt;&gt;= f = f logStr\n\ninstance MonadIO (Logger) where\n  liftIO a = do\n    b &lt;- liftIO a\n    return b\n\n\nlogContent :: (Show a) =&gt; a -&gt; Logger a\nlogContent a = do\n  b  &lt;- liftIO $ logContent2 a\n  return b\n\n\nlogContent2 :: (Show a) =&gt; a -&gt; IO a\nlogContent2 a = do\n    fHandle &lt;- openFile \"test.log\" AppendMode\n    hPrint fHandle a\n    hClose fHandle\n    return (a)\n</code></pre>\n\n<p>The liftIO function goes on endless loop as it calls itself. I am not able to do b &lt;- a either. Can someone help on getting MonadIO implementation right ?</p>\n"}, {"tags": ["haskell", "haskell-lens", "aeson"], "answers": [{"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1534582625, "post_id": 51906913, "comment_id": 90764208, "body": "Also, here&#39;s a Git repo with some lens-aeson examples: <a href=\"https://github.com/danidiaz/lens-aeson-examples\" rel=\"nofollow noreferrer\">github.com/danidiaz/lens-aeson-examples</a>"}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 1, "last_activity_date": 1534582818, "last_edit_date": 1534582818, "creation_date": 1534582303, "answer_id": 51906913, "question_id": 51906616, "link": "https://stackoverflow.com/questions/51906616/folding-or-concatmap-ing-an-aeson-array-via-lenses/51906913#51906913", "title": "Folding or concatMap-ing an Aeson Array via lenses", "body": "<p>There are two lens functions that are used to \"lift\" regular <code>Foldable</code>-related functions to the lensy world:</p>\n\n<ul>\n<li><a href=\"http://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Fold.html#v:folded\" rel=\"nofollow noreferrer\"><code>folded</code></a> that folds over all the elements of a <code>Foldable</code> container, in this case it would be the <code>Vector</code>.</li>\n<li><a href=\"http://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Fold.html#v:folding\" rel=\"nofollow noreferrer\"><code>folding</code></a> that lifts a function that returns a <code>Foldable</code> result.</li>\n</ul>\n\n<p>You can compose them into a new <code>Fold</code> and then use <a href=\"http://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Fold.html#v:toListOf\" rel=\"nofollow noreferrer\"><code>toListOf</code></a> to obtain the final list.</p>\n\n<p>There is also an analogue of <code>folded</code> for <code>Traversable</code>, called <a href=\"http://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Traversal.html#v:traversed\" rel=\"nofollow noreferrer\"><code>traversed</code></a>.</p>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1534582818, "creation_date": 1534579758, "question_id": 51906616, "link": "https://stackoverflow.com/questions/51906616/folding-or-concatmap-ing-an-aeson-array-via-lenses", "title": "Folding or concatMap-ing an Aeson Array via lenses", "body": "<p>I've been starting at <a href=\"https://www.stackage.org/haddock/lts-12.1/lens-aeson-1.0.2/Data-Aeson-Lens.html\" rel=\"nofollow noreferrer\">https://www.stackage.org/haddock/lts-12.1/lens-aeson-1.0.2/Data-Aeson-Lens.html</a> and <a href=\"https://www.stackage.org/haddock/lts-12.1/lens-4.16.1/Control-Lens-Fold.html\" rel=\"nofollow noreferrer\">https://www.stackage.org/haddock/lts-12.1/lens-4.16.1/Control-Lens-Fold.html</a> trying to figure out how to write an expression that allows me to construct something of the following type:</p>\n\n<pre><code>import Data.Aeson as A\n\nfunctionIWant \n  :: (Vector A.Value)\n  -&gt; (A.Value -&gt; [a])\n  -&gt; [a]\n</code></pre>\n"}, {"tags": ["haskell", "types", "max", "typeclass"], "answers": [{"comments": [{"owner": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "edited": false, "score": 1, "creation_date": 1534588481, "post_id": 51906731, "comment_id": 90765584, "body": "Thanks a lot! I will try your solution. I just figured out another way to do it. by changing my base case to mymaximum (ListNode x ListEnd) = x and add Ord a to type signiture work as well."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "edited": false, "score": 2, "creation_date": 1534601663, "post_id": 51906731, "comment_id": 90769116, "body": "great! indeed, using <code>0</code> was incorrect. On the other hand this means that your function needs to specify separately what to do when it receives <code>ListEnd</code> (i.e., an empty list) as an argument. Erroring out with a specific error message is one possibility. Another is changing the output type to <code>Maybe a</code> and returning <code>Nothing</code> in the empty list case."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 4, "last_activity_date": 1534602633, "last_edit_date": 1534602633, "creation_date": 1534580755, "answer_id": 51906731, "question_id": 51906593, "link": "https://stackoverflow.com/questions/51906593/custom-type-define-in-haskell/51906731#51906731", "title": "custom type define in haskell", "body": "<p>First of all, if you try to load the definition as given you get an error message,</p>\n\n<pre><code>....\n No instance for (Num a) arising from the literal `0'\n Possible fix:\n   add (Num a) to the context of\n     the type signature for mymaximum :: List a -&gt; a\n....\n</code></pre>\n\n<p>So this suggests you need to change the type signature to </p>\n\n<pre><code>mymaximum :: (Num a) =&gt; List a -&gt; a\n</code></pre>\n\n<p><em>Now</em> the error message is</p>\n\n<pre><code>....\nCould not deduce (Ord a) arising from a use of `&gt;'\nfrom the context (Num a)\n  bound by the type signature for mymaximum :: Num a =&gt; List a -&gt; a\n  at &lt;interactive&gt;:59:14-35\nPossible fix:\n  add (Ord a) to the context of\n    the type signature for mymaximum :: Num a =&gt; List a -&gt; a\n....\n</code></pre>\n\n<p>and just the same, we change the type signature to</p>\n\n<pre><code>mymaximum :: (Num a, Ord a) =&gt; List a -&gt; a\n</code></pre>\n\n<p>and now GHCi responds:</p>\n\n<pre><code>mymaximum :: (Num a, Ord a) =&gt; List a -&gt; a\n</code></pre>\n\n<p>Meaning, it accepted the definition with its type signature.</p>\n\n<p>Now this fucntion will work with all types that implement both <code>Num</code> and <code>Ord</code> typeclasses. </p>\n\n<p><code>Int</code> is one, <code>Float</code> is another. <code>Char</code> is not. But if you <code>import Data.Char</code>, you can use the functions</p>\n\n<pre><code>chr :: Int -&gt; Char\n\nord :: Char -&gt; Int\n</code></pre>\n\n<p>to get around this, by mapping <code>ord</code> over your <code>List Char</code> value (you'll have to also define your own <code>map</code> function for that ... perhaps), finding your maximum, then working backwards with <code>chr</code> to recover the character.</p>\n\n<p><em>update:</em> as you've noticed, special casing <code>0</code> as the maximum value of an empty list is <em>not</em> The Right Thing to do. Making a one-element list to be your base case is a good solution for that. Now the <code>Num a</code> constraint can be removed and the function will work as is for <code>List Char</code> arguments as well, or any <code>Ord a =&gt; List a</code> type of value, producing an <code>Ord a =&gt; a</code> type of value as a result.</p>\n\n<p>One caveat though: you still need to handle the empty list case, perhaps by calling <code>error</code> with a specific error message, like</p>\n\n<pre><code>mymaximum ListEnd = error \" mymaximum: empty list is not allowed! \"\n</code></pre>\n"}], "owner": {"reputation": 139, "user_id": 8557226, "user_type": "registered", "accept_rate": 17, "profile_image": "https://graph.facebook.com/1401688323279401/picture?type=large", "display_name": "Vincent Zhou", "link": "https://stackoverflow.com/users/8557226/vincent-zhou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 253, "favorite_count": 0, "accepted_answer_id": 51906731, "answer_count": 1, "score": 1, "last_activity_date": 1534619712, "creation_date": 1534579598, "last_edit_date": 1534619712, "question_id": 51906593, "link": "https://stackoverflow.com/questions/51906593/custom-type-define-in-haskell", "title": "custom type define in haskell", "body": "<p>Im new to haskell, I defined a custom list type.But when I try to define this function mymaximum. I notice that it only works if a is of type Num. what should I change if I want it to work with all types, for example Char?</p>\n\n<pre><code>data List a = ListNode a (List a) | ListEnd\n\nmymaximum::List a -&gt; a\nmymaximum ListEnd = 0\nmymaximum (ListNode x xs) \n    |  x &gt; maxxs = x\n    | otherwise = maxxs\n    where maxxs = mymaximum xs\n</code></pre>\n"}, {"tags": ["haskell", "let", "rank-n-types"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 3, "creation_date": 1534580762, "post_id": 51906524, "comment_id": 90763790, "body": "Monomorphism restriction strikes again."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534581055, "post_id": 51906524, "comment_id": 90763839, "body": "Yes - enabling <code>-XNoMonomorphismRestriction</code> suddenly makes it work- thank you!"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534581091, "post_id": 51906524, "comment_id": 90763845, "body": "@n.m. - do you want to turn this into an answer?"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534582905, "post_id": 51906524, "comment_id": 90764287, "body": "I have tried..."}], "answers": [{"tags": [], "owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1534582880, "creation_date": 1534582880, "answer_id": 51906985, "question_id": 51906524, "link": "https://stackoverflow.com/questions/51906524/let-doesnt-work-when-used-with-xrankntypes/51906985#51906985", "title": "let doesn&#39;t work when used with -XRankNTypes", "body": "<p>This is the result of the dreaded monomorphism restriction. Enabling <code>XNoMonomorphismRestriction</code> should cause this to compile.</p>\n\n<p><code>a = let x' = x in A x'</code> is <em>not</em> equivalent to <code>a = A x</code>, because under monomorphism restriction <code>x'</code> in <code>let x' = ...</code> is monomorphic, but A requires a polymorphic argument.</p>\n"}], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 51906985, "answer_count": 1, "score": 0, "last_activity_date": 1534582880, "creation_date": 1534579013, "question_id": 51906524, "link": "https://stackoverflow.com/questions/51906524/let-doesnt-work-when-used-with-xrankntypes", "title": "let doesn&#39;t work when used with -XRankNTypes", "body": "<p>Consider the following minimal example:</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n\nmodule Test where\n\nclass C w\n\ndata A = A (forall u. C u =&gt; u)\n\nx :: forall u. C u =&gt; u\nx = undefined\n\na = A x\n</code></pre>\n\n<p>This typechecks fine, as expected. However, if <code>a</code> is refactored to use a <code>let</code> statement:</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n\nmodule Test where\n\nclass C w\n\ndata A = A (forall u. C u =&gt; u)\n\nx :: forall u. C u =&gt; u\nx = undefined\n\na = let x' = x in A x'\n</code></pre>\n\n<p>It suddenly fails to typecheck with the following error:</p>\n\n<pre><code>test.hs:12:14: error:\n    * No instance for (C u0) arising from a use of `x'\n    * In the expression: x\n      In an equation for x': x' = x\n      In the expression: let x' = x in A x'\n   |\n12 | a = let x' = x in A x'\n   |              ^\n\ntest.hs:12:21: error:\n    * Couldn't match expected type `u' with actual type `u0'\n        because type variable `u' would escape its scope\n      This (rigid, skolem) type variable is bound by\n        a type expected by the context:\n          forall u. C u =&gt; u\n        at test.hs:12:19-22\n    * In the first argument of `A', namely x'\n      In the expression: A x'\n      In the expression: let x' = x in A x'\n    * Relevant bindings include x' :: u0 (bound at test.hs:12:9)\n   |\n12 | a = let x' = x in A x'\n</code></pre>\n\n<p>Why is this happening? Doesn't this violate equational reasoning?</p>\n"}, {"tags": ["haskell", "image-processing", "deconvolution"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 6750871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bc5f4ed510d31fd5c98e4dc03a3b7ac?s=128&d=identicon&r=PG&f=1", "display_name": "Khilan Ravani", "link": "https://stackoverflow.com/users/6750871/khilan-ravani"}, "edited": false, "score": 0, "creation_date": 1534578571, "post_id": 51905837, "comment_id": 90763335, "body": "A Buhr. Wow!! You really made my work a lot easier. I don&#39;t know but I referred to many different links and was in a complete mess where to start from. Thanks a tonne!!"}, {"owner": {"reputation": 33, "user_id": 6750871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bc5f4ed510d31fd5c98e4dc03a3b7ac?s=128&d=identicon&r=PG&f=1", "display_name": "Khilan Ravani", "link": "https://stackoverflow.com/users/6750871/khilan-ravani"}, "edited": false, "score": 0, "creation_date": 1534579296, "post_id": 51905837, "comment_id": 90763495, "body": "Also, I need to clarify something. Is it ok if I use this code in my work?"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 33, "user_id": 6750871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bc5f4ed510d31fd5c98e4dc03a3b7ac?s=128&d=identicon&r=PG&f=1", "display_name": "Khilan Ravani", "link": "https://stackoverflow.com/users/6750871/khilan-ravani"}, "edited": false, "score": 0, "creation_date": 1534608237, "post_id": 51905837, "comment_id": 90770898, "body": "Sure, consider it public domain."}, {"owner": {"reputation": 33, "user_id": 6750871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bc5f4ed510d31fd5c98e4dc03a3b7ac?s=128&d=identicon&r=PG&f=1", "display_name": "Khilan Ravani", "link": "https://stackoverflow.com/users/6750871/khilan-ravani"}, "edited": false, "score": 0, "creation_date": 1534609502, "post_id": 51905837, "comment_id": 90771255, "body": "@ A Buhr. Thank u! Also, in case you get some time, please do look up my other question &lt;<a href=\"https://stackoverflow.com/questions/51906824/adding-gaussian-noise-to-images-in-haskell\" title=\"adding gaussian noise to images in haskell\">stackoverflow.com/questions/51906824/&hellip;</a>&gt;."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 1, "last_activity_date": 1534573273, "last_edit_date": 1534573273, "creation_date": 1534572846, "answer_id": 51905837, "question_id": 51905250, "link": "https://stackoverflow.com/questions/51905250/haskell-implementation-of-de-convolution-richardson-lucy/51905837#51905837", "title": "Haskell implementation of De-convolution (Richardson lucy)", "body": "<p>The algorithm is actually pretty straightforward.  Using the notation on the Wikipedia page for <a href=\"https://en.wikipedia.org/wiki/Richardson%E2%80%93Lucy_deconvolution\" rel=\"nofollow noreferrer\">Richardson-Lucy deconvolution</a>, if an underlying image <code>u0</code> was convolved by a kernel <code>p</code> to produce an observed image <code>d</code>, then you can iterate the function:</p>\n\n<pre><code>deconvolve p d u = u * conv (transpose p) (d / conv p u)\n</code></pre>\n\n<p>over <code>u</code> with an initial starting estimate (of <code>d</code>, for example) to get a progressively better estimate of <code>u0</code>.</p>\n\n<p>In HIP, the actual one-step <code>deconvolve</code> function might look like:</p>\n\n<pre><code>deconvolve :: Image VS X Double\n           -&gt; Image VS RGB Double\n           -&gt; Image VS RGB Double\n           -&gt; Image VS RGB Double\ndeconvolve p d u\n  = u * conv (transpose p) (d / conv p u)\n  where conv = convolve Edge\n</code></pre>\n\n<p>and you could use something like this:</p>\n\n<pre><code>let us = iterate (deconvolve p d) d\n    u10 = us !! 10  -- ten iterations\n</code></pre>\n\n<p>An example of a full program is:</p>\n\n<pre><code>import Graphics.Image as I\nimport Graphics.Image.Interface as I\nimport Prelude as P\n\nblur :: Image VS X Double\nblur = blur' / scalar (I.sum blur')\n  where blur' = fromLists [[0,0,4,3,2]\n                          ,[0,1,3,4,3]\n                          ,[1,2,3,3,4]\n                          ,[0,1,2,1,0]\n                          ,[0,0,1,0,0]]\n\ndeconvolve :: Image VS X Double\n           -&gt; Image VS RGB Double\n           -&gt; Image VS RGB Double\n           -&gt; Image VS RGB Double\ndeconvolve p d u\n  = u * conv (transpose p) (d / conv p u)\n  where conv = convolve Edge\n\nmain :: IO ()\nmain = do\n  -- original underlying image\n  u0 &lt;- readImage' \"images/frog.jpg\" :: IO (Image VS RGB Double)\n  -- the kernel\n  let p = blur\n  -- blurred imaged\n  let d = convolve Edge p u0\n  -- iterative deconvolution\n  let us = iterate (deconvolve p d) d\n      u1 = us !! 1 -- one iteration\n      u2 = us !! 20 -- twenty iterations\n\n  let output = makeImage (rows u0, cols u0 * 4)\n        (\\(r,c) -&gt;\n           let (i, c') = c `quotRem` cols u0\n           in index ([u0,d,u1,u2] !! i) (r,c'))\n        :: Image VS RGB Double\n\n  writeImage \"output.jpg\" output\n</code></pre>\n\n<p>which generates the following image of (left-to-right) the original frog, the blurred frog, a one-fold deconvolution, and a twenty-fold deconvolution.</p>\n\n<p><a href=\"https://i.stack.imgur.com/X1RFW.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/X1RFW.jpg\" alt=\"Ribbit!\"></a></p>\n"}], "owner": {"reputation": 33, "user_id": 6750871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bc5f4ed510d31fd5c98e4dc03a3b7ac?s=128&d=identicon&r=PG&f=1", "display_name": "Khilan Ravani", "link": "https://stackoverflow.com/users/6750871/khilan-ravani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 254, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1534573273, "creation_date": 1534566370, "question_id": 51905250, "link": "https://stackoverflow.com/questions/51905250/haskell-implementation-of-de-convolution-richardson-lucy", "title": "Haskell implementation of De-convolution (Richardson lucy)", "body": "<p>I'm trying to implement an algorithm of de-convolution in Haskell and couldn't find a simpler one than Richardson Lucy. I looked up at the existing matlab/python implementation but am unable to understand from where to start or how exactly to implement.\nThe library I want to use is <a href=\"https://github.com/lehins/hip\" rel=\"nofollow noreferrer\">https://github.com/lehins/hip</a>.\nIf someone can provide an outline of some implementation or some general idea about the functions with some code snippets, that would be very helpful to me.</p>\n\n<p>Thanks in advance!</p>\n"}, {"tags": ["haskell", "dependent-type"], "answers": [{"comments": [{"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "edited": false, "score": 0, "creation_date": 1534558923, "post_id": 51903540, "comment_id": 90760213, "body": "Many thanks! I have slightly modified the solution for the first problem (see the edit), as I really don&#39;t want to enumerate all of the cursor kinds. But I still have a problem with the second question (again, see the update). Do you have any ideas about that?"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1534544752, "creation_date": 1534544752, "answer_id": 51903540, "question_id": 51903162, "link": "https://stackoverflow.com/questions/51903162/expressing-dependencies-between-values-of-a-record-in-types/51903540#51903540", "title": "Expressing dependencies between values of a record in types", "body": "<p>If you only care about preventing construction, you can use</p>\n\n<pre><code>data LiteralValue k where\n  ...\n  NotALiteral :: NonLiteral k =&gt; LiteralValue k\n\nclass NonLiteral k\ninstance NonLiteral 'KFunction\n...\n</code></pre>\n\n<p>Note that, in this approach, the value of <code>k</code> gets erased before runtime, so we won't be able to pattern match on that.\nIf knowing <code>k</code> is important, then we can use a singleton</p>\n\n<pre><code>data SCursorKind c where\n    SKIntegerLiteral :: SCursorKind 'KIntegerLiteral\n    SKStringLiteral  :: ScursorKind 'KStringLiteral\n    ...\n\ndata LiteralValue k where\n  ...\n  NotALiteral :: NonLiteral k =&gt; SCursorKind k -&gt; LiteralValue k\n</code></pre>\n\n<p>so that we have something to pattern match on.</p>\n\n<p>(The singleton type can also be autogenerated using the <code>singletons</code> library, I think.)</p>\n\n<p>For the second question, use an existential and a singleton:</p>\n\n<pre><code>data Cursor where\n   Cursor ::\n      { kind :: SCursorKind k\n      , value :: LiteralValue k\n      , children :: [Cursor]\n      } -&gt; Cursor\n</code></pre>\n\n<p>This changes the type of the field <code>kind</code> a bit. If that's a problem, it is trivial to write a <code>fromSCursorKind :: SCursorKind k -&gt; CursorKind</code> function to recover the original type.</p>\n"}, {"tags": [], "owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "is_accepted": true, "score": 2, "last_activity_date": 1534583562, "last_edit_date": 1534583562, "creation_date": 1534575178, "answer_id": 51906081, "question_id": 51903162, "link": "https://stackoverflow.com/questions/51903162/expressing-dependencies-between-values-of-a-record-in-types/51906081#51906081", "title": "Expressing dependencies between values of a record in types", "body": "<p>Another option is to use the <code>first-class-families</code> package to make a custom TypeError with a custom check for the constraints.  </p>\n\n<p>Starting off with the language extensions:</p>\n\n<pre><code>{-# LANGUAGE\n    GADTs,\n    StandaloneDeriving,\n    ConstraintKinds,\n    DataKinds,\n    TypeFamilies,\n    TypeInType,\n    TypeOperators,\n    ExplicitNamespaces,\n    FlexibleInstances,\n    UndecidableInstances \n    #-}\n</code></pre>\n\n<p>Next, the imports</p>\n\n<pre><code>import Data.Kind (Constraint)\nimport Data.Type.Equality (type (==))\nimport Data.Type.Bool (If, type (||))\nimport GHC.TypeLits (TypeError, ErrorMessage(..))\n\n-- package: first-class-families\nimport Fcf (Eval, Exp, Pure)\n</code></pre>\n\n<p>Next, we need to define a data type to defer the type error, so it's not evaluated unless necessary. Also define a type instance for the <code>Eval</code></p>\n\n<pre><code>data TypeError' :: ErrorMessage -&gt; Exp a\ntype instance Eval (TypeError' m) = TypeError m\n</code></pre>\n\n<p>Now the types we are gonna use</p>\n\n<pre><code>data CursorKind = KIntegerLiteral | KStringLiteral | KFunction | KStruct | KTypedef \n\n-- Singletons for pattern matching on NotALiteral, can be generated with the singletons package\ndata SCursorKind (k :: CursorKind) where\n  SKIntegerLiteral :: SCursorKind 'KIntegerLiteral\n  SKStringLiteral :: SCursorKind 'KStringLiteral\n  SKFunction :: SCursorKind 'KFunction\n  SKStruct :: SCursorKind 'KStruct \n  SKTypedef :: SCursorKind 'KTypedef\n\nderiving instance Show (SCursorKind k)\n\ndata LiteralValue (k :: CursorKind) where\n  IntegerValue :: Int -&gt; LiteralValue 'KIntegerLiteral\n  StringValue :: String -&gt; LiteralValue 'KStringLiteral\n  NotALiteral :: TestLit k =&gt; SCursorKind k -&gt; LiteralValue k\n\nderiving instance Show (LiteralValue k)\n</code></pre>\n\n<p>I've added Show instances for simple testing. Now you might be wondering where <code>TestLit k</code> comes from, here's it's definition, using <code>Eval</code> and <code>Pure</code> from <code>first-class-families</code> and <code>ConstraintKinds</code>:</p>\n\n<pre><code>type TestLit k = Eval (\n  If (k == 'KIntegerLiteral || k == 'KStringLiteral)\n    (TypeError' ('Text \"Wrong CursorKind, shouldn't be KIntegerLiteral or KStringLiteral, but got: \" :&lt;&gt;: 'ShowType k)) \n    -- ^could probably give a better TypeError\n    (Pure EmptyConstrant)\n  )\n\n-- because (Pure (() :: Constraint)) has way too many parentheses\ntype EmptyConstrant = (() :: Constraint)\n</code></pre>\n\n<p>At this point we're at the same point as chi got us, that is we get a type error when we try to compile the expression <code>NotALiteral SKIntegerLiteral</code> (also for string literals).\nYou could also have used a simple type family for the constraint (with the custom TypeError) instead of using the <code>first-class-families</code> package.</p>\n\n<p>Now for the second question:</p>\n\n<p>To achieve what you want you can use a type class. I'm going to simplify the question a bit. Say we want a function <code>SCursorKind k -&gt; LiteralValue k</code>, and we want to specialize it for the literals and have it default for others without having to specify all of them. We'll define a type class:</p>\n\n<pre><code>class LitVal k where\n  getLiteralValue :: SCursorKind k -&gt; LiteralValue k\n</code></pre>\n\n<p>We'll only be exporting the function <code>getLiteralValue</code>, and not the type class itself, since we want to provide all the instances. We'll need FlexibleInstances and UndecidableInstances for those, and the OVERLAPPING and OVERLAPPABLE pragmas.</p>\n\n<pre><code>instance {-# OVERLAPPING #-} LitVal 'KIntegerLiteral where\n  getLiteralValue _ = IntegerValue 4\n\ninstance {-# OVERLAPPING #-} LitVal 'KStringLiteral where\n  getLiteralValue _ = StringValue \"4\"\n\ninstance {-# OVERLAPPABLE #-} TestLit k =&gt; LitVal k where\n  getLiteralValue sk = NotALiteral sk\n</code></pre>\n\n<p>You can make the type class more complex (with extra arguments) if you wish. You can also drop the <code>SCursorKind k</code> from the constructor if you so wish (but it provides a nicer <code>Show</code> instance in my opinion)</p>\n\n<p><a href=\"https://tio.run/##jVdLb9tGEL7rVwycwqIASaechCqA7MiuEdcJKie9NViRI2khcpdZLi0JdX@7OzNcSqQeaXOQubvz/OaZlSrWmKZvb38P3sHj5On@6@R@2gH6dz/5@Fz05XPmlUlUag1@RKdftFlW97fWFN4pbfwnbZJA/FF51Tg@73K8U5lONTZuHgz/Hs6fc3TKWxdIpts81bH2TyrDIldxzXqX4lbPU2IvyKT99VeTYKwT1XwBeXk3@KfT0VlunRfDhmwZRAfD@6K@1xkMoEnGl8Ppj1Kl2u8g8nSEaDzu9YAIVZ6jcgV4C7EqCwTvbEm6QRvw2g5dSX@t7YOxkDtLLxmUBaEG97/dQmpjlaa7YedE3421KUQPiz5U@l5fe/Xn9XWlmj9AF2BNuiOZmMDCOvArhAQX2mhSbwpYOJud8aPWSFbIw6P2BUT8NXXOuj7In9@xKNQSo@Gw1@swLoT/mi5GsNCu8IM4VUUxWISQNoC7ixcQTV9U2uf49eFL6QKwJiXTyP2zdhJbHwidGOGB8DRdDypJQNV6YYUO@0AZKPwBUOV1XGEjluwu@TzqaLPQW3gP47F48wqTFh8H0WZ56REYf1QGMPAOO03CSMFoBOseCYJoHr7pV6K2YSMp4xZkN70vYQ5jOsjn9XV1Oad3@aAf6D67khm@88V3vrhTaYHBRMlSuxBDBym@YAq4zR1FRnCjV9xS7Oc7hkQ7oJcy9UIejKYIiB4Fgw@S4kHydC8GkEJVctG1/eQIQoTsmggRJ1WnkxC2ElM5s1h5rnh1KLvALWRbggq2opeCjg4ameYIY02GNJqBRLjZLSqNe6auWNTI0J@b0ODL2JD9GTIx6XPpQBSsCc1K1W3pCusE@zF8ejAel@ioSKg1pRyUmXeUxY2Lu9LEnMnhsYw9f7EmchhEzYw4UvSS7aQ7V564DVD@xisuCWJ@sn4ShPa5AGCOsETDDZFivNF@JYlfHCSFyqisnjXMjtYM0uGit0/M2bE/RNfk7B69C0vb4ROO1rMw7AE5oa1farmM1TmBfC80NYonROGBEjLMokPkZyu7gahJvu6FxA1WfqOUx5/AFECoyIiGzpxmLe5zUAkSe67qeIbxGLFG6JnvGQtPR1jD@EPL6/WJrPVl/9t0VQ@XmqhbaKM0pHJoHNmNjLOqTls0krYEj5HreD84eQrFK4zXmAxZw43lPGVxzQ4/RxJdV/vxvlDVbcPpULochwUHiVpj96QOXyE8tMDsybhvVn3Ufcath6s/nSWMDmDSsFnZMk140FClHcsnb9uS@zAvPSytH8EVjH79MIIu4ywta01TWRQTAH/FLFXmEy0iO1jqF4KWVHDFH/Cs7JQGOc1yvwuYGM8eVMGaY7VWVFRRJB34gB3pXKkCNoqHl6VWYnbUERwaClCBAdW2bIL2VIzowq3KclpdOMoFUngT@FFSRCh6fV4wyAORJ1NfhuXKWromtzYYkiLRC0ob5JxgWRl9KQk/K9h3@pPdTfLx3Oom7fnb9I/HyZcvD0/3QlefJzePU8JYLTOCgJyuliCya4VpLvtVMLDKVueQGkpdICx4Z8uQANUSRXOVlxchZx9pXKBfWVpf6U55gbmwGdLy29pODG72coedCh7KGKo6ys@6nSzRt6rxqJmdLet9NfNG3oSBdtlaw0lVXFLIm0Wrp73/vwravf9n8pvN7@r91QUFEjjW0Gpy/4lYwW2h2SaLteRtFQpPM3TNi9K@zgz9j6GTUX5L9/4MUa86jSGxJD533Lp@aUk8jC0WfIHkCG8i3Og0rRcvUtDYVEAvgCTajCsBk4baY@9mzbl4mehk3lwmbU@Yztvbvw\" rel=\"nofollow noreferrer\">Here's a runnable example online, using the defintions from Fcf inlined, and Data.Type.Equality since those seem to cause trouble on that site</a></p>\n"}], "owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 1, "accepted_answer_id": 51906081, "answer_count": 2, "score": 1, "last_activity_date": 1534583562, "creation_date": 1534541776, "last_edit_date": 1534558831, "question_id": 51903162, "link": "https://stackoverflow.com/questions/51903162/expressing-dependencies-between-values-of-a-record-in-types", "title": "Expressing dependencies between values of a record in types", "body": "<p>Suppose we're trying to represent an AST node of a C-like language. First, let's define the notion of the node kind, for simplicity:</p>\n\n<pre><code>data CursorKind = KIntegerLiteral | KStringLiteral | KFunction | KStruct | KTypedef\n</code></pre>\n\n<p>Next, let's add a type to represent the values of the literals in a type-safe manner:</p>\n\n<pre><code>data LiteralValue k where\n  IntegerValue :: Int -&gt; LiteralValue 'KIntegerLiteral\n  StringValue :: String -&gt; LiteralValue 'KStringLiteral\n  NotALiteral :: LiteralValue '???\n</code></pre>\n\n<p>That's the first question: is there a way to define the <code>NotALiteral</code> clause so that it implies any <code>k</code> except <code>KIntegerLiteral</code> and <code>KStringLiteral</code>? If not, what's the best way to express this kind of fallback-ish clause to avoid repetition?</p>\n\n<p>Anyway, now, given the above, let's construct a very simple representation of a node in the AST:</p>\n\n<pre><code>data Cursor = Cursor\n  { kind :: CursorKind\n  , value :: LiteralValue ???\n  , children :: [Cursor]\n  }\n</code></pre>\n\n<p>That's the second question. What I'd ideally like to have is the type of <code>value</code> to depend on the <code>kind</code>. In a language with full dependent types like Idris it'd be blatantly simple. But how do we do this in modern Haskell with all the singletons and <code>TypeInType</code> it has to offer?</p>\n\n<hr>\n\n<p><strong>EDIT</strong> Inspired by @chi's answer, my solution to the first question is to use a type family in the following way, as in reality there is a ton of cursor kinds and enumerating all of them just seems wrong:</p>\n\n<pre><code>type family NotALiteral (k :: CursorKind) :: Bool where\n  NotALiteral 'KIntegerLiteral = 'False\n  NotALiteral 'KStringLiteral = 'False\n  NotALiteral a = 'True\n\ndata LiteralValue k where\n  IntegerValue :: Int -&gt; LiteralValue 'KIntegerLiteral\n  StringValue :: String -&gt; LiteralValue 'KStringLiteral\n  NotALiteral :: NotALiteral k ~ 'True =&gt; LiteralValue k\n</code></pre>\n\n<p>The problem is now in the implementation of a function that produces a matching <code>LiteralValue</code> given a cursor kind <code>k</code>. Ideally, we'd like to have something with the following signature (yes, I'm using <code>singletons</code>):</p>\n\n<pre><code>getLiteralValue :: Sing k -&gt; FFICursor -&gt; FFIMonad (LiteralValue k)\n</code></pre>\n\n<p>The implementation for the cases where <code>k</code> is indeed a literal is straightforward:</p>\n\n<pre><code>getLiteralValue SKIntegerLiteral ffi = IntegerValue &lt;$&gt; ffiGetInt ffi\ngetLiteralValue SKStringLiteral ffi = StringValue &lt;$&gt; ffiGetStr ffi\n</code></pre>\n\n<p>but if we now try to write something like</p>\n\n<pre><code>getLiteralValue _ _ = pure NotALiteral\n</code></pre>\n\n<p>it won't typecheck, as ghc is not able to derive that <code>NotALiteral k ~ 'True</code> holds. One solution is to continue matching on the singleton, but it would effectively require enumerating all of the kinds which, again, is something I'd like to avoid due to their numbers. Is there a better way?</p>\n"}, {"tags": ["haskell", "polymorphism", "dependent-type"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534545663, "post_id": 51902890, "comment_id": 90758260, "body": "Type casts are roughly equivalent to a <code>Typeable</code> constraint. Without that, there is no way to test or (safely) coerce a value whose type is unknown. E.g. <code>data T where T :: a -&gt; T</code> allows <code>x = T True</code> but the boolean can never be extracted from that since there is no <code>Typeable</code> constraining <code>a</code>."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1534561022, "post_id": 51902890, "comment_id": 90760431, "body": "I agree with your analysis. A type variable left underconstrained will never unify with the &quot;wrong&quot; type, so if I have a list of integers, it&#39;ll never be &quot;treated&quot; as a list of doubles simply because a type variable said so. We have to explicitly call <code>map fromIntegral</code>, which does the type conversion <i>explicitly</i>."}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1534540033, "creation_date": 1534540033, "question_id": 51902890, "link": "https://stackoverflow.com/questions/51902890/are-underconstrained-type-arguments-equivalent-to-casts-at-value-level", "title": "Are underconstrained type arguments equivalent to casts at value level?", "body": "<p>In Haskell, it's possible to leave type arguments underconstrained. Some known examples are collection <code>c</code> which implies type of elements <code>e</code> or lens where there exists an implied relationship between <code>s</code> and <code>a</code> as well as between <code>t</code> and <code>b</code> but nowhere to be found in the type signature. </p>\n\n<p>Extensions like functional dependencies, type families allow more precise expression of relationships at type level. But are they equivalent to type-level casts when they don't constrain options fully?</p>\n\n<p>While I believe the answer is \"No\" as value casts can \"go wrong\" at runtime but type level \"casts\" would have \"go wrong\" at compile time... But maybe that's what's happening when I don't align types properly?</p>\n\n<p>Or are they more related to partial functions (or relations) at value level where some choices must be avoided?</p>\n"}, {"tags": ["haskell", "optimization", "stream", "ghc"], "comments": [{"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 3, "creation_date": 1534531043, "post_id": 51901093, "comment_id": 90753473, "body": "You can run <code>-dverbose-core2core</code> and see what the code looks like before the strictness analyzer, which does the kind of unboxing you want. Maybe it is not yet in the shape at that point?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1534558201, "post_id": 51901093, "comment_id": 90760118, "body": "Can you show your actual source code? How are you defining and rewriting <code>sum</code>, <code>enumFromTo</code>, and <code>filter</code>? Without that info, it&#39;s going to be pretty much impossible to produce a proper answer to this question."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534796395, "post_id": 51901093, "comment_id": 90826040, "body": "Have you figured out the problem? If so, please answer this question. If not, I&#39;d appreciate if you&#39;d refine it as I asked. I find these sorts of puzzles fun, but I can&#39;t approach this one without all the pieces."}, {"owner": {"reputation": 171740, "user_id": 869736, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/671f732e3c68c387c702112a30e5ebd8?s=128&d=identicon&r=PG&f=1", "display_name": "Louis Wasserman", "link": "https://stackoverflow.com/users/869736/louis-wasserman"}, "edited": false, "score": 0, "creation_date": 1534803323, "post_id": 51901093, "comment_id": 90828411, "body": "I have not figured out the problem, but will update the question as soon as I can extract a useful subset of the code."}], "owner": {"reputation": 171740, "user_id": 869736, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/671f732e3c68c387c702112a30e5ebd8?s=128&d=identicon&r=PG&f=1", "display_name": "Louis Wasserman", "link": "https://stackoverflow.com/users/869736/louis-wasserman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1534530716, "creation_date": 1534530716, "question_id": 51901093, "link": "https://stackoverflow.com/questions/51901093/inner-loop-constructors-not-eliminated-by-ghc", "title": "Inner loop constructors not eliminated by GHC", "body": "<p>I am trying to, roughly, play with different stream fusion approaches to the code</p>\n\n<pre><code>sum (filter even [0..n])\n</code></pre>\n\n<p>and have reached a point where I would expect constructor specialization to kick in (with <code>-O2</code>, etc), but it doesn't seem to be kicking in.</p>\n\n<p>With <code>-ddump-simpl</code>, I get the following Core:</p>\n\n<pre><code>Rec {\n-- RHS size: {terms: 33, types: 10, coercions: 0}\nMain.main_go [Occ=LoopBreaker] :: Int -&gt; RangeToState -&gt; Int\n[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType]\nMain.main_go =\n  \\ (z_a1Nf :: Int) (s1_a1Ng :: RangeToState) -&gt;\n    case s1_a1Ng of _ [Occ=Dead] { RangeToState ipv_s7O5 ipv1_s7O6 -&gt;\n    case z_a1Nf of z1_X1NN { GHC.Types.I# ipv2_s7O9 -&gt;\n    case GHC.Prim.tagToEnum# @ Bool (GHC.Prim.&lt;# ipv_s7O5 ipv1_s7O6)\n    of _ [Occ=Dead] {\n      False -&gt; z1_X1NN;\n      True -&gt;\n        Main.main_go\n          (case GHC.Prim.remInt# ipv_s7O5 2# of _ [Occ=Dead] {\n             __DEFAULT -&gt; z1_X1NN;\n             0# -&gt; GHC.Types.I# (GHC.Prim.+# ipv2_s7O9 ipv_s7O5)\n           })\n          (Producer.RangeToState (GHC.Prim.+# ipv_s7O5 1#) ipv1_s7O6)\n    }\n    }\n    }\nend Rec }\n</code></pre>\n\n<p>(with <code>data RangeToState = RangeToState {-# UNPACK #-} !Int {-# UNPACK #-} !Int</code>.)</p>\n\n<p>I would have expected <code>RangeToState</code> and <code>I#</code> to get eliminated, and when I manually translate the Core from above back into basic Haskell:</p>\n\n<pre><code>foo2 = \\ (z :: Int) (s :: RangeToState) -&gt;\n    case s of \n      RangeToState i n -&gt; z `seq` case i &lt; n of\n        False -&gt; z\n        True -&gt; foo2 (if even i then i + z else z)\n          (RangeToState (i+1) n)\n</code></pre>\n\n<p>it does indeed get compiled down to an allocationless loop:</p>\n\n<pre><code>Rec {\n-- RHS size: {terms: 31, types: 6, coercions: 0}\nProducer.$wfoo2 [InlPrag=[0], Occ=LoopBreaker]\n  :: GHC.Prim.Int# -&gt; GHC.Prim.Int# -&gt; GHC.Prim.Int# -&gt; GHC.Prim.Int#\n[GblId, Arity=3, Caf=NoCafRefs, Str=DmdType &lt;L,U&gt;&lt;S,U&gt;&lt;S,U&gt;]\nProducer.$wfoo2 =\n  \\ (ww_s4gO :: GHC.Prim.Int#)\n    (ww1_s4gS :: GHC.Prim.Int#)\n    (ww2_s4gT :: GHC.Prim.Int#) -&gt;\n    case GHC.Prim.tagToEnum# @ Bool (GHC.Prim.&lt;# ww1_s4gS ww2_s4gT)\n    of _ [Occ=Dead] {\n      False -&gt; ww_s4gO;\n      True -&gt;\n        case GHC.Prim.remInt# ww1_s4gS 2# of _ [Occ=Dead] {\n          __DEFAULT -&gt;\n            Producer.$wfoo2 ww_s4gO (GHC.Prim.+# ww1_s4gS 1#) ww2_s4gT;\n          0# -&gt;\n            Producer.$wfoo2\n              (GHC.Prim.+# ww1_s4gS ww_s4gO) (GHC.Prim.+# ww1_s4gS 1#) ww2_s4gT\n        }\n    }\nend Rec }\n</code></pre>\n\n<p>My compilation options are just <code>ghc -O2 -fforce-recomp -ddump-simpl</code>, and I'm using GHC 8.0.2.</p>\n\n<p>What is stopping the first version of the code from getting further compiled down to the second version?</p>\n"}, {"tags": ["haskell", "ghc", "type-families", "type-level-computation"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1534529060, "post_id": 51900360, "comment_id": 90752638, "body": "You can&#39;t.  That would require the bounded api to expose the bounds as type-level information, but it doesn&#39;t.  You could make your own class that does and instantiate it all the types you are going to use.  Not sure how to do the target machine dependent stuff."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534532729, "post_id": 51900360, "comment_id": 90754160, "body": "I really doubt that this target-machine dependency can work. I&#39;m not that firm with GHC internals, but I think the machine-dependent stuff only start after finishing the type checking."}], "answers": [{"tags": [], "owner": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "is_accepted": false, "score": 0, "last_activity_date": 1615058821, "creation_date": 1615058821, "answer_id": 66509806, "question_id": 51900360, "link": "https://stackoverflow.com/questions/51900360/making-a-type-constraint-based-on-runtime-value-of-maxbound-int/66509806#66509806", "title": "Making a type constraint based on runtime value of (maxBound :: Int)", "body": "<p>I think your best bet is to use CPP itself here.</p>\n<pre><code>{-# LANGUAGE CPP                  #-}\n{-# LANGUAGE DataKinds            #-}\n{-# LANGUAGE KindSignatures       #-}\n{-# LANGUAGE TypeFamilies         #-}\n{-# LANGUAGE TypeOperators        #-}\n{-# LANGUAGE UndecidableInstances #-}\n\nimport GHC.TypeLits\nimport Data.Type.Bool\nimport Data.Kind\n\n#include &quot;MachDeps.h&quot;\n\ntype family BigUpperLimit (n :: Nat) :: Constraint where\n  BigUpperLimit n = ( KnownNat n\n                    , If (0 &lt;=? n &amp;&amp; n &lt;=? WORD_SIZE_IN_BITS)\n                         (() :: Constraint)\n                         (TypeError (    Text &quot;UInt &quot;\n                                    :&lt;&gt;: ShowType n\n                                    :&lt;&gt;: Text &quot; exceeds UInt &quot;\n                                    :&lt;&gt;: ShowType WORD_SIZE_IN_BITS\n                                    :&lt;&gt;: Text &quot;, the maximum size allowed with this machine's word size.&quot;)))\n</code></pre>\n<p>Now you can:</p>\n<pre><code>*Main&gt; 2 :: BigUpperLimit 12 =&gt; Int\n2\n*Main&gt; 2 :: BigUpperLimit 120 =&gt; Int\n\n&lt;interactive&gt;:34:1: error:\n    \u2022 UInt 120 exceeds UInt 64, the maximum size allowed with this machine's word size.\n    \u2022 In the expression: 2 :: BigUpperLimit 120 =&gt; Int\n      In an equation for \u2018it\u2019: it = 2 :: BigUpperLimit 120 =&gt; Int\n</code></pre>\n<p>Note that the latter is a type-error:</p>\n<pre><code>*Main&gt; :t 2 :: BigUpperLimit 120 =&gt; Int\n\n&lt;interactive&gt;:1:1: error:\n    UInt 120 exceeds UInt 64, the maximum size allowed with this machine's word size.\n</code></pre>\n"}], "owner": {"reputation": 2638, "user_id": 7208029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QxbAJ.png?s=128&g=1", "display_name": "Chai T. Rex", "link": "https://stackoverflow.com/users/7208029/chai-t-rex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 169, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1615058821, "creation_date": 1534527049, "question_id": 51900360, "link": "https://stackoverflow.com/questions/51900360/making-a-type-constraint-based-on-runtime-value-of-maxbound-int", "title": "Making a type constraint based on runtime value of (maxBound :: Int)", "body": "<p>I'm very new to type-level computations and type families and so on, and I'm trying to make a <code>Constraint</code> that will keep a type-level <code>Nat</code> from exceeding <code>maxBound :: Int</code>.</p>\n\n<p>In order to future-proof the code a bit, I'm hoping for a solution that works properly whether compiling normally <strong>or</strong> cross-compiling to a machine with a different word size. It should limit the <code>Nat</code> based on the <strong><em>target machine's</em></strong> value for <code>maxBound :: Int</code> at runtime (if there's a way to get that exact value at compile-time and go from there, that's fine).</p>\n\n<hr>\n\n<p>I got some help learning how to make constraints with compiler error messages, and here's my not-very-good first attempt at solving this problem:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>type family BigUpperLimit (n :: Nat) (c :: Constraint) :: Constraint where\n  BigUpperLimit n c = If (CmpNat n (maxBound :: Int) == 'GT)\n                         (TypeError (    Text \"UInt \"\n                                    :&lt;&gt;: ShowType n\n                                    :&lt;&gt;: Text \" exceeds UInt \"\n                                    :&lt;&gt;: ShowType (maxBound :: Int)\n                                    :&lt;&gt;: Text \", the maximum size allowed with this machine's word size.\"\n                                    )\n                         )\n                         c\n</code></pre>\n\n<p>It complains that <code>maxBound</code> isn't a known type variable. If I put a <code>'</code> in front of <code>maxBound</code>, it complains \"Illegal promoted term variable in a type: maxBound\".</p>\n\n<hr>\n\n<p>How can I accomplish my goal? I'm open both to ways of fixing the above method and to completely different methods.</p>\n"}, {"tags": ["haskell", "functional-programming", "time-complexity"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534525067, "post_id": 51899589, "comment_id": 90750951, "body": "I think you should elaborate on what&#39;s unclear according to you. What you posted, in my eye, already explains the reasoning behind 1..4. If you want/need something more, it would help to provide more information. E.g. &quot;I understand everything until X. The next steps claims Y -- why should Y hold?&quot;"}, {"owner": {"reputation": 69, "user_id": 9650681, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e1af27a1c4b86178029e1d86405f4fd?s=128&d=identicon&r=PG&f=1", "display_name": "EPaz", "link": "https://stackoverflow.com/users/9650681/epaz"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534525517, "post_id": 51899589, "comment_id": 90751130, "body": "I edited my original post."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1534526004, "post_id": 51899589, "comment_id": 90751305, "body": "Less verbose notation might help. For #1, for example, f(m+1, n) = n + f(m, n). Equivalent: f(m) = n + f(m \u2212 1) where n doesn\u2019t change. Can you see how you rewrite f to be a summation?"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 1, "last_activity_date": 1534538761, "creation_date": 1534538761, "answer_id": 51902643, "question_id": 51899589, "link": "https://stackoverflow.com/questions/51899589/analysis-of-the-running-time-of-concat/51902643#51902643", "title": "Analysis of the running time of concat", "body": "<blockquote>\n  <p>For 1., why is a summation? How is it tie to <code>T(++)(n, m) = \u0398(n)</code>?</p>\n</blockquote>\n\n<p>The summation arises from the inductive definition. Consider this independent definition</p>\n\n<pre><code>g(0,n) = something\ng(m+1,n) = f(m,n) + g(m,n)\n</code></pre>\n\n<p>By induction, we get</p>\n\n<pre><code>g(m,m)\n= f(m-1,n) + g(m-1,n)\n= f(m-1,n) + f(m-2,n) + g(m-2,n)\n= f(m-1,n) + f(m-2,n) + f(m-3,n) + g(m-3,n)\n= f(m-1,n) + f(m-2,n) + f(m-3,n) + ... + f(m-m,n) + g(m-m,n)\n= f(m-1,n) + f(m-2,n) + f(m-3,n) + ... + f(m-m,n) + something\n</code></pre>\n\n<p>So, the result is a summation of <code>f(n,x)</code> where <code>x</code> varies, plus a final term <code>something</code>.</p>\n\n<p>In the original definition, <code>g(m,n)</code> is <code>T(foldr (++) [])(m, n)</code>, while\n<code>f(m,n) = T(++)(n, mn)</code>. The final term does not matter, asymptotically.</p>\n\n<blockquote>\n  <p>For the second definition, I understand the first 2 statements.\n  The third one (2.), why k+n?</p>\n</blockquote>\n\n<p>When computing <code>foldl (++) x ys</code>, <code>x</code> is assumed to be a list having length <code>k</code>, and <code>ys</code> to be a list-of-lists having length <code>m+1</code>, whose elements have length <code>n</code>.</p>\n\n<p>Now, the recursive <code>foldl</code> equation is:</p>\n\n<pre><code>foldl (++) x (y:ys) = foldl (++) (x++y) ys\n</code></pre>\n\n<p>The cost of the recursive call comprises (A) the cost of <code>temp = x++y</code>, which is <code>T(++)(k, n)</code>, and (B) the cost of <code>foldl (++) temp ys</code>. For (B), the length of <code>temp</code> is now <code>length x + length y = k+n</code>, while <code>ys</code> has length <code>m</code> (<code>n</code> is unaffected).</p>\n\n<p>So, we get</p>\n\n<pre><code>T(foldl (++))(k, m+1, n) \n= A           + B\n= T(++)(k, n) + T(foldl (++))(k+n, m, n).\n</code></pre>\n\n<blockquote>\n  <p>For 3. and 4. I am completely lost</p>\n</blockquote>\n\n<p>In 3. we sum, as we did for 1., the term <code>T(++)(k, n)</code> with <code>k</code> varying. Note that <code>k</code> increases by <code>n</code> every time we recurse, so we get</p>\n\n<pre><code>T(++)(k, n) + T(++)(k+n, n) + T(++)(k+n+n, n) + ...\n= \u03a3_{j=0}{m-1} T(++)(k+jn, n)\n= \u03a3_{j=0}{m-1} \u0398(k+jn) \n= \u0398(k+m^2 n)\n</code></pre>\n\n<p>In 4. we choose <code>k=0</code> since in the definition of <code>concat'</code> we initially pick <code>x=[]</code> whose length is <code>0</code>. So, only <code>\u0398(m^2 n)</code> survives.</p>\n"}], "owner": {"reputation": 69, "user_id": 9650681, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e1af27a1c4b86178029e1d86405f4fd?s=128&d=identicon&r=PG&f=1", "display_name": "EPaz", "link": "https://stackoverflow.com/users/9650681/epaz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 51902643, "answer_count": 1, "score": 1, "last_activity_date": 1534538761, "creation_date": 1534523353, "last_edit_date": 1534530176, "question_id": 51899589, "link": "https://stackoverflow.com/questions/51899589/analysis-of-the-running-time-of-concat", "title": "Analysis of the running time of concat", "body": "<p>This is an example from Richard Bird's Thinking Functionally with Haskell (p. 158). Could someone explain me the reasoning behind 1,2,3 and 4?</p>\n\n<p>EDIT.\nI understand the first 3 equations formed from the first definition. For 1., why is a summation? How is it tie to T(++)(n, m) = \u0398(n)?\nFor the second definition, I understand the first 2 statements. The third one (2.), why k+n?\nFor 3. and 4. I am completely lost</p>\n\n<hr>\n\n<p>Consider first the following two definitions of concat: </p>\n\n<pre><code>concat xss= foldr (++) [] xss \nconcat' xss = foldl (++) [] xss \n</code></pre>\n\n<p>The two definitions are equivalent provided xss is a finite list. Suppose xss is a list of length m of lists all of length n. Then the first definition gives </p>\n\n<pre><code>T(concat)(m, n) = T(foldr (++) [])(m, n),\nT(foldr (++) [])(0, n) = \u0398(1), \nT(foldr (++) [])(m+1, n) = T(++)(n, mn) + T(foldr (++) [])(m, n). \n</code></pre>\n\n<p>The estimate T(++)(n, mn) arises because a list of length n is concatenated with a list of length mn. Since T(++)(n, m) = \u0398(n), we obtain</p>\n\n<pre><code>1. T(foldr (++) [])(m,n) = \u03a3_{k=0}^{m} \u0398(n) = \u0398(mn)\n</code></pre>\n\n<p>For the second definition of concat we have </p>\n\n<pre><code>T(concat')(m, n) = T(foldl (++))(0, m, n), \u00a0\nT(foldl (++))(k, 0, n) = O(1), \n2. T(foldl (++))(k, m+1, n) = T(++)(k, n) + T(foldl (++))(k+n, m, n).\n</code></pre>\n\n<p>The additional argument k refers to the length of the accumulated list in the second argument of foldl. This time we obtain</p>\n\n<pre><code>3. T(foldl (++)) (k,m,n) = \u03a3_{j=0}{m-1} \u0398(k+jn) = \u0398(k+m^2n)\n</code></pre>\n\n<p>Hence </p>\n\n<pre><code>4. T(concat')(m, n) = \u0398(m_2 n)\n</code></pre>\n"}, {"tags": ["haskell", "typeclass", "undecidable-instances"], "answers": [{"comments": [{"owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "edited": false, "score": 0, "creation_date": 1534517740, "post_id": 51897852, "comment_id": 90747010, "body": "Thanks for the quick reply. I realised that solution myself, but I found it a bit unsatisfactory. I feel like GHC should be able to figure out from the <code>PeelableAST (Predicate n) ann</code> instance that <code>PeelableAnn PredicateAnn ann</code> should hold. Especially because these are intended as default instances and I should be able to write a <code>PeelableAST (Predicate n) ann</code> instance for a particular <code>ann</code> and let that be picked up by the default  <code>PeelableAST Literal ann</code> instance. This does not work if <code>PeelableAST Liberal ann</code> also requires a <code>PeelableAnn PredicateAnn ann</code> instance."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "edited": false, "score": 1, "creation_date": 1534518860, "post_id": 51897852, "comment_id": 90747648, "body": "@Madgen Ah, I suspect there is a second misunderstanding here: from the precondition you wrote, we know <code>PeelableAST (Predicate n) ann</code>, but inside the <code>PeelableAST Literal ann</code> instance, you unwrap an existential and so require a <code>PeelableAST (Predicate n&#39;) ann</code> for some <code>n&#39;</code> which is not known to be equal to <code>n</code>! So upgrading the precondition from <code>PeelableAST (Predicate n) ann</code> to <code>PeelableAnn PredicateAnn ann</code> is essentially giving you an upgrade from <code>exists n. PeelableAST (Predicate n) ann</code> to <code>forall n. PeelableAST (Predicate n) ann</code> -- at which point we can choose <code>n ~ n&#39;</code> as needed."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "edited": false, "score": 1, "creation_date": 1534519006, "post_id": 51897852, "comment_id": 90747719, "body": "@Madgen In other words your current approach is doomed. You could recover by having <code>Literal</code> wrap an instance of <code>PeelableAST</code> for you, but then you won&#39;t be able to make <code>Literal</code>s for which you don&#39;t have the appropriate <code>PeelableAST</code>, and you would have to abandon your current <code>PeelableAST (Predicate n) ann</code> catch-all instance in favor of more specific ones. If that sounds interesting I&#39;ll be happy to add a small snippet about how."}, {"owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "edited": false, "score": 0, "creation_date": 1534520369, "post_id": 51897852, "comment_id": 90748466, "body": "I think that might work. Does it amount to just changing the definition of <code>Literal</code> so that I have <code>forall n ann. PeelableAST (Predicate n) ann =&gt; Literal ...</code>? Still not super ideal if that&#39;s the case though as I also want an analogous <code>Decorable</code> and one can pack only so many typeclasses into datatype..."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "edited": false, "score": 1, "creation_date": 1534521558, "post_id": 51897852, "comment_id": 90749134, "body": "@Madgen Yes, that&#39;s exactly right -- though you probably want to leave the <code>ann</code> out of the <code>forall</code>."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1534517111, "creation_date": 1534517111, "answer_id": 51897852, "question_id": 51897628, "link": "https://stackoverflow.com/questions/51897628/haskell-typeclass-constraint-cannot-be-resolved-due-to-patersons-conditions/51897852#51897852", "title": "Haskell typeclass constraint cannot be resolved due to Paterson&#39;s conditions", "body": "<p>In your <code>PeelableAST Literal ann</code> instance, you use the <code>PeelableAST (Predicate n) ann</code> instance. If the type-checker wants to use that instance, it must verify its precondition, namely, that <code>PeelableAnn PredicateAnn ann</code> holds. But it doesn't know this, because you have not made it a precondition of your <code>PeelableAST Literal ann</code> instance.</p>\n\n<p>That's okay; it's easy to fix, and lets you avoid an ambiguous type entirely. Just add the precondition it's worried about as a precondition for you <code>PeelableAST Literal ann</code> instance. Indeed, since it's now the precondition for both instances, you can then also drop the <code>PeelableAnn PredicateAnn ann</code> precondition, as it's implied by this new and stronger condition. So:</p>\n\n<pre><code>instance PeelableAnn PredicateAnn ann =&gt; PeelableAST Literal ann where\n    peel (Literal predicate) = Literal (peel predicate)\n</code></pre>\n\n<p>You can then delete <code>AllowAmbiguousTypes</code>, though <code>UndecidableInstances</code> is still needed because <code>PeelableAnn PredicateAnn ann</code> is not obviously structurally smaller than <code>PeelableAST Literal ann</code>.</p>\n"}], "owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1534518689, "creation_date": 1534516354, "last_edit_date": 1534518689, "question_id": 51897628, "link": "https://stackoverflow.com/questions/51897628/haskell-typeclass-constraint-cannot-be-resolved-due-to-patersons-conditions", "title": "Haskell typeclass constraint cannot be resolved due to Paterson&#39;s conditions", "body": "<p>I'm trying to build an AST with indexed nested annotations. I added a typeclass for peeling the annotation at the top-level and tried to provide default instances that effectively says \"if you know how to peel an annotation on its own, then you know how to peel an annotation at the particular AST node.\"</p>\n\n<p>Since one of my tree nodes is a <code>Nat</code> indexed Predicate and its parent existentially quantifies this variable, when I try to write the instance for the parent, I get stuck at Paterson's conditions. Namely, I have more type variables in my assertion than I do in the head.</p>\n\n<p>If I turn on <code>UndecidableInstances</code>, then GHC cannot unify the variables with kind <code>Nat</code>.</p>\n\n<p>If I further turn on <code>AllowAmbiguousTypes</code>, then I get a more absurd error where it says it cannot find an instance despite the fact that the instance it is looking for is in the assertion of the type instance.</p>\n\n<p>My questions are:</p>\n\n<ol>\n<li>Is this actually a bad instance to write, or is the type checker too conservative?</li>\n<li>If it is bad or there is no way around the problem, how else can I provide this default peeling behaviour?</li>\n</ol>\n\n<p>Here's minimalish code (I stripped the bits not essential to the type error, so some bits might seem redundant):</p>\n\n<pre><code>{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE ExistentialQuantification #-}\n{-# LANGUAGE UndecidableInstances #-}\n{-# LANGUAGE AllowAmbiguousTypes #-}\n\nmodule Constraint where\n\ndata AnnType = ABase\n\ndata family PredicateAnn (a :: AnnType)\ndata instance PredicateAnn (a :: AnnType) = PABase\n\ndata Nat = Zero | Succ Nat\n\ndata Predicate (n :: Nat) (a :: AnnType) = Predicate\ndata Literal   (a :: AnnType) = forall n. Literal (Predicate n a)\n\nclass PeelableAST (ast :: AnnType -&gt; *) (ann :: AnnType -&gt; AnnType) where\n  peel :: ast (ann a) -&gt; ast a\n\nclass PeelableAnn (f :: AnnType -&gt; *) (ann :: AnnType -&gt; AnnType) where\n  peelA :: f (ann a) -&gt; f a\n\ninstance PeelableAST (Predicate n) ann\n         =&gt; PeelableAST Literal ann where\n  peel (Literal predicate) = Literal (peel predicate)\n\ninstance PeelableAnn PredicateAnn ann =&gt; PeelableAST (Predicate n) ann where\n  peel Predicate = Predicate\n</code></pre>\n\n<p>Here's the exact error without <code>UndecidableInstances</code>:</p>\n\n<pre><code>src/Constraint.hs:27:10: error:\n\u2022 Variable \u2018n\u2019 occurs more often\n    in the constraint \u2018PeelableAST (Predicate n) ann\u2019\n    than in the instance head\n  (Use UndecidableInstances to permit this)\n\u2022 In the instance declaration for \u2018PeelableAST Literal ann\u2019\n   |\n27 | instance PeelableAST (Predicate n) ann\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...\n</code></pre>\n\n<p>And here's the one with it:</p>\n\n<pre><code>src/Constraint.hs:28:10: error:\n\u2022 Could not deduce (PeelableAST (Predicate n0) ann)\n  from the context: PeelableAST (Predicate n) ann\n    bound by an instance declaration:\n               forall (n :: Nat) (ann :: AnnType -&gt; AnnType).\n               PeelableAST (Predicate n) ann =&gt;\n               PeelableAST Literal ann\n    at src/Constraint.hs:(28,10)-(29,35)\n  The type variable \u2018n0\u2019 is ambiguous\n\u2022 In the ambiguity check for an instance declaration\n  To defer the ambiguity check to use sites, enable AllowAmbiguousTypes\n  In the instance declaration for \u2018PeelableAST Literal ann\u2019\n   |\n28 | instance PeelableAST (Predicate n) ann\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...\n</code></pre>\n\n<p>Here is the one with <code>AllowAmbiguousTypes</code>:</p>\n\n<pre><code> src/Constraint.hs:31:39: error:\n\u2022 Could not deduce (PeelableAnn PredicateAnn ann)\n    arising from a use of \u2018peel\u2019\n  from the context: PeelableAST (Predicate n) ann\n    bound by the instance declaration\n    at src/Constraint.hs:(29,10)-(30,35)\n\u2022 In the first argument of \u2018Literal\u2019, namely \u2018(peel predicate)\u2019\n  In the expression: Literal (peel predicate)\n  In an equation for \u2018peel\u2019:\n      peel (Literal predicate) = Literal (peel predicate)\n   |\n31 |   peel (Literal predicate) = Literal (peel predicate)\n   |                                       ^^^^^^^^^^^^^^\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>As Daniel Wagner suggests one solution is to make <code>PeelableAnn PredicateAnn ann</code> an assertion in <code>PeelableAST Literal ann</code> instance. However, I never use <code>peelA</code> defined by PeelableAnn in <code>PeelableAST Literal ann</code> definition and I'd like this instance to behave as the default behaviour and be able to overwrite it by directly providing a <code>PeelableAST (Predicate n) ann</code> instance. In other words, peeling might be inherently contextual.</p>\n\n<p>Since <code>PeelableAnn PredicateAnn ann</code> is required by <code>PeelableAST (Predicate n) ann</code>, I feel that GHC should be able to find and satisfy this condition.</p>\n\n<p>I can simply have a bogus <code>PeelableAnn PredicateAnn ann</code> instance only to be ignored by the more specific one, but that is quite hacky</p>\n"}, {"tags": ["haskell", "haskell-lens"], "answers": [{"comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1534498035, "post_id": 51892047, "comment_id": 90735501, "body": "Maybe it would be more useful if you would store tuple inside <code>Either</code> and combined <code>_Left</code> prism with either <code>_1</code> or <code>_2</code> to show how to seamlessly combine prisms and lenses?"}, {"owner": {"reputation": 1237, "user_id": 3416536, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/33e660f9b48e97aa96c9029e9645f15d?s=128&d=identicon&r=PG&f=1", "display_name": "user3416536", "link": "https://stackoverflow.com/users/3416536/user3416536"}, "edited": false, "score": 0, "creation_date": 1534525802, "post_id": 51892047, "comment_id": 90751242, "body": "Ah yes, now you explain it, that makes sense - it&#39;s a pseudo-prism on the t2 of the Combi, so if the _t isn&#39;t a t2, it&#39;s falling down the null path.  Got it.  Thanks!"}], "tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": true, "score": 1, "last_activity_date": 1534497123, "creation_date": 1534497123, "answer_id": 51892047, "question_id": 51891742, "link": "https://stackoverflow.com/questions/51891742/haskell-lens-prism-composition/51892047#51892047", "title": "Haskell Lens - Prism Composition", "body": "<p>When you use a <code>Prism</code>, or indeed any <code>Traversal</code> as a setter, it only works if the argument is already on the correct variant.</p>\n\n<pre><code>Prelude&gt; :module + Control.Lens\n\nPrelude Control.Lens&gt; (Left 4) &amp; (_Left .~ \"foo\")\nLeft \"foo\"\n\nPrelude Control.Lens&gt; (Left 4) &amp; (_Right .~ \"foo\")\nLeft 4\n</code></pre>\n\n<p>Thus when you apply <code>_T2 .~ \"bar\"</code> to <code>T1 7</code> you get <code>T1 7</code> instead of <code>T2 \"bar\"</code></p>\n"}], "owner": {"reputation": 1237, "user_id": 3416536, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/33e660f9b48e97aa96c9029e9645f15d?s=128&d=identicon&r=PG&f=1", "display_name": "user3416536", "link": "https://stackoverflow.com/users/3416536/user3416536"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 489, "favorite_count": 0, "accepted_answer_id": 51892047, "answer_count": 1, "score": 1, "last_activity_date": 1534497123, "creation_date": 1534496087, "question_id": 51891742, "link": "https://stackoverflow.com/questions/51891742/haskell-lens-prism-composition", "title": "Haskell Lens - Prism Composition", "body": "<p>I'm trying to compose a Lens and a Prism in Haskell, and not getting the answer I expected.  Here is my test code:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport Data.Function  ( ($), (&amp;) )\n\nimport Control.Lens.Getter  ( (^.) )\nimport Control.Lens.Lens    ( Lens', lens )\nimport Control.Lens.Prism   ( Prism', prism )\nimport Control.Lens.Setter  ( (.~) )\nimport Control.Lens.Review  ( AReview, re )\nimport Control.Lens.TH      ( makeClassy )\n\n(##) :: AReview t s -&gt; s -&gt; t\nx ## y = y ^. re x\n\ndata Test = T1 Int | T2 String\n  deriving Show\n\n_T1 :: Prism' Test Int\n_T1 = prism T1 (\\x -&gt; case x of T1 i -&gt; Right i; _ -&gt; Left x)\n\n_T2 :: Prism' Test String\n_T2 = prism T2 (\\x -&gt; case x of T2 t -&gt; Right t; _ -&gt; Left x)\n\ndata Combi = Combi { _t :: Test }\n  deriving Show\n\ndefCombi :: Combi\ndefCombi = Combi (T1 7)\n\nt :: Lens' Combi Test\nt = lens (\\(Combi x) -&gt; x) (\\( Combi _ ) t' -&gt; Combi t')\n\ntest = (defCombi &amp; t .~ (_T2 ## \"foo\"), defCombi &amp; (t . _T2) .~ \"bar\")\n</code></pre>\n\n<p>Now my surprise is that when I run this, the second of the pair shows <code>Combi {_t = T1 7}</code>; that is, the \"assignment\" via t . _T2 has no effect.</p>\n\n<p>Looking at the types, the apparently relevant detail is that composing t with _T2 promotes the \"Functor\" requirement to an \"Applicative\" requirement.</p>\n\n<pre><code>*Main\n\u03bb&gt; :t t\nt :: Functor f =&gt; (Test -&gt; f Test) -&gt; Combi -&gt; f Combi\n*Main\n\u03bb&gt; :t t . _T2\nt . _T2\n  :: Applicative f =&gt; (String -&gt; f String) -&gt; Combi -&gt; f Combi\n</code></pre>\n\n<p>But quite frankly, I can't get my head around what this means, and particularly why this means that the composition doesn't \"work\" (or, more likely, that it does work, but I'm misunderstanding what it means in this context).</p>\n\n<p>Any enlightenment gratefully received.</p>\n"}, {"tags": ["haskell", "quickcheck"], "answers": [{"comments": [{"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 1, "creation_date": 1534491991, "post_id": 51886569, "comment_id": 90732225, "body": "Even though I am working with haskell for about 10 years, &quot;small&quot; things like these, simple composition and combination to make a complex solution with minimal amount of work, makes me appreciate the language every day."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1534462025, "creation_date": 1534462025, "answer_id": 51886569, "question_id": 51886345, "link": "https://stackoverflow.com/questions/51886345/quickcheck-card-generator/51886569#51886569", "title": "Quickcheck card generator", "body": "<p>To generate a card:</p>\n\n<pre><code>genVal = elements \"123456789JQK\"\ngenSuit = elements \"CHSD\"\n\ngenCard = do\n    val &lt;- genVal\n    suit &lt;- genSuit\n    return [val, suit]\n</code></pre>\n\n<p>To generate a flush:</p>\n\n<pre><code>genFlush = do\n    vals &lt;- replicateM 5 genVal\n    suit &lt;- genSuit\n    return [[val, suit] | val &lt;- vals]\n</code></pre>\n\n<p>My <code>genFlush</code>, like your <code>genCards</code>, does not guarantee that the cards generated in this way are distinct. You can select a given probability for a flush vs. a normal hand with <code>frequency</code>; e.g. for 60% flushes:</p>\n\n<pre><code>genHandThatIsProbablyAFlush = frequency\n    [ (3, genFlush)\n    , (2, genCards)\n    ]\n</code></pre>\n"}], "owner": {"reputation": 479, "user_id": 4496701, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh5.googleusercontent.com/-SST61v329Q0/AAAAAAAAAAI/AAAAAAAAAFM/ihwdZ1nZE7Q/photo.jpg?sz=128", "display_name": "Cliff Stamp", "link": "https://stackoverflow.com/users/4496701/cliff-stamp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 51886569, "answer_count": 1, "score": 2, "last_activity_date": 1534462025, "creation_date": 1534460142, "last_edit_date": 1534460808, "question_id": 51886345, "link": "https://stackoverflow.com/questions/51886345/quickcheck-card-generator", "title": "Quickcheck card generator", "body": "<p>Ok, so I hacked this :</p>\n\n<pre><code>prop = forAll genCards $ \\cards -&gt; collect (go cards == True) $ isFlush cards == go cards\n\ngo cards = (length . nub .  map (\\w -&gt; last w)) cards == 1\n\ngenCard :: Gen String\ngenCard = elements[ \"1C\", \"2C\", \"3C\", \"4C\", \"5C\", \"6C\", \"7C\", \"9C\", \"KC\", \"QC\", \"JC\", \"1H\", \"2H\", \"3H\", \"4H\", \"5H\", \"6H\", \"7H\", \"9H\", \"KH\", \"QH\", \"JH\", \"1S\", \"2S\", \"3S\", \"4S\", \"5S\", \"6S\", \"7S\", \"9S\", \"KS\", \"QS\", \"JS\", \"1D\", \"2D\", \"3D\", \"4D\", \"5D\", \"6D\", \"7D\", \"9D\", \"KD\", \"QD\", \"JD\"] \n\ngenCards :: Gen [String]\ngenCards = do\n  replicateM 5 genCard\n</code></pre>\n\n<p>However there has to be a better way, but I could not figure out how to combine a generator for numbers + one for suits, and a way to ensure there are more flushes generated (it is ~0.4% by random chance according to collect).</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1534442067, "post_id": 51882729, "comment_id": 90717178, "body": "Well the problem with this is: what would the signature of the <code>make</code> function be? <code>String -&gt; Test</code>, <code>String -&gt; Int -&gt; Test</code>? <code>String -&gt; String -&gt; Int -&gt; Test</code>?"}, {"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1534442846, "post_id": 51882729, "comment_id": 90717559, "body": "I don&#39;t know, may be some type-level magic will help?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1534443013, "post_id": 51882729, "comment_id": 90717646, "body": "well even if that was possible, then how would you process this? What would the type of <code>make some_string</code> be? Since it depends on the <i>value</i> of <code>some_string</code>, it has no specific value, hence type contracts could no longer get satisfied."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1534443840, "post_id": 51882729, "comment_id": 90718096, "body": "This seems like an <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY problem</a>. Why do you want to do this?"}, {"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 1, "creation_date": 1534444240, "post_id": 51882729, "comment_id": 90718289, "body": "I have a BERT encoded data, that comes from the web browser, and I&#39;m trying to turn it into the plain Haskell values. It is annoying to match BERT <code>Term</code>s every time."}, {"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 1, "creation_date": 1534445044, "post_id": 51882729, "comment_id": 90718670, "body": "Now I think there should be a better way for such transformations. I.e. <code>transform :: (Generic t, FromBert (Rep t)) =&gt; Term -&gt; Maybe t</code>"}], "answers": [{"comments": [{"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 0, "creation_date": 1534446029, "post_id": 51883659, "comment_id": 90719128, "body": "Yes, I agree. But I want to do this in a generic way."}], "tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": true, "score": 2, "last_activity_date": 1534445629, "creation_date": 1534445629, "answer_id": 51883659, "question_id": 51882729, "link": "https://stackoverflow.com/questions/51882729/build-data-constructor-using-generics-in-haskell/51883659#51883659", "title": "Build data constructor using generics in Haskell", "body": "<p>\"I have a BERT encoded data, that comes from the web browser\"</p>\n\n<p>There is not a reasonable way to solve the problem as you have posed it.  However, if you are parsing data and you want to turn it into a Haskell data structure, the place to select the constructor is within the parser.  Something like:</p>\n\n<pre><code>make :: Parser Test\nmake = do\n  tag &lt;- parse string\n  case tag of\n    \"Foo\" -&gt; Foo\n    \"Bar\" -&gt; Bar &lt;$&gt; int\n    \"Baz\" -&gt; Baz &lt;$&gt; string &lt;*&gt; int\n\nsting :: Parser String\nint   :: Parser Int\n</code></pre>\n"}], "owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 51883659, "answer_count": 1, "score": 0, "last_activity_date": 1534446471, "creation_date": 1534441869, "last_edit_date": 1534446471, "question_id": 51882729, "link": "https://stackoverflow.com/questions/51882729/build-data-constructor-using-generics-in-haskell", "title": "Build data constructor using generics in Haskell", "body": "<p>How to construct a value by given constructor name and constructor arguments. For example, having the following data type</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\n\ndata Test = Foo | Bar Int | Baz String Int deriving (Generic, Show)\n</code></pre>\n\n<p>I would have such function</p>\n\n<pre><code>make \"Foo\" -- &gt; Foo\nmake \"Bar\" 1 -- &gt; Bar 1\nmake \"Baz\" \"hi\" 777 -- &gt; Baz \"hi\" 777\n</code></pre>\n\n<p>The solution in <a href=\"https://ocharles.org.uk/posts/2014-04-26-constructing-generically.html\" rel=\"nofollow noreferrer\">this article</a> is pretty close, but it works for data types only with single data constructor.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>So why do I want to do this? I have a BERT-encoded data that comes from the client. I can decode it to the <code>Term</code>s from the <a href=\"http://hackage.haskell.org/package/bert\" rel=\"nofollow noreferrer\">bert package</a>. I want to have something like this</p>\n\n<pre><code>case x of\n  Foo -&gt; do something\n  Bar x -&gt; do something with x\n</code></pre>\n\n<p>and so on instead of</p>\n\n<pre><code>case x of\n  TupleTerm y -&gt;\n    case y of\n      [AtomTerm \"foo\"] -&gt; do something\n      [AtomTerm \"bar\", IntTerm x] -&gt; do something with x\n</code></pre>\n\n<p><strong>EDIT2</strong></p>\n\n<p>I concluded, that I was going in the wrong way.</p>\n"}, {"tags": ["haskell", "ghc", "typeclass", "cabal", "overlapping-instances"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1534444979, "post_id": 51882493, "comment_id": 90718641, "body": "Can you please include code to reproduce the issue in your question?"}, {"owner": {"reputation": 123, "user_id": 6257921, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vMSb-u_jr9Q/AAAAAAAAAAI/AAAAAAAABLk/0-qCDsnM1MY/photo.jpg?sz=128", "display_name": "Graham Leach-Krouse", "link": "https://stackoverflow.com/users/6257921/graham-leach-krouse"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1534453651, "post_id": 51882493, "comment_id": 90722190, "body": "I haven&#39;t yet been able to boil it down to a snippet, but if you&#39;d like to inspect it, you can clone the project at <a href=\"https://github.com/gleachkr/Carnap.git\" rel=\"nofollow noreferrer\">github.com/gleachkr/Carnap.git</a>, checkout the branch &quot;ghc-8-Odd-Inference&quot;, and compare the results of calling the function <code>test</code> from <code>Carnap&#47;src&#47;Carnap&#47;Bad.hs</code> and <code>Carnap&#47;src&#47;Carnap&#47;Good.hs</code>"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1534457312, "post_id": 51882493, "comment_id": 90723411, "body": "Yeah this seems weird since all your instances are in the same file"}, {"owner": {"reputation": 123, "user_id": 6257921, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vMSb-u_jr9Q/AAAAAAAAAAI/AAAAAAAABLk/0-qCDsnM1MY/photo.jpg?sz=128", "display_name": "Graham Leach-Krouse", "link": "https://stackoverflow.com/users/6257921/graham-leach-krouse"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1534539748, "post_id": 51882493, "comment_id": 90756761, "body": "@jberryman: Added a link to a minimal example of the phenomenon."}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1540962592, "post_id": 51882493, "comment_id": 93051033, "body": "Does the issue still occur if  <code>Bad</code> is listed under extra modules and not expsoed modules?"}, {"owner": {"reputation": 123, "user_id": 6257921, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vMSb-u_jr9Q/AAAAAAAAAAI/AAAAAAAABLk/0-qCDsnM1MY/photo.jpg?sz=128", "display_name": "Graham Leach-Krouse", "link": "https://stackoverflow.com/users/6257921/graham-leach-krouse"}, "reply_to_user": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1541092465, "post_id": 51882493, "comment_id": 93107573, "body": "@sclv sorry, It&#39;s possible I don&#39;t understand: do you mean other-modules? Also, it&#39;s <code>Good</code> that&#39;s listed and <code>Bad</code> that&#39;s unlisted. But (best attempt at an answer): switching <code>Good</code> from exposed-modules to other-modules preserves the weird behavior. FWIW, there was also some discussion at <a href=\"https://ghc.haskell.org/trac/ghc/ticket/15599\" rel=\"nofollow noreferrer\">ghc.haskell.org/trac/ghc/ticket/15599</a>."}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1541132436, "post_id": 51882493, "comment_id": 93120132, "body": "You inferred my intent correctly. Thanks for the link! It&#39;s super weird, but reassuring that this only appears to occur in 8.2.2 and not other versions. It looks like the ticket you found actually notes this <i>can</i> happen without incoherent instances, and was fixed in <a href=\"https://ghc.haskell.org/trac/ghc/ticket/14434\" rel=\"nofollow noreferrer\">ghc.haskell.org/trac/ghc/ticket/14434</a>"}], "owner": {"reputation": 123, "user_id": 6257921, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vMSb-u_jr9Q/AAAAAAAAAAI/AAAAAAAABLk/0-qCDsnM1MY/photo.jpg?sz=128", "display_name": "Graham Leach-Krouse", "link": "https://stackoverflow.com/users/6257921/graham-leach-krouse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1541092707, "creation_date": 1534440684, "last_edit_date": 1541092707, "question_id": 51882493, "link": "https://stackoverflow.com/questions/51882493/in-ghc-8-2-2-can-overlapping-instance-resolution-depend-on-whether-a-file-is-in", "title": "In GHC-8.2.2, can overlapping instance resolution depend on whether a file is included as an exposed module?", "body": "<p>I'm encountering the following hard to understand behavior from GHC-8.2.2</p>\n\n<p>I have some overlapping typeclass instances. No incoherent typeclass instances. There's a certain typeclass instance of the form, roughly,</p>\n\n<pre><code>instance (C f h, C g h) =&gt; D1 (D2 f g) h \n</code></pre>\n\n<p>where <code>C</code> has overlapping instances. When I load my project into <code>stack repl</code>, all is well. The context of this instance is resolved to the instances of <code>C</code> I'm looking for.</p>\n\n<p>If I create a file <code>test.hs</code> which imports a datatype falling under the instance above, all is not well. When I load that into <code>stack repl</code>, and call an operation of <code>D1</code>, then it's clear that the context of the instance of <code>D1</code> is being resolved to the \"wrong\" instance of <code>C</code>.</p>\n\n<p>What's especially strange is that if I add <code>test.hs</code> to my project as an exposed module, then reload it into the repl with no other changes, then the context of the instance above is resolved to the \"right\" instance of <code>C</code>.</p>\n\n<p>I do not see this behavior with GHC-7.10.3, 8.0.1, 8.0.2, or with 8.4.3. Perhaps this is related to <a href=\"https://ghc.haskell.org/trac/ghc/ticket/15125\" rel=\"nofollow noreferrer\">this bug</a>? </p>\n\n<p>But I'm not using incoherent instances, which is what that bug seems to involve. I am using a fair number of language extensions in the module where the instance above occurs: </p>\n\n<pre><code>{-#LANGUAGE TypeFamilies, UndecidableInstances, FlexibleInstances, MultiParamTypeClasses, FunctionalDependencies, GADTs,  DataKinds, PolyKinds, TypeOperators, PatternSynonyms, RankNTypes, FlexibleContexts, ScopedTypeVariables, DefaultSignatures #-}\n</code></pre>\n\n<p><s>I don't yet have a minimal example</s>. A minimal example of the behavior can be found at <a href=\"https://github.com/gleachkr/GHC-Repro\" rel=\"nofollow noreferrer\">GHC-Repro</a>. Run <code>test.sh</code> to see the phenomenon. What I would like to know is:</p>\n\n<ol>\n<li>Whether this might conceivably be intended behavior by GHC, and I'm just doing something wrong.</li>\n<li>If I am doing something wrong, what I might do to select the \"right\" instance when importing stuff from my project into other projects.</li>\n</ol>\n\n<hr>\n\n<p>This issue is now being tracked at: <a href=\"https://ghc.haskell.org/trac/ghc/ticket/15599\" rel=\"nofollow noreferrer\">https://ghc.haskell.org/trac/ghc/ticket/15599</a></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1534436013, "post_id": 51881338, "comment_id": 90714126, "body": "what are the errors you are getting?"}, {"owner": {"reputation": 199, "user_id": 9663390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d995050ef3649a918a4dfd4ff15fe905?s=128&d=identicon&r=PG&f=1", "display_name": "compsciman", "link": "https://stackoverflow.com/users/9663390/compsciman"}, "reply_to_user": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1534436190, "post_id": 51881338, "comment_id": 90714214, "body": "<code>Couldn&#39;t match expected type \u2018Char\u2019 with actual type \u2018[a0]\u2019</code>  <code>In the expression: a ++ b</code>, and <code>Couldn&#39;t match expected type \u2018[a0]\u2019 with actual type \u2018Char\u2019</code> <code>In the second argument of \u2018(++)\u2019, namely \u2018b\u2019</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1534436482, "post_id": 51881338, "comment_id": 90714364, "body": "But here in your &quot;wanted result&quot;, you actually show a list of <i>2-tuples</i>, not a string (like you specified earlier in the signature."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1534436501, "post_id": 51881338, "comment_id": 90714372, "body": "<code>++</code> takes lists, not <code>Char</code>s, as arguments. <code>a</code> and <code>b</code> are <code>Char</code> values."}, {"owner": {"reputation": 199, "user_id": 9663390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d995050ef3649a918a4dfd4ff15fe905?s=128&d=identicon&r=PG&f=1", "display_name": "compsciman", "link": "https://stackoverflow.com/users/9663390/compsciman"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1534436676, "post_id": 51881338, "comment_id": 90714474, "body": "@WillemVanOnsem sorry, fixed it."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1534439258, "post_id": 51881338, "comment_id": 90715887, "body": "Can&#39;t help bikeshedding: <code>combineIndex p1 p2 = transpose [p1, p2]</code> (though this behaves slightly differently than <code>zip</code> when the arguments have different lengths)."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 5, "last_activity_date": 1534436754, "creation_date": 1534436754, "answer_id": 51881566, "question_id": 51881338, "link": "https://stackoverflow.com/questions/51881338/haskell-cant-zip-strings-then-combine-with-list-comprehension/51881566#51881566", "title": "Haskell can&#39;t zip strings then combine with list comprehension", "body": "<p><code>zip</code> returns tuples of <em><code>Char</code></em> values, not <code>String</code> values, so you can't use <code>++</code> on <code>a</code> and <code>b</code>. You just want an ordinary list.</p>\n\n<pre><code>combineIndex p1 p2 = [[a,b] | (a, b) &lt;- zip p1 p2]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1534437329, "last_edit_date": 1534437329, "creation_date": 1534436803, "answer_id": 51881574, "question_id": 51881338, "link": "https://stackoverflow.com/questions/51881338/haskell-cant-zip-strings-then-combine-with-list-comprehension/51881574#51881574", "title": "Haskell can&#39;t zip strings then combine with list comprehension", "body": "<blockquote>\n  <p>combineIndex <code>\"AB\" \"CD\"</code> should return <code>[\"AC\", \"BD\"]</code> but I just keep getting type errors.</p>\n</blockquote>\n\n<p>Well let us first take a look at the signature of your function:</p>\n\n<pre><code>combineIndex :: String -&gt; String -&gt; <b>[Char]</b>\ncombineIndex pair1 pair2 = [a ++ b | (a, b) &lt;- zip pair1 pair2]</code></pre>\n\n<p>As result type, you specify a <code>[Char]</code>, so a list of <code>Char</code>s (which is in fact a <code>String</code>). But in your result, you want a <em>list of <code>String</code></em>, so the output type should be a <code>[String]</code>. So let us first fix the signature:</p>\n\n<pre><code>combineIndex :: String -&gt; String -&gt; <b>[String]</b>\ncombineIndex pair1 pair2 = [a ++ b | (a, b) &lt;- zip pair1 pair2]</code></pre>\n\n<p>Now in order to create such strings, we might first analyze the types of the variables involved. <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:zip\" rel=\"nofollow noreferrer\"><strong><code>zip :: [a] -&gt; [b] -&gt; [(a, b)]</code></strong></a>, will return a list of 2-tuples <code>[(Char, Char)]</code>. So that means that the <code>a</code> and <code>b</code> in the list comprehension are both <code>Char</code>s. We can convert these chars into a <code>String</code> by constructing a list of two elements <code>[a,b]</code>. So we can fix the function with:</p>\n\n<pre><code>combineIndex :: String -&gt; String -&gt; [String]\ncombineIndex pair1 pair2 = [ <b>[a, b]</b> | (a, b) &lt;- zip pair1 pair2]</code></pre>\n\n<p>The <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:-43--43-\" rel=\"nofollow noreferrer\"><strong><code>(++) :: [a] -&gt; [a] -&gt; [a]</code></strong></a> function will not work here, since it requires two lists (with the <em>same</em> type of elements), and concatenates these lists together. But a <code>Char</code> is not a list, a <code>String</code> is (since <code>type String = [Char]</code>). We could have writteh <code>[a] ++ [b]</code> instead of <code>[a, b]</code>, but this will make it only more <em>noisy</em> and less efficient.</p>\n\n<p>Note that we can <em>generalize</em> the function further to:</p>\n\n<pre><code>combineIndex :: <b>[a]</b> -&gt; <b>[a]</b> -&gt; [<b>[a]</b>]\ncombineIndex pair1 pair2 = [ [a, b] | (a, b) &lt;- zip pair1 pair2]</code></pre>\n\n<p>So now it will work with any two lists that have the same type of objects. For example if we call this with numbers, we get:</p>\n\n<pre><code>Prelude&gt; combineIndex [1,4,2,5] [1,3,0,2]\n[[1,1],[4,3],[2,0],[5,2]]\n</code></pre>\n"}], "owner": {"reputation": 199, "user_id": 9663390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d995050ef3649a918a4dfd4ff15fe905?s=128&d=identicon&r=PG&f=1", "display_name": "compsciman", "link": "https://stackoverflow.com/users/9663390/compsciman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 462, "favorite_count": 0, "accepted_answer_id": 51881574, "answer_count": 2, "score": 0, "last_activity_date": 1534437329, "creation_date": 1534435897, "last_edit_date": 1534436589, "question_id": 51881338, "link": "https://stackoverflow.com/questions/51881338/haskell-cant-zip-strings-then-combine-with-list-comprehension", "title": "Haskell can&#39;t zip strings then combine with list comprehension", "body": "<pre><code>combineIndex :: String -&gt; String -&gt; [Char]\ncombineIndex pair1 pair2 = [a ++ b | (a, b) &lt;- zip pair1 pair2]\n</code></pre>\n\n<p><code>combineIndex \"AB\" \"CD\"</code> should return <code>[\"AC\", \"BD\"]</code> but I just keep getting type errors.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1534444179, "post_id": 51879209, "comment_id": 90718255, "body": "Could you please provide show me/ tell me where i can find resources for exception handling for Haskell?"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 8, "last_activity_date": 1534429653, "last_edit_date": 1534429653, "creation_date": 1534428955, "answer_id": 51879209, "question_id": 51878873, "link": "https://stackoverflow.com/questions/51878873/storing-io-action-result-in-a-let-clause/51879209#51879209", "title": "Storing IO action result in a LET clause", "body": "<p>Use binding, rather than <code>let</code>/<code>=</code>, for IO actions. Like this:</p>\n\n<pre><code>makeDir dirname = do\n    let root = \"D:\\\\\"\n    initialList &lt;- listDirectory root\n    if dirname `elem` initialList then\n        putStrLn (\"Directory found, folder count: \" ++ length initialList)\n    else createDirectory (root ++ dirname)\n    finalList &lt;- listDirectory root\n    return (length finalList &gt; length initialList)\n</code></pre>\n\n<p>However, this technique for creating a directory has some problems. Because you may not be the only program running:</p>\n\n<ol>\n<li>The directory may be created between your first <code>listDirectory</code> and your <code>createDirectory</code>, causing you to try to recreate a directory that already exists and throwing an exception.</li>\n<li>Even if directory creation fails for you, another file may be created between your first <code>listDirectory</code> and your second <code>listDirectory</code>, causing you to return <code>True</code> even though you haven't created the new directory.</li>\n<li>Even if directory creation succeeds for you, another file may be deleted between your first <code>listDirectory</code> and your second <code>listDirectory</code>, causing you to return <code>False</code> even though you have created the new directory.</li>\n</ol>\n\n<p>Additionally, because <code>dirname</code> comes from unsanitized user input:</p>\n\n<ol start=\"4\">\n<li>The <code>dirname `elem` initialList</code> check is looking for the wrong directory name in the wrong directory listing if the user input contains backslashes. For example, if the user enters <code>a\\b</code>, this code will search for <code>a\\b</code> in the directory listing for <code>D:\\</code>, when it should be looking for <code>b</code> in the directory listing for <code>D:\\a</code>. The logic of the <code>length</code> comparison is similarly incorrect for such inputs.</li>\n</ol>\n\n<p>To fix these problems, I recommend either calling <code>createDirectory</code> directly (i.e. with no checks beforehand) and using exception-catching mechanisms to determine whether it failed and whether this is because the directory already exists or calling the existing <code>createDirectoryIfMissing</code> instead.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 51879209, "answer_count": 1, "score": 0, "last_activity_date": 1534429653, "creation_date": 1534427905, "last_edit_date": 1534428747, "question_id": 51878873, "link": "https://stackoverflow.com/questions/51878873/storing-io-action-result-in-a-let-clause", "title": "Storing IO action result in a LET clause", "body": "<p>Hello can someone please explain me how do you store in haskell the result of an action in a <code>let block</code> if you know you are going to use it from that point on (you need the result like a header) ?</p>\n\n<p>In my case i am calling two times <code>listDirectory</code>,i want to save the value of the first call in a variable <code>initialList</code> to later compare its length to a later call of <code>listDirectory</code>.</p>\n\n<p>How can i store the first call of <code>listDirectory</code> in my variable <code>initialList</code>?</p>\n\n<pre><code>module Main where \n\nimport System.IO\nimport System.Directory\nimport DB(db)\nimport Company\n\nmain::IO()\nmain = do\n    putStrLn \"Insert folder for output:\"\n    folder&lt;-getLine\n    makeDir folder&gt;&gt;= \\b -&gt; \n        putStrLn (if b then \"Created\" else \"Existed Already\")\n\nmakeDir::String-&gt;IO  Bool\nmakeDir dirname=let root=\"D:\\\\\"\n                    enumerateDirs=listDirectory root\n                    initialList=&lt;&lt;enumerateDirs in  //how can i store it here?\n\n     if  dirname `elem` initialList then\n        putStrLn \"Directory found , folder count:\"++length initialList\n     else  \n        createDirectory root++dirname&gt;&gt;\n        length enumerateDirs &gt;initialList\n</code></pre>\n"}, {"tags": ["haskell", "conduit", "lazy-io"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534430669, "post_id": 51878473, "comment_id": 90710998, "body": "Lazy IO is not the only way to get your hands on a lazy ByteString."}], "answers": [{"comments": [{"owner": {"reputation": 447, "user_id": 2812201, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a5900e009117b30b90fb5bce64d6fd8e?s=128&d=identicon&r=PG&f=1", "display_name": "user2812201", "link": "https://stackoverflow.com/users/2812201/user2812201"}, "edited": false, "score": 0, "creation_date": 1534439415, "post_id": 51880216, "comment_id": 90715973, "body": "For example, if in a Conduit I receive a chunk of strict ByteString, convert it to lazy and call &#39;setRequestBodyLBS&#39; to send it out, the overhead is negligible because the conversion is O(n); but wouldn&#39;t this be bad for exception handling? I have seen it documented that it is very hard to deal with exception properly when lazy IO is involved."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 447, "user_id": 2812201, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a5900e009117b30b90fb5bce64d6fd8e?s=128&d=identicon&r=PG&f=1", "display_name": "user2812201", "link": "https://stackoverflow.com/users/2812201/user2812201"}, "edited": false, "score": 0, "creation_date": 1534448370, "post_id": 51880216, "comment_id": 90720114, "body": "@user2812201 Using <code>setRequestBodyLBS</code> by itself does not perform lazy I/O, it&#39;s a perfectly normal function that accepts lazy bytestrings. Likewise I doubt that the ByteString that you are receiving come from lazy I/O. In fact, streaming libraries like conduit were invented in large part to avoid the weirdness and pathological cases of lazy I/O! Do not use functions like <code>hGetContents</code>, <code>getContents</code>, and <code>readFile</code> from <code>System.IO</code>. But working with lazy bytestrings obtained by other means is fine."}, {"owner": {"reputation": 447, "user_id": 2812201, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a5900e009117b30b90fb5bce64d6fd8e?s=128&d=identicon&r=PG&f=1", "display_name": "user2812201", "link": "https://stackoverflow.com/users/2812201/user2812201"}, "edited": false, "score": 0, "creation_date": 1534511515, "post_id": 51880216, "comment_id": 90743061, "body": "Thank you so much for clarifying! The data I receive is from the upstream conduit and in fact I receive strict BS and have to convert to LBS to be sent out by <code>setRequestBodyLBS</code>."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 1, "last_activity_date": 1534433142, "last_edit_date": 1534433142, "creation_date": 1534431984, "answer_id": 51880216, "question_id": 51878473, "link": "https://stackoverflow.com/questions/51878473/philosophy-behind-http-simple-setrequestbodylbs/51880216#51880216", "title": "philosophy behind http-simple setRequestBodyLBS", "body": "<p>Internally, a lazy bytestring is like a linked list of strict bytestrings. Moving <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Lazy.html#v:fromStrict\" rel=\"nofollow noreferrer\">from a strict bytestring to a lazy one</a> is cheap (you build a linked list of one element) but going in the <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Lazy.html#v:toStrict\" rel=\"nofollow noreferrer\">reverse direction</a> is costlier (you need to allocate a contiguous chunk of memory for the combined bytes, and then copy each chunk from the list).</p>\n\n<p>Lazy IO uses lazy bytestrings, but they're also useful in other contexts, for example when you have strict chunks arriving from an external source and you want an easy way of accumulating them without having to preallocate a big area of memory or perform frequent reallocations/copies. Instead, you just keep a list of chunks that you later <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Lazy.html#v:fromChunks\" rel=\"nofollow noreferrer\">present</a> as a lazy bytestring. (When list concatenations start getting expensive or the granularity is too small, you can use a <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Builder.html\" rel=\"nofollow noreferrer\"><code>Builder</code></a> as a further optimization.)</p>\n\n<p>Another frequent use case is serialization of some composite data structure (say, aeson's <a href=\"http://hackage.haskell.org/package/aeson-1.4.0.0/docs/Data-Aeson.html#t:Value\" rel=\"nofollow noreferrer\"><code>Value</code></a>). If all you are going to do is dump the generated bytes into a file or a network request, it doesn't make much sense to perform a relatively costly consolidation of the serialized bytes of each sub-component. If needed, you can always perform it later with <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Lazy.html#v:toStrict\" rel=\"nofollow noreferrer\"><code>toStrict</code></a> anyway.</p>\n"}], "owner": {"reputation": 447, "user_id": 2812201, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a5900e009117b30b90fb5bce64d6fd8e?s=128&d=identicon&r=PG&f=1", "display_name": "user2812201", "link": "https://stackoverflow.com/users/2812201/user2812201"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 51880216, "answer_count": 1, "score": 0, "last_activity_date": 1534433142, "creation_date": 1534426792, "question_id": 51878473, "link": "https://stackoverflow.com/questions/51878473/philosophy-behind-http-simple-setrequestbodylbs", "title": "philosophy behind http-simple setRequestBodyLBS", "body": "<p>I am trying to develop an http client by using http-simple library. Some implementation of the library seems confusing to me.</p>\n\n<p>This library makes heavy use of Conduit; however there is also this 'setRequestBodyLBS' function and interestingly, the function 'setRequestBodyBS' is missing here. It is documented that Conduit and lazy IO do not work well together. So my question is, why not the other way around? i.e., implement the  BS version of the function instead of the LBS version? What is the idea behind the choice made here?</p>\n"}, {"tags": ["haskell", "types", "polymorphism"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1534423955, "post_id": 51877506, "comment_id": 90706304, "body": "No, it does not displays the <i>object</i>, it displays the <i>expression</i>. If you for example would query <code>:t head [1]</code>, it will <i>not</i> write <code>1 :: Num a =&gt; a</code>, but <code>head [1] :: Num a =&gt; a</code>. So it basically copies the expression you have written."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1534424052, "post_id": 51877506, "comment_id": 90706369, "body": "Furthermore ghci does some type defaulting which is <i>not</i> done by ghc."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1534426821, "post_id": 51877506, "comment_id": 90708266, "body": "<i>&quot;Haskell&quot;</i> is the language; <i>it</i> doesn&#39;t &quot;display&quot; anything, GHCi does. The book uses <i>Hugs</i> though. When I type <code>[]</code> into the WinHugs prompt, I get <i>exactly</i> the same error as the one shown on the page you&#39;ve copied. but <code>tail [[[1]],[],[[]]]</code> or <code>tail [[[()]],[],[[]]]</code> etc., works."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1534427025, "post_id": 51877506, "comment_id": 90708387, "body": "@WillNess Sorry for the inappropriate terminology; I know how annoying it is from math.SE when some nonmathematician tries to ask a question."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1534427054, "post_id": 51877506, "comment_id": 90708414, "body": "the only problem is if it impedes <i>your</i> understanding. Here, it&#39;d make you ask, what implementation is used by the book?"}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1534427116, "post_id": 51877506, "comment_id": 90708456, "body": "@WillNess Totally agree, thanks for point out."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1534424382, "creation_date": 1534424382, "answer_id": 51877682, "question_id": 51877506, "link": "https://stackoverflow.com/questions/51877506/can-haskell-display-an-object-of-polymorphic-type/51877682#51877682", "title": "Can Haskell display an object of polymorphic type ?", "body": "<p>This is the result of defaulting (the process of turning a class-polymorphic expression into a monomorphic one if it only needs to be used at a single type) plus <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#extension-ExtendedDefaultRules\" rel=\"nofollow noreferrer\">ghci's extended default rules</a>. Your book may have a section on defaulting, though of course ghci's extra defaulting rules will not be described there. With extended defaulting, the polymorphic type <code>Show a =&gt; [a]</code> is defaulted to the monomorphic type <code>[()]</code> before printing. You can reproduce the book's error (well, a similar one, anyway) by disabling extended defaulting:</p>\n\n<pre><code>&gt; :set -XNoExtendedDefaultRules\n&gt; []\n&lt;interactive&gt;:2:1: error:\n    \u2022 Ambiguous type variable \u2018a0\u2019 arising from a use of \u2018print\u2019\n      prevents the constraint \u2018(Show a0)\u2019 from being solved.\n      Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.\n      These potential instances exist:\n        instance Show Ordering -- Defined in \u2018GHC.Show\u2019\n        instance Show Integer -- Defined in \u2018GHC.Show\u2019\n        instance Show a =&gt; Show (Maybe a) -- Defined in \u2018GHC.Show\u2019\n        ...plus 22 others\n        ...plus 11 instances involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n"}], "owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 51877682, "answer_count": 1, "score": 1, "last_activity_date": 1534424382, "creation_date": 1534423762, "question_id": 51877506, "link": "https://stackoverflow.com/questions/51877506/can-haskell-display-an-object-of-polymorphic-type", "title": "Can Haskell display an object of polymorphic type ?", "body": "<p>In the book of <em>The Haskell Road to Logic, Math, and Programming</em> by Doets, at page 152, it is given that</p>\n\n<p><a href=\"https://i.stack.imgur.com/hccPD.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/hccPD.png\" alt=\"enter image description here\"></a></p>\n\n<p>However, when I type <code>[]</code> into ghc, I get <code>[]</code> and </p>\n\n<pre><code>$&gt; :t []\n[] :: [a]\n</code></pre>\n\n<p><strong>so Haskell does display a polymorphic data type, so am I missing something in here, or does the book ?</strong> </p>\n\n<p>Maybe it is something that is added later into the Haskell; the book is written in 2004.</p>\n"}, {"tags": ["haskell", "haskell-lens", "state-monad", "lenses"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534422398, "post_id": 51876059, "comment_id": 90705246, "body": "Why does it need an optic at all as opposed to a plain function of type <code>SolarSystem -&gt; Expedition</code>? You don&#39;t appear to be doing anything interesting with the updated context once the nested action is done (unlike <code>zoom</code>, which uses both directions of its optic argument)."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534422454, "post_id": 51876059, "comment_id": 90705282, "body": "@DanielWagner because the state updates to the <code>SolarSystem</code> portion of the local action should also propagate outwards."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534422491, "post_id": 51876059, "comment_id": 90705312, "body": "Oh, of course. Well now I just feel silly."}], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 4, "last_activity_date": 1534430904, "creation_date": 1534430904, "answer_id": 51879852, "question_id": 51876059, "link": "https://stackoverflow.com/questions/51876059/is-there-a-dual-to-zooming/51879852#51879852", "title": "Is there a \u201cdual\u201d to zooming?", "body": "<p>How about this function?</p>\n\n<pre><code>cram :: Monad m =&gt; Iso' s' (s,x) -&gt; x -&gt; StateT s' m r -&gt; StateT s m r\ncram someiso extra action =\n    StateT (\\small0 -&gt; do let big0 = view (from someiso) (small0,extra)\n                          (r,big) &lt;- runStateT action big0\n                          let (small,_) = view someiso big\n                          pure (r,small))\n</code></pre>\n\n<p>\"If you convince me that the expanded state is the small state plus extra stuff, and you give me some initial extra stuff, I can cram the expanded-state computation into the small-state one.\"</p>\n\n<p>You would have to write an <code>Iso' Expedition (SolarSystem,Char)</code>.</p>\n"}], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 51879852, "answer_count": 1, "score": 7, "last_activity_date": 1534430904, "creation_date": 1534419196, "last_edit_date": 1534419880, "question_id": 51876059, "link": "https://stackoverflow.com/questions/51876059/is-there-a-dual-to-zooming", "title": "Is there a \u201cdual\u201d to zooming?", "body": "<p><a href=\"http://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Zoom.html\" rel=\"noreferrer\"><code>zoom</code></a> allows us to use a state action that only uses some state variables, in a context where more variables are actually defined.</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}\n\nimport Control.Lens\n\nimport Control.Monad.Trans.State\nimport Control.Monad.IO.Class\n\ndata Galaxy = Galaxy {\n    _solarSys :: SolarSystem\n  , _otherStars :: String\n  } deriving (Show)\ndata SolarSystem = SolarSystem {\n    _sun :: Float\n  , _planets :: Int\n  } deriving (Show)\n\nmakeLenses ''SolarSystem\nmakeLenses ''Galaxy\n\nmain = (`runStateT`Galaxy (SolarSystem 2e+30 8) \"\ud83c\udf0c\ud83c\udf0c\ud83c\udf0c\") $ do\n   zoom solarSys $ do\n      sun -= 1e+23\n      planets += 1\n   liftIO . print =&lt;&lt; get\n</code></pre>\n\n<pre>Galaxy {_solarSys = SolarSystem {_sun = 1.9999999e30, _planets = 9}, _otherStars = \"\ud83c\udf0c\ud83c\udf0c\ud83c\udf0c\"}</pre>\n\n<p>But what if I want to do some stuff in an environment with only some state variables defined, and then run a computation that has some extra, local state-variables? Like</p>\n\n<pre><code>data Expedition = Expedition {\n    _environment :: SolarSystem\n  , _spacecraft :: Char\n  } deriving (Show)\nmakeLenses ''Exploration\n\nmain = (`runStateT`Galaxy (SolarSystem 2e+30 8) \"Milky\") $ do\n   zoom solarSys $ do\n      spectralFilter environment (spacecraft ???~= '\ud83d\ude80') $ do\n         spacecraft .= '\ud83d\udef0\ufe0f'\n         environment . planets -= 1\n   liftIO . print =&lt;&lt; get\n</code></pre>\n\n<p>I suspect the initialisation of <code>spacecraft</code> would actually require some other optic, but I can't see which.</p>\n"}, {"tags": ["haskell", "gadt", "servant"], "answers": [{"comments": [{"owner": {"reputation": 1044, "user_id": 193424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11ba6dfa8271fb1cd0c475a2c0626853?s=128&d=identicon&r=PG", "display_name": "Alp Mestanogullari", "link": "https://stackoverflow.com/users/193424/alp-mestanogullari"}, "edited": false, "score": 2, "creation_date": 1534590580, "post_id": 51892552, "comment_id": 90766114, "body": "(author of the post here) This is exactly what I had in mind. You&#39;d want to expand this further if you were to add query parameters and what not, but this is very much the idea I had in mind. I hesitated to include code for it because it would have made the post a lot longer."}, {"owner": {"reputation": 1009, "user_id": 848808, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f04493e2e65773c7ae616dbe1cbebabe?s=128&d=identicon&r=PG", "display_name": "Nick Ager", "link": "https://stackoverflow.com/users/848808/nick-ager"}, "edited": false, "score": 0, "creation_date": 1534666802, "post_id": 51892552, "comment_id": 90781504, "body": "Thanks both really helpful as well as being cunning and clever,  At my current level of Haskell proficiency I couldn&#39;t have come up with that solution without your help. Is this a common GADT pattern? All the GADT examples I&#39;ve seen are based on parsing expressions and I struggle to make the jump from those to this."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1009, "user_id": 848808, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f04493e2e65773c7ae616dbe1cbebabe?s=128&d=identicon&r=PG", "display_name": "Nick Ager", "link": "https://stackoverflow.com/users/848808/nick-ager"}, "edited": false, "score": 1, "creation_date": 1534669140, "post_id": 51892552, "comment_id": 90782013, "body": "@NickAger I don&#39;t how much common it is, but probably it&#39;s fairly common. GADTs are a powerful and complex language feature: they are often used to encode some kind of invariant, so that the type checker enforces it. This, in general, can be a daunting task for the programmer. IMHO, only relatively few programmers have a solid understanding of invariants. And even in that case, encoding it in a GADT requires some creativity. GADTs are not that hard to be used, but they require some time and effort to be picked up. It&#39;s only a matter of experience."}, {"owner": {"reputation": 1009, "user_id": 848808, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f04493e2e65773c7ae616dbe1cbebabe?s=128&d=identicon&r=PG", "display_name": "Nick Ager", "link": "https://stackoverflow.com/users/848808/nick-ager"}, "edited": false, "score": 0, "creation_date": 1534678553, "post_id": 51892552, "comment_id": 90784199, "body": "@chi next naive question - what is the invariant that is being encoded in this GADT? Thanks."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534686448, "post_id": 51892552, "comment_id": 90786348, "body": "Roughly, the invariant is that <code>linkTo</code> takes as many string arguments as the captures in the endpoint value."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1534498777, "creation_date": 1534498777, "answer_id": 51892552, "question_id": 51875537, "link": "https://stackoverflow.com/questions/51875537/servant-like-implementation-with-gadts/51892552#51892552", "title": "Servant-like implementation with GADTs", "body": "<p>I am not familiar with Servant, but perhaps the quote was referring to some GADT like the following one. The idea is to define a type <code>Endpoint t</code> where <code>t</code> is of the form <code>String -&gt; String -&gt; ... -&gt; Link</code> where all the string arguments correspond to the captures. Once this is done, then <code>toLink</code> is simply of type <code>Endpoint t -&gt; t</code>.</p>\n\n<p>I did not use type classes.</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\nmodule ServantEndpoint where\n\ntype Link = [String]\n\ndata Method = Get | Post\n\ndata Endpoint t where\n   Static :: String -&gt; Endpoint t -&gt; Endpoint t\n   Capture :: Endpoint t -&gt; Endpoint (String -&gt; t)\n   Verb :: Method -&gt; Endpoint Link\n\nlinkTo :: Endpoint t -&gt; t\nlinkTo e = go e []\n   where\n   go :: Endpoint t -&gt; Link -&gt; t\n   go (Static str rest) l = go rest (str : l)\n   go (Capture rest)    l = \\s -&gt; go rest (s : l)\n   go (Verb _method)    l = reverse l\n</code></pre>\n\n<p>A small example:</p>\n\n<pre><code>test :: Link\ntest = f \"capture1\" \"capture2\"\n   where f = linkTo (Capture (Static \"static1\" (Capture (Static \"static2\" (Verb Get)))))\n-- output: [\"capture1\",\"static1\",\"capture2\",\"static2\"]\n</code></pre>\n"}], "owner": {"reputation": 1009, "user_id": 848808, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f04493e2e65773c7ae616dbe1cbebabe?s=128&d=identicon&r=PG", "display_name": "Nick Ager", "link": "https://stackoverflow.com/users/848808/nick-ager"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 51892552, "answer_count": 1, "score": 2, "last_activity_date": 1534498777, "creation_date": 1534417456, "last_edit_date": 1534418695, "question_id": 51875537, "link": "https://stackoverflow.com/questions/51875537/servant-like-implementation-with-gadts", "title": "Servant-like implementation with GADTs", "body": "<p>I'm reading the excellent <a href=\"https://haskell-servant.github.io/posts/2018-07-12-servant-dsl-typelevel.html\" rel=\"nofollow noreferrer\">Why is servant a type-level DSL?</a>. I've got to the section where the problem with the implementation presented so far is that the number of captures in an <code>Endpoint</code> can vary and there is no way of implementing a total a link generating function without dependant types. </p>\n\n<p>The <code>Endpoint</code> definition is:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Method = Get | Post\n\ndata Endpoint = Static String Endpoint\n              | Capture Endpoint\n              | Verb Method\n</code></pre>\n\n<p>and example definitions are:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>getHello :: Endpoint\ngetHello = Static \"hello\" (Capture (Verb Get))\n\ntwoCaptures :: Endpoint\ntwoCaptures = Capture (Capture (Verb Post))\n\nnoCaptures :: Endpoint\nnoCaptures = Static \"hello\" (Verb Post)\n</code></pre>\n\n<p>and the <strong>non-total</strong> link making function is:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>linkTo :: Endpoint -&gt; [String] -&gt; Link\nlinkTo (Static str rest) captureValues  = str : linkTo rest captureValues\nlinkTo (Capture rest)    (c : cs)       = c   : linkTo rest cs\nlinkTo (Capture rest)    []             = error \"linkTo: capture value needed but the list is empty\" -- :-(\nlinkTo (Verb method)     _              = []\n</code></pre>\n\n<p>I'm intrigued by the following:</p>\n\n<blockquote>\n  <p>Fortunately, GADTs can help here. We could turn <code>Endpoint</code> into a GADT\n  that tracks captures and then use some type-level computations to get\n  the type of the link-making function from our list of captures, as\n  well as define the link making function through typeclass instances\n  that would go through the captures and add an argument for each of\n  them ...  a GADT-based approach would work well (in addition to being more approachable) for very stable domains, and is not considered here because of the kind of flexibility we are asking for.</p>\n</blockquote>\n\n<p>I'm interested in experimenting with the GADT approach however I could do with some hints for how to create a GADT which will <em>\"track captures and then use some type-level computations to get the type of the link-making function from our list of captures\"</em> </p>\n\n<p>Can anyone give me some hints for how to get started with a GADT version. Thanks.</p>\n"}, {"tags": ["haskell", "state-monad", "non-deterministic", "st-monad"], "answers": [{"comments": [{"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534418454, "post_id": 51875456, "comment_id": 90702933, "body": "<a href=\"https://github.com/ekmett/lens/wiki/Operators\" rel=\"nofollow noreferrer\">Cheat sheet for <code>Lens</code> operations</a>"}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534419110, "post_id": 51875456, "comment_id": 90703291, "body": "Thanks. To summarize: you&#39;re saying I should implement a poor man&#39;s <code>STT</code> myself. I guess, if I have up front a fixed set of types of which I want to instantiate variables, I can have in my state a map for each of these types, plus a counter allowing me to generate new keys."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534419289, "post_id": 51875456, "comment_id": 90703390, "body": "@dremodaris yeah, something with a map might be a pragmatic solution, though it&#39;s obviously pretty inelegant and subverts compile-time safety."}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534419937, "post_id": 51875456, "comment_id": 90703740, "body": "Surely the unsafe aspect can be wrapped up in the internals of the monad transformer? The <code>ST</code> monad itself is not even pure."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534420096, "post_id": 51875456, "comment_id": 90703833, "body": "Interesting idea. Yeah, wrapping a weakly-typed map to something that <i>looks</i> like <code>ST</code>, but is actually <code>StateT</code> could be quite useful."}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534420563, "post_id": 51875456, "comment_id": 90704139, "body": "What do you mean by &#39;weakly-typed&#39; exactly?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534420856, "post_id": 51875456, "comment_id": 90704295, "body": "See other answer."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 4, "last_activity_date": 1534417212, "creation_date": 1534417212, "answer_id": 51875456, "question_id": 51874362, "link": "https://stackoverflow.com/questions/51874362/combine-st-and-list-monads-in-haskell/51875456#51875456", "title": "Combine ST and List monads in Haskell", "body": "<p>You won't get around <code>StateT</code>, because for this nondeterminism stuff the compiler needs to know always which \u201cvariables\u201d need to be branched out. This is not possible when the variables could be anywhere lurking as <code>STRef</code>s.</p>\n\n<p>To still get \u201cmultiple variables of different types\u201d, you'll need to pack them in a suitable record and use that as the single actual state variable. Seems awkward to deal with such a state object? Well, it's not that bad when using lenses to access the \u201cindividual variables\u201d.</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}\n\nimport Control.Lens\nimport Data.Monoid\n\nimport Control.Monad.Trans.State\nimport Control.Monad.ListT\nimport Control.Monad.Trans.Class\nimport Control.Monad.IO.Class\n\ndata Stobjs = Stobjs {\n    _x :: Int\n  , _y :: String\n  }\n\nmakeLenses ''Stobjs\n\nmain = runListT . (`runStateT`Stobjs 10 \"\") $ do\n   \u03b4x &lt;- lift $ return 1 &lt;&gt; return 2 &lt;&gt; return 3\n   xnow &lt;- x &lt;+= \u03b4x\n   y .= show xnow\n   if xnow &gt; 11 then liftIO . putStrLn =&lt;&lt; use y\n                else lift mempty\n</code></pre>\n\n<p>(outputs <code>12</code>).</p>\n\n<p>\u201cAble to instantiate them at will\u201d is a bit more tricky, because adding variables is only possible through changing the state object, which means you'll not really be in the same monad anymore. Lens has the notion of <a href=\"http://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Zoom.html\" rel=\"nofollow noreferrer\">zooming</a> which could be used \u2013 splitting up the state object into \u201cscopes\u201d and using the computations where only some of the variables are defined as zoomed in onto that scope.</p>\n\n<p>To make this really convenient you'd need records that can be extended at will. I really liked Nikita Volkovs <a href=\"https://hackage.haskell.org/package/record-0.4.2\" rel=\"nofollow noreferrer\"><code>record</code> library approach</a>, this doesn't seem to have been advanced any further lately. <a href=\"http://hackage.haskell.org/package/vinyl\" rel=\"nofollow noreferrer\">Vinyl</a> also goes in that direction, but I haven't looked into it much.</p>\n\n<p>In the future, we will have the <a href=\"https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0002-overloaded-record-fields.rst\" rel=\"nofollow noreferrer\"><code>OverloadedRecordFields</code> extension</a> that will help with this kind of stuff.</p>\n"}, {"comments": [{"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534422767, "post_id": 51876574, "comment_id": 90705509, "body": "Ah, I see what you mean. I was thinking to use instead <code>StateT (IntMap s) m a</code>, where <code>s</code> is an additional argument to <code>STT&#39;</code>, so if you&#39;d want to be able to have variables of types <code>Bool</code> and <code>String</code>, you&#39;d need to use the monad <code>STT&#39; Bool (STT&#39; String m)</code>."}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1534422813, "post_id": 51876574, "comment_id": 90705537, "body": "The following remark is unclear to me though: &quot;if you create more variables in some local scope than expected, then you might leak out incorrect indices&quot;. Are you referring to the scenario where I create more references than there are integers available?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 1, "creation_date": 1534423040, "post_id": 51876574, "comment_id": 90705679, "body": "Yeah I didn&#39;t give this much thought, just had a fishy feeling. The real problem is rather that if you execute an action with <code>newSTTRef</code> in a loop, it&#39;ll just keep pushing more state-variables onto the \u201cstack\u201d \u2013 there&#39;s no garbage-collection."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 2, "last_activity_date": 1535723578, "last_edit_date": 1535723578, "creation_date": 1534420846, "answer_id": 51876574, "question_id": 51874362, "link": "https://stackoverflow.com/questions/51874362/combine-st-and-list-monads-in-haskell/51876574#51876574", "title": "Combine ST and List monads in Haskell", "body": "<p><em>This answer not recommended, see <a href=\"https://stackoverflow.com/a/51875456/745903\">the other one</a></em>.</p>\n\n<hr>\n\n<p>To expand on your idea to wrap up a <code>StateT</code> with a weakly-typed map of variables, this would look something like the following:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\nimport Unsafe.Coerce\nimport Data.IntMap\n\ndata WeakTyped where\n   WeakTyped :: a -&gt; WeakTyped\n\nnewtype STT' m a = STT' { weakTypState :: StateT (IntMap WeakTyped) m a }\n  deriving (Functor, Applicative, Monad)\n\nnewtype STT'Ref a = STT'Ref { mapIndex :: Int }\n\nnewSTTRef :: Monad m =&gt; a -&gt; STT' m (STT'Ref a)\nnewSTTRef x = STT' $ do\n   i &lt;- (+1) . maximum . keys &lt;$&gt; get\n   modify $ insert i x\n   return $ STT'Ref i\n\nreadSTTRef :: Monad m =&gt; STT'Ref a -&gt; STT' m a\nreadSTTRef (STT'Ref i) = STT' $ do\n   unsafeCoerce . (!i) &lt;$&gt; get\n</code></pre>\n\n<p>I'm not convinced that this would actually be smart though. These <code>STT'Ref</code>s aren't properly handled by the Haskell runtime, in particular state variables won't be garbage collected. Thus, if you run an action that uses <code>newSTTRef</code> in a loop, it will actually grow the <code>IntMap</code> in each iteration without ever freeing up the variables that have already gone \u201cout of scope\u201d (i.e. don't have any references pointing to them).</p>\n\n<p>It might be possible to add an actual garbage collector to all of this, but it would make it very much more complicated.</p>\n"}], "owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 296, "favorite_count": 0, "accepted_answer_id": 51875456, "answer_count": 2, "score": 5, "last_activity_date": 1612207613, "creation_date": 1534413579, "last_edit_date": 1612207613, "question_id": 51874362, "link": "https://stackoverflow.com/questions/51874362/combine-st-and-list-monads-in-haskell", "title": "Combine ST and List monads in Haskell", "body": "<p>Using the <code>StateT</code> monad transformer, I can create the type <code>StateT s [] a</code>, which is isomorphic to <code>s -&gt; [(a, s)]</code>. Now I would prefer to use the <a href=\"http://hackage.haskell.org/package/STMonadTrans-0.4.3/docs/Control-Monad-ST-Trans.html\" rel=\"nofollow noreferrer\"><code>STT</code> monad transformer</a> instead, as I would like to have multiple mutable variables of different types, and would like to be able to instantiate them at will, depending on the results of earlier computations.</p>\n<p>However, the linked documentation for <code>STT</code> mentions explicitly:</p>\n<blockquote>\n<p>This monad transformer should not be used with monads that can contain multiple answers, like the list monad. The reason is that the state token will be duplicated across the different answers and this causes Bad Things to happen (such as loss of referential transparency). Safe monads include the monads State, Reader, Writer, Maybe and combinations of their corresponding monad transformers.</p>\n</blockquote>\n<p>So what are my options?</p>\n<p>To be entirely clear:</p>\n<ul>\n<li>What I'm after, is non-determinism. I want to be able to fork my computation, giving each branch its own copy of the entire state.</li>\n<li>I don't mind much for parallelism, as performance is not my greatest concern.</li>\n<li>What I'm <em>not</em> after is concurrency: different branches of computation should not share mutable variables; rather, they should all work on their own copy of the original mutable variable.</li>\n</ul>\n<p>EDIT:\n(Edit to edit: the following counterexample is invalid, as <code>ListT</code> should not be applied to the non-commutative monads <code>ST</code> and <code>State</code>.)\nI've come to realize that an <code>STT</code> monad transformer that behaves along the lines of <code>StateT</code> is inherently unsafe. With it, we could build a type <code>STT sloc (ListT (ST sglob)) a</code>. Here, <code>sglob</code> is the name of the global state, while <code>sloc</code> is the name of the local state.*\nNow we can use the global state to exchange local state references between threads, thus potentially obtaining references to uninitialized variables.</p>\n<p>*For comparison, the corresponding <code>StateT</code> construction is <code>StateT sloc (ListT (State sglob)) a</code>, which is isomorphic to <code>sloc -&gt; sglob -&gt; ([(a, sloc)], sglob)</code>.</p>\n"}, {"tags": ["haskell", "pcre", "rasa-nlu", "duckling"], "comments": [{"owner": {"reputation": 372, "user_id": 4629268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db4ff66edb9c4a42c8a103347044abd8?s=128&d=identicon&r=PG&f=1", "display_name": "neel", "link": "https://stackoverflow.com/users/4629268/neel"}, "edited": false, "score": 0, "creation_date": 1534409111, "post_id": 51871998, "comment_id": 90697423, "body": "Kindly help! I have also installed visual c++. This is also no help!!"}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1534412928, "post_id": 51871998, "comment_id": 90699712, "body": "AFAIR, you need to use <code>stack exec pacman</code> to install pcre."}, {"owner": {"reputation": 372, "user_id": 4629268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db4ff66edb9c4a42c8a103347044abd8?s=128&d=identicon&r=PG&f=1", "display_name": "neel", "link": "https://stackoverflow.com/users/4629268/neel"}, "reply_to_user": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1534413947, "post_id": 51871998, "comment_id": 90700316, "body": "@arrowd It is of no help, and moreover while executing stack exec pacman it throws error <code>error: no operation specified (use -h for help)</code>"}, {"owner": {"reputation": 372, "user_id": 4629268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db4ff66edb9c4a42c8a103347044abd8?s=128&d=identicon&r=PG&f=1", "display_name": "neel", "link": "https://stackoverflow.com/users/4629268/neel"}, "reply_to_user": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1534414117, "post_id": 51871998, "comment_id": 90700431, "body": "@arrowd : I think I need to pass something else while executing. It would be great if you could help me"}, {"owner": {"reputation": 372, "user_id": 4629268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db4ff66edb9c4a42c8a103347044abd8?s=128&d=identicon&r=PG&f=1", "display_name": "neel", "link": "https://stackoverflow.com/users/4629268/neel"}, "reply_to_user": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1534420326, "post_id": 51871998, "comment_id": 90703982, "body": "I have tried to install regex-pcre in C:/sr directory as well. It is throwing error &quot; Missing or bad C library : pcre"}, {"owner": {"reputation": 372, "user_id": 4629268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db4ff66edb9c4a42c8a103347044abd8?s=128&d=identicon&r=PG&f=1", "display_name": "neel", "link": "https://stackoverflow.com/users/4629268/neel"}, "reply_to_user": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1534420456, "post_id": 51871998, "comment_id": 90704075, "body": "Tried to install pcre using Msys, it has installed also but dont know where it has been installed! what is the path!!!"}, {"owner": {"reputation": 1991, "user_id": 1408476, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/96e188c5f337c4c4d3b4bcd2ba3f2641?s=128&d=identicon&r=PG", "display_name": "Caleb Keller", "link": "https://stackoverflow.com/users/1408476/caleb-keller"}, "edited": false, "score": 0, "creation_date": 1534440578, "post_id": 51871998, "comment_id": 90716505, "body": "why not run Duckling in Docker?"}], "answers": [{"comments": [{"owner": {"reputation": 372, "user_id": 4629268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db4ff66edb9c4a42c8a103347044abd8?s=128&d=identicon&r=PG&f=1", "display_name": "neel", "link": "https://stackoverflow.com/users/4629268/neel"}, "edited": false, "score": 1, "creation_date": 1534504438, "post_id": 51880065, "comment_id": 90738931, "body": "Thanks @John F. Miller for your help. I have tried a lot on this now  I am moving to ubuntu cloud instance so that things would be easier. Hope my decision is correct!"}, {"owner": {"reputation": 1266, "user_id": 6084517, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-yfmBFvUUl9c/AAAAAAAAAAI/AAAAAAAAAZs/j-jEW3Y-TiE/photo.jpg?sz=128", "display_name": "Nathan Chappell", "link": "https://stackoverflow.com/users/6084517/nathan-chappell"}, "edited": false, "score": 0, "creation_date": 1603189914, "post_id": 51880065, "comment_id": 113951429, "body": "<i>If you have trouble on unix anyways...</i>, you may need to run <code>sudo apt install libpcre3-dev</code>"}], "tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": false, "score": 3, "last_activity_date": 1534431506, "creation_date": 1534431506, "answer_id": 51880065, "question_id": 51871998, "link": "https://stackoverflow.com/questions/51871998/duckling-installation-on-windows-missing-c-library-pcre-on-windows/51880065#51880065", "title": "Duckling Installation on Windows - Missing C library: pcre on windows", "body": "<p>Welcome to Unix C header hell.</p>\n\n<p>Like far too many Haskell libraries and executables, Duckling depends on having a complete set of Unix C libraries.  PCRE, the Perl Compatible Regular Expressions library is standard on most Unix builds, but needs to be installed manually on Microsoft Windows.</p>\n\n<p>But, here is the thing: PCRE then depends on a bunch of other tools that are also always there in Unix such as <code>make</code> and <code>gcc</code> and the C header files, etc...</p>\n\n<p>In order to build Duckling on Microsoft Windows, you will need to use one of the hand full of tools that provide a Unix like environment within which GHC can run.</p>\n\n<p>I see that you have already discovered MSys and installed PCRE in it.  The next step is to get <code>stack</code> running withing this Unix like environment so that it's version of ghc can find all the libraries it needs.  My experience is that this usually means reinstalling stack from the MSys bash prompt -- or at least relocating the stack.exe file to the <code>/usr/local/bin</code> directory, then running your stack commands from the MSys bash prompt and not the window command prompt.</p>\n\n<p>If this doesn't work, try asking a new question about how to get stack running with the Unix header files on windows or searching other questions on that topic.</p>\n"}, {"tags": [], "owner": {"reputation": 329, "user_id": 608034, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3b7ae1344760f562e5dfda8c6ff6ed1?s=128&d=identicon&r=PG", "display_name": "vajanko", "link": "https://stackoverflow.com/users/608034/vajanko"}, "is_accepted": false, "score": 2, "last_activity_date": 1547054554, "last_edit_date": 1592644375, "creation_date": 1547054554, "answer_id": 54115366, "question_id": 51871998, "link": "https://stackoverflow.com/questions/51871998/duckling-installation-on-windows-missing-c-library-pcre-on-windows/54115366#54115366", "title": "Duckling Installation on Windows - Missing C library: pcre on windows", "body": "<p>Open duckling.cabal file and replace regex-pcre with regex-pcre-builtin\n<a href=\"https://i.stack.imgur.com/Jx1xw.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Jx1xw.png\" alt=\"git diff of duckling.cabal\" /></a></p>\n<p>See here: <a href=\"http://hackage.haskell.org/package/regex-pcre-builtin\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/regex-pcre-builtin</a></p>\n<p>Now <code>stack build</code> should finish successfully</p>\n"}], "owner": {"reputation": 372, "user_id": 4629268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db4ff66edb9c4a42c8a103347044abd8?s=128&d=identicon&r=PG&f=1", "display_name": "neel", "link": "https://stackoverflow.com/users/4629268/neel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1283, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1547054554, "creation_date": 1534405331, "last_edit_date": 1534405647, "question_id": 51871998, "link": "https://stackoverflow.com/questions/51871998/duckling-installation-on-windows-missing-c-library-pcre-on-windows", "title": "Duckling Installation on Windows - Missing C library: pcre on windows", "body": "<p>I am new to haskell. I am using stack for installing a library called duckling. On the github the author has asked to install the duckling using the stack. I have installed the stack and referring the github page for installation <a href=\"https://github.com/facebook/duckling\" rel=\"nofollow noreferrer\">github link for duckling</a>.</p>\n\n<p>Step - 1 for installaltion\n- $stack build\n In this step I am getting an error of missing C library : pcre</p>\n\n<p>I have tried to solve this issue but I am not able to figure it out what to do.\nCouple of things which I have done like downloading the pcre-8.42 from pcre.org and extracted the files in the folder pcre-8.42. \nI dont know how to solve from here.</p>\n\n<p>Kindly help me, I have almost spend 4-5 hours on this and I am heading no where. </p>\n\n<p><a href=\"https://i.stack.imgur.com/OEiTi.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/OEiTi.png\" alt=\"enter image description here\"></a></p>\n\n<p><a href=\"https://i.stack.imgur.com/rTkq1.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/rTkq1.png\" alt=\"enter image description here\"></a></p>\n\n<p>Thanks,\nNeel</p>\n"}]