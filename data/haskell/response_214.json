[{"tags": ["haskell", "ghci", "haskell-platform"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1550095018, "post_id": 54678836, "comment_id": 96149022, "body": "Keep in mind that the performance in GHCi can be vastly different from the one obtained by compiling the code with GHC and turning optimization on. If you want serious benchmarking, compile the code and use something like <code>criterion</code>."}], "answers": [{"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 3, "last_activity_date": 1550090484, "creation_date": 1550090484, "answer_id": 54679072, "question_id": 54678836, "link": "https://stackoverflow.com/questions/54678836/benchmark-in-ghci-how-can-i-enable-to-show-number-of-reductions-for-expression/54679072#54679072", "title": "Benchmark in GHCi, how can I enable to show number of reductions for expression?", "body": "<p>Hugs had (has?) such an option. </p>\n\n<p>In GHCi, you can enter <code>Prelude&gt; :set +s</code> to print rough timings after each evaluation. Then apply <a href=\"https://en.wikipedia.org/wiki/Analysis_of_algorithms#Empirical_orders_of_growth\" rel=\"nofollow noreferrer\">empirical orders of growth</a> analysis as needed. </p>\n\n<p>For proper testing compile with the -O2 flag, and run standalone executables at your shell prompt with \"+RTS -s\" option to get the stats. Also, there's Criterion package.</p>\n"}], "owner": {"reputation": 2352, "user_id": 4518180, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/HQeHB.png?s=128&g=1", "display_name": "mkUltra", "link": "https://stackoverflow.com/users/4518180/mkultra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 54679072, "answer_count": 1, "score": 1, "last_activity_date": 1550090484, "creation_date": 1550089487, "last_edit_date": 1550089907, "question_id": 54678836, "link": "https://stackoverflow.com/questions/54678836/benchmark-in-ghci-how-can-i-enable-to-show-number-of-reductions-for-expression", "title": "Benchmark in GHCi, how can I enable to show number of reductions for expression?", "body": "<p>I am playing with GHCi and I wondering how can I enable in GHCi to raise the number of reduction in expression to compare different solutions?</p>\n"}, {"tags": ["haskell", "filter", "tuples", "string-length"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1550088581, "post_id": 54678629, "comment_id": 96146161, "body": "It should be <code>(&gt;4) . length . snd</code>."}], "answers": [{"tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": false, "score": 3, "last_activity_date": 1550092438, "creation_date": 1550092438, "answer_id": 54679514, "question_id": 54678629, "link": "https://stackoverflow.com/questions/54678629/filter-list-of-tuples-with-longest-string/54679514#54679514", "title": "Filter List of Tuples with longest String", "body": "<pre><code>filter ((&gt;4).(length snd)) lst\n</code></pre>\n\n<p>It looks like you have the right idea with this, but as you note it doesn't compile. Although when I try, the error is different from the one you mention about <code>length</code> having too many arguments - you've given it one argument here, which is the correct number. However, the argument you've given it is a function (<code>snd</code>, which gives you the second element of a pair), and it expects a list - since there is no way to consider a function as a list, the compiler rejects this as meaningless. (Even if this were not a problem, <code>length snd</code> would result in an <code>Int</code>, and you can't use this as an argument of the <code>.</code> operator, which needs a function on either side. And this is what GHC actually complains about when I try to run your code: <code>Couldn't match expected type '([Char], [Char]) -&gt; Integer' with actual type 'Int' In the second argument of '(.)', namely '(length snd)'</code>) </p>\n\n<p>@WillemVanOnsem has already shown you how to fix it, so let's take a look at that. It is indeed quite similar to yours:</p>\n\n<pre><code>filter ((&gt;4) . length . snd)) lst\n</code></pre>\n\n<p>The <code>.</code> operator, as you seem to know, applies first the function to its right, then the function to its left to the result. So the expression <code>(&gt;4) . length . snd</code> means, given a pair, take the second element, then take its length (it's assumed it is a list, or this won't compile), then checks whether the resulting number is greater than 4 or not. In other words, <code>(&gt;4) . length . snd)</code> is a predicate of type <code>(a, [b]) -&gt; Bool</code> which tells you whether the list in the second slot of the pair has more than 4 elements or not. [The term \"predicate\" just means any function which returns a <code>Bool</code> - it's a test applied to elements of the type you're interested in, as used in <code>filter</code> and many related functions.] And this of course is exactly what you're aiming for.</p>\n\n<p>So to sum up, the only difference between your answer and the correct one is that between <code>length snd</code> (giving the <code>snd</code> function as an argument to <code>length</code>, which is meaningless), and <code>length . snd</code> (the function given by applying first <code>snd</code>, then <code>length</code> to its result). They may look similar, but they actually mean very different things.</p>\n\n<p>I'm sure that with a bit more practice you'll be able to get things like this right on your own, and understand what GHC is telling you when it gives you a compilation error.</p>\n\n<p>(PS: your code actually fails in the first place because <code>a</code>, <code>rr</code> etc. are variables that you haven't bound to any values. I've assumed that they are all meant to be strings, especially as you refer to taking the length of the <code>r..r</code> values - in this case they need to be enclosed in double quotes: <code>(\"a\", \"rr\")</code> and so on.</p>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1550184485, "creation_date": 1550184485, "answer_id": 54700303, "question_id": 54678629, "link": "https://stackoverflow.com/questions/54678629/filter-list-of-tuples-with-longest-string/54700303#54700303", "title": "Filter List of Tuples with longest String", "body": "<p>The fix is grand but there remains the problem of having to know the longest string length within the function to match or exceed it. What if you don't know the longest field length and can't code it in your function? The <code>lf</code> function spits out the length of the longest string. I do think a lambda in the filter predicate is more intelligible.</p>\n\n<p>lf has to keep track of the longest string so far so it can't pass tuples but only single values.</p>\n\n<pre><code>ls = [('a',\"rr\"), ('b',\"rr\"), ('c', \"rrr\"), ('d', \"rrrr\")]\nlf = (\\a b -&gt; if (length $ snd b) &gt; a then (length $ snd b) else a)\nfilter (\\t -&gt; (length $ snd t) == (foldl lf 0 ls)) ls\n</code></pre>\n\n<p>[('d',\"rrrr\")]</p>\n"}], "owner": {"reputation": 1, "user_id": 5481848, "user_type": "registered", "profile_image": "https://graph.facebook.com/1162609120423130/picture?type=large", "display_name": "Stavi94", "link": "https://stackoverflow.com/users/5481848/stavi94"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 179, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1550184485, "creation_date": 1550088532, "last_edit_date": 1550095152, "question_id": 54678629, "link": "https://stackoverflow.com/questions/54678629/filter-list-of-tuples-with-longest-string", "title": "Filter List of Tuples with longest String", "body": "<p>I'm new to Haskell and I'm trying to filter a list of tuples when using the 2nd element's (String) length and returning the correct tuple, if there is any at all..</p>\n\n<pre><code>Prelude&gt; let lst = [(a,rr), (b,rr), (c, rrr), (d, rrrr)]\n\nPrelude&gt; filter ((&gt;4).(length snd)) lst\n\n[d, rrrr)]\n</code></pre>\n\n<p>There is an error when trying to execute it, that length has too many arguments..</p>\n\n<p>Can someone help me. Thanks a lot!  </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 4, "creation_date": 1550085591, "post_id": 54677772, "comment_id": 96144719, "body": "I believe it means it&#39;s in global scope, not inside a <code>let</code> or <code>where</code> clause or similar local expression"}], "answers": [{"comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1550112870, "post_id": 54678333, "comment_id": 96153886, "body": "FWIW I believe that for <code>fib_mem</code> to be memoized, it must be a CAF in addition to being a top-level declaration. So the book was not as precise as perhaps it could have been. <a href=\"https://wiki.haskell.org/Memoization#Memoising_CAFS\" rel=\"nofollow noreferrer\">wiki.haskell.org/Memoization#Memoising_CAFS</a>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1550126605, "post_id": 54678333, "comment_id": 96157383, "body": "@ReinHenrichs you are absolutely right. with these kinds of what looks like almost self-published books, it&#39;s always a gamble. --- It must also have a monomorhic type, I believe, as is discussed on the entry I linked IIRC."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1550128776, "post_id": 54678333, "comment_id": 96158335, "body": "Packt is basically a book mill."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 4, "last_activity_date": 1550087476, "creation_date": 1550087476, "answer_id": 54678333, "question_id": 54677772, "link": "https://stackoverflow.com/questions/54677772/at-the-top-level-results-will-persist-in-memory/54678333#54678333", "title": "At the top level, results will persist in memory", "body": "<p>\"Top-level\" is a synonym for <a href=\"https://stackoverflow.com/tags/read-eval-print-loop/info\">\"REPL\"</a>, or if you use a source code file, it's its most outer scope -- it's global scope. </p>\n\n<p>Traditionally, in Lisp, loading source code file was as if you executed its top level statements by typing them at the REPL one by one.</p>\n\n<p>see also: <a href=\"https://stackoverflow.com/q/11466284/849891\">How is this fibonacci-function memoized?</a></p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 54678333, "answer_count": 1, "score": 1, "last_activity_date": 1550087476, "creation_date": 1550085318, "question_id": 54677772, "link": "https://stackoverflow.com/questions/54677772/at-the-top-level-results-will-persist-in-memory", "title": "At the top level, results will persist in memory", "body": "<p>I am working through the book <a href=\"https://www.packtpub.com/application-development/haskell-high-performance-programming\" rel=\"nofollow noreferrer\">https://www.packtpub.com/application-development/haskell-high-performance-programming</a> and at moment, I am trying to understand the memoization.  </p>\n\n<p>It shows the following memoization function: </p>\n\n<pre><code>fib_mem :: Int -&gt; Integer\nfib_mem = (map fib [0..] !!)\nwhere fib 0 = 1\n      fib 1 = 1\n      fib n = fib_mem (n-2) + fib_mem (n-1)  \n</code></pre>\n\n<p>In the book, it says: </p>\n\n<blockquote>\n  <p>So if fib_mem is defined at the top level, the results will persist in\n  memory over the lifetime of the programm itself!</p>\n</blockquote>\n\n<p>What does it mean, define at the top level?</p>\n"}, {"tags": ["regex", "haskell"], "comments": [{"owner": {"reputation": 538, "user_id": 4875652, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6ea513cad32d33ca70db6369d6277875?s=128&d=identicon&r=PG&f=1", "display_name": "Sergio Losilla", "link": "https://stackoverflow.com/users/4875652/sergio-losilla"}, "edited": false, "score": 0, "creation_date": 1550480187, "post_id": 54677601, "comment_id": 96269186, "body": "Could someone explain the downvotes to my question and my solution? It would be helpful to learn so I don&#39;t do it again."}], "answers": [{"comments": [{"owner": {"reputation": 538, "user_id": 4875652, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6ea513cad32d33ca70db6369d6277875?s=128&d=identicon&r=PG&f=1", "display_name": "Sergio Losilla", "link": "https://stackoverflow.com/users/4875652/sergio-losilla"}, "edited": false, "score": 1, "creation_date": 1550128725, "post_id": 54679511, "comment_id": 96158313, "body": "(Downvote because it didn&#39;t answer the question, but I appreciate the discussion. I hope it is the correct way?)  The problem with the caret anchor is that it matches the beginning of every line, ie  <code>&quot;blahblah\\nmeh&quot; =~ &quot;\\`meh&quot; :: Bool</code> returns False (as I expect), but <code>&quot;blahblah\\nmeh&quot; =~ &quot;^meh&quot; :: Bool</code> returns True. And I want it to be False. And I need regex, because it is unfortunately a mess of plain text format file that I have to parse. Honestly I have not looked into isPrefixOf yet, it might cut it. But I was curious about how to do this."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": false, "score": 2, "last_activity_date": 1550092422, "creation_date": 1550092422, "answer_id": 54679511, "question_id": 54677601, "link": "https://stackoverflow.com/questions/54677601/haskell-matching-regex-only-at-the-beginning-of-string-not-beginning-of-each/54679511#54679511", "title": "Haskell - Matching regex only at the beginning of string (not beginning of each line!)", "body": "<p>The regular way to denote a match at the beginning is with <code>^</code>:</p>\n\n<pre><code>text =~ \"^text in the beginning\"\n</code></pre>\n\n<p>Have you tried that? If you did and it failed for you, please specify which regex library you are using. I just verified with <code>regex-posix</code> and <code>regex-pcre-builtin</code>, and both work fine for me.</p>\n\n<p>But if you really just want to match on a prefix, why not use <code>isPrefixOf</code> instead? There are versions <a href=\"https://www.stackage.org/haddock/lts-13.7/base-4.12.0.0/Data-List.html#v:isPrefixOf\" rel=\"nofollow noreferrer\">for <code>String</code></a>, <a href=\"https://www.stackage.org/haddock/lts-13.7/text-1.2.3.1/Data-Text.html#v:isPrefixOf\" rel=\"nofollow noreferrer\">for <code>Text</code></a>, and <a href=\"https://www.stackage.org/haddock/lts-13.7/bytestring-0.10.8.2/Data-ByteString.html#v:isPrefixOf\" rel=\"nofollow noreferrer\">for <code>ByteString</code></a>. Way more efficient than regex.</p>\n"}, {"tags": [], "owner": {"reputation": 538, "user_id": 4875652, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6ea513cad32d33ca70db6369d6277875?s=128&d=identicon&r=PG&f=1", "display_name": "Sergio Losilla", "link": "https://stackoverflow.com/users/4875652/sergio-losilla"}, "is_accepted": true, "score": 0, "last_activity_date": 1550134888, "creation_date": 1550134888, "answer_id": 54686591, "question_id": 54677601, "link": "https://stackoverflow.com/questions/54677601/haskell-matching-regex-only-at-the-beginning-of-string-not-beginning-of-each/54686591#54686591", "title": "Haskell - Matching regex only at the beginning of string (not beginning of each line!)", "body": "<p>Success! The answer was using non-multiline regular expressions. I implemented my own matching operator:</p>\n\n<pre><code>(=~+) text pattern = match (makeRegexOpts blankCompOpt defaultExecOpt pattern :: Regex) text\n</code></pre>\n\n<p><code>blankComptOpt</code> (see <a href=\"http://hackage.haskell.org/package/regex-tdfa-1.2.3.1/docs/Text-Regex-TDFA.html#t:CompOption\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/regex-tdfa-1.2.3.1/docs/Text-Regex-TDFA.html#t:CompOption</a>) is what deactivates multiline matching.</p>\n\n<pre><code>Prelude Text.Regex.TDFA&gt; \"blahblah\\nmeh\" =~+ \"^meh\" :: Bool\nFalse\nPrelude Text.Regex.TDFA&gt; \"meh\\nblahblah\" =~+ \"^meh\" :: Bool\nTrue\n</code></pre>\n\n<p>And for my larger input it runs very fast.</p>\n"}], "owner": {"reputation": 538, "user_id": 4875652, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6ea513cad32d33ca70db6369d6277875?s=128&d=identicon&r=PG&f=1", "display_name": "Sergio Losilla", "link": "https://stackoverflow.com/users/4875652/sergio-losilla"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 54686591, "answer_count": 2, "score": -2, "last_activity_date": 1550502740, "creation_date": 1550084644, "last_edit_date": 1550502740, "question_id": 54677601, "link": "https://stackoverflow.com/questions/54677601/haskell-matching-regex-only-at-the-beginning-of-string-not-beginning-of-each", "title": "Haskell - Matching regex only at the beginning of string (not beginning of each line!)", "body": "<p>I am trying to match a pattern, but only if it appears at the beginning of the string (notice the beginning of the string, not the beginning of each line). The only way I found is using the \"`\" anchor:</p>\n\n<pre><code>text =~ \"\\`text in the beginning\"\n</code></pre>\n\n<p>but for long strings without a match, it is very slow, I guess it tries to find a match throughout the whole text.</p>\n\n<p>Suggestions?</p>\n"}, {"tags": ["haskell", "polymorphism", "tuples", "list-comprehension"], "comments": [{"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1550177512, "post_id": 54676980, "comment_id": 96184628, "body": "<code>let ls = [(1, &#39;a&#39;), (2, &#39;b&#39;), (3, &#39;c&#39;)] in ([ n | (n,m) &lt;- ls] , [ c | (d,c) &lt;- ls ])</code>"}], "answers": [{"comments": [{"owner": {"reputation": 157, "user_id": 9227001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5b8c6a7a237f5cd46296e765aa2d2a1f?s=128&d=identicon&r=PG&f=1", "display_name": "Nicekor", "link": "https://stackoverflow.com/users/9227001/nicekor"}, "edited": false, "score": 0, "creation_date": 1550083477, "post_id": 54677185, "comment_id": 96143767, "body": "Once again, thank you very much for the great explanation!"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1550083525, "post_id": 54677185, "comment_id": 96143785, "body": "It seems to me that OP hoped that the pattern-matching could be done at the type level, so to speak, by using the names <code>a</code> and <code>b</code> to match against the two parts of the <code>(a, b)</code> tuples. It might be worth a quick mention of why that doesn&#39;t work."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1550083659, "post_id": 54677185, "comment_id": 96143859, "body": "@amalloy: ah, yes, that was probably where the OP was after. I hope the extra paragraph makes it clear."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1550083641, "last_edit_date": 1550083641, "creation_date": 1550083072, "answer_id": 54677185, "question_id": 54676980, "link": "https://stackoverflow.com/questions/54676980/list-of-pairs-into-pair-of-lists-haskell/54677185#54677185", "title": "List of pairs into pair of Lists Haskell", "body": "<p>A list comprehension like:</p>\n\n<pre><code>[a | a &lt;- listOfPairs]</code></pre>\n\n<p>is actually nothing more than an <em>identity operation</em> for lists. It will yield the same list as the one you provide, since you basically iterate over <code>listOfPairs</code>, and for each iteration, you yield the element <code>a</code>.</p>\n\n<p>Haskell does not perform <em>implicit</em> conversions, so it does <em>not</em> derive from the types that <code>a</code> in your <code>a &lt;- listOfPairs</code> then only can be the first element. Even if that was possible, it was probably <em>not</em> a good idea anyway, since it would make the language more \"unstable\" in the sense that a small change in the types, could have significant impact in the semantics.</p>\n\n<p>In order to obtain the first element of a tuple, you need to use <em>pattern matching</em>, like:</p>\n\n<pre><code>[a | <b>(a, _)</b> &lt;- listOfPairs]</code></pre>\n\n<p>here we thus pattern match the first element of the tuple with <code>a</code>, and for the second one, we thus use:</p>\n\n<pre><code>[b | <b>(_, b)</b> &lt;- listOfPairs]</code></pre>\n\n<p>We can thus impelement this as:</p>\n\n<pre><code>split:: [(a,b)] -&gt; ([a],[b])\nsplit listOfPairs = ([a | <b>(a, _)</b> &lt;- listOfPairs], [b | <b>(_, b)</b> &lt;- listOfPairs])</code></pre>\n\n<p>Or we can use <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:map\" rel=\"nofollow noreferrer\"><strong><code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</code></strong></a>, <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:fst\" rel=\"nofollow noreferrer\"><strong><code>fst :: (a, b) -&gt; a</code></strong></a> and <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:snd\" rel=\"nofollow noreferrer\"><strong><code>snd :: (a, b) -&gt; b</code></strong></a>:</p>\n\n<pre><code>split:: [(a,b)] -&gt; ([a],[b])\nsplit listOfPairs = (map fst listOfPairs, map snd listOfPairs)</code></pre>\n\n<p>But the above still has a problem: here we iterate twice <em>independently</em> over the same list. We can omit that by using recursion, like:</p>\n\n<pre><code>split:: [(a,b)] -&gt; ([a],[b])\nsplit [] = []\nsplit ((a, b):xs) = (a:as, b:bs)\n    where (as, bs) = split xs</code></pre>\n\n<p>or we can use a <code>foldr</code> function:</p>\n\n<pre><code>split :: Foldable f => f (a,b) -&gt; ([a],[b])\nsplit = foldr (\\(a,b) (as,bs) -&gt; (a:as,b:bs)) ([],[])</code></pre>\n\n<p>There is already a Haskell function that does exactly what you want: <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:unzip\" rel=\"nofollow noreferrer\"><strong><code>unzip :: [(a, b)] -&gt; ([a], [b])</code></strong></a>, with the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.List.html#unzip\" rel=\"nofollow noreferrer\">source code</a>.</p>\n"}], "owner": {"reputation": 157, "user_id": 9227001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5b8c6a7a237f5cd46296e765aa2d2a1f?s=128&d=identicon&r=PG&f=1", "display_name": "Nicekor", "link": "https://stackoverflow.com/users/9227001/nicekor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1299, "favorite_count": 0, "accepted_answer_id": 54677185, "answer_count": 1, "score": 0, "last_activity_date": 1550083641, "creation_date": 1550082166, "last_edit_date": 1550083006, "question_id": 54676980, "link": "https://stackoverflow.com/questions/54676980/list-of-pairs-into-pair-of-lists-haskell", "title": "List of pairs into pair of Lists Haskell", "body": "<p>Basically I have this exercise:\nUsing list comprehensions, write a polymorphic function:</p>\n\n<pre><code>split :: [(a, b)] -&gt; ([a], [b])\n</code></pre>\n\n<p>which transforms a list of pairs (of any types) into a pair of lists. For example,</p>\n\n<pre><code>split [(1, 'a'), (2, 'b'), (3, 'c')] = ([1, 2, 3], \"abc\")\n</code></pre>\n\n<p>This was the way I wrote the function but it is not working:</p>\n\n<pre><code>split :: [(a, b)] -&gt; ([a], [b])\nsplit listOfPairs = (([a | a &lt;- listOfPairs]), ([b | b &lt;- listOfPairs]))\n</code></pre>\n\n<p>Can someone please explain why my solution doesn't work? Thank you!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1550075487, "post_id": 54675020, "comment_id": 96139551, "body": "After a preliminary bit of research, I&#39;ve found this: <a href=\"https://stackoverflow.com/questions/35198306/why-sprint-always-prints-a\" title=\"why sprint always prints a\">stackoverflow.com/questions/35198306/why-sprint-always-print&zwnj;&#8203;s-a</a> - and think Zeta&#39;s comment on the accepted answer is relevant to your case"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1550089839, "post_id": 54675020, "comment_id": 96146729, "body": "at GHCi prompt, type: <code>&gt; :set +t</code>. it then will be reporting the type of every definition you enter. after <code>let xs = [1,2,3]</code> it would print <code>xs :: Num a =&gt; [a]</code>. This means <code>xs</code> is not a <i>monomorphic-type value</i>, but a polymorphic-type <i>definition</i>. Since there&#39;s no value there, there&#39;s nothing to be retained in memory. Its value will be calculated each time anew, because GHCi doesn&#39;t know which specific type it will be asked to calculate the value at."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1550089857, "post_id": 54675020, "comment_id": 96146739, "body": "But if you entered <code>let xs = [1,2,3] :: [Int]</code>, you&#39;d get back <code>xs :: [Int]</code>. Since the type is specific (aka monomorphic i.e. there&#39;s no <i>poly</i>-morphism), there&#39;s a value to retain after calculating it just once."}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 8, "last_activity_date": 1550077230, "last_edit_date": 1550077230, "creation_date": 1550075503, "answer_id": 54675113, "question_id": 54675020, "link": "https://stackoverflow.com/questions/54675020/why-it-does-not-show-as-evaluated/54675113#54675113", "title": "Why it does not show as evaluated?", "body": "<p>Because <code>b</code> is basically a function from <code>Num a</code> dictionary to <code>[a]</code> for some <code>a</code>.  If this were a concrete type then it would be as you expected:</p>\n\n<pre><code>let a Prelude&gt; let a = [1..4] :: [Int]\nPrelude&gt; let b = map (*8) a\nPrelude&gt; :sprint b\nb = _\nPrelude&gt; b\n[8,16,24,32]\nPrelude&gt; :sprint b\nb = [8,16,24,32]\n</code></pre>\n\n<p>EDIT</p>\n\n<p>Side by side it will hopefully be even more apparent:</p>\n\n<pre><code>Prelude&gt; let a = [1..4]\nPrelude&gt; :t a\na :: (Num a, Enum a) =&gt; [a]\nPrelude&gt; let poly_b = map (*8) a\nPrelude&gt; let concrete_b = map (* (8 ::Int)) a\nPrelude&gt; :sprint poly_b\npoly_b = _\nPrelude&gt; :sprint concrete_b\nconcrete_b = _\nPrelude&gt; poly_b\n[8,16,24,32]\nPrelude&gt; concrete_b\n[8,16,24,32]\nPrelude&gt; :sprint poly_b\npoly_b = _\nPrelude&gt; :sprint concrete_b\nconcrete_b = [8,16,24,32]\n</code></pre>\n\n<p>EDIT 2: It occurs to me that the monomorphism restriction, or lack thereof in the REPL, could be causing some confusion.  In compiled code the value in a let statement would take on a single concrete type and not be polymorphic, thus not have this \"problem\" at all:</p>\n\n<pre><code>Prelude&gt; :set -XMonomorphismRestriction\nPrelude&gt; let a = [1..4]\nPrelude&gt; let b = map (*8) a\nPrelude&gt; :sprint b\nb = _\nPrelude&gt; b\n[8,16,24,32]\nPrelude&gt; :sprint b\nb = [8,16,24,32]\n</code></pre>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "closed_date": 1550080011, "answer_count": 1, "score": 3, "last_activity_date": 1550077230, "creation_date": 1550075253, "question_id": 54675020, "link": "https://stackoverflow.com/questions/54675020/why-it-does-not-show-as-evaluated", "closed_reason": "Duplicate", "title": "Why it does not show as evaluated?", "body": "<p>I am trying to figure out, how lazy evaluation works and I've tried as following:</p>\n\n<pre><code>Prelude&gt; a = [1,2,3,5,6]\nPrelude&gt; b = map (\\x -&gt; x * 8) a\nPrelude&gt; :sprint b\nb = _\nPrelude&gt; b\n[8,16,24,40,48]\nPrelude&gt; :sprint b\nb = _ \n</code></pre>\n\n<p>The question is, why the last line does not show the evaluated list? I evaluated a line before. </p>\n"}, {"tags": ["if-statement", "haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1550075467, "post_id": 54674370, "comment_id": 96139537, "body": "The purpose is to simplify heavily nested <code>if</code> expressions, not replace the existing use of function guards."}], "answers": [{"tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 8, "last_activity_date": 1550075556, "last_edit_date": 1550075556, "creation_date": 1550073975, "answer_id": 54674549, "question_id": 54674370, "link": "https://stackoverflow.com/questions/54674370/what-is-the-difference-between-multiwayif-and-classic-guards/54674549#54674549", "title": "What is the difference between MultiWayIf and classic guards?", "body": "<p>Multiway <code>if</code> is not supposed to be used <em>instead</em> of function guards. If you can use guards, you should do that. But the multiway <code>if</code> can also be used in the middle of an expression, much like <code>case</code>, e.g.:</p>\n\n<pre><code>f x = \"The argument is \" ++ \n         if | x &gt; 0 -&gt; \"positive\"\n            | x &lt; 0 -&gt; \"negative\"\n            | otherwise -&gt; \"zero\"\n</code></pre>\n\n<p>Personally I do find the clarity of this specific example rather questionable, but this is the difference.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1550077115, "last_edit_date": 1550077115, "creation_date": 1550075826, "answer_id": 54675222, "question_id": 54674370, "link": "https://stackoverflow.com/questions/54674370/what-is-the-difference-between-multiwayif-and-classic-guards/54675222#54675222", "title": "What is the difference between MultiWayIf and classic guards?", "body": "<p>Suppose you have a heavily nested <code>if</code> statement like</p>\n\n<pre><code>if c1 then a1\nelse if c2 then a2\nelse if c3 then a3\nelse if c4 then a4\nelse if c5 then a5\nelse a6\n</code></pre>\n\n<p><code>MultiWayIf</code> lets you write this more concisely as</p>\n\n<pre><code>if | c1 -&gt; a1\n   | c2 -&gt; a2\n   | c3 -&gt; a3 \n   | c4 -&gt; a4\n   | c5 -&gt; a5\n   | otherwise -&gt; a6\n</code></pre>\n\n<p>Also, while every <code>if</code> expression must provide a value whether the condition is true or false (<code>if c then a</code> is not a valid <code>if</code> expression, because the <code>else</code> is missing), a multi-way <code>if</code> doesn't have to be exhaustive; the <code>otherwise</code> can be omitted. This is a syntactic relaxation only; an exception will still be raised once the expression is evaluated if none of the conditions are true.</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1550095007, "last_edit_date": 1550095007, "creation_date": 1550089850, "answer_id": 54678920, "question_id": 54674370, "link": "https://stackoverflow.com/questions/54674370/what-is-the-difference-between-multiwayif-and-classic-guards/54678920#54678920", "title": "What is the difference between MultiWayIf and classic guards?", "body": "<p>It's really just syntactic convenience, as others have explained. You can translate any multiway <code>if</code> into an equivalent <code>case</code> expression quite easily.</p>\n\n<pre><code>if\n  | c1 -&gt; e1\n  | c2 -&gt; e2\n  ...\n</code></pre>\n\n<p>is precisely equivalent to</p>\n\n<pre><code>case () of\n  _ | c1 -&gt; e1\n    | c2 -&gt; e2\n    ...\n</code></pre>\n\n<p>As usual, <code>()</code> means \"There's nothing to see here\" while <code>_</code> means \"and we're not looking anyway.\"</p>\n"}], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "accepted_answer_id": 54674549, "answer_count": 3, "score": 2, "last_activity_date": 1550095007, "creation_date": 1550073444, "question_id": 54674370, "link": "https://stackoverflow.com/questions/54674370/what-is-the-difference-between-multiwayif-and-classic-guards", "title": "What is the difference between MultiWayIf and classic guards?", "body": "<p>What does <code>MultiWayIf</code> extension offer that cannot be done using <code>|</code> guards and vice versa?</p>\n\n<p>For instance, one can write same function as</p>\n\n<pre><code>f x | x == 0 = -1\n    | otherwise = x\n</code></pre>\n\n<p>or </p>\n\n<pre><code>f x = if | x == 0 -&gt; -1\n         | otherwise -&gt; x\n</code></pre>\n\n<p>I don't see any difference between these two examples beside syntactic sugar used. Are there situations where I should prefer one over another?  </p>\n"}, {"tags": ["image", "haskell", "import", "gloss"], "comments": [{"owner": {"reputation": 4609, "user_id": 4636715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5ebd8c54bb287f99b94373429b588e21?s=128&d=identicon&r=PG&f=1", "display_name": "vahdet", "link": "https://stackoverflow.com/users/4636715/vahdet"}, "edited": false, "score": 0, "creation_date": 1550067898, "post_id": 54672381, "comment_id": 96134640, "body": "Have you encountered this &gt; <a href=\"https://stackoverflow.com/q/47159722/4636715\">stackoverflow.com/q/47159722/4636715</a>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1550067934, "post_id": 54672381, "comment_id": 96134667, "body": "<code>loadBMP</code> is <a href=\"https://www.stackage.org/haddock/lts-13.7/gloss-1.13.0.1/Graphics-Gloss-Data-Bitmap.html#v:loadBMP\" rel=\"nofollow noreferrer\">an existing function</a>, so why are you trying to <i>define</i> it? You should <i>use</i> it instead, i.e. <code>fishSprite &lt;- loadBMP &quot;fish.bmp&quot;</code> somewhere in your <code>main</code> action."}], "answers": [{"comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1550947325, "post_id": 54677174, "comment_id": 96462798, "body": "It&#39;s better to ask question by starting a new one, rather than ask new question in a comment section."}, {"owner": {"reputation": 341, "user_id": 5701494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a3fda4080fbbfd015b9d332fd287c33?s=128&d=identicon&r=PG&f=1", "display_name": "mauroc8", "link": "https://stackoverflow.com/users/5701494/mauroc8"}, "edited": false, "score": 0, "creation_date": 1552871740, "post_id": 54677174, "comment_id": 97162860, "body": "I get a weird error: <code>test01.hs: ErrorUnhandledCompressionMode {errorCompression = CompressionBitFields} CallStack (from HasCallStack):   error, called at .&#47;Graphics&#47;Gloss&#47;Internals&#47;Data&#47;Picture.hs:208:28 in gloss-rendering-1.13.0.2-5vVjOgmniwF2ujwiGcx8nq:Graphics.Glo&zwnj;&#8203;ss.Internals.Data.Pi&zwnj;&#8203;cture </code> Can you help me? &gt;&lt;"}, {"owner": {"reputation": 932, "user_id": 6629874, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/3SUbo.jpg?s=128&g=1", "display_name": "5ndG", "link": "https://stackoverflow.com/users/6629874/5ndg"}, "edited": false, "score": 0, "creation_date": 1552902234, "post_id": 54677174, "comment_id": 97171899, "body": "It&#39;s because <a href=\"http://hackage.haskell.org/package/bmp-1.2.6.3/docs/Codec-BMP.html#t:Error\" rel=\"nofollow noreferrer\">&quot;We only handle uncompressed images&quot;</a>. Try <a href=\"https://www.w3.org/People/mimasa/test/imgformat/img/w3c_home.bmp\" rel=\"nofollow noreferrer\">this image</a> instead - it works for me."}], "tags": [], "owner": {"reputation": 932, "user_id": 6629874, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/3SUbo.jpg?s=128&g=1", "display_name": "5ndG", "link": "https://stackoverflow.com/users/6629874/5ndg"}, "is_accepted": false, "score": 0, "last_activity_date": 1550083008, "creation_date": 1550083008, "answer_id": 54677174, "question_id": 54672381, "link": "https://stackoverflow.com/questions/54672381/how-can-i-import-an-image-in-haskell/54677174#54677174", "title": "How can I import an image in haskell?", "body": "<p>It sounds like you're having trouble with the basics, so maybe a simple example would help. This will display a bmp image in a Gloss window:</p>\n\n<pre><code>module Main where\n\nimport Graphics.Gloss\n\nmain :: IO ()\nmain = do\n  picture &lt;- loadBMP \"myimage.bmp\"\n  display (InWindow \"Pic\" (200, 200) (10, 10)) white picture\n</code></pre>\n\n<p>On your other point, about whether Gloss is suitable for a beginner game, I would say yes. It is well documented and relatively easy to use. I did a similar thing with it for my first Haskell project.</p>\n"}], "owner": {"reputation": 19, "user_id": 11056883, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc8a2532c925bf113e39ce30c6b8fe46?s=128&d=identicon&r=PG&f=1", "display_name": "blobfish", "link": "https://stackoverflow.com/users/11056883/blobfish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 760, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1550083008, "creation_date": 1550067567, "last_edit_date": 1550076166, "question_id": 54672381, "link": "https://stackoverflow.com/questions/54672381/how-can-i-import-an-image-in-haskell", "title": "How can I import an image in haskell?", "body": "<p>I'm a beginner in haskell and trying to make a game. Currently learning Gloss graphics.\nI wonder how I can import an BMP (JPG or PNG) image in haskell? (As a character or background etc). I want the image to be shown in the graphics window IO (). But can't get it to work.\nShould I use another module than gloss for this?</p>\n\n<p>Thanks for any help</p>\n\n<pre><code>loadBMP :: FilePath -&gt; IO Picture\n\n-- this obviously doesn't work, I tried this and hundreds of other things...\nloadBMP = ./fish.bmp\n</code></pre>\n"}, {"tags": ["haskell", "filter", "typeclass"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1550060101, "post_id": 54667292, "comment_id": 96129792, "body": "You&#39;re approaching it backwards. Can you think of an explicit reason why there <i>should</i> be such a class? Think about what constructors (aside from <code>[]</code>) for which you might define an instance."}, {"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1550060688, "post_id": 54667292, "comment_id": 96130090, "body": "looking <a href=\"https://www.haskell.org/hoogle/?hoogle=filter\" rel=\"nofollow noreferrer\">here</a>, I think it would make sense to have a <code>Filterable</code> instance for <code>[]</code>, <code>Set</code>, <code>Seq</code>, <code>Map k</code>, <code>IntMap</code>, and all newtypes built above them"}], "answers": [{"comments": [{"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "edited": false, "score": 1, "creation_date": 1550052544, "post_id": 54667435, "comment_id": 96125234, "body": "thanks, but does <code>t</code> really need to be a Monad to support a filter operation? It appears to me that a filter operation should be independent from Monad"}, {"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "reply_to_user": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "edited": false, "score": 0, "creation_date": 1550052958, "post_id": 54667435, "comment_id": 96125483, "body": "You can create your own class (but you have to chose other name for method) and implement it for <code>MonadPlus</code>. It will work for existing containers like <code>[]</code> and <code>Maybe</code> since they already in <code>MonadPlus</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "edited": false, "score": 1, "creation_date": 1550052978, "post_id": 54667435, "comment_id": 96125501, "body": "@marcosh not just Monad, but MonadPlus. there&#39;s also <code>foldMap (\\x -&gt; [x | p x])</code> or an equivalent for your <code>t</code> type -- either as is, with Foldable (plus an &quot;injector&quot;, like <code>pure</code>... ;) ), or with MonadComprehensions (getting <code>(Monoid (m b), Foldable t, MonadPlus m) =&gt; (b -&gt; Bool) -&gt; t b -&gt; m b</code>)."}, {"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "edited": false, "score": 0, "creation_date": 1550053308, "post_id": 54667435, "comment_id": 96125719, "body": "thanks. I know I could do this. I wanted to know if there was something ready in full generality (for example <code>mfilter</code> won&#39;t work on <code>Set</code>) and if there was a practical (or theoretical) reason for its absence"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1550054973, "post_id": 54667435, "comment_id": 96126755, "body": "This is actually very interesting to me, I&#39;m hoping more answers/comments come up.. It&#39;s apparent that you (probably) can&#39;t <code>filter</code> over an arbitrary <code>Functor</code> or <code>Foldable</code> - I can&#39;t see how you could realistically filter any type of tree, for example (what do you do for example with a tree whose root value fails the predicate but where everything on each branch passes it?). But I&#39;m as surprised as you that you need a full <code>MonadPlus</code> for this. It&#39;s also not at all clear to me what laws the <code>filter</code> operation should follow in general in order to be worthy of the name."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1550114442, "post_id": 54667435, "comment_id": 96154205, "body": "@RobinZigmond The Haskell Wiki provides some analysis here. In short, Foldable is about tearing down structure while Traversable is about preserving structure as-is, so neither let you write <code>filter</code>. You need a structure-building operation like <code>pure</code> and some notion of &#39;empty&#39; (<code>mzero</code>), which is why <code>mfilter</code> works. But you don&#39;t need the rest of the structure from <code>Applicative</code> or <code>Monad</code> and could use <code>mempty</code> instead of <code>mzero</code>: <code>filter p = foldMap (\\a -&gt; if p a then pure a else mempty)</code>. <a href=\"https://wiki.haskell.org/Foldable_and_Traversable#Some_trickier_functions:_concatMap_and_filter\" rel=\"nofollow noreferrer\">wiki.haskell.org/&hellip;</a>"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1584854247, "post_id": 54667435, "comment_id": 107563829, "body": "@RobinZigmond It is quite curious, indeed. <code>Filterable</code>, <code>Alternative</code> and <code>Monad</code> are only loosely connected, and yet they all come together so that <code>MonadPlus</code> gives out a rigorously sensible implementation of <code>filter</code>. For further exploration of this theme, see also <a href=\"https://stackoverflow.com/q/60732274/2751851\">this Q&amp;A</a>."}], "tags": [], "owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "is_accepted": false, "score": 3, "last_activity_date": 1550052335, "creation_date": 1550052335, "answer_id": 54667435, "question_id": 54667292, "link": "https://stackoverflow.com/questions/54667292/haskell-filter-typeclass/54667435#54667435", "title": "Haskell - filter typeclass", "body": "<p>There is <code>mfilter</code> method in <code>Control.Monad</code> (<a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#v:mfilter\" rel=\"nofollow noreferrer\">link</a>)</p>\n\n<pre><code>mfilter :: MonadPlus m =&gt; (a -&gt; Bool) -&gt; m a -&gt; m a \n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "edited": false, "score": 1, "creation_date": 1550096293, "post_id": 54674057, "comment_id": 96149521, "body": "thanks a lot! still, it doesn&#39;t work for <code>Set</code>, since <code>Set</code> is not a functor"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 5, "last_activity_date": 1550072537, "creation_date": 1550072537, "answer_id": 54674057, "question_id": 54667292, "link": "https://stackoverflow.com/questions/54667292/haskell-filter-typeclass/54674057#54674057", "title": "Haskell - filter typeclass", "body": "<p>Yes, the witherable package <a href=\"https://hackage.haskell.org/package/witherable-0.3/docs/Data-Witherable.html#t:Filterable\" rel=\"noreferrer\">provides <code>Filterable</code></a>, with a handful of instances for common types.</p>\n"}], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 446, "favorite_count": 2, "accepted_answer_id": 54674057, "answer_count": 2, "score": 5, "last_activity_date": 1550072537, "creation_date": 1550051939, "question_id": 54667292, "link": "https://stackoverflow.com/questions/54667292/haskell-filter-typeclass", "title": "Haskell - filter typeclass", "body": "<p>Is there a typeclass which abstracts the <code>filter</code> function?</p>\n\n<p>I am thinking about something like</p>\n\n<pre><code>class Filterable t where\n  filter :: (a -&gt; Bool) -&gt; t a -&gt; t a\n</code></pre>\n\n<p>If this isn't the case, is there an explicit reason for it?</p>\n"}, {"tags": ["haskell", "types", "type-inference", "lambda-calculus"], "comments": [{"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 7, "creation_date": 1550043545, "post_id": 54664514, "comment_id": 96120076, "body": "According to <a href=\"https://en.wikipedia.org/wiki/Church_encoding#Calculation_with_Church_numerals\" rel=\"nofollow noreferrer\">Wikipedia</a>, it should be <code>f (n f x)</code>, not <code>f (n (f x))</code>"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 3, "creation_date": 1550044925, "post_id": 54664514, "comment_id": 96120749, "body": "The way to think of a church numeral <code>n</code> is that it is a function of two arguments. <code>n f x</code> applies <code>f</code> to <code>x</code> <code>n</code> times. So if <code>n</code> is supposed to represent 3 then <code>n f x</code> evaluates to <code>f (f (f x))</code>.  Anyway, thought that might help"}], "answers": [{"tags": [], "owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "is_accepted": false, "score": 2, "last_activity_date": 1550048342, "creation_date": 1550048342, "answer_id": 54666114, "question_id": 54664514, "link": "https://stackoverflow.com/questions/54664514/type-of-succzero-differs-from-type-of-one-in-ghc/54666114#54666114", "title": "Type of &quot;succ(zero)&quot; differs from type of &quot;one&quot; in GHC", "body": "<p>Firstly, you want <code>zero</code> to be same type as <code>one</code>. In your equation for <code>zero</code>, you don't use <code>f</code> on rhs of <code>-&gt;</code>. So the compiler doesn't know what type to infer. In your equation for <code>one</code>, you want <code>f x</code> (its result) to be same type as <code>x</code> (the result from <code>zero</code>). But you're not getting that either. It's easiest to give signatures, but failing that use <code>asTypeOf</code>.</p>\n\n<p>In the equation for <code>succ</code>, you want its result to be same type as <code>f x</code>, same type as <code>x</code>.</p>\n\n<blockquote>\n  <p>Can you also show me how to derive its type manually?</p>\n</blockquote>\n\n<p>OK let's achieve the above using <code>asTypeOf</code>. Then you can use <code>:t</code> to find the types ...</p>\n\n<pre><code>zero = \\   f x -&gt; (x `asTypeOf` f x)\none  = \\   f x -&gt; (f x `asTypeOf` x)\nsucc = \\ n f x -&gt; (f (n f x)\n                 `asTypeOf` f x `asTypeOf` x)\n</code></pre>\n\n<p>(I've used the correct definition for <code>succ</code>, per @LambdaFairy.)</p>\n\n<p>Note that Church numerals are framed in the untyped lambda calculus -- that's what wikipedia is showing. As you get into more exotic functions over them (like addition or predecessor), you'll find that Haskell is a typed lambda calculus, and GHC will barf/you'll hit the dreaded monomorphism restriction. Then <code>asTypeOf</code> can't help you; you must resort to type signatures (of higher-rank).</p>\n"}, {"comments": [{"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1550049596, "post_id": 54666118, "comment_id": 96123254, "body": "&quot;The types ... all match (unify).&quot; Hmm, well only if you tell GHC you want them to unify -- which you&#39;ve done by giving signatures. Then that doesn&#39;t seem to be happening in the sig you give from GHCi. I get <code>succ :: ((a -&gt; a) -&gt; a -&gt; a) -&gt; (a -&gt; a) -&gt; a -&gt; a</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1550050236, "post_id": 54666118, "comment_id": 96123680, "body": "I meant the types of the numbers themselves: <code>zero</code>, <code>one</code>, <code>two</code>... <code>succ</code> of course has a different type. I didn&#39;t specify types when I defined them in GHCi, they got derived that way as I show them. Try <code>:t \\n f x -&gt; f (n f x)</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1550050613, "post_id": 54666118, "comment_id": 96123937, "body": "of course when it gets applied to Church numbers of type <code>(b -&gt; b) -&gt; b -&gt; b</code> it becomes specialized to what you&#39;ve shown."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 4, "last_activity_date": 1550131279, "last_edit_date": 1550131279, "creation_date": 1550048354, "answer_id": 54666118, "question_id": 54664514, "link": "https://stackoverflow.com/questions/54664514/type-of-succzero-differs-from-type-of-one-in-ghc/54666118#54666118", "title": "Type of &quot;succ(zero)&quot; differs from type of &quot;one&quot; in GHC", "body": "<p>So as was said in the comments, the correct definition is</p>\n\n<pre><code>zero   f x = x\nsucc n f x = f (n f x)\n</code></pre>\n\n<blockquote>\n  <p><em>\"do one more <code>f</code> after <code>n</code> applications of <code>f</code>, starting with <code>x</code>.\"</em></p>\n</blockquote>\n\n<p>Thus </p>\n\n<pre><code>one f x = succ zero f x = f (zero f x) = f x\ntwo f x = succ one  f x = f (one  f x) = f (f x)\n</code></pre>\n\n<p>The types which get derived are more general initially,</p>\n\n<pre><code>zero     ::     t      -&gt; t1 -&gt; t1     -- most general\none      :: (t1 -&gt; t ) -&gt; t1 -&gt; t      -- less general\nsucc one :: (t2 -&gt; t2) -&gt; t2 -&gt; t2     -- most specific\n</code></pre>\n\n<p>but it doesn't matter, they all match (unify) between themselves, and starting from <code>two = succ one</code> the type settles down into the most specific <code>(b -&gt; b) -&gt; (b -&gt; b)</code>.</p>\n\n<p>You could also define</p>\n\n<pre><code>church :: Int -&gt; (b -&gt; b) -&gt; b -&gt; b           -- is derived so by GHCi\nchurch n f x = foldr ($) x (replicate n f)\n             = foldr (.) id (replicate n f) x\n{- church n  = foldr (.) id . replicate n     -- (^ n) for functions -}\n</code></pre>\n\n<p>and have all types be exactly the same, as </p>\n\n<pre><code>church 0 :: (b -&gt; b) -&gt; b -&gt; b\nchurch 1 :: (b -&gt; b) -&gt; b -&gt; b\nchurch 2 :: (b -&gt; b) -&gt; b -&gt; b\n</code></pre>\n\n<p>It really doesn't matter.</p>\n\n<p>As to the type derivations, it comes down to just using the modus ponens / application rule,</p>\n\n<pre><code>       f   :: a -&gt; b\n         x :: a\n       -------------\n       f x ::      b\n</code></pre>\n\n<p>Just need to be careful renaming each type consistently so there's no type variable capture introduced at any step:</p>\n\n<pre><code>      succ n f x = f (n f x)\n               x          ::      a\n             f            :: t                              ,  t ~ ...\n                      n   :: t -&gt; a -&gt; b\n                   f      ::           b -&gt;            c    ,  t ~ b -&gt; c\n      succ    n                       f           x :: c\n      succ :: (t        -&gt; a -&gt; b) -&gt; (b -&gt; c) -&gt; a -&gt; c\n           :: ((b -&gt; c) -&gt; a -&gt; b) -&gt; (b -&gt; c) -&gt; a -&gt; c\n</code></pre>\n\n<p>(because final result type produced by <code>succ</code> is the same as the final result type produced by <code>f</code> -- i.e. <code>c</code>), or as GHCi puts it,</p>\n\n<pre><code>      succ :: ((t1 -&gt; t) -&gt; t2 -&gt; t1) -&gt; (t1 -&gt; t) -&gt; t2 -&gt; t\n           --   b     c     a     b       b     c     a     c\n</code></pre>\n"}], "owner": {"reputation": 193, "user_id": 650585, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c4692e14f6f8d287f8e862de123058b?s=128&d=identicon&r=PG", "display_name": "user650585", "link": "https://stackoverflow.com/users/650585/user650585"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 54666118, "answer_count": 2, "score": 3, "last_activity_date": 1550131279, "creation_date": 1550042049, "question_id": 54664514, "link": "https://stackoverflow.com/questions/54664514/type-of-succzero-differs-from-type-of-one-in-ghc", "title": "Type of &quot;succ(zero)&quot; differs from type of &quot;one&quot; in GHC", "body": "<p>Asking the GHC to print the type of \"one\" and \"succ zero\" (lambda calculus way of encoding numerals), I get two different types!\nShouldn't they be the same?\nCan you also show me how to derive its type manually?</p>\n\n<pre><code>zero = \\ f x -&gt; x\none = \\ f x -&gt; f x\nsucc = \\ n f x -&gt; f (n (f x))\n\n:t one -- (t1 -&gt; t2) -&gt; t1 -&gt; t2\n\n:t succ zero -- ((t1 -&gt; t1) -&gt; t2) -&gt; (t1 -&gt; t1) -&gt; t2\n</code></pre>\n"}, {"tags": ["haskell", "reflex"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 2, "creation_date": 1550040454, "post_id": 54663807, "comment_id": 96118690, "body": "GHC shouldn\u2019t care/complain about <code>t</code> being unspecified unless it\u2019s actually relevant for selecting a typeclass instance. Without seeing more of the code, it\u2019s hard to know why a typeclass instance is being selected using that type."}, {"owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "reply_to_user": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 0, "creation_date": 1550045212, "post_id": 54663807, "comment_id": 96120898, "body": "@AlexisKing, I&#39;ve added a code example. Is it easier to see what I meant with that? In the meantime I&#39;ve also found an answer to my question with the help of dalaing. But perhaps you know another solution to this situation? I&#39;m still open to other options, especially if they work more generally in non-reflex Haskell code too. (See: &quot;I just still wish GHC could be asked to be more lenient in type checking dead code in general, not just when it comes to reflex, but perhaps that is impossible for now.&quot;)"}], "answers": [{"tags": [], "owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "is_accepted": true, "score": 3, "last_activity_date": 1550044522, "creation_date": 1550044522, "answer_id": 54665102, "question_id": 54663807, "link": "https://stackoverflow.com/questions/54663807/could-not-deduce-reflex-t0-arising-from-a-use-of-never/54665102#54665102", "title": "Could not deduce (Reflex t0) arising from a use of \u2018never\u2019", "body": "<p>Together with @dalaing on #reflex-frp we found that <code>never :: Event t ()</code> works if <code>-XScopedTypeVariables</code> is enabled and the parent widget has a <code>forall t. Reflex t =&gt;</code> constraint or similar.</p>\n\n<p>For example, section 3 in the linked code example could be modified as such:</p>\n\n<pre><code>{-# language ScopedTypeVariables #-}\n\nmain = run 3000 $ mainWidget foo\n\nfoo :: forall t m. MonadWidget t m =&gt; m ()\nfoo = do\n  let buttonEv = never :: Event t ()\n  buttonEv &lt;- button \"click me\"\n  clicksCountDy &lt;- count buttonEv\n  display clicksCountDy\n</code></pre>\n\n<p>Which compiles. But it is inconvenient to have to specify the event type everywhere, and it may also not be as DRY as we want, so -XPartialTypeSignatures could help via <code>never :: Event t _</code></p>\n\n<p>Or even better, I find, we can do <code>never @t</code> with <code>-XTypeApplications</code>:</p>\n\n<pre><code>{-# language ScopedTypeVariables #-}\n{-# language TypeApplications #-}\n\nmain = run 3000 $ mainWidget foo\n\nfoo :: forall t m. MonadWidget t m =&gt; m ()\nfoo = do\n  let buttonEv = never @t\n  buttonEv &lt;- button \"click me\"\n  clicksCountDy &lt;- count buttonEv\n  display clicksCountDy\n</code></pre>\n\n<p>So from this point onwards, I might just make it a policy that in my reflex related code portions I never write <code>never</code>, and always write <code>(never @t)</code>, which solves this problem perfectly for the most part.</p>\n\n<p>I just still wish GHC could be asked to be more lenient in type checking dead code in general, not just when it comes to reflex, but perhaps that is impossible for now.</p>\n"}, {"comments": [{"owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "edited": false, "score": 0, "creation_date": 1550125212, "post_id": 54671521, "comment_id": 96156850, "body": "There are a few reasons why the <code>--</code> suggestion wouldn&#39;t work unfortunately.   (1) <code>let buttonEv = never</code> was used as a simple example. In reality, there exist lines like: <code>fooEv &lt;- phi $ (id &amp;&amp;&amp; pure never) &lt;$&gt; (fmap snd &lt;$&gt; barWidget baz)</code> and like <code>let qux = fmap ((,,) &lt;$&gt; view _1 &lt;*&gt; view _2 &lt;*&gt; pure never)</code>. Even if I could use block comments, the expected underlying structure is a 2-tuple and a 3-tuple respectively. Not so simple to just comment out."}, {"owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "edited": false, "score": 0, "creation_date": 1550125227, "post_id": 54671521, "comment_id": 96156856, "body": "(2) Like I mentioned, this question is mainly for refactoring. It is quite frustrating to be yelled at by the compiler when I am moving around code that handles events that some <code>never</code> events aren&#39;t used. It&#39;s useless noise that I have to weed through to hunt for the relevant type error information.  (3) Some, if not all, of those <code>never</code>s might get reconnected as the refactoring eventually concludes, making it to be a useless exercise to having to comment them out just to do the reverse later on. Especially when small changes can mean having to comment out dozens of them."}, {"owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "edited": false, "score": 0, "creation_date": 1550125268, "post_id": 54671521, "comment_id": 96156875, "body": "(4) I find it to be bad form from a compiler in general to complain about code that can never be reached. Makes refactoring that much more noisy, and I have to put in considerable amount more work even just to find out whether the main reason for the refactor even works. I see value in the compiler being able to say these, but I also want to be able to turn off type errors in dead code. That could solve a class of refactoring-related annoyances even beyond reflex-frp."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "reply_to_user": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "edited": false, "score": 0, "creation_date": 1550234621, "post_id": 54671521, "comment_id": 96204558, "body": "@wizek. I made an edit. Binding a pure event instead of the &quot;let&quot; should let the &quot;Reflex t&quot; be inherited from your widget."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "reply_to_user": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "edited": false, "score": 1, "creation_date": 1550234633, "post_id": 54671521, "comment_id": 96204569, "body": "As for the commenting, you&#39;ll have to do what makes the most sense for you, but I believe that it is the best solution. If you decide that you need the commented code then you&#39;ll have to refactor, so no additional work over refactoring initially would be done. OTOH, refactoring something which proves unnecessary is additional work, and there is a possibility of introducing a bug which does something when you thought it would do nothing. Anyway, its my advice to you, you don&#39;t need to take it. You&#39;ve done enough by even considering it. Thanks."}, {"owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "edited": false, "score": 0, "creation_date": 1550256509, "post_id": 54671521, "comment_id": 96216491, "body": "And thank you for offering your suggestions for consideration. Your other one could work, with a bit of tweaking indeed. In its current form, I think the types don&#39;t unify, as I would guess <code>return never</code> is <code>:: (MonadWidget t1 m, Reflex t1, Reflex t2) =&gt; m (Event t2 a)</code>, and we want <code>return never :: (MonadWidget t1 m, Reflex t1) =&gt; m (Event t1 a)</code>. Which could likely be achieved with an explicit definition like <code>boundNever :: (MonadWidget t m) =&gt; m (Event t a); boundNever = pure never</code>. I have considered this briefly prior, but I see <code>never @t</code> to be mostly superior for its purity."}], "tags": [], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "is_accepted": false, "score": 0, "last_activity_date": 1550233607, "last_edit_date": 1550233607, "creation_date": 1550064955, "answer_id": 54671521, "question_id": 54663807, "link": "https://stackoverflow.com/questions/54663807/could-not-deduce-reflex-t0-arising-from-a-use-of-never/54671521#54671521", "title": "Could not deduce (Reflex t0) arising from a use of \u2018never\u2019", "body": "<p>Using</p>\n\n<pre><code>foo :: forall t m. MonadWidget t m =&gt; m ()\nfoo = do\n  let buttonEv = never @t\n  buttonEv &lt;- button \"click me\"\n  clicksCountDy &lt;- count buttonEv\n  display clicksCountDy\n</code></pre>\n\n<p>It's really not a problem with <code>never</code> here. Its a problem of not binding the action to the current monad. The line in question could have been anything:</p>\n\n<pre><code>let buttonEv = button \"never click me\"\n</code></pre>\n\n<p>This would create a button widget action, but never \"connect\" it to the current widget. You wouldn't see the \"never click me\" button in your app.</p>\n\n<p>On the other hand, if you connected the <code>never</code> event to your widget,</p>\n\n<pre><code>buttonEv &lt;- return never\n</code></pre>\n\n<p>you would no longer need the <code>@t</code> annotation.</p>\n\n<p>Ultimately though,  I find that the <code>--</code> annotation works well in instances of dead code. </p>\n\n<pre><code>-- let buttonEv = never\n</code></pre>\n\n<p>Keep the code around if you must, but this is the best way to tell the compiler that the code is unimportant.</p>\n"}], "owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 1, "accepted_answer_id": 54665102, "answer_count": 2, "score": 2, "last_activity_date": 1550233607, "creation_date": 1550038943, "last_edit_date": 1550043907, "question_id": 54663807, "link": "https://stackoverflow.com/questions/54663807/could-not-deduce-reflex-t0-arising-from-a-use-of-never", "title": "Could not deduce (Reflex t0) arising from a use of \u2018never\u2019", "body": "<p>Anyone knows how I could deal with errors like `Could not deduce (Reflex t0) arising from a use of \u2018never\u2019?</p>\n\n<p>I am refactoring a portion of an app, which means a few <code>never</code> events don't get used, but since they are <code>never</code> to begin with, I don't care.</p>\n\n<p>Can I make GHC not care somehow as well?</p>\n\n<p>I know about <code>-XExtendedDefaultRules</code> which likely at least helps to specialize the type from <code>forall t a. Event t a</code> to <code>forall t. Event t ()</code></p>\n\n<p>And I want to specialize <code>t</code> as well to whatever value GHC would accept, since it results in dead code anyway.</p>\n\n<p>Is there something I can write in the <code>default (...)</code> statement that could work? Or is that similarly impossible to writing <code>default (IO)</code> to specialize non-fully-specified monads to IO?</p>\n\n<p><strong>Edit</strong>: On #reflex-frp @dalaing asked for a code example, and this is what I put together for him: <a href=\"https://gist.github.com/Wizek/d14aada2d75637cb4f424f8a324c7ad7\" rel=\"nofollow noreferrer\">https://gist.github.com/Wizek/d14aada2d75637cb4f424f8a324c7ad7</a></p>\n\n<p>Section 1 and 2 compile, 3 doesn't. But I want to make 3 compile as well since the compiler is complaining about ambiguity in something that can only be dead code.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1550035397, "post_id": 54662935, "comment_id": 96116785, "body": "See <a href=\"https://stackoverflow.com/help/mcve\">How to create an MCVE</a>. This snippet isn&#39;t complete and almost certainly isn&#39;t minimal. Minimizing is a critical step in any debugging effort; even if it weren&#39;t required for a good question, you should still do it."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 3, "creation_date": 1550046724, "post_id": 54662935, "comment_id": 96121610, "body": "There is too much going on here for me to see, but in your &quot;Maybe not important&quot; section you are using a lot of expensive functions: <code>reverse</code> and <code>(!!)</code> are both usually indicators that you need better data structures.  But I agree with Daniel, we need to be able to tinker with it, post an MCVE."}], "owner": {"reputation": 31, "user_id": 9745980, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea249dd10658dff791d6eb1a13f52f30?s=128&d=identicon&r=PG&f=1", "display_name": "Bob Green", "link": "https://stackoverflow.com/users/9745980/bob-green"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1550071731, "creation_date": 1550034655, "last_edit_date": 1550071731, "question_id": 54662935, "link": "https://stackoverflow.com/questions/54662935/how-to-evaluate-a-list-into-its-normal-form-with-a-good-running-speed", "title": "How to evaluate a list into its normal form with a good running speed?", "body": "<p>I am working with an implement of SHA-1, using Haskell. However, I got into trouble with <code>seq</code>, which slows down the speed of the following code.</p>\n\n<p>The following code is simplified but still able to show my problem. (The code about IO actions is reserved, because only the large data makes efforts)</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE BangPatterns #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n\nimport qualified Data.ByteString.Lazy as L\nimport qualified Data.ByteString as B\nimport Data.Word\nimport Data.List\nimport Data.Bits\nimport System.IO\nimport Text.Printf\n\nmain :: IO ()\nmain = do\n  let filePath2 = \"/path/to/a/large/file\"\n  content &lt;- L.readFile filePath2\n  print $ sha1Run content\n\ntype ByteSeq = [Word8]\ntype HsPair = (ByteSeq, ByteSeq, ByteSeq, ByteSeq, ByteSeq)\n\ndata ChunkContext = ChunkContext !Int !Int !B.ByteString !HsPair\n  deriving Show\n\ninitHs :: HsPair                      -- some initial values, normal form\ninitHs = let\n  h0 = [0x67, 0x45, 0x23, 0x01]\n  h1 = [0xef, 0xcd, 0xab, 0x89]\n  h2 = [0x98, 0xba, 0xdc, 0xfe]\n  h3 = [0x10, 0x32, 0x54, 0x76]\n  h4 = [0xc3, 0xd2, 0xe1, 0xf0]\n  in (h0, h1, h2, h3, h4)\n\nseqList :: [a] -&gt; [a]\nseqList xs = foldr ((.) . seq) id xs xs\n\nsha1Run :: L.ByteString -&gt; ChunkContext\nsha1Run = L.foldlChunks chunkRoll initCtx\n  where\n    initCtx =  ChunkContext 0 0 B.empty initHs\n\n-- Something needed to ensure just 512 bits are passed into chunkUpdate\nchunkRoll :: ChunkContext -&gt; B.ByteString -&gt; ChunkContext\nchunkRoll ctx@(ChunkContext accuSize restSize rest hs) chunk\n  | B.null chunk = ctx\n  | sizeTaken &lt; sizeToTake = ChunkContext 0 0 (rest &lt;&gt; m) hs\n  | sizeTaken &gt;= sizeToTake = chunkRoll (ChunkContext 0 0 B.empty (chunkUpdate hs chunkData)) ms\n  where\n    chunkData = B.unpack chunk\n    !sizeToTake = 64 - restSize\n    !sizeTaken = B.length m\n    (!m, !ms) = B.splitAt sizeToTake chunk\n\nchunkUpdate :: HsPair -&gt; ByteSeq -&gt; HsPair\nchunkUpdate hs bs = foldl' step hs [0..79] -- iteration for 80 times\n  where\n    step zh i = roundUpdate cz zh\n    chunkData = bs\n    cz = take 13 chunkData\n\n-- really simple function\nroundUpdate :: ByteSeq -&gt; HsPair -&gt; HsPair\nroundUpdate wt hs@(a, b, c, d, e) = (na, nb, nc, nd, ne)\n  where\n    !na = seqList $ a\n    !nb = seqList $ b\n    !nc = seqList $ c\n    !nd = seqList $ d\n    !ne = seqList $ e\n</code></pre>\n\n<p>The key is <code>seqList</code>! I try to apply <code>seqList</code> to a list to limit the expanding \"thunk\". <em>When there is no <code>seqList</code> and some extra operation for lists in the function <code>roundUpdate</code>, the program would quickly eat so much memory that I have to force to stop the process.</em> <code>seq</code> is needed, in my view.</p>\n\n<p>But this program <em>runs really slowly when <code>seqList</code> added</em>, especially <code>filePath2</code> is a \"large\" file (about 1MB), though the constant menory is allocated.</p>\n\n<p>A profiling report has been generated by <code>ghc -prof</code>, following <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/profiling.html\" rel=\"nofollow noreferrer\">this guide</a>.</p>\n\n<p>The amazing <code>seqList</code>!</p>\n\n<pre><code>COST CENTRE MODULE    SRC                    %time %alloc\n\nseqList     Main      lab.hs:39:1-39          93.3   97.3\nchunkUpdate Main      lab.hs:(58,1)-(62,26)    2.8    1.6\nroundUpdate Main      lab.hs:(65,1)-(71,21)    1.6    1.0\n</code></pre>\n\n<p>How solve the performance problem in the code above? How to design the function <code>seqList</code> for the reasonable memory usage and executing speed.</p>\n"}, {"tags": ["c", "haskell", "ffi", "haskell-stack", "nix"], "owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 65, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1550030162, "creation_date": 1550030162, "question_id": 54662270, "link": "https://stackoverflow.com/questions/54662270/how-to-generate-ffi-dependencies-before-stack-builds-my-project-with-nix", "title": "How to generate FFI dependencies before stack builds my project (with nix)?", "body": "<p>I have a Haskell + stack + nix project that makes heavy use of FFI code. The problem is that two of the C files that I depend upon have to be <em>generated</em> before I can compile my Haskell project at large. These two files are (i) <code>./cbits/xdg-shell-protocol.c</code> and (ii) <code>./include/xdg-shell-protocol.h</code>.</p>\n\n<p>First, here is the Makefile which can generate these files:</p>\n\n<pre><code>WAYLAND_PROTOCOLS=$(shell pkg-config --variable=pkgdatadir wayland-protocols)\nWAYLAND_SCANNER=$(shell pkg-config --variable=wayland_scanner wayland-scanner)\n\n# wayland-scanner is a tool which generates C headers and rigging for Wayland\n# protocols, which are specified in XML. wlroots requires you to rig these up\n# to your build system yourself and provide them in the include path.\nxdg-shell-protocol.h:\n $(WAYLAND_SCANNER) server-header \\\n   $(WAYLAND_PROTOCOLS)/stable/xdg-shell/xdg-shell.xml $@\n\nxdg-shell-protocol.c: xdg-shell-protocol.h\n $(WAYLAND_SCANNER) private-code \\\n   $(WAYLAND_PROTOCOLS)/stable/xdg-shell/xdg-shell.xml $@\n</code></pre>\n\n<p>Notice that I depend upon the system programs <code>wayland-protocols</code> and <code>wayland-scanner</code>, both of which are specified in my project's <code>shell.nix</code>:</p>\n\n<pre><code>buildInputs = with pkgs; [ \n                           # ...\n                           # These are bleeding edge so I crafted my own nix expressions:\n                           (callPackage ./nix/wayland.nix { } )\n                           (callPackage ./nix/wayland-protocols.nix { } )\n                           # ...\n                        ];\n</code></pre>\n\n<p>And finally notice that I tell Haskell about these files in my <code>package.yaml</code>:</p>\n\n<pre><code>c-sources:\n   - cbits/xdg-shell-protocol.c\ninclude-dirs:\n  - include\n</code></pre>\n\n<p><strong>Question:</strong> How can I make it so that everytime someone runs <code>stack [--nix] build</code> (with or without nix), the two files (i) <code>./cbits/xdg-shell-protocol.c</code> and (ii) <code>./include/xdg-shell-protocol.h</code> are ensured to be up to date?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1550005934, "post_id": 54658737, "comment_id": 96108960, "body": "Hint: use <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:filter\" rel=\"nofollow noreferrer\"><code>filter</code></a>"}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1550006207, "post_id": 54658737, "comment_id": 96109106, "body": "Please show us what you have tried."}], "answers": [{"tags": [], "owner": {"reputation": 10550, "user_id": 633094, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/8FbW8.jpg?s=128&g=1", "display_name": "munk", "link": "https://stackoverflow.com/users/633094/munk"}, "is_accepted": true, "score": 3, "last_activity_date": 1550006514, "last_edit_date": 1550006514, "creation_date": 1550006051, "answer_id": 54658778, "question_id": 54658737, "link": "https://stackoverflow.com/questions/54658737/how-to-delete-an-element-from-list-and-all-his-duplicates/54658778#54658778", "title": "How to delete an element from list and all his duplicates?", "body": "<p>Filter will do what you need</p>\n\n<pre><code>removeMinAndMax xs = \n    filter (\\x -&gt; x /= listMin &amp;&amp; x /= listMax) xs\n    where listMin = minimum(xs)\n          listMax = maximum(xs)\n</code></pre>\n"}], "owner": {"reputation": 192, "user_id": 10651460, "user_type": "registered", "profile_image": "https://graph.facebook.com/2031740997117049/picture?type=large", "display_name": "yaschk", "link": "https://stackoverflow.com/users/10651460/yaschk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 54658778, "answer_count": 1, "score": 0, "last_activity_date": 1582104040, "creation_date": 1550005823, "last_edit_date": 1582104040, "question_id": 54658737, "link": "https://stackoverflow.com/questions/54658737/how-to-delete-an-element-from-list-and-all-his-duplicates", "title": "How to delete an element from list and all his duplicates?", "body": "<p>I need to find max and min elements from list and remove them and their duplicate. I use </p>\n\n<pre><code>maximum(list)\nminimum(list)\n</code></pre>\n\n<p>to find max and min but don't know how to remove all of them from a list.</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 475, "user_id": 3993379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac1027ad3128505e2ef6222c4e306e73?s=128&d=identicon&r=PG&f=1", "display_name": "FrownyFrog", "link": "https://stackoverflow.com/users/3993379/frownyfrog"}, "edited": false, "score": 2, "creation_date": 1550001985, "post_id": 54657866, "comment_id": 96107147, "body": "<code>f m = concat $ map (\\(x,y)-&gt; zip (repeat x) y) m </code>"}, {"owner": {"reputation": 2181, "user_id": 7058735, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GxhO2.png?s=128&g=1", "display_name": "K Split X", "link": "https://stackoverflow.com/users/7058735/k-split-x"}, "reply_to_user": {"reputation": 475, "user_id": 3993379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac1027ad3128505e2ef6222c4e306e73?s=128&d=identicon&r=PG&f=1", "display_name": "FrownyFrog", "link": "https://stackoverflow.com/users/3993379/frownyfrog"}, "edited": false, "score": 0, "creation_date": 1550002051, "post_id": 54657866, "comment_id": 96107169, "body": "What does the <code>$</code> mean in this case?"}, {"owner": {"reputation": 475, "user_id": 3993379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac1027ad3128505e2ef6222c4e306e73?s=128&d=identicon&r=PG&f=1", "display_name": "FrownyFrog", "link": "https://stackoverflow.com/users/3993379/frownyfrog"}, "edited": false, "score": 0, "creation_date": 1550002102, "post_id": 54657866, "comment_id": 96107196, "body": "$ lets me omit parentheses, it\u2019s the same as <code>concat ( map (\\(x,y)-&gt; zip (repeat x) y) m )</code>"}, {"owner": {"reputation": 2181, "user_id": 7058735, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GxhO2.png?s=128&g=1", "display_name": "K Split X", "link": "https://stackoverflow.com/users/7058735/k-split-x"}, "reply_to_user": {"reputation": 475, "user_id": 3993379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac1027ad3128505e2ef6222c4e306e73?s=128&d=identicon&r=PG&f=1", "display_name": "FrownyFrog", "link": "https://stackoverflow.com/users/3993379/frownyfrog"}, "edited": false, "score": 0, "creation_date": 1550002140, "post_id": 54657866, "comment_id": 96107209, "body": "Alright, thanks, I will look more into zip and repeat to understand this"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 475, "user_id": 3993379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac1027ad3128505e2ef6222c4e306e73?s=128&d=identicon&r=PG&f=1", "display_name": "FrownyFrog", "link": "https://stackoverflow.com/users/3993379/frownyfrog"}, "edited": false, "score": 1, "creation_date": 1550002289, "post_id": 54657866, "comment_id": 96107278, "body": "<code>$</code> is actually just function application: <code>f $ x</code> is defined as <code>f x</code>. Put that way, it initially looks useless, but <code>$</code> has very low precedence whereas function application has the highest precedence of all, so in practice it&#39;s helpful for avoiding brackets, exactly as @FrownyFrog says :)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 475, "user_id": 3993379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac1027ad3128505e2ef6222c4e306e73?s=128&d=identicon&r=PG&f=1", "display_name": "FrownyFrog", "link": "https://stackoverflow.com/users/3993379/frownyfrog"}, "edited": false, "score": 0, "creation_date": 1550002875, "post_id": 54657866, "comment_id": 96107568, "body": "@FrownyFrog: instead of using <code>zip (repeat x) y</code>, one can use <code>map (x,) y</code> with <code>TupleSections</code> :)"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1550008054, "post_id": 54657995, "comment_id": 96109869, "body": "Generalizing from a list comprehension to a monad comprehension (or just using plain old <code>do</code> notation) gives you <code>conv :: Monad m =&gt; m (a, m b) -&gt; m (a, b)</code>. IMO, that&#39;s a more natural generalization than <code>Foldable</code> here."}, {"owner": {"reputation": 2181, "user_id": 7058735, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GxhO2.png?s=128&g=1", "display_name": "K Split X", "link": "https://stackoverflow.com/users/7058735/k-split-x"}, "edited": false, "score": 0, "creation_date": 1550102840, "post_id": 54657995, "comment_id": 96151567, "body": "Is this a way to do this using any of the fold operators?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 2181, "user_id": 7058735, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GxhO2.png?s=128&g=1", "display_name": "K Split X", "link": "https://stackoverflow.com/users/7058735/k-split-x"}, "edited": false, "score": 0, "creation_date": 1550102899, "post_id": 54657995, "comment_id": 96151584, "body": "@KSplitX: the second one uses a fold operator."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 2, "last_activity_date": 1550010899, "last_edit_date": 1550010899, "creation_date": 1550002243, "answer_id": 54657995, "question_id": 54657866, "link": "https://stackoverflow.com/questions/54657866/turn-adjacency-list-into-tuple-array-haskell/54657995#54657995", "title": "Turn adjacency list into tuple array Haskell", "body": "<p><em>List comprehension</em> can do the trick:</p>\n\n<pre><code>conv :: [(a, [b])] -&gt; [(a, b)]\nconv xys = [(x, y) | (x, ys) &lt;- xys, y &lt;- ys ]</code></pre>\n\n<p>Or we can use <code>concatMap</code> here:</p>\n\n<pre><code>conv :: Foldable f =&gt; f (a, [b]) -&gt; [(a, b)]\nconv = concatMap (uncurry (map . (,)))</code></pre>\n\n<p>Here the inner function <code>uncurry (map . (,))</code> takes a tuple <code>(x, ys)</code> and thus performs a <code>map (x,)</code>: the <code>uncurry</code> basically unpacks the tuple <code>(x, ys)</code>, and calls <code>(map . (,)) x ys</code>, so that means that we obtain <code>(map (x,)) ys</code>. The above syntax uses the <code>TupleSections</code> extension, but we do not need to activate that extension in the real program, since we never write such syntax. Your <code>fn</code> function you defined is thus equivalent to <code>uncurry (map . (,))</code>.</p>\n\n<p>We thus use this function in a <code>concatMap</code> that will pass the 2-tuples, and concatenate the lists these individual tuples create.</p>\n\n<p>or we can use the \"bind\" <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-62--62--61-\" rel=\"nofollow noreferrer\"><strong><code>&gt;&gt;= :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b</code></strong></a> function:</p>\n\n<pre><code>conv :: Monad m =&gt; m (a, m b) -&gt; m (a, b)\nconv = (=&lt;&lt;) (\\(x, ys) -&gt; ys &gt;&gt;= return . (x,))</code></pre>\n\n<p>or shorter:</p>\n\n<pre><code>conv :: Monad m =&gt; m (a, m b) -&gt; m (a, b)\nconv = (=&lt;&lt;) (uncurry (fmap . (,)))</code></pre>\n\n<p>the nice thing about the latter is that it also works with <code>Maybe</code>s, etc. For example:</p>\n\n<pre><code>Prelude&gt; conv [(0, [1, 2]) , (2, [3, 4]) , (4, [])]\n[(0,1),(0,2),(2,3),(2,4)]\nPrelude&gt; conv Nothing\nNothing\nPrelude&gt; conv (Just (3, Nothing))\nNothing\nPrelude&gt; conv (Just (3, Just 2))\nJust (3,2)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 2, "last_activity_date": 1550018218, "creation_date": 1550018218, "answer_id": 54660786, "question_id": 54657866, "link": "https://stackoverflow.com/questions/54657866/turn-adjacency-list-into-tuple-array-haskell/54660786#54660786", "title": "Turn adjacency list into tuple array Haskell", "body": "\n\n<p>Taking advantage of <code>instance Traversable ((,) a)</code>, we have this remarkably short (and remarkably inscrutable) solution:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>conv :: [(Int, [Int])] -&gt; [(Int, Int)]\nconv = (sequence =&lt;&lt;)\n</code></pre>\n\n<p>The most general type of <code>(sequence =&lt;&lt;)</code> is <code>(Monad m, Traversable t) =&gt; m (t (m a)) -&gt; m (t a)</code>.</p>\n"}], "owner": {"reputation": 2181, "user_id": 7058735, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GxhO2.png?s=128&g=1", "display_name": "K Split X", "link": "https://stackoverflow.com/users/7058735/k-split-x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1550018218, "creation_date": 1550001774, "question_id": 54657866, "link": "https://stackoverflow.com/questions/54657866/turn-adjacency-list-into-tuple-array-haskell", "title": "Turn adjacency list into tuple array Haskell", "body": "<p>Let's say I have the following input:</p>\n\n<p><code>[(0, [1, 2]) , (2, [3, 4]) , (4, [])</code></p>\n\n<p>This is an adjacency list and I want to convert it as such:</p>\n\n<p><code>[(0,1), (0,2), (2,3), (2, 4)]</code> -- notice how there is no <code>4</code> mapping to anything</p>\n\n<p>Here is what I have so far:</p>\n\n<pre><code>conv :: [(Int, [Int])] -&gt; [(Int, Int)]\n\nconv adj = map fn adj -- mapping (0, [1, 2]) should give me [(0, 1), (0, 2)]\n\nfn:: (Int, [Int]) -&gt; [(Int, Int)]\n\nfn (rt, list) = -- somehow perform [(rt, l[0]), (rt, l[1]) ...]\n</code></pre>\n"}, {"tags": ["haskell", "math"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1550001284, "post_id": 54657688, "comment_id": 96106812, "body": "Are we talking about mathematics here, or Haskell? tbh I&#39;ve not come across the term in Haskell, even though it&#39;s ubiquitous in mathematics (at least in abstract algebra)."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1550001743, "post_id": 54657688, "comment_id": 96107039, "body": "if <code>f (x &amp; y) === f x # f y</code>, <code>f</code> is a homomorphism. I think. <a href=\"https://www.google.com/search?q=homomorphism\" rel=\"nofollow noreferrer\">Google says</a>: Wikipedia says: &quot;In algebra, a homomorphism is a structure-preserving map between two algebraic structures of the <i>same</i> type (such as two groups, two rings, or two vector spaces). The word homomorphism comes from the ancient Greek language: \u1f41\u03bc\u03cc\u03c2 (homos) meaning &quot;same&quot; and \u03bc\u03bf\u03c1\u03c6\u03ae (morphe) meaning &quot;form&quot; or &quot;shape&quot;.&quot;"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1550001904, "post_id": 54657688, "comment_id": 96107107, "body": "that&#39;s indeed pretty much the definition in mathematics, yes :) I&#39;m tempted to flag this as off-topic unless the OP (or someone else) can demonstrate some Haskell-specific use of the term that they would like explaining."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1550006041, "post_id": 54657688, "comment_id": 96109012, "body": "Have you tried to google the term?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1556043688, "post_id": 54657688, "comment_id": 98301122, "body": "@RobinZigmond See <a href=\"https://www.cs.ox.ac.uk/files/3378/PRG56.pdf\" rel=\"nofollow noreferrer\">PRG56.pdf</a>, 1986 &quot;An Introduction to the Theory of Lists&quot; by Richard Bird, for Haskell (well, FP)-related uses of &quot;homomorphism&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 1239, "user_id": 8887578, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3nMBo.png?s=128&g=1", "display_name": "Do Say Lazy", "link": "https://stackoverflow.com/users/8887578/do-say-lazy"}, "is_accepted": true, "score": 7, "last_activity_date": 1550014721, "last_edit_date": 1550014721, "creation_date": 1550004013, "answer_id": 54658390, "question_id": 54657688, "link": "https://stackoverflow.com/questions/54657688/what-is-homomorphism-exactly/54658390#54658390", "title": "What is homomorphism exactly?", "body": "<p>According to nLab, <a href=\"https://ncatlab.org/nlab/show/homomorphism\" rel=\"nofollow noreferrer\"> a homomorphism is a function between (the underlying sets) of two algebras that preserves the algebraic structure.</a></p>\n\n<p>What is \"algebraic structure?\"</p>\n\n<p>Abstract algebra studies <em>algebras</em> defined by laws. For example, monoids embody the ideas of associativity and identity, and groups add the idea of invertibility. <a href=\"https://ncatlab.org/nlab/show/algebraic+structure\" rel=\"nofollow noreferrer\">The set of axioms and laws of the algebra is also called its \"algebraic structure.\" Confusingly, an algebra itself is also called an \"algebraic structure\"</a></p>\n\n<p>An example of a group is the set of integers under addition with the identity being 0 and the inverse being -x. Another example of a group is the set of nonzero rational numbers under multiplication with the identity being 1 and the inverse being 1/x.</p>\n\n<p>Now, let's look at group homomorphisms.</p>\n\n<p>Let (G, *, e) denote a group where G is the carrier set, * is the operation, and e is the identity element. Let F be a group homomorphism from group (G, *, e) to group (G', *', e'), and let f be the underlying function from G to G'.</p>\n\n<ul>\n<li>f (a * b) = f a *' f b</li>\n<li>f e = e'</li>\n</ul>\n\n<p>(Note that <a href=\"http://mathworld.wolfram.com/GroupHomomorphism.html\" rel=\"nofollow noreferrer\">the preservation of inverse follows from the above laws</a>.)</p>\n\n<p>This is the meaning of \"preserve the structure\" for groups.</p>\n\n<p>For rings, the ring structure must be preserved, and so on for other algebraic structures.</p>\n\n<p>See <a href=\"https://math.stackexchange.com/a/1350798\">this Math Stack Exchange answer</a>.</p>\n\n<p>Now, what about Haskell?</p>\n\n<p>First, a category consists of <em>objects</em> and <em>morphisms</em> between these objects. These morphisms can be composed associatively, and each object has an <em>identity morphism</em>, the identity element under composition.</p>\n\n<p>A functor is a morphism between categories. In the context of Haskell, a functor is an endofunctor (an endomorphism maps something to itself) from Hask to Hask*. The type constructor maps the objects of Hask (the Haskell types) and <code>fmap</code> maps the morphisms (the Haskell functions). Functors must preserve the <em>category structure</em> of identity and composition, hence the functor laws:</p>\n\n<ul>\n<li><code>fmap (g . f) = (fmap g) . (fmap f)</code></li>\n<li><code>fmap id = id</code></li>\n</ul>\n\n<p>*Note that <a href=\"http://math.andrej.com/2016/08/06/hask-is-not-a-category/\" rel=\"nofollow noreferrer\">Hask fails the laws in the presence of <code>seq</code>, so it isn't actually a category</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 5, "last_activity_date": 1550017544, "last_edit_date": 1550017544, "creation_date": 1550004885, "answer_id": 54658551, "question_id": 54657688, "link": "https://stackoverflow.com/questions/54657688/what-is-homomorphism-exactly/54658551#54658551", "title": "What is homomorphism exactly?", "body": "<p>Haskell types are not merely collections of isolated values; they can have operations that combine two elements of the same type and return yet another element of the type. For example <code>String</code> with <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-43--43-\" rel=\"nofollow noreferrer\"><code>++</code></a>, <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Numeric-Natural.html\" rel=\"nofollow noreferrer\"><code>Natural</code></a> with <code>+</code> and <code>*</code>, <code>Bool</code> with <code>&amp;&amp;</code> and <code>||</code>.</p>\n\n<p>These operations might or might not satisfy some properties. For example, the associative property (satisfied by all the operations mentioned earlier) or the commutative property (that list append <code>++</code> doesn't satisfy). Sometimes a property relates two different operations, like the distributive law relating <code>+</code> and <code>*</code>.</p>\n\n<p>Suppose we have two different types, and also two different operations, one for each type. For example <code>String</code> and <code>++</code> on one side, and <code>Natural</code> and <code>+</code> on the other. The operations are different, but if we squint a little, we see that they both satisfy the associative property.</p>\n\n<p>Now, what if we could find a function that converted <code>String</code> values into <code>Natural</code> values, in such a way that <code>+</code>ing the results of converting two <code>String</code>s was always equal to the result of converting the <code>++</code>ing of the original <code>String</code>s? This is more difficult than simply finding any function whatsoever of type <code>String -&gt; Natural</code>. It must be a function that preserves the results of the operations when moving to the other side. This function between the two types is called an <em>homomorphism</em>.</p>\n\n<p>For example, the function <code>length :: String -&gt; Natural</code> is an homomorphism. The length of the concatenation of two strings is equal to the sum of the original lengths. A function like <code>length</code> but which assigned a non-zero value to the empty list would not be a valid homomorphism.</p>\n\n<p>Notice that the homomorphism can \"erase\" distinctions present in the source type. For example <code>length</code> assigns the same number to <code>\"foo\"</code> and <code>\"bar\"</code>.</p>\n\n<p>Another example: consider the type <code>FilePath</code> and the operation <a href=\"http://hackage.haskell.org/package/filepath-1.4.2.1/docs/System-FilePath-Posix.html#v:-60--47--62-\" rel=\"nofollow noreferrer\"><code>&lt;/&gt;</code></a> on one side (let's only take relative folder paths into account) and the type <code>IO ()</code> and the operation <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#v:-62--62-\" rel=\"nofollow noreferrer\"><code>&gt;&gt;</code></a> on the other. Then the function <a href=\"http://hackage.haskell.org/package/directory-1.3.3.2/docs/System-Directory.html#v:setCurrentDirectory\" rel=\"nofollow noreferrer\"><code>setCurrentDirectory :: FilePath -&gt; IO ()</code></a> is an homomorphism. Notice that there are values of <code>IO ()</code>, for example <code>putStrLn \"foo\"</code>, that do not represent a \"change folder\" effect and are never \"targeted\" by <code>setCurrentDirectory</code>. This didn't happen with <code>lenght</code>, where every <code>Natural</code> was the <code>lenght</code> of some <code>String</code> or another.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 694, "favorite_count": 1, "accepted_answer_id": 54658390, "answer_count": 2, "score": 5, "last_activity_date": 1550017544, "creation_date": 1550001032, "last_edit_date": 1550001465, "question_id": 54657688, "link": "https://stackoverflow.com/questions/54657688/what-is-homomorphism-exactly", "title": "What is homomorphism exactly?", "body": "<p>Homo means equal and homomorphism in Haskell is about preserving the structure.  </p>\n\n<p>For instance, the <code>fmap</code> function from category <em>functor</em>, preserves the structure.</p>\n\n<p>But what does <strong>homomorphism</strong> exactly mean?  </p>\n"}, {"tags": ["haskell", "int", "tuples", "double"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1549997953, "post_id": 54656890, "comment_id": 96105180, "body": "Since a <code>StudentMark</code> is a tuple of a <code>String</code> and an <code>Int</code>, that does not seem to make much sense here. You should actually aim to convert it back to an <code>Int</code>, or just leave it an <code>Int</code>, like <code>(std, div (mrk * 4) 10)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1549998249, "creation_date": 1549998249, "answer_id": 54657025, "question_id": 54656890, "link": "https://stackoverflow.com/questions/54656890/converting-num-to-fractional-in-haskell/54657025#54657025", "title": "converting Num to Fractional in Haskell", "body": "<blockquote>\n  <p>I think it is related with I being returning a double instead of an Int but I cannot figure out how to fix this.</p>\n</blockquote>\n\n<p>Not exactly, in Haskell, there are no implicit conversions.</p>\n\n<p>Since <code>StudentMark</code> is in fact an alias of <code>(String, Int)</code> that means that <code>mrk</code> is an <code>Int</code>. But your division <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-47-\" rel=\"nofollow noreferrer\"><strong><code>(/) :: Fractional a =&gt; a -&gt; a -&gt; a</code></strong></a> takes as type a <code>Fractional a</code>, and an <code>Int</code> is not a member of the <code>Fractional</code> typeclass. For integral divisions, one can use <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:div\" rel=\"nofollow noreferrer\"><strong><code>div :: Integral a =&gt; a -&gt; a -&gt; a</code></strong></a></p>\n\n<p>We can thus write this like:</p>\n\n<pre><code>capMark :: StudentMark -&gt; StudentMark\ncapMark (std, mrk) = (std, <b>div</b> (mrk * 4) <b>10</b>)</code></pre>\n\n<p>or a shorter version with <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Arrow.html#v:second\" rel=\"nofollow noreferrer\"><strong><code>second :: Arrow a =&gt; a b c -&gt; a (d, b) (d, c)</code></strong></a>:</p>\n\n<pre><code><b>import Control.Arrow(second)</b>\n\ncapMark :: StudentMark -&gt; StudentMark\ncapMark = second ((`div` 10) . (*4))</code></pre>\n"}], "owner": {"reputation": 157, "user_id": 9227001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5b8c6a7a237f5cd46296e765aa2d2a1f?s=128&d=identicon&r=PG&f=1", "display_name": "Nicekor", "link": "https://stackoverflow.com/users/9227001/nicekor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 379, "favorite_count": 0, "accepted_answer_id": 54657025, "answer_count": 1, "score": 1, "last_activity_date": 1549998249, "creation_date": 1549997719, "question_id": 54656890, "link": "https://stackoverflow.com/questions/54656890/converting-num-to-fractional-in-haskell", "title": "converting Num to Fractional in Haskell", "body": "<p>Basically I have some exercises to learn tuples in Haskell.</p>\n\n<p>In this one I declare a type named StudentMark which requires:</p>\n\n<ul>\n<li>A String (the name of the student)</li>\n<li>Int (the mark of the student, 0 to 100).</li>\n</ul>\n\n<p>Then I have to create a function which caps the mark of a student to a maximum of 40.</p>\n\n<p>But I get this error doing it:</p>\n\n<pre><code>No instance for (Fractional Int) arising from a use of \u2018/\u2019\n</code></pre>\n\n<p>I think it is related with I being returning a double instead of an Int but I cannot figure out how to fix this. Here is the code:</p>\n\n<pre><code>import Data.Char\n\ntype StudentMark = (String, Int)\n\n{- the total mark without cap would be 100, with the cap it would be 40,\n  if we divide 100/40 we get 2.5 which is a common factor\n-}\ncapMark :: StudentMark -&gt; StudentMark\ncapMark (std, mrk) = (std, fromIntegral (mrk / 2.5))\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 1842, "user_id": 5861569, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/AuMZG.png?s=128&g=1", "display_name": "Khundragpan", "link": "https://stackoverflow.com/users/5861569/khundragpan"}, "edited": false, "score": 2, "creation_date": 1549991234, "post_id": 54655085, "comment_id": 96102135, "body": "Any two types having same cardinality will always be isomorphic to one another. There will be n! unique isomorphism between them where n is cardinality. |Bool| = 2 and |Maybe ()| = 2."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1549995867, "post_id": 54655085, "comment_id": 96104247, "body": "&quot;Isomorphic&quot; is not a property of a type, it is a relation between types. So &quot;Is <code>Bool -&gt; Maybe ()</code> isomorphic?&quot; is an ill-formed question, but &quot;Are <code>Bool</code> and <code>Maybe ()</code> isomorphic?&quot; would be sensible, as would &quot;Are <code>Bool -&gt; Maybe ()</code> and <code>(Bool, Maybe ())</code> isomorphic?&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 7, "last_activity_date": 1549999228, "last_edit_date": 1549999228, "creation_date": 1549991313, "answer_id": 54655264, "question_id": 54655085, "link": "https://stackoverflow.com/questions/54655085/is-bool-maybe-isomorphic/54655264#54655264", "title": "Is Bool -&gt; Maybe () isomorphic?", "body": "<p><code>Bool</code> and <code>Maybe ()</code> are isomorphic types (<a href=\"https://stackoverflow.com/a/54655998/1126841\">ignoring problems involving bottom</a>), as witnessed by the following mappings between the two:</p>\n\n<pre><code>b2m :: Bool -&gt; Maybe ()\nb2m True = Just ()\nb2m False = Nothing\n\nm2b :: Maybe () -&gt; Bool\nm2b (Just ()) = True\nm2b Nothing = False\n</code></pre>\n\n<p>It is easy to verify that <code>b2m . m2b</code> and <code>m2b . b2m</code> are both equivalent to <code>id</code>:</p>\n\n<pre><code>m2b . b2m $ True == m2b (b2m True) == m2b (Just ()) == True == id True\nm2b . b2m $ Fals == m2b (b2m False) ==  m2b Nothing == False == id False\n\nb2m . m2b (Just ()) == b2m (m2b (Just ())) == b2m True == Just () == id (Just ())\nb2m . m2b Nothing == b2m (m2b Nothing) == b2m False == Nothing == id Nothing\n</code></pre>\n\n<hr>\n\n<p>In your question, you don't have a single morphism. You have the building blocks for the 4 different functions that have type <code>Bool -&gt; Maybe ()</code>, as follows:</p>\n\n<pre><code>f1,f2,f3,f4 :: Bool -&gt; Maybe ()\nf1 True = Just ()\nf1 False = Nothing\n\nf2 True = Nothing\nf2 False = Just ()\n\nf3 True = Just ()\nf3 False = Just ()\n\nf4 True = Nothing\nf4 False = Nothing\n</code></pre>\n\n<p>Likewise, there are 4 different functions of type <code>Maybe () -&gt; Bool</code>:</p>\n\n<pre><code>f5,f6,f7,f8 :: Maybe () -&gt; Bool\nf5 (Just ()) = True\nf5 Nothing = False\n\nf6 (Just ()) = False\nf6 Nothing = True\n\nf7 (Just ()) = True\nf7 Nothing = True\n\nf8 (Just ()) = False\nf8 Nothing = False\n</code></pre>\n\n<p>Some pairs of functions form an isomorphism, but some don't. The top of this answer shows that <code>f1</code> and <code>f5</code> do, but <code>f3</code> and <code>f8</code>, for example, do not.</p>\n\n<pre><code>f3 . f8 $ (Just ()) == f3 (f8 Just ()) == f3 False == Just () == id (Just ())\nf3 . f8 $ Nothing == f3 (f8 Nothing) == f3 False == Just () != id Nothing\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5992, "user_id": 74497, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0d4a7e6c8edd88e835508df8397592e5?s=128&d=identicon&r=PG", "display_name": "ocharles", "link": "https://stackoverflow.com/users/74497/ocharles"}, "is_accepted": false, "score": 4, "last_activity_date": 1549991401, "creation_date": 1549991401, "answer_id": 54655287, "question_id": 54655085, "link": "https://stackoverflow.com/questions/54655085/is-bool-maybe-isomorphic/54655287#54655287", "title": "Is Bool -&gt; Maybe () isomorphic?", "body": "<p>If we use <code>|T|</code> to donate the amount of possible values for a type, we can see that <code>|()| = 1</code> (there is only one way to construct <code>()</code>). Furthermore, we can see that for <code>data Maybe a = Just a | Nothing</code> we have <code>|Maybe a| = 1 + |a|</code>, and thus <code>|Maybe ()| = 1 + |()| = 1 + 1 = 2</code>. Therefore, there are two distinct values for <code>|Maybe ()|</code>. The same exercise for <code>data Bool = True | False</code> shows us that <code>|Bool| = 1 + 1 = 2</code>, and so both of these types have exactly the same number of inhabitants.</p>\n\n<p>To show these types are isomorphic we just need to construct an isomorphism. That's a function from one type to the other, such that there is also an inverse function:</p>\n\n<pre><code>toBool :: Maybe () -&gt; Bool\ntoBool Nothing = False\ntoBool (Just ()) = True\n\nfromBool :: Bool -&gt; Maybe ()\nfromBool False = Nothing\nfromBool True = Just ()\n</code></pre>\n\n<p>Such that <code>toBool . fromBool = id</code> and <code>fromBool . toBool = id</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 6, "last_activity_date": 1550024908, "last_edit_date": 1550024908, "creation_date": 1549994168, "answer_id": 54655998, "question_id": 54655085, "link": "https://stackoverflow.com/questions/54655085/is-bool-maybe-isomorphic/54655998#54655998", "title": "Is Bool -&gt; Maybe () isomorphic?", "body": "<p>The types are \"morally\" isomorphic, but not precisely isomorphic in Haskell.</p>\n\n<p><code>Bool</code> has three values: <code>True</code>, <code>False</code>, and <code>_|_</code> (bottom, representing non-termination or error).</p>\n\n<p><code>Maybe ()</code> has <em>four</em> values: <code>Nothing</code>, <code>Just ()</code>, <code>Just _|_</code>, and <code>_|_</code>.</p>\n\n<p>We tend to partially order the values of a type by definedness. Under this partial order they form a <em>Scott domain</em>, which is a <em>meet semilattice</em> with certain completeness properties. In this case,</p>\n\n<pre><code>_|_ &lt; Just _|_ &lt; Just ()\n_|_ &lt; Nothing\n</code></pre>\n\n<p>Recursive types lead to more interesting domains. For example, the type <code>[Natural]</code> includes the chain</p>\n\n<pre><code>  _|_\n&lt; 1 : _|_\n&lt; 1 : 1 : _|_\n&lt; 1 : 1 : 2 : _|_\n&lt; ...\n&lt; fibs\n</code></pre>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 289, "favorite_count": 0, "accepted_answer_id": 54655264, "answer_count": 3, "score": 0, "last_activity_date": 1550024908, "creation_date": 1549990699, "question_id": 54655085, "link": "https://stackoverflow.com/questions/54655085/is-bool-maybe-isomorphic", "title": "Is Bool -&gt; Maybe () isomorphic?", "body": "<p>I am trying to figure out, if <code>Bool -&gt; Maybe ()</code> is isomorphic or not.  </p>\n\n<p>The possible combination are: </p>\n\n<pre><code>True -&gt; Just ()\nTrue -&gt; Nothing\nFalse -&gt; Just ()\nFalse -&gt; Nothing\n</code></pre>\n\n<p>I would say, it is isomorphic and for every combination, it exists seperate functions to inverse it.   </p>\n\n<p>How to prove that the above morphism is isomorphic?</p>\n"}, {"tags": ["haskell", "derived-instances"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 3, "creation_date": 1550006246, "post_id": 54653134, "comment_id": 96109124, "body": "This is probably not a <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Eq.html#t:Eq\" rel=\"nofollow noreferrer\">lawful Eq instance</a>. Assuming that you allow consumers of your tree to look at anything but the weight of a node, you break the &quot;Substitutivity&quot; law. Why do you need these Eq and Ord instances? Look for alternative approaches to whatever goal you had in mind."}], "answers": [{"comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1549985333, "post_id": 54653386, "comment_id": 96098569, "body": "I think it would be cleaner to write them point-free, e.g. <code>compare = compare `on` getWeight</code>"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1549985536, "post_id": 54653386, "comment_id": 96098705, "body": "good point @FyodorSoikin, don&#39;t know how I missed that. I will edit and give you credit :)"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 2, "creation_date": 1549985577, "post_id": 54653386, "comment_id": 96098726, "body": "Even better: <code>compare = comparing getWeight</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1549985850, "post_id": 54653386, "comment_id": 96098912, "body": "that looks good @Alec, I&#39;ve actually never come across <code>comparing</code> before. It turns out trying to answer what questions I can on here is actually good for learning more about Haskell myself :)"}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": true, "score": 7, "last_activity_date": 1549985620, "last_edit_date": 1549985620, "creation_date": 1549984936, "answer_id": 54653386, "question_id": 54653134, "link": "https://stackoverflow.com/questions/54653134/is-it-possible-to-write-a-generall-derived-instance-for-a-data-type-in-haskell/54653386#54653386", "title": "Is it possible to write a generall derived instance for a data type in haskell?", "body": "<p>To do what you want, first write a more general version (that is, a polymorphic version) of <code>getWeight</code>, which only requires rewriting the type signature:</p>\n\n<pre><code>getWeight :: Htree a b -&gt; a\ngetWeight(Leaf weight _) = weight\ngetWeight(Branch weight _ _) = weight\n</code></pre>\n\n<p>Then you can do the following (after <code>import</code>ing the <code>on</code> function from <code>Data.Function</code> - I have also rewritten to make them point free as recommended by @FyodorSolkin)</p>\n\n<pre><code>instance (Eq a) =&gt; Eq (Htree a b) where\n    (==) = (==) `on` getWeight\n\ninstance (Ord a) =&gt; Ord (Htree a b) where\n    compare = compare `on` getWeight\n</code></pre>\n"}], "owner": {"reputation": 111, "user_id": 7036574, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6c64c58d7a2241d71fce37ca79ded53b?s=128&d=identicon&r=PG&f=1", "display_name": "kalle konsida", "link": "https://stackoverflow.com/users/7036574/kalle-konsida"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 54653386, "answer_count": 1, "score": 0, "last_activity_date": 1549985747, "creation_date": 1549984193, "last_edit_date": 1549985747, "question_id": 54653134, "link": "https://stackoverflow.com/questions/54653134/is-it-possible-to-write-a-generall-derived-instance-for-a-data-type-in-haskell", "title": "Is it possible to write a generall derived instance for a data type in haskell?", "body": "<p>I require comparison between two Htrees and to do so i implemented my own comparison function which i use together with sortBy, however i want to implement a derived instance of the Eq and Ord classes but the amount of cases  needed to cover all possible combinations makes it impractical. </p>\n\n<pre><code>data Htree a b = Leaf a b\n         | Branch a (Htree a b) (Htree a b)\n          deriving (Show)\n\ninstance (Eq a) =&gt; Eq (Htree a b) where \n\n     (Leaf weight1 _ ) == (Leaf weight2 _) = weight1 == weight2\n     (Branch weight1 _ _) == (Leaf weight2 _) = weight1 == weight2\n     (Leaf weight1 _ ) == (Branch weight2 _ _) = weight1 == weight2\n     (Branch weight1 _ _) == (Branch weight2 _ _) = weight1 == weight2\n</code></pre>\n\n<p>As you can see, i just want to compare a single part of the Htree, Which will be an Integer in the actual code, and i need to write four cases for it. is there a way to generalize this so i can write it in just a single case? \nIf i compare two Htree, compare their Integer parts? </p>\n\n<p>what i currently use to compare two htree is:</p>\n\n<pre><code>comparison :: Htree Integer (Maybe Char) -&gt; Htree Integer (Maybe Char) -&gt; \nOrdering\ncomparison w1 w2 = if(getWeight(w1) &gt; getWeight(w2)) then GT\n               else if(getWeight(w1) &lt; getWeight(w2)) then LT\n               else EQ\n</code></pre>\n\n<p>where getWeight is defined as:</p>\n\n<pre><code>getWeight :: Htree Integer (Maybe Char) -&gt; Integer\ngetWeight(Leaf weight _) = weight\ngetWeight(Branch weight _ _) = weight\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 1, "creation_date": 1549964650, "post_id": 54646956, "comment_id": 96085349, "body": "This is underspecified a bit. What extra arguments are there to <code>printKeyword</code> - there&#39;s just <code>AST</code> right now. Why is a function doing XML serialization called <code>keywordColor</code> as well? This is a code smell. This definitely shouldn&#39;t be a single function. There are numerous ways in which <code>printKeyword</code> could use &quot;external&quot; code, but it doesn&#39;t necessarily have to be a monad context. Reader monad specifically is just syntax sugar over parameters, they&#39;re functionally equivalent. If you can&#39;t code this with regular arguments, monadic contexts won&#39;t help."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1549982288, "post_id": 54646956, "comment_id": 96096431, "body": "To paraphrase Einstein, it should be as simple as possible, but no simpler. That means passing a formatting function. <code>printKeyword :: (String -&gt; String) -&gt; AST -&gt; String</code>, with <code>printKeyword f = f . show</code>. If you can somehow encode a request for a specifically formatted string in a type, then a type class with <code>printKeyword :: AST -&gt; a</code> as a method might be appropriate."}], "answers": [{"tags": [], "owner": {"reputation": 1290, "user_id": 5499871, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206799318615183/picture?type=large", "display_name": "Izaak Weiss", "link": "https://stackoverflow.com/users/5499871/izaak-weiss"}, "is_accepted": false, "score": 2, "last_activity_date": 1549997621, "creation_date": 1549997621, "answer_id": 54656858, "question_id": 54646956, "link": "https://stackoverflow.com/questions/54646956/abstracting-out-a-function-that-i-call/54656858#54656858", "title": "Abstracting out a function that I call", "body": "<p>You can pass <code>keywordColor</code> in to <code>printKeyword</code> as a parameter:</p>\n\n<pre><code>printKeyword :: (String -&gt; String) -&gt; AST -&gt; String\nprintKeyword keyWordColor a = keywordColor (show a)\n\nxmlKeywordColor :: String -&gt; String\nxmlKeywordColor k = \"&lt;keyword&gt;\" ++ k ++ \"&lt;/keyword&gt;\"\n\ntermKeywordColor :: String -&gt; String\ntermKeywordColor k = \"\\ESC[28;2;24;255;128m\" ++ k ++ \"\\ESC[0m\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2090, "user_id": 1499066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a35bb8eaa9c809c52774aef01d19afa3?s=128&d=identicon&r=PG", "display_name": "John Smith", "link": "https://stackoverflow.com/users/1499066/john-smith"}, "edited": false, "score": 0, "creation_date": 1550214180, "post_id": 54657226, "comment_id": 96194158, "body": "This is exactly the kind of abstraction I was looking for. Thank you very much good sir."}], "tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": true, "score": 1, "last_activity_date": 1549999441, "last_edit_date": 1549999441, "creation_date": 1549999103, "answer_id": 54657226, "question_id": 54646956, "link": "https://stackoverflow.com/questions/54646956/abstracting-out-a-function-that-i-call/54657226#54657226", "title": "Abstracting out a function that I call", "body": "<blockquote>\n  <p>The implementation of <code>printKeyword</code> should be kept as simple as possible, hence I am thinking of monads, so I don't have to \"manually\" carry around extra arguments to <code>printKeyword</code>.</p>\n</blockquote>\n\n<p>Automatically passing around extra arguments to functions is what <em>typeclasses</em> do. This is an alternative to Izaak's explicit dictionary passing, and also lets you encode more information into the types. To do this, you must add a type for each output format</p>\n\n<pre><code>newtype XML = XML String\nnewtype ANSI = ANSI String\n</code></pre>\n\n<p>and a typeclass that manages the dictionary passing for you</p>\n\n<pre><code>class Formatted a where\n  keywordColor :: String -&gt; a\n</code></pre>\n\n<p>and implementations for your types</p>\n\n<pre><code>instance Formatted XML where\n  keywordColor k = XML $ \"&lt;keyword&gt;\" ++ k ++ \"&lt;/keyword&gt;\"\n\ninstance Formatted ANSI where\n  keywordColor k = ANSI $ \"\\ESC[28;2;24;255;128m\" ++ k ++ \"\\ESC[0m\"\n</code></pre>\n\n<p>and finally, implement <code>printKeyword</code> as</p>\n\n<pre><code>printKeyword :: Formatted a =&gt; AST -&gt; a\nprintKeyword = keywordColor . show\n</code></pre>\n\n<p>You might prefer this if</p>\n\n<ul>\n<li>You want the type system to make sure that you don't confuse XML and ANSI strings</li>\n<li>You have more than one formatting function, which may make explicit dictionary passing unwieldy. (I've assumed that this is relevant to you because you said \"argument<strong>s</strong>\".)</li>\n</ul>\n\n<p>Note that the return type polymorphism often forces you to use more type annotations to tell the compiler what you mean. The <code>TypeApplications</code> extension can help with this:</p>\n\n<pre><code>&gt; :t printKeyword @XML\nprintKeyword @XML :: AST -&gt; XML\n</code></pre>\n"}], "owner": {"reputation": 2090, "user_id": 1499066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a35bb8eaa9c809c52774aef01d19afa3?s=128&d=identicon&r=PG", "display_name": "John Smith", "link": "https://stackoverflow.com/users/1499066/john-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 54657226, "answer_count": 2, "score": 0, "last_activity_date": 1549999441, "creation_date": 1549964411, "question_id": 54646956, "link": "https://stackoverflow.com/questions/54646956/abstracting-out-a-function-that-i-call", "title": "Abstracting out a function that I call", "body": "<p>I have a function, which creates syntax colored output</p>\n\n<pre><code>    printKeyword :: AST -&gt; String\n    printKeyword a = keywordColor (show a)\n</code></pre>\n\n<p>the function <code>keywordColor</code> however should be different for different outputs. For example when generating xml keywordColor might look like this</p>\n\n<pre><code>    keywordColor :: String -&gt; String\n    keywordColor k = \"&lt;keyword&gt;\" ++ k ++ \"&lt;/keyword&gt;\"\n</code></pre>\n\n<p>Instead when printing to an ANSI Terminal it should look like this</p>\n\n<pre><code>    keywordColor :: String -&gt; String\n    keywordColor k = \"\\ESC[28;2;24;255;128m\" ++ k ++ \"\\ESC[0m\"\n</code></pre>\n\n<p>In what way(s) could I write <code>printKeyword</code> to abstract out <code>keywordColor</code> in a way that I can use the same implementation of <code>printKeyword</code> with different outputs? Could I use monads or monadtransformers? If so how would that work? </p>\n\n<p>The implementation of <code>printKeyword</code> should be kept as simple as possible, hence I am thinking of monads, so I don't have to \"manually\" carry around extra arguments to <code>printKeyword</code>.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1549963372, "post_id": 54646575, "comment_id": 96084509, "body": "I can&#39;t find one on Hoogle either. You just mean that you want <code>fct (Left a) = a</code> and <code>fct (Right a) = a</code>? Well you can easily write that yourself (I just wrote it there, see :p )"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 3, "creation_date": 1549965106, "post_id": 54646575, "comment_id": 96085639, "body": "<a href=\"http://hackage.haskell.org/package/catamorphism-0.7.0.0/docs/Data-Morphism-Cata.html\" rel=\"nofollow noreferrer\"><code>Data.Morphism.Cata</code></a> can generate <code>&#39;either</code>, but with the more generic form (<code>(a -&gt; c) -&gt; (b -&gt; c) -&gt; Either a b -&gt; c</code>). In fact, it&#39;s so common, <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html#v:either\" rel=\"nofollow noreferrer\">that&#39;s in <code>base</code> as well</a>. In that case, <code>fct = either id id</code>, but I don&#39;t see the benefit over Robin&#39;s answer above."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549967662, "post_id": 54646575, "comment_id": 96087320, "body": "@RobinZigmond of course Robin but the goal was to use something already and standard..."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1549967676, "post_id": 54646575, "comment_id": 96087333, "body": "thank you @Bartek Banachewicz ! I was exactly looking for that !"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1549967727, "post_id": 54646575, "comment_id": 96087365, "body": "@NicolasHenin K, I&#39;ll post this as an answer then"}], "answers": [{"comments": [{"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1550046029, "post_id": 54648107, "comment_id": 96121314, "body": "same spirit with &#39;maybe&#39; :-)"}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": true, "score": 4, "last_activity_date": 1550050696, "last_edit_date": 1550050696, "creation_date": 1549967814, "answer_id": 54648107, "question_id": 54646575, "link": "https://stackoverflow.com/questions/54646575/catamorphical-function-either-a-a-a/54648107#54648107", "title": "catamorphical function Either a a -&gt; a?", "body": "<p><a href=\"http://hackage.haskell.org/package/catamorphism-0.7.0.0/docs/Data-Morphism-Cata.html\" rel=\"nofollow noreferrer\"><code>Data.Morphism.Cata</code></a> can generate <code>'either</code>, but with the more generic form:</p>\n\n<pre><code>'either :: ((a -&gt; c) -&gt; (b -&gt; c) -&gt; Either a b -&gt; c)\n</code></pre>\n\n<p>In fact, it's so common, <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Either.html#v:either\" rel=\"nofollow noreferrer\">that it's in base as well</a>. In that case:</p>\n\n<pre><code>fct = either id id\n</code></pre>\n"}], "owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 54648107, "answer_count": 1, "score": 0, "last_activity_date": 1550050696, "creation_date": 1549963233, "question_id": 54646575, "link": "https://stackoverflow.com/questions/54646575/catamorphical-function-either-a-a-a", "title": "catamorphical function Either a a -&gt; a?", "body": "<p>I'm looking for a catamorphical function with this signature :</p>\n\n<p><code>fct :: Either a a -&gt; a</code> </p>\n\n<p>unlifting an either with the same types on the left and the right... </p>\n"}, {"tags": ["list", "haskell", "pattern-matching", "maybe"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 4, "creation_date": 1549957595, "post_id": 54645038, "comment_id": 96081299, "body": "It&#39;s not clear to me exactly what you&#39;re asking. Could you share some code and/or give some sample input and output from the function you want to implement?"}, {"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549961570, "post_id": 54645038, "comment_id": 96083435, "body": "Yes, using pseudo-code. With <code>traversable</code> I end up with this <code>Maybe</code> list: <code>Just [1,2,3]</code> I would like to have a proper and safe way to get it &#39;unlifted&#39; and out of context like: <code>[1,2,3]</code>, so getting it away from the Maybe to perform non-fancy functions."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549962191, "post_id": 54645038, "comment_id": 96083786, "body": "So the list is irrelevant, and you want a &quot;safe&quot; way to extract the underlying value (if any) from a <code>Maybe</code> value? Are you aware of <code>fromMaybe</code>: <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Maybe.html#v:fromMaybe\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/&hellip;</a> ? I&#39;m still a little confused and think I may have missed something, because you keep referring to <code>Traversable</code> specifically, yet it seems like your real issue is with <code>Maybe</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549981602, "post_id": 54645038, "comment_id": 96095975, "body": "<code>Traversable</code> is irrelevant; it&#39;s just the way you ended up with a value of type <code>Num a =&gt; Maybe [a]</code>. Your real question is to find a function of type <code>Num a =&gt; Maybe [a] -&gt; [a]</code>."}], "answers": [{"comments": [{"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "edited": false, "score": 0, "creation_date": 1549967364, "post_id": 54646271, "comment_id": 96087154, "body": "Thanks @Mark Seemann. Answer solved the problem... Sorry could not see it myself."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 0, "last_activity_date": 1549962187, "creation_date": 1549962187, "answer_id": 54646271, "question_id": 54645038, "link": "https://stackoverflow.com/questions/54645038/haskell-traversable-getting-values-from-maybe-list/54646271#54646271", "title": "Haskell, traversable getting values from Maybe [list]", "body": "<p>You can pattern-match on a <code>Maybe [Int]</code> just like you pattern-match on any <code>Maybe a</code>:</p>\n\n<pre><code>foo (Just x) = x\nfoo Nothing = -- ?\n</code></pre>\n\n<p>The question is: <em>what do you return in the Nothing case?</em> (To be clear, the above code snippet doesn't compile because <code>foo</code> doesn't return anything in the <code>Nothing</code> case.)</p>\n\n<p>Sometimes, you can decide to do something to the <code>x</code> inside of <code>Just</code>, and then put the result back into a <code>Just</code> case:</p>\n\n<pre><code>map' f (Just x) = Just (f x)\nmap' _ Nothing = Nothing\n</code></pre>\n\n<p>That's exactly what <code>fmap</code> does already for <code>Maybe a</code>, which is why I named the example function <code>map'</code>. With <code>fmap</code>, you can map a <code>Maybe [Int]</code> like this:</p>\n\n<pre><code>Prelude&gt; fmap show (Just [2,4,6,8,100])\nJust \"[2,4,6,8,100]\"\n</code></pre>\n\n<p>Notice that this turns the entire list into a <code>String</code>, because <code>fmap</code> applies to <code>Maybe</code>, not to <code>[]</code>.</p>\n\n<p>While, in general, it's hard to say what to return in the case of <code>Nothing</code>, for lists (and other monoids) a natural 'default value' exists. So, specifically for <code>Maybe [a]</code>, you could write something like this:</p>\n\n<pre><code>maybeListToList :: Maybe [a] -&gt; [a]\nmaybeListToList (Just xs) = xs\nmaybeListToList Nothing = []\n</code></pre>\n\n<p>Using it could look like this:</p>\n\n<pre><code>*Q54645038&gt; maybeListToList (Just [2,4,6,8,100])\n[2,4,6,8,100]\n*Q54645038&gt; maybeListToList Nothing\n[]\n</code></pre>\n\n<p>It's not really necessary, though, because you could instead combine existing functions from <code>Data.Maybe</code> and the standard <code>Prelude</code> to get the same functionality:</p>\n\n<pre><code>Prelude Data.Maybe&gt; maybeToList (Just [2,4,6,8,100])\n[[2,4,6,8,100]]\nPrelude Data.Maybe&gt; concat (maybeToList (Just [2,4,6,8,100]))\n[2,4,6,8,100]\nPrelude Data.Maybe&gt; concat (maybeToList Nothing)\n[]\n</code></pre>\n\n<p>Notice how <code>maybeToList</code> turns any <code>Maybe a</code> into a list. When <code>a</code> is already a list, you get a nested list that you can then flatten with <code>concat</code>.</p>\n"}], "owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 369, "favorite_count": 0, "accepted_answer_id": 54646271, "answer_count": 1, "score": 0, "last_activity_date": 1549962294, "creation_date": 1549957266, "last_edit_date": 1549962294, "question_id": 54645038, "link": "https://stackoverflow.com/questions/54645038/haskell-traversable-getting-values-from-maybe-list", "title": "Haskell, traversable getting values from Maybe [list]", "body": "<p>Found the need for using <code>Traversable</code>. It returned a list like this generates: <code>fReplList = Just [2,4..100]</code>.</p>\n\n<p>I know how to return <code>Maybe</code> value within a list like: <code>[Just 1, Just 2, Nothing]</code>, but I don't know how to pattern-match a Maybe-list like: <code>Just [2,4,6,8..100]</code>. I am a beginner (still) and feel bad I am still running in these rudimentary problems, but maybe you can help. </p>\n"}, {"tags": ["haskell", "conduit"], "answers": [{"comments": [{"owner": {"reputation": 1748, "user_id": 936652, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Uwfmf.jpg?s=128&g=1", "display_name": "Christophe", "link": "https://stackoverflow.com/users/936652/christophe"}, "edited": false, "score": 0, "creation_date": 1549965715, "post_id": 54647146, "comment_id": 96086042, "body": "Yes I thought about using it, but unfortunately it consumes elements even when they are not used for an update: for example I get: [(Nothing,Just 1),(Just 4,Nothing),(Just 6,Just 6)] instead of the expected result [(Nothing,Just 1),(Just 2,Just 1),(Just 4,Just 1),(Just 4,Just 5),(Just 6,Just 5),(Just 6,Just 6),(Just 8,Just 6),(Just 16,Just 6)] ... There needs to be some memory effect in order to achieve this."}, {"owner": {"reputation": 2350, "user_id": 10033674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bbU6P.jpg?s=128&g=1", "display_name": "Karol Samborski", "link": "https://stackoverflow.com/users/10033674/karol-samborski"}, "reply_to_user": {"reputation": 1748, "user_id": 936652, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Uwfmf.jpg?s=128&g=1", "display_name": "Christophe", "link": "https://stackoverflow.com/users/936652/christophe"}, "edited": false, "score": 0, "creation_date": 1549967360, "post_id": 54647146, "comment_id": 96087149, "body": "Is there any specific order of consuming elements? E.g. Firstly we consume element from source A and then from B and then again from A etc..."}, {"owner": {"reputation": 1748, "user_id": 936652, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Uwfmf.jpg?s=128&g=1", "display_name": "Christophe", "link": "https://stackoverflow.com/users/936652/christophe"}, "edited": false, "score": 1, "creation_date": 1549970115, "post_id": 54647146, "comment_id": 96088724, "body": "We consume only from the source that has the lowest element. We consume from both sources only if the elements are equal. When an element is not consumed, its previous value is used in the pair (or Nothing if it was never consumed)."}, {"owner": {"reputation": 2350, "user_id": 10033674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bbU6P.jpg?s=128&g=1", "display_name": "Karol Samborski", "link": "https://stackoverflow.com/users/10033674/karol-samborski"}, "reply_to_user": {"reputation": 1748, "user_id": 936652, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Uwfmf.jpg?s=128&g=1", "display_name": "Christophe", "link": "https://stackoverflow.com/users/936652/christophe"}, "edited": false, "score": 0, "creation_date": 1550215738, "post_id": 54647146, "comment_id": 96194776, "body": "@Christophe I&#39;ve updated my answer. Please check it out."}, {"owner": {"reputation": 1748, "user_id": 936652, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Uwfmf.jpg?s=128&g=1", "display_name": "Christophe", "link": "https://stackoverflow.com/users/936652/christophe"}, "edited": false, "score": 1, "creation_date": 1550218904, "post_id": 54647146, "comment_id": 96196036, "body": "that is what I was looking for indeed... even better than the answer I accepted in the first place."}], "tags": [], "owner": {"reputation": 2350, "user_id": 10033674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bbU6P.jpg?s=128&g=1", "display_name": "Karol Samborski", "link": "https://stackoverflow.com/users/10033674/karol-samborski"}, "is_accepted": true, "score": 1, "last_activity_date": 1550215698, "last_edit_date": 1550215698, "creation_date": 1549964998, "answer_id": 54647146, "question_id": 54644170, "link": "https://stackoverflow.com/questions/54644170/merging-sources-using-haskell-conduit/54647146#54647146", "title": "Merging sources using Haskell Conduit", "body": "<p>I've managed to create your <code>zipC2</code> function:</p>\n\n<pre><code>import Data.Ord\nimport Conduit\nimport Control.Monad\n\nzipC2Def :: (Monad m) =&gt; (a -&gt; a -&gt; Bool) -&gt; ConduitT () a m () -&gt; ConduitT () a m () -&gt; (Maybe a, Maybe a) -&gt; ConduitT () (Maybe a, Maybe a) m ()\nzipC2Def f c1 c2 (s1, s2) = do\n  ma &lt;- c1 .| peekC\n  mb &lt;- c2 .| peekC\n  case (ma, mb) of\n    (Just a, Just b) -&gt;\n      case (f a b, f b a) of\n        (True, True) -&gt; do\n          yield (ma, mb)\n          zipC2Def f (c1 .| drop1) (c2 .| drop1) (ma, mb)\n        (_, True) -&gt; do\n          yield (s1, mb)\n          zipC2Def f c1 (c2 .| drop1) (s1, mb)\n        (True, _) -&gt; do\n          yield (ma, s2)\n          zipC2Def f (c1 .| drop1) c2 (ma, s2)\n        _ -&gt;\n          zipC2Def f (c1 .| drop1) (c2 .| drop1) (ma, s2)\n    (Just a, Nothing) -&gt; do\n      yield (ma, s2)\n      zipC2Def f (c1 .| drop1) c2 (ma, s2)\n    (Nothing, Just b) -&gt; do\n      yield (s1, mb)\n      zipC2Def f c1 (c2 .| drop1) (s1, mb)\n    _ -&gt; return ()\n  where\n    drop1 = dropC 1 &gt;&gt; takeWhileC (const True)\n\nzipC2 :: (Monad m) =&gt; (a -&gt; a -&gt; Bool) -&gt; ConduitT () a m () -&gt; ConduitT () a m () -&gt; ConduitT () (Maybe a, Maybe a) m ()\nzipC2 f c1 c2 = zipC2Def f c1 c2 (Nothing, Nothing)\n\nmain :: IO ()\nmain = \n  let\n    series1 = yieldMany [2, 4, 6, 8, 16 :: Int] :: ConduitT () Int Identity ()\n    series2 = yieldMany [1, 5, 6 :: Int] :: ConduitT () Int Identity ()\n  in\n  putStrLn $ show $ runConduitPure $\n    (zipC2 (&lt;=) series1 series2)\n    .| sinkList\n</code></pre>\n\n<p>output:</p>\n\n<p><code>[(Nothing,Just 1),(Just 2,Just 1),(Just 4,Just 1),(Just 4,Just 5),(Just 6,Just 6),(Just 8,Just 6),(Just 16,Just 6)]</code></p>\n"}, {"tags": [], "owner": {"reputation": 71, "user_id": 8803427, "user_type": "registered", "profile_image": "https://graph.facebook.com/1883144371701274/picture?type=large", "display_name": "Nathan Fran&#231;ois", "link": "https://stackoverflow.com/users/8803427/nathan-fran%c3%a7ois"}, "is_accepted": false, "score": 1, "last_activity_date": 1550147938, "creation_date": 1550147938, "answer_id": 54690611, "question_id": 54644170, "link": "https://stackoverflow.com/questions/54644170/merging-sources-using-haskell-conduit/54690611#54690611", "title": "Merging sources using Haskell Conduit", "body": "<p>The code below works as expected (I called the function mergeSort):</p>\n\n<pre><code>module Data.Conduit.Merge where\n\nimport Prelude (Monad, Bool, Maybe(..), Show, Eq)\nimport Prelude (otherwise, return)\nimport Prelude (($))\nimport Conduit (ConduitT)\nimport Conduit (evalStateC, mapC, yield, await)\nimport Conduit ((.|))\nimport Control.Monad.State (get, put, lift)\nimport Control.Monad.Trans.State.Strict (StateT)\n\nimport qualified Data.Conduit.Internal as CI\n\n-- | Takes two sources and merges them.\n-- This comes from https://github.com/luispedro/conduit-algorithms made available thanks to Luis Pedro Coelho.\nmergeC2 :: (Monad m) =&gt; (a -&gt; a -&gt; Bool) -&gt; ConduitT () a m () -&gt; ConduitT () a m () -&gt; ConduitT () a m ()\nmergeC2 comparator (CI.ConduitT s1) (CI.ConduitT s2) = CI.ConduitT $  processMergeC2 comparator s1 s2\n\nprocessMergeC2 :: Monad m =&gt; (a -&gt; a -&gt; Bool)\n                        -&gt; ((() -&gt; CI.Pipe () () a () m ()) -&gt; CI.Pipe () () a () m ()) -- s1    ConduitT () a m ()\n                        -&gt; ((() -&gt; CI.Pipe () () a () m ()) -&gt; CI.Pipe () () a () m ()) -- s2    ConduitT () a m ()\n                        -&gt; ((() -&gt; CI.Pipe () () a () m b ) -&gt; CI.Pipe () () a () m b ) -- rest  ConduitT () a m ()\nprocessMergeC2 comparator s1 s2 rest = go (s1 CI.Done) (s2 CI.Done)\n    where\n        go s1''@(CI.HaveOutput s1' v1) s2''@(CI.HaveOutput s2' v2)  -- s1''@ and s2''@ simply name the pattern expressions\n            | comparator v1 v2 = CI.HaveOutput (go s1' s2'') v1\n            | otherwise = CI.HaveOutput (go s1'' s2') v2\n        go s1'@CI.Done{} (CI.HaveOutput s v) = CI.HaveOutput (go s1' s) v\n        go (CI.HaveOutput s v) s1'@CI.Done{}  = CI.HaveOutput (go s s1')  v\n        go CI.Done{} CI.Done{} = rest ()\n        go (CI.PipeM p) left = do\n            next &lt;- lift p\n            go next left\n        go right (CI.PipeM p) = do\n            next &lt;- lift p\n            go right next\n        go (CI.NeedInput _ next) left = go (next ()) left\n        go right (CI.NeedInput _ next) = go right (next ())\n        go (CI.Leftover next ()) left = go next left\n        go right (CI.Leftover next ()) = go right next\n\ndata MergeTag = LeftItem | RightItem deriving (Show, Eq)\ndata TaggedItem a = TaggedItem MergeTag a deriving (Show, Eq)\nmergeTag :: (Monad m) =&gt; (a -&gt; a -&gt; Bool) -&gt; ConduitT () a m () -&gt; ConduitT () a m () -&gt; ConduitT () (TaggedItem a) m ()\nmergeTag func series1 series2 = mergeC2 (tagSort func) taggedSeries1 taggedSeries2\n                where\n                    taggedSeries1 = series1 .| mapC (\\item -&gt; TaggedItem LeftItem item)\n                    taggedSeries2 = series2 .| mapC (\\item -&gt; TaggedItem RightItem item)\n                    tagSort :: (a -&gt; a -&gt; Bool) -&gt; TaggedItem a -&gt; TaggedItem a -&gt; Bool\n                    tagSort f (TaggedItem _ item1) (TaggedItem _ item2) = f item1 item2\n\ntype StateMergePair a = (Maybe a, Maybe a)\npairTagC :: (Monad m) =&gt; ConduitT  (TaggedItem a) (StateMergePair a) (StateT (StateMergePair a) m) ()\npairTagC = do\n    input &lt;- await\n    case input of\n        Nothing -&gt; return ()\n        Just taggedItem -&gt; do\n            stateMergePair &lt;- lift get\n            let outputState = updateStateMergePair taggedItem stateMergePair\n            lift $ put outputState\n            yield outputState\n            pairTagC\n\nupdateStateMergePair :: TaggedItem a -&gt; StateMergePair a -&gt; StateMergePair a\nupdateStateMergePair (TaggedItem tag item) (Just leftItem, Just rightItem) = case tag of\n    LeftItem -&gt; (Just item, Just rightItem)\n    RightItem -&gt; (Just leftItem, Just item)\n\nupdateStateMergePair (TaggedItem tag item) (Nothing, Just rightItem) = case tag of\n    LeftItem -&gt; (Just item, Just rightItem)\n    RightItem -&gt; (Nothing, Just item)\n\nupdateStateMergePair (TaggedItem tag item) (Just leftItem, Nothing) = case tag of\n    LeftItem -&gt; (Just item, Nothing)\n    RightItem -&gt; (Just leftItem, Just item)\n\nupdateStateMergePair (TaggedItem tag item) (Nothing, Nothing) = case tag of\n    LeftItem -&gt; (Just item, Nothing)\n    RightItem -&gt; (Nothing, Just item)\n\npairTag :: (Monad m) =&gt; ConduitT  (TaggedItem a) (StateMergePair a) m ()\npairTag = evalStateC (Nothing, Nothing) pairTagC\n\nmergeSort :: (Monad m) =&gt; (a -&gt; a -&gt; Bool) -&gt; ConduitT () a m () -&gt; ConduitT () a m () -&gt; ConduitT () (StateMergePair a) m ()\nmergeSort func series1 series2 = mergeTag func series1 series2 .| pairTag\n</code></pre>\n\n<p>I borrowed the mergeC2 function from <a href=\"https://github.com/luispedro/conduit-algorithms\" rel=\"nofollow noreferrer\">https://github.com/luispedro/conduit-algorithms</a> ...</p>\n\n<p>I am only a beginner in Haskell so the code is certainly not optimal.</p>\n"}], "owner": {"reputation": 1748, "user_id": 936652, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Uwfmf.jpg?s=128&g=1", "display_name": "Christophe", "link": "https://stackoverflow.com/users/936652/christophe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 54647146, "answer_count": 2, "score": 2, "last_activity_date": 1550215698, "creation_date": 1549953533, "last_edit_date": 1549957530, "question_id": 54644170, "link": "https://stackoverflow.com/questions/54644170/merging-sources-using-haskell-conduit", "title": "Merging sources using Haskell Conduit", "body": "<p>Is it possible to build a function (say zipC2) in Conduit that would turn the following sources:</p>\n\n<pre><code>series1 = yieldMany [2, 4, 6, 8, 16 :: Int]\n\nseries2 = yieldMany [1, 5, 6 :: Int]\n</code></pre>\n\n<p>into one that would produce the following pairs (shown here as list):</p>\n\n<pre><code>[(Nothing, Just 1), (Just 2, Just 1), (Just 4, Just 1), (Just 4, Just 5), (Just 6, Just 6), (Just 8, Just 6), (Just 16, Just 6)]\n</code></pre>\n\n<p>It would be called with a comparison function in the following way:</p>\n\n<pre><code>runConduitPure ( zipC2 (&lt;=) series1 series1 .| sinkList )\n</code></pre>\n\n<p>There used to be a <code>mergeSources</code> function in previous versions that did something relatively similar (without a memory effect though), but it disappeared in the most recent version (1.3.1).</p>\n\n<p><em>Clarification about how the function works</em>:\nThe idea is to take 2 sources <em>A</em> (generating values <em>a</em>) and <em>B</em> (generating values <em>b</em>).</p>\n\n<p>We then generate pairs:</p>\n\n<p>If <em>a &lt; b</em> we first build <em>(Just a, Nothing)</em></p>\n\n<p>If <em>b &lt; a</em> it would yield <em>(Nothing, Just b)</em></p>\n\n<p>If <em>a == b</em> we update both sides and we produce <em>(Just a, Just b)</em></p>\n\n<p>The value from the source that was not updated is not consumed and is used for the next round of comparisons. Only updated values are consumed.</p>\n\n<p>We then keep updating the pair, according to the values from <em>A</em> and <em>B</em> relative to each other.</p>\n\n<p>In other words: we update the left side of the pair if <em>a &lt; b</em>, the right side if <em>b &lt; a</em>, or both sides if <em>a == b</em>. Any unconsumed value is kept in memory for the next round of comparison.</p>\n"}, {"tags": ["haskell", "haskell-stack", "nix"], "answers": [{"comments": [{"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1549990211, "post_id": 54643217, "comment_id": 96101574, "body": "Thanks for your answer. Wanted to press against your conclusion a bit though: doesn&#39;t using <code>builtins.getEnv &quot;XDG_RUNTIME_DIR&quot;</code> keep things explicit? Why not prefer that to <code>--no-nix-pure</code>?"}, {"owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1550047308, "post_id": 54643217, "comment_id": 96121929, "body": "It does. It&#39;s a matter of taste and/or requirements. My shell already has 86 variables, many of which relate to desktop integration. To me that&#39;s a good indication that I will not be able to foresee what exactly is going to be used by my app&#39;s libraries and/or child processes. That approach will break things by default in the future and on other people&#39;s systems."}], "tags": [], "owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "is_accepted": true, "score": 1, "last_activity_date": 1549948335, "creation_date": 1549948335, "answer_id": 54643217, "question_id": 54641025, "link": "https://stackoverflow.com/questions/54641025/setting-xdg-runtime-dir-in-a-haskell-stacknix-project/54643217#54643217", "title": "Setting XDG_RUNTIME_DIR in a Haskell Stack+Nix Project", "body": "<p>The Nix purity feature in Stack doesn't work for everything, as you have noticed. Some environment variables are simply required for certain programs to interact with their environment, so it doesn't make sense to use the Nix integration in pure mode. The way I see it, is that <code>--nix-pure</code> is generally only suitable for compilation and incidentally works for some simple programs.</p>\n\n<p>If you feel adventurous, you could try to explicitly pass environment variables through your <code>shell.nix</code>, by adding this line to your shell derivation:</p>\n\n<pre><code>    XDG_RUNTIME_DIR = builtins.getEnv \"XDG_RUNTIME_DIR\"\n</code></pre>\n\n<p>However, I wouldn't bother and just call <code>stack exec</code> with <code>--no-nix-pure</code>.</p>\n"}], "owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "accepted_answer_id": 54643217, "answer_count": 1, "score": 2, "last_activity_date": 1549948335, "creation_date": 1549930473, "question_id": 54641025, "link": "https://stackoverflow.com/questions/54641025/setting-xdg-runtime-dir-in-a-haskell-stacknix-project", "title": "Setting XDG_RUNTIME_DIR in a Haskell Stack+Nix Project", "body": "<h2>Problem</h2>\n\n<p>I am running a Haskell project on NixOS (using <code>stack</code>) that makes use of <code>XDG_RUNTIME_DIR</code> (in case it matters: it's a wayland compositor project that runs with an X11 backend). When my program launches:</p>\n\n<pre><code>stack exec my-compositor-project-exe # nix is enabled by default\n</code></pre>\n\n<p>I get an error:</p>\n\n<pre><code>error: XDG_RUNTIME_DIR not set in the environment\n</code></pre>\n\n<p>However if I run with <code>--no-nix-pure</code>, I don't get an error: </p>\n\n<pre><code>stack --no-nix-pure exec my-compositor-project-exe\n# ... no error ...\n</code></pre>\n\n<p>But is that really the best way to fix this error?</p>\n\n<p>Note that when I run <code>echo $XDG_RUNTIME_DIR</code> in a NixOS terminal I get</p>\n\n<pre><code>echo $XDG_RUNTIME_DIR\n/run/user/1000\n</code></pre>\n\n<p>and when I run <code>nix-shell</code> within my Haskell stack project I also get</p>\n\n<pre><code>[nix-shell:~/my-project]$ echo $XDG_RUNTIME_DIR\n/run/user/1000\n</code></pre>\n\n<p>so it's quite a mystery why I get this error at all. </p>\n\n<p><strong>Question:</strong> What is the proper way to solve this problem?</p>\n\n<p></p>\n\n<h2>Context</h2>\n\n<p>In case it matters <a href=\"https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\" rel=\"nofollow noreferrer\">here</a> is some information about about what <code>$XDG_RUNTIME_DIR</code> means:</p>\n\n<blockquote>\n  <p>There is a single base directory relative to which user-specific runtime files and other file objects should be placed. This directory is defined by the environment variable $XDG_RUNTIME_DI.</p>\n  \n  <p>...</p>\n  \n  <p>$XDG_RUNTIME_DIR defines the base directory relative to which user-specific non-essential runtime files and other file objects (such as sockets, named pipes, &#x2026;) should be stored. The directory MUST be owned by the user, and he MUST be the only one having read and write access to it. Its Unix access mode MUST be 0700.</p>\n  \n  <p>...</p>\n  \n  <p>If $XDG_RUNTIME_DIR is not set applications should fall back to a replacement directory with similar capabilities and print a warning message. Applications should use this directory for communication and synchronization purposes and should not place larger files in it, since it might reside in runtime memory and cannot necessarily be swapped out to disk.</p>\n</blockquote>\n\n<p>The specific FFI call in my program which yields the error is a call to <code>wl_display_add_socket</code> (wayland function) which has at the top of its body:</p>\n\n<pre><code>WL_EXPORT int\nwl_display_add_socket(struct wl_display *display, const char *name)\n{\n  runtime_dir = getenv(\"XDG_RUNTIME_DIR\");\n  if (!runtime_dir) {\n    wl_log(\"error: XDG_RUNTIME_DIR not set in the environment\\n\");\n\n    /* to prevent programs reporting\n     * \"failed to add socket: Success\" */\n    errno = ENOENT;\n    return -1;\n  }\n  //...\n}\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 98400, "user_id": 3001761, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/feZwC.jpg?s=128&g=1", "display_name": "jonrsharpe", "link": "https://stackoverflow.com/users/3001761/jonrsharpe"}, "edited": false, "score": 3, "creation_date": 1549916111, "post_id": 54638417, "comment_id": 96068839, "body": "What do you mean <i>why</i>?!"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "reply_to_user": {"reputation": 98400, "user_id": 3001761, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/feZwC.jpg?s=128&g=1", "display_name": "jonrsharpe", "link": "https://stackoverflow.com/users/3001761/jonrsharpe"}, "edited": false, "score": 0, "creation_date": 1549916221, "post_id": 54638417, "comment_id": 96068894, "body": "This function use the memoization technique, where intermediate results are saved and later reused."}, {"owner": {"reputation": 98400, "user_id": 3001761, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/feZwC.jpg?s=128&g=1", "display_name": "jonrsharpe", "link": "https://stackoverflow.com/users/3001761/jonrsharpe"}, "edited": false, "score": 3, "creation_date": 1549916261, "post_id": 54638417, "comment_id": 96068917, "body": "It&#39;s still not clear what you&#39;re asking."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1549958802, "post_id": 54638417, "comment_id": 96081938, "body": "An easier definition would be <code>let fib :: Int -&gt; Integer; fib = (fib&#39; !!) where fib&#39; = 1 : 1 : zipWith (+) fib&#39; (tail fib&#39;)</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1550139967, "post_id": 54638417, "comment_id": 96164254, "body": "this is a duplicate of <a href=\"https://stackoverflow.com/q/11466284/849891\">this question</a>. due to a technicality, I am unable to close it as a dupe now."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1550140705, "post_id": 54638417, "comment_id": 96164683, "body": "<a href=\"https://stackoverflow.com/a/3209189/849891\">related answer</a>."}], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1549948855, "post_id": 54638495, "comment_id": 96077957, "body": "I&#39;d say there is also a bit of magic when the &quot;ordinary function&quot; <code>fib</code> uses <code>fib_mem</code> in its implementation.  Or at least, that&#39;s part of the technique."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1550005985, "post_id": 54638495, "comment_id": 96108986, "body": "@bradrn <code>it memoizes fib by applying it to every number</code> why does it memoizes?"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1550008030, "post_id": 54638495, "comment_id": 96109862, "body": "Because once it&#39;s applied to one particular number, the compiler knows that that value is at that index in the list, and so can simply look up the value in the list next time. So e.g. if you&#39;ve requested <code>fib_mem 5</code>, the compiler looks up index <code>5</code> in the list, which turns out to be the value <code>fib 5</code>, which it calculates. Next time you request <code>fib 5</code>, the compiler looks up the index <code>5</code> in the list again, however the list is now stored not as <code>[.., fib 5, ...]</code> but instead as <code>[..., 8, ...]</code>, so it can simply look up the previously-calculated value."}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": true, "score": 5, "last_activity_date": 1549916423, "creation_date": 1549916423, "answer_id": 54638495, "question_id": 54638417, "link": "https://stackoverflow.com/questions/54638417/why-is-it-a-memoization-function/54638495#54638495", "title": "Why is it a memoization function?", "body": "<p>I assume you're asking how this memoizes <code>fib</code>. <code>fib</code> itself is just an ordinary function. The real magic happens in <code>fib_mem = (map fib [0..] !!)</code>, which memoizes <code>fib</code>. This expression is equivalent to  saying that <code>fib_mem x = (map fib [0..]) !! x</code>. Let's break this down to see what it's doing:</p>\n\n<ul>\n<li><code>[0..]</code> is an infinite list starting <code>[0,1,2,3,..]</code> and continuing <em>ad infinitum</em>.</li>\n<li><code>map fib [0..]</code> applies <code>fib</code> to each element of this list, producing a list where each element is the Fibonacci number corresponding to the index of that element, so e.g. <code>8</code> is at index <code>5</code>. <strong>This is the importent step</strong>; it memoizes <code>fib</code> by applying it to every number, so once the value at a particular index is forced, it does not have to be recalculated.</li>\n<li>Then <code>!!</code> is used to get the value back from the list, at the appropriate index.</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 0, "last_activity_date": 1550155502, "last_edit_date": 1550155502, "creation_date": 1550139889, "answer_id": 54688136, "question_id": 54638417, "link": "https://stackoverflow.com/questions/54638417/why-is-it-a-memoization-function/54688136#54688136", "title": "Why is it a memoization function?", "body": "<p>In case you meant  \"<strong><em>why</em></strong> is it a <em>memoizing</em> function\", <a href=\"https://stackoverflow.com/questions/54677772/at-the-top-level-results-will-persist-in-memory/54678333#comment96153886_54678333\">the answer is</a>, <em>because</em> it is a <a href=\"https://wiki.haskell.org/Memoization#Memoising_CAFS\" rel=\"nofollow noreferrer\">CAF (constant applicative form)</a> and <a href=\"https://stackoverflow.com/questions/54675020/why-it-does-not-show-as-evaluated#comment96146739_54675020\">has a monomorphic type</a>.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "accepted_answer_id": 54638495, "answer_count": 2, "score": 2, "last_activity_date": 1550155502, "creation_date": 1549916079, "last_edit_date": 1549948885, "question_id": 54638417, "link": "https://stackoverflow.com/questions/54638417/why-is-it-a-memoization-function", "title": "Why is it a memoization function?", "body": "<p>Could someone please explain to me, why the following code is the memoization:</p>\n\n<pre><code>fib_mem :: Int -&gt; Integer\nfib_mem = (map fib [0..] !!)\nwhere fib 0 = 1\n      fib 1 = 1\n      fib n = fib_mem (n-2) + fib_mem (n-1) \n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 4, "creation_date": 1549897476, "post_id": 54633371, "comment_id": 96058958, "body": "You can&#39;t have a <code>&lt;-</code> arrow in the last line of a <code>do</code> block - this is technically to do with how it &quot;desugars&quot; to uses of the <code>&gt;&gt;=</code> operator, but actually it doesn&#39;t make much sense however you look at it. <code>getArgs</code> is an &quot;action&quot; which reads the command-line arguments, then the <code>&lt;-</code> binds the <code>argv</code> variable to the resulting list, but you need to &quot;do something&quot; with that list. If you explain what your actual indention is then we can help you with how to write it correctly - it&#39;s really not clear from this code what you want."}, {"owner": {"reputation": 27, "user_id": 6205779, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/067f1ee812b61068e7847c102b67e799?s=128&d=identicon&r=PG&f=1", "display_name": "krakra", "link": "https://stackoverflow.com/users/6205779/krakra"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549897563, "post_id": 54633371, "comment_id": 96059007, "body": "oh thank you that helped :)"}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1549897589, "post_id": 54633371, "comment_id": 96059022, "body": "Put <code>return ()</code> on the next line after <code>argv &lt;- getArgs</code>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 4, "creation_date": 1549897677, "post_id": 54633371, "comment_id": 96059074, "body": "Adding <code>return ()</code> makes it type check, but the resulting <code>IO</code> action doesn&#39;t do anything useful."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549900436, "post_id": 54633371, "comment_id": 96060823, "body": "FYI: I collapsed the definitions of <code>Options</code> and <code>options</code> to one line each just to make your definition of <code>main</code> visible without needing to scroll."}], "answers": [{"tags": [], "owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "is_accepted": false, "score": 2, "last_activity_date": 1549900777, "creation_date": 1549900777, "answer_id": 54634433, "question_id": 54633371, "link": "https://stackoverflow.com/questions/54633371/haskell-the-last-statement-in-a-do-block-must-be-an-expression-error/54634433#54634433", "title": "Haskell The last statement in a &#39;do&#39; block must be an expression error", "body": "<blockquote>\n  <p>DKA-2-MKA.hs:39:5: The last statement in a 'do' block must be an expression argv &lt;- getArgs</p>\n</blockquote>\n\n<ul>\n<li><code>39:5</code> indicates the error is at line 39, column 5. Which looks like <code>argv &lt;- getArgs</code></li>\n<li><p>an \"expression\" is a bit of code that is syntactically valid, has a type, and can be evaluated. Examples of expressions include</p>\n\n<ul>\n<li><code>let x = 1 in x + 2</code></li>\n<li><code>if b then x else y</code></li>\n<li><code>5</code></li>\n<li><code>return ()</code></li>\n</ul></li>\n<li><p>examples of <em>not expressions</em> include:</p>\n\n<ul>\n<li><code>(1</code></li>\n<li><code>let x = 5</code></li>\n<li><code>if b then x</code></li>\n</ul></li>\n</ul>\n\n<p><code>argv &lt;-getArgs</code> is <em>not</em> an expression, it's a dangling bit of syntax that doesn't make sense on its own; you can't ask ghci <code>:t argv &lt;-getArgs</code>.</p>\n\n<p>In order to understand <em>why</em> the last line in a <code>do</code> block must be an expression, search \"desugaring do notation haskell\" on this site or elsewhere (maybe someone else can recommend a specific resource). This will also be in any intro haskell book.</p>\n"}], "owner": {"reputation": 27, "user_id": 6205779, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/067f1ee812b61068e7847c102b67e799?s=128&d=identicon&r=PG&f=1", "display_name": "krakra", "link": "https://stackoverflow.com/users/6205779/krakra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 694, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1549900777, "creation_date": 1549897324, "last_edit_date": 1549900369, "question_id": 54633371, "link": "https://stackoverflow.com/questions/54633371/haskell-the-last-statement-in-a-do-block-must-be-an-expression-error", "title": "Haskell The last statement in a &#39;do&#39; block must be an expression error", "body": "<p>Hello please can someone tell me where this error comes from ? \nThe error is \nDKA-2-MKA.hs:39:5:\n    The last statement in a 'do' block must be an expression\n      argv &lt;- getArgs</p>\n\n<p>i checked intendation already and it didnt helped </p>\n\n<pre><code> import System.Environment\n import System.Console.GetOpt\n import Data.Maybe ( fromMaybe )\n\n data Options = Options { optI :: Boo , optT :: Bool } deriving (Show)\n\n defaultOptions :: Options\n defaultOptions = Options { optI = False, optT = False }\n\n options :: [OptDescr (Options -&gt; Options)]\n options = [ Option ['i']    [\"I\"]\n             (NoArg (\\ opts -&gt; opts {optI = True}))\n             \"I is true\"\n           , Option ['t']    [\"T\"]\n             (NoArg (\\ opts -&gt; opts {optT = True}))\n             \"T is true\"\n           ]\n\n programOpt :: [String] -&gt; IO (Options, String)\n programOpt argv = \n     case getOpt Permute options argv of\n         (o, n, [] ) -&gt; return (foldl (flip id) defaultOptions o, n) \n         (o, _, [] ) -&gt; ioError $ userError $ exactlyone ++ usageInfo header options\n         (_, _, errs) -&gt; ioError $ userError $ concat errs ++ usageInfo header options\n     where\n         header = \"Usage [OPTIONS...] filename\"\n         exactlyone = \"One input\"\n\n\n main :: IO ()\n main = do\n     argv &lt;-getArgs \n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549872222, "post_id": 54626034, "comment_id": 96044522, "body": "You can just write your own instance of <code>Show</code> for the <code>Game</code> type, rather than relying on the derived one. It&#39;s probably best to start with a custom <code>Show</code> instance for <code>Space</code> and work up from there - but you&#39;d have to make <code>Space</code> a <code>newtype</code> rather than just a type synonym."}, {"owner": {"reputation": 13, "user_id": 11043927, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9d1edc3d4abae51b0dbb6cf0aea50ab7?s=128&d=identicon&r=PG&f=1", "display_name": "Falsifyed", "link": "https://stackoverflow.com/users/11043927/falsifyed"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549872557, "post_id": 54626034, "comment_id": 96044672, "body": "could you give me an example?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549876778, "post_id": 54626034, "comment_id": 96046690, "body": "Apologies, I had to get ready for work (had just woken up when I first posted). I will attempt to write something up now, but I just realised my first comment was innacurate - I meant the <code>Board</code> type, not <code>Game</code>. Also, having had a slightly closer look through your code, are you sure this compiles and works? [I&#39;m  unable to test while I&#39;m work.] I&#39;m referring to the use of <code>do</code> notation in <code>updateBoard</code> - <code>Game</code> isn&#39;t a monad so I don&#39;t see how this could ever work."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 11043927, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9d1edc3d4abae51b0dbb6cf0aea50ab7?s=128&d=identicon&r=PG&f=1", "display_name": "Falsifyed", "link": "https://stackoverflow.com/users/11043927/falsifyed"}, "edited": false, "score": 0, "creation_date": 1549884944, "post_id": 54627539, "comment_id": 96051538, "body": "thank you, after a few ajustments and some trial and error i got it working how i would like!"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1549905005, "post_id": 54627539, "comment_id": 96063563, "body": "I think this answer would be improved by the usual warning about custom Show instances that are not round-trippable via Read. Instead of repurposing Show, this custom display would be more easily achieved with an ordinary function."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1549908345, "post_id": 54627539, "comment_id": 96065137, "body": "Hi @amalloy, I appreciate the response. I&#39;m pretty new to Haskell and know I have a lot to learn, so I don&#39;t know about this &quot;usual warning&quot;. I do see that in many cases you would want <code>show</code> and <code>read</code> to be inverses of each other, but it&#39;s not clear here that one would ever need to use <code>read</code> on a <code>Board</code>. And the <code>newtype</code> still allows one to choose which <code>Show</code> instance to use, by deciding whether or not to use the &quot;wrapped&quot; version. My concern with my approach is that it involves some boilerplate, and a custom function may be better. Chepner has already suggested that in his answer :)"}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": true, "score": 4, "last_activity_date": 1549901968, "last_edit_date": 1549901968, "creation_date": 1549877804, "answer_id": 54627539, "question_id": 54626034, "link": "https://stackoverflow.com/questions/54626034/haskell-convert-a-list-of-custom-data-to-a-list-of-chars/54627539#54627539", "title": "haskell convert a list of custom data to a list of chars?", "body": "<p>To get your board displaying in the way you want, I would start by replacing this:</p>\n\n<pre><code>type Space =  Maybe Player\n</code></pre>\n\n<p>with this:</p>\n\n<pre><code>newtype Space = Space {unSpace :: Maybe Player} deriving (Eq)\n</code></pre>\n\n<p>This makes <code>Space</code> in to an entirely different type from <code>Maybe Player</code>, as far as the compiler is concerned (although it is treated the same at runtime), which means you can give it a new instance for any of the standard typeclasses. You can see I've derived <code>Eq</code> because that instance is going to be needed - but we want to give it a custom instance of <code>Show</code> to display the <code>X</code> or <code>O</code> (or empty space) that you want to see. And this is dead easy to do:</p>\n\n<pre><code>instance Show Space where\n    show (Space (Just PlayerX)) = \"X\"\n    show (Space (Just PlayerO)) = \"O\"\n    show (Space Nothing) = \".\"\n</code></pre>\n\n<p>I should point out though that making <code>Space</code> into a <code>newtype</code> rather than a mere type synonym will necessitate changing any of your code where the <code>Space</code> type is used, and in an a slightly boilerplate-ish way. I only spot one case of this in your existing code though (although I could have missed some), in <code>updateBoard</code> where you have <code>x ++ [s] ++ ys</code>, you will need to change it to <code>x ++ [Space s] ++ ys</code>. [Basically all you'll ever have to do is add calls to <code>Space</code> and <code>unSpace</code> in appropriate places, to convert between the two equivalent types.]</p>\n\n<p>Making this change won't take you all the way to what you want, because it will still print all 3 rows of the board on one line. But then you can do the same with <code>Board</code>.</p>\n\n<p>Replace</p>\n\n<pre><code>type Board = [[Space]]\n</code></pre>\n\n<p>with</p>\n\n<pre><code>newtype Board = Board {unBoard :: [[Space]]} deriving (Eq)\n</code></pre>\n\n<p>(This will likely also add the need for calls to <code>Board</code> and <code>unBoard</code> throughout your code.)</p>\n\n<p>Then put:</p>\n\n<pre><code>instance Show Board where\n    show (Board rows) = intercalate \"\\n\" $ map show rows\n</code></pre>\n\n<p>Compared to the standard instance for a list, this drops the outer <code>[..]</code>, and replaces the <code>,</code> between each row with a newline character. I believe this will give you what you want - at the expense, as I said, of a little boilerplate here and there.</p>\n\n<p>Please note that I'm unable to check this myself at the moment, so apologies if I've overlooked something and this fails to compile or otherwise fails to work (and let me know so I can correct it).</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1549897087, "creation_date": 1549897087, "answer_id": 54633300, "question_id": 54626034, "link": "https://stackoverflow.com/questions/54626034/haskell-convert-a-list-of-custom-data-to-a-list-of-chars/54633300#54633300", "title": "haskell convert a list of custom data to a list of chars?", "body": "<p>The less \"structured\" version of Robin Zigmond's answer just recognizes that as long as you have a function of type <code>Space -&gt; Char</code>, you just need to map it <em>twice</em> over your board.</p>\n\n<pre><code>showSpace :: Space -&gt; Char\nshowSpace (Just PlayerX) = 'X'\nshowSpace (Just PlayerO) = 'O'\nshowSpace Nothing = '.'\n\nshowBoard :: Board -&gt; [String]\nshowBoard = map (map showSpace)\n</code></pre>\n\n<p>Then </p>\n\n<pre><code>let b = [[Just PlayerX,Just PlayerO,Nothing]\n        ,[Nothing,Nothing,Nothing]\n        ,[Nothing,Nothing,Nothing]\n        ]\nin showBoard b == [\"XO.\", \"...\", \"...\"]\n</code></pre>\n\n<p>In fact, <code>showSpace</code> itself can be defined using the <code>Maybe</code> functor (though most simply by way of the helper function <code>maybe</code>):</p>\n\n<pre><code>showPlayer :: Player -&gt; Char\nshowPlayer PlayerX = 'X'\nshowPlayer PlayerO = 'O'\n\nshowSpace :: Space -&gt; Char\nshowSpace = maybe '.' showPlayer\n</code></pre>\n\n<p>The role of the <code>Show</code> typeclass is simply to let you define all the various functions for <code>Player</code>, <code>Space</code>, <code>Board</code>, etc under the single name <code>show</code> instead of having different names for each.</p>\n"}], "owner": {"reputation": 13, "user_id": 11043927, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9d1edc3d4abae51b0dbb6cf0aea50ab7?s=128&d=identicon&r=PG&f=1", "display_name": "Falsifyed", "link": "https://stackoverflow.com/users/11043927/falsifyed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 54627539, "answer_count": 2, "score": 1, "last_activity_date": 1549901968, "creation_date": 1549871403, "last_edit_date": 1549872238, "question_id": 54626034, "link": "https://stackoverflow.com/questions/54626034/haskell-convert-a-list-of-custom-data-to-a-list-of-chars", "title": "haskell convert a list of custom data to a list of chars?", "body": "<p>Hi i'm very new to haskell, I've been working on a simple tic tac toe game. I'm wondering if theres a way to convert my list of custom data into a list of chars. </p>\n\n<pre><code>module TicTacToe where\n\nimport Data.Char\nimport Data.List\nimport Data.List.Split\nimport System.Console.ANSI\n\ntype Board = [[Space]]\ntype Space =  Maybe Player\n\ndata Player = PlayerX | PlayerO deriving (Eq, Show)\ndata State = Running | GameOver (Maybe Player) deriving (Eq, Show)\ndata Game = Game { gameBoard :: Board\n                 , gamePlayer :: Player\n                 , gameState :: State\n                 } deriving (Eq, Show)\n\ninitialGame = Game { gameBoard = initialBoard\n                   , gamePlayer = PlayerX\n                   , gameState = Running\n                   }\n\ninitialBoard = [ [Nothing, Nothing, Nothing]\n               , [Nothing, Nothing, Nothing]\n               , [Nothing, Nothing, Nothing]\n               ]\n\nprintBoard = print . gameBoard  \n\nupdateBoard :: Game -&gt; Int -&gt; Space -&gt; Game -- updates the game board\nupdateBoard game i s = if (i &lt; 1 || i &gt; 9) \n                            then game \n                            else do\n    let b = concat $ gameBoard game\n    let (x,y:ys) = splitAt (i - 1) b\n    let b2 = if y == Nothing -- if the space equals Nothing\n        then x ++ [s] ++ ys -- then we will allow a PlayerX or PlayerO to be placed\n        else b               -- otherwise b2 will equal the game board we started with   \n\n    let b3 = chunksOf 3 b2\n    game { gameBoard = b3 }\n\n\nswitchPlayer :: Game -&gt; Game -- switches the player\nswitchPlayer game = \n    case gamePlayer game of\n    PlayerX -&gt; game { gamePlayer = PlayerO }\n    playerO -&gt; game { gamePlayer = PlayerX }   \n\ngameLoop :: Game -&gt; IO ()\ngameLoop game = do\n    putStrLn \"Enter a Number 1-9\"\n    playerMove &lt;- getLine\n    clearScreen\n    let newGame = updateBoard game (read playerMove :: Int) (Just (gamePlayer game))\n    let checkGame = if (newGame == game)                     -- If the updated game is equal to the old game\n                        then gameLoop newGame                -- then we restart the loop with no changes\n                        else gameLoop $ switchPlayer newGame -- otherwise we restart the loop and switch the player\n\n    printBoard newGame -- print the game board\n    checkGame\n\nmain = gameLoop initialGame\n</code></pre>\n\n<p>basically I would like to take my gameBoard and instead of being displayed as <code>[[Just PlayerX, Just PlayerO, Nothing], [Nothing Nothing, Nothing], [Nothing, Nothing, Nothing]]</code></p>\n\n<p>I would instead like it to be displayed as:</p>\n\n<pre><code>[['X', 'O', \".\"]\n,['.', '.', '.']\n,['.', '.', '.']\n]\n</code></pre>\n"}, {"tags": ["haskell", "typeclass", "type-kinds"], "comments": [{"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1549872027, "post_id": 54625418, "comment_id": 96044427, "body": "Is that valid code? Do I need some extensions switched on? All I&#39;m getting is compile rejection messages. In particular, in the <code>instance Tofu Frank</code> equation, there&#39;s no LHS binding for <code>t</code> or <code>b</code>. Where are they coming from?"}, {"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1549872568, "post_id": 54625418, "comment_id": 96044678, "body": "As well as <code>:kind</code> that LYAH shows, there&#39;s also <code>:info</code>, that tells you everything GHC knows about your names. For example <code>:i Tofu</code> tells you inferred kind for <code>t</code>; <code>:i Frank</code> tells you inferred kinds for <code>a, b</code>."}, {"owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "reply_to_user": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1549875801, "post_id": 54625418, "comment_id": 96046199, "body": "@AntC im so sorry the <code>instance</code> code was wrong. I have fixed it."}, {"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1549879698, "post_id": 54625418, "comment_id": 96048383, "body": "thanks. I found a learnable moment trying to get a result out of applying <code>tofu</code>. (Add <code>deriving Show</code> to the data decl for <code>Frank</code>.) Writing <code>tofu (Just &quot;hello&quot;)</code> gives nasty type errors."}], "answers": [{"tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 6, "last_activity_date": 1549881780, "last_edit_date": 1549881780, "creation_date": 1549872224, "answer_id": 54626198, "question_id": 54625418, "link": "https://stackoverflow.com/questions/54625418/understanding-signature-of-data-type-typeclass-and-making-a-data-type-an-insta/54626198#54626198", "title": "Understanding signature of data type, typeclass, and making a data type an instance of a typeclass", "body": "<p>Q1: </p>\n\n<blockquote>\n  <p>So the type t in Tofu t acts as a function with the kind signature (* -> (* -> *)) -> * ?</p>\n</blockquote>\n\n<p><code>t</code>'s kind is <code>* -&gt; (* -&gt; *) -&gt; *</code>, or more explicitly <code>* -&gt; ((* -&gt; *) -&gt; *)</code>, not <code>(* -&gt; (* -&gt; *)) -&gt; *</code>.</p>\n\n<blockquote>\n  <p>And the overall kind signature of tofu is * -> *, isnt it?</p>\n</blockquote>\n\n<p><code>tofu</code> doesn't have a kind signature, only type constructors do; its type's kind is <code>*</code>. So are its argument's and result's types. And same for any function.</p>\n\n<p>Q2: You start with a wrong supposition: <code>instance Tofu Frank</code> makes the <code>Frank</code> type constructor an instance of <code>Tofu</code>, not <code>Frank a b</code>. So it's <code>Frank</code> which must have the same kind as <code>t</code>, not <code>Frank a b</code> (which has kind <code>*</code>).</p>\n\n<blockquote>\n  <p>b a which will be (* -> *) -> *</p>\n</blockquote>\n\n<p>No, <code>b a</code> is an application of <code>b</code> of kind <code>* -&gt; *</code> to <code>a</code> of kind <code>*</code>, so the application has kind <code>*</code>. Exactly as if <code>b</code> was a function of type <code>x -&gt; y</code>, and <code>a</code> was a value of type <code>x</code>, <code>b a</code> would have type <code>y</code>, not <code>(x -&gt; y) -&gt; x</code>: just replace <code>x</code> and <code>y</code> by <code>*</code>.</p>\n\n<p>Q3:</p>\n\n<blockquote>\n  <p>The x in tofu x represents j a</p>\n</blockquote>\n\n<p>\"Has type\", not \"represents\".</p>\n\n<blockquote>\n  <p>since both have the kind of *</p>\n</blockquote>\n\n<p><code>x</code> doesn't have a kind, because it isn't a type. </p>\n\n<blockquote>\n  <p>Frank with its kind (* -> (* -> *)) -> * is applied on x</p>\n</blockquote>\n\n<p>No, in</p>\n\n<pre><code>tofu x = Frank x\n</code></pre>\n\n<p>it's the <code>Frank</code> <a href=\"https://wiki.haskell.org/Constructor\" rel=\"nofollow noreferrer\"><em>data</em> constructor</a> which is applied to <code>x</code>, not the type constructor. It's a function with signature <code>b a1 -&gt; Frank a1 b</code> (renaming <code>a</code> so you don't confuse it with <code>tofu</code>'s). So <code>b ~ j</code> and <code>a1 ~ a</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "edited": false, "score": 0, "creation_date": 1549886028, "post_id": 54628300, "comment_id": 96052147, "body": "i find your answer very helpful and constructive as always. 2 questions: Is this correct <code>b a :: (* -&gt; *) -&gt; * -&gt; *</code>? To your homework is this the right answer?  <code>a (b Int) :: * -&gt; (Int -&gt; *) -&gt; *  ;a :: k  ;b :: Int -&gt; *  ;KatyPerry :: * -&gt; (Int -&gt; *) -&gt; *</code>"}, {"owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "edited": false, "score": 0, "creation_date": 1549886448, "post_id": 54628300, "comment_id": 96052382, "body": "sorry i cant get around with line break inside code so it&#39;s a bit hard to read. Also one thing. I see you highlight <code>Frank a b</code> but not <code>Frank</code> on the right hand side of <code>=</code>. Why is that so? Does it have something to do with the record syntax?"}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 3, "last_activity_date": 1549880909, "last_edit_date": 1549880909, "creation_date": 1549880430, "answer_id": 54628300, "question_id": 54625418, "link": "https://stackoverflow.com/questions/54625418/understanding-signature-of-data-type-typeclass-and-making-a-data-type-an-insta/54628300#54628300", "title": "Understanding signature of data type, typeclass, and making a data type an instance of a typeclass", "body": "<p>Alexey already had a go at answering your questions.  I'll instead expound on your example with whatever details seem relevant.</p>\n\n<pre><code>class Tofu t where\n  tofu :: j a -&gt; t a j\n          ^^^    ^^^^^\n          ^^^^^^^^^^^^\n</code></pre>\n\n<p>The highlighted bits <em>must</em> have kind <code>*</code>.  Anything on either side of a (type level) arrow must have type <code>*</code><sup>[1]</sup>, and the arrow term itself (that is, the whole <code>j a -&gt; t a j</code> term) also has kind <code>*</code>.  Indeed, any \"type\"<sup>[2]</sup> that can be inhabited by a value has kind <code>*</code>.  If it has any other kind, there can't be any values of it (it is just used as to construct proper types elsewhere).</p>\n\n<p>So, within the signature of <code>tofu</code>, the following holds</p>\n\n<pre><code>j a :: *\nt a j :: *\n</code></pre>\n\n<p>because they are used as \"inhabited\" types, since they are arguments to <code>(-&gt;)</code>.</p>\n\n<p>And these are the only things constraining the class.  In particular, <code>a</code> can be any kind.  With <code>PolyKinds</code><sup>[3]</sup></p>\n\n<pre><code>a :: k   -- for any kind k\nj :: k -&gt; *\nt :: k     -&gt;   (k -&gt; *) -&gt; *\n     ^          ^^^^^^^^    ^\n kind of a      kind of j   required since is used as inhabited type by -&gt;\n</code></pre>\n\n<p>So we found the required kind of <code>t</code>. </p>\n\n<p>We can use a similar reasoning for <code>Frank</code>.</p>\n\n<pre><code>data Frank a b = Frank {frankField :: b a}\n     ^^^^^^^^^                        ^^^\n</code></pre>\n\n<p>Again the highlighted bits have to have kind <code>*</code>, because they can have values. Otherwise there are no constraints. Generalizing, we have</p>\n\n<pre><code>a :: k\nb :: k -&gt; *\nFrank a b :: *\n</code></pre>\n\n<p>And thus</p>\n\n<pre><code>Frank :: k -&gt; (k -&gt; *) -&gt; *\n</code></pre>\n\n<p>We can see that <code>Frank</code>'s kind matches the required kind for <code>Tofu</code>.  But it also makes sense for a more specific kind, for example:</p>\n\n<pre><code>data KatyPerry a b = KatyPerry a (b Int)\n</code></pre>\n\n<p>Try to deduce her kind, and check that it is more specific than the kind required by <code>Tofu</code>.</p>\n\n<hr>\n\n<p>[1] This is even true of arrows at the kind level if we assume <code>TypeInType</code>.  Without <code>TypeInType</code>, the \"kinds of kinds\" are called <em>sorts</em> and nobody worries about them; there's usually nothing interesting happening at that level.</p>\n\n<p>[2] I put \"type\" in quotes because technically only things with kind <code>*</code> are called types, everything else is called a <em>type constructor</em>.  I tried to be precise about this but I couldn't find a non-awkward way to refer to both at once and the paragraph got very messy.  So \"type\" it is.</p>\n\n<p>[3] Without <code>PolyKinds</code>, anything with an unconstrained kind like <code>k</code> gets specialized to <code>*</code>.  It also means that <code>Tofu</code>'s kind could depend on what type you first happen to instantiate it at, or whether you instantiate it at a type in the same module or a different module. It's bad.  <code>PolyKinds</code> is good.</p>\n"}], "owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1549881780, "creation_date": 1549868657, "last_edit_date": 1549875764, "question_id": 54625418, "link": "https://stackoverflow.com/questions/54625418/understanding-signature-of-data-type-typeclass-and-making-a-data-type-an-insta", "title": "Understanding signature of data type, typeclass, and making a data type an instance of a typeclass", "body": "<p>Been reading Learn You A Haskell For a Great Good ! and have big trouble with understanding instance and kind.</p>\n\n<p>Q1: So the type <code>t</code> in <code>Tofu t</code> acts as a function with the kind signature <code>(* -&gt; (* -&gt; *)) -&gt; *</code> ? And the overall kind signature of <code>tofu</code> is <code>* -&gt; *</code>, isnt it? since <code>(* -&gt; *) -&gt; *</code> results in <code>*</code> and so does <code>(* -&gt; (* -&gt; *)) -&gt; *</code></p>\n\n<p>Q2: When we want to make <code>Frank a b</code> instance of the typeclass <code>Tofu t</code>, data type <code>Frank a b</code> must also have the same kind with <code>t</code>. That means kind of <code>a</code> is <code>*</code>, <code>b</code> is <code>* -&gt; *</code>, and <code>b a</code> which will be <code>(* -&gt; *) -&gt; *</code> which results in <code>*</code>. Is that correct?</p>\n\n<p>Q3: The <code>x</code> in <code>tofu x</code> represents <code>j a</code> since both have the kind of <code>*</code>. <code>Frank</code> with its kind <code>(* -&gt; (* -&gt; *)) -&gt; *</code> is applied on <code>x</code>. But I'm not sure how presenting <code>j a</code> as <code>x</code> will distinguish the <code>x</code> in <code>tofu x</code> which is <code>j a</code> and the <code>x</code> in <code>Frank x</code> which is <code>a j</code>.</p>\n\n<p>I'm kind of new to the idea of having a function inside data type or class (Ex: <code>b</code> in <code>Frank a b</code> or <code>t</code> in <code>Tofu t</code>) which is a bit confusing  </p>\n\n<p>I leave the link here since quoting would make the post look unnecessarily long. <a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses#kinds-and-some-type-foo\" rel=\"nofollow noreferrer\">link</a></p>\n\n<pre><code>class Tofu t where\n  tofu :: j a -&gt; t a j\n\ndata Frank a b = Frank {frankField :: b a} \n\ninstance Tofu Frank where\n  tofu x = Frank x \n</code></pre>\n"}, {"tags": ["haskell", "assert"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 3, "creation_date": 1549896639, "post_id": 54624405, "comment_id": 96058453, "body": "I suggest using assertions only for invariants in your code (where a failure means a bug), they help document invariants and compliment your tests. <code>assert</code> calls have no overhead since they are removed when compiling with optimizations"}], "answers": [{"tags": [], "owner": {"reputation": 2350, "user_id": 10033674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bbU6P.jpg?s=128&g=1", "display_name": "Karol Samborski", "link": "https://stackoverflow.com/users/10033674/karol-samborski"}, "is_accepted": true, "score": 8, "last_activity_date": 1549864040, "creation_date": 1549864040, "answer_id": 54624593, "question_id": 54624405, "link": "https://stackoverflow.com/questions/54624405/haskell-equivalent-of-assert0/54624593#54624593", "title": "Haskell equivalent of assert(0)", "body": "<p>From the documentation of <code>assert</code>:</p>\n\n<blockquote>\n  <p>If the first argument evaluates to True, then the result is the second argument. Otherwise an AssertionFailed exception is raised, containing a String with the source file and line number of the call to assert.</p>\n</blockquote>\n\n<p>So instead of giving <code>False</code> as first argument you could actually check your <code>if</code> condition there:</p>\n\n<pre><code>scanList (x:xs) = case x of\n    Right i -&gt; i + scanList xs\n    Left  s -&gt;\n        assert (read s &lt; 8) (read s + scanList xs)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 0, "creation_date": 1549868478, "post_id": 54625074, "comment_id": 96042956, "body": "I see. So is there any reasonable scenario where one <i>should</i> use assertions in Haskell? Like you said, given any function returning a type <code>T</code> I can always <code>Maybe</code> it and avoid assertions altogether, right? Why did the Haskell guys enable it?"}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 4, "creation_date": 1549869486, "post_id": 54625074, "comment_id": 96043359, "body": "@OrenIshShalom There&#39;s a couple of reasons that exceptions are still part of Haskell. One of them is that Haskell is an old language, and that certain language features are still around for historical or backwards compatibility reasons. Another reason is that you could argue that exceptions are still appropriate in the context of <code>IO</code>, where functions are already impure."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 0, "creation_date": 1549925537, "post_id": 54625074, "comment_id": 96072603, "body": "@OrenIshShalom, assertions are for checking that <i>your code</i> is correct. In many cases, you can indeed avoid them by carefully ensuring that your invariants are enforced structurally or through the type system. But sometimes you can&#39;t, or can&#39;t easily, do so. Suppose you have a weight-balanced tree. You may add an assertion to your rebalancing operation(s) to verify that each resulting node is actually balanced appropriately."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 5, "last_activity_date": 1549866877, "creation_date": 1549866877, "answer_id": 54625074, "question_id": 54624405, "link": "https://stackoverflow.com/questions/54624405/haskell-equivalent-of-assert0/54625074#54625074", "title": "Haskell equivalent of assert(0)", "body": "<p>The more idiomatic Haskell design would be to keep pure functions <strong>total</strong>. When using <code>assert</code>, you're throwing an exception, which makes the function <strong>partial</strong>. This means that you can no longer trust the type of the function. It claims to have the type <code>[Either String Int] -&gt; Int</code>, but will fail with an exception at run-time under various conditions.</p>\n\n<p>A total function would either stay within the <code>Either</code> monad, or could, alternatively, translate to <code>Maybe</code>:</p>\n\n<pre><code>import Text.Read\n\nscanList :: (Num a, Read a, Ord a) =&gt; [Either String a] -&gt; Maybe a\nscanList [] = Just 0\nscanList (x:xs) =\n  case x of\n    Right i -&gt; fmap (+ i) $ scanList xs\n    Left s -&gt; \n      case readMaybe s of\n        Just i -&gt; if i &lt; 8 then fmap (+ i) $ scanList xs else Nothing\n        Nothing -&gt; Nothing\n</code></pre>\n\n<p>You could simplify the code quite a bit, but I chose to keep it structurally as close to the OP as possible.</p>\n\n<p>With a type like <code>[Either String a] -&gt; Maybe a</code>, any caller knows that they have to handle both <code>Just</code> and <code>Nothing</code> cases, without having to resort to reading the code or documentation of the function in question.</p>\n"}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 532, "favorite_count": 0, "accepted_answer_id": 54624593, "answer_count": 2, "score": 3, "last_activity_date": 1549866993, "creation_date": 1549862791, "last_edit_date": 1549866993, "question_id": 54624405, "link": "https://stackoverflow.com/questions/54624405/haskell-equivalent-of-assert0", "title": "Haskell equivalent of assert(0)", "body": "<p>I'm trying to figure out what is the best practice to write the Haskell equivalent of <code>assert(0)</code>. I know that type safety dictates that an integer must be returned from <code>scanList</code>, however I wonder if there's a better way than what I wrote. Is there any way to avoid the arbitrary number <code>923</code> that is just stuck there?</p>\n\n<pre><code>module Main (main) where\n\nimport Control.Exception (assert)\n\nl = [\n    Left \"1\",\n    Left \"1\",\n    Right 1,\n    Right 1,\n    Left \"9\"]\n\nscanList :: [ Either String Int ] -&gt; Int\nscanList [    ] = 0\nscanList (x:xs) = case x of\n    Right i -&gt; i + scanList xs\n    Left  s -&gt;\n        if read s &lt; 8\n        then read s + scanList xs\n        else assert False $ 923\n\nmain = do\n    print $ scanList l\n</code></pre>\n"}, {"tags": ["haskell", "graph"], "answers": [{"tags": [], "owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "is_accepted": false, "score": 2, "last_activity_date": 1549859496, "creation_date": 1549859496, "answer_id": 54623996, "question_id": 54623813, "link": "https://stackoverflow.com/questions/54623813/how-to-traverse-graph-in-haskell/54623996#54623996", "title": "How to traverse graph in haskell?", "body": "<p>The <code>Graph</code> is an <code>Array Vertex [Vertex]</code>.  You can index it with a <code>Vertex</code> (a <code>0</code> based <code>Int</code> index), and get back a list of the successor vertices.  You can get a list of vertices with no successors like this (assume <code>Data.Array</code> is imported):</p>\n\n<pre><code>vs = [v | (v, []) &lt;- Data.Array.assocs graph]\n</code></pre>\n\n<p>This list comprehension selects the indices of elements with an empty list of successors.</p>\n\n<p>The vertices can be mapped to nodes with the <code>nodeFromVertex</code> function.</p>\n"}, {"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 2, "last_activity_date": 1549864818, "creation_date": 1549864818, "answer_id": 54624730, "question_id": 54623813, "link": "https://stackoverflow.com/questions/54623813/how-to-traverse-graph-in-haskell/54624730#54624730", "title": "How to traverse graph in haskell?", "body": "<p>You can use <code>outdegree</code> to get an array of all the vertices' count of outgoing edges:</p>\n\n<pre><code>Prelude Data.Graph Data.Array&gt; outdegree graph\narray (0,3) [(0,1),(1,1),(2,0),(3,1)]\n</code></pre>\n\n<p>The value of each element in the array is the number of outgoing edges. If you want to filter the array, you can turn it into an association list:</p>\n\n<pre><code>Prelude Data.Graph Data.Array&gt; assocs $ outdegree graph\n[(0,1),(1,1),(2,0),(3,1)]\n</code></pre>\n\n<p>and then filter it. Since you're interested in the vertices that have no outgoing edges, you can filter on those where the value (the second element) in the association list is <code>0</code>:</p>\n\n<pre><code>Prelude Data.Graph Data.Array&gt; filter ((0 ==) . snd) $ assocs $ outdegree graph\n[(2,0)]\n</code></pre>\n\n<p>If you want a list of nodes, you can map that filtered association list using <code>nodeFromVertex</code>:</p>\n\n<pre><code>Prelude Data.Graph Data.Array&gt; l = filter ((0 ==) . snd) $ assocs $ outdegree graph\nPrelude Data.Graph Data.Array&gt; fmap (nodeFromVertex . fst) l\n[(\"c\",'c',\"\")]\n</code></pre>\n"}], "owner": {"reputation": 2181, "user_id": 7058735, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GxhO2.png?s=128&g=1", "display_name": "K Split X", "link": "https://stackoverflow.com/users/7058735/k-split-x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1549864964, "creation_date": 1549857794, "last_edit_date": 1549864964, "question_id": 54623813, "link": "https://stackoverflow.com/questions/54623813/how-to-traverse-graph-in-haskell", "title": "How to traverse graph in haskell?", "body": "<p>Suppose I have the following graph:</p>\n\n<p><code>(graph, nodeFromVertex, vertexFromKey) = graphFromEdges [(\"a\", 'a', ['b']), (\"b\", 'b', ['c']), (\"c\", 'c', []), (\"d\", 'd', ['b'])]</code></p>\n\n<p>This is the visual:</p>\n\n<p><a href=\"https://i.stack.imgur.com/e8uMU.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/e8uMU.png\" alt=\"enter image description here\"></a></p>\n\n<p>I want a way to figure out the vertices that do not have any outgoing edges.</p>\n\n<p>In this case it is only <code>c</code></p>\n\n<p>I assume the way to find this is manually recurse until you find a vertex that has no connections. But I am not sure how to recurse here...</p>\n\n<p>The Haskell graph docs don't really say...</p>\n"}, {"tags": ["haskell", "io"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1549838565, "post_id": 54621829, "comment_id": 96036351, "body": "You can use <code>filterM doesFileExists all &gt;&gt;= mapM_ print</code>."}, {"owner": {"reputation": 633, "user_id": 714873, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/CMdeB.png?s=128&g=1", "display_name": "Karen Fisher", "link": "https://stackoverflow.com/users/714873/karen-fisher"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1549840157, "post_id": 54621829, "comment_id": 96036818, "body": "If you create and answer I will accept it as you was first. And now I understand the purpose of &gt;&gt;= (more or less)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549840553, "post_id": 54621829, "comment_id": 96036927, "body": "If you use <code>do</code> notation with the <code>&lt;-</code> &quot;operator&quot; - as you clearly have here - then you do understand the purpose of <code>&gt;&gt;=</code> even if you don&#39;t think you do. The answer provided by below is exactly the same as the one in the comment above - one uses <code>do</code> notation and the other an explicit <code>&gt;&gt;=</code>, but they mean exactly the same thing. The <code>do</code> notation is (more or less) just syntactic sugar for successive uses of <code>&gt;&gt;=</code>."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 5, "last_activity_date": 1549839431, "creation_date": 1549839431, "answer_id": 54621984, "question_id": 54621829, "link": "https://stackoverflow.com/questions/54621829/how-to-filter-through-the-directory-list-with-doesfileexist-function-in-haskell/54621984#54621984", "title": "How to filter through the directory list with doesFileExist function in Haskell?", "body": "<p>Use another <code>&lt;-</code>:</p>\n\n<pre><code>main = do\n  all &lt;- listDirectory \"x:/n\"\n  filtered &lt;- filterM doesFileExist all\n  mapM_ print filtered\n</code></pre>\n"}], "owner": {"reputation": 633, "user_id": 714873, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/CMdeB.png?s=128&g=1", "display_name": "Karen Fisher", "link": "https://stackoverflow.com/users/714873/karen-fisher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 54621984, "answer_count": 1, "score": -1, "last_activity_date": 1549839431, "creation_date": 1549838315, "question_id": 54621829, "link": "https://stackoverflow.com/questions/54621829/how-to-filter-through-the-directory-list-with-doesfileexist-function-in-haskell", "title": "How to filter through the directory list with doesFileExist function in Haskell?", "body": "<p>I've managed to print the list of directory with this Haskell code:</p>\n\n<pre><code>import Control.Monad\nimport Control.Applicative\nimport System.Directory\n\nmain :: IO()\nmain = do\n  all &lt;- listDirectory \"x:/n\"\n  mapM_ print all\n</code></pre>\n\n<p>But now I want to filter all with the doesFileExist function from System.Direcorty module and can't understand how to use it properly:</p>\n\n<pre><code>import Control.Monad\nimport Control.Applicative\nimport System.Directory\n\nmain :: IO()\nmain = do\n  all &lt;- listDirectory \"x:/n\"\n  mapM_ print (filterM doesFileExist all) \n</code></pre>\n\n<p>the code above doesn't compile with ther error:</p>\n\n<pre><code>  * No instance for (Foldable IO) arising from a use of `mapM_'\n* In a stmt of a 'do' block:\n    mapM_ print (filterM doesFileExist all)\n  In the expression:\n    do all &lt;- listDirectory \"x:/n\"\n       mapM_ print (filterM doesFileExist all)\n  In an equation for `main':\n      main\n        = do all &lt;- listDirectory \"x:/n\"\n             mapM_ print (filterM doesFileExist all)\n\n   mapM_ print (filterM doesFileExist all)\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I guess that I've missed something fundumental, so, please, give me a hand in finding the way to understand what I am missing.\n   Thanks</p>\n"}, {"tags": ["haskell", "state", "monads", "monad-transformers", "megaparsec"], "comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 1, "creation_date": 1549837127, "post_id": 54621621, "comment_id": 96035952, "body": "It has to do with the ordering of the monad stack. A monad transformer can&#39;t &quot;undo&quot; an effect performed by monads below it. You could try putting a <code>StateT</code> transformer above the <code>Parser</code> monad. You won&#39;t have to perform any lifts because there is a <code>MonadParsec e s m =&gt; MonadParsec e s (StateT st m)</code> instance."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1549837142, "post_id": 54621621, "comment_id": 96035955, "body": "Tangential question: why have you defined an infinitely recursive state type? If you expand the newtypes, you get that <code>X</code> is <code>State ([Int], [State ([Int], [State ([Int], ...)])])</code>. What purpose does this type serve?"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1549837182, "post_id": 54621621, "comment_id": 96035963, "body": "@danidiaz Why is that? That seems interesting."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1549837357, "post_id": 54621621, "comment_id": 96036010, "body": "@bradrn I don&#39;t know the ultimate reason, but it seems to be the rule. For example, <code>StateT</code> over <code>ExceptT</code> loses its state on failure, while <code>ExceptT</code> over <code>StateT</code> doesn&#39;t. <code>ListT</code> over <code>StateT</code> has its state shared across all search branches, while <code>StateT</code> over <code>ListT</code> has a different state for each branch."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1549838850, "post_id": 54621621, "comment_id": 96036433, "body": "@danidiaz I think that&#39;s because monad transformers work &#39;inside out&#39;, so e.g. an <code>ExceptT a (ExceptT b Identity) x</code> is equivalent to an <code>Either b (Either a x)</code>. I&#39;ve always wondered why that is, although my question <a href=\"https://stackoverflow.com/q/49587122/7345298\">stackoverflow.com/q/49587122/7345298</a> may help."}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1549866828, "post_id": 54621621, "comment_id": 96042312, "body": "Related question: <a href=\"https://stackoverflow.com/q/27835214/637669\">stackoverflow.com/q/27835214/637669</a>"}, {"owner": {"reputation": 401, "user_id": 2904322, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/11c1ab73f2c4046d92eae0b34cd827c2?s=128&d=identicon&r=PG&f=1", "display_name": "otah007", "link": "https://stackoverflow.com/users/2904322/otah007"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1549917119, "post_id": 54621621, "comment_id": 96069258, "body": "@bradrn Think of <code>X</code> like an action that can be performed on my state. I can make a  list of actions, then run the top one with <code>executeOne</code>. The thing is, I want an <code>X</code> to have control over the <code>[X]</code> inside the parser state - for example, a specific <code>X</code> might not remove itself from the list until the <code>[Int]</code> is a specific length, or it might throw away some actions below it in the list if the head of <code>[Int]</code>  is negative (just random examples). It provides the most freedom as they have 100% full control over the state."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1549918012, "post_id": 54621621, "comment_id": 96069669, "body": "@otah007 It&#39;s starting to make sense to me, but I still don&#39;t entirely understand. Could you give me a small example of a value of type <code>X</code>?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1549925091, "post_id": 54621621, "comment_id": 96072456, "body": "@danidiaz, this is indeed a very interesting question in general. I strongly suspect the a answer will relate to the general nature of functions used to &quot;run&quot; computations in transformed monads. But I don&#39;t know how to formalize the question, let alone answer it!"}, {"owner": {"reputation": 401, "user_id": 2904322, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/11c1ab73f2c4046d92eae0b34cd827c2?s=128&d=identicon&r=PG&f=1", "display_name": "otah007", "link": "https://stackoverflow.com/users/2904322/otah007"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1549925403, "post_id": 54621621, "comment_id": 96072567, "body": "@bradrn I&#39;ve added an example to the question."}, {"owner": {"reputation": 401, "user_id": 2904322, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/11c1ab73f2c4046d92eae0b34cd827c2?s=128&d=identicon&r=PG&f=1", "display_name": "otah007", "link": "https://stackoverflow.com/users/2904322/otah007"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1549925875, "post_id": 54621621, "comment_id": 96072694, "body": "@danidiaz I think I&#39;ve been misunderstanding the instances of <code>MonadParsec</code> - I knew <code>StateT</code> was an instance but I had it backward. Just to make sure, <code>MonadParsec e s m</code> guarantees backtracking via <code>try</code> for <code>StateT st m</code>, and in this case we want <code>m = ParsecT...</code>. But because <code>ParsecT</code> is not an instance of <code>MonadParsec</code>, the monad <code>ParsecT e s (StateT...</code> won&#39;t backtrack the inner <code>m</code>, that is, the inner <code>StateT...</code>. Is that correct?"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1549926724, "post_id": 54621621, "comment_id": 96072962, "body": "@otah007 That example makes sense. Personally I would have defined <code>newtype X = X { getX :: ([Int], [X]) -&gt; ([Int], [X], Bool) }</code>, so getting rid of the confusing recursive <code>State</code> definition, but it doesn&#39;t really make much difference. Also as for your previous comment I&#39;m pretty sure that <code>ParsecT</code> is an instance of <code>MonadParsec</code>."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1549953499, "post_id": 54621621, "comment_id": 96079525, "body": "@otah007 <code>ParsecT</code> is an instance of <code>MonadParsec</code>. <code>MonadParsec</code> is a convenience, it helps you avoid having to sprinkle your code with <code>lift</code>s when there&#39;s a transformer above <code>ParsecT</code>. It doesn&#39;t care about transformers below <code>ParsecT</code>. <code>StateT</code> above <code>ParsecT</code> happens to have the backtracking behaviour you need, and also happens to have a <code>MonadParsec</code> instance."}, {"owner": {"reputation": 401, "user_id": 2904322, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/11c1ab73f2c4046d92eae0b34cd827c2?s=128&d=identicon&r=PG&f=1", "display_name": "otah007", "link": "https://stackoverflow.com/users/2904322/otah007"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1550089553, "post_id": 54621621, "comment_id": 96146598, "body": "@danidiaz If you add that as an answer then I can accept it."}], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 1, "last_activity_date": 1550099951, "creation_date": 1550099951, "answer_id": 54680936, "question_id": 54621621, "link": "https://stackoverflow.com/questions/54621621/state-with-megaparsec-parsect-is-not-backtracking/54680936#54680936", "title": "State with Megaparsec ParsecT is not backtracking", "body": "<p>The problem was the order of the transformers in the monad stack.</p>\n\n<p>Informally speaking, a transformer can't \"cancel\" or \"nullify\" the effects of the base monad it transforms. For example, <code>StateT</code> over <code>ExceptT</code> loses its state on failure, while <code>ExceptT</code> over <code>StateT</code> doesn't. (This is also the reason why there can't be an <code>IOT</code> transformer: how to nullify a effect that has already escaped into the world?)</p>\n\n<p>Here, it means that the inner <code>State</code> will survive any backtracking of the parser. The solution is to put <code>StateT</code> <em>above</em> the parser monad, not below. </p>\n\n<p>This would seem to require <code>lift</code> calls for all the parser functions, because the parser is not the outermost monad now. Fortunately, the <code>lift</code>s aren't needed because <code>StateT s Parser</code> is an instance of <a href=\"http://hackage.haskell.org/package/megaparsec-7.0.4/docs/Text-Megaparsec.html#t:MonadParsec\" rel=\"nofollow noreferrer\"><code>MonadParsec</code></a>, which auto-lifts all parser operations.</p>\n"}], "owner": {"reputation": 401, "user_id": 2904322, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/11c1ab73f2c4046d92eae0b34cd827c2?s=128&d=identicon&r=PG&f=1", "display_name": "otah007", "link": "https://stackoverflow.com/users/2904322/otah007"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 1, "accepted_answer_id": 54680936, "answer_count": 1, "score": 4, "last_activity_date": 1550099951, "creation_date": 1549836757, "last_edit_date": 1550089477, "question_id": 54621621, "link": "https://stackoverflow.com/questions/54621621/state-with-megaparsec-parsect-is-not-backtracking", "title": "State with Megaparsec ParsecT is not backtracking", "body": "<p>I have a parser defined as a slightly more complicated version of the following:</p>\n\n<pre><code>data X = X { getX :: State ([Int], [X]) Bool }\ntype Parser = ParsecT Void String (State ([Int], [X]))\n</code></pre>\n\n<p>The idea is that I can build up a stack of actions I want to do to my state (the <code>[Int]</code>) and then execute them in any order or whenever I want, depending on the circumstances:</p>\n\n<pre><code>-- Run the first state in the list.\nexecuteOne :: Parser Bool\nexecuteOne = do\n  s@(_, fs) &lt;- get\n  let (r, s') = (flip runState s) . getX . head $ fs\n  put s'\n  return r\n</code></pre>\n\n<p>For example, the action executed may reorder the stack of actions or modify the <code>[Int]</code>.</p>\n\n<p>Design decisions aside (I'm sure there are better ways to do this), it seems that backtracking with <code>try</code> is not working with the state. Specifically, the state of the ParsecT will backtrack, but the inner state (the <code>[Int]</code> and <code>[X]</code>) won't. Why is this? Am I misusing ParsecT or is the strange recursive <code>X</code> business screwing everything over? Do I need to use <code>Control.Monad.State.Strict</code> instead?</p>\n\n<p>Edit: To answer a commenter's question about an example <code>X</code>, here's one:</p>\n\n<pre><code>useless :: X\nuseless = X $ do\n  (vs, xs) &lt;- get\n  if length vs &gt;= 10\n  then do { put (vs, tail xs) ; return True }\n  else do { put (vs ++ vs, xs) ; return False }\n</code></pre>\n\n<p><code>useless</code> doubles our <code>[Int]</code> if it has less than ten elements, and returns <code>False</code>. If it does have ten or more elements, it removes itself and returns <code>True</code>. The power in having <code>X</code> be recursive is that it can choose whether or not to remove itself after it's done.</p>\n"}, {"tags": ["javascript", "haskell"], "comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1549832587, "post_id": 54620995, "comment_id": 96034710, "body": "Is <code>message</code> a method ? Because if yes i do not get the usage of lambda.You could write <code>cup=message</code> and in js <code>cup=str=&gt;message(str)</code>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 4, "creation_date": 1549834810, "post_id": 54620995, "comment_id": 96035297, "body": "@BercoviciAdrian <code>cup</code> is not <code>message</code>; <code>cup</code> is a function that returns a function which applies its argument to <code>cup</code>&#39;s argument. One could also write <code>cup size message = message size</code>, which makes it more apparent that <code>cup = flip ($)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 11709, "user_id": 9325419, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JBsmO.jpg?s=128&g=1", "display_name": "jo_va", "link": "https://stackoverflow.com/users/9325419/jo-va"}, "is_accepted": false, "score": 3, "last_activity_date": 1549832508, "creation_date": 1549832508, "answer_id": 54621031, "question_id": 54620995, "link": "https://stackoverflow.com/questions/54620995/haskell-to-javascript-lamba-function-translation/54621031#54621031", "title": "Haskell to Javascript Lamba function translation", "body": "<p>Your haskell lambda takes an argument and returns a lambda which in turn takes a function as argument and applies that function with the argument given to cup.</p>\n\n<p>In javascript, the equivalent would be this:</p>\n\n<pre><code>const cup = size =&gt; (message =&gt; message(size))\n</code></pre>\n\n<p>You can rewrite it without the parenthesis:</p>\n\n<pre><code>const cup = size =&gt; message =&gt; message(size)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 8, "last_activity_date": 1549832508, "creation_date": 1549832508, "answer_id": 54621032, "question_id": 54620995, "link": "https://stackoverflow.com/questions/54620995/haskell-to-javascript-lamba-function-translation/54621032#54621032", "title": "Haskell to Javascript Lamba function translation", "body": "<p>Your JavaScript code corresponds to</p>\n\n\n\n<pre class=\"lang-haskell prettyprint-override\"><code>cup = \\size -&gt; (\\message -&gt; message) size\n</code></pre>\n\n<p>in Haskell. Because <code>\\message -&gt; message</code> is the identity function, this is the same as</p>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>cup = \\size -&gt; size\n</code></pre>\n\n<p>which is the identity function again:</p>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>cup = id\n</code></pre>\n\n<p>The correct translation would be</p>\n\n\n\n<pre class=\"lang-javascript prettyprint-override\"><code>const cup = size =&gt; message =&gt; message(size)\n</code></pre>\n\n<p>or</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>function cup(size) { return message =&gt; message(size); }\n</code></pre>\n"}], "owner": {"reputation": 63670, "user_id": 379008, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/Labo5.png?s=128&g=1", "display_name": "GibboK", "link": "https://stackoverflow.com/users/379008/gibbok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 54621032, "answer_count": 2, "score": 1, "last_activity_date": 1549833502, "creation_date": 1549832253, "question_id": 54620995, "link": "https://stackoverflow.com/questions/54620995/haskell-to-javascript-lamba-function-translation", "title": "Haskell to Javascript Lamba function translation", "body": "<p>I have the following lambda function in haskell:</p>\n\n<p><code>cup size = \\message -&gt; message size</code></p>\n\n<p>I would like to know what is the equivalent version in JavaScript (for learning purpose), currently I wrote the following version, I would like to if it is correct.</p>\n\n<p><code>const cup = size =&gt; (message =&gt; message)(size)</code></p>\n"}, {"tags": ["scala", "haskell", "types", "type-theory"], "answers": [{"comments": [{"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1549835203, "post_id": 54621302, "comment_id": 96035396, "body": "I&#39;m curious why you say <code>Maybe a</code> <i>usually</i> has inhabitants. Is there a choice of <code>a</code> where <code>Nothing</code> is not an inhabitant of <code>Maybe a</code>?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 4, "creation_date": 1549835289, "post_id": 54621302, "comment_id": 96035416, "body": "I think he means a type (something of kind <code>*</code>) in general usually has values, with <code>Void</code> being an (the?) exception."}, {"owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1549840611, "post_id": 54621302, "comment_id": 96036936, "body": "@chepner is right, that&#39;s what I meant. <code>Void</code> however is not the only exception. For example, <code>(Void,Void)</code> is a different type, but also has no inhabitants."}], "tags": [], "owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "is_accepted": false, "score": 6, "last_activity_date": 1549834501, "creation_date": 1549834501, "answer_id": 54621302, "question_id": 54620961, "link": "https://stackoverflow.com/questions/54620961/can-type-constructors-be-considered-as-types-in-functional-programming-languages/54621302#54621302", "title": "Can type constructors be considered as types in functional programming languages?", "body": "<p>Well, types and type constructors have a calculus of their own and they each have kinds. If you use <code>:k (Maybe Int)</code> in <code>ghci</code> for example, you'll get <code>*</code>, now this is a proper type and it (<em>usually</em>) has inhabitants. In this case <code>Nothing</code>, <code>Just 42</code>, etc. <code>*</code> now has a more descriptive alias <code>Type</code>.</p>\n\n<p>Now you can look at the kind of the constructor that is <code>Maybe</code>, and <code>:k Maybe</code> will give you <code>* -&gt; *</code>. With the alias, this is <code>Type -&gt; Type</code> which is what you expect. It takes a <code>Type</code> and <em>constructs</em> a <code>Type</code>. Now if you see types as set of values, one good question is what set of values do <code>Maybe</code> has? Well, none because it is not really a type. You might attempt something like <code>Just</code> but that has type <code>a -&gt; Maybe a</code> with kind <code>Type</code>, rather than <code>Maybe</code> with kind <code>Type -&gt; Type</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 1, "creation_date": 1549837456, "post_id": 54621431, "comment_id": 96036046, "body": "I don\u2019t agree not being able to have a function taking a <code>List</code> and returning a <code>List</code>.  Both type synonyms and type families allow you to do exactly that."}, {"owner": {"reputation": 6303, "user_id": 1173755, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/v3kWt.png?s=128&g=1", "display_name": "riccardo.cardin", "link": "https://stackoverflow.com/users/1173755/riccardo-cardin"}, "edited": false, "score": 0, "creation_date": 1549881372, "post_id": 54621431, "comment_id": 96049470, "body": "<i>and Functor is a type constructor</i>, you said, but Functor should be a <i>typeclass</i>, and not a type constructor, shouldn&#39;t it?"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1549939157, "post_id": 54621431, "comment_id": 96075691, "body": "Your kinds for <code>Functor</code> (and, implicitly, <code>Monad</code>) are not quite correct. Since these are type classes, they should have a kind that gives you <code>Constraint</code> (here specifically, it would be <code>(* -&gt; *) -&gt; Constraint</code>)."}], "tags": [], "owner": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "is_accepted": true, "score": 6, "last_activity_date": 1549835871, "last_edit_date": 1549835871, "creation_date": 1549835383, "answer_id": 54621431, "question_id": 54620961, "link": "https://stackoverflow.com/questions/54620961/can-type-constructors-be-considered-as-types-in-functional-programming-languages/54621431#54621431", "title": "Can type constructors be considered as types in functional programming languages?", "body": "<p>Let's look at an analogy: functions. In some branches of mathematics, functions are called <em>value constructors</em>, because that's what they do: you put one or more values in, and they construct a new value out of those.</p>\n\n<p>Type constructors are exactly the same thing, except on the type level: you put one or more types in, and they construct a new type out of those. They are, in some sense, functions on the type level.</p>\n\n<p>Now, to our analogy: what is the analog of the question you are asking? Well, it is this: \"Can value constructors (i.e. functions) be considered as values in functional programming languages?\"</p>\n\n<p>And the answer is: it depends on the programming language. Now, for functional programming languages, the answer is \"Yes\" for almost all (if not all) of them. It depends on your definition of what a \"functional programming language\" is. Some people define a functional programming language as a programming language which has functions as values, so the answer will be trivially \"Yes\" by definition. But, some people define a functional programming language as a programming language which does not allow side-effects, and in such a language, it is not necessarily true that functions are values.</p>\n\n<p>The most famous example may be John Backus' FP, from his seminal paper <em>Can Programming Be Liberated from the von Neumann Style?\u00a0\u2013 a functional style and its algebra of programs</em>. In FP, there is a hierarchy of \"function-like\" things. Functions can only deal with values, and functions themselves are not values. However, there is a concept of \"functionals\" which are \"function constructors\", i.e. they can take functions (and also values) as input and/or produce functions as output, but they cannot take functionals as input and/or produce them as output.</p>\n\n<p>So, FP is arguably a functional programming language, but it does not have functions as values.</p>\n\n<p>Note: functions as values is also called \"first-class functions\" and functions that take functions as input or return them as output are called \"higher-order functions\".</p>\n\n<p>If we look at some types:</p>\n\n<pre><code>1   :: Int\n[1] :: List Int\nadd :: Int \u2192 Int\nmap :: (a \u2192 b, List a) \u2192 b\n</code></pre>\n\n<p>You can see that we can easily say: any value whose type has an arrow in it, is a function. Any value whose type has more than one arrow in it, is a higher-order function.</p>\n\n<p>Again, the same applies to type constructors, since they are really the same thing except on the type level. In some languages, type constructors can be types, in some they can't. For example, in Java and C\u266f, type constructors are not types. You cannot have a <code>List&lt;List&gt;</code> in C\u266f, for example. You can <em>write down</em> the type <code>List&lt;List&gt;</code> in Java, but that is misleading, since the two <code>List</code>s mean different things: the first <code>List</code> is the type constructor, the second <code>List</code> is the <em>raw type</em>, so this is in fact <em>not</em> using a type constructor as a type.</p>\n\n<p>What is the equivalent to our types example above?</p>\n\n<pre><code>Int     :: Type\nList    :: Type \u21d2 Type\n\u2192       :: (Type, Type) \u21d2 Type\nFunctor :: (Type \u21d2 Type) \u21d2 Type\n</code></pre>\n\n<p>(Note, how we always have <code>Type</code>? Indeed, we are only dealing with types, so we normally don't write <code>Type</code> but instead simply write <code>*</code>, pronounced \"Type\"):</p>\n\n<pre><code>Int     :: *\nList    :: * \u21d2 *\n\u2192       :: (*, *) \u21d2 *\nFunctor :: (* \u21d2 *) \u21d2 *\n</code></pre>\n\n<p>So, <code>Int</code> is a proper type, <code>List</code> is a type constructor that takes one type and produces a type, <code>\u2192</code> (the function type constructor) takes two types and returns a type (assuming only unary functions, e.g. using currying or passing tuples), and <code>Functor</code> is a type constructor, which itself takes a type constructor and returns a type.</p>\n\n<p>Theses \"type-types\" are called <em>kinds</em>. Like with functions, anything with an arrow is a type constructor, and anything with more than one arrow is a <em>higher-kinded type constructor</em>.</p>\n\n<p>And like with functions, some languages allow higher-kinded type constructors and some don't. The two languages you mention in your question, Scala and Haskell <em>do</em>, but as mentioned above, Java and C\u266f don't.</p>\n\n<p>However, there is a complication when we look at your question:</p>\n\n<blockquote>\n  <p>So, are type constructors also types?</p>\n</blockquote>\n\n<p>Not really, no. At least not in any language I know about. See, while you can have higher-kinded type constructors that take type constructors as input and/or return them as output, you cannot have an expression or a value or a variable or a parameter which has a type constructor as its type. You cannot have a function that takes a <code>List</code> or returns a <code>List</code>. You cannot have a variable of type <code>Monad</code>. But, you <em>can</em> have a variable of type <code>Int</code>.</p>\n\n<p>So, clearly, there is a difference between types and type constructors.</p>\n"}, {"comments": [{"owner": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 0, "creation_date": 1549883245, "post_id": 54622051, "comment_id": 96050608, "body": "Functions are mappings from values to values, but they are still values. I am still not quite clear where this analogy breaks down, since type constructors and functions are more or less the same thing, but for some reason a function which maps values to values is a value itself but a type constructor which maps types to types is not a type. BTW, I think Haskell (at least with some extensions) also has <i>sorts</i>, which is the next level, i.e. the &quot;type&quot; of kinds."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 0, "creation_date": 1549890316, "post_id": 54622051, "comment_id": 96054631, "body": "I didn&#39;t mention sorts because 1) generally Haskell has just the one implicit sort and 2) I&#39;m  not at all familiar with the extensions the let you define additional sorts. :) A function is really a specific kind of mapping, one from a <i>set</i> to another <i>set</i>. One way to <i>define</i> a function is to list (explicitly or implicitly) which value in the codomain of the function each value in the domain is mapped to."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1549842019, "last_edit_date": 1549842019, "creation_date": 1549840113, "answer_id": 54622051, "question_id": 54620961, "link": "https://stackoverflow.com/questions/54620961/can-type-constructors-be-considered-as-types-in-functional-programming-languages/54622051#54622051", "title": "Can type constructors be considered as types in functional programming languages?", "body": "<p>At least in Haskell, there is a hierarchy that can roughly be described as follows.</p>\n\n<p><em>Terms</em> are things that exist at run-time, values like <code>1</code>, <code>'a'</code>, and <code>(+)</code>, for example. </p>\n\n<p>Each term has a <em>type</em>, like <code>Int</code> or <code>Char</code> or <code>Int -&gt; Int -&gt; Int</code>.</p>\n\n<p>Each type has a <em>kind</em>, and all types have the same kind, namely <code>*</code>.</p>\n\n<p>A type constructor like <code>[]</code>, though, has kind <code>* -&gt; *</code>, so it is not a type. Instead, it is a <em>mapping</em> from a type to a type.</p>\n\n<hr>\n\n<p>There are other kinds as well, including (in addition to <code>*</code> and <code>* -&gt; *</code>, with an example of each):</p>\n\n<ul>\n<li><code>* -&gt; * -&gt; *</code> (<code>Either</code>)</li>\n<li><code>(* -&gt; *) -&gt; * -&gt; *</code> (<code>ReaderT</code>, a monad transformer)</li>\n<li><code>Constraint</code> (<code>Num Int</code>)</li>\n<li><code>* -&gt; Constraint</code> (<code>Num</code>; this is the kind of a type class)</li>\n</ul>\n"}], "owner": {"reputation": 6303, "user_id": 1173755, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/v3kWt.png?s=128&g=1", "display_name": "riccardo.cardin", "link": "https://stackoverflow.com/users/1173755/riccardo-cardin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 751, "favorite_count": 1, "accepted_answer_id": 54621431, "answer_count": 3, "score": 9, "last_activity_date": 1549856257, "creation_date": 1549831993, "last_edit_date": 1549832148, "question_id": 54620961, "link": "https://stackoverflow.com/questions/54620961/can-type-constructors-be-considered-as-types-in-functional-programming-languages", "title": "Can type constructors be considered as types in functional programming languages?", "body": "<p>I am approaching the Haskell programming language, and I have a background of Scala and Java developer.</p>\n\n<p>I was reading the theory behind type constructors, but I cannot understand if they can be considered types. I mean, in Scala, you use the keywords <code>class</code> or <code>trait</code> to define type constructors. Think about <code>List[T]</code>, or <code>Option[T]</code>. Also in Haskell, you use the same keyword <code>data</code>, that is used for defining new types.</p>\n\n<p>So, are type constructors also types?</p>\n"}, {"tags": ["list", "dictionary", "haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 14, "creation_date": 1549820143, "post_id": 54619082, "comment_id": 96031073, "body": "<code>&quot;12&quot;</code> is exactly equivalent to the list <code>[&#39;1&#39;, &#39;2&#39;]</code> though. The first is syntactic sugar for the second."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 9, "creation_date": 1549820290, "post_id": 54619082, "comment_id": 96031115, "body": "What do you want <code>[42,-1]</code> to be converted to?"}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 2, "last_activity_date": 1549823171, "last_edit_date": 1549823171, "creation_date": 1549822857, "answer_id": 54619550, "question_id": 54619082, "link": "https://stackoverflow.com/questions/54619082/how-can-i-convert-1-2-to-1-2-in-haskell/54619550#54619550", "title": "How can I convert [1, 2] to [&#39;1&#39;, &#39;2&#39;] in haskell?", "body": "<p><code>[1,2,3]</code>, <code>['1','2','3']</code> and <code>[\"1\",\"2\",\"3\"]</code> are <em>lists</em>, not arrays. Haskell, like many functional languages, does lots of stuff with lists and basically just uses arrays as an optimisation.</p>\n\n<p>This includes strings: in Haskell, strings (meaning, <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:String\" rel=\"nofollow noreferrer\"><code>Prelude.String</code></a>) are just lists of characters. Therefore, as Robert Zigmond commented, <strong><code>['1','2']</code> and <code>\"12\"</code> are <em>the exact same thing</em></strong>, just written with different syntax.</p>\n\n<p>So, if GHCi shows you <code>\"12\"</code> as the result of the test, it means you've done it right<sup>\u2020</sup>: you do get a list of characters. This would be more obvious if you had used type signatures, like you <em>always</em> should do:</p>\n\n<pre><code>fn :: [Int] -&gt; [Char]\nfn = map conv\n where conv l = show l !! 0\n</code></pre>\n\n<p>Note that this gives a compile-time type error with the incorrect version <code>conv l = show l</code> that you had at first.</p>\n\n<p>If for some reason you actually need output in the form <code>['1','2']</code>, you can easily write yourself a suitable showing function:</p>\n\n<pre><code>import Data.List (intercalate)\n\nshowPlainList :: [Char] -&gt; String\nshowPlainList l = \"[\" ++ intercalate \",\" (map show l) ++ \"]\"\n</code></pre>\n\n<pre>GHCi> showPlainList $ fn [1,2]<br>\"['1','2']\"</pre>\n\n<hr>\n\n<p><sup>\u2020</sup>I should remark that, although your function does work correctly, it is quite flawed, namely it only works properly on lists of non-negative one-digit numbers. The <code>!!</code> operator is generally a code smell, and unsafe (it fails when you're accessing past the end, i.e. in this case for empty result of <code>show</code>.</p>\n\n<p>I don't know why you want this function anyway, so I also won't suggest a better implementation. Likely this is just a learning example, so fair enough. Just keep in mind in the future: if you find yourself using <code>head</code> or <code>!!</code>, you're probably doing something unidiomatic and unsafe.</p>\n"}], "owner": {"reputation": 2181, "user_id": 7058735, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GxhO2.png?s=128&g=1", "display_name": "K Split X", "link": "https://stackoverflow.com/users/7058735/k-split-x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 54619550, "answer_count": 1, "score": -1, "last_activity_date": 1549823171, "creation_date": 1549819999, "question_id": 54619082, "link": "https://stackoverflow.com/questions/54619082/how-can-i-convert-1-2-to-1-2-in-haskell", "title": "How can I convert [1, 2] to [&#39;1&#39;, &#39;2&#39;] in haskell?", "body": "<p>What I have tried:</p>\n\n<pre><code>fn l = map conv l\n\nconv l = show l\n</code></pre>\n\n<p>Then <code>fn [1,2] == [\"1\",\"2\"]</code></p>\n\n<p>But these is an array of strings. I want an array of chars.</p>\n\n<p>So I know to convert a string to char, we can use the following:</p>\n\n<p><code>\"1\" !! 0 == '1'</code>. So using the same logic:</p>\n\n<p><code>conv l = (show l) !! 0</code></p>\n\n<p>but this time I get back <code>\"12\"</code></p>\n\n<p>I assume <code>map</code> is combining chars together to form a string, but I want it in <code>['1', '2']</code> format</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 11066, "user_id": 147057, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/cf9d83a95db2460ccb18f311fa8a766c?s=128&d=identicon&r=PG", "display_name": "max taldykin", "link": "https://stackoverflow.com/users/147057/max-taldykin"}, "is_accepted": true, "score": 1, "last_activity_date": 1549819566, "creation_date": 1549819566, "answer_id": 54619014, "question_id": 54618771, "link": "https://stackoverflow.com/questions/54618771/playing-with-the-arrow/54619014#54619014", "title": "Playing with the arrow (-&gt;)", "body": "<p>You can use <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:uncurry\" rel=\"nofollow noreferrer\">uncurry</a></p>\n\n<pre><code>runMonitoringCommand monitoringCommand currentStep settings Workspace {workspaceId} =\n  uncurry (displayCallResult currentStep) $ case monitoringCommand of\n    ListCommandReceived         -&gt; (\"Commands\",                 streamGsdCommandByWorkspaceId settings workspaceId)\n    ListCommandResponseReceived -&gt; (\"Command Responses\",        streamGsdCommandResponseByWorkspaceId settings workspaceId)\n    ListEventsGenerated         -&gt; (\"Events\",                   streamGsdEventByWorkspaceId settings workspaceId)\n    ListValidationStateHistory  -&gt; (\"Validation State History\", streamGsdValidationStateByWorkspaceId settings workspaceId)\n</code></pre>\n"}], "owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 54619014, "answer_count": 1, "score": 0, "last_activity_date": 1549819566, "creation_date": 1549817922, "last_edit_date": 1549818723, "question_id": 54618771, "link": "https://stackoverflow.com/questions/54618771/playing-with-the-arrow", "title": "Playing with the arrow (-&gt;)", "body": "<p>Here is the context :</p>\n\n<pre><code>data MonitoringCommand = ListCommandReceived\n                       | ListCommandResponseReceived\n                       | ListEventsGenerated\n                       | ListValidationStateHistory\n\n\nrunMonitoringCommand :: forall stepType. MonitoringCommand -&gt;\n                                           Step stepType -&gt;\n                                           ClientSetting -&gt;\n                                           Workspace -&gt;\n                                           Byline IO (Either StepError (Step stepType))\nrunMonitoringCommand monitoringCommand currentStep settings Workspace {workspaceId} =\n  displayCallResult currentStep (case monitoringCommand of\n    ListCommandReceived -&gt; \"Commands\"  (streamGsdCommandByWorkspaceId settings workspaceId)\n    ListCommandResponseReceived -&gt; \"Command Responses\" (streamGsdCommandResponseByWorkspaceId settings workspaceId)\n    ListEventsGenerated -&gt; \"Events\" (streamGsdEventByWorkspaceId settings workspaceId)\n    ListValidationStateHistory -&gt; \"Validation State History\" (streamGsdValidationStateByWorkspaceId settings workspaceId))\n\n\ndisplayCallResult :: forall item stepType. Show item =&gt;\n                                             Step stepType -&gt;\n                                             String -&gt;\n                                             SerialT IO (SafeResponse (Persisted item)) -&gt;\n                                             Byline IO (Either StepError (Step stepType))\ndisplayCallResult currentStep itemName clientCall = do\n  displayBeginningOfACommand\n  sayLn $ fg white &lt;&gt; (text . pack) itemName\n  safeResponse &lt;- liftIO $ StreamlySafe.toList $ clientCall\n  nextStep &lt;- case safeResponse of\n      Left error -&gt; return $ Left $ StepError { currentStep, errorDescription = show error }\n      Right persistedItems -&gt; persistedItems &amp; mapM (sayLn . displayItem) &gt;&gt; (return $ Right currentStep)\n  displayEndOfACommand\n  return nextStep\n  where\n    displayItem :: Show item =&gt; (Persisted item) -&gt; Stylized\n    displayItem PersistedItem {offset, item} =\n      fg white &lt;&gt; \"  \"&lt;&gt;(text.pack.show) offset &lt;&gt; \"- \" &lt;&gt; fg green &lt;&gt; (text.pack.show) item\n</code></pre>\n\n<p>in the function 'runMonitoringCommand',  I want somehow to add 2 parameters to (displayCallResult currentStep), can we do that ? </p>\n\n<p>instead of repeating the \"displayCallResult currentStep\" like this :</p>\n\n<pre><code>runMonitoringCommand :: forall stepType. MonitoringCommand -&gt;\n                                           Step stepType -&gt;\n                                           ClientSetting -&gt;\n                                           Workspace -&gt;\n                                           Byline IO (Either StepError (Step stepType))\nrunMonitoringCommand monitoringCommand currentStep settings Workspace {workspaceId} =\n  (case monitoringCommand of\n    ListCommandReceived -&gt;         displayCallResult currentStep  \"Commands\"                 (streamGsdCommandByWorkspaceId settings workspaceId)\n    ListCommandResponseReceived -&gt; displayCallResult currentStep  \"Command Responses\"        (streamGsdCommandResponseByWorkspaceId settings workspaceId)\n    ListEventsGenerated -&gt;         displayCallResult currentStep  \"Events\"                   (streamGsdEventByWorkspaceId settings workspaceId)\n    ListValidationStateHistory -&gt;  displayCallResult currentStep  \"Validation State History\" (streamGsdValidationStateByWorkspaceId settings workspaceId))\n</code></pre>\n"}, {"tags": ["haskell", "ssl", "cloudflare", "yesod", "keter"], "comments": [{"owner": {"reputation": 1327, "user_id": 1749901, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/06876c39fc89c5abe3d891e36fe29504?s=128&d=identicon&r=PG", "display_name": "Geradlus_RU", "link": "https://stackoverflow.com/users/1749901/geradlus-ru"}, "edited": false, "score": 0, "creation_date": 1549799633, "post_id": 54615984, "comment_id": 96025216, "body": "Well, I suppose I have to edit my <code>keter-config.yaml</code> too, to make it listen port 443"}, {"owner": {"reputation": 1327, "user_id": 1749901, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/06876c39fc89c5abe3d891e36fe29504?s=128&d=identicon&r=PG", "display_name": "Geradlus_RU", "link": "https://stackoverflow.com/users/1749901/geradlus-ru"}, "edited": false, "score": 0, "creation_date": 1549800198, "post_id": 54615984, "comment_id": 96025331, "body": "Done, but still having same results"}], "answers": [{"tags": [], "owner": {"reputation": 1327, "user_id": 1749901, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/06876c39fc89c5abe3d891e36fe29504?s=128&d=identicon&r=PG", "display_name": "Geradlus_RU", "link": "https://stackoverflow.com/users/1749901/geradlus-ru"}, "is_accepted": true, "score": 1, "last_activity_date": 1549822080, "last_edit_date": 1549822080, "creation_date": 1549803324, "answer_id": 54616619, "question_id": 54615984, "link": "https://stackoverflow.com/questions/54615984/yesod-web-app-with-keter-and-cloudflares-free-ssl/54616619#54616619", "title": "Yesod web app with Keter and Cloudflare&#39;s free SSL", "body": "<p>OK, finally I've done following:</p>\n\n<h3>Application's <code>keter.yml</code></h3>\n\n<pre><code>stanzas:\n  - type: webapp\n    exec: ../dist/bin/dummy-name\n    args: []\n    hosts:\n      - dummy-domain.info\n    requires-secure: true\n    ssl:\n      key: /opt/keter/etc/cert/dummy-domain.info.key\n      certificate: /opt/keter/etc/cert/dummy-domain.info.pem\n</code></pre>\n\n<h3>Keter configuration on server <code>keter-config.yaml</code></h3>\n\n<pre><code>root: ..\n#\n# # Keter can listen on multiple ports for incoming connections. These ports can\n# # have HTTPS either enabled or disabled.\nlisteners:\n    # HTTP\n        - host: \"*4\" # Listen on all IPv4 hosts\n          port: 80 # Could be used to modify port\n    # HTTPS\n        - host: \"*4\"\n          port: 443\n          key: cert/dummy-domain.info.key\n          certificate: cert/dummy-domain.info.pem\n</code></pre>\n\n<h3>CloudFlare config:</h3>\n\n<p><strong>SSL</strong> type now set to <code>Full</code><br>\n<strong>Always Use HTTPS</strong> is <code>ON</code>    </p>\n\n<p>Also I've restarted keter service\n<code>sudo service keter restart</code></p>\n\n<p>Now everything work as expected.</p>\n"}], "owner": {"reputation": 1327, "user_id": 1749901, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/06876c39fc89c5abe3d891e36fe29504?s=128&d=identicon&r=PG", "display_name": "Geradlus_RU", "link": "https://stackoverflow.com/users/1749901/geradlus-ru"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 54616619, "answer_count": 1, "score": 1, "last_activity_date": 1575542907, "creation_date": 1549798789, "last_edit_date": 1575542907, "question_id": 54615984, "link": "https://stackoverflow.com/questions/54615984/yesod-web-app-with-keter-and-cloudflares-free-ssl", "title": "Yesod web app with Keter and Cloudflare&#39;s free SSL", "body": "<p>I have VPS running Debian 9 with Keter serving single web application.</p>\n\n<p>I've generated certificates using <code>Create certificate</code> button in <code>Origin Certificates</code> section of <code>Crypto</code> tab.</p>\n\n<p>Then I've edited my <code>keter.yaml</code>:</p>\n\n<pre><code>stanzas:\n  - type: webapp\n\n    exec: ../dist/bin/dummy-name\n    args: []\n    hosts:\n      - dummy-domain.info\n\n\n    ssl:\n      key: /opt/keter/etc/cert/dummy-domain.info.key\n      certificate: /opt/keter/etc/cert/dummy-domain.info.pem\n</code></pre>\n\n<p>There are also a remark:</p>\n\n<pre><code>    # Enable to force Keter to redirect to https\n    # Can be added to any stanza\n    # requires-secure: true\n</code></pre>\n\n<p>When I've uploaded new bundle it looks like that things does not work correct.  My website can be visited via HTTP (works as expected), and HTTPS, but it cannot load generated CSS and JS files from static (links injected in document have <code>http</code> scheme).</p>\n\n<p>What else should I do to make everything work using secure HTTPS connection?</p>\n\n<p>There are unclear options for keter:</p>\n\n<pre><code>  # for all stanzas\n  requires-secure: true\n\n  # stanza based\n  host: ....\n  secure: true\n\n</code></pre>\n\n<p>Also I have no idea which options should I use on CloudFlare too</p>\n\n<pre><code>SSL type now set to Flexible\nAlways Use HTTPS is OFF\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1549828521, "post_id": 54615497, "comment_id": 96033607, "body": "I&#39;m curious as to why you are implementing microservices in haskell. Microservices are a solution to a problem that haskell doesn&#39;t have."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "reply_to_user": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 1, "creation_date": 1549896607, "post_id": 54615497, "comment_id": 96058434, "body": "The question is what do you consider to be a Microservice ? @MichaelLitchard"}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1549797111, "post_id": 54615709, "comment_id": 96024615, "body": "<code>from a f g = (f &amp;&amp;&amp; g) a</code>. But then the <code>uncurry</code> is unavoidable this way. Perhaps, simply define <code>from c a f g = c (f a) (g a) = (c . f &lt;*&gt; g) a</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549797373, "post_id": 54615709, "comment_id": 96024671, "body": "Thanks, I forgot about the Arrow methods :) And I was going off the OP&#39;s suggestion to have <code>from</code> return a pair, which of course makes <code>uncurry</code> unavoidable. Your version definitely looks better though, feel free to post it as an answer as I can&#39;t claim any credit."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549797614, "post_id": 54615709, "comment_id": 96024729, "body": "By SO rules it is perfectly OK to include it in your answer while providing attribution (e.g. &quot;as [Will Ness](...user link...) mentions in the comments, ...&quot; etc., and you are welcome to do it. :)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549797982, "post_id": 54615709, "comment_id": 96024828, "body": "Thanks, have done so. (I&#39;ve left out the rewriting as <code>(c . f &lt;*&gt; g) a</code> though, mainly because I&#39;m struggling to understand it myself. Which instance of Applicative is being used here?)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549798082, "post_id": 54615709, "comment_id": 96024853, "body": "functions&#39;. since <code>.</code> works with functions, <code>c . f</code> is a fucntion, hence that. besides, I just use it as a pointfree shortcut, <code>(f &lt;*&gt; g) x = f x (g x)</code> (a.k.a. S combinator), without thinking of applicatives at all. Same with <code>(f =&lt;&lt; g) x = f (g x) x</code> or <code>join f x = f x x</code>. Simply use them as convenient combinators, where convenient."}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": false, "score": 3, "last_activity_date": 1549797944, "last_edit_date": 1549797944, "creation_date": 1549796427, "answer_id": 54615709, "question_id": 54615497, "link": "https://stackoverflow.com/questions/54615497/simplification-of-code-need-help-to-refine-the-title-of-this-question/54615709#54615709", "title": "Simplification of code (need help to refine the title of this question ... )", "body": "<p>So I think you're after something like this?</p>\n\n<pre><code>from :: a -&gt; (a -&gt; b) -&gt; (a -&gt; b) -&gt; (b, b)\nfrom a f g = (f a, g a)\n</code></pre>\n\n<p>And then you can use it like this:</p>\n\n<pre><code>uncurry connect $ from microservice getEventStoreSettings getConnectionType\n</code></pre>\n\n<p>I'm sure something like this <code>from</code> probably exists in the standard library, but I can't find anything in a quick search on Hoogle.</p>\n\n<p>EDIT: as @WillNess points out in the comments, this can be improved in a couple of ways.</p>\n\n<p>First, my version of <code>from</code> above can be simplified as <code>from a f g = (f &amp;&amp;&amp; g) a</code>.</p>\n\n<p>Second, you can avoid the need for <code>uncurry</code> by defining a more general version of <code>from</code>:</p>\n\n<pre><code>from' :: (b -&gt; b -&gt; c) -&gt; a -&gt; (a -&gt; b) -&gt; (a -&gt; b) -&gt; c\nfrom' c a f g = c (f a) (g a)\n</code></pre>\n\n<p>allowing one to do simply:</p>\n\n<pre><code>from' connect  microservice getEventStoreSettings getConnectionType\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 2, "last_activity_date": 1549809484, "creation_date": 1549809484, "answer_id": 54617449, "question_id": 54615497, "link": "https://stackoverflow.com/questions/54615497/simplification-of-code-need-help-to-refine-the-title-of-this-question/54617449#54617449", "title": "Simplification of code (need help to refine the title of this question ... )", "body": "<p>Note that you don't really need a magical function. It would probably be clearer to just use the existing <code>Applicative</code> instance for functions.</p>\n\n<pre><code>data EventStoreMicroService = EventStoreMicroService {\n                                urlHost :: String,\n                                port :: Int,\n                                username :: ByteString,\n                                password :: ByteString}\n\ngetCredentials :: EventStoreMicroService -&gt; EventStore.Credentials\ngetCredentials = EventStore.Credentials &lt;$&gt; username &lt;*&gt; password\n\ngetConnectionType :: EventStoreMicroService -&gt; EventStore.ConnectionType\ngetConnectionType = EventStore.Static &lt;$&gt; urlHost &lt;*&gt; port\n\ngetEventStoreSettings :: EventStoreMicroService -&gt; EventStore.Settings\ngetEventStoreSettings _ = EventStore.defaultSettings\n-- or getEventStoreSettings = const EventStore.defaultSettings\n</code></pre>\n\n<p>Then</p>\n\n<pre><code>let microservice = EventStoreMicroService { urlHost = \"127.3.4.5\"\n                                          , port = 2000\n                                          , username = \"xxxx\"\n                                          , password = \"yyy\"\n                                          }    \n(connect &lt;$&gt; getEventStoreSettings &lt;*&gt; getConnectionType) microservice\n-- or skip getEventStoreSettings, and use defaultSettings directly\n-- connect EventStore.defaultSettings (getConnectionType microservice)\n</code></pre>\n"}], "owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 54617449, "answer_count": 2, "score": 0, "last_activity_date": 1549809484, "creation_date": 1549794803, "question_id": 54615497, "link": "https://stackoverflow.com/questions/54615497/simplification-of-code-need-help-to-refine-the-title-of-this-question", "title": "Simplification of code (need help to refine the title of this question ... )", "body": "<p>I don't have a name for what I'm looking for... (I will update the title of this question as soon as I have it...).</p>\n\n<p>Here is the context :</p>\n\n<pre><code>data EventStoreMicroService = EventStoreMicroService {\n                                    urlHost :: String,\n                                    port :: Int,\n                                    username :: ByteString,\n                                    password :: ByteString}\n\ngetCredentials :: EventStoreMicroService -&gt; EventStore.Credentials\ngetCredentials EventStoreMicroService {username,password} = EventStore.credentials username password\n\ngetConnectionType :: EventStoreMicroService -&gt; EventStore.ConnectionType\ngetConnectionType EventStoreMicroService {urlHost,port} = (EventStore.Static urlHost port)\n\ngetEventStoreSettings :: EventStoreMicroService -&gt; EventStore.Settings\ngetEventStoreSettings service = EventStore.defaultSettings\n</code></pre>\n\n<p>I have this function : </p>\n\n<pre><code>connect :: Settings -&gt; ConnectionType -&gt; IO Connection\n</code></pre>\n\n<p>And this is what I'm doing so far : </p>\n\n<pre><code>let microservice = EventStoreMicroService {\n      urlHost = \"127.3.4.5\",\n      port = 2000,\n      username = \"xxxx\",\n      password = \"yyy\"}\n    eventStoreSettings = getEventStoreSettings microservice\n    eventStoreConnectionType = getConnectionType microservice\n\nconnect eventStoreSettings eventStoreConnectionType\n</code></pre>\n\n<p>I'm looking for a magical function (I named it 'from') that will be able to express it that way :</p>\n\n<pre><code>let microservice = EventStoreMicroService {\n      urlHost = \"127.3.4.5\",\n      port = 2000,\n      username = \"xxxx\",\n      password = \"yyy\"}\n    eventStoreSettings = getEventStoreSettings microservice\n    eventStoreConnectionType = getConnectionType microservice\n\nconnect $ from microservice getEventStoreSettings getConnectionType\n</code></pre>\n\n<p>basically it applies 2 functions to a data type that return let say (a,b) and feed this tuple to a function connect...    </p>\n"}, {"tags": ["haskell", "concurrency"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1549744366, "post_id": 54610378, "comment_id": 96015490, "body": "If both tasks take about the same amount of time, then the first one to start <i>should</i> finish first. The first one gets a head start by virtue of being, well, the first one started."}, {"owner": {"reputation": 252, "user_id": 3230177, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PN2aL.jpg?s=128&g=1", "display_name": "mat4nier", "link": "https://stackoverflow.com/users/3230177/mat4nier"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549744501, "post_id": 54610378, "comment_id": 96015532, "body": "Ok. I will mess around and change some urls to some longer ones, and add in a few more URLs.  I&#39;m assuming the two <code>waits</code> at the end act like uhhh a single await in something like java or scala?  If a1 takes forever, and a2 finishes instantly, I&#39;m still waiting until <i>everything</i> finishes before printing the result as opposed to printing some intermediate result when a2 finished."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1549747051, "post_id": 54610378, "comment_id": 96016163, "body": "Yes, that&#39;s how <code>wait</code> works regardless of language. The process that started your program forked two additional processes, one for each URL, and then calls <code>wait</code> on <code>a1</code>. Once <code>a1</code> completes, it waits on <code>a2</code>, which may or may not have completed already. (If it did complete, the second <code>wait</code> can return immediately.)"}, {"owner": {"reputation": 252, "user_id": 3230177, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PN2aL.jpg?s=128&g=1", "display_name": "mat4nier", "link": "https://stackoverflow.com/users/3230177/mat4nier"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1549756213, "post_id": 54610378, "comment_id": 96018228, "body": "handy hint from twitter on this &quot;second thread depends on first thread handle. Not results of the computations, just the handles.&quot;"}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 2, "last_activity_date": 1549778798, "creation_date": 1549778798, "answer_id": 54613814, "question_id": 54610378, "link": "https://stackoverflow.com/questions/54610378/parallel-and-concurrent-programming-in-haskell-async-do-de-sugars-to-synchrono/54613814#54613814", "title": "Parallel and Concurrent Programming in Haskell - Async Do de-sugars to synchronous?", "body": "<blockquote>\n  <p>no matter what I do, Shovel always resolves before Spade.</p>\n</blockquote>\n\n<p>Well, you always ask for the result of shovel before spade via that call to <code>wait</code> coming first.  You always start shovel before spade so it isn't surprising if it almost always resolves first too.</p>\n\n<p>A simple test: use <code>threadDelay 100000 &gt;&gt; getURL \"...shovel\"</code> then look at the network traffic.  This will show you things are happening concurrently.</p>\n"}], "owner": {"reputation": 252, "user_id": 3230177, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PN2aL.jpg?s=128&g=1", "display_name": "mat4nier", "link": "https://stackoverflow.com/users/3230177/mat4nier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1549778798, "creation_date": 1549743690, "question_id": 54610378, "link": "https://stackoverflow.com/questions/54610378/parallel-and-concurrent-programming-in-haskell-async-do-de-sugars-to-synchrono", "title": "Parallel and Concurrent Programming in Haskell - Async Do de-sugars to synchronous?", "body": "<p>I'm working through Parallel and Concurrent Programming in Haskell on the Overlapping Input/Output Chapter and I can't understand how async actually works asynchronously. </p>\n\n<pre><code>data Async a = Async (MVar a)\n\nasync' :: IO a -&gt; IO (Async a)\nasync' action = do\n  var &lt;- newEmptyMVar\n  forkIO (do r &lt;- action; putMVar var r)\n  return (Async var)\n\n-- if I desugar the do notation for async: \nasync'' :: IO a -&gt; IO (Async a)\nasync'' action = newEmptyMVar &gt;&gt;= \\var -&gt;\n  (forkIO (action &gt;&gt;= \\r -&gt; putMVar var r)) &gt;&gt;\n  (return $ Async var)\n\nwait :: Async a -&gt; IO a\nwait (Async var) = readMVar var\n\nblah = do\n  a1 &lt;- async'' (getURL \"http://www.wikipedia.org/wiki/Shovel\")\n  a2 &lt;- async'' (getURL \"http://www.wikipedia.org/wiki/Spade\")\n  r1 &lt;- wait a1\n  r2 &lt;- wait a2\n  print (B.length r1, B.length r2)\n\n-- if I desguar the above do block I get this, which looks\n-- like a2 won't happen until a1 is finished?\nblah' = async''(getURL \"http://www.wikipedia.org/wiki/Shovel\") &gt;&gt;= \\a1 -&gt;\n  async''(getURL \"http://www.wikipedia.org/wiki/Spade\") &gt;&gt;= \\a2 -&gt;\n  wait a1 &gt;&gt;= \\r1 -&gt;\n  wait a2 &gt;&gt;= \\r2 -&gt;\n  (print (B.length r1, B.length r2))\n</code></pre>\n\n<p>When I run this no matter what I do, Shovel always resolves before Spade. So how is this running async?  I would have expected interleaving sometimes (getting Spade before shovel).  Is my exampple just too fast and I'd see this behavior if I made many more examples?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1549732320, "post_id": 54608496, "comment_id": 96012075, "body": "what are <code>getVal0</code> and <code>getVal1</code>? But it looks like you are trying to use a <code>do</code> block where it is both unnecessary and invalid. <code>do</code> blocks are only for computations within a monad - <code>Int</code> is not a monadic value so you can&#39;t use a <code>do</code> block to calculate such a value."}, {"owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549732414, "post_id": 54608496, "comment_id": 96012100, "body": "Just added an explanation for the functions. You can imagine them as arbitrary functions that return an Int."}, {"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 1, "creation_date": 1549732457, "post_id": 54608496, "comment_id": 96012113, "body": "Why are you using the <code>{}</code>? The purpose of that syntax is to simplify machine-generated code not for normal people to use it... Anyway checkout <a href=\"https://en.wikibooks.org/wiki/Haskell/Control_structures\" rel=\"nofollow noreferrer\">this wiki</a>"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 8, "creation_date": 1549732466, "post_id": 54608496, "comment_id": 96012115, "body": "<code>do</code> doesn&#39;t do what you think it does. Ditto <code>return</code> and <code>&lt;-</code>. This function needs none of those."}, {"owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "edited": false, "score": 0, "creation_date": 1549732471, "post_id": 54608496, "comment_id": 96012117, "body": "How would I then accomplish such kind of nested structure in haskell? I need to store multiple values and then make descision based on the stored values"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 3, "creation_date": 1549732684, "post_id": 54608496, "comment_id": 96012171, "body": "Perhaps you want to use the <code>let ... in ...</code> syntax here."}, {"owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "edited": false, "score": 0, "creation_date": 1549732755, "post_id": 54608496, "comment_id": 96012190, "body": "Mh... starting to think I should have been using  Let"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 2, "creation_date": 1549733774, "post_id": 54608496, "comment_id": 96012453, "body": "I tried writing an answer but this is too broad; requires explaining haskell syntax, purity, <code>do</code> notation, etc, etc. Even trying to fix this code block depends very much on the type of the made-up <code>getVal1</code>. Could you try asking just a single question, with an MCVE if you are still stuck?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 2, "creation_date": 1549734561, "post_id": 54608496, "comment_id": 96012707, "body": "@jberryman I think an answer that simply shows the correct way to use <code>let</code>, without getting into why <code>do</code> is inappropriate, would be sufficient. The OP commented that <code>getVal0</code> and <code>getVal1</code> are functions, so we can assume that something like <code>let a = getVal0 parm1 parm2 in ...</code> is the intent."}, {"owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "edited": false, "score": 1, "creation_date": 1549736913, "post_id": 54608496, "comment_id": 96013471, "body": "Hey I am fiddling around with &quot; let ..  in &quot; syntax right now, I think it should be solvable that way.  My usage of &quot;do&quot; was completely incorrect, thanks for making me wiser!"}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "edited": false, "score": 0, "creation_date": 1549755093, "post_id": 54610191, "comment_id": 96017986, "body": "Totally helped me implement the problem I was stuck with, thanks a lot!"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 5, "last_activity_date": 1549742283, "creation_date": 1549742283, "answer_id": 54610191, "question_id": 54608496, "link": "https://stackoverflow.com/questions/54608496/whats-the-syntax-to-create-nested-if-else-statements-with-dos/54610191#54610191", "title": "What&#39;s the syntax to create nested if else statements with do&#39;s", "body": "<p>As already mentioned in the comments, you don't need <code>do</code>, <code>&lt;-</code>, or <code>return</code> here. Those are for monadic code, but here you are defining a regular function -- there are no monads around.</p>\n\n<p>So, we can instead use <code>let .. in ..</code>. Here's a possible way, performing minor changes to the original code.</p>\n\n<pre><code>func :: Int -&gt; Int\nfunc val =\n   if val &lt; 10 then let\n      a = getVal0\n      b = getVal1\n      in if val + a + b &lt; 0\n         then 1\n         else 2\n   else if val &gt; 10 then let\n      a = getVal2\n      b = getVal3\n      in if val + a + b &lt; 0 \n         then 0\n         else 1\n   else 99\n</code></pre>\n\n<p>Many Haskellers would consider to turn the outermost <code>if</code>s into guards:</p>\n\n<pre><code>func :: Int -&gt; Int\nfunc val\n   | val &lt; 10 = let\n      a = getVal0\n      b = getVal1\n      in if val + a + b &lt; 0\n         then 1\n         else 2\n   | val &gt; 10 = let\n      a = getVal2\n      b = getVal3\n      in if val + a + b &lt; 0 \n         then 0\n         else 1\n   | otherwise = 99\n</code></pre>\n"}], "owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 54610191, "answer_count": 1, "score": 1, "last_activity_date": 1549742283, "creation_date": 1549731818, "last_edit_date": 1549737263, "question_id": 54608496, "link": "https://stackoverflow.com/questions/54608496/whats-the-syntax-to-create-nested-if-else-statements-with-dos", "title": "What&#39;s the syntax to create nested if else statements with do&#39;s", "body": "<p>So I am just getting the hang of Haskell and got stuck with the syntax for creating nested if-else statements with Do.\nI am not sure, if I am supposed to use multiple Do's or if I can accomplish it all with just one. \nI am also not sure if I should use the return statement and if all the semicolons are necessary. </p>\n\n<p>I tried adding and removing braces, return statements, semicolons, different indenting and do not know what else to try.</p>\n\n<p>I get errors like \"     \u2022 Couldn't match expected type \u2018m0 (m0 b0)\u2019 with actual type \u2018Int\u2019\n    \u2022 In a stmt of a 'do' block: a &lt;- getVal\n\"</p>\n\n<ol>\n<li><p>This is the kind of structure I am trying to build but it gives me errors. You can imagine the getVal functions as arbitrary functions, that return an integer :</p>\n\n<pre><code>func :: Int -&gt; Int\nfunc val = do {\n   if val &lt; 10\n      then do {\n          a &lt;- getVal0;\n          b &lt;- getVal1;\n          if (val+a+b) &lt; 0\n             then return 1\n             else return 2}\n      else if val &gt; 10 \n          then do {\n             a &lt;- getVal2;\n             b &lt;- getVal3;\n             if (val + a +b) &lt; 0 \n               then return 0\n               else return 1}\n      else return 99;     }\n</code></pre></li>\n</ol>\n\n<p>An example of get val would be:</p>\n\n<pre><code>    getVal :: Int\n    getVal  = 5\n</code></pre>\n\n<p>So this is what I want to happen : </p>\n\n<p>If val is &lt; 10, then get the value a with 2 parameters from getVal0 and get b from getVal1 . Then add val+a+b and if that is smaller than 0, return 1, else 2</p>\n\n<p>If val is > 10, then get a from getVal2 and get b from getVal3. If val+a+b &lt;0 then return 0, otherwise 1 .</p>\n\n<p>If val is neither &lt;10 or >10 ( val = 10) then return 99</p>\n\n<p>Thanks for feedback and help!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 8, "creation_date": 1549729144, "post_id": 54608107, "comment_id": 96011273, "body": "I see two problems here. One is that you&#39;ve declared the type signature for <code>bmi</code> twice. The other is that you have indented blocks which shouldn&#39;t be indented."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549729382, "post_id": 54608107, "comment_id": 96011317, "body": "you <i>can</i> use indentation, but it must be the same indentation."}], "answers": [{"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": false, "score": 7, "last_activity_date": 1549744331, "creation_date": 1549744331, "answer_id": 54610453, "question_id": 54608107, "link": "https://stackoverflow.com/questions/54608107/keep-getting-a-parse-error-on-input-in-haskell/54610453#54610453", "title": "keep getting a parse error on input &quot;::&quot; in Haskell?", "body": "<p>The structure of Haskell code is determined by its formatting and indentation.</p>\n\n<p>In particular:</p>\n\n<pre><code>type BMI = Float\n\n  bmi :: Height -&gt; Mass -&gt; BMI\n</code></pre>\n\n<p>Because the second line is indented more than the first, Haskell assumes it is a continuation of that type declaration. It is parsed as:</p>\n\n<pre><code>type BMI = Float bmi :: Height -&gt; Mass -&gt; BMI\n</code></pre>\n\n<p>This is a syntax error because you can't just have a <code>::</code> in the middle of a <code>type</code> declaration.</p>\n\n<p>Fix: Make sure all your lines are indented the same. In this example you probably don't want any indentation at all:</p>\n\n<pre><code>type BMI = Float\n\nbmi :: Height -&gt; Mass -&gt; BMI\n\n^ -- 'type' and 'bmi' start in the same column\n</code></pre>\n"}], "owner": {"reputation": 5, "user_id": 10676780, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6de0807d8520b2e512f9db2e9e1535a9?s=128&d=identicon&r=PG&f=1", "display_name": "sonia", "link": "https://stackoverflow.com/users/10676780/sonia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1549744331, "creation_date": 1549729073, "last_edit_date": 1549729202, "question_id": 54608107, "link": "https://stackoverflow.com/questions/54608107/keep-getting-a-parse-error-on-input-in-haskell", "title": "keep getting a parse error on input &quot;::&quot; in Haskell?", "body": "<pre><code>type Mass = Float\ntype Height = Float\ntype BMI = Float\n\n  bmi :: Height -&gt; Mass -&gt; BMI\n  bmi :: Height-&gt; Mass -&gt; BMI\n\n\n  bmi heightM weightKg = weightKg/(heightM/100)^2\n</code></pre>\n\n<p>this is my code when running it I keep getting a parse error on :: why is this how can I fix this</p>\n"}, {"tags": ["haskell", "typeclass", "accumulate"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1549721865, "post_id": 54607017, "comment_id": 96009263, "body": "Note that <code>sequence :: (Traversable t, Monad m) =&gt; t (m a) -&gt; m (t a)</code> applies to more than lists."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1549722201, "post_id": 54607017, "comment_id": 96009341, "body": "<code>accumulate :: (Traversable t, Monad m, Monoid a) =&gt; t (m a) -&gt; m a; accumulate = fmap fold . sequence</code>. Is this what you&#39;re looking for?"}], "answers": [{"comments": [{"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 1, "creation_date": 1549722501, "post_id": 54607137, "comment_id": 96009411, "body": "For the sake of completeness it&#39;s <code>accumulate = fmap fold . sequence</code> and it can be used as <code>accumulate x</code> where <code>x :: [State String [a]]</code>."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 1, "last_activity_date": 1549722354, "creation_date": 1549722354, "answer_id": 54607137, "question_id": 54607017, "link": "https://stackoverflow.com/questions/54607017/accumulating-state-s-a-results/54607137#54607137", "title": "Accumulating [State s a] results", "body": "<blockquote>\n  <p>How do I convert <code>State String [a]</code> into <code>State String a</code></p>\n</blockquote>\n\n<p>Since <code>State s</code> is a <code>Functor</code>, that question is equivalent to asking: <em>How do I convert <code>[a]</code> into <code>a</code>?</em></p>\n\n<p>You can use <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#v:mconcat\" rel=\"nofollow noreferrer\">mconcat</a> for that.</p>\n\n<p>In order to apply that to <code>State</code>, you can combine <code>fmap</code> with <code>mconcat</code>.</p>\n\n<blockquote>\n  <p>can this be generalized even further, such that my input does not have to be a list, but can be of a more general type like a <code>Traversable</code>?.</p>\n</blockquote>\n\n<p>Yes, again, the core question is how to turn any container <code>t a</code> into <code>a</code>. You don't need <code>Traversable</code> for that; <code>Foldable</code> will do. Particularly, the function in question is <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#v:fold\" rel=\"nofollow noreferrer\">fold</a>.</p>\n\n<p>Again, combine <code>fold</code> with <code>fmap</code> to achieve the desired result.</p>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549728788, "post_id": 54607507, "comment_id": 96011183, "body": "so, as an illustration, <code>getAp $ foldMap Ap [p,q,r] = liftA2 (&lt;&gt;) p (liftA2 (&lt;&gt;) q (liftA2 (&lt;&gt;) r (pure mempty))) = liftA2 (&lt;&gt;) p (liftA2 (&lt;&gt;) q r)</code>? so is the combining essentially binary here?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549731053, "post_id": 54607507, "comment_id": 96011743, "body": "@WillNess At the <code>Applicative</code> level, it has to be binary.  As it makes one pass, the <code>Monoid</code> combinations have to be binary as well.  Changing my efficiency notes to emphasize that this might be better or worse, depending on the associativity in the Foldable instance and how well it matches up with properties of <code>mappend</code>."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 3, "last_activity_date": 1549731143, "last_edit_date": 1549731143, "creation_date": 1549724736, "answer_id": 54607507, "question_id": 54607017, "link": "https://stackoverflow.com/questions/54607017/accumulating-state-s-a-results/54607507#54607507", "title": "Accumulating [State s a] results", "body": "<p>GHC 8.6+ provide another way of doing this, which is possibly more direct.  It added a newtype, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Ap\" rel=\"nofollow noreferrer\"><code>Ap</code></a>, to <code>Data.Monoid</code> that handles the case of lifting the inner type's <code>Monoid</code> instance over an <code>Applicative</code> context.</p>\n\n<pre><code>$ghci\nGHCi, version 8.6.1: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; import Data.Monoid\nPrelude Data.Monoid&gt; :t getAp . foldMap Ap\ngetAp . foldMap Ap\n  :: (Foldable t, Applicative f, Monoid a) =&gt; t (f a) -&gt; f a\n</code></pre>\n\n<p>This generalizes <code>[State String [a]] -&gt; State String [a]</code> in a pretty minimal form. In fact, by avoiding <code>sequence</code> this drops the <code>Traversable</code> requirement down to <code>Foldable</code>. (The <code>Monad</code> constraint on <code>sequence</code> is a historical artifact, and <code>sequenceA</code> exists to lower that to <code>Applicative</code>, so I'm not concerned with the difference there.) This approach has an additional minor operational difference over using <code>sequence</code> - it combines both the monoidal joining and the applicative sequencing into a single pass.  There will be some combinations of types where that is more efficient, and combinations of types where it can be less efficient due to associativity.  It depends on whether <code>mappend</code> has an associativity bias that fits the bias <code>foldMap</code> creates.</p>\n"}], "owner": {"reputation": 4761, "user_id": 2277395, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/09841ca82e49f998ea0b8f159dea87c1?s=128&d=identicon&r=PG", "display_name": "Martin Drautzburg", "link": "https://stackoverflow.com/users/2277395/martin-drautzburg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1549731143, "creation_date": 1549721468, "question_id": 54607017, "link": "https://stackoverflow.com/questions/54607017/accumulating-state-s-a-results", "title": "Accumulating [State s a] results", "body": "<p><strong>What I did</strong></p>\n\n<p>I found myself writing some kind of \"renderer\", where at some point I had a list of state-transitions:</p>\n\n<pre><code>[State String [a]]\n</code></pre>\n\n<p>I wanted to apply them one after the other. I could do this with <code>sequence</code>, which brought me to</p>\n\n<pre><code>State String [[a]]\n</code></pre>\n\n<p>Then I had to flatten the result from list-of-lists to just list. I could do that by fmapping <code>concat</code> and ended up with the desired result</p>\n\n<pre><code>State String [a]\n</code></pre>\n\n<hr>\n\n<p><strong>So far, so good</strong></p>\n\n<p>But to make this work, my results had to be lists . Shouldn't that also work with a more general type, like a <code>Traversable</code>, a <code>Foldable</code> or even just a <code>Monoid</code>.</p>\n\n<p>I understand, that I ended up with a <em>list</em> of results because I started with a <em>list</em> of state-transitions and sequence preserves that shape. So, if I take that as given, my first question is</p>\n\n<ul>\n<li>How do I convert <code>State String [a]</code> into <code>State String a</code></li>\n</ul>\n\n<p>My second question is  </p>\n\n<ul>\n<li>can this be generalized even further, such that my input does not have to be a list, but can be of a more general type like a <code>Traversable</code>?.</li>\n</ul>\n\n<hr>\n\n<p><strong>Or, in short</strong></p>\n\n<ul>\n<li>How do I apply a collection of state-transitions one after the other while accumulating the results? What are the minimal type-constraints on the type of the collection and the type of the result?</li>\n</ul>\n"}, {"tags": ["list", "haskell", "optimization", "primes", "sieve-of-eratosthenes"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549723367, "post_id": 54606970, "comment_id": 96009639, "body": "try <a href=\"https://stackoverflow.com/questions/tagged/sieve-of-eratosthenes+haskell\">stackoverflow.com/questions/tagged/&hellip;</a> ; <a href=\"https://wiki.haskell.org/Prime_numbers\" rel=\"nofollow noreferrer\">wiki.haskell.org/Prime_numbers</a> ; <a href=\"https://wiki.haskell.org/Prime_numbers_miscellaneous#A_Tale_of_Sieves\" rel=\"nofollow noreferrer\">wiki.haskell.org/Prime_numbers_miscellaneous#A_Tale_of_Sieve&zwnj;&#8203;s</a> ; <a href=\"http://rosettacode.org/wiki/Sieve_of_Eratosthenes#Haskell\" rel=\"nofollow noreferrer\">rosettacode.org/wiki/Sieve_of_Eratosthenes#Haskell</a> ... <a href=\"https://wiki.haskell.org/Prime_numbers_miscellaneous#One-liners\" rel=\"nofollow noreferrer\">wiki.haskell.org/Prime_numbers_miscellaneous#One-liners</a>"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1549777131, "post_id": 54606970, "comment_id": 96021151, "body": "Another article is <a href=\"https://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf\" rel=\"nofollow noreferrer\">cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf</a>. It&#39;s not based around your article, but it&#39;s an interesting read nonetheless."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549825286, "post_id": 54606970, "comment_id": 96032656, "body": "it was a very confusing read, for me, while the math parts were indeed enlightening."}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1550171871, "post_id": 54606970, "comment_id": 96182237, "body": "An alternative approach that I used before was to pre-generate (or download) a large enough list of primes and then just load them within my program."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 1, "last_activity_date": 1553487577, "creation_date": 1553487577, "answer_id": 55331221, "question_id": 54606970, "link": "https://stackoverflow.com/questions/54606970/optimized-sieve-of-eratosthenes-in-haskell/55331221#55331221", "title": "Optimized Sieve of Eratosthenes in Haskell", "body": "<p>Since you say you need this list of primes for something <strong>else</strong> you are doing, I guess you don't really need to implement it yourself, do you?  Have you looked at existing off-the-shelf solutions?</p>\n\n<p>Several existing packages provide a <code>primes</code> function that gives the (infinite) list of primes:</p>\n\n<pre><code>primes :: [Integer]  -- or some other integral type\nprimes = [2,3,5,7,11,13,...]\n</code></pre>\n\n<p>I looked at the versions in the <a href=\"https://hackage.haskell.org/package/primes-0.2.1.0/docs/Data-Numbers-Primes.html#v:primes\" rel=\"nofollow noreferrer\"><code>primes</code></a>, <a href=\"https://hackage.haskell.org/package/arithmoi-0.8.0.0/docs/Math-NumberTheory-Primes-Sieve.html#v:primes\" rel=\"nofollow noreferrer\"><code>arithmoi</code></a>, and <a href=\"https://hackage.haskell.org/package/exact-combinatorics-0.2.0.8/docs/Math-Combinatorics-Exact-Primes.html#v:primes\" rel=\"nofollow noreferrer\"><code>exact-combinatorics</code></a> packages.  The one in <code>arithmoi</code> seems blindingly fast.  The Stack script:</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack --resolver lts-12.21 script --optimize\nimport Math.NumberTheory.Primes (primes)\n\nmain :: IO ()\nmain = print (sum $ take 1000000 primes)\n</code></pre>\n\n<p>uses <code>arithmoi-0.7.0.0</code> and sums the first ten million primes in about a second.</p>\n\n<p>If you use the newer package version in <code>arithmoi-0.8.0.0</code> then <code>primes</code> has been redefined as a polymorphic list, so you'll want to define a monomorphic copy of the desired integer type:</p>\n\n<pre><code>primes' :: [Integer]\nprimes' = primes\n</code></pre>\n\n<p>and use that to avoid re-computing the list every time <code>primes</code> is used.  (See the documentation.)</p>\n"}], "owner": {"reputation": 51, "user_id": 11037997, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-fX-tr3NYfoo/AAAAAAAAAAI/AAAAAAAAABY/MQ37jUXfRyY/photo.jpg?sz=128", "display_name": "9fish", "link": "https://stackoverflow.com/users/11037997/9fish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1553487577, "creation_date": 1549721125, "last_edit_date": 1549723334, "question_id": 54606970, "link": "https://stackoverflow.com/questions/54606970/optimized-sieve-of-eratosthenes-in-haskell", "title": "Optimized Sieve of Eratosthenes in Haskell", "body": "<p>I'm new to Haskell and for something I'm implementing I need a prime numbers list. I tried writing one, but it's too slow.</p>\n\n<p>This is what I've tried doing.</p>\n\n<pre><code>primeList = primes 1000\nprimes :: Int -&gt; [Bool]\nprimes x = primeRecursion 2 ([False,False] ++ replicate (x-1) True)\n    where primeRecursion y l\n            | y == x = l\n            | not (l!!y) = primeRecursion (y+1) l\n            | otherwise = primeRecursion (y+1) [ if (a&gt;y &amp;&amp; (a `mod` y == 0)) then False else l!!a | a &lt;- [0..x]]\n</code></pre>\n\n<p>It works, but the algorithmic complexity is higher than the procedural equivalent, since for every prime number it goes through the whole list, not only its multiples. I can't find a way to make it O(n (log n) (log log n)), because of the way functional programming works. What is a (preferably simple and clear-looking) method of doing that?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": true, "score": 9, "last_activity_date": 1549695635, "creation_date": 1549695635, "answer_id": 54604010, "question_id": 54603849, "link": "https://stackoverflow.com/questions/54603849/associate-a-value-with-a-type-in-haskell-using-a-typeclass/54604010#54604010", "title": "Associate a value with a type in Haskell using a typeclass", "body": "<p>Using <code>TypeApplications</code>, this is easy:</p>\n\n<pre><code>{-# LANGUAGE AllowAmbiguousTypes, TypeApplications #-}\n\nclass Resource a where\n  resourcePathSegment :: String\n\ninstance Resource Form where\n  resourcePathSegment = \"form\"\n\ninstance Resource Invocation where\n  resourcePathSegment = \"job\"\n</code></pre>\n\n<p>To illustrate how to use the above:</p>\n\n<pre><code>ghci&gt; :t resourcePathSegment\nresourcePathSegment :: Resource a =&gt; String\nghci&gt; resourcePathSegment @Form\n\"form\"\nghci&gt; resourcePathSegment @Invocation\n\"job\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1549705981, "post_id": 54604013, "comment_id": 96005589, "body": "The <code>TypeApplications</code> way is more modern, yours is more &quot;classical&quot;.  Modern things can be great, but they can also have problems that only time will reveal.  (For example, <code>TypeApplications</code> is sensitive to minor changes in the type signature.  Will this be irritating in practice?  Don&#39;t know yet!)"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1549708816, "post_id": 54604013, "comment_id": 96006125, "body": "Good point @luqui. On the other hand, these sort of minor signature changes wouldn&#39;t be too common with this sort of typeclass, and a type signature change would probably be a breaking change whether or not <code>TypeApplications</code> are used. Personally I find the <code>@</code>-syntax a lot more convenient than saying <code>Proxy :: Proxy something</code> every time."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1549744351, "post_id": 54604013, "comment_id": 96015487, "body": "Even when using proxies, I construct then by <code>Proxy @ SomeType</code>!"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 1, "creation_date": 1549751879, "post_id": 54604013, "comment_id": 96017261, "body": "@Ben That&#39;s what I do too - <code>TypeApplications</code> is so <i>convenient</i>! <code>fromIntegral</code> is another one which benefits from the syntax."}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": false, "score": 8, "last_activity_date": 1549696109, "last_edit_date": 1549696109, "creation_date": 1549695701, "answer_id": 54604013, "question_id": 54603849, "link": "https://stackoverflow.com/questions/54603849/associate-a-value-with-a-type-in-haskell-using-a-typeclass/54604013#54604013", "title": "Associate a value with a type in Haskell using a typeclass", "body": "<p>The <code>Proxy</code> type, from <code>Data.Proxy</code>, is defined as <code>data Proxy a = Proxy</code>.\nThis may be used to create a typeclass for this functionality:</p>\n\n<pre><code>class Resource a where\n    name :: Proxy a -&gt; String\n\ninstance Resource Form\n    name _ = \"form\"\n\ninstance Resource Invocation where\n    name _ = \"job\"\n\n-- etc.\n</code></pre>\n\n<p>You can then get the <code>name</code> of a type by calling <code>name (Proxy :: Proxy type_name)</code>.</p>\n\n<p>There are several variations of this technique; an excellent summary can be found at the recent blog post <a href=\"https://ryanglscott.github.io/2019/02/06/proxy-arguments-in-class-methods/\" rel=\"noreferrer\">Proxy arguments in class methods: a comparative analysis</a>.</p>\n\n<p><strong>EDIT:</strong> I see that @Alexis King has submitted a very similar answer. Refer to the blog post above for an overview of the pros and cons of each approach. (Personally, I would use Alexis's technique, since I like <code>TypeApplications</code>, but I feel that mine is a bit simpler since it doesn't require <code>AllowAmbiguousTypes</code> or <code>TypeApplications</code> to use.)</p>\n"}], "owner": {"reputation": 14766, "user_id": 27779, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b3c28efaa2a3b032a91632e8984cb477?s=128&d=identicon&r=PG", "display_name": "Gregory Higley", "link": "https://stackoverflow.com/users/27779/gregory-higley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "accepted_answer_id": 54604010, "answer_count": 2, "score": 5, "last_activity_date": 1549696109, "creation_date": 1549693950, "question_id": 54603849, "link": "https://stackoverflow.com/questions/54603849/associate-a-value-with-a-type-in-haskell-using-a-typeclass", "title": "Associate a value with a type in Haskell using a typeclass", "body": "<p>I want to use a typeclass to return a <code>String</code> instance that is functionally dependent upon a Haskell type. For example, imagine we have the type <code>Form</code>. I want to associate the string \"form\" with this type. Given the type <code>Invocation</code>, I want to associate the string \"job\". And so on. The important thing is that <em>I will often not have an instance of the type in question, though the type will be in the type signature of any function that uses it.</em></p>\n\n<p>Perhaps an easy way to demonstrate this is with Swift:</p>\n\n<pre><code>protocol Resource {\n  static var resourcePathSegment: String { get }\n}\n\nstruct Form : Resource {\n    static let resourcePathSegment = \"form\"\n}\n\nstruct Invocation: Resource {\n    static let resourcePathSegment = \"job\"\n}\n\nprint(Form.resourcePathSegment)\n</code></pre>\n\n<p>Why would I want such a thing? I'm talking to a REST API that uses certain conventions. For a <code>GET</code> request, the path segment to the resource in question is functionally dependent upon the type of the data returned from the request. However, I won't have an instance of this type until the request completes.</p>\n"}, {"tags": ["haskell", "state-monad"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549705258, "post_id": 54603200, "comment_id": 96005456, "body": "You don&#39;t actually need the State monad for either of these tasks, both can be done with basic &quot;pure&quot; list functions. I guess you know this and were just doing this for learning purposes, but thought I should mention it in case you thought you needed state for it."}], "answers": [{"comments": [{"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 0, "creation_date": 1549692242, "post_id": 54603449, "comment_id": 96003086, "body": "thanks it works! how would you translate <code>(0 :) &lt;$&gt; scanList xs</code> to English? I would say &quot;apply the concatenation of 0 to every element of &lt;something&gt;&quot; but what is &lt;something&gt; ... it doesn&#39;t make sense here (?)"}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "reply_to_user": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "edited": false, "score": 4, "creation_date": 1549692990, "post_id": 54603449, "comment_id": 96003192, "body": "The &quot;apply a function to every element of the list&quot; definition of <code>fmap</code> is only for the list monad. The <code>fmap</code> definition used here is for the state monad, which is to &quot;apply a stateless function <code>f</code> to the result of the stateful computation <code>m</code> in <code>fmap f m</code>&quot;. If it&#39;s easier to understand, think of it as shorthand for <code>scanList xs &gt;&gt;= return . (0 :)</code>"}], "tags": [], "owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "is_accepted": true, "score": 5, "last_activity_date": 1549691654, "last_edit_date": 1549691654, "creation_date": 1549689472, "answer_id": 54603449, "question_id": 54603200, "link": "https://stackoverflow.com/questions/54603200/haskell-monad-state-example/54603449#54603449", "title": "Haskell Monad State Example", "body": "<p><code>[0] ++ scanList xs</code> doesn't work because <code>scanList xs</code> is not a list, but a <code>State (Int,Int) [Int]</code>. To fix that, you will need to use <code>fmap</code>/<code>&lt;$&gt;</code>.</p>\n\n<p>You will also need to change the base case to not make the state value be the return value.</p>\n\n<pre><code>scanList :: [Either String Int] -&gt; State (Int, Int) [Int]\nscanList []     = return []\nscanList (x:xs) = do\n    (ns,ni) &lt;- get\n    case x of\n        Left  _ -&gt; put (ns+1, ni)\n        Right _ -&gt; put (ns, ni+1)\n    case x of\n        Left  _ -&gt; (0 :) &lt;$&gt; scanList xs\n        Right i -&gt; (i :) &lt;$&gt; scanList xs\n</code></pre>\n\n<p>To further simplify the code, however, it would be good to use <code>mapM</code>/<code>traverse</code> and <code>state</code> to remove most of the boilerplate of the recursion and <code>get</code>/<code>put</code> syntax.</p>\n\n<pre><code>scanList :: [Either String Int] -&gt; State (Int, Int) [Int]\nscanList = mapM $ \\x -&gt; state $ \\(ns, ni) -&gt; case x of\n    Left  _ -&gt; (0, (ns+1, ni))\n    Right i -&gt; (i, (ns, ni+1))\n</code></pre>\n"}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 452, "favorite_count": 0, "accepted_answer_id": 54603449, "answer_count": 1, "score": 3, "last_activity_date": 1549691654, "creation_date": 1549686807, "question_id": 54603200, "link": "https://stackoverflow.com/questions/54603200/haskell-monad-state-example", "title": "Haskell Monad State Example", "body": "<p>I'm experimenting with Haskell's <code>Control.Monad.State</code> by trying to iterate through a list of either strings or integers, counting them, and replacing string entries with the integer <code>0</code>. I have managed to do the counting part, but failed in creating the replaced list. Here is my code\nwhich correctly prints <code>[3,6]</code> to the screen. How can I make it create the desired list <code>[6,0,3,8,0,2,9,1,0]</code>?</p>\n\n<pre><code>module Main( main ) where\n\nimport Control.Monad.State\n\nl = [\n    Right 6,\n    Left \"AAA\",\n    Right 3,\n    Right 8,\n    Left \"CCC\",\n    Right 2,\n    Right 9,\n    Right 1,\n    Left \"D\"]\n\nscanList :: [ Either String Int ] -&gt; State (Int,Int) [ Int ]\nscanList [    ] = do\n    (ns,ni) &lt;- get\n    return (ns:[ni])\nscanList (x:xs) = do\n    (ns,ni) &lt;- get\n    case x of\n        Left  _ -&gt; put (ns+1,ni)\n        Right _ -&gt; put (ns,ni+1)\n    case x of\n        Left  _ -&gt; scanList xs -- [0] ++ scanList xs not working ...\n        Right i -&gt; scanList xs -- [i] ++ scanList xs not working ...\n\nstartState = (0,0)\n\nmain = do\n    print $ evalState (scanList l) startState\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1549659419, "post_id": 54599944, "comment_id": 95996550, "body": "This seems to be a rather confusing way of saying that the argument of <code>throwIO</code> needs to be an instance of <code>Exception</code> class, which <code>String</code> doesn&#39;t seem to be. Or at least the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception-Base.html#v:throwIO\" rel=\"nofollow noreferrer\">signature</a> of <code>throwIO</code> suggests such interpretation."}, {"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1549659668, "post_id": 54599944, "comment_id": 95996657, "body": "I see. Using <code>error</code> instead works"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1549670680, "post_id": 54600161, "comment_id": 95999948, "body": "Why even mention <code>error</code> in an <code>IO</code> context where there&#39;s a much cleaner mechanism available?"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1549685331, "post_id": 54600161, "comment_id": 96002069, "body": "@dfeuer Two reasons: (1) judging by the rest of the code, it is very possible that the OP was looking for a quick fix, and (2) <code>error</code> was already suggested in the comments, and the OP chose to go with it."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 8, "last_activity_date": 1549659748, "creation_date": 1549659748, "answer_id": 54600161, "question_id": 54599944, "link": "https://stackoverflow.com/questions/54599944/how-to-make-such-function-shouldberight-either-a-b-io-b/54600161#54600161", "title": "How to make such function `shouldBeRight :: Either a b -&gt; IO b`?", "body": "<p>The compiler doesn't know the type of exception that you're trying to <code>throwIO</code>.</p>\n\n<p>Judging from the error messages, you probably have <code>-XOverloadedStrings</code> enabled, which means that string literals, e.g. <code>\"abcd\"</code>, don't have a definitive type, but can take on whatever type is expected, provided that there is an <code>IsString</code> instance for it. The most frequently used string types are <code>String</code> and <code>Text</code>, but there are others, and you can also make your own.</p>\n\n<p>On the other hand, the function <a href=\"https://www.stackage.org/haddock/lts-13.6/base-4.12.0.0/Control-Exception.html#v:throwIO\" rel=\"noreferrer\"><code>throwIO</code></a><code>:: Exception e =&gt; e -&gt; IO a</code> also doesn't specify any specific type: it takes any type <code>e</code>, as long as there is an <code>Exception</code> instance for it.</p>\n\n<p>So the compiler kind of doesn't know which types to pick. There is no basis for picking anything.</p>\n\n<p>The \"normal\" way this should be solved is to create your own exception type and give it an <code>Exception</code> instance, like this:</p>\n\n<pre><code>data MyConversionException = NotJust | NotRight String deriving (Typeable, Show)\n\ninstance Exception MyConversionException\n</code></pre>\n\n<p>And then throw that:</p>\n\n<pre><code>shouldBeRight (Left a) = throwIO $ NotRight (show a)\n\n...\n\nshouldBeJust Nothing = throwIO NotJust\n</code></pre>\n\n<p>If you really want your exception to display that specific text when it happens, you can always give it a custom <code>Show</code> instance:</p>\n\n<pre><code>instance Show MyConversionException where\n    show NotJust = \"should be Just value but was Nothing\"\n    show (NotRight leftValue) = \"should be Right value but wasn't, because:\" ++ leftValue\n</code></pre>\n\n<p>Alternatively, if you just want a quick-n-dirty solution, you can use the <a href=\"https://www.stackage.org/haddock/lts-13.6/base-4.12.0.0/Prelude.html#v:error\" rel=\"noreferrer\"><code>error</code></a> function, which generates a runtime exception, much like <code>throwIO</code>, except its type is pure, so it can be used outside IO as well:</p>\n\n<pre><code>shouldBeJust Nothing = error \"should be Just value but was Nothing\"\n</code></pre>\n"}], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 54600161, "answer_count": 1, "score": 0, "last_activity_date": 1549659748, "creation_date": 1549658849, "question_id": 54599944, "link": "https://stackoverflow.com/questions/54599944/how-to-make-such-function-shouldberight-either-a-b-io-b", "title": "How to make such function `shouldBeRight :: Either a b -&gt; IO b`?", "body": "<p>I'm trying to make such two functions as below in order to get the \"Right\" value or the \"Just\" value. But can't compile, why? </p>\n\n<pre><code>shouldBeRight :: (Show a) =&gt; Either a b -&gt; IO b\nshouldBeRight (Left a) =\n  throwIO $ concat [\"should be Right value but wasn't, because:\", show a]\nshouldBeRight (Right b) = return b\n\nshouldBeJust :: Maybe a -&gt; IO a\nshouldBeJust Nothing = throwIO \"should be Just value but was Nothing\"\nshouldBeJust (Just a) = return a\n</code></pre>\n\n<p>Here are the errors:</p>\n\n<pre><code>    \u2022 Ambiguous type variable \u2018e0\u2019 arising from a use of \u2018throwIO\u2019\n      prevents the constraint \u2018(GHC.Exception.Exception\n                                  e0)\u2019 from being solved.\n      Probable fix: use a type annotation to specify what \u2018e0\u2019 should be.\n      These potential instances exist:\n        30 instances involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In the expression: throwIO \"should be Just value but is nothing\"\n      In an equation for \u2018shouldBeJust\u2019:\n          shouldBeJust Nothing\n            = throwIO \"should be Just value but is nothing\"\n   |\n23 | shouldBeJust Nothing = throwIO \"should be Just value but is nothing\"\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n\n    \u2022 Ambiguous type variable \u2018e0\u2019 arising from the literal \u2018\"should be Just value but is nothing\"\u2019\n      prevents the constraint \u2018(Data.String.IsString\n                                  e0)\u2019 from being solved.\n      Probable fix: use a type annotation to specify what \u2018e0\u2019 should be.\n      These potential instances exist:\n        instance a ~ Char =&gt; Data.String.IsString [a]\n          -- Defined in \u2018Data.String\u2019\n        ...plus 13 instances involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In the first argument of \u2018throwIO\u2019, namely\n        \u2018\"should be Just value but is nothing\"\u2019\n      In the expression: throwIO \"should be Just value but is nothing\"\n      In an equation for \u2018shouldBeJust\u2019:\n          shouldBeJust Nothing\n            = throwIO \"should be Just value but is nothing\"\n   |\n23 | shouldBeJust Nothing = throwIO \"should be Just value but is nothing\"\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n</code></pre>\n"}, {"tags": ["haskell", "command-line", "command-line-arguments"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1549645896, "post_id": 54596911, "comment_id": 95990621, "body": "Note that when there are two arguments, your code simplifies to <code>do args &lt;- getArgs ; 2</code> where the 2 is the result of <code>checkArgCount args</code>. But <code>2</code> does not make sense inside the <code>do</code>, since it&#39;s not an action to be performed. Indeed, that&#39;s the issue. In my view, <code>checkArgCount</code> has the wrong type: why should checking something return an int?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549645914, "post_id": 54596911, "comment_id": 95990636, "body": "<code>return $ checkArgCount args</code>, but in real code, <code>checkArgCount args</code> isn&#39;t going to be the last thing you call, so you probably want to do something else with the return value of <code>checkArgCount</code>."}, {"owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1549692502, "post_id": 54596911, "comment_id": 96003126, "body": "<code>do</code> notation can be confuse when you starting, in case you not already know, the wiki have a good <a href=\"https://en.wikibooks.org/wiki/Haskell/do_notation\" rel=\"nofollow noreferrer\">page</a> on it."}], "answers": [{"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 4, "last_activity_date": 1549645047, "creation_date": 1549645047, "answer_id": 54597045, "question_id": 54596911, "link": "https://stackoverflow.com/questions/54596911/how-to-fix-couldnt-match-expected-type-io-a0-with-int-in-haskell/54597045#54597045", "title": "How to fix &#39;&#39;couldn&#39;t match expected type IO a0 with int&#39;&#39; in Haskell?", "body": "<p><code>main</code> is declared to have the type <code>IO ()</code> (which is correct). The last expression in any function is the return value. This particular code returns the result of <code>checkArgCount args</code>, which is <code>Int</code>.</p>\n\n<p>An <code>Int</code> value isn't an <code>IO ()</code> value, so that doesn't type check.</p>\n\n<p>You should either change the type of <code>checkArgCount</code> to return <code>()</code> or <code>IO ()</code>, or add more code to <code>main</code> that uses the <code>Int</code> returned by <code>checkArgCount</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 4, "last_activity_date": 1549645060, "creation_date": 1549645060, "answer_id": 54597050, "question_id": 54596911, "link": "https://stackoverflow.com/questions/54596911/how-to-fix-couldnt-match-expected-type-io-a0-with-int-in-haskell/54597050#54597050", "title": "How to fix &#39;&#39;couldn&#39;t match expected type IO a0 with int&#39;&#39; in Haskell?", "body": "<p>Yes, <code>args :: [String]</code>, but <code>checkArgCount args</code> must have type <code>IO ()</code>, being the last line in the <code>do</code> block with the overall type <code>IO ()</code>. </p>\n\n<p>So it's about the output type, not the input type of that function.</p>\n\n<p>Changing <code>2</code> to <code>print 2</code> in the <code>if</code>'s consequent should fix it (and of course changing the type signature of <code>checkArgCount</code> to fit the change).</p>\n"}, {"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1549648661, "post_id": 54597406, "comment_id": 95991877, "body": "Consider using <code>System.Exit.die</code> or something similar instead of <code>return ()</code>."}], "tags": [], "owner": {"reputation": 61, "user_id": 1925052, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ltq1U.jpg?s=128&g=1", "display_name": "FabolousPotato", "link": "https://stackoverflow.com/users/1925052/fabolouspotato"}, "is_accepted": true, "score": 1, "last_activity_date": 1549646477, "creation_date": 1549646477, "answer_id": 54597406, "question_id": 54596911, "link": "https://stackoverflow.com/questions/54596911/how-to-fix-couldnt-match-expected-type-io-a0-with-int-in-haskell/54597406#54597406", "title": "How to fix &#39;&#39;couldn&#39;t match expected type IO a0 with int&#39;&#39; in Haskell?", "body": "<pre><code>args &lt;- getArgs\n     if (length args) /= 2\n        then return()\n        else do -- ..continue coding\n</code></pre>\n\n<p>Proved to be far simpler solution</p>\n"}], "owner": {"reputation": 61, "user_id": 1925052, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ltq1U.jpg?s=128&g=1", "display_name": "FabolousPotato", "link": "https://stackoverflow.com/users/1925052/fabolouspotato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 54597406, "answer_count": 3, "score": 0, "last_activity_date": 1549646477, "creation_date": 1549644593, "last_edit_date": 1549645067, "question_id": 54596911, "link": "https://stackoverflow.com/questions/54596911/how-to-fix-couldnt-match-expected-type-io-a0-with-int-in-haskell", "title": "How to fix &#39;&#39;couldn&#39;t match expected type IO a0 with int&#39;&#39; in Haskell?", "body": "<p>The line <code>checkArgCount args</code> gives me the trouble. <code>args</code> is a type <code>[String]</code> isn't it? I'm confused over why it gives me error.</p>\n\n<pre><code>import System.IO\nimport Data.List\nimport System.Environment --for command line args\n\n--Checks if number of arguments provided is 2\ncheckArgCount ::[String] -&gt; Int\ncheckArgCount a = if (length a) == 2 then 2 else error \"No arguments\" \n\nmain :: IO()\nmain = do\n     args &lt;- getArgs\n     checkArgCount args\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549641772, "post_id": 54596132, "comment_id": 95988384, "body": "I&#39;m not sure what the question is. What you have works fine, although you could simplify that first guard to just <code>m elem [4, 6, 9, 11]</code> (<code>elem</code> needs to be enclosed in backticks, but I don&#39;t know how to do that here without messing up the formatting). If you want to use pattern matching instead of guards, you need to do things like <code>m 4 = 30</code>, <code>m 6 = 30</code> and so on, on separate lines. (You can end with <code>m _ = 31</code> after dealing with the special cases, to save having to do 12 separate cases.)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1549642114, "post_id": 54596132, "comment_id": 95988553, "body": "When you say &quot;need&quot;, is this because you were given a homework assignment on using pattern matching? I can&#39;t think of a good reason to move away from guards otherwise."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1549645459, "post_id": 54596132, "comment_id": 95990408, "body": "@RobinZigmond enclose such code in double-backticks."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 2, "last_activity_date": 1549643213, "last_edit_date": 1549643213, "creation_date": 1549642795, "answer_id": 54596434, "question_id": 54596132, "link": "https://stackoverflow.com/questions/54596132/pattern-matching-different-inputs-same-output-haskell/54596434#54596434", "title": "Pattern matching different inputs same output haskell", "body": "<p>You can use the <code>ViewPatterns</code> extension to match on the result of an arbitrary function applied to the argument. (This might not be in the <em>spirit</em> of switching to pattern-matching, but I'd say it satisfies the letter of the task.)</p>\n\n<pre><code>{-# LANGUAGE ViewPatterns #-}\n\ndaysInMonth :: Int -&gt; Int\ndaysInMonth (\\x -&gt; x &lt; 0 || x &gt; 12 -&gt; True) = error \"Month does not exist\"\ndaysInMonth ((`elem` [4, 6, 9, 11]) -&gt; True) = 30\ndaysInMonth 2 = 28\ndaysInMonth _ = 31\n</code></pre>\n\n<hr>\n\n<p>This also lends itself to doing a simple lookup. (Association list incomplete to save space.)</p>\n\n<pre><code>daysInMonth :: Int -&gt; Int\ndaysInMonth (flip lookup [(1,31), (2,28), (3,31), ...] -&gt; Just d) = d\ndaysInMonth _ = error \"Month does not exist\"\n</code></pre>\n\n<p>Here, we apply <code>lookup</code> to get back a <code>Maybe Int</code> value, and match that against <code>Just d</code>. If the lookup succeeded (as it should for a valid month number), we return the value <code>d</code>. If <code>lookup</code> returns <code>Nothing</code>, that pattern match fails, and we try the next one, which calls <code>error</code> for any input it sees.</p>\n\n<p>(Granted, this is more simply written as <code>daysInMonth = maybe (error \"...\") id . flip lookup [...]</code> rather than resorting to the <code>ViewPatterns</code> extension, but I though it was a nice example of how view patterns worked.)</p>\n"}, {"tags": [], "owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "is_accepted": false, "score": 0, "last_activity_date": 1549690757, "creation_date": 1549690757, "answer_id": 54603562, "question_id": 54596132, "link": "https://stackoverflow.com/questions/54596132/pattern-matching-different-inputs-same-output-haskell/54603562#54603562", "title": "Pattern matching different inputs same output haskell", "body": "<p>Not sure if I understand the question, let me try.</p>\n\n<p>If you really need to remove guards, you can match on the value of input for each case. But as you can see it will greatly reducing <code>readability</code>.</p>\n\n<p>Be-careful when using pattern matching, make sure you include all possible cases.</p>\n\n<p>Code below is not a good example to use, just to show it is possible to do.</p>\n\n<pre><code>daysInMonth :: Int -&gt; Int\n\n-- | m == 4 || m == 6 || m == 9 || m == 11 = 30\ndaysInMonth 4 = 30\ndaysInMonth 6 = 30\ndaysInMonth 9 = 30\ndaysInMonth 11 = 30\n\n-- | m == 2 = 28\ndaysInMonth 2 = 28\n\n-- | m &gt; 12 || m &lt; 0 = error \"Month does not exist\"\n-- | m == m = 31\ndaysInMonth m = if (m &gt; 12 || m &lt; 0)\n                then error \"Month does not exist\"\n                else 31\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 7475856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe4b5d256809beba4df4e68efeb8d60b?s=128&d=identicon&r=PG&f=1", "display_name": "Dilly", "link": "https://stackoverflow.com/users/7475856/dilly"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1549690757, "creation_date": 1549641594, "question_id": 54596132, "link": "https://stackoverflow.com/questions/54596132/pattern-matching-different-inputs-same-output-haskell", "title": "Pattern matching different inputs same output haskell", "body": "<p>I have a function that outputs the days in a month and need to change the guards and use pattern matching. \n`</p>\n\n<pre><code>daysInMonth :: Int -&gt; Int\ndaysInMonth m\n\n    | m == 4 || m == 6 || m == 9 || m == 11 = 30\n    | m == 2 = 28\n    | m &gt; 12 || m &lt; 0 = error \"Month does not exist\"\n    | m == m = 31\n</code></pre>\n\n<p>`\nCan I keep the months 4, 6, 9 and 11 on the same line and how would I or do I have to put them on different lines?</p>\n"}, {"tags": ["haskell", "type-conversion", "binary-tree", "huffman-code"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1549626511, "post_id": 54591663, "comment_id": 95979696, "body": "And I don&#39;t think that last line is grouped correctly, even though the intention is clear: try <code>Branch (createHtree w1) (createHtree w2)</code>"}, {"owner": {"reputation": 111, "user_id": 7036574, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6c64c58d7a2241d71fce37ca79ded53b?s=128&d=identicon&r=PG&f=1", "display_name": "kalle konsida", "link": "https://stackoverflow.com/users/7036574/kalle-konsida"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549626601, "post_id": 54591663, "comment_id": 95979739, "body": "wow i can&#39;t believe that worked, it compiled now. I feel dumbfounded"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1549627051, "post_id": 54591663, "comment_id": 95979991, "body": "<code>Branch createHtree(w1) createHtree(w2)</code> is the same as <code>Branch createHtree w1 createHtree w2</code> which calls constructor <code>Branch</code> with four arguments (triggering the error). Recall function application in Haskell is <code>(f x)</code> not <code>f(x)</code>."}, {"owner": {"reputation": 111, "user_id": 7036574, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6c64c58d7a2241d71fce37ca79ded53b?s=128&d=identicon&r=PG&f=1", "display_name": "kalle konsida", "link": "https://stackoverflow.com/users/7036574/kalle-konsida"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1549627381, "post_id": 54591663, "comment_id": 95980181, "body": "thank you for clarifying, i was not aware there were an big differences between the two but i&#39;ll make sure to remember it ! @chi"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1549627618, "post_id": 54591663, "comment_id": 95980303, "body": "Indeed, these are quite different. For instance <code>f x y</code> calls function <code>f</code> with arguments <code>x</code> and <code>y</code>. It is equivalent to <code>(f x) y</code>. Instead, <code>f (x y)</code> will call function <code>f</code> with only one argument, the result of calling function <code>x</code> with argument <code>y</code>. So, one should be careful with parentheses."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549634032, "post_id": 54591663, "comment_id": 95983845, "body": "Worth pointing out, too, that <code>createHtree (L _ char)</code> works not because the parentheses are required for a function call, but because <code>L _ char</code> is a pattern match against a single argument, rather than one matching three separate arguments."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1549646339, "post_id": 54591663, "comment_id": 95990861, "body": "Yes, <i>expressions</i> to the right of <code>=</code>, <i>patterns</i> to the left! On the RHS <code>(L w char)</code> constructs <i>a</i> value (from two values), on the LHS it deconstructs such a value."}], "answers": [{"tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": true, "score": 4, "last_activity_date": 1549661974, "last_edit_date": 1549661974, "creation_date": 1549651458, "answer_id": 54598488, "question_id": 54591663, "link": "https://stackoverflow.com/questions/54591663/how-to-traverse-a-tree-structure-and-change-its-data-type/54598488#54598488", "title": "how to traverse a tree structure and change its data type", "body": "<p>You could make this task simpler for yourself by using only a single data type, and parameterizing it by the type of data you wish to store at each node:</p>\n\n<pre><code>data HTree a = Leaf a Char | Branch a (HTree a) (HTree a)\n</code></pre>\n\n<p>Then, your weighted tree is <code>HTree Integer</code>, while your unweighted tree is <code>HTree ()</code>, indicating that you wish to store no extra data in the tree. This way, Haskell can see clearly that your two types are closely related - with the code you posted in the question, they appear to be two totally unrelated types. If you additionally turn on one innocuous language extension, you can use this close relationship to avoid writing the conversion yourself at all!</p>\n\n<pre><code>{-# LANGUAGE DeriveFunctor #-}\n\nimport Data.Functor ((&lt;$))\n\ndata HTree a = Leaf a Char\n             | Branch a (HTree a) (HTree a)\n             deriving Functor\n\nstripLabels :: HTree a -&gt; HTree ()\nstripLabels = (() &lt;$)\n</code></pre>\n\n<p>Observe that now <code>stripLabels</code> is so simple you don't really even need to define it: you could just inline it at use sites.</p>\n"}], "owner": {"reputation": 111, "user_id": 7036574, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6c64c58d7a2241d71fce37ca79ded53b?s=128&d=identicon&r=PG&f=1", "display_name": "kalle konsida", "link": "https://stackoverflow.com/users/7036574/kalle-konsida"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 288, "favorite_count": 0, "accepted_answer_id": 54598488, "answer_count": 1, "score": 0, "last_activity_date": 1549661974, "creation_date": 1549626076, "last_edit_date": 1549626492, "question_id": 54591663, "link": "https://stackoverflow.com/questions/54591663/how-to-traverse-a-tree-structure-and-change-its-data-type", "title": "how to traverse a tree structure and change its data type", "body": "<p>I am attempting to implement huffman coding in haskell and use the following two data structures:</p>\n\n<pre><code>data Htree = Leaf Char | Branch Htree Htree deriving Show\ndata Wtree = L Integer Char | B Integer Wtree Wtree deriving Show\n</code></pre>\n\n<p>where Wtree is created first based on the frequency/weight of each character. \nAfter Wtree is constructed, and we know the structure of the tree, i no longer need the weights of each leaf/branch so i want to convert Wtree into Htree but i have trouble tackling this problem.</p>\n\n<pre><code>createHtree :: Wtree -&gt; Htree\ncreateHtree(L _ char) = Leaf char\ncreateHtree(B _ w1 w2) = Branch createHtree(w1) createHtree(w2)\n</code></pre>\n\n<p>This is a solution i attempted but it won't compile</p>\n\n<p>The expected result is as i mention the conversion from Wtree into Htree which only requires the removal of the Integer part of Wtree.</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1549621815, "post_id": 54589842, "comment_id": 95977124, "body": "That code works if you change the last <code>instance HasFailable SomeOtherOtherRecord Name</code> to <code>instance HasFailable SomeOtherOtherRecord Money</code> and nail down the type of <code>moreMoney</code> (e.g. by doing <code>money + 200 :: Money</code>)."}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1549624803, "post_id": 54589842, "comment_id": 95978867, "body": "<code>SomeRecord</code>, <code>SomeOtherRecord</code> and <code>SomeOtherOtherRecord</code> can all be types I think. I think it is way too difficult what you are doing."}, {"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1549647196, "post_id": 54589842, "comment_id": 95991271, "body": "@melpomene Fixed, thanks."}], "answers": [{"comments": [{"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "edited": false, "score": 0, "creation_date": 1549665932, "post_id": 54599874, "comment_id": 95998828, "body": "Using typeclasses also allows argument constraints in functions. Would something similar be possible here, i.e. have a function that takes anything containing an Either ErrMsg Money?"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "edited": false, "score": 0, "creation_date": 1549679899, "post_id": 54599874, "comment_id": 96001360, "body": "@PetrasPurlys Yes, using the <code>HasType</code> typeclass from <code>Data.Generics.Product.Typed</code>. The <code>typed</code> lens is actually a method of <code>HasType</code>."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 0, "last_activity_date": 1549658412, "creation_date": 1549658412, "answer_id": 54599874, "question_id": 54589842, "link": "https://stackoverflow.com/questions/54589842/getting-haskell-record-fields-based-on-their-type/54599874#54599874", "title": "Getting Haskell record fields based on their type", "body": "<blockquote>\n  <p>a typeclass for accessing specific fields in records based on their\n  type</p>\n</blockquote>\n\n<p>Something like this can be accomplished using <a href=\"https://wiki.haskell.org/Generics\" rel=\"nofollow noreferrer\">generic programming</a>, a technique for inspecting the structure of data types and defining functions that work across diverse data types according to the structure of each.</p>\n\n<p>To use generic programming, one must enable the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html?highlight=derivegeneric#extension-DeriveGeneric\" rel=\"nofollow noreferrer\"><code>DeriveGeneric</code></a> extension and import the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Generics.html\" rel=\"nofollow noreferrer\"><code>GHC.Generics</code></a> module.</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\n\nimport GHC.Generics\n\ntype Money  = Double\ntype Name   = String\ntype ErrMsg = String\n\ndata SomeRecord = SomeRecord (Either ErrMsg Name) (Either ErrMsg Money) deriving (Generic)\n</code></pre>\n\n<p>Writing the generics-based \"typed accessor\" function by ourselves would be complicated. Fortunately, that functionality is already implemented in the <a href=\"http://hackage.haskell.org/package/generic-lens-1.1.0.0/docs/Data-Generics-Product-Typed.html\" rel=\"nofollow noreferrer\"><code>Data.Generics.Product.Typed</code></a> module of the <a href=\"http://hackage.haskell.org/package/generic-lens\" rel=\"nofollow noreferrer\">generic-lens</a> package. That module provides the <a href=\"http://hackage.haskell.org/package/generic-lens-1.1.0.0/docs/Data-Generics-Product-Typed.html#v:typed\" rel=\"nofollow noreferrer\"><code>typed</code></a> lens that lets us target fields in a record by their (unique) type.</p>\n\n<p>(A <em>lens</em> is a value that packs together a getter and a setter for a record field. The <a href=\"http://hackage.haskell.org/package/lens\" rel=\"nofollow noreferrer\">lens</a> package contains the main definitions and functions for working with them, in particular the <a href=\"http://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Combinators.html#v:view\" rel=\"nofollow noreferrer\"><code>view</code></a> function for getting a field's value.)</p>\n\n<pre><code>import Control.Lens (view)\nimport Data.Generics.Product.Typed (typed)\n\nmoreMoney :: Either ErrMsg Money\nmoreMoney = fmap (\\money -&gt; money + 200.0) $ view typed record\n</code></pre>\n\n<p>Here the compiler deduced we wanted the <code>Money</code> field because of the type signature. But we could have also used an explicit <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html?highlight=typeapplications#extension-TypeApplications\" rel=\"nofollow noreferrer\">type application</a>:</p>\n\n<pre><code>{-# LANGUAGE TypeApplications #-}\n\nmoreMoney' = fmap (\\money -&gt; money + 200.0) $ view (typed @(Either _ Money)) record\n</code></pre>\n"}], "owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 0, "accepted_answer_id": 54599874, "answer_count": 1, "score": 0, "last_activity_date": 1549658412, "creation_date": 1549619787, "last_edit_date": 1549647146, "question_id": 54589842, "link": "https://stackoverflow.com/questions/54589842/getting-haskell-record-fields-based-on-their-type", "title": "Getting Haskell record fields based on their type", "body": "<p>I would like to define a typeclass for accessing specific fields in records based on their type. In this toy example, we have a Failable (that's just an Either) that can be present in different records and wrapping different types. I'm interested if it would be possible to define a single function <em>failableFrom</em> and let the compiler select the correct instance based on the context.</p>\n\n<pre><code>type Money  = Double\ntype Name   = String\ntype ErrMsg = String\n\nclass HasFailable a b where\n  failableFrom :: a -&gt; Either ErrMsg b\n\ndata SomeRecord = SomeRecord (Either ErrMsg Name) (Either ErrMsg Money)\n\ninstance HasFailable SomeRecord Name where\n  failableFrom (SomeRecord name _) = name\n\ninstance HasFailable SomeRecord Money where\n  failableFrom (SomeRecord _ money) = money\n\ndata SomeOtherRecord = SomeOtherRecord (Either ErrMsg Name)\n\ninstance HasFailable SomeOtherRecord Name where\n  failableFrom (SomeOtherRecord name) = name\n\ndata SomeOtherOtherRecord = SomeOtherOtherRecord (Either ErrMsg Money)\n\ninstance HasFailable SomeOtherOtherRecord Money where\n  failableFrom (SomeOtherOtherRecord money) = money\n\n\n\n-- some record\nrecord = SomeRecord (Right \"John\") (Right 200.0)\n\n-- let the compiler decide what failableFrom function to use\nmoreMoney = fmap (\\money -&gt; money + 200.0) $ failableFrom record\n</code></pre>\n\n<p>I'm asking this mainly out of curiosity about what's possible in Haskell.</p>\n"}, {"tags": ["haskell", "functional-programming", "sequence"], "comments": [{"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 4, "creation_date": 1549618087, "post_id": 54589006, "comment_id": 95974960, "body": "An input -&gt; output example would help."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549637083, "post_id": 54589006, "comment_id": 95985597, "body": "What do you mean by &quot;highest sequence&quot;? Should <code>takeUntil (&gt; 1000) [1, 10000, 1, 10000]</code> return <code>[1]</code> or <code>[1,10000,1]</code>?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549637365, "post_id": 54589006, "comment_id": 95985785, "body": "The shortest such sequence is trivial to get; the longest such can only be found for a  finite list, as you have to search the entire input to ensure you don&#39;t miss an element."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1549659660, "post_id": 54589006, "comment_id": 95996654, "body": "the name is absolutely no good, doesn&#39;t fit the code <i>at all.</i>"}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1549659474, "post_id": 54589378, "comment_id": 95996575, "body": "your <code>groups</code> calls <code>p</code> twice for some elements. similar situation is with <code>sortBy (comparing f)</code>. it is solved with decorate-sort-undecorate pattern (cf. <code>sortOn</code>), which we can reuse here as decorate-group-undecorate: <code>groups p xs = map (map snd) . groupBy ((==) `on` fst) $ zip (map p xs) xs</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549662608, "post_id": 54589378, "comment_id": 95997783, "body": "Thanks, I&#39;d only class myself as &quot;advanced beginner&quot; at Haskell so I&#39;m happy for any help - although I did say that I had not idea if my version was efficient or not, and was only trying to make it more readable. (I feel your version is less readable than mine, although certainly much more so than the OP. One of my frustrations with Haskell actually is that it seems really hard to reason about performance, and most of the &quot;tricks&quot; which enable good performance seem to be at the expense of readability, which defeats what is imo one of Haskell&#39;s great strengths.)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549663051, "post_id": 54589378, "comment_id": 95997978, "body": "speaking of performance, <code>zip</code> IIRC is a &quot;bad producer&quot; wrt list fusion. <code>groups p = map (map snd) . groupBy ((==) `on` fst) . map (p &amp;&amp;&amp; id)</code> is better (I wanted to avoid the pointfree, using <code>zip</code>, for better readability -- the irony!). re: readability, reading from right to left often helps."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549663444, "post_id": 54589378, "comment_id": 95998090, "body": "btw, my version also doesn&#39;t do the filtering. that was an omission on my part. it should be <code>... = map (map snd) . filter (fst . head) . ...</code>."}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": false, "score": 3, "last_activity_date": 1549618245, "creation_date": 1549618245, "answer_id": 54589378, "question_id": 54589006, "link": "https://stackoverflow.com/questions/54589006/haskell-highest-sequence-in-a-list-that-satisfies-a-predicate/54589378#54589378", "title": "Haskell: Highest sequence in a list that satisfies a predicate", "body": "<p>I think the way you are doing this looks OK, but the <code>groups</code> function is messy - particularly the way you drop exactly 1 from the elements that don't satisfy p at each step, which can result in your result having a lot of superfluous empty lists inside it. (These of course won't affect <code>takeUntil</code> provided at least 1 element of <code>a</code> satisfies <code>p</code>, but they're still there.)</p>\n\n<p>I would rewrite <code>groups</code> as follows, using some useful library functions:</p>\n\n<pre><code>groups p a = filter (p . head) $ groupBy ((==) `on` p) a\n</code></pre>\n\n<p>I don't know if it's more efficient or not, but I certainly find it easier to read. To give some explanation, <code>groupBy</code> (<a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:groupBy\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:groupBy</a>) is from <code>Data.List</code>, and splits a list into a list of sublists according to whether a function of 2 consecutive arguments is true or not. And <code>on</code> (<a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Function.html#v:on\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Function.html#v:on</a>) is a handy little function from <code>Data.Function</code> which feeds the result of another function to the inputs of a binary function. The result is that</p>\n\n<pre><code>groupBy ((==) `on` p) a\n</code></pre>\n\n<p>splits the list up into sections where <code>p</code> is always <code>True</code> or always <code>False</code>. Then we filter that into just the parts that are True.</p>\n"}], "owner": {"reputation": 1, "user_id": 11032637, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c35a700564270fe89e2f8128b073adbb?s=128&d=identicon&r=PG&f=1", "display_name": "RaisedByGods", "link": "https://stackoverflow.com/users/11032637/raisedbygods"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1549618245, "creation_date": 1549616818, "question_id": 54589006, "link": "https://stackoverflow.com/questions/54589006/haskell-highest-sequence-in-a-list-that-satisfies-a-predicate", "title": "Haskell: Highest sequence in a list that satisfies a predicate", "body": "<p>I want a function <code>takeUntill</code> with the signature <code>takeUntill :: (Int -&gt; Bool) -&gt; [Int] -&gt; [Int]</code>.I did came out with the implementation but I'm looking for a cleaner solution to this problem than my existing one if it exists.\nMy current solution is :</p>\n\n<pre><code>takeUntill :: (Int -&gt; Bool) -&gt; [Int] -&gt; [Int]\ntakeUntill p a = snd $ maximum $ [(length x, x) | x &lt;- groups p a]\ngroups :: (Int -&gt; Bool) -&gt; [Int] -&gt; [[Int]]\ngroups _ [] = []\ngroups p a = ((takeWhile p a):(groups p (drop 1 $ dropWhile p a)))\n\n</code></pre>\n"}, {"tags": ["dictionary", "haskell", "data-structures"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 2, "creation_date": 1549605567, "post_id": 54586324, "comment_id": 95970005, "body": "You can see the internals of <code>Map</code> via the <a href=\"http://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Map-Internal.html\" rel=\"nofollow noreferrer\"><code>Data.Map.Internal</code></a> module. The underlying structure is a balanced binary tree, but it balances based on size (as opposed to color). This has the added benefit that querying for size is <code>O(1)</code> for no extra cost."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1549659817, "post_id": 54586324, "comment_id": 95996712, "body": "@Alec surely it could store size while balancing on color."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549726768, "post_id": 54586324, "comment_id": 96010635, "body": "@WillNess Yeah. It&#39;s just nice that the size info can be reused as is. Otherwise you&#39;d need to pack color into your size bits or have an extra field."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1549778129, "post_id": 54586324, "comment_id": 96021260, "body": "@Alec, the color is likely to be implicit in the structure of the tree to type rather than a separate field. This prevents you from having to pay a whole word for color and also means that the runtime will almost always know the color of a node before inspecting the node itself, which likely helps the CPU&#39;s speculative execution. So I think you pretty much <i>need</i> another word to support cached sizes."}], "answers": [{"tags": [], "owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "is_accepted": false, "score": 0, "last_activity_date": 1549609883, "last_edit_date": 1549609883, "creation_date": 1549603501, "answer_id": 54586456, "question_id": 54586324, "link": "https://stackoverflow.com/questions/54586324/internal-representation-of-haskell-data-map/54586456#54586456", "title": "Internal representation of Haskell Data.Map", "body": "<p>According to <a href=\"https://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Map.html\" rel=\"nofollow noreferrer\">the documentation for Haskell's Data.Map</a>:</p>\n\n<blockquote>\n  <p>The implementation of Map is based on size balanced binary trees (or trees of bounded balance)</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "is_accepted": true, "score": 3, "last_activity_date": 1549605916, "creation_date": 1549605916, "answer_id": 54586825, "question_id": 54586324, "link": "https://stackoverflow.com/questions/54586324/internal-representation-of-haskell-data-map/54586825#54586825", "title": "Internal representation of Haskell Data.Map", "body": "<p>Here is a textual dump with <code>showTreeWith</code>:</p>\n\n<pre><code>module Main( main ) where\n\nimport qualified Data.Map as Map\n\nt = Map.fromList([\n    (6,\"six\"),\n    (2,\"two\"),\n    (8,\"eight\"),\n    (3,\"three\"),\n    (5,\"five\")])\n\nmain = do\n    putStrLn $ Map.showTreeWith (\\k x -&gt; show (k,x)) True False t\n    putStrLn $ show $ Map.lookup 3 t\n    putStrLn $ show $ Map.lookup 7 t\n</code></pre>\n\n<p>And here is how it looks:</p>\n\n<pre><code>$ ghc main.hs\n$ ./main\n(6,\"six\")\n+--(3,\"three\")\n|  +--(2,\"two\")\n|  +--(5,\"five\")\n+--(8,\"eight\")\n\nJust \"three\"\nNothing\n</code></pre>\n"}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 54586825, "answer_count": 2, "score": -1, "last_activity_date": 1549609883, "creation_date": 1549602722, "question_id": 54586324, "link": "https://stackoverflow.com/questions/54586324/internal-representation-of-haskell-data-map", "title": "Internal representation of Haskell Data.Map", "body": "<p>How can I view the internal representation of <code>Haskell Data.Map</code>?\nAlso, what kind of data structure is used to implement it?\nIs it essentially a red black tree?\nOr some kind of heap min?\nHere is a simple example that I am interested in dumping to a text file\n(or even better, a <code>Graphviz dot</code> representation).</p>\n\n<pre><code>module Main( main ) where\n\nimport qualified Data.Map as Map\n\nt = Map.fromList([\n    (6,\"six\"),\n    (2,\"two\"),\n    (8,\"eight\"),\n    (3,\"three\"),\n    (5,\"five\")])\n\nmain = do\n    putStrLn $ show $ Map.lookup 3 t\n    putStrLn $ show $ Map.lookup 7 t\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1549595711, "post_id": 54585243, "comment_id": 95967813, "body": "It looks like your type declarations are wrong for <code>personVec</code>, <code>sortedByName</code>, and <code>sortedByAge</code>. Please edit your question to include all the compiler errors."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1549595810, "post_id": 54585243, "comment_id": 95967829, "body": "Are you aware <code>personVec</code> is not a <code>Vector Person</code> but a <code>[Person]</code> (linked list)?"}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1549596558, "post_id": 54585243, "comment_id": 95967945, "body": "@ThomasM.DuBuisson thank you. I have edited it"}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1549670504, "post_id": 54585243, "comment_id": 95999906, "body": "You&#39;re missing parentheses - it should be <code>modify (sortBy (comparing age)) myVec</code>."}], "answers": [{"comments": [{"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1549734068, "post_id": 54601918, "comment_id": 96012548, "body": "Thank you for your answer. It helped a lot and also has shown me how to present my questions better!"}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 3, "last_activity_date": 1549734111, "last_edit_date": 1549734111, "creation_date": 1549671132, "answer_id": 54601918, "question_id": 54585243, "link": "https://stackoverflow.com/questions/54585243/haskell-sort-vector-of-custom-datatypes/54601918#54601918", "title": "Haskell: Sort Vector of custom Datatypes", "body": "<p><strong>Present the problem</strong></p>\n\n<p>Please include an MCVE including imports, pragma, the code, and errors.   Ex:</p>\n\n<pre><code>{-# LANGUAGE OverloadedLists #-}\nimport Data.Vector\nimport Data.Ord\nimport Data.Vector.Algorithms.Intro\n\ndata Person = Person.\n  { name :: String\n  , age  :: Int\n  } deriving (Show, Eq)\n\np1,p2,p3 :: Person\np1 = Person \"Alice\"   30\np2 = Person \"Bob\"     20\np3 = Person \"Charles\" 10\n\npersonVec :: Vector Person\npersonVec = fromList [p2,p1,p3]\n\nsortedByName :: Vector Person -&gt; Vector Person\nsortedByName = modify sortBy (comparing name) personVec\n\nsortedByAge :: Vector Person -&gt; Vector Person\nsortedByAge  = modify sortBy (comparing age) personVec\n</code></pre>\n\n<p>When loaded via <code>ghci-8.4.3 $file</code>, produces errors including this last one of:</p>\n\n<pre><code>so.hs:23:31: error:\n    \u2022 Couldn't match expected type \u2018Vector a1\u2019\n                  with actual type \u2018Person -&gt; Person -&gt; Ordering\u2019\n    \u2022 Probable cause: \u2018comparing\u2019 is applied to too few arguments\n      In the second argument of \u2018modify\u2019, namely \u2018(comparing age)\u2019\n      In the expression: modify sortBy (comparing age) personVec\n      In an equation for \u2018sortedByAge\u2019:\n          sortedByAge = modify sortBy (comparing age) personVec\n   |\n23 | sortedByAge  = modify sortBy (comparing age) personVec\n   |                               ^^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p><strong>Parens For Args</strong></p>\n\n<p>The <code>modify</code> function takes 2 arguments but you are passing three due to lack of parenthesis:</p>\n\n<pre><code>sortedByAge = modify (sortBy (comparing age)) personVec\n</code></pre>\n\n<p><strong>Types: Is this a vector or a function?</strong></p>\n\n<p>Your <code>sortedByAge</code> variable is named to imply it is a vector but the type you provide shows it is a function that computes a vector.  Let's change that type:</p>\n\n<pre><code>sortedByAge :: Vector Person\n</code></pre>\n\n<p>Same goes for <code>sortedByName</code>.</p>\n\n<p><strong>Result</strong></p>\n\n<pre><code>*Main&gt; sortedByName\n[Person {name = \"Alice\", age = 30},Person {name = \"Bob\", age = 20},Person {name = \"Charles\", age = 10}]\n*Main&gt; sortedByAge\n[Person {name = \"Charles\", age = 10},Person {name = \"Bob\", age = 20},Person {name = \"Alice\", age = 30}]\n</code></pre>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 232, "favorite_count": 0, "accepted_answer_id": 54601918, "answer_count": 1, "score": 0, "last_activity_date": 1549734111, "creation_date": 1549592567, "last_edit_date": 1549733523, "question_id": 54585243, "link": "https://stackoverflow.com/questions/54585243/haskell-sort-vector-of-custom-datatypes", "title": "Haskell: Sort Vector of custom Datatypes", "body": "<p>How do I sort a Vector of custom data types using <code>sortBy</code> from <code>Data.Vector.Algorithms</code> ie:</p>\n\n<pre><code>data Person = Person \n  { name :: String\n  , age  :: Int\n  } deriving (Show, Eq)\n\np1,p2,p3 :: Person\np1 = Person \"Alice\"   30\np2 = Person \"Bob\"     20\np3 = Person \"Charles\" 10\n\npersonVec :: Vector Person\npersonVec = fromList [p2,p1,p3]\n</code></pre>\n\n<p>I would like to do something like:</p>\n\n<pre><code>sortedByName :: Vector Person\nsortedByName = modify (sortBy (comparing name)) personVec\n\nsirtedByAage :: Vector Person\nsortedByAge  = modify (sortBy (comparing age)) personVec\n</code></pre>\n\n<p>but don't know what to put as the argument to <code>sortBy</code></p>\n"}, {"tags": ["powershell", "haskell", "command-line-arguments", "haskell-stack"], "comments": [{"owner": {"reputation": 6471, "user_id": 5329137, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/v2ATd.jpg?s=128&g=1", "display_name": "Kory Gill", "link": "https://stackoverflow.com/users/5329137/kory-gill"}, "edited": false, "score": 2, "creation_date": 1549585249, "post_id": 54584295, "comment_id": 95965582, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/1673967/how-to-run-an-exe-file-in-powershell-with-parameters-with-spaces-and-quotes\">How to run an EXE file in PowerShell with parameters with spaces and quotes</a>"}, {"owner": {"reputation": 6471, "user_id": 5329137, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/v2ATd.jpg?s=128&g=1", "display_name": "Kory Gill", "link": "https://stackoverflow.com/users/5329137/kory-gill"}, "edited": false, "score": 0, "creation_date": 1549585299, "post_id": 54584295, "comment_id": 95965596, "body": "pass params in an array."}], "answers": [{"tags": [], "owner": {"reputation": 239138, "user_id": 45375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39f6e2dc52425b1e08027c01bb880be0?s=128&d=identicon&r=PG", "display_name": "mklement0", "link": "https://stackoverflow.com/users/45375/mklement0"}, "is_accepted": true, "score": 3, "last_activity_date": 1549595021, "last_edit_date": 1549595021, "creation_date": 1549594661, "answer_id": 54585452, "question_id": 54584295, "link": "https://stackoverflow.com/questions/54584295/using-stack-from-powershell-how-do-i-pass-test-arguments-that-include-a-space/54585452#54585452", "title": "Using Stack from Powershell, how do I pass test arguments that include a space?", "body": "<p>Unfortunately, <strong>the way PowerShell passes arguments to external programs is broken</strong> and requires you to not just satisfy PowerShell's <em>own</em> syntax requirements with respect to embedded <code>\"</code>, but to <em>additionally</em> escape them for the target executable, typically with <code>\\</code>:</p>\n\n<pre><code> # `\" is needed for PowerShell, \\ is needed for stack\n stack test --fast --ta \"-p \\`\"fail log\\`\"\"\n</code></pre>\n\n<p>Since your outer <code>\"...\"</code> string references no PowerShell variables and contains no subexpressions, i.e., since no string interpolation is required, you can use a <code>'...'</code>, a literal PowerShell string instead, which simplifies matters a bit:</p>\n\n<pre><code> stack test --fast --ta '-p \\\"fail log\\\"'\n</code></pre>\n\n<p>In short: To <strong>pass <code>\"</code> characters <em>embedded in an argument</em> to an <em>external program</em></strong> from PowerShell:</p>\n\n<ul>\n<li>use <code>\\`\"</code> inside <code>\"...\"</code></li>\n<li>use <code>\\\"</code> inside <code>'...'</code></li>\n</ul>\n\n<p>See <a href=\"https://github.com/PowerShell/PowerShell-Docs/issues/2361\" rel=\"nofollow noreferrer\">this GitHub issue</a> for details.</p>\n"}], "owner": {"reputation": 371, "user_id": 5589037, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a8e0afcaf170b7c13a53093cf2f5f84c?s=128&d=identicon&r=PG&f=1", "display_name": "John Walker", "link": "https://stackoverflow.com/users/5589037/john-walker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 1, "accepted_answer_id": 54585452, "answer_count": 1, "score": 2, "last_activity_date": 1549595021, "creation_date": 1549584752, "last_edit_date": 1549586308, "question_id": 54584295, "link": "https://stackoverflow.com/questions/54584295/using-stack-from-powershell-how-do-i-pass-test-arguments-that-include-a-space", "title": "Using Stack from Powershell, how do I pass test arguments that include a space?", "body": "<p>I need to pass the string \"fail log\" as a tasty pattern argument when running tasty tests out of stack. </p>\n\n<p>This is quite straight forward in bash:</p>\n\n<p><code>PS C:\\Pyrethrum&gt; stack test --fast --ta \"-p \\\"fail log\\\"\"</code></p>\n\n<p>But trying to achieve the same using Powershell is driving me nuts:</p>\n\n<hr>\n\n<p><code>PS C:\\Pyrethrum&gt; stack test --fast --ta \"-p \"\"fail\"\" \"</code></p>\n\n<p>works (runs tests) when there is no space</p>\n\n<hr>\n\n<p><code>PS C:\\Pyrethrum&gt; stack test --fast --ta \"-p \"\"fail log\"\" \"</code></p>\n\n<p>Error parsing targets: Directory not found: log</p>\n\n<hr>\n\n<p><code>PS C:\\Pyrethrum&gt; stack test --fast --ta \"-p `\"fail log`\"\"</code></p>\n\n<p>tries install a package called log</p>\n\n<hr>\n\n<p><code>PS C:\\Pyrethrum&gt; stack test --fast --ta \"-p \\\"fail log\\\"\"</code></p>\n\n<p>option --ta: unterminated string: endOfInput</p>\n\n<hr>\n\n<p><code>PS C:\\Pyrethrum&gt; stack test --fast --ta \"-p /fail log/ \"</code></p>\n\n<p>... builds but pattern needs quotes</p>\n\n<p>pyrethrum-0.1.0.0: test (suite: pyrethrum-test, args: -p /fail log/)</p>\n\n<p>option -p: Could not parse pattern</p>\n\n<hr>\n\n<p>What is the correct command line to get this to run in Powershell ?</p>\n"}, {"tags": ["haskell", "haskell-lens"], "answers": [{"tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": true, "score": 1, "last_activity_date": 1549600384, "creation_date": 1549600384, "answer_id": 54586022, "question_id": 54583848, "link": "https://stackoverflow.com/questions/54583848/haskell-mtl-transformers-equivalent-of-lens-zooming-a-state/54586022#54586022", "title": "haskell mtl/transformers equivalent of lens&#39; zooming a state", "body": "<p><code>zoom</code> from <code>lens</code> is convenient because it uses a <code>lens</code> to capture both a getter and setter at the same time. But without a <code>lens</code>, you can explicitly deal with a getter and setter and do the same thing. Adding the imports:</p>\n\n<pre><code>import Control.Monad.Trans.Class\nimport Control.Monad.Trans.State.Strict\n</code></pre>\n\n<p>You can then implement a <code>zoom</code>-like function:</p>\n\n<pre><code>zoomy\n  :: Monad m\n  =&gt; (outer -&gt; inner) -- ^ getter\n  -&gt; (inner -&gt; outer -&gt; outer) -- ^ setter\n  -&gt; StateT inner m a\n  -&gt; StateT outer m a\nzoomy getter setter action = do\n  origOuter &lt;- get\n  (a, newInner) &lt;- lift $ runStateT action (getter origOuter)\n  let newOuter = setter newInner origOuter\n  put newOuter\n  pure a\n</code></pre>\n\n<p>Or, if you want to play directly with the data constructors:</p>\n\n<pre><code>zoomier\n  :: Monad m\n  =&gt; (outer -&gt; inner) -- ^ getter\n  -&gt; (inner -&gt; outer -&gt; outer) -- ^ setter\n  -&gt; StateT inner m a\n  -&gt; StateT outer m a\nzoomier getter setter (StateT action) = StateT $ \\origOuter -&gt; do\n  (a, newInner) &lt;- action (getter origOuter)\n  let newOuter = setter newInner origOuter\n  pure (a, newOuter)\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 2188076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d649d8bb449714ef7a6697c38b36ff3?s=128&d=identicon&r=PG", "display_name": "mikelpr", "link": "https://stackoverflow.com/users/2188076/mikelpr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 1, "accepted_answer_id": 54586022, "answer_count": 1, "score": 2, "last_activity_date": 1549600384, "creation_date": 1549581729, "last_edit_date": 1549593585, "question_id": 54583848, "link": "https://stackoverflow.com/questions/54583848/haskell-mtl-transformers-equivalent-of-lens-zooming-a-state", "title": "haskell mtl/transformers equivalent of lens&#39; zooming a state", "body": "<p>I'm working on a miso-based webapp and I'm trying to wrap the model (state) of a <code>Transition Action InnerModel ()</code> into a <code>Transition Action ModelWrapper ()</code> where</p>\n\n<pre><code>type Miso.Transition action model = StateT model (Writer [Sub action])\n</code></pre>\n\n<p>and <code>data ModelWrapper = ClientModel Clients.Model | ...</code></p>\n\n<p>unfortunately I can't seem to find a way to modify the state's type, or am not sure at all what I have to do.</p>\n\n<p>The <a href=\"https://haddocks.haskell-miso.org/Miso-Types.html#t:Transition\" rel=\"nofollow noreferrer\">documentation</a> shows how to do deal mostly with the lens library. So far I've adapted things like <code>.=</code> into <code>Control.Monad.State.modify</code>, but I can't find an equivalent to <code>zoom</code>, which I need to for running a computation with the unwrapped model as state.</p>\n\n<p>I've tried all of the following with no luck. the closest i got was with execStateT, but I couldn't keep the actions so it was useless.</p>\n\n<p>The code below has my different attempts to tackle it and may provide some context.</p>\n\n<pre><code>updateModel ::\n  Action -&gt; \n  Transition Action ModelWrapper ()\nupdateModel ac = case ac of\n  --ShowSection sect -&gt; modify $ \\mo -&gt; mo{currentSection=sect}\n  --UpdateSubmodel submo -&gt; modify $ \\mo -&gt; mo{sectionModel=submo}\n  UpdateSubmodel submo -&gt; put submo\n  SectionAct sact -&gt; case sact of\n    ActionClients clac -&gt; do\n      gets $ \\(ModelClients mo) -&gt; mo\n      (Clients.updateModel sectionPipeback clac)\n      --return ()\n      --gets (\\(ModelClients mo) -&gt; mo)\n      --modify ModelClients\n      --modify $ \\mo -&gt; ModelClients mo\n      --ModelClients mo &lt;- get\n      --let trans = (Clients.updateModel sectionPipeback clac)\n      --    w = execStateT trans mo\n      --put $ ModelClients mo\n      --let (clmo, acts) = runWriter $ execStateT trans mo\n      --let w = execStateT trans mo\n      --StateT (ModelClients $ execWriter w) w ()\n      --StateT (\\ins -&gt; writer )\n      --execStateT trans mo\n      --execStateT trans mo\n      --let (clmo, acts) = runWriter $ execStateT trans mo\n      --clmo &lt;- lift $ execStateT trans mo\n      --put $ ModelClients clmo\n      --lift $ acts\n      --pure acts\n      --pure $ SeictionAct a\n  NoOp -&gt; return ()\n</code></pre>\n"}, {"tags": ["haskell", "monad-transformers"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1549590164, "post_id": 54583674, "comment_id": 95966726, "body": "I don&#39;t know exactly what your use cases are, but I think it makes more sense to put your business logic in simple pure functions that take the current time as an argument, or in a <code>State</code> monad. The way you have it here seems a little overengineered."}], "answers": [{"comments": [{"owner": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "edited": false, "score": 0, "creation_date": 1549617459, "post_id": 54585590, "comment_id": 95974629, "body": "Thanks for this answer, would you mind adding a code example of what you mean to it? I tried to refactor using a <code>newtype</code> <code>TimeT</code> as you suggested but I still run into the issue where I need to go back to explicit <code>lift</code>ing when mixing DB effects and IO/time effects... There is a good chance I haven&#39;t implemented it in the way you were trying to convey"}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "reply_to_user": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "edited": false, "score": 0, "creation_date": 1549657016, "post_id": 54585590, "comment_id": 95995554, "body": "I&#39;ll add code when I have a bit more time.  Briefly: <code>markArticleRead</code> doesn&#39;t use the transformer at all.  If you are following the suggestion in my third paragraph you will also want the instance in the first paragraph."}], "tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 2, "last_activity_date": 1549596026, "creation_date": 1549596026, "answer_id": 54585590, "question_id": 54583674, "link": "https://stackoverflow.com/questions/54583674/implicit-lifting-when-combining-mixing-mtl-style-typeclass-constraints/54585590#54585590", "title": "Implicit lifting when combining / mixing mtl-style typeclass constraints", "body": "<p>For mtl-style effects, it's usual to define lifting instances for the common monad transformers.  Such as <code>TimeMonad m =&gt; TimeMonad (ReaderT r m)</code>.  That lets you leave out the <code>lift</code> in <code>markArticleRead</code>.</p>\n\n<p>Another option is to skip the monad transformer <code>TimeEff</code>.  It doesn't carry any additional information, and you don't mention needing to prevent time functions from being called in other <code>MonadIO</code> types.  If you write the instance <code>MonadIO m =&gt; TimeMonad m</code>, then <code>markArticleRead</code> doesn't need the <code>TimeMonad</code> constraint or <code>lift</code>.  This instance overlaps the one in the first paragraph; pick one.</p>\n\n<p>If you do want a monad transformer, you might prefer to merge your <code>TimePure</code> and <code>TimeEff</code>.  <code>newtype TimeT m a = TimeT (ReaderT UTCTime m a)</code> would allow you to inject a chosen <code>UTCTime</code> into effect stacks that do not include <code>IO</code> (or the constraints of which do not ensure IO).  Then you can define <code>TimePure</code> in terms of <code>TimeT</code>, as <code>transformers</code> defines <code>Reader</code> and the rest.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1596246790, "post_id": 63199898, "comment_id": 111759484, "body": "I suspect there is at least one law, which relies on an <code>Applicative</code> constraint: <code>liftA2 (&lt;=) getCurrentTime (m *&gt; getCurrentTime) = liftA2 (\\_ _ -&gt; True) getCurrentTime (m *&gt; getCurrentTime)</code>. I suspect you&#39;d also want to say that <code>getCurrentTime</code> doesn&#39;t change the world: something like <code>() &lt;$ getCurrentTime = pure ()</code>."}], "tags": [], "owner": {"reputation": 28145, "user_id": 501187, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/2bf8dee0b3c004589b62a9b0db09b04a?s=128&d=identicon&r=PG", "display_name": "Fresheyeball", "link": "https://stackoverflow.com/users/501187/fresheyeball"}, "is_accepted": true, "score": 1, "last_activity_date": 1596234747, "creation_date": 1596234747, "answer_id": 63199898, "question_id": 54583674, "link": "https://stackoverflow.com/questions/54583674/implicit-lifting-when-combining-mixing-mtl-style-typeclass-constraints/63199898#63199898", "title": "Implicit lifting when combining / mixing mtl-style typeclass constraints", "body": "<p>Your problem is <code>TimeEff</code>, its just not needed. The interface separation is type classes, not concrete Monads. <code>TimePure</code> is good because you need some Monad to provide facilities for testing, but since any old <code>MonadIO</code> can do the trick for the IO case, you just don't need to specific a concrete Monad for that.</p>\n<p><code>TimeEff</code> as you have it adds only one thing to your program, and it's the need to use <code>lift</code> to convert a <code>TimeEff m</code> to <code>m</code>. And since this works forall <code>MonadIO</code> we can use <code>UndecidableInstances</code> to permit unification without even adding <code>TimeMonad</code> to the effectful case. (I know <code>UndecidableInstances</code> sounds bad, but it's not)</p>\n<h2><a href=\"https://repl.it/join/plrfncsm-isaacshapira\" rel=\"nofollow noreferrer\">Running example</a></h2>\n<pre><code>instance (Monad m, MonadIO m) =&gt; TimeMonad m where\n  getCurrentTime = liftIO T.getCurrentTime\n\nmarkArticleRead :: MonadIO m =&gt; Key Article -&gt; SqlPersistT m ()\nmarkArticleRead articleKey =\n  updateLastModified articleKey =&lt;&lt; getCurrentTime\n</code></pre>\n<hr />\n<p>Some other notes.</p>\n<pre class=\"lang-hs prettyprint-override\"><code>class (Functor m, Applicative m, Monad m) =&gt; TimeMonad m where\n</code></pre>\n<p>can be</p>\n<pre class=\"lang-hs prettyprint-override\"><code>class Monad m =&gt; TimeMonad m where\n</code></pre>\n<p>since <code>Monad</code> already has <code>Applicative</code> and <code>Functor</code> as superclasses. So those come along for free. Now as a matter of personal taste, I would even leave out <code>Monad</code></p>\n<pre class=\"lang-hs prettyprint-override\"><code>class GetsTime m where\n  getCurrentTime :: m UTCTime\n</code></pre>\n<p>This kind of decoupling is nice, both because it makes your code more general, but also because it removes any relationship to algebras. The class here really has no laws, and is just not algebraic, so it's nice to leave those relationships open imho. This would mean you need to add annotations in some places, but I feel it's a good thing to document the algebraic constraint and effectful constrain separately.</p>\n<pre class=\"lang-hs prettyprint-override\"><code>getCurrentDay :: (Functor m, TimeMonad m) =&gt; m Day\ngetCurrentDay = T.utctDay &lt;$&gt; getCurrentTime\n</code></pre>\n"}], "owner": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 63199898, "answer_count": 2, "score": 1, "last_activity_date": 1596234747, "creation_date": 1549580572, "last_edit_date": 1549650391, "question_id": 54583674, "link": "https://stackoverflow.com/questions/54583674/implicit-lifting-when-combining-mixing-mtl-style-typeclass-constraints", "title": "Implicit lifting when combining / mixing mtl-style typeclass constraints", "body": "<p>I'm currently refactoring some Haskell code that I have that interacts with <code>Data.Time</code>. Ultimately I have a bunch of functions that interact with time:</p>\n\n<pre><code>getCurrentTime :: IO UTCTime\ngetCurrentTime = T.getCurrentTime\n\ngetCurrentDay :: IO Day\ngetCurrentDay = T.utctDay &lt;$&gt; getCurrentTime\n\ndaysUntil :: Day -&gt; IO Integer\ndaysUntil day = T.diffDays day &lt;$&gt; getCurrentDay\n</code></pre>\n\n<p>etc etc and so on, ultimately these are just my own helper functions that are all based around <code>T.getCurrentTime</code> from <code>Data.Time</code>. Which is the 'effect' of all of these functions.</p>\n\n<p>The first refactor I did to this code was to simply change them to use <code>MonadIO</code> to allow them to be used in the various transformer stacks compatible with this typeclass:</p>\n\n<pre><code>getCurrentTime :: MonadIO m =&gt; m UTCTime\ngetCurrentTime = liftIO T.getCurrentTime\n\ngetCurrentDay :: MonadIO m =&gt; m Day\ngetCurrentDay = T.utctDay &lt;$&gt; getCurrentTime\n\ndaysUntil :: MonadIO m =&gt; Day -&gt; m Integer\ndaysUntil day = T.diffDays day &lt;$&gt; getCurrentDay\n</code></pre>\n\n<p>This is straightforward enough as I just need to lift <code>T.getCurrentTime</code> and the rest of the implementations just follow suit.</p>\n\n<p>Recently though I have been reading about stubbing and faking effects in Haskell, and would like to be able to run these functions with a fake <code>UTCTime</code> result for <code>getCurrentTime</code>.</p>\n\n<p>Going off some of the things I have read online, and looking at how Pandoc implements separating out pure and effectful operations, I've come up with this:</p>\n\n<pre><code>newtype TimePure a = TimePure\n  { unTimePure :: Reader UTCTime a\n  } deriving (Functor, Applicative, Monad, MonadReader UTCTime)\n\nnewtype TimeEff m a = TimeEff\n  { unTimeIO :: m a\n  } deriving (Functor, Applicative, Monad, MonadIO)\n\nclass (Functor m, Applicative m, Monad m) =&gt; TimeMonad m where\n  getCurrentTime :: m UTCTime\n\ninstance TimeMonad TimePure where\n  getCurrentTime = ask\n\ninstance MonadIO m =&gt; TimeMonad (TimeEff m) where\n  getCurrentTime = liftIO T.getCurrentTime\n\ngetCurrentDay :: TimeMonad m =&gt; m Day\ngetCurrentDay = T.utctDay &lt;$&gt; getCurrentTime\n\ndaysUntil :: TimeMonad m =&gt; Day -&gt; m Integer\ndaysUntil day = T.diffDays day &lt;$&gt; getCurrentDay\n</code></pre>\n\n<p>Again, other than the additional definitions at the top, I haven't had to change much - my original functions just need to change to use <code>TimeMonad m</code> rather than <code>MonadIO m</code>.</p>\n\n<p>This is ideal, and I am able to run my time functions in a pure context now.</p>\n\n<p>However now when I come to some real world code, given an example function like this that interacts with the DB:</p>\n\n<pre><code>markArticleRead :: MonadIO m =&gt; Key Article -&gt; SqlPersistT m ()\nmarkArticleRead articleKey =\n  updateLastModified articleKey =&lt;&lt; getCurrentTime\n</code></pre>\n\n<p>I have to adjust my function like so:</p>\n\n<pre><code>markArticleRead :: (MonadIO m, TimeMonad m) =&gt; Key Article -&gt; SqlPersistT m ()\nmarkArticleRead articleKey =\n  updateLastModified articleKey =&lt;&lt; lift getCurrentTime\n</code></pre>\n\n<p>Obviously I have to do this as <code>getCurrentTime</code> does not need <code>MonadIO</code> to run. The issue I have is with the re-introduction of lift, this is needed because there is two 'layers' of the transformer stack, rather than one (I think thats an appropriate explaination?).</p>\n\n<p>One of the nice things about the introduction of <code>MonadIO</code> was it removed the need for having to lift things everywhere, and it made functions like this, which a lot of the time contain business logic etc, a lot less noisy. Is there a way for me to re-gain this benefit, where I can get mtl style implicit lifting, or is it impossible now due to the types I have introduced?</p>\n"}, {"tags": ["haskell", "math"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549574865, "post_id": 54582493, "comment_id": 95962084, "body": "I&#39;m hesitant to post this as an answer, because I&#39;m not certain - but I think it&#39;s to do with overflow. <code>maxBound :: Int</code> is <code>9223372036854775807</code>, which is 1 less than what you would think of as the absolute value of the minBound. So the absolute value you&#39;re after overflows, and presumably therefore wraps around to the minBound. I think. (Someone please correct me if I&#39;m wrong, or expand on this if I&#39;m right.)"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1549574933, "post_id": 54582493, "comment_id": 95962115, "body": "I think you&#39;re right (I just posted that as an answer at about the same moment). But I don&#39;t think the Haskell standard guarantees that behavior in any case, so you probably can&#39;t rely on the value being wrapped around to <code>minBound</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1549576284, "post_id": 54582493, "comment_id": 95962691, "body": "In 2-complement notation, there are <i>two</i> solutions of the equation <code>x = -x</code>. One is zero (obviously), the other one is <code>minBound</code>. <code>abs minBound</code> likely tests if its argument is negative (and it is), and then returns <code>- minBound</code>, which is <code>minBound</code>. This is probably not a guaranteed behavior, but it should be expected on 2-complement systems."}, {"owner": {"reputation": 249, "user_id": 4376453, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh4.googleusercontent.com/-LvhFFca8O_8/AAAAAAAAAAI/AAAAAAAAAFo/11B5JshO4o4/photo.jpg?sz=128", "display_name": "Eliza Brandt", "link": "https://stackoverflow.com/users/4376453/eliza-brandt"}, "edited": false, "score": 0, "creation_date": 1549576690, "post_id": 54582493, "comment_id": 95962857, "body": "Ah, ok. While I checked this by doing <code>abs (-9223372036854775808)</code> and got what I expected (9223372036854775808), I did so in GHCi, and so I assume that the type defaulting there is for Integer, not Int?"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 2, "creation_date": 1549577612, "post_id": 54582493, "comment_id": 95963222, "body": "^ yes, due to (extended) defaulting rules"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 3, "creation_date": 1549577925, "post_id": 54582493, "comment_id": 95963345, "body": "Incidentally the behavior you notice is behind a bug that is almost everywhere in number parsing (at least I literally fixed it in three different places in the span of a week in my own and others code, during one project), in which you do: <code>if the first character is &quot;-&quot; negate the parse of what follows</code>."}], "answers": [{"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 5, "last_activity_date": 1549574898, "creation_date": 1549574898, "answer_id": 54582578, "question_id": 54582493, "link": "https://stackoverflow.com/questions/54582493/abs-and-minbound/54582578#54582578", "title": "Abs and minBound", "body": "<pre><code>Prelude&gt; minBound :: Int\n-9223372036854775808\nPrelude&gt; maxBound :: Int\n9223372036854775807\n</code></pre>\n\n<p>Note that the number <code>9223372036854775808</code> is not representable as an integer. This is a consequence of the <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" rel=\"noreferrer\">two's complement</a> representation likely being used in the background here. The absolute value of <code>minBound</code> cannot be represented as a member of the type <code>Int</code>, so you end up getting an overflowing value.</p>\n"}], "owner": {"reputation": 249, "user_id": 4376453, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh4.googleusercontent.com/-LvhFFca8O_8/AAAAAAAAAAI/AAAAAAAAAFo/11B5JshO4o4/photo.jpg?sz=128", "display_name": "Eliza Brandt", "link": "https://stackoverflow.com/users/4376453/eliza-brandt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 1, "accepted_answer_id": 54582578, "answer_count": 1, "score": 3, "last_activity_date": 1549574898, "creation_date": 1549574513, "question_id": 54582493, "link": "https://stackoverflow.com/questions/54582493/abs-and-minbound", "title": "Abs and minBound", "body": "<p>When playing around with minBound for various instances, I tried </p>\n\n<pre><code>&gt; minBound :: Int\n=&gt; -9223372036854775808\n</code></pre>\n\n<p>which seems reasonable. </p>\n\n<p>However, </p>\n\n<pre><code>&gt; abs minBound :: Int \n=&gt; -9223372036854775808\n</code></pre>\n\n<p>How is this possible? Shouldn't <code>abs x &gt;= 0</code>, assuming <code>x :: Int</code>? </p>\n\n<p>Is there some sort of understanding of semantics I am missing here? </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1549569546, "post_id": 54581220, "comment_id": 95959685, "body": "There is no way a function can be evaluated in a way it is not written. Your function is basically &quot;terminate if terminates for this, or terminates for that&quot;, which is a <i>halting problem</i>. It is undecidable. I don&#39;t see how you will solve it with BFS without changing the conditions."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 1, "creation_date": 1549570469, "post_id": 54581220, "comment_id": 95960089, "body": "@EugeneSh. that&#39;s not related to the halting problem. This function would evaluate to true if Haskell always reduced outermost redexes first, instead of leftmost-innermost."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1549570637, "post_id": 54581220, "comment_id": 95960169, "body": "Would it? Maybe. For this specific input. Will it for any input? This is what the halting problem is about."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 1, "creation_date": 1549571242, "post_id": 54581220, "comment_id": 95960437, "body": "I&#39;m not asking that though, I&#39;m merely asking if there is any way to evaluate a Haskell function breadth first (be it through a compiler flag, or an user-friendly DSL). Point is that specifying a recursive function is easier than manually setting up a BFS, so a library or feature for that would be handy."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549571570, "post_id": 54581220, "comment_id": 95960591, "body": "@EugeneSh.- the halting problem in general is of course undecidable, but which inputs this algorithm terminates on is eminently decidable. You can stop the recursion as soon as both of the branches get bigger than <code>n</code> [And you could easily use this fact to write a version of this function that will always terminate - although it wouldn&#39;t be a &quot;breadth first search&quot;.]"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1549571638, "post_id": 54581220, "comment_id": 95960618, "body": "What you&#39;re talking about is not &quot;breadth first&quot;. There is no meaning in saying that Haskell should evaluate operator <code>||</code> before any of its arguments, nor that it should evaluate both arguments &quot;simultaneously&quot; rather than left to right. What you&#39;re really sort of implying here is that it would be nice, for this specific program, if the execution proceeded right-to-left rather than left-to-right. Sure, it could have been the case, but then it would just be equally inconvenient for you if you happened to swap the arguments of <code>||</code>."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549571700, "post_id": 54581220, "comment_id": 95960643, "body": "@RobinZigmond That would be the change of the algorithm. Moreover, this specific instance of a problem is decidable analytically, but a similar problem can be easily presented based on say.. Collatz conjecture - and then it is not solvable analytically too."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1549571727, "post_id": 54581220, "comment_id": 95960655, "body": "Anyway, it&#39;s about the order of evaluation of the <code>||</code> operator and only. Unrelated to BFS or DFS."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1549571902, "post_id": 54581220, "comment_id": 95960738, "body": "No, it&#39;s not about the order of evaluation, as I understand it. If you&#39;re testing <code>A || B</code>, and <code>A</code> gives rise to <code>C || D</code> and <code>B</code> to <code>E || F</code>, Haskell will execute the above code by going &quot;depth-first&quot; through <code>A</code>, <code>C</code> and whatever comes next - if this branch doesn&#39;t terminate, it will never get as far as evaluating <code>B</code>. Whereas the OP, quite reasonably, is asking whether it&#39;s possible to write the code so that <code>A</code> and <code>B</code> are BOTH tested (order is irrelevant), then <code>C</code>, <code>D</code>, <code>E</code>, <code>F</code>, and so on."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549571959, "post_id": 54581220, "comment_id": 95960769, "body": "@RobinZigmond No, the OP is asking if there is a way to make the <i>given</i> code execute differently."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549572130, "post_id": 54581220, "comment_id": 95960844, "body": "Well that&#39;s how I understood it, but let&#39;s wait for the OP to clarify. The question I thought he was asking is quite interesting, anyway :) (And I don&#39;t know how to solve it, although as I said it&#39;s easy enough to rewrite this function so it always terminates, but that wouldn&#39;t work for more subtle cases where &quot;breadth-first&quot; might be helpful.)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549572234, "post_id": 54581220, "comment_id": 95960896, "body": "btw thenjecture is quite different as far as I can see, because there is just one chain of computation. Of course it&#39;s unknown if it terminates (at 1) for every starting value. But there is no question of what &quot;evaluation strategy&quot; one can follow, because all you can do, given a value, is compute the next one in the chain. [Of course there may be some clever mathematics allowing one to collapse several steps into one, but still, it&#39;s a one-way process, very different from the question here.]"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 1, "creation_date": 1549572255, "post_id": 54581220, "comment_id": 95960907, "body": "It is not about order of evaluation of <code>||</code> in special, it is absolutely about reducing recursive functions breadth-first (outermost redexes first) or depth-first (innermost redexes first). Notice that, if you have an expression that produces an infinite tree of <code>||</code>s (like this one), and if <code>true</code> shows up anywhere in that tree, then if Haskell evaluated redexes outermost first, such expression would always evaluate to <code>true</code>."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 1, "creation_date": 1549572499, "post_id": 54581220, "comment_id": 95961004, "body": "Changing the evaluation order of <code>||</code> wouldn&#39;t help in this case. The only difference is that Haskell would be stuck on the rightmost branches of the tree (rather than on the leftmost). The only way for this expression to evaluate to true is, as I said, by evaluating redexes in order of depth, i.e., never beta-reducing an expression if there is another redex at higher height."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549572654, "post_id": 54581220, "comment_id": 95961080, "body": "Ah, @RobinZigmond explained precisely the point with a few examples above."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549572781, "post_id": 54581220, "comment_id": 95961133, "body": "Just realised my latest comment (4 up from this one) got mangled for some reason, in a way that makes it incomprehensible - the start should be &quot;btw the Collatz conjecture is quite different...&quot;"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 2, "creation_date": 1549573076, "post_id": 54581220, "comment_id": 95961265, "body": "This has nothing to do with the Collatz conjecture too, because I&#39;m not asking for a solution of a problem (i.e., &quot;does this program halt&quot;), I&#39;m merely asking if it is possible to change the evaluation order of Haskell (actually I&#39;m asking if there is an existing DSL I can use, since GHC probably can&#39;t do that). It has nothing to do with answering the halting problem because changing Haskell&#39;s evaluation order in the way I proposed obviously doesn&#39;t guarantee all functions will magically halt, although this one in special (and similars) would."}], "answers": [{"comments": [{"owner": {"reputation": 730, "user_id": 10262180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NUdBH.jpg?s=128&g=1", "display_name": "Bob Zimmermann", "link": "https://stackoverflow.com/users/10262180/bob-zimmermann"}, "edited": false, "score": 1, "creation_date": 1549577066, "post_id": 54582854, "comment_id": 95963014, "body": "I think you could add a guard <code>| y &gt; n = False</code> so that it will terminate."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 730, "user_id": 10262180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NUdBH.jpg?s=128&g=1", "display_name": "Bob Zimmermann", "link": "https://stackoverflow.com/users/10262180/bob-zimmermann"}, "edited": false, "score": 1, "creation_date": 1549577192, "post_id": 54582854, "comment_id": 95963061, "body": "Probably, but I&#39;m trying to keep this as general as possible so that it&#39;s more apparent how to apply it to other functions."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1549577432, "last_edit_date": 1549577432, "creation_date": 1549576146, "answer_id": 54582854, "question_id": 54581220, "link": "https://stackoverflow.com/questions/54581220/is-there-any-straightforward-way-to-evaluate-a-recursive-function-breadth-first/54582854#54582854", "title": "Is there any straightforward way to evaluate a recursive function breadth-first?", "body": "<p>I have no idea how (or if it's even possible) to generalize this, but you can simulate BFS by explicitly maintaining a queue of arguments to check. </p>\n\n<pre><code>import Data.Sequence\n\nfoo :: Int -&gt; Int -&gt; Bool\nfoo n x = let foo' :: Seq Int -&gt; Bool\n              foo' Empty = False\n              foo' (x' :&lt;| xs')\n                 | n' == x' = True\n                 | otherwise = foo' (xs' &gt;&lt; fromList [2 * x', 2*x'+1])\n          in foo' (singleton x)\n</code></pre>\n\n<p>Instead of recursing immediately, the argument(s) to the recursive calls are simply appended to the end of the queue. The helper checks each argument in first-come, first-served order. Since <code>n</code> never changes, I simply closed the helper over it. More generally, you could store tuples of arguments in the queue.</p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; Bool\nfoo n x = let foo' :: Seq (Int, Int) -&gt; Bool\n              foo' Empty = False\n              foo' ((n', x') :&lt;| rest) \n                | n' == x' = True\n                | otherwise = foo' (rest &gt;&lt; fromList [(n',(2*x')),(n',(2*x'+1)))\n          in foo' (singleton (n, x))\n</code></pre>\n\n<p>Note that in this case, the queue will never be emptied, because (since the original function wasn't guaranteed to terminate) you are effectively searching an infinite tree. If the original recursion was guarded, then new argument(s) would only conditionally be added to the queue, allowing for the possibility that it would eventually be emptied.</p>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549584500, "post_id": 54584068, "comment_id": 95965381, "body": "I was going to propose tweaking the function to return the list of all tested <code>n</code>s, interleave the streams (with Omega or by hand -- I guess that&#39;s what your <code>transpose</code> is doing), then just take the first True in the merged stream of results. Or instead of Bools, make the stream of <code>[x | n==x]</code>s, <code>concat</code> it and <code>take 1</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549584657, "post_id": 54584068, "comment_id": 95965424, "body": "@WillNess Nice thought! <a href=\"http://hackage.haskell.org/package/universe-base-1.0.2.1/docs/Data-Universe-Helpers.html#v:-43--43--43-\" rel=\"nofollow noreferrer\"><code>(+++)</code></a> can help."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549590597, "post_id": 54584068, "comment_id": 95966816, "body": "thanks for the link. ah, it&#39;s your package, and it&#39;s got nice stuff in it! ... btw <a href=\"http://hackage.haskell.org/package/universe-base-1.0.2.1/docs/Data-Universe-Helpers.html#v:diagonal\" rel=\"nofollow noreferrer\"><code>diagonal</code></a> is not really &quot;unfair&quot;, it is much much fairer than <code>concat</code> !! :) so call it &quot;slightly less fair&quot;, maybe? (tangentially, I wrote some very similar stuff to that, for <a href=\"https://cs.stackexchange.com/a/97610/2909\">one chance answer</a> of mine on CS.SE, where I did call the diagonal equivalent &quot;fair&quot; ... well, it&#39;s terminating!)"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1549583436, "last_edit_date": 1549583436, "creation_date": 1549583103, "answer_id": 54584068, "question_id": 54581220, "link": "https://stackoverflow.com/questions/54581220/is-there-any-straightforward-way-to-evaluate-a-recursive-function-breadth-first/54584068#54584068", "title": "Is there any straightforward way to evaluate a recursive function breadth-first?", "body": "<p>Sure, you can directly produce the \"levels\" of the BFS. Merge the levels of parallel recursive calls. So:</p>\n\n<pre><code>import Data.List\n\nfoo :: Int -&gt; Int -&gt; [[Bool]]\nfoo n x = id\n    . ([x == n] :)\n    . map concat\n    . transpose\n    . map (foo n)\n    $ [2*x, 2*x+1]\n</code></pre>\n\n<p>The outer list represents search depth -- depth 0 is in the 0th element, depth 1 in the 1th element, and so on -- while the inner lists contain the results of the function call on the arguments we explored at that level.</p>\n\n<p>Summarizing into a single <code>Bool</code> just involves traversing both lists.</p>\n\n<pre><code>&gt; any or (foo 10 1)\nTrue\n&gt; any or (foo 1 10)\n-- this might take a while\n</code></pre>\n\n<p>As a deforestation optimization, you could instead return just the <code>or</code> of each depth, thus:</p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; [Bool]\nfoo n x = (x == n) : zipWith (||) (foo n (2*x)) (foo n (2*x+1))\n</code></pre>\n\n<p>There is left only the list of depths; the inner lists from before are pre-collapsed. Still works okay:</p>\n\n<pre><code>&gt; or (foo 10 1)\nTrue\n&gt; or (foo 1 10)\n-- uh oh...\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1549658212, "post_id": 54584215, "comment_id": 95996035, "body": "Unamb is a lovely concept but it does tend to leave zombies around and otherwise be kind of performance-unstable.  I have been pondering about how to make it more predictable."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 5, "last_activity_date": 1549584151, "creation_date": 1549584151, "answer_id": 54584215, "question_id": 54581220, "link": "https://stackoverflow.com/questions/54581220/is-there-any-straightforward-way-to-evaluate-a-recursive-function-breadth-first/54584215#54584215", "title": "Is there any straightforward way to evaluate a recursive function breadth-first?", "body": "<p>You can make the original code work with minimal tweaks using the <a href=\"http://hackage.haskell.org/package/unamb-0.2.7/docs/Data-Unamb.html\" rel=\"noreferrer\">unamb</a> package. The key observation is that the \"platonic\" <code>(||)</code> is symmetric in that it can short-circuit in either direction; and unamb gives you a way to realize that.</p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; Bool\nfoo n x | x == n    = True\nfoo n x | otherwise = foo n (x * 2) `por` foo n (x * 2 + 1)\n</code></pre>\n\n<p>Works, but leaves a zombie behind running at 100% CPU:</p>\n\n<pre><code>&gt; foo 10 1\nTrue\n</code></pre>\n\n<p>That's probably a bug, though I don't feel super into chasing it down just now...</p>\n\n<p>P.S. I'd probably prefer this spelling of <code>foo</code> if you decide to use unamb, just because it's syntactically more compact than using guards:</p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; Bool\nfoo n x = x == n || por (foo n (2*x)) (foo n (2*x+1))\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 2, "last_activity_date": 1549647039, "last_edit_date": 1549647039, "creation_date": 1549586824, "answer_id": 54584570, "question_id": 54581220, "link": "https://stackoverflow.com/questions/54581220/is-there-any-straightforward-way-to-evaluate-a-recursive-function-breadth-first/54584570#54584570", "title": "Is there any straightforward way to evaluate a recursive function breadth-first?", "body": "<p>Going</p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; Bool\nfoo n x | x == n    = True\nfoo n x | otherwise = foo n (x * 2) || foo n (x * 2 + 1)\n</code></pre>\n\n<p>going..</p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; Bool\nfoo n x =  x == n  || foo n (x * 2) || foo n (x * 2 + 1)\n</code></pre>\n\n<p>going...</p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; [Bool]\nfoo n x = [x == n] ++ foo n (x * 2) ++ foo n (x * 2 + 1)\n</code></pre>\n\n<p><em>going....</em></p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; [Bool]\nfoo n x = [x == n] ++ concat [foo n (x * 2) , foo n (x * 2 + 1)]\n</code></pre>\n\n<p><strong><em>Gone</strong>!</em></p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; [Bool]\nfoo n x = [x == n] ++ concat (transpose [foo n (x * 2) , foo n (x * 2 + 1)])\n</code></pre>\n\n<p><code>takeWhile not $ foo 10 0</code> happily terminates after 20 steps. Easy to augment as needed.</p>\n\n<p><code>transpose</code> here emulates the diagonalization from the Omega package, achieving the interleaving of the two sub-streams of results.</p>\n\n<p>If closer syntactic similarity is sought, define</p>\n\n<pre><code>xs ||/ ys = concat (transpose [xs, ys])\n\nfoo n x = [n==x] ||/ foo n (2*x) ||/ foo n (2*x+1)\n</code></pre>\n\n<p><code>takeWhile not $ foo 10 0</code> stops after 25 steps.</p>\n\n<p>This approach follows the principle of <em>explication</em>. Just as the implicit state changes of imperative programming are made explicit in functional programming, so can the steps of evaluation be explicated in a list, turning a fold into a scan (or unfold) so to speak.</p>\n\n<hr>\n\n<p>NB: <code>(||/)</code> is the same as <a href=\"http://hackage.haskell.org/package/universe-base-1.0.2.1/docs/Data-Universe-Helpers.html#v:-43--43--43-\" rel=\"nofollow noreferrer\"><code>(+++)</code></a> from Daniel Wagner's package <a href=\"http://hackage.haskell.org/package/universe-base-1.0.2.1\" rel=\"nofollow noreferrer\">universe-base</a>, which has various enumeration tools. The utility of diagonalization can be seen e.g. in <a href=\"https://cs.stackexchange.com/a/97610/2909\">this answer</a> of mine on CS.SE.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 1, "accepted_answer_id": 54584215, "answer_count": 4, "score": 4, "last_activity_date": 1549647039, "creation_date": 1549569031, "question_id": 54581220, "link": "https://stackoverflow.com/questions/54581220/is-there-any-straightforward-way-to-evaluate-a-recursive-function-breadth-first", "title": "Is there any straightforward way to evaluate a recursive function breadth-first?", "body": "<p>Mind the following program:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foo :: Int -&gt; Int -&gt; Bool\nfoo n x | x == n    = True\nfoo n x | otherwise = foo n (x * 2) || foo n (x * 2 + 1)\n\nmain :: IO ()\nmain = print (foo 10 0)\n</code></pre>\n\n<p>It implements a function <code>foo</code> that calls itself recursively in two branches, increasing the second argument as it recurses down the tree. It \"should\" return <code>True</code> if its second argument ever becomes equal to the first, which is the case, because <code>((0 * 2 + 1) * 2 + 1) * 2 == 10</code>. But that doesn't happen, because Haskell gets stuck trying to evaluate the left branch depth-first. </p>\n\n<p>Usually, this would be solved by implementing a BFS, but doing that is awkward in Haskell. I wonder if there is any automated, or at least less-obtrusive way to evaluate a recursive function breadth-first?</p>\n"}, {"tags": ["haskell", "dhall"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1549563699, "post_id": 54579764, "comment_id": 95956953, "body": "An IP address type for Dhall is <a href=\"https://github.com/dhall-lang/dhall-lang/issues/217\" rel=\"nofollow noreferrer\">being considered</a>, though this obviously doesn&#39;t help you now."}], "answers": [{"comments": [{"owner": {"reputation": 1210, "user_id": 437583, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/227b1832ae8d065bfdce3b5c92d0792b?s=128&d=identicon&r=PG", "display_name": "Linus Arver", "link": "https://stackoverflow.com/users/437583/linus-arver"}, "edited": false, "score": 0, "creation_date": 1557249350, "post_id": 54642516, "comment_id": 98698635, "body": "I get an orphan instance warning for <code>instance (Interpret a,Interpret b,Interpret c,Interpret d) =&gt; Interpret (a,b,c,d)</code> --- how would you avoid that?"}, {"owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "reply_to_user": {"reputation": 1210, "user_id": 437583, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/227b1832ae8d065bfdce3b5c92d0792b?s=128&d=identicon&r=PG", "display_name": "Linus Arver", "link": "https://stackoverflow.com/users/437583/linus-arver"}, "edited": false, "score": 0, "creation_date": 1557285190, "post_id": 54642516, "comment_id": 98708991, "body": "@LinusArver: You can add <code>{-# OPTIONS_GHC -fno-warn-orphans #-}</code> to the top of the module"}, {"owner": {"reputation": 1210, "user_id": 437583, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/227b1832ae8d065bfdce3b5c92d0792b?s=128&d=identicon&r=PG", "display_name": "Linus Arver", "link": "https://stackoverflow.com/users/437583/linus-arver"}, "edited": false, "score": 0, "creation_date": 1557288328, "post_id": 54642516, "comment_id": 98709621, "body": "Yes that could work, but I was more interested in how you would maybe manually write out the <code>Interpret</code> typeclass instance for the <code>IP</code> newtype to avoid the orphan instance altogether (if that&#39;s possible, somehow?)."}, {"owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "reply_to_user": {"reputation": 1210, "user_id": 437583, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/227b1832ae8d065bfdce3b5c92d0792b?s=128&d=identicon&r=PG", "display_name": "Linus Arver", "link": "https://stackoverflow.com/users/437583/linus-arver"}, "edited": false, "score": 1, "creation_date": 1557374939, "post_id": 54642516, "comment_id": 98745039, "body": "@LinusArver: You can take advantage of the <code>Generic</code>-derived instance without needing to hand-write the instance or define an orphan instance.  There is a <code>Dhall.genericAuto</code> function which you can <code>Data.Coerce.coerce</code> to the desired <code>Type</code>, like this: <code>auto = coerce (genericAuto :: Type (Word8, Word8, Word8, Word8)) :: Type IP</code>"}, {"owner": {"reputation": 1210, "user_id": 437583, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/227b1832ae8d065bfdce3b5c92d0792b?s=128&d=identicon&r=PG", "display_name": "Linus Arver", "link": "https://stackoverflow.com/users/437583/linus-arver"}, "edited": false, "score": 0, "creation_date": 1557552512, "post_id": 54642516, "comment_id": 98812270, "body": "Thanks Gabriel! For sake of completeness, I&#39;ll restate for posterity: in order to avoid the orphan instance for (a, b, c, d), just re-add <code>derive (Generic)</code> for <code>IP</code>, then delete the manual <code>Interpret</code> instance for <code>(a, b, c, d)</code>. Then unmarshal from Text to <code>IP</code> with: <code>input (coerce (genericAuto :: Type (Word8, Word8, Word8, Word8)) :: Type IP) &quot;{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural}&quot; :: IO IP</code>. Now, the <code>instance Interpret Word8 where</code> is still an orphan instance, but that&#39;s another matter."}, {"owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "reply_to_user": {"reputation": 1210, "user_id": 437583, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/227b1832ae8d065bfdce3b5c92d0792b?s=128&d=identicon&r=PG", "display_name": "Linus Arver", "link": "https://stackoverflow.com/users/437583/linus-arver"}, "edited": false, "score": 0, "creation_date": 1557622757, "post_id": 54642516, "comment_id": 98826703, "body": "@LinusArver: You&#39;re welcome!  I also edited my answer to include a final example without any orphan instnaces"}], "tags": [], "owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "is_accepted": false, "score": 5, "last_activity_date": 1557622730, "last_edit_date": 1557622730, "creation_date": 1549943279, "answer_id": 54642516, "question_id": 54579764, "link": "https://stackoverflow.com/questions/54579764/how-do-i-represent-a-tuple-in-dhall/54642516#54642516", "title": "How do I represent a tuple in dhall?", "body": "<p>For IP addresses, I'd recommend representing them as Dhall strings in the absence of language support for the type.  There are two main reasons I suggest this:</p>\n\n<ul>\n<li>If the language ever does natively support IP addresses then that will provide the smoothest migration path for your users (just drop the quotes)</li>\n<li>In general, there will always exist data types that the language can't perfectly model to make invalid states unrepresentable.  If the data type fits well into Dhall's type system then take advantage of that but if it doesn't then don't force it otherwise you'll frustrate yourself and your users.  Dhall doesn't have to be perfect; just better than YAML.</li>\n</ul>\n\n<p>For example, if this were a question about native support for dates/times, I'd give the same answer (for the same reasons).</p>\n\n<p>That said, I'll still help debug the issue you ran into.  The first thing I did was to attempt to reproduce the issue using a newer version of the <code>dhall</code> package since that has improved  error messages:</p>\n\n<pre><code>*Main Dhall&gt; input auto \"{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural}\" :: IO IP\n*** Exception: \nError: Expression doesn't match annotation\n\n{ + _2 : \u2026\n, + _3 : \u2026\n, + _4 : \u2026\n,   _1 : - { \u2026 : \u2026 }\n         + Natural\n}\n\n{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural} : { _1 : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural } }\n(input):1:1\n</code></pre>\n\n<p>The error message now shows a \"type diff\" which explains how the two types differ.  In this case the diff already hints at the problem, which is that there is one extra record wrapping the type.  It thinks there should only be a single <code>_1</code> field at the outermost level and the four <code>_1</code>/<code>_2</code>/<code>_3</code>/<code>_4</code> fields we expected are probably nested inside that field (which is why it thinks that the <code>_1</code> field stores a record instead of a <code>Natural</code>).</p>\n\n<p>However, we can ask for more detail by wrapping things in the <code>detailed</code> function which is equivalent to the <code>--explain</code> flag on the command line:</p>\n\n<pre><code>*Main Dhall&gt; detailed (input auto \"{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural}\" :: IO IP)\n*** Exception: \nError: Expression doesn't match annotation\n\n{ + _2 : \u2026\n, + _3 : \u2026\n, + _4 : \u2026\n,   _1 : - { \u2026 : \u2026 }\n         + Natural\n}\n\nExplanation: You can annotate an expression with its type or kind using the     \n\u2770:\u2771 symbol, like this:                                                          \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                   \n    \u2502 x : t \u2502  \u2770x\u2771 is an expression and \u2770t\u2771 is the annotated type or kind of \u2770x\u2771\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                   \n\nThe type checker verifies that the expression's type or kind matches the        \nprovided annotation                                                             \n\nFor example, all of the following are valid annotations that the type checker   \naccepts:                                                                        \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                             \n    \u2502 1 : Natural \u2502  \u27701\u2771 is an expression that has type \u2770Natural\u2771, so the type  \n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  checker accepts the annotation                             \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                   \n    \u2502 Natural/even 2 : Bool \u2502  \u2770Natural/even 2\u2771 has type \u2770Bool\u2771, so the type    \n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  checker accepts the annotation                   \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                      \n    \u2502 List : Type \u2192 Type \u2502  \u2770List\u2771 is an expression that has kind \u2770Type \u2192 Type\u2771,\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  so the type checker accepts the annotation          \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                        \n    \u2502 List Text : Type \u2502  \u2770List Text\u2771 is an expression that has kind \u2770Type\u2771, so \n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  the type checker accepts the annotation               \n\n\nHowever, the following annotations are not valid and the type checker will\nreject them:                                                                    \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                \n    \u2502 1 : Text \u2502  The type checker rejects this because \u27701\u2771 does not have type  \n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2770Text\u2771                                                        \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                             \n    \u2502 List : Type \u2502  \u2770List\u2771 does not have kind \u2770Type\u2771                           \n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                             \n\n\nSome common reasons why you might get this error:                               \n\n\u25cf The Haskell Dhall interpreter implicitly inserts a top-level annotation       \n  matching the expected type                                                    \n\n  For example, if you run the following Haskell code:                           \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                           \n    \u2502 &gt;&gt;&gt; input auto \"1\" :: IO Text \u2502                                         \n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                           \n\n\n  ... then the interpreter will actually type check the following annotated     \n  expression:                                                                   \n\n\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                \n    \u2502 1 : Text \u2502                                                                \n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                \n\n\n  ... and then type-checking will fail                                          \n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nYou or the interpreter annotated this expression:                               \n\n\u21b3   { _1 = 1, _2 = 2, _3 = 3, _4 = 5 }\n  : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural }\n\n... with this type or kind:                                                     \n\n\u21b3 { _1 : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural } }\n\n... but the inferred type or kind of the expression is actually:                \n\n\u21b3 { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural }\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural} : { _1 : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural } }\n(input):1:1\n</code></pre>\n\n<p>The key part is the bottom of the message, which says:</p>\n\n<pre><code>You or the interpreter annotated this expression:                               \n\n\u21b3   { _1 = 1, _2 = 2, _3 = 3, _4 = 5 }\n  : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural }\n\n... with this type or kind:                                                     \n\n\u21b3 { _1 : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural } }\n\n... but the inferred type or kind of the expression is actually:                \n\n\u21b3 { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural }\n</code></pre>\n\n<p>... and that confirms that the extra 1-field record wrapping the type is what is interfering with decoding.</p>\n\n<p>The reason for this unexpected type is because of how you derived the <code>Interpret</code> instance for <code>IP</code> here:</p>\n\n<pre><code>instance Interpret IP where\n</code></pre>\n\n<p>When you omit the <code>Interpret</code> instance implementation it falls back on using the <code>Generic</code> instance for <code>IP</code> which is <strong>NOT</strong> the same as the <code>Generic</code> instance for <code>(Word8, Word8, Word8, Word8)</code>.  You can confirm this by asking GHC to print out the generic representation of the two types:</p>\n\n<pre><code>*Main Dhall&gt; import GHC.Generics\n*Main Dhall GHC.Generics&gt; :kind! Rep IP\nRep IP :: * -&gt; *\n= D1\n    ('MetaData \"IP\" \"Main\" \"main\" 'True)\n    (C1\n       ('MetaCons \"IP\" 'PrefixI 'False)\n       (S1\n          ('MetaSel\n             'Nothing 'NoSourceUnpackedness 'NoSourceStrictness 'DecidedLazy)\n          (Rec0 (Word8, Word8, Word8, Word8))))\n*Main Dhall GHC.Generics&gt; :kind! Rep (Word8, Word8, Word8, Word8)\nRep (Word8, Word8, Word8, Word8) :: * -&gt; *\n= D1\n    ('MetaData \"(,,,)\" \"GHC.Tuple\" \"ghc-prim\" 'False)\n    (C1\n       ('MetaCons \"(,,,)\" 'PrefixI 'False)\n       ((S1\n           ('MetaSel\n              'Nothing 'NoSourceUnpackedness 'NoSourceStrictness 'DecidedLazy)\n           (Rec0 Word8)\n         :*: S1\n               ('MetaSel\n                  'Nothing 'NoSourceUnpackedness 'NoSourceStrictness 'DecidedLazy)\n               (Rec0 Word8))\n        :*: (S1\n               ('MetaSel\n                  'Nothing 'NoSourceUnpackedness 'NoSourceStrictness 'DecidedLazy)\n               (Rec0 Word8)\n             :*: S1\n                   ('MetaSel\n                      'Nothing 'NoSourceUnpackedness 'NoSourceStrictness 'DecidedLazy)\n                   (Rec0 Word8))))\n</code></pre>\n\n<p>The <code>Generic</code> representation of the <code>IP</code> type is a record with one (anonymous) field, where that one field contains the 4-tuple of <code>Word8</code>s.  The <code>Generic</code> representation of the <code>(Word8, Word8, Word8, Word8)</code> type is a record of 4 fields (each of which contains a <code>Word8</code>).  You probably expected the latter behavior (an outermost record of 4 fields) rather than the former behavior (an outermost record of 1 field).</p>\n\n<p>In fact, we can get the behavior you expected by decoding straight into a <code>(Word8, Word8, Word8, Word8)</code> type:</p>\n\n<pre><code>*Main Dhall GHC.Generics&gt; detailed (input auto \"{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural}\" :: IO (Word8, Word8, Word8, Word8))\n(1,2,3,5)\n</code></pre>\n\n<p>... although that doesn't really solve your problem :)</p>\n\n<p>So if you want the <code>IP</code> type to have the same <code>Interpret</code> instance as <code>(Word8, Word8, Word8, Word8)</code> then you actually do not want to use GHC <code>Generics</code> to derive the <code>Interpret</code> instance for <code>IP</code>.  What you actually want is to use <code>GeneralizedNewtypeDeriving</code> so that the <code>newtype</code> uses the exact same instance as the underlying type.  You can do that with the following code:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric              #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE RecordWildCards            #-}\n\nimport Control.Applicative  ( empty, pure )\nimport Dhall  ( Generic, Interpret( autoWith ), Type( Type, extract, expected ) )\nimport Dhall.Core  ( Expr( Natural, NaturalLit ) )\nimport Data.Word  ( Word8 )\n\nnewtype IP = IP (Word8, Word8, Word8, Word8)\n  deriving (Interpret, Show)\n\nword8 :: Type Word8\nword8 = Type {..}\n  where\n    extract (NaturalLit n) | n &gt;= 0 &amp;&amp; n &lt;= 255 = pure (fromIntegral n)\n    extract  _             = empty\n\n    expected = Natural\n\ninstance Interpret Word8 where\n  autoWith _ = word8\n\ninstance (Interpret a,Interpret b,Interpret c,Interpret d) =&gt; Interpret (a,b,c,d)\n</code></pre>\n\n<p>The main changes I made were:</p>\n\n<ul>\n<li>Adding the <code>GeneralizedNewtypeDeriving</code> language extension</li>\n<li>Removing the <code>Generic</code> instance for <code>IP</code></li>\n<li>Adding a <code>Show</code> instance for <code>IP</code> (for debugging)</li>\n</ul>\n\n<p>... and then that works:</p>\n\n<pre><code>*Main Dhall GHC.Generics&gt; input auto \"{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural}\" :: IO IP\nIP (1,2,3,5)\n</code></pre>\n\n<p>You can also do this without any orphan instances, like this:</p>\n\n<pre><code>{-# LANGUAGE RecordWildCards #-}\n\nimport Control.Applicative (empty, pure)\nimport Data.Coerce (coerce)\nimport Dhall (Interpret(..), Type(..), genericAuto)\nimport Dhall.Core (Expr(..))\nimport Data.Word (Word8)\n\nnewtype MyWord8 = MyWord8 Word8\n\nword8 :: Type MyWord8\nword8 = Type {..}\n  where\n    extract (NaturalLit n)\n        | n &gt;= 0 &amp;&amp; n &lt;= 255 = pure (MyWord8 (fromIntegral n))\n    extract _ =\n        empty\n\n    expected = Natural\n\ninstance Interpret MyWord8 where\n  autoWith _ = word8\n\nnewtype IP = IP (Word8, Word8, Word8, Word8)\n    deriving (Show)\n\ninstance Interpret IP where\n    autoWith _ = coerce (genericAuto :: Type (MyWord8, MyWord8, MyWord8, MyWord8))\n</code></pre>\n"}], "owner": {"reputation": 1237, "user_id": 3416536, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/33e660f9b48e97aa96c9029e9645f15d?s=128&d=identicon&r=PG&f=1", "display_name": "user3416536", "link": "https://stackoverflow.com/users/3416536/user3416536"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 426, "favorite_count": 1, "answer_count": 1, "score": 10, "last_activity_date": 1557622730, "creation_date": 1549563295, "question_id": 54579764, "link": "https://stackoverflow.com/questions/54579764/how-do-i-represent-a-tuple-in-dhall", "title": "How do I represent a tuple in dhall?", "body": "<p>I would like to represent IPv4 addresses in dhall, so I can manage my host configurations.</p>\n\n<p>By default, this is held as Text; but that's clearly unsatisfactory as it allows any old text to slip through.  I would like to keep these values as a 4-tuple of 8-bit values.</p>\n\n<p>I don't think that Dhall can allow this natively - the nearest I can see is a record of { a : Natural, b : Natural }, etc., but that's syntactically clunky and still allows for octet values outside of 0-255.</p>\n\n<p>Assuming that I can't achieve this directly in Dhall, perhaps I can define a type in Haskell that can automatically read values that are 4-length lists of Naturals from Dhall,</p>\n\n<p>My questions are:</p>\n\n<ol>\n<li>Am I right to think that doing this directly in Dhall is impossible or disproportionately hard?</li>\n<li>To define this type in Haskell, do I define an instance of <code>Interpret</code>; and if so, how do I define an instance that will read in a 4-part list of Integers, while giving useful error messages for mis-constructed (lists of the wrong length, lists of non-integers or non-lists) or out-of-bounds values (integers that aren't between 0 &amp; 255 inclusive).</li>\n</ol>\n\n<p>This is what I've tried:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric   #-}\n{-# LANGUAGE RecordWildCards #-}\n\nimport Control.Applicative  ( empty, pure )\nimport Dhall  ( Generic, Interpret( autoWith ), Type( Type, extract, expected ) )\nimport Dhall.Core  ( Expr( Natural, NaturalLit ) )\nimport Data.Word  ( Word8 )\n\nnewtype IP = IP (Word8, Word8, Word8, Word8)\n  deriving Generic\n\nword8 :: Type Word8\nword8 = Type {..}\n  where\n    extract (NaturalLit n) | n &gt;= 0 &amp;&amp; n &lt;= 255 = pure (fromIntegral n)\n    extract  _             = empty\n\n    expected = Natural\n\ninstance Interpret Word8 where\n  autoWith _ = word8\n\ninstance (Interpret a,Interpret b,Interpret c,Interpret d) =&gt; Interpret (a,b,c,d)\n\ninstance Interpret IP where\n</code></pre>\n\n<p>But I'm struggling to find a way to express a value in dhall that can be read in:</p>\n\n<pre><code>\u03bb&gt; input auto \"{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural}\" :: IO IP\n*** Exception: \nError: Expression doesn't match annotation\n\n{ _1 = 1, _2 = 2, _3 = 3, _4 = 5 } : { _1 : Natural, _2 : Natural, _3 : Natural, _4 : Natural}\n\n(input):1:1\n</code></pre>\n\n<p>(I'd much rather express an IP as, say, [1,2,3,4]; but following the error messages and the doc for <code>pair</code> seemed to suggest that the numbered record is the way to go).</p>\n\n<p>Is there a way to achieve what I'm after?</p>\n"}, {"tags": ["haskell", "recursion", "functional-programming"], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1549562238, "creation_date": 1549562238, "answer_id": 54579464, "question_id": 54579131, "link": "https://stackoverflow.com/questions/54579131/where-clause-in-haskell-function-without-parameters/54579464#54579464", "title": "Where clause in haskell function without parameters", "body": "<p><code>substitute</code> has type <code>a -&gt; a -&gt; [a] -&gt; [a]</code>, which means it takes <em>one</em> argument and returns a function of type <code>a -&gt; [a] -&gt; [a]</code>. This is because <code>(-&gt;)</code> is right-associative, and the above type is equivalent to <code>a -&gt; (a -&gt; [a] -&gt; [a])</code>.</p>\n\n<p>Since function application is left-associative, a call like <code>substitute x y</code> is equivalent to <code>(substitute x) y</code>; <code>y</code> is the argument to the function returned by <code>substitute x</code>.</p>\n\n<p>When one writes</p>\n\n<pre><code>substitute x y = ...\n</code></pre>\n\n<p>that is syntactic sugar for </p>\n\n<pre><code>substitute = \\x -&gt; \\y -&gt; ...\n</code></pre>\n\n<p>Further, since <code>map substituteOne'</code> has type <code>[a] -&gt; [a]</code>, that makes it a suitable value for <code>substitute x y</code> to return.</p>\n"}, {"tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 0, "last_activity_date": 1549562774, "creation_date": 1549562774, "answer_id": 54579627, "question_id": 54579131, "link": "https://stackoverflow.com/questions/54579131/where-clause-in-haskell-function-without-parameters/54579627#54579627", "title": "Where clause in haskell function without parameters", "body": "<p><code>substitute1</code> takes a parameter <code>x'</code>. The bits between the <code>|</code> and <code>=</code> characters are guard conditions. Since this particular function has only one condition you could rewrite it like this:</p>\n\n<pre><code>substitute1 x' = if x == x' then y else x'\n</code></pre>\n\n<p>Because it is in the <code>where</code> clause <code>substitute1</code> also has access to the parameters <code>x</code> and <code>y</code> of the main function.</p>\n"}, {"tags": [], "owner": {"reputation": 120535, "user_id": 123109, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/157c96de3d125abc1c363ff25c20dfaf?s=128&d=identicon&r=PG", "display_name": "Greg Bacon", "link": "https://stackoverflow.com/users/123109/greg-bacon"}, "is_accepted": true, "score": 3, "last_activity_date": 1549592158, "last_edit_date": 1549592158, "creation_date": 1549564169, "answer_id": 54579966, "question_id": 54579131, "link": "https://stackoverflow.com/questions/54579131/where-clause-in-haskell-function-without-parameters/54579966#54579966", "title": "Where clause in haskell function without parameters", "body": "<blockquote>\n  <p><strong>(1)</strong> how can <code>substituteOne</code> in the second line work without any parameters?<br>\n  <strong>(2)</strong> where do we give a list as input? or where do we state <em>what</em> we do with that list? I mean compiling and executing it works, but somehow I don\u2019t see it</p>\n</blockquote>\n\n<p>The parameters are still there; this is <a href=\"https://wiki.haskell.org/Currying\" rel=\"nofollow noreferrer\">currying</a> at work. Consider the <a href=\"https://wiki.haskell.org/Section_of_an_infix_operator\" rel=\"nofollow noreferrer\">section of an infix operator</a> <code>(+1)</code>, which is a special case of <a href=\"https://wiki.haskell.org/Partial_application\" rel=\"nofollow noreferrer\">partial application</a>. Given a number, it produces a number that is one greater. Witness:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; :t (+1)\n(+1) :: Num a =&gt; a -&gt; a\n</code></pre>\n\n<p>We could define a function to increment all elements of a list by naming the list</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; :t \\l -&gt; map (+1) l\n\\l -&gt; map (+1) l :: Num b =&gt; [b] -&gt; [b]\n</code></pre>\n\n<p>but that turns out to be unnecessary because of <a href=\"https://wiki.haskell.org/Currying\" rel=\"nofollow noreferrer\">currying</a>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; :t map (+1)\nmap (+1) :: Num b =&gt; [b] -&gt; [b]\n</code></pre>\n\n<p>This is <em>functional</em> programming, after all. With Haskell, we manipulate functions as easily as other languages manipulate strings.</p>\n\n<blockquote>\n  <p><strong>(3)</strong> what is <code>x'</code>? it is never defined anywhere, we just start working with it somehow (maybe refers also to question 1)</p>\n</blockquote>\n\n<p>But you <em>do</em> define <code>x'</code> as a parameter of <code>substituteOne</code>!</p>\n\n<p>Consider the type of <code>map</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; :t map\nmap :: (a -&gt; b) -&gt; [a] -&gt; [b]\n</code></pre>\n\n<p>Its first argument is a function of one parameter. For your program to typecheck, the types have to line up. We can emphasize this for <code>substituteOne</code> by adding an optional type annotation \u2014 but have to work a bit harder (by enabling the <a href=\"https://wiki.haskell.org/Scoped_type_variables\" rel=\"nofollow noreferrer\">scoped type variables</a> extension) because <code>substituteOne</code> is an inner function with references to the outer scope, </p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>substitute':: forall a. Eq a =&gt; a -&gt; a -&gt; [a] -&gt; [a]\nsubstitute' x y = map substituteOne\n                  where\n                    substituteOne :: a -&gt; a\n                    substituteOne x' | x == x'   = y\n                                     | otherwise = x'\n</code></pre>\n\n<blockquote>\n  <p><strong>(4)</strong> <code>map</code> needs a function and a list, so that it works. here we have <code>map</code> function <code>_</code>. refers maybe to 2., but what would be the output of <code>substituteOne x'</code>?</p>\n</blockquote>\n\n<p>Using unnamed arguments at the point of application as your code does with <code>map substituteOne</code> is known as <a href=\"https://wiki.haskell.org/Pointfree\" rel=\"nofollow noreferrer\">pointfree style</a>. In your case, there are two invisible \u201cpoints\u201d or variable names: the argument to <code>substituteOne</code> and the list argument to <code>map</code>.</p>\n\n<p>You could be explicit about everything, as in</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>substitute'' :: Eq a =&gt; a -&gt; a -&gt; [a] -&gt; [a]\nsubstitute'' x y l = map (\\x' -&gt; if x == x' then y else x') l\n</code></pre>\n\n<p>but that is much more cluttered in comparison.</p>\n\n<p>The values produced by <code>substituteOne</code> are collected in the list that results from <code>map</code>.</p>\n"}], "owner": {"reputation": 65, "user_id": 8176414, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YJUiJ.jpg?s=128&g=1", "display_name": "ArdianH101", "link": "https://stackoverflow.com/users/8176414/ardianh101"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 54579966, "answer_count": 3, "score": 2, "last_activity_date": 1549592158, "creation_date": 1549560969, "question_id": 54579131, "link": "https://stackoverflow.com/questions/54579131/where-clause-in-haskell-function-without-parameters", "title": "Where clause in haskell function without parameters", "body": "<pre><code>substitute':: (Eq a)=&gt; a -&gt; a -&gt; [a] -&gt; [a]\nsubstitute' x y = map substituteOne\n                  where\n                    substituteOne x' | x == x'   = y\n                                     | otherwise = x'\n</code></pre>\n\n<p>So, the point of this function is, that it takes two inputs of type a and a list of type a and substitutes all elements in list [a] that are from the \"first\" a with the \"second\" a. At least that is what the task description says.</p>\n\n<p>I already implemented a recursive version, but a function with a where clause is also needed.</p>\n\n<p>So THAT is the solution for it. Somehow I have questions:</p>\n\n<ol>\n<li>how can substituteOne in the second line work without any parameters?</li>\n<li>where do we give a list as input? or where do we state WHAT we do with that list? I mean compiling and eecuting it works, but somehow I don't see it</li>\n<li>what is x' ? it is never defined anywhere, we just start working with it somehow (maybe refers also to question 1) </li>\n<li>map needs a function and a list, so that it works. here we have map function _. refers maybe to 2., but what would be the output of substituteOne x' ? </li>\n</ol>\n\n<p>If needed, result looks like this:</p>\n\n<pre><code>substitute' 5 10 [1, 5, 2, 5, 3, 5]\n[1,10,2,10,3,10]\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 1, "creation_date": 1549557852, "post_id": 54577848, "comment_id": 95953831, "body": "Missing <code>&gt;&gt;=</code> after last <code>get</code>?"}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 1, "creation_date": 1549562881, "post_id": 54577848, "comment_id": 95956530, "body": "Why is fbs taking a parameter which it always ignores?"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1549557936, "creation_date": 1549557936, "answer_id": 54578253, "question_id": 54577848, "link": "https://stackoverflow.com/questions/54577848/haskell-desugaring-state-do-notation/54578253#54578253", "title": "Haskell: Desugaring State do notation", "body": "<p>Roughly put, each <code>do</code> line corresponds to <code>&gt;&gt;=</code> (or some of its simpler forms like <code>&gt;&gt;</code>).</p>\n\n<p>In your case, you get:</p>\n\n<pre><code>fbs = \\_ -&gt; \n  get &gt;&gt;= ( \\ (a,b) -&gt;\n     put (b,a+b) &gt;&gt;\n        get &gt;&gt;= ( \\ (a,_) -&gt;\n           pure a ))\n</code></pre>\n\n<p>I added some redundant parentheses and indentation for clarity.</p>\n\n<p>Your original code lacks a <code>&gt;&gt;=</code> after the second <code>get</code>.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 54578253, "answer_count": 1, "score": 2, "last_activity_date": 1549557936, "creation_date": 1549556769, "question_id": 54577848, "link": "https://stackoverflow.com/questions/54577848/haskell-desugaring-state-do-notation", "title": "Haskell: Desugaring State do notation", "body": "<p>I have a contrived function to help calculate the Fibonacci sequence using <code>State</code>.</p>\n\n<pre><code>fbs :: Int -&gt; State (Int,Int) Int\nfbs = \\_ -&gt; do\n  (a,b) &lt;- get\n  put (b,a+b)\n  (a,_) &lt;- get\n  pure a\n</code></pre>\n\n<p>It compiles when I write it with do notation, but I can't desugar it:</p>\n\n<pre><code>fbs' :: Int -&gt; State (Int, Int) Int\nfbs' = \\_ -&gt; get &gt;&gt;= (\\(a,b) -&gt;\n  put (b,a+b) *&gt;\n    get (\\(a,_) -&gt;\n      pure a )) \n\n * Ambiguous type variable `f0' arising from a use of `pure'\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["haskell", "partial-functions"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1549557938, "post_id": 54577781, "comment_id": 95953871, "body": "From the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.List.html#scanl1\" rel=\"nofollow noreferrer\">source</a>, it doesn&#39;t look partial. Everything seems to be correctly handled."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 8, "last_activity_date": 1549558515, "creation_date": 1549558515, "answer_id": 54578442, "question_id": 54577781, "link": "https://stackoverflow.com/questions/54577781/is-scanl1-really-partial/54578442#54578442", "title": "Is scanl1 really partial?", "body": "<p>That's a mistake on the wiki. <code>scanl1</code> is in fact total. (I've updated the wiki.)</p>\n"}], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 54578442, "answer_count": 1, "score": 5, "last_activity_date": 1549558515, "creation_date": 1549556531, "question_id": 54577781, "link": "https://stackoverflow.com/questions/54577781/is-scanl1-really-partial", "title": "Is scanl1 really partial?", "body": "<p><a href=\"https://wiki.haskell.org/List_of_partial_functions\" rel=\"noreferrer\">According to the Haskell wiki</a>, the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:scanl1\" rel=\"noreferrer\"><code>scanl1</code></a> function is partial. I don't understand what inputs result in bottom, though. For list functions, I'm used to the problem inputs either being empty lists (like for <code>head</code>) or infinite ones (like for <code>reverse</code>). However, <code>scanl1</code> seems to handle both of these types of lists correctly. Is this actually a partial function? If so, what's an example of an input that will result in bottom?</p>\n"}, {"tags": ["performance", "haskell"], "comments": [{"owner": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 1, "creation_date": 1549555891, "post_id": 54577479, "comment_id": 95952611, "body": "Wild guess: lazy execution and memoization.  Haskell is pretty good at this sort of thing, if you present it a problem that is tractable in this way."}, {"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "reply_to_user": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 0, "creation_date": 1549555992, "post_id": 54577479, "comment_id": 95952685, "body": "<code>nf</code> in the benchmark should account for lazy execution if I understand correctly. But how do I make sure memoization does not take place in this case?"}, {"owner": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 1, "creation_date": 1549556019, "post_id": 54577479, "comment_id": 95952704, "body": "Why would you want that?"}, {"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "reply_to_user": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 0, "creation_date": 1549556082, "post_id": 54577479, "comment_id": 95952740, "body": "In general, indeed, that&#39;s generally a good thing. But in this case looks like it kills the benchmark."}, {"owner": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 1, "creation_date": 1549556138, "post_id": 54577479, "comment_id": 95952768, "body": "No.  Memoization is a legitimate technique.  You&#39;re basically saying the Lakers didn&#39;t win the game because he threw the ball from midfield, so it doesn&#39;t count."}, {"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "reply_to_user": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 2, "creation_date": 1549556314, "post_id": 54577479, "comment_id": 95952892, "body": "Agreed, it&#39;s a legitimate technique, but it doesn&#39;t help measuring how much the first run did take, which is exactly what I want to do here."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1549558259, "post_id": 54577479, "comment_id": 95954054, "body": "In this case, memoization indeed invalidates the benchmark, as far as I can see. Try adding a dummy argument, e.g. <code>pytha () = ...</code> so that it becomes a function and memoization does not happen."}, {"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1549559049, "post_id": 54577479, "comment_id": 95954570, "body": "@chi thanks for the suggestion! I&#39;ve just tried that, and it doesn&#39;t significantly change the numbers."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1549562434, "post_id": 54577479, "comment_id": 95956314, "body": "@chi, that&#39;s not enough to fool the optimizer."}], "answers": [{"comments": [{"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "edited": false, "score": 0, "creation_date": 1549563223, "post_id": 54579624, "comment_id": 95956724, "body": "Aha, this way I&#39;ve got 1.3 ms and this makes way more sense now, thanks! Interestingly, indeed, writing the benchmark as <code>nf (\\n -&gt; take n $ pytha maxBound) (read countStr)</code> does not work: ghc is still able to memoize. I had to do <code>nf (\\(n, m) -&gt; take n $ pytha m) (read countStr, maxBound)</code>, just as you suggested."}, {"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "edited": false, "score": 0, "creation_date": 1549563320, "post_id": 54579624, "comment_id": 95956782, "body": "BTW is there anything worth reading about this behaviour, or is it such a deep internal detail of ghc optimizer that it doesn&#39;t make much sense to describe and formalize it?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "edited": false, "score": 0, "creation_date": 1549563536, "post_id": 54579624, "comment_id": 95956881, "body": "@0xd34df00d, you should even be able to get away with <code>nf (take 100 . pytha) maxBound</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "edited": false, "score": 1, "creation_date": 1549563713, "post_id": 54579624, "comment_id": 95956963, "body": "@0xd34df00d, you should probably search for &quot;constant applicative form&quot; (and also general info on the mechanics of lazy evaluation) for why your original approach didn&#39;t work, and for &quot;full laziness&quot; and probably &quot;constant lifting&quot; to see why some simpler modifications (like the one chi suggested) don&#39;t work."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1549564123, "post_id": 54579624, "comment_id": 95957190, "body": "I&#39;m a bit scared now :) I thought GHC was quite conservative to lift constants over lambdas (full laziness producing CAFs). But it is no longer so. I recall the reason was that doing that could make CAFs cause a memory leak: when the function returns, normally the memory could have been GC&#39;d, but now the list is a CAF so it stays there forever. Wow, this got much trickier."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1549564405, "post_id": 54579624, "comment_id": 95957334, "body": "@chi, I&#39;m not really sure what GHC&#39;s rules/heuristics are for that. I haven&#39;t heard of it getting <i>more</i> aggressive--maybe less so. But it does lift a lot of &quot;obvious&quot; things like this."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 2, "last_activity_date": 1549587124, "last_edit_date": 1549587124, "creation_date": 1549562760, "answer_id": 54579624, "question_id": 54577479, "link": "https://stackoverflow.com/questions/54577479/unexplainably-incredible-performance-with-pythagorean-triples-in-haskell/54579624#54579624", "title": "Unexplainably incredible performance with Pythagorean triples in Haskell", "body": "<p>You need to use a function rather than a value that will be memoized.</p>\n\n<pre><code>pytha :: Int -&gt; [(Int, Int, Int)]\npytha z_max =\n    [ (x, y, z)\n    | z &lt;- [0..z_max]\n    , x &lt;- [1..z]\n    , y &lt;- [x..z]\n    , x * x + y * y == z * z\n    ]\n</code></pre>\n\n<p>GHC isn't going to get clever enough to factor this into <code>takeWhile</code> from a constant list, so it should give a meaningful benchmark. Just make sure Criterion is in charge of passing <code>z_max</code>, which you can reasonably set to <code>maxBound :: Int</code> or some such.</p>\n\n<p>By the way: you can make your implementation much less slow by using floating point operations to calculate much tighter bounds for <code>y</code>.</p>\n"}], "owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "accepted_answer_id": 54579624, "answer_count": 1, "score": 1, "last_activity_date": 1549587124, "creation_date": 1549555603, "question_id": 54577479, "link": "https://stackoverflow.com/questions/54577479/unexplainably-incredible-performance-with-pythagorean-triples-in-haskell", "title": "Unexplainably incredible performance with Pythagorean triples in Haskell", "body": "<p>Let's say we have this simple Haskell function that produces Pythagorean triples:</p>\n\n<pre><code>pytha :: [(Int, Int, Int)]\npytha = [(x, y, z)\n        | z &lt;- [0..]\n        , x &lt;- [1..z]\n        , y &lt;- [x..z]\n        , x * x + y * y == z * z\n        ]\n</code></pre>\n\n<p>and we'd like to benchmark how long does it take to produce, say, first 100 triples. So (using the <code>criterion</code> library and assuming <code>import Criterion.Main</code>) we have this benchmark:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  countStr &lt;- readFile \"count.txt\"\n  defaultMain [ bgroup \"pytha\" [ bench countStr $ nf (`take` pytha) (read countStr) ] ]\n</code></pre>\n\n<p>where we even read the <code>count</code> from a file to make sure ghc does not try to evaluate <code>pytha</code> during compile time!</p>\n\n<p>Doing <code>echo 100 &gt; count.txt</code>, compiling the benchmark with <code>-O2</code> and running on my machine (a 4.0 GHz Sandy Bridge CPU) shows some interesting numbers:</p>\n\n<pre><code>time                 967.4 ns   (957.6 ns .. 979.3 ns)\n                     0.999 R\u00b2   (0.998 R\u00b2 .. 0.999 R\u00b2)\nmean                 979.6 ns   (967.9 ns .. 995.6 ns)\nstd dev              45.34 ns   (33.96 ns .. 60.29 ns)\n</code></pre>\n\n<p>Slightly modifying this program to show how many triples were considered overall (by producing all the triples first, zipping the list with <code>[0..]</code> and then filtering out all non-Pythagorean triples and looking at the indices of the resulting ones) shows that almost 900000 triples were considered.</p>\n\n<p>All this naturally raises the question: how does the code above manage to achieve 1000 triples/ns on a single core of a pretty standard CPU? Or is it just that my benchmark is wrong?</p>\n"}, {"tags": ["haskell", "data-structures"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549539806, "post_id": 54572497, "comment_id": 95942806, "body": "could you not create a data type to hold the &quot;type&quot; of test you&#39;re doing (ANOVA etc - apologies I&#39;m not a statistician so these are a bit meaningless to me), and add that as a parameter to your <code>Test</code> type: <code>data Test = Test Type Name (Calculation P)</code>. This seems to me to give you all the advantages of the first method while adding type safety for your different types of test. [PS this is just off the top of my head, I am no expert on this and haven&#39;t written production code in Haskell, so apologies if this isn&#39;t right for some reason]"}, {"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549541739, "post_id": 54572497, "comment_id": 95943934, "body": "@RobinZigmond What would the type of <code>Type</code> be?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549541885, "post_id": 54572497, "comment_id": 95944023, "body": "I mean it would be your own type. <code>data Type = ANOVA | KruskallWallisH | ...</code>"}, {"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549542125, "post_id": 54572497, "comment_id": 95944151, "body": "I see. I&#39;m afraid this wouldn&#39;t much type safer than <code>data Test = Test Name (Calculation P)</code> since all of the test results have different meanings and they are hardly interchangeable. This approach would still happily compile and let me pass ANOVA to something that should use KruskallWallisH."}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1549561080, "post_id": 54572497, "comment_id": 95955642, "body": "Why not <code>type Test = (String, Calculation Double)</code>? After all you said  &quot;Each test contains a name and a result.&quot;."}, {"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1549562378, "post_id": 54572497, "comment_id": 95956290, "body": "@Elmex80s This would loose type safety - ANOVA could be passed where only KruskallWallisH would make sense."}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1549563703, "post_id": 54572497, "comment_id": 95956955, "body": "What do you mean by that?"}, {"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1549565459, "post_id": 54572497, "comment_id": 95957849, "body": "@Elmex80s The type would be the same for different tests and not all tests are interchangeable. Test like ANOVA and KruskallWallisH are an example of such a case. Their results mean different things and the tests should be applied in different scenarios."}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1549580066, "post_id": 54572497, "comment_id": 95964078, "body": "I think not much people understand those tests, but if you want to define different tests in Haskell then do something like <code>data Test = ANOVA | KruskallWallisH | ...</code> just like mentioned in one of the other comments."}], "answers": [{"comments": [{"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "edited": false, "score": 0, "creation_date": 1549557028, "post_id": 54573516, "comment_id": 95953335, "body": "This is a new approach for me - thanks. Does proxy have a kind :: * -&gt; * ?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "edited": false, "score": 0, "creation_date": 1549558213, "post_id": 54573516, "comment_id": 95954032, "body": "It does in standard Haskell. With PolyKinds it has kind <code>k -&gt; *</code> for whatever the kind <code>k</code> of <code>a</code> is, and <code>ANOVA</code> has kind <code>*</code>, so in the instance it still has <code>* -&gt; *</code>."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 0, "last_activity_date": 1549543027, "creation_date": 1549543027, "answer_id": 54573516, "question_id": 54572497, "link": "https://stackoverflow.com/questions/54572497/good-design-of-a-haskell-data-structure-modeling-a-statistical-test/54573516#54573516", "title": "Good design of a Haskell data structure modeling a statistical test", "body": "<p>You can mix the last two options:</p>\n\n<pre><code>newtype Test a = Test a\n\nclass HasName a where\n  nameFrom :: proxy a -&gt; Name\n\n-- ANOVA.hs\n\nnewtype ANOVA = ANOVA (Calculation P)\ninstance HasName ANOVA where\n  nameFrom _ = \"ANOVA\"\n</code></pre>\n\n<p>So you can now write <code>Test ANOVA</code>, if that looks better, and get the name via <code>nameFrom :: Test ANOVA -&gt; Name</code>.</p>\n"}], "owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1549543027, "creation_date": 1549539454, "question_id": 54572497, "link": "https://stackoverflow.com/questions/54572497/good-design-of-a-haskell-data-structure-modeling-a-statistical-test", "title": "Good design of a Haskell data structure modeling a statistical test", "body": "<p>I want to define a simple data structure that contains basic information and results of a statistical test. Each test contains a name and a result. There are multiple options to choose from and I can't get my head around about what choice would be good. Some intro code:</p>\n\n<pre><code>type Calculation a = Either Failed a\ndata Failed = NoVariance | NotEnoughData | ...\n\ntype Name = String\ntype P = Double\n</code></pre>\n\n<p>And examples with pros and cons:</p>\n\n<pre><code>data Test = Test Name (Calculation P)\n</code></pre>\n\n<p>Pros: It's probably the simplest data structure - <strong>each</strong> test contains a name and a P value</p>\n\n<p>Cons: There is no type safety. An ANOVA would be considered the same as KruskalWallisH</p>\n\n<pre><code>data ANOVA = ANOVA Name (Calculation P)\ndata KruskallWallisH = KruskallWallisH Name (Calculation P)\n</code></pre>\n\n<p>Pros: We have type safety now.</p>\n\n<p>Cons: Name has to be manually put everywhere. If in the future I'd have 15 tests and a new field was required for all of them (say, Description), 15 edits would have to be made instead of 1 in the simple case above</p>\n\n<pre><code>data Test a = Test Name a\ndata ANOVA = ANOVA (Calculation P)\ndata KruskallWallisH = KruskallWallisH (Calculation P)\n</code></pre>\n\n<p>Pros: This solves the Name problem. Also, now different tests can contain more than just a single <em>(Calculation P)</em> result. For example, <em>Pearson</em> would contain a <em>(Calculation P)</em> and a <em>(Calculation R)</em></p>\n\n<p>Cons: It also introduces a second test type into play. Having Test declared in Test.hs and ANOVA declared in ANOVA.hs makes it sort of not obvious that ANOVA has a name, unless the constructor function is also in ANOVA.hs:</p>\n\n<pre><code>anova = Test $ \"ANOVA\" $ ANOVA $ anovaCalc...\n</code></pre>\n\n<p>We could try a type-class:</p>\n\n<pre><code>class HasName a where\n  nameFrom :: a -&gt; Name\n\ndata ANOVA = ANOVA (Calculation P)\n\ninstace HasName ANOVA where\n  nameFrom _ = \"ANOVA\"\n</code></pre>\n\n<p>Pros: now the instance for the name sits next to the data structure</p>\n\n<p>Cons: we have lost the Test type entirely. <em>Test ANOVA</em> simply reads much better than just <em>ANOVA</em></p>\n\n<p>At this point I'm a little lost with how to proceed. Is there a rule-of-thumb or some good practices I could follow?</p>\n"}, {"tags": ["haskell", "file-descriptor", "unix-socket"], "answers": [{"comments": [{"owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "edited": false, "score": 0, "creation_date": 1549612909, "post_id": 54583473, "comment_id": 95972624, "body": "Oh I was looking at the deprecated sendAncillary functions, I didn&#39;t even realize there&#39;s a sendFd and RecvFd .. Thanks, I&#39;ll try it out !"}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "reply_to_user": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "edited": false, "score": 0, "creation_date": 1549652901, "post_id": 54583473, "comment_id": 95993772, "body": "I didn&#39;t read far enough down the page to find <code>sendFd</code>!  Good to know. :)"}], "tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 2, "last_activity_date": 1549579587, "creation_date": 1549579587, "answer_id": 54583473, "question_id": 54571996, "link": "https://stackoverflow.com/questions/54571996/passing-a-file-descriptor-to-another-process-in-haskell/54583473#54583473", "title": "Passing a file descriptor to another process in Haskell", "body": "<p>You can get the file descriptor of STDIN from the <a href=\"https://hackage.haskell.org/package/unix-2.7.2.2/docs/System-Posix-IO-ByteString.html#v:stdInput\" rel=\"nofollow noreferrer\">unix package</a> and UNIX-domain sockets from <a href=\"https://hackage.haskell.org/package/network-3.0.1.0/docs/Network-Socket.html#g:18\" rel=\"nofollow noreferrer\">network</a>.</p>\n\n<p>I've never tried passing a file descriptor between processes, but it should work the same in Haskell as any other language.</p>\n"}], "owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 54583473, "answer_count": 1, "score": 2, "last_activity_date": 1549596686, "creation_date": 1549537825, "last_edit_date": 1549596686, "question_id": 54571996, "link": "https://stackoverflow.com/questions/54571996/passing-a-file-descriptor-to-another-process-in-haskell", "title": "Passing a file descriptor to another process in Haskell", "body": "<p>I've read that you can pass a file descriptor to another process <a href=\"https://stackoverflow.com/a/2358843/962828\">there</a>, which seems perfect for what I want. Any chance that's do-able in Haskell in any way ?\nTo be clear, I'm not forking and I can't pre-open the file, I actually need a way to pass a file descriptor (mainly stdin) from a bunch of processes to a daemon, to avoid having to keep processes up just to forward their input, that'd fill the process list quite fast and would probably eat ressources for no reason.</p>\n\n<p>Thanks !</p>\n"}, {"tags": ["haskell", "types", "composition"], "answers": [{"tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": false, "score": 8, "last_activity_date": 1549532295, "last_edit_date": 1549532295, "creation_date": 1549529919, "answer_id": 54569584, "question_id": 54568993, "link": "https://stackoverflow.com/questions/54568993/how-do-i-derive-the-type-for-this-function/54569584#54569584", "title": "How do I derive the type for this function:", "body": "<p><code>(zip =&lt;&lt;)</code> is equivalent to <code>(&gt;&gt;= zip)</code>, which makes it perhaps a bit more readable. Either way, <code>zip</code> occupies the <code>(a -&gt; m b)</code> slot in those functions, as you've correctly observed.</p>\n\n<p>One more intuitive transformation to make is thinking about the arity of <code>=&lt;&lt;</code>. It \"takes\" two parameters, so if we apply it to one, we should only be left with one more. Hence, the signature <code>([b] -&gt; [a]) -&gt; [b] -&gt; [(a, b)]</code> is an unary function!</p>\n\n<pre><code>(zip =&lt;&lt;) :: ([b] -&gt; [a]) -&gt; ([b] -&gt; [(a, b)])\n             ------------    -----------------\n                 m a'                m b'\n</code></pre>\n\n<p>So what's <code>m</code>? The Monad instance exists for functions <code>(r -&gt;)</code> (or, alternatively, <code>(-&gt;) r</code>). So in this case <code>r :: [b]</code> (and thus <code>m :: ([b] -&gt;)</code>), <code>a' :: [a]</code> and <code>b' :: [(a, b)]</code>.</p>\n\n<p>Consequently, <code>zip</code> fits just as we asserted at the beginning:</p>\n\n<pre><code>a'  -&gt; m b'                    -- substitute [(a,b)] for b'\na'  -&gt; m [(a, b)]              -- substitute [a] for a'\n[a] -&gt; m [(a, b)]              -- substitute ([b] -&gt;) for m\n[a] -&gt; ([b] -&gt; [(a,b)])\n\n[a] -&gt; [b] -&gt; [(a,b)]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1549594921, "post_id": 54570048, "comment_id": 95967644, "body": "There are some great answers here, but this was the one that caused the penny to drop for me. For some reason I thought the signature of <code>zip</code> should completely replace that of <code>(a -&gt; m b)</code> - when instead I should have been thinking of the signatures as being equal to each other and solving that way."}], "tags": [], "owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "is_accepted": true, "score": 7, "last_activity_date": 1549531549, "creation_date": 1549531549, "answer_id": 54570048, "question_id": 54568993, "link": "https://stackoverflow.com/questions/54568993/how-do-i-derive-the-type-for-this-function/54570048#54570048", "title": "How do I derive the type for this function:", "body": "<p>It helps to do two things before everything else: </p>\n\n<ol>\n<li>put explicit parentheses so that <code>x-&gt;y-&gt;z</code> becomes <code>x-&gt;(y-&gt;z)</code> </li>\n<li>rename type variables so that there are no clashes</li>\n</ol>\n\n<p>Wit this in mind let's rewrite the types</p>\n\n<pre><code>(=&lt;&lt;) :: Monad m =&gt; (a -&gt; m b) -&gt; (m a -&gt; m b)\nzip :: [x] -&gt; ([y] -&gt; [(x, y)])\n</code></pre>\n\n<p>Now match the types. The first argument to <code>=&lt;&lt;</code> is <code>zip</code>, so <code>(a -&gt; m b)</code> is the same as <code>[x] -&gt; ([y] -&gt; [(x, y)])</code>.</p>\n\n<pre><code>a          -&gt;        m b\n[x]        -&gt;        ([y] -&gt; [(x, y)])\n</code></pre>\n\n<p>So <code>a</code> is <code>[x]</code> and <code>m b</code> is <code>([y] -&gt; [(x, y)])</code>. Rewriting <code>-&gt;</code> in prefix notation, we get <code>-&gt; [y] [(x, y)]</code>, which is the same as <code>(-&gt; [y]) [(x, y)]</code>.</p>\n\n<pre><code>m             b\n(-&gt; [y])      [(x, y)]\n</code></pre>\n\n<p>So <code>m</code> is <code>(-&gt; [y])</code> (which is a monad indeed) and <code>b</code> is <code>[(x, y)]</code>. </p>\n\n<p>So now we know what is <code>a</code>, what is <code>b</code> and what is <code>m</code>. Let's rewrite <code>(m a -&gt; m b)</code> in these terms:</p>\n\n<pre><code>(m            a)          -&gt;          (m            b)\n((-&gt; [y])     [x])        -&gt;          ((-&gt; [y])     [(x, y)])\n</code></pre>\n\n<p>Rewriting in the infix style again, we get</p>\n\n<pre><code>([y] -&gt; [x])              -&gt;          ([y] -&gt; [(x, y)])\n</code></pre>\n\n<p>which is, up to variable names, is the same answer GHC is giving you.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1549566841, "last_edit_date": 1549566841, "creation_date": 1549532496, "answer_id": 54570343, "question_id": 54568993, "link": "https://stackoverflow.com/questions/54568993/how-do-i-derive-the-type-for-this-function/54570343#54570343", "title": "How do I derive the type for this function:", "body": "<p>You just write them down one under another, with vertical alignment as an aid, while renaming the type variables consistently so there's no accidental capture:</p>\n\n<pre><code>(=&lt;&lt;) :: Monad m =&gt; (a1  -&gt;     m    b1       ) -&gt; m a1 -&gt; m b1\nzip   ::             [a] -&gt; ([b] -&gt;  [(a, b)])\n                     [a] -&gt; ([b] -&gt;) [(a, b)]\n                     [a] -&gt; (-&gt;) [b] [(a, b)]\n-----------------------------------------------------------\n               a1 ~ [a] ,  m ~ (-&gt;) [b] ,  b1 ~ [(a, b)]               (*)\n-----------------------------------------------------------\n(zip =&lt;&lt;) :: Monad m =&gt;                            m a1 -&gt; m b1\n                                          ((-&gt;) [b]) a1 -&gt; ((-&gt;) [b]) b1\n                                            ([b] -&gt; a1) -&gt; ([b] -&gt; b1)\n                                           ([b] -&gt; [a]) -&gt; ([b] -&gt; [(a, b)])\n                                           ([b] -&gt; [a]) -&gt;  [b] -&gt; [(a, b)]\n</code></pre>\n\n<p>provided that <code>Monad ((-&gt;) [b])</code> instance exists. Which it does:</p>\n\n<pre><code>&gt; :i Monad\nclass Monad (m :: * -&gt; *) where\n    .......\ninstance Monad ((-&gt;) r) -- Defined in `GHC.Base'\n</code></pre>\n\n<p>If we follow the types in the specific case of function monad, we can see that <code>(g =&lt;&lt; f) x == g (f x) x</code>, and so</p>\n\n<pre><code>(zip =&lt;&lt;) f xs = zip (f xs) xs\n</code></pre>\n\n<p>from which it's easier to <em>see</em> its type's meaning.</p>\n\n<hr>\n\n<p><code>(*)</code> is the <a href=\"https://en.wikipedia.org/wiki/Substitution_(logic)\" rel=\"nofollow noreferrer\">substitution</a> resulting from the successful <a href=\"https://en.wikipedia.org/wiki/Unification_(computer_science)\" rel=\"nofollow noreferrer\">unification</a> of the types <code>a1 -&gt; m b1</code> and <code>[a] -&gt; [b] -&gt;  [(a, b)]</code> (which is <code>[a] -&gt; ([b] -&gt;  [(a, b)])</code>, when fully parenthesized, because <code>-&gt;</code>s in types associate to the right). Or in fully prefix form,</p>\n\n<pre><code>    (-&gt;)  a1   ( m            b1       )\n    (-&gt;)  [a]  ( ((-&gt;) [b])   [(a, b)] )\n</code></pre>\n"}], "owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 683, "favorite_count": 1, "accepted_answer_id": 54570048, "answer_count": 3, "score": 14, "last_activity_date": 1549566841, "creation_date": 1549527655, "question_id": 54568993, "link": "https://stackoverflow.com/questions/54568993/how-do-i-derive-the-type-for-this-function", "title": "How do I derive the type for this function:", "body": "<p>I'm trying to get better at playing \"type tetris\". I have the functions:</p>\n\n<pre><code>(=&lt;&lt;) :: Monad m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b\nzip :: [a] -&gt; [b] -&gt; [(a, b)]\n</code></pre>\n\n<p>And GHCi tells me:</p>\n\n<pre><code>(zip =&lt;&lt;) :: ([b] -&gt; [a]) -&gt; [b] -&gt; [(a, b)]\n</code></pre>\n\n<p>I'm having a hard time figuring out how to arrive at that final signature from the first two. My intuition (for lack of a better word) is saying that the first argument of <code>=&lt;&lt;</code> namely <code>a -&gt; mb</code> is somehow reconciled against the signature of <code>zip</code>, and then it should all fall out from that. But I can't understand how to make that leap. Can it be broken down in to a series of easy to follow steps?</p>\n"}, {"tags": ["haskell", "ghc", "haskell-stack"], "owner": {"reputation": 1332, "user_id": 3262785, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/XqvLk.jpg?s=128&g=1", "display_name": "sqd", "link": "https://stackoverflow.com/users/3262785/sqd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1549525339, "creation_date": 1549525339, "question_id": 54568479, "link": "https://stackoverflow.com/questions/54568479/can-i-make-stack-download-the-hs-source-code-to-its-library-directory", "title": "Can I make stack download the .hs source code to its library directory?", "body": "<p>For example, if I do this operation to <code>base</code>, there should be a <code>Prelude.hs</code> in <code>~/.stack/programs/platform/ghc-x.y/lib/ghc-x.y/base-x.y</code>, along with <code>Prelude.hi</code>. So <code>stack unpack</code> wouldn't do as it unpacks the source code in the current directory.</p>\n\n<p>Alternatively, can I extract GHC core from a <code>.hi</code> (<code>ModIface</code>)? That way I don't need the source code.</p>\n"}]