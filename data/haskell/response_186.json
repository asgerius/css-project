[{"tags": ["haskell", "quickcheck"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1533167325, "post_id": 51642939, "comment_id": 90251628, "body": "<code>Num</code> is not a type; it is a typeclass, i.e. a collection of types. As such, you must specifiy a specific type to use. There is no way around this, because the compiler cannot choose a specific instance of <code>Num</code> to use (in most cases; see: monomorphism restriction)"}], "answers": [{"tags": [], "owner": {"reputation": 1469, "user_id": 4876305, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ymQ5f.jpg?s=128&g=1", "display_name": "Gabriel L.", "link": "https://stackoverflow.com/users/4876305/gabriel-l"}, "is_accepted": true, "score": 1, "last_activity_date": 1535471997, "creation_date": 1535471997, "answer_id": 52062010, "question_id": 51642939, "link": "https://stackoverflow.com/questions/51642939/codewars-haskell-random-testing-quickcheck/52062010#52062010", "title": "Codewars (Haskell random testing QuickCheck)", "body": "<blockquote>\n  <p>However is there a way to use Quickcheck when your function signature uses Nums? Do you have to tell it specifically to generate random Int, or Integer, Float or Double?</p>\n</blockquote>\n\n<p>As @AJFarmar states, <code>Num</code> is a type class (family of types), not a specific type.</p>\n\n<p>You CAN use QuickCheck with a function like <code>Num a =&gt; a -&gt; a -&gt; a</code>, you just have to specialize the type through annotation. You can either annotate the <code>updateHealth</code> function or else annotate the property function itself:</p>\n\n<pre><code>it \"handles randoms \" $ \n  property $ \\x y -&gt; (updateHealth :: Int -&gt; Int -&gt; Int) x y == if y &gt; x then 0 else x-y\n</code></pre>\n\n<p>(or)</p>\n\n<pre><code>it \"handles randoms \" $ \n  property ((\\x y -&gt; updateHealth x y == if y &gt; x then 0 else x-y) :: Int -&gt; Int -&gt; Bool)\n</code></pre>\n\n<p>These options are preferable to changing <code>updateHealth</code>'s type at its definition; you want your functions to stay general, so you can specialize them at their call sites if necessary.</p>\n"}], "owner": {"reputation": 479, "user_id": 4496701, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh5.googleusercontent.com/-SST61v329Q0/AAAAAAAAAAI/AAAAAAAAAFM/ihwdZ1nZE7Q/photo.jpg?sz=128", "display_name": "Cliff Stamp", "link": "https://stackoverflow.com/users/4496701/cliff-stamp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 52062010, "answer_count": 1, "score": 1, "last_activity_date": 1535471997, "creation_date": 1533161554, "question_id": 51642939, "link": "https://stackoverflow.com/questions/51642939/codewars-haskell-random-testing-quickcheck", "title": "Codewars (Haskell random testing QuickCheck)", "body": "<p>I have this working code in the random testing part of a Kata:</p>\n\n<pre><code>it \"handles randoms \" $ \n      property $ \\x y -&gt; updateHealth x y == if y &gt; x then 0 else x-y\n</code></pre>\n\n<p>But I wanted the function signature to use Num, but when I did that I get an error because (I believe) it doesn't know how to generate Nums (as it doesn't know what kind of Nums to make?). I just hard set the type to Double as a work around. </p>\n\n<p>However is there a way to use Quickcheck when your function signature uses Nums? Do you have to tell it specifically to generate random Int, or Integer, Float or Double?</p>\n"}, {"tags": ["haskell", "higher-kinded-types", "monoids"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1533149503, "creation_date": 1533149503, "answer_id": 51640412, "question_id": 51640282, "link": "https://stackoverflow.com/questions/51640282/implementing-monoid-for-reader/51640412#51640412", "title": "Implementing monoid for Reader", "body": "<p>The issue here is that your <code>Reader</code> is a type alias instead of a <code>newtype</code>.</p>\n\n<p>Using the former is disallowed by Haskell2010 (which is very conservative in what it is allowed), but GHC allows using type aliases in instances if you turn on the extension reported in the error you posted. Note that in such case it would define an instance for the <em>expansion</em> of the alias, e.g.</p>\n\n<pre><code>instance Monoid a =&gt; Monoid (r -&gt; a) where ...\n</code></pre>\n\n<p>For a <code>Reader</code> type, I'd prefer to use a newtype, even if one needs to wrap/unwrap it when it is used.</p>\n"}, {"comments": [{"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "edited": false, "score": 1, "creation_date": 1600771076, "post_id": 51641961, "comment_id": 113186368, "body": "It&#39;s called <code>Ap</code>: <a href=\"https://hackage.haskell.org/package/base-4.14.0.0/docs/Data-Monoid.html#t:Ap\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.14.0.0/docs/&hellip;</a>"}, {"owner": {"reputation": 3603, "user_id": 165806, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/c889e0a95a3bb07f90ab28ad442f1127?s=128&d=identicon&r=PG", "display_name": "Iceland_jack", "link": "https://stackoverflow.com/users/165806/iceland-jack"}, "edited": false, "score": 0, "creation_date": 1601657331, "post_id": 51641961, "comment_id": 113483591, "body": "now it could be <a href=\"https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/deriving_via.html?highlight=derivingvia#extension-DerivingVia\" rel=\"nofollow noreferrer\">derived via</a> <code>deriving (Semigroup, Monoid) via Ap (ReaderT r m) a</code>"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 5, "last_activity_date": 1533156148, "creation_date": 1533156148, "answer_id": 51641961, "question_id": 51640282, "link": "https://stackoverflow.com/questions/51640282/implementing-monoid-for-reader/51641961#51641961", "title": "Implementing monoid for Reader", "body": "<p>There are two problems. The first is this:</p>\n\n<pre><code>type Reader r = ReaderT r Identity\n</code></pre>\n\n<p>For historical reasons, type synonyms are not allowed in instance declarations. This is the</p>\n\n<pre><code>where T is not a synonym.\n</code></pre>\n\n<p>part of the error. Luckily we can just expand the synonym; this would give us</p>\n\n<pre><code>instance Monoid a =&gt; Monoid (ReaderT r Identity a)\n</code></pre>\n\n<p>but now we would fall afowl of the other part of the error, namely:</p>\n\n<pre><code>All instance types must be of the form (T t1 ... tn)\n</code></pre>\n\n<p>Specifically, <code>Identity</code> is not a type variable, so it doesn't fit this form. Again this restriction is in place primarily for historical reasons. You can remove both restrictions by enabling two language extensions:</p>\n\n<pre><code>{-# LANGUAGE TypeSynonymInstances #-}\n{-# LANGUAGE FlexibleInstances #-}\n</code></pre>\n\n<p>However, in this case it's not needed. The preferable way is to actually use the prescribed form of instance declaration, so:</p>\n\n<pre><code>instance (Applicative f, Monoid m) =&gt; Monoid (ReaderT r f m) where\n    mempty = pure mempty\n    mappend = liftA2 mappend\n</code></pre>\n\n<p>This requires no extensions, and works not just for <code>Reader</code> but for <code>ReaderT</code> transforming any <code>Applicative</code> instance.</p>\n\n<p>However it does make an orphan instance; hence you should consider writing <em>another</em> newtype wrapper.</p>\n\n<pre><code>{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n-- or, instead of GeneralizedNewtypeDeriving, write the obvious instances by hand\nnewtype App f m = App { getApp :: f m } deriving (Functor, Applicative)\ninstance (Applicative f, Monoid m) =&gt; Monoid (App f m) where\n    mempty = pure mempty\n    mappend = liftA2 mappend\n</code></pre>\n\n<p>Then you can use <code>App (Reader r) a</code> as a monoid whenever <code>a</code> is a monoid. I seem to recall this existed somewhere in the standard libraries already, but I can't find it any more...</p>\n"}], "owner": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "accepted_answer_id": 51641961, "answer_count": 2, "score": 1, "last_activity_date": 1533156148, "creation_date": 1533149030, "question_id": 51640282, "link": "https://stackoverflow.com/questions/51640282/implementing-monoid-for-reader", "title": "Implementing monoid for Reader", "body": "<p>I may be naive in my thinking here but I think if the right hand value of a <code>Reader</code> is an instance of <code>Monoid</code> then a <code>Monoid</code> could be defined for <code>Reader</code>... Here is my implementation:</p>\n\n<pre><code>instance Monoid a =&gt; Monoid (Reader r a) where\n  mempty = pure mempty\n  mappend ra rb = (&lt;&gt;) &lt;$&gt; ra &lt;*&gt; rb\n</code></pre>\n\n<p>This however results in the following error:</p>\n\n<pre><code>    \u2022 Illegal instance declaration for \u2018Monoid (Reader r a)\u2019\n        (All instance types must be of the form (T t1 ... tn)\n         where T is not a synonym.\n         Use TypeSynonymInstances if you want to disable this.)\n    \u2022 In the instance declaration for \u2018Monoid (Reader r a)\u2019\n    |\n413 | instance Monoid a =&gt; Monoid (Reader r a) where\n    |                      ^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I am unsure what this error actually means, and why I am unable to implement <code>Monoid</code> for <code>Reader</code> though I presume it is something to do with <code>Reader</code> being a higher kinded type?</p>\n"}, {"tags": ["haskell", "initialization", "vhdl", "fpga", "clash"], "comments": [{"owner": {"reputation": 13458, "user_id": 1773798, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/4Ljqn.png?s=128&g=1", "display_name": "Renaud Pacalet", "link": "https://stackoverflow.com/users/1773798/renaud-pacalet"}, "edited": false, "score": 0, "creation_date": 1533134902, "post_id": 51635483, "comment_id": 90236912, "body": "Wire your <code>RESET</code> input to a slide switch or a press-button of your board?"}, {"owner": {"reputation": 6607, "user_id": 6717178, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/QbOLx.jpg?s=128&g=1", "display_name": "JHBonarius", "link": "https://stackoverflow.com/users/6717178/jhbonarius"}, "edited": false, "score": 0, "creation_date": 1533135008, "post_id": 51635483, "comment_id": 90236991, "body": "<code>\\s&#39;\\ </code> wait what? is that a legal VHDL name? The SO parser will not handle it properly"}, {"owner": {"reputation": 13458, "user_id": 1773798, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/4Ljqn.png?s=128&g=1", "display_name": "Renaud Pacalet", "link": "https://stackoverflow.com/users/1773798/renaud-pacalet"}, "reply_to_user": {"reputation": 6607, "user_id": 6717178, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/QbOLx.jpg?s=128&g=1", "display_name": "JHBonarius", "link": "https://stackoverflow.com/users/6717178/jhbonarius"}, "edited": false, "score": 1, "creation_date": 1533136244, "post_id": 51635483, "comment_id": 90237852, "body": "@JHBonarius VHDL extended identifiers (see the LRM, clause 15.4.3). The VHDL parser (if it&#39;s a real one) should handle them properly."}, {"owner": {"reputation": 14213, "user_id": 1155120, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MPkOC.jpg?s=128&g=1", "display_name": "user1155120", "link": "https://stackoverflow.com/users/1155120/user1155120"}, "edited": false, "score": 0, "creation_date": 1533169773, "post_id": 51635483, "comment_id": 90252096, "body": "<b><i>...; but how would I ensure a similar reset signal on the real board?</i></b> This doesn&#39;t appear to be a programming question. A Xilinx FPGA would run without a reset unless defaulting to &#39;0&#39;&#39;s everywhere locks the design up (It doesn&#39;t adding defaults to all your signed/unsigned signal declarations shows). After creating a package blinkertop_types for type tup2, throwing in a function tagToEnum and your testbench simulates. Testing for non-zero in tagToEnum and the led has a period of 20 clocks, testing for zero won&#39;t finish in my lifetime. Your board LED is either dim or not toggling. Which?"}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "reply_to_user": {"reputation": 14213, "user_id": 1155120, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MPkOC.jpg?s=128&g=1", "display_name": "user1155120", "link": "https://stackoverflow.com/users/1155120/user1155120"}, "edited": false, "score": 0, "creation_date": 1533173665, "post_id": 51635483, "comment_id": 90252757, "body": "@user1155120: in my original question, the VHDL was copied from the version I used for simulation, with a transition every 100 cycles instead of every 32,000,000. In the version I run on the hardware, it should be one transition (on -&gt; off or off -&gt; on) per second, so I should be able to see it blinking"}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "reply_to_user": {"reputation": 14213, "user_id": 1155120, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MPkOC.jpg?s=128&g=1", "display_name": "user1155120", "link": "https://stackoverflow.com/users/1155120/user1155120"}, "edited": false, "score": 0, "creation_date": 1533173959, "post_id": 51635483, "comment_id": 90252802, "body": "@user1155120: I don&#39;t have access to the generated code right now, but I&#39;ll  add the definitions from <code>blinkertop_types.vhdl</code> to the question text."}, {"owner": {"reputation": 14213, "user_id": 1155120, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MPkOC.jpg?s=128&g=1", "display_name": "user1155120", "link": "https://stackoverflow.com/users/1155120/user1155120"}, "edited": false, "score": 0, "creation_date": 1533239358, "post_id": 51635483, "comment_id": 90285735, "body": "You&#39;re asking an XY problem non-programming question. A Xilinx FPGA doesn&#39;t need reset (all uninitialized bits are loaded to &#39;0&#39;). For simulation provide initial values to  your signed/unsigned values (including record types tup2 - <code>:= (false,(others =&gt; &#39;0&#39;));</code>and it runs, Boolean defaults to false). You don&#39;t provide sufficient information to determine why the board won&#39;t run (the cumbersome design could be too slow). Do a simple VHDL implementation directly to board to validate your methodology. What board, what device? Any Xilinx warnings/errors? What&#39;s the schematic show?"}], "answers": [{"comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1536303636, "post_id": 51733837, "comment_id": 91382569, "body": "I ended up doing this in a small VHDL wrapper around my CLaSH code, see e.g. here: <a href=\"https://github.com/gergoerdi/clash-sandbox/blob/c5e5e5362cf4cb0e9f20f7c236e71380fc72717c/projects/brainfuck/src-vhdl/Top.vhdl#L27\" rel=\"nofollow noreferrer\">github.com/gergoerdi/clash-sandbox/blob/&hellip;</a>"}], "tags": [], "owner": {"reputation": 26, "user_id": 4966446, "user_type": "registered", "profile_image": "https://graph.facebook.com/10155706666205085/picture?type=large", "display_name": "Ola Gr&#248;ttvik", "link": "https://stackoverflow.com/users/4966446/ola-gr%c3%b8ttvik"}, "is_accepted": true, "score": 1, "last_activity_date": 1533668983, "creation_date": 1533668983, "answer_id": 51733837, "question_id": 51635483, "link": "https://stackoverflow.com/questions/51635483/initializing-registers/51733837#51733837", "title": "Initializing registers", "body": "<p>One solution is to create a power-on-reset sequence in your FPGA logic. This can be implemented as a counter, and asserting reset as long as the counter value is below some constant. When the counter exceeds the constant value, deassert the reset.</p>\n"}], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 356, "favorite_count": 1, "accepted_answer_id": 51733837, "answer_count": 1, "score": 2, "last_activity_date": 1533668983, "creation_date": 1533132636, "last_edit_date": 1533173573, "question_id": 51635483, "link": "https://stackoverflow.com/questions/51635483/initializing-registers", "title": "Initializing registers", "body": "<p>I have a very simple synchronous circuit that is supposed to blink an LED:</p>\n\n<pre><code>module Blinker where\n\nimport Clash.Prelude\nimport Data.Word\n\n{-# NOINLINE topEntity #-}\n{-# ANN topEntity\n  (Synthesize\n    { t_name   = \"blinkerTop\"\n    , t_inputs = [PortName \"CLK_32MHZ\", PortName \"RESET\"]\n    , t_output = PortName \"LED\"\n    }) #-}\ntopEntity\n  :: Clock System Source\n  -&gt; Reset System Asynchronous\n  -&gt; Signal System Bit\ntopEntity = exposeClockReset $ tickTock 32000000\n\ntickTock :: (HiddenClockReset domain gated synchronous) =&gt; Word32 -&gt; Signal domain Bit\ntickTock n = mealy step (False, 0) (pure ())\n  where\n    step (s, k) () =\n        let k' = k + 1\n            finished = k' == n\n            s' = if finished then not s else s\n            k'' = if finished then 0 else k'\n        in ((s', k''), if s' then high else low)\n</code></pre>\n\n<p>Since it doesn't work when I upload it to a real FPGA board, I thought I'd try it in Xilinx's simulator, with the following testbench:</p>\n\n<pre><code>LIBRARY ieee;\nUSE ieee.std_logic_1164.ALL;\n\nENTITY testbench IS\nEND testbench;\n\nARCHITECTURE behavior OF testbench IS \n    COMPONENT blinkerTop\n    PORT(\n         CLK_32MHZ : IN  std_logic;\n         RESET : IN  std_logic;\n         LED : OUT  std_logic\n        );\n    END COMPONENT;\n\n   signal CLK_32MHZ : std_logic := '0';\n   signal RESET : std_logic := '0';\n   signal LED : std_logic;\n   constant CLK_32MHZ_period : time := 31.2 ns;\n\nBEGIN \n   uut: blinkerTop PORT MAP (\n          CLK_32MHZ =&gt; CLK_32MHZ,\n          RESET =&gt; RESET,\n          LED =&gt; LED\n        );\n\n   CLK_32MHZ_process :process\n   begin\n        CLK_32MHZ &lt;= '0';\n        wait for CLK_32MHZ_period/2;\n        CLK_32MHZ &lt;= '1';\n        wait for CLK_32MHZ_period/2;\n   end process;\nEND;\n</code></pre>\n\n<p>In the simulator, this matches the real life FPGA board's behaviour: the <code>LED</code> signal stays low.</p>\n\n<p>I looked at the generated VHDL and this is what it looks like:</p>\n\n<pre><code>-- Automatically generated VHDL-93\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\nuse IEEE.NUMERIC_STD.ALL;\nuse IEEE.MATH_REAL.ALL;\nuse std.textio.all;\nuse work.all;\nuse work.blinkertop_types.all;\n\nentity blinkerTop is\n  port(-- clock\n       CLK_32MHZ : in std_logic;\n       -- asynchronous reset: active high\n       RESET     : in std_logic;\n       LED       : out std_logic);\nend;\n\narchitecture structural of blinkerTop is\n  signal \\#tup_app_arg\\       : unsigned(31 downto 0);\n  signal \\s'\\                 : boolean;\n  signal \\#s'_case_alt\\       : boolean;\n  signal s                    : boolean;\n  signal \\#finished_case_alt\\ : boolean;\n  signal \\#k'_case_alt\\       : unsigned(31 downto 0);\n  signal ds                   : blinkertop_types.tup2;\n  signal \\#finished_app_arg\\  : signed(63 downto 0);\n  signal x                    : unsigned(63 downto 0);\n  signal x_0                  : blinkertop_types.tup2;\n  signal \\x#\\                 : unsigned(63 downto 0);\n  signal k                    : unsigned(31 downto 0);\n  signal \\#w\\                 : unsigned(63 downto 0);\nbegin\n  LED &lt;= '1' when \\s'\\ else\n         '0';\n\n  \\#tup_app_arg\\ &lt;= resize(to_unsigned(0,64),32) when \\#finished_case_alt\\ else\n                    \\#k'_case_alt\\;\n\n  \\s'\\ &lt;= \\#s'_case_alt\\ when \\#finished_case_alt\\ else\n          s;\n\n  \\#s'_case_alt\\ &lt;= false when s else\n                    true;\n\n  s &lt;= ds.tup2_sel0;\n\n  \\#finished_case_alt\\ &lt;= tagToEnum(\\#finished_app_arg\\);\n\n  \\#w\\ &lt;= (\\x#\\ + to_unsigned(1,64));\n\n  \\#k'_case_alt\\ &lt;= resize((resize(\\#w\\(31 downto 0),64)),32);\n\n  -- register begin \n  blinkertop_register : process(CLK_32MHZ,RESET)\n  begin\n    if RESET = '1' then\n      ds &lt;= ( tup2_sel0 =&gt; false, tup2_sel1 =&gt; resize(to_unsigned(0,64),32) )\n      -- pragma translate_off\n      after 1 ps\n      -- pragma translate_on\n      ;\n    elsif rising_edge(CLK_32MHZ) then\n      ds &lt;= x_0\n      -- pragma translate_off\n      after 1 ps\n      -- pragma translate_on\n      ;\n    end if;\n  end process;\n  -- register end\n\n  \\#finished_app_arg\\ &lt;= to_signed(1,64) when x = to_unsigned(32000000,64) else to_signed(0,64);\n\n  x &lt;= resize(\\#k'_case_alt\\,64);\n\n  x_0 &lt;= ( tup2_sel0 =&gt; \\s'\\\n         , tup2_sel1 =&gt; \\#tup_app_arg\\ );\n\n  \\x#\\ &lt;= resize(k,64);\n\n  k &lt;= ds.tup2_sel1;\nend;\n</code></pre>\n\n<p>I noticed that the internal state is not initialized, only assigned on reset. So this gave me an idea to add a reset process to the testbench:</p>\n\n<pre><code>stim_proc: process\nbegin       \n   RESET &lt;= '1';  \n   wait for 100 ns; \n   RESET &lt;= '0';\n   wait;\nend process;\n</code></pre>\n\n<p>With this change, afterwards I see <code>LED</code> starting to blink in the simulator. [*]</p>\n\n<p>That takes care of the simulation; but how would I ensure a similar reset signal on the real board? </p>\n\n<p>[*] For the simulation, of course, I have increased the frequency from 32,000,000 cycles to just 100 cycles; otherwise I'd have to run the simulator for ages just to see the first transition.</p>\n"}, {"tags": ["haskell", "types", "automatic-differentiation"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533127711, "post_id": 51633624, "comment_id": 90231577, "body": "Well you did not implement the <code>RealFloat</code> for <code>Dual</code>."}, {"owner": {"reputation": 268, "user_id": 2604678, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/RTHe3.png?s=128&g=1", "display_name": "Ali Caglayan", "link": "https://stackoverflow.com/users/2604678/ali-caglayan"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533128136, "post_id": 51633624, "comment_id": 90231871, "body": "@WillemVanOnsem I can&#39;t because that would make me eventually implement <code>Ord</code> for <code>Dual</code> which it really can&#39;t do."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1533128797, "post_id": 51633624, "comment_id": 90232359, "body": "What is the definition of <code>dualPart</code>? Why does <code>autoDiff</code> have a <code>Floating</code> constraint?"}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1533129037, "post_id": 51633624, "comment_id": 90232560, "body": "Btw, take note that that <code>Dual</code> conflicts with <code>Dual</code> in <code>Data.Monoid</code>, and that <code>:+</code> conflicts with <code>:+</code> in <code>Data.Complex</code>."}, {"owner": {"reputation": 268, "user_id": 2604678, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/RTHe3.png?s=128&g=1", "display_name": "Ali Caglayan", "link": "https://stackoverflow.com/users/2604678/ali-caglayan"}, "reply_to_user": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1533129105, "post_id": 51633624, "comment_id": 90232611, "body": "@DannyuNDos I am not using either of those."}, {"owner": {"reputation": 268, "user_id": 2604678, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/RTHe3.png?s=128&g=1", "display_name": "Ali Caglayan", "link": "https://stackoverflow.com/users/2604678/ali-caglayan"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1533129134, "post_id": 51633624, "comment_id": 90232639, "body": "@DanielWagner just like in <code>Data.Complex</code> we have <code>dualPart :: Dual a -&gt; a</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1533129392, "post_id": 51633624, "comment_id": 90232833, "body": "@AliCaglayan And the other question? Why does <code>autoDiff</code> have a <code>Floating</code> constraint? Nothing in <code>autoDiff</code> appears to need it, if the <code>dualPart</code> type signature you gave is accurate, and removing it should remove the need for a <code>RealFloat</code> instance on the wrapped type."}, {"owner": {"reputation": 268, "user_id": 2604678, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/RTHe3.png?s=128&g=1", "display_name": "Ali Caglayan", "link": "https://stackoverflow.com/users/2604678/ali-caglayan"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1533129409, "post_id": 51633624, "comment_id": 90232849, "body": "@DanielWagner The floating constraint is so that I can do floating calculations on dual using their parts. For example sin of a dual requires sin of its parts."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1533129460, "post_id": 51633624, "comment_id": 90232885, "body": "@AliCaglayan <code>autoDiff</code> does not call <code>sin</code> anywhere. Only <code>Num</code> is needed (for the <code>1</code> literal)."}, {"owner": {"reputation": 268, "user_id": 2604678, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/RTHe3.png?s=128&g=1", "display_name": "Ali Caglayan", "link": "https://stackoverflow.com/users/2604678/ali-caglayan"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1533130635, "post_id": 51633624, "comment_id": 90233755, "body": "@DanielWagner Yes that has fixed it. It seems so easy now."}], "answers": [{"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": false, "score": 0, "last_activity_date": 1533588259, "creation_date": 1533588259, "answer_id": 51715356, "question_id": 51633624, "link": "https://stackoverflow.com/questions/51633624/how-to-implement-automatic-differentiation-in-haskell/51715356#51715356", "title": "How to implement automatic differentiation in Haskell?", "body": "<p>You try:</p>\n\n<pre><code>autoDiff (autoDiff sin)\n</code></pre>\n\n<p>And Haskell says that:</p>\n\n<pre><code>No instance for (RealFloat (Dual a0)) arising from a use of \u2018it\u2019\n</code></pre>\n\n<p>Now we could ask where this comes from but let\u2019s write down the types we have and see if we can work out the error without even looking at what it says:</p>\n\n<pre><code>autoDiff :: Num a =&gt; (Dual a -&gt; Dual a) -&gt; a -&gt; a\nsin :: Floating a =&gt; a -&gt; a\n</code></pre>\n\n<p>When you work out <code>autoDiff sin</code>, you must make <code>sin</code> unify with <code>Dual a -&gt; Dual a</code> so this requires <code>Floating a</code>:</p>\n\n<pre><code>autoDiff sin :: (Floating (Dual a), Num a) =&gt; a -&gt; a\n</code></pre>\n\n<p>Now you want to take <code>autoDiff</code> of this and the same happens:</p>\n\n<pre><code>autoDiff (autoDiff sin) :: (Floating (Dual (Dual a)), Num a) =&gt; a -&gt; a\n</code></pre>\n\n<p>Now when you type <code>autoDiff (autoDiff sin) 1</code>, Haskell determines that this has type <code>(Floating (Dual (Dual a)), Num a) =&gt; a</code> but it needs to pick some <code>a</code> to use to print the result. It will try <code>Integer</code> first and then <code>Double</code> and then it will fail.</p>\n\n<p>Haskell is looking to satisfy the constraint <code>Floating (Dual (Dual a))</code> so it looks for all the ways it can derive an instance for <code>Dual x</code> and it turns out it needs <code>RealFloat x</code> to do that. So now it has reduced the constraint from <code>Floating (Dual (Dual a))</code> to <code>RealFloat (Dual a)</code> and it turns out that there is no way for it to derive an instance of <code>RealFloat (Dual a)</code> so it fails to compile.</p>\n"}], "owner": {"reputation": 268, "user_id": 2604678, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/RTHe3.png?s=128&g=1", "display_name": "Ali Caglayan", "link": "https://stackoverflow.com/users/2604678/ali-caglayan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 377, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1533588259, "creation_date": 1533127476, "question_id": 51633624, "link": "https://stackoverflow.com/questions/51633624/how-to-implement-automatic-differentiation-in-haskell", "title": "How to implement automatic differentiation in Haskell?", "body": "<p>So I have a Dual number class:</p>\n\n<pre><code>data Dual a = !a :+ !a\ninstance [safe] Eq a =&gt; Eq (Dual a)\ninstance [safe] RealFloat a =&gt; Floating (Dual a)\ninstance [safe] RealFloat a =&gt; Fractional (Dual a)\ninstance [safe] RealFloat a =&gt; Num (Dual a)\ninstance [safe] Read a =&gt; Read (Dual a)\ninstance [safe] Show a =&gt; Show (Dual a)\n</code></pre>\n\n<p>Now I want to write a function that takes in a numeric function and gives its derivative as a numeric function. (Using automatic differentiation).</p>\n\n<p>Here is what I have come up with:</p>\n\n<pre><code>{-# LANGUAGE FlexibleContexts #-}\nautoDiff :: Floating a =&gt; (Dual a -&gt; Dual a) -&gt; a -&gt; a\nautoDiff f = dualPart . f . (flip (:+) 1)\n</code></pre>\n\n<p>Now take for example <code>sin</code>, here is what I get:</p>\n\n<pre><code>*AutoDiff&gt; :t sin\nsin :: Floating a =&gt; a -&gt; a\n\n*AutoDiff&gt; :t autoDiff sin\nautoDiff sin :: RealFloat a =&gt; a -&gt; a\n\n*AutoDiff&gt; :t autoDiff (autoDiff sin)\nautoDiff (autoDiff sin) :: (RealFloat (Dual a), RealFloat a) =&gt; a -&gt; a\n\n*AutoDiff&gt; sin 1\n0.8414709848078965\n\n*AutoDiff&gt; (autoDiff sin) 1\n0.5403023058681398\n\n*AutoDiff&gt; (autoDiff (autoDiff sin)) 1\n\n&lt;interactive&gt;:109:1: error:\n    \u2022 No instance for (RealFloat (Dual a0)) arising from a use of \u2018it\u2019\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>I have no idea what the error message is telling me. I have tried playing around with <code>forall</code> but I can't take a generic function, stick duals through it and return a generic function.</p>\n\n<p>So how can I iterate <code>autoDiff</code> to get higher derivatives and is it even possible in Haskell's type system?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533119901, "post_id": 51631142, "comment_id": 90226502, "body": "Well in ghci, you basically each time write <code>let</code> in front of this, and thus redefine the function at every line. If you want to define a multi-line function, you need the following approach: <a href=\"https://stackoverflow.com/questions/2846050/how-to-define-a-function-in-ghci-across-multiple-lines\" title=\"how to define a function in ghci across multiple lines\">stackoverflow.com/questions/2846050/&hellip;</a>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533119974, "post_id": 51631142, "comment_id": 90226548, "body": "So yes, the definition still points to the <i>old</i> version of <code>doubleMe</code>. You can see an identifier as a way to <i>refer</i> to some object."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1533137157, "post_id": 51631142, "comment_id": 90238464, "body": "Please do not add code (or error messages, etc.) to your posts as screenshots -- paste them as text instead."}], "answers": [{"tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 1, "last_activity_date": 1533119919, "creation_date": 1533119919, "answer_id": 51631240, "question_id": 51631142, "link": "https://stackoverflow.com/questions/51631142/redefine-function-in-haskell/51631240#51631240", "title": "redefine function in haskell", "body": "<p>you have to execute again <code>doubleUs x y = doubleMe x + doubleMe y</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 6, "last_activity_date": 1533120877, "last_edit_date": 1533120877, "creation_date": 1533120067, "answer_id": 51631288, "question_id": 51631142, "link": "https://stackoverflow.com/questions/51631142/redefine-function-in-haskell/51631288#51631288", "title": "redefine function in haskell", "body": "<p>The article isn't talking about having two definitions of the same function in a program where the latter overrides the former. It's talking about going into your Haskell file and replacing the old definition with the new one.</p>\n\n<p>Generally you can't define two functions with same name in the same scope at all. Your code compiled in GHCi because each definition you enter into GHCi is seen as its own <code>let</code> statement, so it starts a new scope. So <code>doubleUs</code> used the old definition of <code>doubleMe</code> because the new one is in a different scope that <code>doubleUs</code> doesn't have access to (and Haskell is lexically scoped, so definitions from inner scopes don't affect functions from the outer scope). If you entered that code into a Haskell file and tried to compile it with GHC, you'd get a warning about an unreachable case because both definitions of <code>doubleMe</code> would be seen as a single definition with two patterns that overlap.</p>\n"}], "owner": {"reputation": 13, "user_id": 10165232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83b0595e03c8b6576af7d467e8a34f33?s=128&d=identicon&r=PG&f=1", "display_name": "mrs1mple", "link": "https://stackoverflow.com/users/10165232/mrs1mple"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 592, "favorite_count": 0, "accepted_answer_id": 51631288, "answer_count": 2, "score": 1, "last_activity_date": 1533137358, "creation_date": 1533119611, "last_edit_date": 1533137358, "question_id": 51631142, "link": "https://stackoverflow.com/questions/51631142/redefine-function-in-haskell", "title": "redefine function in haskell", "body": "<p><img src=\"https://i.stack.imgur.com/hbU59.png\" alt=\"Is this right or bug?\"></p>\n\n<p>I read this article.</p>\n\n<blockquote>\n  <p>This is a very simple example of a common pattern you will see throughout Haskell. Making basic functions that are obviously correct and then combining them into more complex functions. This way you also avoid repetition. What if some mathematicians figured out that 2 is actually 3 and you had to change your program? You could just redefine <code>doubleMe</code> to be <code>x + x + x</code> and since <code>doubleUs</code> calls <code>doubleMe</code>, it would automatically work in this strange new world where 2 is 3.</p>\n</blockquote>\n\n<p>When I called <code>doubleUs 3 4</code> it should return <code>21</code> because I redefined the <code>doubleMe</code> function, but the function returned <code>14</code>.</p>\n"}, {"tags": ["haskell", "exception"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1533112858, "post_id": 51628856, "comment_id": 90222037, "body": "<code>putStrLn &quot;\\nFound entry: &quot; ++ output</code> means <code>(putStrLn &quot;\\nFound entry: &quot;) ++ output</code>. Use instead <code>putStrLn (&quot;\\nFound entry: &quot; ++ output)</code>."}], "answers": [{"comments": [{"owner": {"reputation": 454, "user_id": 4240261, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ff9a37dd735232d0e1ffa2e7af1823?s=128&d=identicon&r=PG", "display_name": "Mika Feiler", "link": "https://stackoverflow.com/users/4240261/mika-feiler"}, "edited": false, "score": 2, "creation_date": 1533116886, "post_id": 51630089, "comment_id": 90224564, "body": "also, it is worth noting that there is the <code>$</code> operator, that has a greater precedence than almost everything, and effectively works as if just wrapping expressions on both sides in parentheses, so <code>putStrLn $ &quot;\\nFound entry: &quot; ++ output</code> becomes <code>(putStrLn) (&quot;\\nFound entry: &quot; ++ output)</code> which means the same as <code>putStrln (&quot;\\nFound entry: &quot; ++ output)</code>"}, {"owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "reply_to_user": {"reputation": 454, "user_id": 4240261, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ff9a37dd735232d0e1ffa2e7af1823?s=128&d=identicon&r=PG", "display_name": "Mika Feiler", "link": "https://stackoverflow.com/users/4240261/mika-feiler"}, "edited": false, "score": 1, "creation_date": 1533116939, "post_id": 51630089, "comment_id": 90224598, "body": "sure, probably I&#39;ll complete my answer"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1533129177, "post_id": 51630089, "comment_id": 90232675, "body": "Left associativity of function application is not involved here. The real culprit is that function application has higher precedence than any infix operator."}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 3, "last_activity_date": 1533116983, "last_edit_date": 1533116983, "creation_date": 1533116544, "answer_id": 51630089, "question_id": 51628856, "link": "https://stackoverflow.com/questions/51628856/combining-maybe-io-and-functions-outside-context-result-in-error/51630089#51630089", "title": "Combining Maybe, IO and functions outside context result in error", "body": "<p>In Haskell function application is left associative, which means the expression:</p>\n\n<pre><code>putStrLn \"\\nFound entry: \" ++ output\n</code></pre>\n\n<p>is parsed as</p>\n\n<pre><code>(putStrLn \"\\nFound entry: \") ++ output\n</code></pre>\n\n<p>But you probably expected it to be parsed as:</p>\n\n<pre><code>putStrLn (\"\\nFound entry: \" ++ output)\n</code></pre>\n\n<p>That's why you need either to specify the parentheses explicitly or use <code>$</code> operator:</p>\n\n<pre><code>putStrLn $ \"\\nFound entry: \" ++ output\n</code></pre>\n\n<p>But notice, that <code>output</code> is of <code>SerialNumber</code> type, but <code>(++)</code> takes two lists as an argument. Therefore, you need to revise, which behaviour you want to specify to your program.</p>\n"}], "owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 51630089, "answer_count": 1, "score": -1, "last_activity_date": 1533116983, "creation_date": 1533112735, "question_id": 51628856, "link": "https://stackoverflow.com/questions/51628856/combining-maybe-io-and-functions-outside-context-result-in-error", "title": "Combining Maybe, IO and functions outside context result in error", "body": "<p>Can't figure out how to make code below work. Tried all possible typesigs I think. </p>\n\n<p>Code </p>\n\n<pre><code>type SerialNumber = (String, Int)\nserialList :: Map.Map String SerialNumber\nserialList = Map.fromList [(\"belt drive\",(\"BD\",0001))\n                          ,(\"chain drive\",(\"CD\",0002))\n                          ,(\"drive pulley\",(\"DP\",0003))\n                          ,(\"drive sprocket\",(\"DS\",0004))\n                          ]\nfindSerial :: Ord k =&gt; k -&gt; Map.Map k a -&gt; Maybe a\nfindSerial input = Map.lookup input\noutOfContext (Just (a, b)) = (a, b)\ngetSerialFromUser :: IO ()\ngetSerialFromUser = do\n                    putStr \"Lookup part: \"\n                    input &lt;- getLine\n                    let output = findSerial input serialList\n                    putStrLn \"\\nFound entry: \" ++ output\n</code></pre>\n\n<p>Error</p>\n\n<pre><code>    \u2022 Couldn't match expected type \u2018[()]\u2019\n                  with actual type \u2018Maybe SerialNumber\u2019\n    \u2022 In the second argument of \u2018(++)\u2019, namely \u2018output\u2019\n      In a stmt of a 'do' block: putStrLn \"\\nFound entry: \" ++ output\n      In the expression:\n        do putStr \"Lookup part: \"\n           input &lt;- getLine\n           let output = findSerial input serialList\n           putStrLn \"\\nFound entry: \" ++ output\n   |\n62 |                     putStrLn \"\\nFound entry: \" ++ output\n</code></pre>\n\n<p>Trying my first steps in Haskell without the books so please be gentle. </p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": false, "score": 6, "last_activity_date": 1533104996, "last_edit_date": 1533104996, "creation_date": 1533104611, "answer_id": 51626603, "question_id": 51626308, "link": "https://stackoverflow.com/questions/51626308/getting-value-out-of-context-or-leaving-them-in/51626603#51626603", "title": "Getting value out of context or leaving them in?", "body": "<p>Assuming I understand it correctly, I think your question essentially boils down to \u201cIs it idiomatic in Haskell to write and use <a href=\"https://wiki.haskell.org/Partial_functions\" rel=\"noreferrer\">partial functions</a>?\u201d (which your <code>outOfContext</code> function is, since it\u2019s just a specialized form of the built-in partial function <code>fromJust</code>). The answer to that question is a resounding <strong>no</strong>. Partial functions are avoided whenever possible, and code that uses them can usually be refactored into code that doesn\u2019t.</p>\n\n<p>The reason partial functions are avoided is that they voluntarily compromise the effectiveness of the type system. In Haskell, when a function has type <code>X -&gt; Y</code>, it is generally assumed that providing it an <code>X</code> will actually produce a <code>Y</code>, and that it will not do something else entirely (i.e. crash). If you have a function that <em>doesn\u2019t</em> always succeed, reflecting that information in the type by writing <code>X -&gt; Maybe Y</code> forces the caller to somehow handle the <code>Nothing</code> case, and it can either handle it directly or defer the failure further to <em>its</em> caller (by also producing a <code>Maybe</code>). This is great, since it means that programs that typecheck won\u2019t crash at runtime. The program might still have logical errors, but knowing before even running the program that it won\u2019t blow up is still pretty nice.</p>\n\n<p>Partial functions throw this guarantee out the window. Any program that uses a partial function will crash at runtime if the function\u2019s preconditions are accidentally violated, and since those preconditions are not reflected in the type system, the compiler cannot statically enforce them. A program might be logically correct at the time of its writing, but without enforcing that correctness with the type system, further modification, extension, or refactoring could easily introduce a bug by mistake.</p>\n\n<p>For example, a programmer might write the expression</p>\n\n<pre><code>if isJust n then fromJust n else 0\n</code></pre>\n\n<p>which will certainly never crash at runtime, since <code>fromJust</code>\u2019s precondition is always checked before it is called. However, the type system cannot enforce this, and a further refactoring might swap the branches of the <code>if</code>, or it might move the <code>fromJust n</code> to a different part of the program entirely and accidentally omit the <code>isJust</code> check. The program will still compile, but it may fail at runtime.</p>\n\n<p>In contrast, if the programmer avoids partial functions, using explicit pattern-matching with <code>case</code> or total functions like <code>maybe</code> and <code>fromMaybe</code>, they can replace the tricky conditional above with something like</p>\n\n<pre><code>fromMaybe 0 n\n</code></pre>\n\n<p>which is not only clearer, but ensures any accidental misuse will simply fail to typecheck, and the potential bug will be detected much earlier.</p>\n\n<p>For some concrete examples of how the type system can be a powerful ally if you stick exclusively to total functions, as well as some good food for thought about different ways to encode type safety for your domain into Haskell\u2019s type system, I highly recommend reading Matt Parsons\u2019s wonderful blog post, <a href=\"http://www.parsonsmatt.org/2017/10/11/type_safety_back_and_forth.html\" rel=\"noreferrer\">Type Safety Back and Forth</a>, which explores these ideas in more depth. It additionally highlights how using <code>Maybe</code> as a catch-all representation of failure can be awkward, and it shows how the type system can be used to enforce preconditions to avoid needing to propagate <code>Maybe</code> throughout an entire system.</p>\n"}], "owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1533129661, "creation_date": 1533103377, "last_edit_date": 1533129661, "question_id": 51626308, "link": "https://stackoverflow.com/questions/51626308/getting-value-out-of-context-or-leaving-them-in", "title": "Getting value out of context or leaving them in?", "body": "<p>Assume code below. Is there a quicker way to get the contextual values out of <code>findSerial</code> rather than writing a function like <code>outOfContext</code>?\nThe underlying question is: does one usually stick within context and use Functors, Applicatives, Monoids and Monads to get the job done, or is it better to take it out of context and apply the usual non-contextual computation methods. In brief: don't want to learn Haskell all wrong, since it takes time enough as it does.</p>\n\n<pre><code>import qualified Data.Map as Map\ntype SerialNumber = (String, Int)\nserialList :: Map.Map String SerialNumber\nserialList = Map.fromList [(\"belt drive\",(\"BD\",0001))\n                          ,(\"chain drive\",(\"CD\",0002))\n                          ,(\"drive pulley\",(\"DP\",0003))\n                          ,(\"drive sprocket\",(\"DS\",0004))\n                          ]\nfindSerial :: Ord k =&gt; k -&gt; Map.Map k a -&gt; Maybe a\nfindSerial input = Map.lookup input\noutOfContext (Just (a, b)) = (a, b)\n</code></pre>\n"}, {"tags": ["haskell", "archlinux", "haskell-stack"], "answers": [{"comments": [{"owner": {"reputation": 934, "user_id": 1136236, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5c4f2b250d57a1ebf233426012487539?s=128&d=identicon&r=PG", "display_name": "Jonathan Dewein", "link": "https://stackoverflow.com/users/1136236/jonathan-dewein"}, "edited": false, "score": 0, "creation_date": 1533127289, "post_id": 51625440, "comment_id": 90231265, "body": "It\u2019s not just ghc-mod. I said that it\u2019s any package."}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "reply_to_user": {"reputation": 934, "user_id": 1136236, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5c4f2b250d57a1ebf233426012487539?s=128&d=identicon&r=PG", "display_name": "Jonathan Dewein", "link": "https://stackoverflow.com/users/1136236/jonathan-dewein"}, "edited": false, "score": 1, "creation_date": 1533139700, "post_id": 51625440, "comment_id": 90239984, "body": "You haven&#39;t demonstrated any other packages giving that error. Try removing the <code>extra-deps</code> and trying again."}], "tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": false, "score": 2, "last_activity_date": 1533098441, "creation_date": 1533098441, "answer_id": 51625440, "question_id": 51623611, "link": "https://stackoverflow.com/questions/51623611/unable-to-install-or-build-ghc-mod-or-other-packages-with-stack/51625440#51625440", "title": "Unable to install or build ghc-mod or other packages with Stack", "body": "<p>The problem is that ghc-mod doesn't support the latest version of GHC. There are multiple questions about this already, e.g.:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51293944/369198\">Can not install GHC-Mod</a></li>\n<li><a href=\"https://stackoverflow.com/q/50948485/369198\">stack install ghc-mod fails with dependencies conflicts on OSX 10.13.4</a></li>\n</ul>\n"}], "owner": {"reputation": 934, "user_id": 1136236, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5c4f2b250d57a1ebf233426012487539?s=128&d=identicon&r=PG", "display_name": "Jonathan Dewein", "link": "https://stackoverflow.com/users/1136236/jonathan-dewein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 0, "closed_date": 1533099005, "answer_count": 1, "score": 0, "last_activity_date": 1533127407, "creation_date": 1533081596, "last_edit_date": 1533127407, "question_id": 51623611, "link": "https://stackoverflow.com/questions/51623611/unable-to-install-or-build-ghc-mod-or-other-packages-with-stack", "closed_reason": "Duplicate", "title": "Unable to install or build ghc-mod or other packages with Stack", "body": "<p>I am trying to set up a development environment for Haskell on my Arch Linux machine. </p>\n\n<p>I have read about the static linking fiasco which has made Arch and Haskell a pain.</p>\n\n<p>I <a href=\"https://docs.haskellstack.org/en/stable/install_and_upgrade/#manual-download_2\" rel=\"nofollow noreferrer\">manually install stack</a> and run:</p>\n\n<pre><code>stack setup\n</code></pre>\n\n<p>Then, I make a project with:</p>\n\n<pre><code>stack new hello\n</code></pre>\n\n<p>After this, I run:</p>\n\n<pre><code>stack build ghc-mod\n</code></pre>\n\n<p>I add these to my extra dependencies:</p>\n\n<pre><code>extra-deps:         \n     - Cabal-1.24.2.0\n     - base-4.9.1.0\n     - cabal-helper-0.7.3.0\n     - djinn-ghc-0.0.2.3\n     - extra-1.5.3\n     - ghc-syb-utils-0.2.3.3\n     - haskell-src-exts-1.19.1\n     - hlint-2.0.15\n     - monad-journal-0.7.2\n     - optparse-applicative-0.13.2.0\n     - temporary-1.2.1.1\n</code></pre>\n\n<p>And then, I run <code>stack build ghc-mod</code> again, and get this error, which I am stuck at:</p>\n\n<pre><code>The following package identifiers were not found in your indices: ghc-boot-8.4.3\nPossible candidates: ghc-boot-8.4.1, ghc-boot-8.4.2.\n</code></pre>\n\n<p>This also happens no matter which package I try to install. I add the extradeps, and then I get this message.</p>\n"}, {"tags": ["haskell", "newtype"], "comments": [{"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1533076824, "post_id": 51623052, "comment_id": 90211359, "body": "Is there something in that other link that is still confusing? If you can expand on what you&#39;re not understanding, we might be able to provide more help. For me, I think of using newtypes to wrap anything I want to be specified. For example, instead of passing a bunch of <code>Text</code>s around and not knowing which <code>Text</code> is an email-y thing and which is a phone-number-y thing, I create two newtypes for <code>Email</code> and <code>Phone</code> that just wrap text values."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1533076888, "post_id": 51623052, "comment_id": 90211374, "body": "Here&#39;s my rule of thumb. I think beginners should follow it pretty strictly, and intermediate Haskellers should follow it unless there&#39;s a reason not to. 1. Don&#39;t use <code>type</code> at all; it&#39;s only useful in very special cases. 2. Use <code>newtype</code> whenever there&#39;s exactly one constructor and it has exactly one field. 3. Use <code>data</code> the rest of the time."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533077590, "post_id": 51623052, "comment_id": 90211519, "body": "FYI, the main cases where I think <code>type</code> is a reasonable thing: 1. Higher-rank type synonyms: <code>type f ~&gt; g = forall x. f x -&gt; g x</code>, <code>type Lens s t a b = forall f. Functor f =&gt; (a -&gt; f b) -&gt; s -&gt; f t</code> 2. Type synonyms that expand to constraints, for use in the &quot;wrapper class&quot; pattern: <code>type FooS a b c = (...,...,...,...); class FooS a b c =&gt; Foo a b c; instance FooS a b c =&gt; Foo a b c</code>. 3. Type synonyms that expand to type family applications: <code>type Reverse xs = RO &#39;[] xs; type family RO acc xs where {RO acc &#39;[] = acc; RO acc (x &#39;: xs) = RO (x &#39;: acc) xs}</code>"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1533078316, "post_id": 51623052, "comment_id": 90211689, "body": "Please see: <a href=\"https://wiki.haskell.org/Type\" rel=\"nofollow noreferrer\">wiki.haskell.org/Type</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533078817, "post_id": 51623052, "comment_id": 90211783, "body": "If you sort a <code>[Int]</code> you get the standard increasing order. If you want to use your own order, one option (even if not the only one) is to <code>newtype MyInt = MyInt Int</code> and then <code>instance Ord MyInt where ...</code> to define a custom order. After that, if you sort <code>[MyInt]</code> you&#39;ll get the elements sorted by the custom order. Newtypes are often used so that one can &quot;change&quot; (roughly speaking) some predefined class instances."}], "answers": [{"comments": [{"owner": {"reputation": 454, "user_id": 4240261, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ff9a37dd735232d0e1ffa2e7af1823?s=128&d=identicon&r=PG", "display_name": "Mika Feiler", "link": "https://stackoverflow.com/users/4240261/mika-feiler"}, "edited": false, "score": 1, "creation_date": 1533117798, "post_id": 51626235, "comment_id": 90225198, "body": "I think it is worth mentioning as a curiosity (and to help better understand the issue) that Idris does that using &#39;named implementations&#39; (which Haskell doesn&#39;t have) <a href=\"http://docs.idris-lang.org/en/latest/tutorial/interfaces.html#named-implementations\" rel=\"nofollow noreferrer\">docs.idris-lang.org/en/latest/tutorial/&hellip;</a>"}], "tags": [], "owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "is_accepted": true, "score": 3, "last_activity_date": 1533141704, "last_edit_date": 1533141704, "creation_date": 1533103085, "answer_id": 51626235, "question_id": 51623052, "link": "https://stackoverflow.com/questions/51623052/when-do-we-use-newtype-in-haskell/51626235#51626235", "title": "When do we use newtype in Haskell?", "body": "<p>An example usage collected from the quote you posted would perhaps be declaring two <code>Int</code> monoids. There are multiple ways to consider <code>Int</code> a monoid (multiplication or addition), and perhaps you wish to use more than one. You can not define more than one monoid instance for <code>Int</code>, but you can instead create two newtypes and provide separate instances for them.</p>\n\n<pre><code>newtype SumInt = SumInt Int \nnewtype ProdInt = ProdInt Int \n\ninstance Monoid SumInt where\n  mempty = SumInt 0\n  (SumInt a) `mappend` (SumInt b) = SumInt (a + b)\n\ninstance Monoid ProdInt where\n  mempty = ProdInt 1\n  (ProdInt a) `mappend` (ProdInt b) = ProdInt (a*b)\n</code></pre>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 344, "favorite_count": 0, "closed_date": 1533108198, "accepted_answer_id": 51626235, "answer_count": 1, "score": -2, "last_activity_date": 1533141704, "creation_date": 1533076512, "question_id": 51623052, "link": "https://stackoverflow.com/questions/51623052/when-do-we-use-newtype-in-haskell", "closed_reason": "Duplicate", "title": "When do we use newtype in Haskell?", "body": "<p>I'm a bit confused with type and newtype. It is said that newtype can contain only one field. I also find a post <a href=\"https://stackoverflow.com/questions/31815310/the-difference-between-type-and-newtype-in-haskell\">here</a>.</p>\n\n<p>But still not quite clear. </p>\n\n<blockquote>\n  <p>So if you want to declare different type class instances for a\n  particular type, or want to make a type abstract, you can wrap it in a\n  newtype and it'll be considered distinct to the type-checker, but\n  identical at runtime.</p>\n</blockquote>\n\n<p>Any example would be helpful. Thank you!</p>\n"}, {"tags": ["haskell", "algebraic-data-types"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1533067250, "post_id": 51621011, "comment_id": 90207797, "body": "You write a function. What have you tried? What is the meaning and purpose of the function that you&#39;ve written?"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1533073516, "creation_date": 1533073516, "answer_id": 51622555, "question_id": 51621011, "link": "https://stackoverflow.com/questions/51621011/how-to-convert-algebraic-data-types-in-haskell/51622555#51622555", "title": "How to convert algebraic data types in Haskell?", "body": "<p>I think you are not understanding pattern matching, even if you posted some code using it. \nYou should probably read a tutorial -- there should be many of them around the net.</p>\n\n<p>You might convert everything to <code>Localtime</code> using some function similar to the one you posted. Here's a skeleton: you will need to fill the blanks.</p>\n\n<pre><code>h :: Time -&gt; Time\nh (Localtime h m) = Localtime h m\nh (Globaltime h m d) = Localtime (...) (...)\nh (LocaltimeAM h m am) = Localtime (...) (...)\n</code></pre>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1533073516, "creation_date": 1533066488, "last_edit_date": 1533066887, "question_id": 51621011, "link": "https://stackoverflow.com/questions/51621011/how-to-convert-algebraic-data-types-in-haskell", "title": "How to convert algebraic data types in Haskell?", "body": "<p>I am a bit lost. I have given these different time sets. The first one is our normal time set. The second one is a time set with a time zone difference (not real world relevant, cause I knot there is not a 12:45 time zone). The third one is only True if the time is am. \nI want to be able to sort these times sets. To create a list and sort them. I think I could do this by import Data.List and then use the sort function. It would be easier tho if I converted all of those different time sets into the same time set. Localtime! \nMy problem is how do I convert LocaltimeAM into Localtime?</p>\n\n<pre><code>data Time = Localtime {hour, minute :: Int}\n          | Globaltime {hour, minute, difference :: Int}\n          | LocaltimeAM {hour, minute :: Int, am :: Bool} \n          deriving Show\n\nh :: Time -&gt; (Int, Int)\nh (Localtime h m) = (h, m)\nh (Globaltime h m d) = ((h+d+24) `mod` 24, m)\nh (LocaltimeAM h m am) = (h + (if am then 0 else 12), m)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 5, "creation_date": 1533052626, "post_id": 51617481, "comment_id": 90200597, "body": "Your translation table is actually wrong. You don&#39;t need the <code>[]</code> vs <code>(x:xs)</code> case distinction, only one clause <code>sum xs = foldr (+) 0 xs</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533052717, "post_id": 51617481, "comment_id": 90200654, "body": "(Also, you&#39;d used <code>foldl&#39;</code> instead of <code>foldr</code>, but that&#39;s more of a performance detail.)"}, {"owner": {"reputation": 171, "user_id": 10007209, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39557b21a17731ebee5d699e47a87635?s=128&d=identicon&r=PG&f=1", "display_name": "Denys Prodan", "link": "https://stackoverflow.com/users/10007209/denys-prodan"}, "edited": false, "score": 0, "creation_date": 1533053407, "post_id": 51617481, "comment_id": 90201102, "body": "It is not a coincidence. You need some &quot;neutral&quot; initial element to start with something. But nothing prevents you to write something like sumPlus5 = foldr 5"}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1533057324, "post_id": 51617481, "comment_id": 90203085, "body": "Also, the <code>mempty</code> element for <code>Product</code> (that is, the identity argument for multiplication) is <code>1</code>, not <code>0</code>."}], "answers": [{"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 11, "last_activity_date": 1533054184, "last_edit_date": 1533054184, "creation_date": 1533053847, "answer_id": 51617874, "question_id": 51617481, "link": "https://stackoverflow.com/questions/51617481/identity-of-the-accumulating-parameter-of-the-foldr-function/51617874#51617874", "title": "Identity of the &quot;accumulating parameter&quot; of the foldr function", "body": "<p>You're exactly right. We very often want to pass an \"identity\"-like element to <code>foldr</code>, so that the \"starting point\" doesn't affect the result at all. In fact, this is codified in Haskell with the <code>Monoid</code> typeclass. A <a href=\"https://en.wikipedia.org/wiki/Monoid\" rel=\"noreferrer\">monoid</a> is an associative binary operation with an identity. The examples you provide are all examples of a monoid, and they all exist in Haskell.</p>\n\n<ul>\n<li><code>+</code> on any <code>Num</code> is codified as a monoid over the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Monoid.html#t:Sum\" rel=\"noreferrer\"><code>Sum</code> newtype</a>.</li>\n<li><code>*</code> on any <code>Num</code> is codified as a monoid over the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Monoid.html#t:Product\" rel=\"noreferrer\"><code>Product</code> newtype</a>.</li>\n<li><code>++</code> on any list is codified as a monoid on <code>[a]</code>.</li>\n</ul>\n\n<p>And in fact we can go one step further. Folding over a monoid is such a common practice that we can do it automatically with <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Foldable.html#v:fold\" rel=\"noreferrer\"><code>fold</code></a> (or <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Foldable.html#v:foldMap\" rel=\"noreferrer\"><code>foldMap</code></a>, if you need to disambiguate). For instance,</p>\n\n<pre><code>import Data.Foldable\nimport Data.Monoid\n\nsum :: Num a =&gt; [a] -&gt; a\nsum = getSum . foldMap Sum\n\nproduct :: Num a =&gt; [a] -&gt; a\nproduct = getProduct . foldMap Product\n\nconcat :: [[a]] -&gt; [a]\nconcat = fold\n</code></pre>\n\n<p>If you look in the source for <code>Foldable</code>, you can see that <code>fold</code> and <code>foldMap</code> are actually defined in terms of <code>foldr</code> on a monoid, so this is doing the exact same thing you just described.</p>\n\n<p>You can find the full list of (built-in) <code>Monoid</code> instances on Hackage, but a few others that you might find of interest:</p>\n\n<ul>\n<li><code>||</code> on Booleans is a monoid with the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Monoid.html#t:Any\" rel=\"noreferrer\"><code>Any</code> newtype</a>.</li>\n<li><code>&amp;&amp;</code> on Booleans is a monoid with the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Monoid.html#t:All\" rel=\"noreferrer\"><code>All</code> newtype</a>.</li>\n<li>Function composition is a monoid with the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Monoid.html#t:Endo\" rel=\"noreferrer\"><code>Endo</code> newtype</a> (short for \"endomorphism\")</li>\n</ul>\n\n<p>As an exercise, you might consider trying to pinpoint the identity of each of these operations.</p>\n"}], "owner": {"reputation": 67, "user_id": 10110373, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/85fdd93b852552364bec53f08c8e24c5?s=128&d=identicon&r=PG&f=1", "display_name": "Kitsune", "link": "https://stackoverflow.com/users/10110373/kitsune"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 179, "favorite_count": 0, "accepted_answer_id": 51617874, "answer_count": 1, "score": 4, "last_activity_date": 1533068906, "creation_date": 1533052375, "last_edit_date": 1533068906, "question_id": 51617481, "link": "https://stackoverflow.com/questions/51617481/identity-of-the-accumulating-parameter-of-the-foldr-function", "title": "Identity of the &quot;accumulating parameter&quot; of the foldr function", "body": "<p>the <strong>foldr</strong> function:</p>\n\n<pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\nfoldr func acc []      = acc\nfoldr func acc (x:xs)  = func x (foldr func acc xs)\n</code></pre>\n\n<p>catches patterns like those (left side)\nand makes them simpler (right side)         </p>\n\n<pre><code>sum :: [Integer] -&gt; Integer       |  sum :: [Integer] -&gt; Integer\nsum [] = 0                        |  sum [] = 0\nsum (x:xs) = x + sum xs           |  sum (x:xs) = foldr (+) 0 xs\n                                  |\nproduct :: [Integer] -&gt; Integer   |  product :: [Integer] -&gt; Integer\nproduct [] = 0                    |  product [] = 0\nproduct (x:xs) = x * product xs   |  product (x:xs) = foldr (*) 1 xs\n                                  |\nconcat :: [[a]] -&gt; [a]            |  concat :: [[a]] -&gt; [a]\nconcat [] = []                    |  concat [] = []\nconcat (x:xs) = x ++ concat xs    |  concat (x:xs) = foldr (++) [] xs\n----------------------------------------------------------------------\n       not using folds            |           using folds \n</code></pre>\n\n<p>one thing I noticed was that the acc argument, provided as input for the fold,\nseems to be exactly the neutral element / identity element of that function.</p>\n\n<pre><code>In Mathematics the neutral element of the addition operation + is 0\nbecause n + 0 = n, n \u2208 \u211d\n</code></pre>\n\n<p>it doesn't change anything, in other words:\nWith this neutral element provided as an input for the addition function, the summand equals the sum.</p>\n\n<p><code>(+) summand 0 = summand</code> or <code>summand + 0 = summand</code></p>\n\n<p>The same goes for multiplication, the product of the factor and the identiy equals the factor itelf:</p>\n\n<p><code>(*) factor 1 = factor</code></p>\n\n<p>So is this just a coincidence or is there someting bigger behind ?</p>\n"}, {"tags": ["haskell", "types", "type-families", "type-level-computation"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1533051795, "post_id": 51616924, "comment_id": 90200073, "body": "In Haskell, at the moment, type-level lambdas / partial application of type families are not allowed. Arguments of kind <code>* -&gt; *</code> must be <code>data</code> or <code>newtype</code> type constructors (possibly partially applied). <code>:k</code> is too permissive and does not show the full story."}, {"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1533052928, "post_id": 51616924, "comment_id": 90200797, "body": "@chi Why does <code>:k</code> even allow it?  It very much seems that <code>:k</code> is performing partial application."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1533053960, "post_id": 51616924, "comment_id": 90201396, "body": "I have no idea why <code>:k</code> accepts that. My guess is: it&#39;s very convenient to ask <code>:k Is</code> and get the kind of <code>Is</code>, even if <code>Is</code> is not fully applied. This helps the programmer in crafting a full application of <code>Is</code>. To get this, we allow partial application in <code>:k</code>. IMO, it should only be allowed at the top level, and never allowed elsewhere e.g. <code>:k F Is</code> should fail no matter what <code>F</code> is. It would also help if we had a kind for constructors like <code>* -&gt; *</code> and another for type families like <code>* ~&gt; *</code> so to mitigate the confusion."}, {"owner": {"reputation": 189, "user_id": 8179137, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46b43fe26a1b6191280614f56683525d?s=128&d=identicon&r=PG&f=1", "display_name": "Potato44", "link": "https://stackoverflow.com/users/8179137/potato44"}, "edited": false, "score": 1, "creation_date": 1533089501, "post_id": 51616924, "comment_id": 90213832, "body": "This <a href=\"https://github.com/ghc-proposals/ghc-proposals/pull/52\" rel=\"nofollow noreferrer\">GHC proposal</a> to lift this restriction might help you work out what is going on. There is good information on how type constructors differ from type families in Richard&#39;s thesis (chapter 4 I think) both in what you can do currently, and what we should be able to do in the future."}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1533051569, "creation_date": 1533050635, "last_edit_date": 1533051569, "question_id": 51616924, "link": "https://stackoverflow.com/questions/51616924/why-does-this-constraint-have-differing-behaviors-in-these-separate-instances", "title": "Why does this constraint have differing behaviors in these separate instances?", "body": "<p>I made two type families:</p>\n\n<pre><code>{-# Language KindSignatures, DataKinds, TypeOperators, TypeFamilies, FlexibleContexts #-}\n\nimport Data.Kind\n\ntype family All (c :: Type -&gt; Constraint) (xs :: [Type]) :: Constraint where\n  All c '[] = ()\n  All c (x ': xs) = (c x, All c xs)\n\ntype family Is (f :: Type -&gt; Type) (x :: Type) :: Constraint where\n  Is f (f _) = ()\n</code></pre>\n\n<p>Now I would like to combine the two type families to check if all members of a type level list are maybes.  Here's how I would do this:</p>\n\n<pre><code>All (Is Maybe) tList\n</code></pre>\n\n<p>Now if I attempt to test this with the following:</p>\n\n<pre><code>f :: (All (Is Maybe) '[Maybe Bool]) =&gt; a -&gt; a\nf = id\n</code></pre>\n\n<p>I get a compilation error:</p>\n\n<pre><code>[1 of 1] Compiling Main             ( familyTest.hs, interpreted )\n\nfamilyTest.hs:12:6: error:\n    \u2022 The type family \u2018Is\u2019 should have 2 arguments, but has been given 1\n    \u2022 In the type signature:\n        f :: (All (Is Maybe) '[Maybe Bool]) =&gt; a -&gt; a\n   |\n12 | f :: (All (Is Maybe) '[Maybe Bool]) =&gt; a -&gt; a\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>Based on this I would think that I'm missing an argument to <code>Is</code>.  My first thought is this has something to do with currying.  Perhaps type families lack partial application.  However when I go to figure out what I am missing something strange happens.  First I check the kinds of all the basic components:</p>\n\n<pre><code>[1 of 1] Compiling Main             ( familyTest.hs, interpreted )\nOk, one module loaded.\n*Main&gt; :k All\nAll :: (* -&gt; Constraint) -&gt; [*] -&gt; Constraint\n*Main&gt; :k Is\nIs :: (* -&gt; *) -&gt; * -&gt; Constraint\n*Main&gt; :k Maybe\nMaybe :: * -&gt; *\n*Main&gt; :k Bool\nBool :: *\n</code></pre>\n\n<p>Nothing here is out of order, so I start putting things together:</p>\n\n<pre><code>*Main&gt; :k Is Maybe\nIs Maybe :: * -&gt; Constraint\n</code></pre>\n\n<p>This is a bit curious, <code>Is Maybe</code> has the kind <code>Type -&gt; Constraint</code>.  I would expect this but the error earlier was telling me I was putting the wrong number of arguments to <code>Is</code>.  Now we try passing this to <code>All</code>:</p>\n\n<pre><code>*Main&gt; :k All (Is Maybe)\nAll (Is Maybe) :: [*] -&gt; Constraint\n</code></pre>\n\n<p>Surprisingly this also works without error, even though we should expect it to.  The last thing to try is to complete the constraint:</p>\n\n<pre><code>*Main&gt; :k All (Is Maybe) '[Maybe Bool]\nAll (Is Maybe) '[Maybe Bool] :: Constraint\n</code></pre>\n\n<p>And it works, despite the complaint from the compiler earlier about this exact statement, this statement now appears to be a valid constraint.  I still get the same error when I compile the original code.</p>\n\n<p>So at this point I started simplifying the code so that I could isolate the behavior.</p>\n\n<pre><code>type family App (c :: Type -&gt; Constraint) (x :: Type) :: Constraint where\n  App c x = c x\n\ntype family IsBool (x :: Type) :: Constraint where\n  IsBool Bool = ()\n\nf :: (App IsBool Bool) =&gt; a -&gt; a\nf = id\n</code></pre>\n\n<p>This still results in a similar error:</p>\n\n<pre><code>[1 of 1] Compiling Main             ( familyTest.hs, interpreted )\n\nfamilyTest.hs:19:6: error:\n    \u2022 The type family \u2018IsBool\u2019 should have 1 argument, but has been given none\n    \u2022 In the type signature: f :: (App IsBool Bool) =&gt; a -&gt; a\n   |\n19 | f :: (App IsBool Bool) =&gt; a -&gt; a\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>Which does not manifest when I attempt to inspect it with <code>:k</code></p>\n\n<pre><code>*Main&gt; :k App IsBool Bool\nApp IsBool Bool :: Constraint\n</code></pre>\n\n<p>What is going on?</p>\n"}, {"tags": ["haskell", "algebraic-data-types"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1533047087, "post_id": 51615557, "comment_id": 90196701, "body": "I&#39;m surprised that this works, since a <code>data</code>type needs to start with an <b>u</b>percase."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533047201, "post_id": 51615557, "comment_id": 90196786, "body": "Furthermore it is not really clear to me what the problem is. What do you mean with &quot;two different time sets with the use of <code>&#47;=</code>? You can define a <code>different :: Time -&gt; Time -&gt; Bool</code>, or make it an instance of <code>Eq</code>."}, {"owner": {"reputation": 91, "user_id": 9225974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c64efccc21c8c7b16c70047cc213a93?s=128&d=identicon&r=PG&f=1", "display_name": "Bronia Berlin", "link": "https://stackoverflow.com/users/9225974/bronia-berlin"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533047477, "post_id": 51615557, "comment_id": 90196983, "body": "I do not want to use Eq. Yes, I could define  &quot;different&quot;, but my question is if it is possible to combine different and same in one function."}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1533047532, "post_id": 51615557, "comment_id": 90197024, "body": "&quot;combine different and same in one function&quot; I don&#39;t understand what you mean by this. I assume that the result of <code>different a b</code> is different than the result of <code>same a b</code>, right? If so, then they must be two different functions."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533047546, "post_id": 51615557, "comment_id": 90197040, "body": "@BroniaBerlin: yes, add an extra parameter that specifies if you want the &quot;same&quot; or &quot;different&quot; flavor. But the standard approach is to make <code>Time</code> an instance of <code>Eq</code>, such that one can <i>reuse</i> the <code>(==)</code> for all kinds of objects. Furthermore all of a sudden, you can use functions like <code>nub</code>, that have as condition that the elements they <code>num</code> are of an <code>Eq</code> type."}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1533049118, "post_id": 51615557, "comment_id": 90198208, "body": "<code>h</code> looks like a canonicalization function; it essentially converts any <code>Time</code> to <code>Localtime</code> form, except it&#39;s a tuple. By the way, it is incomplete for reality; we do have odd timezones like +12:45."}, {"owner": {"reputation": 454, "user_id": 4240261, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ff9a37dd735232d0e1ffa2e7af1823?s=128&d=identicon&r=PG", "display_name": "Mika Feiler", "link": "https://stackoverflow.com/users/4240261/mika-feiler"}, "edited": false, "score": 0, "creation_date": 1533075280, "post_id": 51615557, "comment_id": 90210932, "body": "I guess what you&#39;re looking for (for whatever reason) is something like &#39;named implementations&#39; that Haskell doesn&#39;t have and Idris does <a href=\"http://docs.idris-lang.org/en/latest/tutorial/interfaces.html#named-implementations\" rel=\"nofollow noreferrer\">docs.idris-lang.org/en/latest/tutorial/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 91, "user_id": 9225974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c64efccc21c8c7b16c70047cc213a93?s=128&d=identicon&r=PG&f=1", "display_name": "Bronia Berlin", "link": "https://stackoverflow.com/users/9225974/bronia-berlin"}, "edited": false, "score": 4, "creation_date": 1533047956, "post_id": 51615862, "comment_id": 90197344, "body": "Thank you! That is very helpful. Could you tell me how I would compile this in my ghci?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 91, "user_id": 9225974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c64efccc21c8c7b16c70047cc213a93?s=128&d=identicon&r=PG&f=1", "display_name": "Bronia Berlin", "link": "https://stackoverflow.com/users/9225974/bronia-berlin"}, "edited": false, "score": 1, "creation_date": 1533048005, "post_id": 51615862, "comment_id": 90197388, "body": "@BroniaBerlin: you can write it between <code>:{</code> and <code>:}</code> lines to implement a multi-line item: <a href=\"https://stackoverflow.com/questions/8443035/multi-line-commands-in-ghci\" title=\"multi line commands in ghci\">stackoverflow.com/questions/8443035/multi-line-commands-in-g&zwnj;&#8203;hci</a>"}, {"owner": {"reputation": 91, "user_id": 9225974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c64efccc21c8c7b16c70047cc213a93?s=128&d=identicon&r=PG&f=1", "display_name": "Bronia Berlin", "link": "https://stackoverflow.com/users/9225974/bronia-berlin"}, "edited": false, "score": 0, "creation_date": 1533048719, "post_id": 51615862, "comment_id": 90197944, "body": "I&#39;ve never used Eq before so I am kinda lost right now, so if I would like to compare two time sets I would write what exactly?"}, {"owner": {"reputation": 91, "user_id": 9225974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c64efccc21c8c7b16c70047cc213a93?s=128&d=identicon&r=PG&f=1", "display_name": "Bronia Berlin", "link": "https://stackoverflow.com/users/9225974/bronia-berlin"}, "edited": false, "score": 0, "creation_date": 1533048764, "post_id": 51615862, "comment_id": 90197981, "body": "&gt;Prelude : Time (Localtime 13 20) (Localtime 14 20) would be false with my previous function"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 91, "user_id": 9225974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c64efccc21c8c7b16c70047cc213a93?s=128&d=identicon&r=PG&f=1", "display_name": "Bronia Berlin", "link": "https://stackoverflow.com/users/9225974/bronia-berlin"}, "edited": false, "score": 1, "creation_date": 1533048891, "post_id": 51615862, "comment_id": 90198065, "body": "@BroniaBerlin: and it is <code>False</code> if you write <code>Localtime 13 20 == Localtime 14 20</code>."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1533052041, "post_id": 51615862, "comment_id": 90200236, "body": "&quot;how I would compile this in my ghci?&quot;  GHCi is an interpreter and not capable of compilation.  I know this is not actually answering your question, which is addressed by Willem, but it is worth realizing when the question itself is misleading/unanswerable and why."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 1, "creation_date": 1533052236, "post_id": 51615862, "comment_id": 90200364, "body": "you make the best answer of this kind, I always enjoy reading your posts. Congrats. +1"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 15, "last_activity_date": 1533048377, "last_edit_date": 1533048377, "creation_date": 1533047513, "answer_id": 51615862, "question_id": 51615557, "link": "https://stackoverflow.com/questions/51615557/can-i-use-and-without-using-eq/51615862#51615862", "title": "Can I use == and /= without using Eq?", "body": "<p>To answer the question in the title:</p>\n\n<blockquote>\n  <p>Can I use <code>==</code> and <code>/=</code> without using <code>Eq</code>?</p>\n</blockquote>\n\n<p>You could - technically speaking - explicitly hide the <code>Eq</code> typeclass in the prelude, and then define a <code>(==)</code> and <code>(/=)</code> function yourself, but that would be a bad idea, since it would mean that you can no longer compare two integers with <code>(==)</code>.</p>\n\n<p>What you probably want is to make <code>Time</code> an <em>instance</em> of the <code>Eq</code> typeclass, such that you can from now on write <code>time1 == time2</code>. We can make it an instance like:</p>\n\n<pre><code>h :: Time -&gt; (Int, Int) -- (Int, Int) = (hour, minute)\nh (Localtime h m) = (h, m)\nh (Globaltime h m d) = ((h+d+24) `mod` 24, m) \nh (LocaltimeAM h m am) = (h + (if am then 0 else 12), m)\n\n<b>instance Eq Time where</b>\n    t1 == t2 = (h t1) == (h t2)</code></pre>\n\n<p>Haskell will automatically write the <code>(/=)</code> function for us (as the opposite of <code>(==)</code>), or you can decide to write the <code>(/=)</code> version, and then Haskell will write the <code>(==)</code> version. Of course you can also implement both.</p>\n\n<p>Making types a member of a typeclass actually can be useful. Take for example the <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Data-List.html#v:nub\" rel=\"noreferrer\"><strong><code>nub :: Eq a =&gt; [a] -&gt; [a]</code></strong></a> function. It requires that the type <code>a</code> is a member of the <code>Eq</code> typeclass, and performs some sort of \"uniqness\" filter: you provide it a list of elements, and it returns a list of <em>non-equal</em> elements. Now without any work to define a <code>nub</code> function for your <code>Time</code> type, by making <code>Time</code> an instance of the <code>Eq</code> type class, you can use <code>nub</code> on a list of <code>Time</code>s.</p>\n\n<p>Of course you can not simply make a type an instance of all possible type classes. You should only make types an instance of the <code>Eq</code> typeclass if you can check if two items are the same (and there should thus be a \"reasonable\" idea when two items are equal). Furthermore most of these typeclasses come with \"<em>contracts</em>\": for example an equality relation (like defined by <code>(==)</code>) should be <em>reflexive</em>, <em>symmetric</em>, and <em>transitive</em>.</p>\n"}], "owner": {"reputation": 91, "user_id": 9225974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c64efccc21c8c7b16c70047cc213a93?s=128&d=identicon&r=PG&f=1", "display_name": "Bronia Berlin", "link": "https://stackoverflow.com/users/9225974/bronia-berlin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 280, "favorite_count": 0, "accepted_answer_id": 51615862, "answer_count": 1, "score": 3, "last_activity_date": 1533050780, "creation_date": 1533046632, "last_edit_date": 1533050780, "question_id": 51615557, "link": "https://stackoverflow.com/questions/51615557/can-i-use-and-without-using-eq", "title": "Can I use == and /= without using Eq?", "body": "<p>So I wrote this program and everything works fine ;) \nI would like to improve it. I would also be able to compile two different time sets with the use of /= and get True as an result. \nI am a little bit confused.</p>\n\n<pre><code>data Time = Localtime {hour, minute :: Int}\n              | Globaltime {hour, minute, difference :: Int}\n              | LocaltimeAM {hour, minute :: Int, am :: Bool} \n             deriving Show\n\nsame :: Time -&gt; Time -&gt; Bool\nsame u1 u2 = (h u1) == (h u2)\n   where\n      h :: Time -&gt; (Int, Int) -- (Int, Int) = (hour, minute)\n      h (Localtime h m) = (h, m)\n      h (Globaltime h m d) = ((h+d+24) `mod` 24, m) \n      h (LocaltimeAM h m am) = (h + (if am then 0 else 12), m)\n</code></pre>\n"}, {"tags": ["haskell", "monads", "functor"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 10, "creation_date": 1533043806, "post_id": 51614573, "comment_id": 90194427, "body": "You don&#39;t. The entire idea of this is that it forces to chain operations. You can thus write a function that takes an <code>a</code>, and returns an <code>IO b</code>, and so chain them together with <code>(&gt;&gt;=)</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533043856, "post_id": 51614573, "comment_id": 90194462, "body": "Possible duplicate: <a href=\"https://stackoverflow.com/q/22063216/67579\">stackoverflow.com/q/22063216/67579</a>"}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1533045331, "post_id": 51614573, "comment_id": 90195470, "body": "You can&#39;t do that from <code>IO</code> monad. Take an RNG for an example why."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1533048469, "post_id": 51614573, "comment_id": 90197776, "body": "If your procedure executes an action which is IO then your procedure is itself IO and the type must reflect that fact."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1533048519, "post_id": 51614573, "comment_id": 90197815, "body": "Even using <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/System-IO-Unsafe.html\" rel=\"nofollow noreferrer\">unsafe <code>IO</code></a>, <code>f</code> isn&#39;t pure, because you can&#39;t predict the return value of, for example, <code>f getLine</code>."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1533059708, "post_id": 51614573, "comment_id": 90204255, "body": "Other possible duplicates: <a href=\"https://stackoverflow.com/questions/8567743/how-to-extract-value-from-monadic-action\" title=\"how to extract value from monadic action\">stackoverflow.com/questions/8567743/&hellip;</a>, <a href=\"https://stackoverflow.com/questions/18214664/haskell-trapped-in-io-monad\" title=\"haskell trapped in io monad\">stackoverflow.com/questions/18214664/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "is_accepted": false, "score": 4, "last_activity_date": 1533061667, "creation_date": 1533061667, "answer_id": 51619859, "question_id": 51614573, "link": "https://stackoverflow.com/questions/51614573/how-to-return-a-pure-value-from-a-impure-method/51619859#51619859", "title": "How to return a pure value from a impure method", "body": "<p>It is trivial, so this will be a long answer. In short, the problem lies in the signature, <code>IO a -&gt; a</code>, is not a type properly allowed in Haskell. This really has less to do with <code>IO</code> being a functor than the fact that <code>IO</code> is special.</p>\n\n<p>For some functors you can recover the pure value. For instance a partially applied pair, <code>(,) a</code>, is a functor. We unwrap the value via <code>snd</code>.</p>\n\n<pre><code>snd :: (a,b) -&gt; b\nsnd (_,b) = b\n</code></pre>\n\n<p>So this is a functor that we can unwrap to a pure value, but this really has nothing to do with being a functor. It has more to do with pairs belonging to a different Category Theoretic concept, <a href=\"http://hackage.haskell.org/package/comonad-5.0.4/docs/Control-Comonad.html\" rel=\"nofollow noreferrer\">Comonad</a>, with:</p>\n\n<pre><code>extract :: Comonad w =&gt; w a -&gt; a\n</code></pre>\n\n<p>Any <code>Comonad</code> will be a functor for which you can recover the pure value.</p>\n\n<p>Many (non-comonadic) functors have--lets say \"evaluators\"--which allow something like what is being asked. For instance, we can evaluate a <code>Maybe</code> with <code>maybe :: a -&gt; Maybe a -&gt; a</code>. By providing a default, <code>maybe a</code> has the desired type, <code>Maybe a -&gt; a</code>. Another useful example from <a href=\"http://hackage.haskell.org/package/transformers-0.5.5.0/docs/Control-Monad-Trans-State-Lazy.html\" rel=\"nofollow noreferrer\">State</a>, <code>evalState :: State s a -&gt; s -&gt; a</code>, has its arguments reversed but the concept is the same; given the monad, <code>State s a</code>, and initial state, <code>s</code>, we unwrap the pure value, <code>a</code>.</p>\n\n<p>Finally to the specifics of <code>IO</code>. No \"evaluator\" for <code>IO</code> is provided in the Haskell language or libraries. We might consider running the program itself an evaluator--much in the same vein of <code>evalState</code>. But if that's a valid conceptual move, then it should only help to convince you that there is no sane way to unwrap from <code>IO</code>--any program written is just the <code>IO a</code> input to its evaluator function. </p>\n\n<p>Instead, what you are forced to do--<strong>by design</strong>--is to work within the <code>IO</code> monad. For instance, if you have a pure function, <code>f :: a -&gt; b</code>, you apply it within the <code>IO</code> context via, <code>fmap f :: IO a -&gt; IO b</code></p>\n\n<p><strong>TL;DR</strong> You can't get a pure value out of the <code>IO</code> monad. Apply pure functions within the <code>IO</code> context, for instance by <code>fmap</code> </p>\n"}, {"comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1533067290, "post_id": 51620647, "comment_id": 90207817, "body": "Wow thank you for the explanation.Yours and @trevor cooks really gave me a better view on this topic.My thought process was wrong then.I was considering <code>&gt;&gt;=</code> similar to C# <code>Task&lt;T&gt;</code> where you can unwrap the value by using the <code>await</code> keyword and from that point you can use the extracted value.Although when you say &quot;we get inside the functor&quot; it means that having something like <code>m a-&gt;(a-&gt; m b)-&gt;b</code> we  &quot;enter the m a functor&quot; and by applying the <code>(a-&gt; mb)</code> we enter the <code>m b functor</code> ?"}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 2, "creation_date": 1533067840, "post_id": 51620647, "comment_id": 90208110, "body": "@BercoviciAdrian C#&#39;s <code>await</code> keyword is just syntactic sugar, similar to Haskell&#39;s  <code>&lt;-</code> binding inside of <code>do</code> notation. They&#39;re pretty close, although <code>Task&lt;T&gt;</code> isn&#39;t a monad. The <i>step into the functor</i> analogy is imprecise at best; it was an attempt at making the concepts easier to understand. If I didn&#39;t succeed at that, then don&#39;t sweat it. What I meant, though, is that you can &#39;inject&#39; your pure functions into your <code>IO</code> values, using <code>fmap</code>, <code>&gt;&gt;=</code>, and so on. This sort of lets you perform work inside the container, without ever having to extract the data. HTH."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1591800609, "post_id": 51620647, "comment_id": 110195190, "body": "@BercoviciAdrian a typo in your comment: you meant <code>m a-&gt;(a-&gt; m b)-&gt;m b</code>, where we &quot;enter the <code>m a</code> monad&quot; and by applying the <code>(a-&gt; m b)</code> function <i>on the inside</i> we turn <code>m a</code> into <code>m b</code> monad, that will process the <code>a</code> from the <code>m a</code> with <code>a-&gt;m b</code>. why &quot;monad&quot; and not just &quot;functor&quot;? for functor it&#39;s <code>m a-&gt;(a-&gt; b)-&gt;m b</code>; and so with <code>a-&gt; m b</code> used with <code>m a</code> as a <i>functor</i>, it&#39;s <code>m a-&gt;(a-&gt;m b)-&gt;m (m b)</code>; and putting <i>that</i> result through the monad&#39;s <i><code>join</code></i>, we finally get the <code>m b</code>. why do we want <code>m a -&gt; ... -&gt; m b</code>? for <i>compositionality</i>, to build chains <code>m a -&gt;...-&gt;m b-&gt;...-&gt;m c-&gt;...</code>"}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 14, "last_activity_date": 1533065517, "last_edit_date": 1533065517, "creation_date": 1533065031, "answer_id": 51620647, "question_id": 51614573, "link": "https://stackoverflow.com/questions/51614573/how-to-return-a-pure-value-from-a-impure-method/51620647#51620647", "title": "How to return a pure value from a impure method", "body": "<p>It's a frequently asked question: <em>How do I extract 'the' value from my monad</em>, not only in Haskell, but in other languages as well. I have a theory about why this question keeps popping up, so I'll try to answer according to that; I hope it helps.</p>\n\n<h1>Containers of single values</h1>\n\n<p>You can think of a <em>functor</em> (and therefore also a <em>monad</em>) as a <strong>container</strong> of values. This is most palpable with the (redundant) <code>Identity</code> functor:</p>\n\n<pre><code>Prelude Control.Monad.Identity&gt; Identity 42\nIdentity 42\n</code></pre>\n\n<p>This is nothing but a wrapper around a value, in this case <code>42</code>. For this particular container, you <em>can</em> extract the value, because it's guaranteed to be there:</p>\n\n<pre><code>Prelude Control.Monad.Identity&gt; runIdentity $ Identity 42\n42\n</code></pre>\n\n<p>While <code>Identity</code> seems fairly useless, you can find other functors that seem to wrap a single value. In F#, for example, you'll often encounter containers like <code>Async&lt;'a&gt;</code> or <code>Lazy&lt;'a&gt;</code>, which are used to represent asynchronous or lazy computations (Haskell doesn't need the latter, because it's lazy by default).</p>\n\n<p>You'll find lots of other single-value containers in Haskell, such as <code>Sum</code>, <code>Product</code>, <code>Last</code>, <code>First</code>, <code>Max</code>, <code>Min</code>, etc. Common to all of those is that they wrap a single value, which means that you <em>can</em> extract the value.</p>\n\n<p>I think that when people first encounter functors and monads, they tend to think of the concept of a <em>data container</em> in this way: as a container of a single value.</p>\n\n<h1>Containers of optional values</h1>\n\n<p>Unfortunately, some common monads in Haskell seem to support that idea. For example, <code>Maybe</code> is a data container as well, but one that can contain zero or one value. You can, unfortunately, still extract the value if it's there:</p>\n\n<pre><code>Prelude Data.Maybe&gt; fromJust $ Just 42\n42\n</code></pre>\n\n<p>The problem with this is that <code>fromJust</code> isn't <em>total</em>, so it'll crash if you call it with a <code>Nothing</code> value:</p>\n\n<pre><code>Prelude Data.Maybe&gt; fromJust Nothing\n*** Exception: Maybe.fromJust: Nothing\n</code></pre>\n\n<p>You can see the same sort of problem with <code>Either</code>. Although I'm not aware of a built-in partial function to extract a <code>Right</code> value, you can easily write one with pattern matching (if you ignore the compiler warning):</p>\n\n<pre><code>extractRight :: Either l r -&gt; r\nextractRight (Right x) = x\n</code></pre>\n\n<p>Again, it works in the 'happy path' scenario, but can just as easily crash:</p>\n\n<pre><code>Prelude&gt; extractRight $ Right 42\n42\nPrelude&gt; extractRight $ Left \"foo\"\n*** Exception: &lt;interactive&gt;:12:1-26: Non-exhaustive patterns in function extractRight\n</code></pre>\n\n<p>Still, since functions like <code>fromJust</code> exists, I suppose it tricks people new to the concept of functors and monads into thinking about them as data containers from which you can extract a value.</p>\n\n<p>When you encounter something like <code>IO Int</code> for the first time, then, I can understand why you'd be tempted to think of it as a container of a single value. In a sense, it is, but in another sense, it isn't.</p>\n\n<h1>Containers of multiple values</h1>\n\n<p>Even with lists, you can (attempt to) extract 'the' value from a list:</p>\n\n<pre><code>Prelude&gt; head [42..1337]\n42\n</code></pre>\n\n<p>Still, it could fail:</p>\n\n<pre><code>Prelude&gt; head []\n*** Exception: Prelude.head: empty list\n</code></pre>\n\n<p>At this point, however, it should be clear that attempting to extract 'the' value from any arbitrary functor is nonsense. A list is a functor, but it contains an arbitrary number of values, including zero and infinitely many.</p>\n\n<p>What you <em>can</em> always do, though, is to write functions that take a 'contained' value as input and returns another value as output. Here's an arbitrary example of such a function:</p>\n\n<pre><code>countAndMultiply :: Foldable t =&gt; (t a, Int) -&gt; Int\ncountAndMultiply (xs, factor) = length xs * factor\n</code></pre>\n\n<p>While you can't 'extract <em>the</em> value' out of a list, you can apply your function to each of the values in a list:</p>\n\n<pre><code>Prelude&gt; fmap countAndMultiply [(\"foo\", 2), (\"bar\", 3), (\"corge\", 2)]\n[6,9,10]\n</code></pre>\n\n<p>Since <code>IO</code> is a functor, you can do the same with it as well:</p>\n\n<pre><code>Prelude&gt; foo = return (\"foo\", 2) :: IO (String, Int)\nPrelude&gt; :t foo\nfoo :: IO (String, Int)\nPrelude&gt; fmap countAndMultiply foo\n6\n</code></pre>\n\n<p>The point is that you don't extract a value from a functor, <strong>you step into the functor</strong>.</p>\n\n<h1>Monad</h1>\n\n<p>Sometimes, the function you apply to a functor returns a value that's already wrapped in the same data container. As an example, you may have a function that splits a string over a particular character. To keep things simple, let's just look at the built-in function <code>words</code> that splits a string into words:</p>\n\n<pre><code>Prelude&gt; words \"foo bar\"\n[\"foo\",\"bar\"]\n</code></pre>\n\n<p>If you have a list of strings, and apply <code>words</code> to each, you'll get a nested list:</p>\n\n<pre><code>Prelude&gt; fmap words [\"foo bar\", \"baz qux\"]\n[[\"foo\",\"bar\"],[\"baz\",\"qux\"]]\n</code></pre>\n\n<p>The result is a nested data container, in this case a list of lists. You can flatten it with <code>join</code>:</p>\n\n<pre><code>Prelude Control.Monad&gt; join $ fmap words [\"foo bar\", \"baz qux\"]\n[\"foo\",\"bar\",\"baz\",\"qux\"]\n</code></pre>\n\n<p>This is the original definition of a monad: it's a functor that you can flatten. In modern Haskell, <code>Monad</code> is defined by <em>bind</em> (<code>&gt;&gt;=</code>), from which one can derive <code>join</code>, but it's also possible to derive <code>&gt;&gt;=</code> from <code>join</code>.</p>\n\n<h1>IO as all values</h1>\n\n<p>At this point, you may be wondering: <em>what does that have to do with <code>IO</code>?</em> Isn't <code>IO a</code> a container of a single value of the type <code>a</code>?</p>\n\n<p>Not really. One <em>interpretation</em> of <code>IO</code> is that it's a container that holds an arbitrary value of the type <code>a</code>. According to that interpretation, it's analogous to the <em>many-worlds</em> interpretation of quantum mechanics. <code>IO a</code> is the superposition of all possible values of the type <code>a</code>.</p>\n\n<p>In Schr\u00f6dinger's original thought experiment, the cat in the box is both alive and dead until observed. That's two possible states superimposed. If we think about a variable called <code>catIsAlive</code>, it would be equivalent to the superposition of <code>True</code> and <code>False</code>. So, you can think of <code>IO Bool</code> as a set of possible values <code>{True, False}</code> that will only collapse into a single value when observed.</p>\n\n<p>Likewise, <code>IO Word8</code> can be interpreted as a superposition of the set of all possible <code>Word8</code> values, i.e. <code>{0, 1, 2,.. 255}</code>, <code>IO Int</code> as the superposition of all possible <code>Int</code> values, <code>IO String</code> as all possible <code>String</code> values (i.e. an infinite set), and so on.</p>\n\n<p>So how do you <em>observe</em> the value, then?</p>\n\n<p>You don't extract it, you work <em>within</em> the data container. You can, as shown above, <code>fmap</code> and <code>join</code> over it. So, you can write your application as pure functions that you then compose with impure values with <code>fmap</code>, <code>&gt;&gt;=</code>, <code>join</code>, and so on.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1025, "favorite_count": 1, "accepted_answer_id": 51620647, "answer_count": 2, "score": 4, "last_activity_date": 1533065517, "creation_date": 1533043704, "last_edit_date": 1533065416, "question_id": 51614573, "link": "https://stackoverflow.com/questions/51614573/how-to-return-a-pure-value-from-a-impure-method", "title": "How to return a pure value from a impure method", "body": "<p>I know it must sound trivial but I was wondering how you can unwrap a value from a functor and return it as pure value?</p>\n\n<p>I have tried:</p>\n\n<pre><code>f::IO a-&gt;a\nf x=(x&gt;&gt;=) \n\nf= &gt;&gt;=\n</code></pre>\n\n<p>What should I place in the right side? I can't use <code>return</code> since it will wrap it back again.</p>\n"}, {"tags": ["haskell", "lambda", "type-inference", "typing", "lambda-calculus"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533039532, "post_id": 51613228, "comment_id": 90191439, "body": "By doing the type inference yourself. Can you share your attempt?"}, {"owner": {"reputation": 299, "user_id": 3047143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87db5dac2e899b66815a44fcb348c4fa?s=128&d=identicon&r=PG&f=1", "display_name": "Highness", "link": "https://stackoverflow.com/users/3047143/highness"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533040198, "post_id": 51613228, "comment_id": 90191952, "body": "I try to rewrite the expression like so : \\x y z -&gt; map x (y (x.z)) then \\x y z -&gt; map x (y ( (.) x z)) then I try to infer the type of the expression inside the parenthesis but I fail at that."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1533041684, "post_id": 51613228, "comment_id": 90192979, "body": "Well you can not perform such rewrpite, since it is <code>(. x)</code>, which is short for <code>\\z -&gt; (.) z x</code>, so the rewrite is <code>\\x y -&gt; map x (y (\\z -&gt; (.) z x))</code>."}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 1, "creation_date": 1533047479, "post_id": 51613228, "comment_id": 90196986, "body": "Well, start from the outermost function which is <code>map</code>. Its type is <code>(a -&gt; b) -&gt; [a] -&gt; [b]</code> and you know that <code>x</code> has type of <code>a -&gt; b</code> and <code>y (. x)</code> has type of <code>[a]</code>. Then repeat with <code>y</code>."}, {"owner": {"reputation": 299, "user_id": 3047143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87db5dac2e899b66815a44fcb348c4fa?s=128&d=identicon&r=PG&f=1", "display_name": "Highness", "link": "https://stackoverflow.com/users/3047143/highness"}, "edited": false, "score": 0, "creation_date": 1533048545, "post_id": 51613228, "comment_id": 90197826, "body": "could you please elaborate some more? The (. x) gives me the most trouble. I think I should figure the type of y out after that?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1533050344, "post_id": 51613228, "comment_id": 90199059, "body": "What part of <a href=\"https://i.stack.imgur.com/xkKgE.png\" rel=\"nofollow noreferrer\">Hindley-Milner</a> don&#39;t you understand? (<a href=\"https://stackoverflow.com/q/12532552/791604\">Tongue firmly in cheek.</a>)"}], "answers": [{"comments": [{"owner": {"reputation": 299, "user_id": 3047143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87db5dac2e899b66815a44fcb348c4fa?s=128&d=identicon&r=PG&f=1", "display_name": "Highness", "link": "https://stackoverflow.com/users/3047143/highness"}, "edited": false, "score": 0, "creation_date": 1533040046, "post_id": 51613396, "comment_id": 90191848, "body": "I actually want to solve this problem using pen and paper"}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 1, "creation_date": 1533043710, "post_id": 51613396, "comment_id": 90194341, "body": "Why not just type <code>:t \\x y -&gt; map x (y (. x))</code>?"}, {"owner": {"reputation": 299, "user_id": 3047143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87db5dac2e899b66815a44fcb348c4fa?s=128&d=identicon&r=PG&f=1", "display_name": "Highness", "link": "https://stackoverflow.com/users/3047143/highness"}, "edited": false, "score": 0, "creation_date": 1533048368, "post_id": 51613396, "comment_id": 90197700, "body": "It&#39;s an exercise that I&#39;m trying to understand"}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1533052493, "post_id": 51613396, "comment_id": 90200503, "body": "I tend to use <code>_</code> for a type hole; GHC then reports the inferred type in a &quot;Found type wildcard&quot; message. PartialTypeSignatures makes it a warning instead of a compile error."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 299, "user_id": 3047143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87db5dac2e899b66815a44fcb348c4fa?s=128&d=identicon&r=PG&f=1", "display_name": "Highness", "link": "https://stackoverflow.com/users/3047143/highness"}, "edited": false, "score": 0, "creation_date": 1533060418, "post_id": 51613396, "comment_id": 90204594, "body": "@Highness That is indeed useful. Mark&#39;s point is that giving an intentionally incorrect type is just a needlessly roundabout way of asking for the type directly."}], "tags": [], "owner": {"reputation": 1069, "user_id": 4299824, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-LKWkrlvV9UE/AAAAAAAAAAI/AAAAAAAABYQ/OWKjHFpdGGs/photo.jpg?sz=128", "display_name": "YAMAMOTO Yuji", "link": "https://stackoverflow.com/users/4299824/yamamoto-yuji"}, "is_accepted": false, "score": 0, "last_activity_date": 1533040001, "creation_date": 1533040001, "answer_id": 51613396, "question_id": 51613228, "link": "https://stackoverflow.com/questions/51613228/how-do-i-find-out-the-type-of-a-haskell-expression-without-ghci/51613396#51613396", "title": "How do I find out the type of a haskell expression without ghci?", "body": "<p>Annotating intentionally wrong type (often <code>()</code>) would help you.<br>\nFor example:</p>\n\n<pre><code>&gt; (\\x y -&gt; map x (y (. x))) :: ()\n\n&lt;interactive&gt;:1:2: error:\n    \u2022 Couldn't match expected type \u2018()\u2019\n                  with actual type \u2018(a0 -&gt; b0)\n                                    -&gt; (((b0 -&gt; c0) -&gt; a0 -&gt; c0) -&gt; [a0]) -&gt; [b0]\u2019\n    \u2022 The lambda expression \u2018\\ x y -&gt; map x (y (. x))\u2019\n      has two arguments,\n      but its type \u2018()\u2019 has none\n      In the expression: (\\ x y -&gt; map x (y (. x))) :: ()\n      In an equation for \u2018it\u2019: it = (\\ x y -&gt; map x (y (. x))) :: ()\n</code></pre>\n\n<p>This tip is introduced in this post: <a href=\"http://www.parsonsmatt.org/2018/05/19/ghcid_for_the_win.html\" rel=\"nofollow noreferrer\">http://www.parsonsmatt.org/2018/05/19/ghcid_for_the_win.html</a></p>\n"}, {"tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": true, "score": 2, "last_activity_date": 1533133877, "last_edit_date": 1533133877, "creation_date": 1533055470, "answer_id": 51618303, "question_id": 51613228, "link": "https://stackoverflow.com/questions/51613228/how-do-i-find-out-the-type-of-a-haskell-expression-without-ghci/51618303#51618303", "title": "How do I find out the type of a haskell expression without ghci?", "body": "<p>I take it by \"weird\" you pretty much mean higher order functions. This expression contains two: <code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</code> and <code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code>. It is also a lambda, so likely a higher order function itself. Each parenthesized arrow here is the type of a function parameter. </p>\n\n<p><code>map</code> reveals that <code>y</code> must return a list of items that <code>x</code> accepts as an argument. So they have the partial signatures <code>x :: _yitem -&gt; _outeritem</code> and <code>y :: _yarg -&gt; [_yitem]</code>, where the return value of this <code>map</code> is of type <code>[_outeritem]</code>. Note that we don't know yet how many arrows fit in these wildcards. </p>\n\n<p><code>(. x)</code> translates to <code>\\l -&gt; l . x</code> which translates to <code>\\l r -&gt; l (x r)</code>. This entire lambda is an argument that fits <code>y</code>, so <code>y</code> is a higher order function. <code>l</code> must accept the return value from <code>x</code>. That has a name, so <code>l :: _outeritem -&gt; _lret</code>, and <code>(. x) :: (_outeritem -&gt; _lret) -&gt; _xarg -&gt; _lret</code>, since <code>r</code> is used as the argument for <code>x</code>. Oh, and <code>_xarg</code> is known because of the map to be <code>_yitem</code>. </p>\n\n<p>Okay, that was a bunch of confusing steps in their own right, so let's line up the results:</p>\n\n<pre><code>type OuterLambda = _xtype -&gt; _ytype -&gt; MapRet\nx :: _yitem -&gt; _outeritem\ntype MapRet = [_outeritem]\ny :: YArg -&gt; [_yitem]\ntype YArg = (_outeritem -&gt; _lret) -&gt; _yitem -&gt; _lret\ny :: ((_outeritem -&gt; _lret) -&gt; _yitem -&gt; _lret) -&gt; [_yitem]\n</code></pre>\n\n<p>Progress! This has names for every type to and from <code>x</code> and <code>y</code>. But our expression is a lambda, so we must accept those two:</p>\n\n<pre><code>(_yitem -&gt; _outeritem) -&gt; \n(((_outeritem -&gt; _lret) -&gt; _yitem -&gt; _lret) -&gt; [_yitem]) -&gt;\n[_outeritem]\n</code></pre>\n\n<p>That's one very long type. Let's compare it to the compiler inferred type that Yuji Yamamoto showed us:</p>\n\n<pre><code>(a0 -&gt; b0) -&gt; \n(((b0 -&gt; c0) -&gt; a0 -&gt; c0) -&gt; [a0]) -&gt; \n[b0]\n</code></pre>\n\n<p>It matches. We have here quite a few orders of function: the expression expects functions <code>x</code> and <code>y</code>, and <code>y</code> expects a function that itself takes a <code>l</code> function. And all of the types we do have names for may in turn be arbitrarily complex. </p>\n"}], "owner": {"reputation": 299, "user_id": 3047143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87db5dac2e899b66815a44fcb348c4fa?s=128&d=identicon&r=PG&f=1", "display_name": "Highness", "link": "https://stackoverflow.com/users/3047143/highness"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "accepted_answer_id": 51618303, "answer_count": 2, "score": -1, "last_activity_date": 1533133877, "creation_date": 1533039495, "last_edit_date": 1533039555, "question_id": 51613228, "link": "https://stackoverflow.com/questions/51613228/how-do-i-find-out-the-type-of-a-haskell-expression-without-ghci", "title": "How do I find out the type of a haskell expression without ghci?", "body": "<p>I'm pretty good at inferring the type of a lambda expression as long as it does not have any weird functions such as <code>map</code>, <code>filter</code>, <code>foldr</code> or any compositions in it. However, as soon as I have something like</p>\n\n<pre><code>\\x y -&gt; map x (y (. x))\n</code></pre>\n\n<p>I get totally lost and can't for the life of me figure out how to find out the type without using ghci.</p>\n\n<p>Any help would be much appreciated</p>\n\n<p>Thank you  </p>\n"}, {"tags": ["haskell", "haskell-stack", "wxhaskell"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1533031244, "post_id": 51610377, "comment_id": 90185920, "body": "wxHaskell is not part of the current stack release; And you shouldn&#39;t try to use a different version from <code>base</code> (or <code>Cabal</code> and <code>process</code> for that matter) other than what&#39;s in the resolver. You can try to reconfigure with <code>--resolver lts-9.21</code>. LTS 9.21 had base 4.10, so that might work as long as you remove everything not wx-releated from your extra deps"}, {"owner": {"reputation": 127, "user_id": 1196579, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/03b94a6dbf8d6122701cd5b88e8c4808?s=128&d=identicon&r=PG", "display_name": "Lemoi", "link": "https://stackoverflow.com/users/1196579/lemoi"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1533032998, "post_id": 51610377, "comment_id": 90187035, "body": "LTS 9.21 gives the same problem. Guess it&#39;s time to start using cabal."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 2, "creation_date": 1533039942, "post_id": 51610377, "comment_id": 90191755, "body": "For me this works with <code>lts-8.16</code> and <code>extra-deps: - wxdirect-0.92.3.0 - wxc-0.92.3.0 - wxcore-0.92.3.0 - wx-0.92.3.0</code>. Don&#39;t you have a constraint on <code>base</code> in the cabal file? Good luck, I remember I had a hard time to make it work..."}], "answers": [{"tags": [], "owner": {"reputation": 127, "user_id": 1196579, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/03b94a6dbf8d6122701cd5b88e8c4808?s=128&d=identicon&r=PG", "display_name": "Lemoi", "link": "https://stackoverflow.com/users/1196579/lemoi"}, "is_accepted": false, "score": 0, "last_activity_date": 1533049389, "last_edit_date": 1533049389, "creation_date": 1533048782, "answer_id": 51616306, "question_id": 51610377, "link": "https://stackoverflow.com/questions/51610377/stack-is-unable-to-resolve-dependencies-instaling-wx/51616306#51616306", "title": "stack is unable to resolve dependencies instaling wx", "body": "<p>The hint given by <a href=\"https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent\">St\u00e9phane Laurent</a> works! On my Debian 9 (stretch) I used the following steps:</p>\n\n<ol>\n<li><p>Install the required libraries</p>\n\n<pre><code>sudo apt-get install libwxgtk3.0-dev libwxgtk-webview3.0-dev libwxgtk-media3.0-dev\n</code></pre></li>\n<li><p>Create a stack project with <code>stack new &lt;app&gt; new-template</code> and change to the <code>&lt;app&gt;</code> directory</p></li>\n<li><p>Make the following changes to the <code>stack.yaml</code> file:</p>\n\n<pre><code>resolver: lts-8.16\n\nextra-deps:\n- wxdirect-0.92.3.0\n- wxc-0.92.3.0\n- wxcore-0.92.3.0\n- wx-0.92.3.0\n</code></pre></li>\n<li><p>Run <code>stack install wx</code> and be patient!</p></li>\n<li>Add <code>- wx</code> to the list of dependencies in the <code>package.yaml</code> file</li>\n</ol>\n"}], "owner": {"reputation": 127, "user_id": 1196579, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/03b94a6dbf8d6122701cd5b88e8c4808?s=128&d=identicon&r=PG", "display_name": "Lemoi", "link": "https://stackoverflow.com/users/1196579/lemoi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 184, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1533049389, "creation_date": 1533030318, "question_id": 51610377, "link": "https://stackoverflow.com/questions/51610377/stack-is-unable-to-resolve-dependencies-instaling-wx", "title": "stack is unable to resolve dependencies instaling wx", "body": "<p>I am trying to get wx installed using stack. I don't have Haskell installed globally and use <code>stack new &lt;app&gt; new-template</code> to create a new project. Next, within the  directory I run <code>stack install wx</code> and get an error message:</p>\n\n<pre><code>In the dependencies for wx-0.92.3.0:\n    wxcore must match &gt;=0.92, but the stack configuration has no specified\n           version  (latest matching version is 0.92.3.0)\n</code></pre>\n\n<p>Following-up the recommended actions and rerunning <code>stack install wx</code> a couple of times, the extra-deps list looks like this:</p>\n\n<pre><code>- wxcore-0.92.3.0\n- wxc-0.92.3.0\n- wxdirect-0.92.3.0\n- Cabal-1.24.2.0\n- process-1.4.3.0\n- base-4.10.1.0\n</code></pre>\n\n<p>at this point, stack complains:</p>\n\n<pre><code>In the dependencies for process-1.4.3.0:\n    base-4.11.1.0 from stack configuration does not match &gt;=4.4 &amp;&amp; &lt;4.11 \n                  (latest matching version is 4.10.1.0)\n</code></pre>\n\n<p>and suggesting to add <code>base-4.10.1.0</code> again, but which is already there.</p>\n\n<p>Q: so, how should I install wx?</p>\n\n<p>Is it really that hard to get wxHaskell going? Should I start using cabal instead of stack?\nI use the latest stack version 1.7.1 with lts-12.4 as the resolver.\nA similar <a href=\"https://stackoverflow.com/questions/34009800/why-does-stack-not-recognize-the-dependency-it-just-installed\">question</a> was posted back in 2015. </p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 470, "user_id": 4815713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b92f538fcec16fee1bdbbae286291c95?s=128&d=identicon&r=PG&f=1", "display_name": "Paul Georg Podlech", "link": "https://stackoverflow.com/users/4815713/paul-georg-podlech"}, "edited": false, "score": 3, "creation_date": 1533027141, "post_id": 51609083, "comment_id": 90183268, "body": "In general, you would try to find the type of any sub-expression. The type of (.) is known, and from that you can deduce the types of x and (y z). Maybe try starting with that."}], "answers": [{"comments": [{"owner": {"reputation": 470, "user_id": 4815713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b92f538fcec16fee1bdbbae286291c95?s=128&d=identicon&r=PG&f=1", "display_name": "Paul Georg Podlech", "link": "https://stackoverflow.com/users/4815713/paul-georg-podlech"}, "edited": false, "score": 2, "creation_date": 1533027314, "post_id": 51609305, "comment_id": 90183381, "body": "You should note, that you can omit the brackets in the return type to match the signature that ghc calculates."}], "tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 5, "last_activity_date": 1533059909, "last_edit_date": 1533059909, "creation_date": 1533027214, "answer_id": 51609305, "question_id": 51609083, "link": "https://stackoverflow.com/questions/51609083/how-to-find-the-type-of-x-y-z-x-y-z/51609305#51609305", "title": "How to find the type of (\\x y z -&gt; x . y z)", "body": "<p>Work backwards, and assign type variables until they are specified:</p>\n\n<pre><code>-- We assign types one by one:\n(.) x (y z) :: a -- So,\n(y z) :: b\n(.) x :: b -&gt; a\nx :: c\n(.) :: c -&gt; b -&gt; a\n</code></pre>\n\n<p>But we know that <code>(.) :: (y -&gt; z) -&gt; (x -&gt; y) -&gt; (x -&gt; z)</code>, so, we can equate some types, written with <code>~</code>:</p>\n\n<pre><code>c ~ y -&gt; z\nb ~ x -&gt; y\na ~ x -&gt; z\n</code></pre>\n\n<p>We now know that:</p>\n\n<pre><code>x :: y -&gt; z\n(.) x (y z) :: x -&gt; z\ny z :: x -&gt; y\n</code></pre>\n\n<p>So</p>\n\n<pre><code>z :: d\ny :: d -&gt; x -&gt; y\n</code></pre>\n\n<p>Finally, we just complete the type of the function</p>\n\n<pre><code>--                     (type of x) (Type of y) (type of z) (return type)\n(\\x y z -&gt; x . y z) :: (y -&gt; z) -&gt; (d -&gt; x -&gt; y) -&gt; d -&gt; (x -&gt; z)\n</code></pre>\n\n<p>Finally, we can ask GHCi for confirmation:</p>\n\n<pre><code>Prelude&gt; :t (\\x y z -&gt; x . y z)\n(\\x y z -&gt; x . y z) :: (b -&gt; c) -&gt; (t -&gt; a -&gt; b) -&gt; t -&gt; a -&gt; c\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "is_accepted": false, "score": 5, "last_activity_date": 1533028292, "last_edit_date": 1533028292, "creation_date": 1533027626, "answer_id": 51609442, "question_id": 51609083, "link": "https://stackoverflow.com/questions/51609083/how-to-find-the-type-of-x-y-z-x-y-z/51609442#51609442", "title": "How to find the type of (\\x y z -&gt; x . y z)", "body": "<p>We can expand the expression <code>\\x y z -&gt; x . y z</code> as follows:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>  \\x y z   -&gt; x . y z\n\u2261 \\x y z w -&gt; x (y z w) -- because (f . g) \u2261 (\\x -&gt; f (g x))\n\u2261 \\f g x y -&gt; f (g x y) -- renaming the variables\n</code></pre>\n\n<p>Now, we can look at the types:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>x :: a1\ny :: a2\n\n-- Because g is applied to x and y:\n\ng :: (a1 -&gt; a2 -&gt; b)\n\n-- Because f is applied to (g x y):\n\nf :: (b -&gt; c)\n\n-- Therefore:\n\n(\\f g x y -&gt; f (g x y)) :: (b -&gt; c) -&gt; (a1 -&gt; a2 -&gt; b) -&gt; a1 -&gt; a2 -&gt; c\n                        -- \u2514\u2500\u2500\u252c\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502     \u2502\n                        --    f               g           x     y\n</code></pre>\n\n<p>As you can see, this function just composes <code>f</code> and <code>g</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\nx :: a1 \u2500\u2500\u2524       \u2502       \u2502       \u2502\n          \u2502   g   \u251c\u2500\u2500 b \u2500\u2500\u2524   f   \u251c\u2500\u2500 c\ny :: a2 \u2500\u2500\u2524       \u2502       \u2502       \u2502\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>\n\n<p>For more information, take a look at the following question and answer: <a href=\"https://stackoverflow.com/questions/20279306/what-does-f-g-mean-in-haskell/20279307#20279307\">What does (f .) . g mean in Haskell?</a></p>\n"}], "owner": {"reputation": 579, "user_id": 2310837, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/31dd98bf2d532f8d0addfcb5665c3134?s=128&d=identicon&r=PG", "display_name": "joelfischerr", "link": "https://stackoverflow.com/users/2310837/joelfischerr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 297, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1533059909, "creation_date": 1533026542, "question_id": 51609083, "link": "https://stackoverflow.com/questions/51609083/how-to-find-the-type-of-x-y-z-x-y-z", "title": "How to find the type of (\\x y z -&gt; x . y z)", "body": "<p>I'm trying to find the type of <code>(\\x y z -&gt; x . y z)</code> but haven't had any success in finding the same type as ghci</p>\n\n<pre><code>(\\x y z -&gt; x . y z) :: (b -&gt; c) -&gt; (t -&gt; a -&gt; b) -&gt; t -&gt; a -&gt; c\n</code></pre>\n\n<p>After removing the infix functions and getting <code>(\\x y z -&gt; (.) x (y z))</code>, I'm not sure how to proceed.</p>\n"}, {"tags": ["haskell", "xml-conduit"], "comments": [{"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1533098518, "post_id": 51605604, "comment_id": 90215616, "body": "What happens if you replace <code>head</code> with <code>mconcat</code> to get <i>all</i> of the descendant text nodes instead of just the first one? You may also need to consider using <code>strip</code> to get rid of whitespace."}, {"owner": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1533131029, "post_id": 51605604, "comment_id": 90234029, "body": "@MichaelSnoyman Ah, I see. Thanks."}], "owner": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1533012343, "creation_date": 1533012343, "question_id": 51605604, "link": "https://stackoverflow.com/questions/51605604/how-to-check-on-nodes-content-in-text-xml-cursor", "title": "How to check on nodes&#39; content in Text.XML.Cursor?", "body": "<p>I have this XPath works with xmllint</p>\n\n<pre><code>//td[text() = 'USD']/../td[6]/text()\n</code></pre>\n\n<p>Now I want it to be done in Haskell. But following (not complete of the original XPath) does not work at all. I got empty list error on head.</p>\n\n<pre><code>cur $// element \"td\" &amp;// check (\\c \u2192 \"USD\" \u2261 head (c $// content))\n</code></pre>\n"}, {"tags": ["haskell", "template-haskell"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1533011142, "post_id": 51605251, "comment_id": 90176238, "body": "I really wish template Haskell had never been modified to accept bare expressions at the top level. Is saving 3 tokens worth all the confusion it causes?"}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 2, "creation_date": 1533011203, "post_id": 51605251, "comment_id": 90176259, "body": "I cannot find the<code>tableTypes</code> from hoogle. Please provide link to the module"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 0, "creation_date": 1533011365, "post_id": 51605251, "comment_id": 90176296, "body": "@max630 <a href=\"https://hackage.haskell.org/package/Frames-0.4.0/docs/Frames-CSV.html#v:tableType\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/Frames-0.4.0/docs/&hellip;</a>"}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 1, "creation_date": 1533012346, "post_id": 51605251, "comment_id": 90176529, "body": "maybe you need this: <a href=\"https://stackoverflow.com/a/25392121/2303202\">stackoverflow.com/a/25392121/2303202</a>"}], "answers": [{"comments": [{"owner": {"reputation": 514, "user_id": 2603063, "user_type": "registered", "profile_image": "https://graph.facebook.com/100003236457044/picture?type=large", "display_name": "Guilherme Jardim Duarte", "link": "https://stackoverflow.com/users/2603063/guilherme-jardim-duarte"}, "edited": false, "score": 0, "creation_date": 1533048316, "post_id": 51614268, "comment_id": 90197667, "body": "Your answer was really good, but even trying to compile the file, using ghc, it didn&#39;t work. It shows the same problem."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 514, "user_id": 2603063, "user_type": "registered", "profile_image": "https://graph.facebook.com/100003236457044/picture?type=large", "display_name": "Guilherme Jardim Duarte", "link": "https://stackoverflow.com/users/2603063/guilherme-jardim-duarte"}, "edited": false, "score": 0, "creation_date": 1533048661, "post_id": 51614268, "comment_id": 90197911, "body": "You&#39;re going to have to update the question. There&#39;s no way that can get the <i>same</i> error in a file. There are still lots of ways to get <i>some</i> error, but the fix depends on the error."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 1, "last_activity_date": 1533042804, "creation_date": 1533042804, "answer_id": 51614268, "question_id": 51605251, "link": "https://stackoverflow.com/questions/51605251/module-frames-tabletypes-does-not-work/51614268#51614268", "title": "Module Frames - TableTypes does not work", "body": "<p>You've stumbled into a case that's involves some advanced features of Haskell. The problem is that <code>tableTypes \"base\" \"base.csv\"</code> is a template haskell splice. For some reason, a few years back ghc was modified to allow bare expressions at the top level as splices, instead of requiring the standard splice syntax of <code>$(expression generating code to splice)</code>.</p>\n\n<p>But the bare expression syntax is incompatible with ghci. If you enter a bare expression in ghci, it tries to evaluate and print it (with some special rules for expressions that result in IO values).</p>\n\n<p>When ghci evaluates <code>tableTypes \"base\" \"base.csv\"</code> it gets a result back that's not an instance of Show, because the template haskell <code>Q</code> environment is not printable. It contains a bunch of functions.</p>\n\n<p>You have a few options here, depending on what you actually are trying to do. You could use <a href=\"https://hackage.haskell.org/package/template-haskell-2.13.0.0/docs/Language-Haskell-TH.html#v:run\" rel=\"nofollow noreferrer\"><code>runQ</code></a> in ghci to dump the AST generated by the splice. That's probably not what you want. That's more likely to be a tool that's useful when you're developing a splice than for testing a library that uses them.</p>\n\n<p>You could enable the TemplateHaskell extension within ghci and actually have it perform the splice interactively, but that's somewhat fiddly to get to work and you don't end up seeing much anyway.</p>\n\n<p>I think the most practical solution is to move your code into a file. You can load said file from ghci if you desire - the important part is that in the context of a file, there's no longer any syntactic ambiguity - that's definitely a splice to evaluate while compiling, not an expression to evaluate interactively. </p>\n"}], "owner": {"reputation": 514, "user_id": 2603063, "user_type": "registered", "profile_image": "https://graph.facebook.com/100003236457044/picture?type=large", "display_name": "Guilherme Jardim Duarte", "link": "https://stackoverflow.com/users/2603063/guilherme-jardim-duarte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1533042804, "creation_date": 1533009559, "last_edit_date": 1533011392, "question_id": 51605251, "link": "https://stackoverflow.com/questions/51605251/module-frames-tabletypes-does-not-work", "title": "Module Frames - TableTypes does not work", "body": "<p>I am a data scientist familiar with languages such as R and python. \nI have been trying to learn haskell for two months.</p>\n\n<p>There is a module people employ to deal with frames in haskell similarly to common packages in those other languages (tidyverse in R and pandas in python).</p>\n\n<p>The problem is: the common function for extracting data type for a csv is simply returning a message error:</p>\n\n<pre><code>tableTypes \"base\" \"base.csv\"\n\n&lt;interactive&gt;:2:1: error:\n    \u2022 No instance for (Show Language.Haskell.TH.Lib.DecsQ)\n        arising from a use of \u2018print\u2019\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>I cannot understand what this message means and I could not find any answer on Google. Could someone help me solve it?</p>\n\n<p>Link to the module: <a href=\"http://hackage.haskell.org/package/Frames\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/Frames</a></p>\n"}, {"tags": ["haskell", "type-level-computation"], "comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1533020613, "post_id": 51604551, "comment_id": 90179730, "body": "1) <code>Ord a</code> makes <code>Eq a</code> redundant: <code>Ord a</code> implies <code>Eq a</code>. 2) You can&#39;t write <code>rigify</code> with quite this type: <code>soften</code> throws away the <code>Ord</code>-ness stored at each <code>AddAttribute</code>. Perhaps use <code>data OSet a where OSet :: Ord a =&gt; Set a -&gt; OSet a; soften :: Representation xs -&gt; HList (Map OSet xs); rigify :: HList (Map OSet xs) -&gt; Representation xs</code>. 3) Use <code>unsafeCoerce</code>. The alternative is to reify some type information with a GADT and write a proof. While that is good practice, you should be fine if you just tread carefully."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1533039252, "post_id": 51604551, "comment_id": 90191219, "body": "@HTNW why not make that an answer?"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533062653, "post_id": 51604551, "comment_id": 90205686, "body": "@leftaroundabout I was a bit rushed at the time; I&#39;ve made it a full answer now."}], "answers": [{"tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 1, "last_activity_date": 1533062530, "last_edit_date": 1533062530, "creation_date": 1533061617, "answer_id": 51619848, "question_id": 51604551, "link": "https://stackoverflow.com/questions/51604551/converting-between-heterogeneous-lists/51619848#51619848", "title": "Converting between heterogeneous lists", "body": "<ol>\n<li><p><code>Ord a</code> makes <code>Eq a</code> redundant: <code>Ord a</code> implies <code>Eq a</code> because <code>class Eq a =&gt; Ord a</code>.</p>\n\n<pre><code>data Representation (a :: [Type]) where\n  ...\n  AddAttribute :: Ord a =&gt; Set a -&gt; Representation b -&gt; Representation (a ': b)\n\n(%&gt;) :: Ord a =&gt; [a] -&gt; Representation b -&gt; Representation (a ': b)\n</code></pre></li>\n<li><p>You can't write <code>rigify</code> with quite this type: <code>soften</code> throws away the <code>Ord</code>-ness stored at each <code>AddAttribute</code>. You can use</p>\n\n<pre><code>data OSet a where OSet :: Ord a =&gt; Set a -&gt; OSet a\nsoften :: Representation xs -&gt; HList (Map OSet xs)\nrigify :: HList (Map OSet xs) -&gt; Representation xs\n</code></pre>\n\n<p>and you may apply the age old \"list of pairs is a pair of lists\" trick on top of that</p>\n\n<pre><code>type family AllCon (xs :: [Constraint]) :: Constraint where\n  AllCon '[] = ()\n  AllCon (x : xs) = (x, AllCon xs)\ndata Dict c = c =&gt; Dict\nsoften :: Representation xs -&gt; (HList (Map Set xs), Dict (AllCon (Map Ord xs)))\nrigify :: AllCon (Map Ord xs) =&gt; HList (Map Set xs) -&gt; Representation xs\n</code></pre>\n\n<p>though I shall go with the former because it is more concise.</p></li>\n<li><p>Use <code>unsafeCoerce</code>. The alternative is to reify some type information with a GADT and write a proof. While that is good practice, that requires you to drag around (potentially large) values that represent things that are simply <em>true</em>, so you'll end up using <code>unsafeCoerce</code> anyway to avoid them. You can skip the proofs and go to the end products directly.</p>\n\n<pre><code>-- note how I always wrap the unsafeCoerce with a type signature\n-- this means that I reduce the chance of introducing something actually bogus\n-- I use these functions instead of raw unsafeCoerce in rigify, because I trust\n-- these to be correct more than I trust unsafeCoerce.\nmapNil :: forall f xs. Map f xs :~: '[] -&gt; xs :~: '[]\nmapNil Refl = unsafeCoerce Refl\n\ndata IsCons xs where IsCons :: IsCons (x : xs)\nmapCons :: forall f xs. IsCons (Map f xs) -&gt; IsCons xs\nmapCons IsCons = unsafeCoerce IsCons\n\nrigify :: HList (Map OSet xs) -&gt; Representation xs\nrigify HEmpty = case mapNil @OSet @xs Refl of Refl -&gt; NewRep\nrigify (x :&gt; xs) = case mapCons @OSet @xs IsCons of\n                        IsCons -&gt; case x of OSet x' -&gt; AddAttribute x' (rigify xs)\n</code></pre>\n\n<p>A proper proof would go as follows:</p>\n\n<pre><code>data Spine :: [k] -&gt; Type where\n  SpineN :: Spine '[]\n  SpineC :: Spine xs -&gt; Spine (x : xs)\n\nmapNil' :: forall f xs. Spine xs -&gt; Map f xs :~: '[] -&gt; xs :~: '[]\nmapNil' SpineN Refl = Refl\nmapNil' (SpineC _) impossible = case impossible of {}\n\nmapCons' :: forall f xs. Spine xs -&gt; IsCons (Map f xs) -&gt; IsCons xs\nmapCons' SpineN impossible = case impossible of {}\nmapCons' (SpineC _) IsCons = IsCons\n</code></pre>\n\n<p>For every list <code>xs</code>, there is one and only one (fully defined) value of <code>Spine xs</code> (it is a singleton type). To get from real proofs (like <code>mapNil'</code>) to their convenience versions (like <code>mapNil</code>), remove all the singleton arguments and make sure the return type is a mere proposition. (A mere proposition is a type with 0 or 1 values.) Replace the body with one that deeply evaluates the remaining arguments and uses <code>unsafeCoerce</code> for the return value.</p></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "is_accepted": false, "score": 1, "last_activity_date": 1533067790, "last_edit_date": 1533067790, "creation_date": 1533066716, "answer_id": 51621061, "question_id": 51604551, "link": "https://stackoverflow.com/questions/51604551/converting-between-heterogeneous-lists/51621061#51621061", "title": "Converting between heterogeneous lists", "body": "<h2>Use a type class</h2>\n\n<p>The desired behavior for <code>rigify</code> can be obtained by using a multi paramater type class instead.</p>\n\n<pre><code>class Rigible (xs :: [Type]) (ys :: [Type]) | xs -&gt; ys where\n  rigify :: HList xs -&gt; Representation ys\n\ninstance Rigible '[] '[] where\n  rigify HEmpty = NewRep\n\ninstance (Ord h, Rigible t t') =&gt; Rigible (Set h ': t) (h ': t') where\n  rigify (a :&gt; b) = AddAttribute a $ rigify b\n</code></pre>\n\n<p>Here we use a multiparam type class <code>Rigible</code> with an attached function <code>rigify</code>.  Our two parameters are the type for the representation and the type for the heterogeneous list.  They are functionally dependent to avoid ambiguity.</p>\n\n<p>In this way only <code>HList</code>s that are composed entirely of sets are <code>Rigible</code>.  From here you can even add the definition of <code>soften</code> to <code>Rigible</code> as well.</p>\n\n<pre><code>-- | soften takes a representation and converts it to a heterogeneous list.\n-- | rigify takes a heterogeneous list and converts it to a representation.\nclass Rigible (xs :: [Type]) (ys :: [Type]) | xs -&gt; ys where\n  rigify :: HList xs -&gt; Representation ys\n  soften :: Representation ys -&gt; HList xs\n\ninstance Rigible '[] '[] where\n  rigify HEmpty = NewRep\n  soften NewRep = HEmpty\n\ninstance (Ord h, Rigible t t') =&gt; Rigible (Set h ': t) (h ': t') where\n  rigify (a :&gt; b) = AddAttribute a $ rigify b\n  soften (AddAttribute a b) = a :&gt; soften b\n</code></pre>\n\n<p>This requires the additional pragma</p>\n\n<pre><code>{-# Language MultiParamTypeClasses, FunctionalDependencies, UndecidableInstances #-}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1533067923, "last_edit_date": 1533067923, "creation_date": 1533067165, "answer_id": 51621159, "question_id": 51604551, "link": "https://stackoverflow.com/questions/51604551/converting-between-heterogeneous-lists/51621159#51621159", "title": "Converting between heterogeneous lists", "body": "<p><code>HList</code> is usually wrong. What I mean is that as soon as you try to do very much, you're likely to end up with lots of problems. You can solve the problems, but it's annoying and often inefficient. There's another, very similar, construction that can go a lot further before it falls down.</p>\n\n<pre><code>data Rec :: [k] -&gt; (k -&gt; Type) -&gt; Type where\n  Nil :: Rec '[] f\n  (:::) :: f x -&gt; Rec xs f -&gt; Rec (x ': xs) f\n\ntype f ~&gt; g = forall x. f x -&gt; g x\n\nmapRec :: (f ~&gt; g) -&gt; Rec xs f -&gt; Rec xs g\nmapRec _ Nil = Nil\nmapRec f (x ::: xs) = f x ::: mapRec f xs\n</code></pre>\n\n<p>Note that you can do a certain sort of mapping without bringing in any type families at all!</p>\n\n<p>Now you can define</p>\n\n<pre><code>data OSet a = Ord a =&gt; OSet (Set a)\nnewtype Representation as = Representation (Rec as OSet)\n</code></pre>\n\n<p>An awful lot of generic <code>HList</code> functions can be rewritten very easily to support <code>Rec</code> instead.</p>\n\n<p>You can write bidirectional pattern synonyms to simulate your current interface if you like.</p>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "answer_count": 3, "score": 3, "last_activity_date": 1533067923, "creation_date": 1533003167, "last_edit_date": 1533040353, "question_id": 51604551, "link": "https://stackoverflow.com/questions/51604551/converting-between-heterogeneous-lists", "title": "Converting between heterogeneous lists", "body": "<p>I have two heterogeneous list structures. The first <code>HList</code> is a normal heterogeneous list, the second <code>Representation</code> is a heterogeneous list where all the members are sets.</p>\n\n<pre><code>{-# Language KindSignatures, DataKinds, TypeOperators, TypeFamilies, GADTs, FlexibleInstances, FlexibleContexts #-}\n\nimport Data.Kind\nimport Data.Set\n\ndata Representation (a :: [Type]) where\n  NewRep :: Representation '[]\n  AddAttribute :: (Ord a, Eq a) =&gt; Set a -&gt; Representation b -&gt; Representation (a ': b)\n\n(%&gt;) :: (Ord a, Eq a) =&gt; [a] -&gt; Representation b -&gt; Representation (a ': b)\n(%&gt;) = AddAttribute . fromList\ninfixr 6 %&gt;\n\n-- | A HList is a heterogenenous list.\ndata HList (a :: [Type]) where\n  HEmpty :: HList '[]\n  (:&gt;) :: a -&gt; HList b -&gt; HList (a ': b)\ninfixr 6 :&gt;\n</code></pre>\n\n<p><sup>(I've made these instances of <code>Show</code> at the bottom if that is helpful.)</sup>   </p>\n\n<p>Now I have a bunch of functions that work on <code>HList</code>s but don't work on <code>Representation</code>s.  I could rewrite all the functions but that's a big pain. I'd rather if there was some way to make <code>Representation</code>s in <code>HList</code>s and back.  That way I can use all the relevant functions without having to redefine them.  So I started to do this.  It was pretty easy to make a function that goes from <code>Representation</code>s to <code>HList</code>s:</p>\n\n<pre><code>type family Map (f :: Type -&gt; Type) (xs :: [Type]) :: [Type] where\n  Map f '[] = '[]\n  Map f (a ': b) = f a ': Map f b\n\n-- | soften takes an attribute representation and converts it to a heterogeneous list.\nsoften :: Representation a -&gt; HList (Map Set a)\nsoften NewRep = HEmpty\nsoften (AddAttribute a b) = a :&gt; soften b\n</code></pre>\n\n<p>However the other way is quite a bit harder.  I tried the following:</p>\n\n<pre><code>-- | rigify takes a heterogeneous list and converts it to a representation\nrigify :: HList (Map Set a) -&gt; Representation a\nrigify HEmpty = NewRep\nrigify (a :&gt; b) = AddAttribute a $ rigify b\n</code></pre>\n\n<p>However this fails, the compiler is not able to deduce that <code>a ~ '[]</code> in the first line. And fails in a similar fashion on the second.</p>\n\n<p>It appears to me that the compiler can't reason backwards in the same way it can forward.  This is not really very surprising, but I don't know exactly what the issue is, so I'm not really very sure how to get the compiler to reason correctly.  My thought was to make a type family that is the reverse of <code>Map</code> like so:</p>\n\n<pre><code>type family UnMap (f :: Type -&gt; Type) (xs :: [Type]) :: [Type] where\n  UnMap f '[] = '[]\n  UnMap f ((f a) ': b) = a ': UnMap f b\n</code></pre>\n\n<p>and then rewrite <code>rigify</code> in terms of <code>UnMap</code> instead of <code>Map</code>:</p>\n\n<pre><code>-- | rigify takes a heterogeneous list and converts it to a representation\nrigify :: HList a -&gt; Representation (UnMap Set a)\nrigify HEmpty = NewRep\nrigify (a :&gt; b) = AddAttribute a $ rigify b\n</code></pre>\n\n<p>This seems to reduce the problem but it still doesn't compile.  This time we are having the issue that <code>a</code> in the second line cannot be shown to be of type <code>Set x</code> which is required for <code>AddAttribute</code>.  This makes total sense to me but I don't know how I could remedy the issue.</p>\n\n<p>How can I convert from a heterogeneous list to a <code>Representation</code>?</p>\n\n<hr>\n\n<p><code>Show</code> instances:</p>\n\n<pre><code>instance Show (HList '[]) where\n  show HEmpty = \"HEmpty\"\ninstance Show a =&gt; Show (HList '[a]) where\n  show (a :&gt; HEmpty) = \"(\" ++ show a ++ \" :&gt; HEmpty)\"\ninstance (Show a, Show (HList (b ': c))) =&gt; Show (HList (a ': b ': c)) where\n  show (a :&gt; b) = \"(\" ++ show a ++ \" :&gt; \" ++ tail (show b)\n\ninstance Show (Representation '[]) where\n  show NewRep = \"NewRep\"\ninstance Show a =&gt; Show (Representation '[a]) where\n  show (AddAttribute h NewRep) = '(' : show (toList h) ++ \" %&gt; NewRep)\"\ninstance (Show a, Show (Representation (b ': c))) =&gt; Show (Representation (a ': b ': c)) where\n  show (AddAttribute h t) = '(' : show (toList h) ++ \" %&gt; \" ++ tail (show t)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 1030, "user_id": 521806, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/PaOw7.jpg?s=128&g=1", "display_name": "Juan Pablo Santos", "link": "https://stackoverflow.com/users/521806/juan-pablo-santos"}, "edited": false, "score": 4, "creation_date": 1533002715, "post_id": 51604363, "comment_id": 90174723, "body": "Check the type of (&gt;) in Ord. <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Ord.html#v:-62-\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.11.1.0/docs/&hellip;</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533022874, "post_id": 51604363, "comment_id": 90180882, "body": "If it were as you expected, what would be the result of <code>functionC 42 &quot;hello&quot;</code> ? Or <code>functionC [&quot;a&quot;, &quot;g&quot;] (True, Just &#39;a&#39;)</code> ? You can&#39;t expect to compare two distinct types only because they are ordered."}], "answers": [{"comments": [{"owner": {"reputation": 850, "user_id": 5484068, "user_type": "registered", "accept_rate": 18, "profile_image": "https://www.gravatar.com/avatar/a2ec720ad8a18aa36c86f0d6db5672fb?s=128&d=identicon&r=PG&f=1", "display_name": "vincedjango", "link": "https://stackoverflow.com/users/5484068/vincedjango"}, "edited": false, "score": 0, "creation_date": 1533009594, "post_id": 51604630, "comment_id": 90175958, "body": "Thanks you answered everything that could be answered. :)"}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 3, "last_activity_date": 1533004067, "creation_date": 1533004067, "answer_id": 51604630, "question_id": 51604363, "link": "https://stackoverflow.com/questions/51604363/type-variables-in-function-signature/51604630#51604630", "title": "Type variables in function signature", "body": "<p>I think you might be misreading type signatures.  Through no fault of your own\u2013\u2013the examples you using to inform your thinking are kind of confusing.  In particular, in your tuple example</p>\n\n<pre><code>functionS :: (a,b) -&gt; b\nfunctionS (x,y) = y\n</code></pre>\n\n<p>The notation <code>(_,_)</code> means two different things.  In the first line, <code>(a,b)</code> refers to a <em>type</em>, the type of pairs whose first element has type <code>a</code> and second has type <code>b</code>.  In the second line, <code>(x,y)</code> refers to <em>a specfiic pair</em>, where <code>x</code> has type <code>a</code> and <code>y</code> has type <code>b</code>.  While this \"pun\" provides a useful mnemonic, it can be confusing as you are first getting the hang of it.  I would rather that the type of pairs be a regular type constructor:</p>\n\n<pre><code>functionS :: Pair a b -&gt; b\nfunctionS (x,y) = y\n</code></pre>\n\n<p>So, moving on to your question.  In the signature you are given</p>\n\n<pre><code>functionC :: Ord a =&gt; a -&gt; a -&gt; Bool\n</code></pre>\n\n<p><code>a</code> is a <em>type</em>.  <code>Ord a</code> says that elements of the type <code>a</code> are orderable with respect to <em>each other</em>.  The function takes two arguments of the <em>same</em> type.  Some types that are orderable are <code>Integer</code> (numerically), <code>String</code> (lexicographically), and a bunch of others.  That means that you can tell which of two <code>Integer</code>s is the smaller, or which of two <code>String</code>s are the smaller.  However we don't necessarily know how to tell whether an <code>Integer</code> is smaller than a <code>String</code>  (and this is good!  Have you <em>seen</em> what kinds of <a href=\"https://dorey.github.io/JavaScript-Equality-Table/\" rel=\"nofollow noreferrer\">shenanigans</a> javascript has to do to support untyped equality? Haskell doesn't have to solve this problem at all!).  So that's what this signature is saying \u2013\u2013 there is only one single orderable type, <code>a</code>, and the function takes two elements of this same type.</p>\n\n<p>You might still be wondering why <code>functionS</code>'s signature has two different type variables.  It's because there is no constraint confining them to be the same, such as having to order them against each other.  <code>functionS</code> works equally well with a pair where both components are integers as when one is an integer and the other is a string.  It doesn't matter.  And Haskell always picks the <em>most general</em> type that works.  So if they are not forced to be the same, they will be different.</p>\n\n<p>There are more technical ways to explain all this, but I felt an intuitive explanation was in order.  I hope it's helpful!</p>\n"}], "owner": {"reputation": 850, "user_id": 5484068, "user_type": "registered", "accept_rate": 18, "profile_image": "https://www.gravatar.com/avatar/a2ec720ad8a18aa36c86f0d6db5672fb?s=128&d=identicon&r=PG&f=1", "display_name": "vincedjango", "link": "https://stackoverflow.com/users/5484068/vincedjango"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 51604630, "answer_count": 1, "score": 2, "last_activity_date": 1533004067, "creation_date": 1533001347, "question_id": 51604363, "link": "https://stackoverflow.com/questions/51604363/type-variables-in-function-signature", "title": "Type variables in function signature", "body": "<p>If I do the following</p>\n\n<pre><code>functionS (x,y) = y\n:t functionS\nfunctionS :: (a, b) -&gt; b\n</code></pre>\n\n<p>Now with this function:</p>\n\n<pre><code>functionC x y = if (x &gt; y) then True else False\n:t function\n</code></pre>\n\n<p>I would expect to get:</p>\n\n<pre><code>functionC :: (Ord a, Ord b) =&gt; a -&gt; b -&gt; Bool\n</code></pre>\n\n<p>But I get:</p>\n\n<pre><code>functionC :: Ord a =&gt; a -&gt; a -&gt; Bool\n</code></pre>\n\n<p>GHCI seems to be ok with the 2 previous results, but why does it give me the second? Why the type variable a AND b aren't defined?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "edited": false, "score": 0, "creation_date": 1532998286, "post_id": 51604021, "comment_id": 90173907, "body": "Can you include the definition of <code>scp</code> also?"}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1532998336, "post_id": 51604021, "comment_id": 90173914, "body": "Why are <code>&quot;dog&quot;</code> and <code>&quot;cat&quot;</code> together in one list while <code>&quot;goat&quot;</code> is alone in its own list?"}, {"owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "reply_to_user": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1532998461, "post_id": 51604021, "comment_id": 90173937, "body": "@Code-Apprentice <code>&quot;dog&quot;</code> and <code>&quot;cat&quot;</code> can be made simultaneously with the given letters, so they are grouped together. The function is intended to return lists of animals, and &quot;goat&quot; was a singleton list."}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "reply_to_user": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "edited": false, "score": 0, "creation_date": 1532998605, "post_id": 51604021, "comment_id": 90173957, "body": "@B.Mehta Ah, you mean that <code>&quot;dog&quot;</code> and <code>&quot;goat&quot;</code> can&#39;t be made simultaneously because they both have a <code>g</code> but there is only one in the input string. Is that correct?"}, {"owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "edited": false, "score": 0, "creation_date": 1532998663, "post_id": 51604021, "comment_id": 90173964, "body": "That&#39;s my impression, yes."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "edited": false, "score": 0, "creation_date": 1533040362, "post_id": 51604021, "comment_id": 90192071, "body": "@B.Mehta  was meant to be <code>fnd</code>. fixed now"}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1533040421, "post_id": 51604021, "comment_id": 90192105, "body": "@Code-Apprentice yes, you can make a list with &quot;dog&quot;,&quot;cat&quot; OR one with &quot;goat&quot;"}, {"owner": {"reputation": 1359, "user_id": 3346496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1230f0444613f0e8d74e5a71439d1e?s=128&d=identicon&r=PG&f=1", "display_name": "monocell", "link": "https://stackoverflow.com/users/3346496/monocell"}, "edited": false, "score": 0, "creation_date": 1533042426, "post_id": 51604021, "comment_id": 90193514, "body": "What would <code>fnd names &quot;aattcbn&quot;</code> give? <code>[[ bat, cat ], [ cat, ant ], [ bat, ant ]]</code> or something like <code>[[ bat, cat ], [ ant ]]</code>? You might want to think about that a bit..."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 1359, "user_id": 3346496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1230f0444613f0e8d74e5a71439d1e?s=128&d=identicon&r=PG&f=1", "display_name": "monocell", "link": "https://stackoverflow.com/users/3346496/monocell"}, "edited": false, "score": 0, "creation_date": 1533076583, "post_id": 51604021, "comment_id": 90211309, "body": "@monocell in its current state it would give <code>[[&quot;cat&quot;,&quot;bat&quot;],[&quot;cat&quot;,&quot;ant&quot;],[&quot;cat&quot;],[&quot;bat&quot;,&quot;ant&quot;],[&quot;bat&quot;],[&zwnj;&#8203;&quot;ant&quot;],[]]</code> but should give <code>[[&quot;cat&quot;,&quot;bat&quot;],[&quot;cat&quot;,&quot;ant&quot;],[&quot;bat&quot;,&quot;ant&quot;]]</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1533040457, "post_id": 51604702, "comment_id": 90192135, "body": "would you please give an example with accumulator?"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1533061248, "post_id": 51604702, "comment_id": 90205038, "body": "Updated my answer."}], "tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": false, "score": 0, "last_activity_date": 1533061221, "last_edit_date": 1533061221, "creation_date": 1533004690, "answer_id": 51604702, "question_id": 51604021, "link": "https://stackoverflow.com/questions/51604021/haskell-ending-part-of-recursive-call-early/51604702#51604702", "title": "Haskell - ending part of recursive call early", "body": "<p>One way would be to insert each element you find into a <code>Data.List.Ordered</code> or a set, rather than append it to the end of a list.  That guarantees uniqueness.  You could also pass the set you\u2019re generating as an accumulating parameter and make the function itself tail-recursive or a fold.</p>\n\n<h2>Update</h2>\n\n<p>Since it sounds like you want to solve this specific problem itself, here\u2019s a not-especially-efficient solution to a contrived problem: given a string, make a sorted list of every consecutive pair of letters, with no duplicates.</p>\n\n<pre><code>main :: IO ()\nmain = (print . myNub . digraphs) \"banana\"\n\ninsertSet :: Ord a =&gt; a -&gt; [a] -&gt; [a]\n{- Inserts an element into a set, represented as a sorted list in ascending\n - order.  If an element in the set is already equal to x, x replaces the\n - first such element.\n -}\ninsertSet x [] = [x]\ninsertSet x (y:ys) | x == y    = x:ys\n                   | x &lt; y     = x:y:ys\n                   | otherwise = y:(insertSet x ys)\n\nmyNub :: Ord a =&gt; [a] -&gt; [a]\n{- A na\u00efve insertion sort of the input list that removes duplicates (and equiv-\n - alents).\n -}\nmyNub xs = go [] xs where\n  go acc [] = acc\n  go acc (y:ys) = go (insertSet y acc) ys\n\ndigraphs :: String -&gt; [String]\n{- Returns the list of all consecutive pairs of letters in the string.\n -}\ndigraphs [] = []\ndigraphs [_] = []\ndigraphs (x1:x2:xs) = [x1,x2]:(digraphs (x2:xs))\n</code></pre>\n\n<p>Some basic optimizations you could do: sort the list in O(n log n) time and then scan it for duplicates in O(n) time; make the <code>acc</code> parameter of <code>insertSet</code> strict; use the <code>foldl'</code> higher-order function; use the function from <code>Data.List.Ordered</code>.</p>\n\n<p>You\u2019re better off using a different data structure, though.  In this case, since there are a small number of possible results (<code>[\"cat\"]</code>, <code>[\"dog\"]</code>, <code>[\"cat\",\"dog\"]</code>, etc.) that can be included or excluded by counting the occurrences of letters, you could simply count the number of times each letter occurs in a single pass.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1533061221, "creation_date": 1532997798, "last_edit_date": 1533040336, "question_id": 51604021, "link": "https://stackoverflow.com/questions/51604021/haskell-ending-part-of-recursive-call-early", "title": "Haskell - ending part of recursive call early", "body": "<p>I am trying to write a function that returns to possible lists of animals that can be drawn from a string (without repetition)</p>\n\n<p>ie given </p>\n\n<pre><code>dict=[\"dog\",\"cat\",\"bat\",\"cock\",\"cow\",\"pig\",\"fox\",\n      \"ant\",\"bird\",\"lion\",\"wolf\",\"deer\",\"bear\",\"frog\",\n      \"hen\",\"mole\",\"duck\",\"goat\"]\n</code></pre>\n\n<p>should give</p>\n\n<pre><code>\u03bb= fnd dict \"gtcoaode\"\n[[\"dog\",\"cat\"],[\"goat\"]]\n</code></pre>\n\n<p>I would like the output to just be maximum numbers of animals that can be drawn from the string in each case:</p>\n\n<p>my code so far is:</p>\n\n<pre><code>contains :: String -&gt; String -&gt; Bool\ncontains x y = length (x \\\\ y) == (length x - length y)\n\nfnd :: [String] -&gt; String -&gt; [String]\nfnd [] _ = [[]]\nfnd (x:xs) y\n     | y `contain` x = (([x]++) &lt;$&gt; (fnd (x:xs) (y \\\\ x))) ++ (fnd xs y)\n     | otherwise     = scp xs y\n</code></pre>\n\n<p>However this gives:</p>\n\n<pre><code>\u03bb= fnd names \"gtcoaode\"\n[[\"dog\",\"cat\"],[\"dog\"],[\"cat\"],[\"goat\"],[]]\n(0.01 secs, 2,144,368 bytes)\n</code></pre>\n\n<p>What is the best way to deal with the cases that are repititions</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": true, "score": 3, "last_activity_date": 1551749209, "last_edit_date": 1551749209, "creation_date": 1532995929, "answer_id": 51603824, "question_id": 51603571, "link": "https://stackoverflow.com/questions/51603571/online-average-in-haskell/51603824#51603824", "title": "Online average in Haskell", "body": "<p>A single Float is not enough to maintain a moving average, so your data type will have to hold more than a single Float. One obvious approach would be to define a data type with two fields, the average and a count of how many items it represents:</p>\n\n<pre><code>data MovingAverage = MovingAverage Int Float\n</code></pre>\n\n<p>Then it is easy to combine two MovingAverage values using their respective averages and item counts:</p>\n\n<pre><code>instance SemiGroup MovingAverage where\n  (MovingAverage n x) &lt;&gt; (MovingAverage m y) = -- ...\n</code></pre>\n\n<p>I've left the implementation blank because there are actually two reasonable implementations: you could</p>\n\n<ol>\n<li>Maintain the sum and a divisor, computing the actual average only when demanded;</li>\n<li>Maintain the average and a multiplier, refactoring every time you combine averages</li>\n</ol>\n\n<p>(1) will be cheaper if you combine averages more often than you look at them (since adding is cheaper than dividing and multiplying), but (2) will be cheaper if you query the same average many times, because it avoids dividing every time you query.</p>\n\n<p>In practice I would usually expect (1) to be the simplest approach, and perform reasonably well for normal workloads. There's an improvement to (1) you could try, which is probably overkill for just moving averages but could make sense if you try to apply this pattern to more expensive computations.</p>\n\n<pre><code>{-# LANGUAGE BangPatterns #-}\n\nimport Data.Semigroup\n\ndata MovingAverage = MovingAverage { sum :: !Float,\n                                     count :: !Int,\n                                     getAverage :: Float\n                                   }\n\nmkAverage :: Float -&gt; MovingAverage\nmkAverage x = MovingAverage x 1 x\n\ninstance Semigroup MovingAverage where\n  (MovingAverage x n _) &lt;&gt; (MovingAverage y m _) = MovingAverage quot div (quot / fromIntegral div)\n    where quot = x + y\n          div = n + m\n</code></pre>\n\n<p>This is the same as (1), except that we include a field for caching the result of the division, which is written but never read. So if a client calls <code>getAverage</code> multiple times on the same value, only one division is performed; or if they never call it, then no division is needed at all, and we can work just with nice cheap sums. The downside is that your record is larger, and you spend time allocating a lot of thunks that nobody ever looks at. As I said, you would probably only do this to cache a more expensive query, where you are also unsure whether it will be updated more often or queried more often.</p>\n\n<p>Example usage:</p>\n\n<pre><code>*Main Data.Semigroup&gt; getAverage $ mkAverage 13 &lt;&gt; stimes 9 (mkAverage 3)\n4.0\n</code></pre>\n"}], "owner": {"reputation": 4235, "user_id": 1518183, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/822d321afa518348af0f484e24eef47c?s=128&d=identicon&r=PG", "display_name": "user1518183", "link": "https://stackoverflow.com/users/1518183/user1518183"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 51603824, "answer_count": 1, "score": -1, "last_activity_date": 1551749209, "creation_date": 1532993587, "question_id": 51603571, "link": "https://stackoverflow.com/questions/51603571/online-average-in-haskell", "title": "Online average in Haskell", "body": "<p>I get across <a href=\"https://dev.to/nestedsoftware/calculating-a-moving-average-on-streaming-data-5a7k\" rel=\"nofollow noreferrer\">this article</a> about online average computation and I would like to translate this code into Haskell. My naive idea was to use semigroups:</p>\n\n<pre><code>import Data.Semigroup\n\nnewtype MovingAverage = MovingAverage { getMovingAverage :: Float }\n\ninstance Semigroup MovingAverage where\n  (MovingAverage a) &lt;&gt; (MovingAverage b) = MovingAverage (a+(a-b)*recip n) -- Variable not in scope: n\n</code></pre>\n\n<p>However, semigroups don't remember their position, so thus it's not possible to know value <code>n</code>.</p>\n\n<p><strong>So my question is:</strong> What's the most elegant way to solve this problem?</p>\n"}, {"tags": ["haskell", "dhall"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1533036714, "post_id": 51600871, "comment_id": 90189427, "body": "At least for this case, your type reimplements <code>Optional a</code>; the union isn&#39;t necessary."}], "answers": [{"tags": [], "owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "is_accepted": true, "score": 4, "last_activity_date": 1570676699, "last_edit_date": 1570676699, "creation_date": 1533070275, "answer_id": 51621877, "question_id": 51600871, "link": "https://stackoverflow.com/questions/51600871/how-to-use-polymorphic-type-constructors-in-dhall/51621877#51621877", "title": "How to use polymorphic type constructors in dhall", "body": "<p>I'll use a union type analogous to Haskell's <code>Either</code> to keep the following examples self-contained.</p>\n\n<p>Suppose we save the following <code>Either.dhall</code> file:</p>\n\n<pre><code>-- Either.dhall\n\u03bb(a : Type) \u2192 \u03bb(b : Type) \u2192 &lt; Left : a | Right : b &gt;\n</code></pre>\n\n<p>We *could provide a <code>makeEither.dhall</code> file like this:</p>\n\n<pre><code>-- makeEither.dhall\n\u03bb(a : Type) \u2192 \u03bb(b : Type) \u2192 constructors (./Either.dhall a b)\n</code></pre>\n\n<p>... and then we <em>could</em> use that file like this:</p>\n\n<pre><code>[ (./makeEither.dhall Text Natural).Left \"Foo\"\n, (./makeEither.dhall Text Natural).Right 1\n]\n</code></pre>\n\n<p>... but that that would not be ergonomic.</p>\n\n<p>For example, writing <code>./makeEither.dhall Text Natural</code> repeatedly is not necessary since we can reduce the repetition using a <code>let</code> expression, like this:</p>\n\n<pre><code>    let either = ./makeEither.dhall Text Natural\n\nin  [ either.Left \"Foo\", either.Right 1 ]\n</code></pre>\n\n<p>Also, note that we could have used <code>constructors</code> and <code>Either.dhall</code> directly in about the same amount of space:</p>\n\n<pre><code>    let either = constructors (./Either.dhall Text Natural)\n\nin  [ either.Left \"Foo\", either.Right 1 ]\n</code></pre>\n\n<p>... which means that we no longer need the intermediate <code>makeEither.dhall</code> file any longer.</p>\n\n<p>The final example is the approach I would recommend.  Specifically:</p>\n\n<ul>\n<li>Use a <code>let</code> expression to avoid repeated use of the <code>constructors</code> keyword</li>\n<li>Have the end user call <code>constructors</code> themselves instead of doing so for them</li>\n</ul>\n\n<p>For your latter question, I think that should go in a separate StackOverflow question.</p>\n\n<p><strong>Edit:</strong> Note that the <code>constructors</code> keyword is now obsolete and you can now just write:</p>\n\n<pre><code>let either = ./Either.dhall Text Natural\n\nin  [ either.Left \"Foo\", either.Right 1 ]\n</code></pre>\n\n<p>For more details, see:</p>\n\n<ul>\n<li><a href=\"https://github.com/dhall-lang/dhall-lang/wiki/Migration%3A-Deprecation-of-constructors-keyword\" rel=\"nofollow noreferrer\">Migration: Deprecation of <code>constructors</code> keyword</a></li>\n</ul>\n"}], "owner": {"reputation": 1242, "user_id": 3252252, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/4V81y.jpg?s=128&g=1", "display_name": "Jesuspc", "link": "https://stackoverflow.com/users/3252252/jesuspc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 305, "favorite_count": 2, "accepted_answer_id": 51621877, "answer_count": 1, "score": 4, "last_activity_date": 1570676699, "creation_date": 1532978289, "last_edit_date": 1532979091, "question_id": 51600871, "link": "https://stackoverflow.com/questions/51600871/how-to-use-polymorphic-type-constructors-in-dhall", "title": "How to use polymorphic type constructors in dhall", "body": "<p>I am trying to define a polymorphic type in Dhall. In Haskell it would look like:</p>\n\n<pre><code>data MyType a = Some a | SomethingElse\n</code></pre>\n\n<p>To do so I have defined this function in Dhall (mkMyType.dhall):</p>\n\n<pre><code>let SomethingElse = ./SomethingElse.dhall  in \u03bb(a : Type) \u2192 &lt; some : a | somethingElse : SomethingElse &gt;\n</code></pre>\n\n<p>I have also defined a function that returns the constructors for that type, given a (./mkMyTypeConstructor.dhall):</p>\n\n<pre><code>\u03bb(a : Type) \u2192 constructors (./mkMyType.dhall a)\n</code></pre>\n\n<p>Now, in order to use it I need to do something like:</p>\n\n<pre><code>(./mkMyTypeConstructor.dhall Text).some \"foo\"\n</code></pre>\n\n<p>Is this the right way to do this?</p>\n\n<p>Finally, what would be ideal to have in my use case would be a type that would type check both against for instance a Text such as \"foo\" and a custom type, for instance { somethingElse: {} }. Is this possible? </p>\n"}, {"tags": ["haskell", "ide", "atom-editor", "haskell-stack", "ghc-mod"], "comments": [{"owner": {"reputation": 10249, "user_id": 1329116, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e58c33b56b00d4148810d427a04e21e0?s=128&d=identicon&r=PG", "display_name": "idleberg", "link": "https://stackoverflow.com/users/1329116/idleberg"}, "edited": false, "score": 1, "creation_date": 1533026806, "post_id": 51600648, "comment_id": 90183090, "body": "What path did you provide exactly? Which packages did you install, <code>ide-haskell</code> or <code>ide-haskell-cabal</code>?"}], "owner": {"reputation": 2781, "user_id": 1540547, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/4f07f7dc869bd71c0ba13719468daeab?s=128&d=identicon&r=PG", "display_name": "jorgen", "link": "https://stackoverflow.com/users/1540547/jorgen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 201, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1532977441, "creation_date": 1532977441, "question_id": 51600648, "link": "https://stackoverflow.com/questions/51600648/haskell-ghc-mod-error-in-atom", "title": "Haskell GHC mod error in Atom", "body": "<p>I'm trying to set up a <a href=\"https://atom-haskell.github.io/\" rel=\"nofollow noreferrer\">Haskell IDE</a> with <a href=\"https://atom.io/\" rel=\"nofollow noreferrer\">Atom</a> on mac. I install the binaries with <a href=\"https://docs.haskellstack.org/en/stable/README/\" rel=\"nofollow noreferrer\">stack</a> and make sure the right paths are under \"Additional Path Directories\", but get the following errors from <a href=\"https://atom.io/packages/haskell-ghc-mod\" rel=\"nofollow noreferrer\">GHC mod</a>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/BzcF6.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/BzcF6.png\" alt=\"enter image description here\"></a></p>\n\n<p>I also tried using cabal instead of stack, with the same result.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1532979212, "post_id": 51600599, "comment_id": 90168293, "body": "Note the error hint: &quot;The function \u2018return\u2019 is applied to two arguments&quot;. You are calling <code>return</code> with arguments 1) <code>Just</code> and 2) <code>User{...}</code>. This is not what you want."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1532982593, "post_id": 51600599, "comment_id": 90169826, "body": "As an aside, I find &quot;The function <code>return</code> is applied to two arguments, but its type has only three&quot; pretty funny. I wonder what the error-message logic is that lets that happen."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532992690, "post_id": 51600599, "comment_id": 90172887, "body": "@DanielWagner It looks like the idea is that if the number of arguments is fixed (eg, <code>fst head [x]</code>), a reasonable error appears. But since <code>return</code> is polymorphic, <code>return f x</code> &quot;could&quot; have the right number of arguments, so we sneak by the &quot;are there too many arguments&quot; check. Then we land in code that assumes argument mismatch count means there are too few."}], "answers": [{"comments": [{"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1532979358, "post_id": 51600777, "comment_id": 90168371, "body": "Have no idea that return was a function. It has sense. Thanks a lot"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1532977913, "creation_date": 1532977913, "answer_id": 51600777, "question_id": 51600599, "link": "https://stackoverflow.com/questions/51600599/io-monad-with-expected-input-value/51600777#51600777", "title": "IO Monad with expected input value", "body": "<p>You just need more parentheses:</p>\n\n<pre><code>do return (Just(User { userId = 100, userName = \"Paul\" }))\n</code></pre>\n\n<p>Unlike many languages, <code>return</code> is not a special keyword in Haskell, but rather a library function, so one cannot omit parentheses around its argument as one could in other languages like C or Python.</p>\n"}, {"comments": [{"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1532982313, "post_id": 51601784, "comment_id": 90169693, "body": "Thanks, and about the do block with one arg is just a POC to understand better how do block works."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1532982211, "creation_date": 1532982211, "answer_id": 51601784, "question_id": 51600599, "link": "https://stackoverflow.com/questions/51600599/io-monad-with-expected-input-value/51601784#51601784", "title": "IO Monad with expected input value", "body": "<p>As an alternative to Daniel Wagner's answer, you can also use the <code>.</code> operator to compose <code>return</code> and <code>Just</code>:</p>\n\n<pre><code>getNumber = return . Just $ User { userId = 100, userName = \"Paul\" }\n</code></pre>\n\n<p>The <code>$</code> operator is a low-precedence function application operator that can be used to reduce parentheses; the above is equivalent to <code>return . Just (User { userId = 100, userName = \"Paul\" })</code>. (In fact, since <code>return = Just</code> in the <code>Maybe</code> instance, you could also write <code>return . return $ User { userId = 100, userName = \"Paul\" }</code>.)</p>\n\n<p>In any case, <code>do</code> is unnecessary here, as you have only one \"statement\" after the keyword.</p>\n"}], "owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 51600777, "answer_count": 2, "score": 1, "last_activity_date": 1532982211, "creation_date": 1532977277, "question_id": 51600599, "link": "https://stackoverflow.com/questions/51600599/io-monad-with-expected-input-value", "title": "IO Monad with expected input value", "body": "<p>I\u00b4m very new in Haskell, but still I cannot figure how the do block works regarding the monads.</p>\n\n<p>For instance Having this do block which I return Integer is consider <code>IO Integer</code></p>\n\n<pre><code>getNumber :: IO Integer -- A IO monad of type Integer\ngetNumber = return 100\n</code></pre>\n\n<p>But for instance having a do block that return a Maybe User the type of do block is <code>Maybe User</code> But I was expecting <code>IO (Maybe User)</code></p>\n\n<pre><code>persistUser :: IO (Maybe User)\npersistUser = do return Just(User { userId = 100, userName = \"Paul\" })\n</code></pre>\n\n<p>Instead the code is not even compiling. And I cannot figure the error compile.</p>\n\n<pre><code>\u2022 Couldn't match type \u2018a0 -&gt; Maybe a0\u2019 with \u2018IO (Maybe User)\u2019\n  Expected type: User -&gt; IO (Maybe User)\n    Actual type: User -&gt; a0 -&gt; Maybe a0\n\u2022 The function \u2018return\u2019 is applied to two arguments,\n  but its type \u2018(a0 -&gt; Maybe a0) -&gt; User -&gt; a0 -&gt; Maybe a0\u2019\n  has only three\n  In a stmt of a 'do' block:\n    return Just (User {userId = 100, userName = \"Paul\"})\n  In the expression:\n    do { return Just (User {userId = 100, userName = \"Paul\"}) }\n</code></pre>\n\n<p>It seems like is expecting a User as input, but even adding the signature</p>\n\n<p><code>User -&gt; IO (Maybe User)</code> or <code>User IO (Maybe User)</code> does not work.</p>\n\n<p>Maybe I misuderstood something in the documentation. Some clarification about this it would be great!!</p>\n\n<p>Regards.</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 6, "creation_date": 1532972212, "post_id": 51599415, "comment_id": 90164874, "body": "The question is predicated on a false assumption. There are no inputs or outputs; <code>g</code> is not a function."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1532972530, "post_id": 51599415, "comment_id": 90165037, "body": "<code>[a -&gt; a]</code> is exactly what it says - a list of functions."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 2, "last_activity_date": 1532972340, "creation_date": 1532972340, "answer_id": 51599493, "question_id": 51599415, "link": "https://stackoverflow.com/questions/51599415/haskell-curried-map/51599493#51599493", "title": "Haskell Curried Map", "body": "<p><code>(+) :: Num a =&gt; a -&gt; a -&gt; a</code>; it takes an number and returns a function that increases its argument.</p>\n\n<p><code>map (+) [1, 2, 3]</code>, then, is equivalent to <code>[(+ 1), (+ 2), (+ 3)]</code>. One way to use such a list of functions is with the <code>Applicative</code> instance of <code>[]</code>, which allows you to apply each function in a list to each value in another list. For example:</p>\n\n<pre><code>[(+ 1), (+ 2), (+ 3)] &lt;*&gt; [5] == [6, 7, 8]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 8, "last_activity_date": 1532972355, "creation_date": 1532972355, "answer_id": 51599496, "question_id": 51599415, "link": "https://stackoverflow.com/questions/51599415/haskell-curried-map/51599496#51599496", "title": "Haskell Curried Map", "body": "<p>One could, for example, apply each element of the list to a specific value:</p>\n\n<pre><code>&gt; map (\\f -&gt; f 3) g\n[4,5,6]\n</code></pre>\n\n<p>Or you could apply each function in the list to values in the corresponding position of another list:</p>\n\n<pre><code>&gt; zipWith (\\f x -&gt; f x) g [30,300,3000]\n[31,302,3003]\n</code></pre>\n\n<p>Or you could pattern match on the list, or use it in a list comprehension, or index it with <code>(!!)</code>, or, or, or... there are endless possibilities.</p>\n"}], "owner": {"reputation": 78, "user_id": 7327352, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RM6Nv.png?s=128&g=1", "display_name": "TDHTTT", "link": "https://stackoverflow.com/users/7327352/tdhttt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "accepted_answer_id": 51599496, "answer_count": 2, "score": 1, "last_activity_date": 1532973992, "creation_date": 1532971962, "last_edit_date": 1532973992, "question_id": 51599415, "link": "https://stackoverflow.com/questions/51599415/haskell-curried-map", "title": "Haskell Curried Map", "body": "<p>So I understand you can:</p>\n\n<pre><code>&gt; f = map (+1)\n&gt; f [1,2,3]\n[2,3,4]\n</code></pre>\n\n<p>However, what if you do:</p>\n\n<pre><code>&gt; g = map (+) [1,2,3]\n&gt; :t g\ng :: Num a =&gt; [a -&gt; a]\n</code></pre>\n\n<p>I am not sure how to use g. What are its input &amp; output?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1532963593, "post_id": 51597106, "comment_id": 90160188, "body": "That <code>join</code> is a toplevel function, not a member of the typeclass above."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1532963818, "post_id": 51597106, "comment_id": 90160335, "body": "ho you are rigth because of the indent..."}, {"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1532963983, "post_id": 51597106, "comment_id": 90160426, "body": "I have refined my question now thank you"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 7, "last_activity_date": 1532964175, "creation_date": 1532964175, "answer_id": 51597317, "question_id": 51597106, "link": "https://stackoverflow.com/questions/51597106/why-is-join-standalone-instead-of-part-of-the-minimal-implementation-of-the-mon/51597317#51597317", "title": "Why is join standalone, instead of part of the minimal implementation of the Monad typeclass?", "body": "<p><code>join</code> is not in <code>Monad</code> because it would break <code>GeneralizedNewtypeDeriving</code> in a subtle way for newtype-wrapped monad transformers, a very common use case. See <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Roles2#join\" rel=\"noreferrer\">the GHC wiki</a> for details.</p>\n"}, {"comments": [{"owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1532964891, "post_id": 51597337, "comment_id": 90160957, "body": "ok, do I risk anything by defining my own join function for the implementation of &gt;&gt;= for a given Monad instance ? is it a bad practice, from my current knowledge, I can&#39;t see how I could  be impacted by doing that..."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "edited": false, "score": 0, "creation_date": 1532966478, "post_id": 51597337, "comment_id": 90161907, "body": "@NicolasHenin Aside from being potentially less efficient, there isn\u2019t really any downside for doing that, no."}], "tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": true, "score": 23, "last_activity_date": 1532964241, "creation_date": 1532964241, "answer_id": 51597337, "question_id": 51597106, "link": "https://stackoverflow.com/questions/51597106/why-is-join-standalone-instead-of-part-of-the-minimal-implementation-of-the-mon/51597337#51597337", "title": "Why is join standalone, instead of part of the minimal implementation of the Monad typeclass?", "body": "<p>Sadly, <code>join</code> is not a part of the <code>Monad</code> typeclass in GHC\u2019s standard library because of technical restrictions related to generalized newtype deriving and the roles system. Long story short, given some newtype <code>newtype T m a = MkT (m a)</code>, GHC is not smart enough to figure out how to prove representational equality between <code>m (m a)</code> and <code>m (T m a)</code>, which is necessary for proving representational equality for the first argument of <code>join</code> (which has type <code>m (m a) -&gt; m a</code>).</p>\n\n<p>Fortunately, a recent extension to GHC Haskell, <code>QuantifiedConstraints</code>, might make it possible to make the roles system smart enough to support this. For a more detailed treatment of both the problem and its potential solution, see Ryan Scott\u2019s blog post, <a href=\"https://ryanglscott.github.io/2018/03/04/how-quantifiedconstraints-can-let-us-put-join-back-in-monad/\" rel=\"noreferrer\">How QuantifiedConstraints can let us put join back in Monad</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": false, "score": 0, "last_activity_date": 1532964893, "creation_date": 1532964893, "answer_id": 51597515, "question_id": 51597106, "link": "https://stackoverflow.com/questions/51597106/why-is-join-standalone-instead-of-part-of-the-minimal-implementation-of-the-mon/51597515#51597515", "title": "Why is join standalone, instead of part of the minimal implementation of the Monad typeclass?", "body": "<p><code>join</code> isn't defined in the <code>Applicative</code> class. Check the indentation; all the class methods are indented, whereas <code>join</code> isn't. So it's not a class method.</p>\n\n<p>Sadly, <code>join</code> isn't in the <code>Monad</code> class either, so there's no possibility of defining the class that way. <code>join</code> is defined identically for all monads.</p>\n\n<p>Currently, the best you can do is define a <code>myCustomJoin</code> function, and then use that in the <code>Monad</code> instance definition of <code>&gt;&gt;=</code>.</p>\n"}], "owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 555, "favorite_count": 1, "accepted_answer_id": 51597337, "answer_count": 3, "score": 14, "last_activity_date": 1551108722, "creation_date": 1532963487, "last_edit_date": 1551108722, "question_id": 51597106, "link": "https://stackoverflow.com/questions/51597106/why-is-join-standalone-instead-of-part-of-the-minimal-implementation-of-the-mon", "title": "Why is join standalone, instead of part of the minimal implementation of the Monad typeclass?", "body": "<p>I would prefer defining an instance of Monad via the join function instead of <code>&gt;&gt;=</code> ... Starting from that equivalence:</p>\n\n<pre><code>x &gt;&gt;= f = join (fmap f x)\n</code></pre>\n\n<p>Could you define a Monad instance only with join?</p>\n\n<p>I would have expected join in Monad with: <code>{-# MINIMAL (&gt;&gt;=)| join #-}</code></p>\n\n<p>Why is <code>join</code> at the top level and not even in the <code>Monad</code> typeclass?</p>\n"}, {"tags": ["haskell", "algebraic-data-types", "user-defined-data-types", "value-constructor"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1532964044, "post_id": 51597063, "comment_id": 90160455, "body": "Note that <code>Orange</code>, <code>Pink</code>, etc. aren&#39;t types; they are constructors of the <code>Color</code> (or <code>Fruit</code>) type."}, {"owner": {"reputation": 117, "user_id": 4790243, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3ba3154d03d7a3b91a86934ef344d0b?s=128&d=identicon&r=PG&f=1", "display_name": "user17472", "link": "https://stackoverflow.com/users/4790243/user17472"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1532964699, "post_id": 51597063, "comment_id": 90160837, "body": "yes you are right, sorry for the confusion , editing it to value constructor for types"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581581392, "post_id": 51597063, "comment_id": 106485014, "body": "because Haskell&#39;s type unions are <a href=\"https://en.wikipedia.org/wiki/Tagged_union\" rel=\"nofollow noreferrer\"><i>tagged</i></a>."}, {"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581605473, "post_id": 51597063, "comment_id": 106498975, "body": "@WillNess I don&#39;t think that&#39;s why. In principle, I think you could do this with something akin to <code>DuplicateRecordFields</code>, but it just hasn&#39;t been written yet."}], "answers": [{"comments": [{"owner": {"reputation": 117, "user_id": 4790243, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3ba3154d03d7a3b91a86934ef344d0b?s=128&d=identicon&r=PG&f=1", "display_name": "user17472", "link": "https://stackoverflow.com/users/4790243/user17472"}, "edited": false, "score": 0, "creation_date": 1532966275, "post_id": 51597743, "comment_id": 90161789, "body": "Thank for your answer. i am somewhat able to understand it, but still not sure why the constraint exists. you demonstrated that it is not possible to determine the type of Orange which is understandable., but in usage i am forcing a type on Orange and this should be permitted       fruitILike :: Fruit     fruitILike = Orange       myFavouriteColour :: Colour     myFavouriteColour = Orange  If i don&#39;t provide a type sig nature then sure compiler should give an error, but when types are specified should it allow ?"}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 117, "user_id": 4790243, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3ba3154d03d7a3b91a86934ef344d0b?s=128&d=identicon&r=PG&f=1", "display_name": "user17472", "link": "https://stackoverflow.com/users/4790243/user17472"}, "edited": false, "score": 1, "creation_date": 1532966514, "post_id": 51597743, "comment_id": 90161932, "body": "The constraint exists because the compiler assumes all functions have a single type. When you import qualified, you are specifying different functions. In your implementation, you have defined the function <code>Orange</code> twice in the same module, and given it conflicting type signatures. Does that make sense?"}, {"owner": {"reputation": 117, "user_id": 4790243, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3ba3154d03d7a3b91a86934ef344d0b?s=128&d=identicon&r=PG&f=1", "display_name": "user17472", "link": "https://stackoverflow.com/users/4790243/user17472"}, "edited": false, "score": 0, "creation_date": 1532966679, "post_id": 51597743, "comment_id": 90162009, "body": "Alright i think i am getting to it now.  If it is not too much to ask, what should my approach be for modelling this data ?"}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 117, "user_id": 4790243, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3ba3154d03d7a3b91a86934ef344d0b?s=128&d=identicon&r=PG&f=1", "display_name": "user17472", "link": "https://stackoverflow.com/users/4790243/user17472"}, "edited": false, "score": 0, "creation_date": 1532966760, "post_id": 51597743, "comment_id": 90162051, "body": "Yes, data constructors behave as functions as well. For example if you define <code>data Fruit = Apple Colour</code>, you would have <code>Apple</code> as a function that takes a <code>Colour</code> and returns a <code>Fruit</code>"}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 117, "user_id": 4790243, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3ba3154d03d7a3b91a86934ef344d0b?s=128&d=identicon&r=PG&f=1", "display_name": "user17472", "link": "https://stackoverflow.com/users/4790243/user17472"}, "edited": false, "score": 2, "creation_date": 1532966841, "post_id": 51597743, "comment_id": 90162086, "body": "You can either use <code>OrangeColour</code> and <code>OrangeFruit</code> as the constructors (i.e. make the names different) or you can move the definitions to different modules. Either solution should work for you!"}], "tags": [], "owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "is_accepted": true, "score": 7, "last_activity_date": 1532965657, "creation_date": 1532965657, "answer_id": 51597743, "question_id": 51597063, "link": "https://stackoverflow.com/questions/51597063/why-cant-i-re-use-same-value-constructor-among-different-data-types/51597743#51597743", "title": "Why can&#39;t i re-use same value constructor among different data types?", "body": "<p>As a quick exercise try just defining one of your data types and then opening up GHCi to inspect it. </p>\n\n<pre><code>data Colour = Red | Pink | Orange | Yellow\n</code></pre>\n\n<p>If you use <code>:t</code> in GHCi, it will tell you the type of anything. </p>\n\n<pre><code>&gt; :t Red\nRed :: Colour\n&gt; :t Orange \nOrange :: Colour \n</code></pre>\n\n<p>So this tells you that your data constructor <code>Orange</code> is really just a function that takes no arguments and produces a value of type <code>Colour</code>. </p>\n\n<p>So what happens if you add a duplicate declaration? </p>\n\n<pre><code>data Colour = Red | Pink | Orange | Yellow\ndata Fruit  = Apple | Orange | Banana\n</code></pre>\n\n<p>Now you have defined a function <code>Orange</code> that takes no arguments and produces a value of type <code>Colour</code> or a value of type <code>Fruit</code>. This won't work at all! It would be the same as defining your own custom function <code>foo</code> and giving it multiple type signatures: </p>\n\n<pre><code>foo :: Int \nfoo :: String\nfoo = \"6\"\n</code></pre>\n\n<p>Which obviously doesn't work either. </p>\n\n<p>To get around this, you can define each data type in its own module, and use a qualified import to scope them correctly: </p>\n\n<pre><code>import qualified Colour as C -- Module Colour.hs \nimport qualified Fruit as F -- Module Fruit.hs \n\norange1 = C.Orange :: C.Colour \norange2 = F.Orange :: F.Fruit\n</code></pre>\n\n<p>Now, you might be thinking <em>\"The compiler is smart, it should know what <code>Orange</code> I'm talking about when I'm using it.\"</em> and you'd be partially right. There is an ongoing effort to bring Overloaded or Duplicate record fields into Haskell. There are various other questions of that ilk already defined here, but I'll list a few \n references for further reading. </p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/41008295/why-duplicaterecordfields-cannot-have-type-inference\">Why DuplicateRecordFields cannot have type inference?</a></li>\n<li><a href=\"https://github.com/adamgundry/ghc-proposals/blob/overloaded-record-fields/proposals/0000-overloaded-record-fields.rst\" rel=\"noreferrer\">https://github.com/adamgundry/ghc-proposals/blob/overloaded-record-fields/proposals/0000-overloaded-record-fields.rst</a></li>\n<li><a href=\"https://ghc.haskell.org/trac/ghc/wiki/Records/OverloadedRecordFields/DuplicateRecordFields\" rel=\"noreferrer\">https://ghc.haskell.org/trac/ghc/wiki/Records/OverloadedRecordFields/DuplicateRecordFields</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 117, "user_id": 4790243, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3ba3154d03d7a3b91a86934ef344d0b?s=128&d=identicon&r=PG&f=1", "display_name": "user17472", "link": "https://stackoverflow.com/users/4790243/user17472"}, "edited": false, "score": 0, "creation_date": 1532967138, "post_id": 51597968, "comment_id": 90162265, "body": "Right, so by declaring Orange twice compiler is not able to infer type automatically, got that. but if i write a type signature and specify type (see comment on jkeuhlen&#39;s answer) then it should work, but as you said this is something that is being worked upon"}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": false, "score": 0, "last_activity_date": 1532966480, "creation_date": 1532966480, "answer_id": 51597968, "question_id": 51597063, "link": "https://stackoverflow.com/questions/51597063/why-cant-i-re-use-same-value-constructor-among-different-data-types/51597968#51597968", "title": "Why can&#39;t i re-use same value constructor among different data types?", "body": "<p>There is no particular reason, that is how language was designed. I think the idea was to make sure compiler can infer type for as many expressions as possible. Note that if language will allow to reuse constructors, then you'll have to specify type for <code>show Orange</code> expression - compiler can't infer it anymore. Though now a lot of people don't take this reason seriously, and a lot of modern language extentions do break compiler's ability to infer types for many expressions. So I guess in few years you'll find that your example works already :)</p>\n"}], "owner": {"reputation": 117, "user_id": 4790243, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3ba3154d03d7a3b91a86934ef344d0b?s=128&d=identicon&r=PG&f=1", "display_name": "user17472", "link": "https://stackoverflow.com/users/4790243/user17472"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 585, "favorite_count": 0, "accepted_answer_id": 51597743, "answer_count": 2, "score": 8, "last_activity_date": 1532966480, "creation_date": 1532963332, "last_edit_date": 1532964789, "question_id": 51597063, "link": "https://stackoverflow.com/questions/51597063/why-cant-i-re-use-same-value-constructor-among-different-data-types", "title": "Why can&#39;t i re-use same value constructor among different data types?", "body": "<p>i am new to Haskell and probably missing something really basic here, but i am not able to re-use same value constructor among different data types. </p>\n\n<pre><code>data Colour = Red | Pink | Orange | Yellow\ndata Fruit  = Apple | Orange | Banana\n</code></pre>\n\n<p>This produces error saying </p>\n\n<p><code>Multiple declarations of \u2018Orange\u2019</code></p>\n\n<p>Not sure why this isn't allowed, i have been using OCaml before learning Haskell and was able to define types like this</p>\n"}, {"tags": ["haskell", "tdd", "cabal", "quickcheck", "property-testing"], "answers": [{"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 7, "last_activity_date": 1532953777, "last_edit_date": 1532953777, "creation_date": 1532953112, "answer_id": 51593820, "question_id": 51593267, "link": "https://stackoverflow.com/questions/51593267/how-to-use-quickcheck-in-hspec-tests/51593820#51593820", "title": "How to use QuickCheck in Hspec tests?", "body": "<p>You want the <a href=\"https://www.stackage.org/haddock/lts-12.4/QuickCheck-2.11.3/Test-QuickCheck.html#v:property\" rel=\"noreferrer\">property</a> function, see <a href=\"https://hspec.github.io/quickcheck.html\" rel=\"noreferrer\">here</a>.</p>\n\n<p>Example: </p>\n\n<pre><code>spec :: Spec\nspec = do\n    describe \"myTest\" $ do\n        it \"Something something\" $\n            property prop_myTest\n</code></pre>\n"}], "owner": {"reputation": 774, "user_id": 6034245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/n3qwA.jpg?s=128&g=1", "display_name": "chrisheyn", "link": "https://stackoverflow.com/users/6034245/chrisheyn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 527, "favorite_count": 0, "accepted_answer_id": 51593820, "answer_count": 1, "score": 4, "last_activity_date": 1532953777, "creation_date": 1532951133, "question_id": 51593267, "link": "https://stackoverflow.com/questions/51593267/how-to-use-quickcheck-in-hspec-tests", "title": "How to use QuickCheck in Hspec tests?", "body": "<p>I build the initial codebase for my Haskell project with <code>cabal init</code>\nI have several tests written with Hspec.\nOn <code>cabal test</code> it compiles and runs these tests like expected and gives a message for failing/passing.</p>\n\n<p>Now I included a <strong>quickCheck</strong> test and even when this test fails the output in terminal don't recognize the quickCheck test.</p>\n\n<p>But in the dist/test/ dir i can see the test log <code>*** Failed! ...</code></p>\n\n<p>Is there a way to \"include\" quickCheck tests in the test workflow. So that i don't have to look on the test log after every test run.</p>\n\n<pre><code>import Test.Hspec\nimport Test.QuickCheck\n\nspec :: Spec\nspec = do\n    describe \"myTest\" $ do\n        it \"Something something\" $ do\n            myTest \"\" `shouldBe` False\n            quickCheckWith stdArgs { maxSuccess = 1000 } prop_myTest -- &lt;== ?\n</code></pre>\n"}, {"tags": ["haskell", "monads", "io-monad"], "comments": [{"owner": {"reputation": 43134, "user_id": 1726343, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/55744f355c4714fd473c50e799165a70?s=128&d=identicon&r=PG", "display_name": "Asad Saeeduddin", "link": "https://stackoverflow.com/users/1726343/asad-saeeduddin"}, "edited": false, "score": 2, "creation_date": 1532911022, "post_id": 51585639, "comment_id": 90136852, "body": "I don&#39;t quite understand what you mean by &quot;for some tasks <code>mapM</code> will be used&quot;. Could you show an example of such a <code>Task</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "is_accepted": false, "score": 0, "last_activity_date": 1532911995, "creation_date": 1532911995, "answer_id": 51585775, "question_id": 51585639, "link": "https://stackoverflow.com/questions/51585639/how-to-specialize-mapm-for-io-in-haskell/51585775#51585775", "title": "How to specialize mapM for IO in Haskell", "body": "<p>Have run take <code>mapM</code> or <code>mapConcurrently</code> as an additional argument, or for possibly less passing as an implicit parameter, though I'm not sure whether the latter will clash with f's quantification.</p>\n"}, {"comments": [{"owner": {"reputation": 853, "user_id": 385711, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/2f0abd395a12c96554142e3c2cad59df?s=128&d=identicon&r=PG", "display_name": "Chris", "link": "https://stackoverflow.com/users/385711/chris"}, "edited": false, "score": 0, "creation_date": 1533002495, "post_id": 51586872, "comment_id": 90174687, "body": "Thanks! This is exactly what I need. I knew in Haskell there has to be an elegant higher-order solution :)"}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 5, "last_activity_date": 1533021057, "last_edit_date": 1533021057, "creation_date": 1532923870, "answer_id": 51586872, "question_id": 51585639, "link": "https://stackoverflow.com/questions/51585639/how-to-specialize-mapm-for-io-in-haskell/51586872#51586872", "title": "How to specialize mapM for IO in Haskell", "body": "<p>Well, <code>traverse</code> only needs an <code>Applicative</code>. You can make <code>mapM</code> do its actions in parallel by using an alternative <code>Applicative</code> for <code>IO</code> (this is how <code>mapConcurrently</code> is implemented). However, this <code>Applicative</code> does not have a lawful <code>Monad</code> instance: <code>(&gt;&gt;=)</code> and the other <code>Monad</code> operations will not be consistent with <code>(&lt;*&gt;)</code> and the other <code>Applicative</code> operations. E.g. <code>mf &gt;&gt;= \\f -&gt; mx &gt;&gt;= \\x -&gt; return (f x)</code> will not be equivalent to <code>mf &lt;*&gt; mx</code>, as <code>(&gt;&gt;=)</code> cannot execute its arguments in parallel but <code>(&lt;*&gt;)</code> will. (You probably could create a working <code>Monad</code> instance by using <code>unsafeInterleaveIO</code>, but, well, <code>unsafeInterleaveIO</code>.)</p>\n\n<p>One of the things you can do is pass <code>Task</code>s an <code>Applicative</code> functor, separate from the <code>Monad</code>, and then provide a natural transformation to inject every computation in the former into the latter. The lookup function should also be in the <code>Applicative</code> context.</p>\n\n<pre><code>newtype Task k v = Task { run \u2237 \u2200f f'. (Monad f, Applicative f')\n                              \u21d2 (\u2200a. f' a \u2192 f a)\n                              \u2192 (k \u2192 f' v) \u2192 f v\n                        }\n</code></pre>\n\n<p>If you don't have any special <code>Applicative</code> involved, just use <code>id</code> as the natural transformation:</p>\n\n<pre><code>runSimple \u2237 Monad f \u21d2 Task k v \u2192 (k \u2192 f v) \u2192 f v\nrunSimple t = run t id\n</code></pre>\n\n<p>And for <code>IO</code>, the special <code>Applicative</code> functor is already nicely packaged up for you in <code>Control.Concurrent.Async.Concurrently</code>:</p>\n\n<pre><code>runWithParallelIO \u2237 Task k v \u2192 (k \u2192 IO v) \u2192 IO v\nrunWithParallelIO t lookup = run t runConcurrently (Concurrently . lookup)\n</code></pre>\n\n<p>You'd write a <code>Task</code> like this:</p>\n\n<pre><code>task \u2237 Task _k _v\ntask = Task go\n  where go exec lookup = do _\n                            xs &lt;- exec $ mapM lookup _\n                            _\n</code></pre>\n\n<p>If you find yourself writing a <code>Task</code> that simply does not benefit from having the separate <code>Monad</code> and <code>Applicative</code> contexts, you can use this smart constructor</p>\n\n<pre><code>taskSimple \u2237 (\u2200f. Monad f \u21d2 (k \u2192 f v) \u2192 f v) \u2192 Task k v\ntaskSimple r = Task (\\exec lookup -&gt; r (exec . lookup))\n</code></pre>\n\n<p>to avoid wrapping every <code>lookup</code> in <code>exec</code>. AFAICT, <code>runSimple . taskSimple = id</code>, and <code>taskSimple . runSimple</code> is idempotent.</p>\n"}], "owner": {"reputation": 853, "user_id": 385711, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/2f0abd395a12c96554142e3c2cad59df?s=128&d=identicon&r=PG", "display_name": "Chris", "link": "https://stackoverflow.com/users/385711/chris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "accepted_answer_id": 51586872, "answer_count": 2, "score": 1, "last_activity_date": 1533021057, "creation_date": 1532910409, "last_edit_date": 1532912598, "question_id": 51585639, "link": "https://stackoverflow.com/questions/51585639/how-to-specialize-mapm-for-io-in-haskell", "title": "How to specialize mapM for IO in Haskell", "body": "<p>Say I have a task that represents some computation from <code>k</code> to <code>v</code> where some inputs have to be fetched externally.</p>\n\n<pre><code>newtype Task k v = Task { run \u2237 \u2200 f. Monad f \u21d2 (k \u2192 f v) \u2192 f v }\n</code></pre>\n\n<p>For some tasks <code>mapM</code> will be used, e.g. to fetch multiple keys. I want to specialize <code>mapM</code> for some monads. Specifically for the <code>IO</code> monad I want to use <code>Control.Concurrent.Async.mapConcurrently</code> to perform IO actions concurrently.</p>\n\n<p>My first instinct is to introduce a wrapper type</p>\n\n<pre><code>newtype AsyncIO a = AsyncIO { io :: IO a }\n</code></pre>\n\n<p>and then introduce</p>\n\n<pre><code>instance Monad AsyncIO\n</code></pre>\n\n<p>However this doesn't work because in the current GHC implementation <code>mapM</code> is defined in term of <code>traverse</code>, which is in <code>Traversable</code>.</p>\n\n<p>Is there an elegant solution for this?</p>\n"}, {"tags": ["haskell", "hxt"], "answers": [{"comments": [{"owner": {"reputation": 1722, "user_id": 1526266, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/1HT7M.jpg?s=128&g=1", "display_name": "Rob Stewart", "link": "https://stackoverflow.com/users/1526266/rob-stewart"}, "edited": false, "score": 0, "creation_date": 1532931984, "post_id": 51585691, "comment_id": 90141312, "body": "How exactly? I&#39;ve modified the parser to be <code>(getText &lt;&lt;&lt; getChildren &lt;&lt;&lt; neg (hasAttr &quot;animal&quot;) &lt;&lt;&lt; when (fatal &quot;&#39;animal&#39; attribute is not permitted&quot;) (hasAttr &quot;animal&quot;))</code>, but I still get <code>[[],[&quot;milo&quot;],[]]</code> when evaluating <code>parseXml</code>."}], "tags": [], "owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "is_accepted": false, "score": 0, "last_activity_date": 1532911003, "creation_date": 1532911003, "answer_id": 51585691, "question_id": 51584898, "link": "https://stackoverflow.com/questions/51584898/catching-and-halting-on-syntax-exceptions-during-parsing-with-hxt/51585691#51585691", "title": "Catching and halting on syntax exceptions during parsing with HXT", "body": "<p>Try <a href=\"http://www.fh-wedel.de/~si/HXmlToolbox/hdoc/Text-XML-HXT-Arrow-XmlArrow.html#v:err\" rel=\"nofollow noreferrer\"><code>err</code></a> and its neighbors with <a href=\"http://hackage.haskell.org/package/hxt-8.3.1/docs/Control-Arrow-ArrowIf.html\" rel=\"nofollow noreferrer\"><code>when</code></a>.</p>\n"}], "owner": {"reputation": 1722, "user_id": 1526266, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/1HT7M.jpg?s=128&g=1", "display_name": "Rob Stewart", "link": "https://stackoverflow.com/users/1526266/rob-stewart"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1532911003, "creation_date": 1532901557, "question_id": 51584898, "link": "https://stackoverflow.com/questions/51584898/catching-and-halting-on-syntax-exceptions-during-parsing-with-hxt", "title": "Catching and halting on syntax exceptions during parsing with HXT", "body": "<p>Suppose an XML based language where the node attribute <code>animal</code> is illegal. Consider:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE Arrows, RankNTypes #-}\nmodule Lib ( parseXml ) where\nimport Control.Arrow\nimport Text.XML.HXT.Core\n\nparseXml = runLA (xread &gt;&gt;&gt; isElem &gt;&gt;&gt; myParser) content\n  where\n    content = unlines\n      [ \"&lt;pet animal='cat'&gt;felix&lt;/pet&gt;\"\n      , \"&lt;pet&gt;milo&lt;/pet&gt;\"\n      , \"&lt;pet animal='rat'&gt;tom&lt;/pet&gt;\" ]\n\nmyParser :: (ArrowXml a) =&gt; a XmlTree [String]\nmyParser =  proc xml -&gt; do\n  x &lt;- isElem -&lt; xml\n  pets &lt;- (getText &lt;&lt;&lt; getChildren &lt;&lt;&lt; neg (hasAttr \"animal\")) &gt;. id -&lt; x\n  returnA -&lt; pets\n</code></pre>\n\n<p>The result of evaluating <code>parseXml</code> is:</p>\n\n<pre><code>parseXml\n[[],[\"milo\"],[]]\n</code></pre>\n\n<p>Which is not what is intended. The parser has silently ignored the 1st and 3rd XML nodes since they do not conform to the <code>myParser</code>, specifically <code>neg (hasAttr \"animal\")</code>, but I'd like the behaviour to not silently ignore them, but instead halt parsing at the 1st XML node.</p>\n\n<p>How can I change this code such that HXT throw an error if it ever encounters our syntax violation that an XML node can <strong>never</strong> have an \"animal\" attribute? That is, when attempting to parse the 1st XML node it returns a <code>Left</code> value e.g.</p>\n\n<pre><code>parseXml\nLeft (ParseError \"'animal' attribute is not permitted\")\n</code></pre>\n"}, {"tags": ["haskell", "primes", "sieve-of-eratosthenes"], "comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 5, "creation_date": 1532913450, "post_id": 51583473, "comment_id": 90137255, "body": "Plug for <a href=\"http://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf\" rel=\"nofollow noreferrer\">The Genuine Sieve of Eratosthenes</a> by Melissa E. O&#39;Neill"}], "answers": [{"comments": [{"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "edited": false, "score": 0, "creation_date": 1532891171, "post_id": 51583572, "comment_id": 90132544, "body": "Thanks for the answer. I have now changed the implementation of the code, and it works now."}], "tags": [], "owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "is_accepted": true, "score": 7, "last_activity_date": 1532890732, "creation_date": 1532890732, "answer_id": 51583572, "question_id": 51583473, "link": "https://stackoverflow.com/questions/51583473/in-sieve-of-eratosthenes-implementation-with-haskell-why-are-the-multiples-of-3/51583572#51583572", "title": "In Sieve of Eratosthenes implementation with Haskell, why are the multiples of 3,5,7.. not removed from the list?", "body": "<blockquote>\n  <p>Short answer: The counter <code>k</code> in <code>mark</code> doesn't increment for <code>n</code> > 2. </p>\n</blockquote>\n\n<p><code>mark x 2 [2..]</code> correctly strips the evens from the list, and so the next step is calling <code>sieve [3,5..]</code>, which amounts to <code>3:sieve (mark 3 2 [5,7..])</code>, so let's see what happens here.</p>\n\n<p><code>mark 3 2 [5,7..]</code> (presumably) attempts to remove all the multiples of <code>3</code> from the list, but it does this step-by-step, first attempting to remove 6 from the list. However, as the list only contains odd numbers, 6 is never removed from the list, and the first case always fails. The code continues to check against 6, never moving up to remove 9. </p>\n\n<p>Similarly, 25 is never removed, since the code only tries to remove <code>2*5</code> from the list.</p>\n"}], "owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 0, "accepted_answer_id": 51583572, "answer_count": 1, "score": 0, "last_activity_date": 1532890732, "creation_date": 1532890083, "question_id": 51583473, "link": "https://stackoverflow.com/questions/51583473/in-sieve-of-eratosthenes-implementation-with-haskell-why-are-the-multiples-of-3", "title": "In Sieve of Eratosthenes implementation with Haskell, why are the multiples of 3,5,7.. not removed from the list?", "body": "<p>I'm currently self-studying the book <em>The Haskell Road to Logic, Maths and Programming</em> by Doets and Eijck, and I'm in the chapter 3.</p>\n\n<p>In this chapter, the authors provides a Haskell code for the implementation of <em>Sieve of Eratosthenes</em> algorithm, and I did not like their implementation, so I tried to give my own implementation; however, <strong>my version of the code does only removes the multiples of 2, and I couldn't figure out the reason for that</strong>.Here is the code:</p>\n\n<pre><code>sieve :: [Int] -&gt; [Int]\nsieve (0:xs) = sieve xs\nsieve (x:xs) = x : sieve (mark x 2 xs)\n where\n mark :: Int -&gt; Int -&gt; [Int] -&gt; [Int]\n mark n k (y:ys)\n  | y == n*k = 0 : (mark n (k+1) ys)\n  | otherwise = y : (mark n (k) ys) \n</code></pre>\n\n<p>and the output is</p>\n\n<pre><code>*Ch3&gt; sieve [2..]\n[2,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,...\n</code></pre>\n\n<p><strong>So, why does the code do not do the same removal operation of the multiples of, the other numbers, such as 3,5,7.. ?</strong></p>\n"}, {"tags": ["haskell", "grouping"], "comments": [{"owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "edited": false, "score": 0, "creation_date": 1532880895, "post_id": 51581983, "comment_id": 90129636, "body": "For what it&#39;s worth, alternate solutions are <a href=\"https://twitter.com/gabrielg439/status/701460899589017600?lang=en\" rel=\"nofollow noreferrer\">in this twitter thread</a>, and in <a href=\"https://stackoverflow.com/questions/27726739/implementing-an-efficient-sliding-window-algorithm-in-haskell\">this related question</a>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1532888245, "post_id": 51582220, "comment_id": 90131765, "body": "I really dislike this solution because checking all the lengths is very inefficient."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": false, "score": 2, "last_activity_date": 1532880873, "creation_date": 1532880873, "answer_id": 51582220, "question_id": 51581983, "link": "https://stackoverflow.com/questions/51581983/is-there-a-way-to-pattern-match-for-length-in-haskell/51582220#51582220", "title": "Is there a way to pattern match for length in Haskell?", "body": "<p>You can't directly pattern match on the length, but you can post-process it. You're right that your \"if length\" bit is not very Haskell-y. If I were you, I would just produce all of the tails of <em>at most</em> N elements and then filter off the stragglers at the end.</p>\n\n<pre><code>neighbors :: Int -&gt; [a] -&gt; [[a]]\nneighbors n xs = filter (\\x -&gt; length x == n) $ go xs\n    where go [] = []\n          go (y:ys) = take n (y:ys) : go ys\n</code></pre>\n\n<p>My <code>go</code> here is basically your <code>neighbors</code> without the \"if length\" bit. Then I filter out all of the elements that are too short. Now, this is better, but we can still do even better. The <code>Data.List</code> module provides <code>tails</code>, which will allow us to eliminate all of our explicit recursion in this case.</p>\n\n<pre><code>import Data.List\n\nneighbors :: Int -&gt; [a] -&gt; [[a]]\nneighbors n = filter (\\x -&gt; length x == n) . map (take n) . tails\n</code></pre>\n\n<p><code>tails</code> returns a list of all of the tails of the given list. Let's go through an example.</p>\n\n<pre><code>-- neighbors 3 [1, 2, 3, 4]\ntails                               &lt;==&gt; [[1, 2, 3, 4], [2, 3, 4], [3, 4], [4], []]\nmap (take n) . tails                &lt;==&gt; [[1, 2, 3]   , [2, 3, 4], [3, 4], [4], []]\nfilter (...) . map (take n) . tails &lt;==&gt; [[1, 2, 3]   , [2, 3, 4]]\n</code></pre>\n\n<p>Now we have our problem split into three nice subproblems (produce the tails, take the first N elements, then eliminate the stragglers), and each subproblem is solved by a couple of standard library functions.</p>\n"}, {"comments": [{"owner": {"reputation": 584, "user_id": 718291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8588d16143d8a06f9ffb6e2e31811de7?s=128&d=identicon&r=PG", "display_name": "Chris Buck", "link": "https://stackoverflow.com/users/718291/chris-buck"}, "edited": false, "score": 0, "creation_date": 1532885614, "post_id": 51582236, "comment_id": 90131003, "body": "The length check in my code was on the taken chunk, so there isn&#39;t a infinity problem:       *Main&gt; take 5 (neighbors 5 [1..])     [[1,2,3,4,5],[2,3,4,5,6],[3,4,5,6,7],[4,5,6,7,8],[5,6,7,8,9]&zwnj;&#8203;]  That being said, I still like the actual solution."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1532888467, "post_id": 51582236, "comment_id": 90131828, "body": "Elegant and efficient. Excellent answer."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1532889752, "post_id": 51582236, "comment_id": 90132155, "body": "It looks very similar to the one by David Fletcher in the linked duplicate, but the explanation is all different."}, {"owner": {"reputation": 584, "user_id": 718291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8588d16143d8a06f9ffb6e2e31811de7?s=128&d=identicon&r=PG", "display_name": "Chris Buck", "link": "https://stackoverflow.com/users/718291/chris-buck"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1532946003, "post_id": 51582236, "comment_id": 90148799, "body": "@dfeuer Sure, the &quot;tails&quot; version is very much like the one by David Fletcher, but the first implementation above (without tails) and the explanation, as you suggest, made my day."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1532886390, "last_edit_date": 1532886390, "creation_date": 1532880998, "answer_id": 51582236, "question_id": 51581983, "link": "https://stackoverflow.com/questions/51581983/is-there-a-way-to-pattern-match-for-length-in-haskell/51582236#51582236", "title": "Is there a way to pattern match for length in Haskell?", "body": "<p>Since the value can be passed at runtime, it would be strange to write the pattern at that moment: the patterns are usually translated into some program logic. Unless you write some sort of interpreter that first generates such pattern, it is not really possible to construct a pattern based on a <em>value</em>.</p>\n\n<p>But we can indeed improve the program, for example:</p>\n\n<pre><code>neighbors :: Int -&gt; [a] -&gt; [[a]]\nneighbors n l = go l (drop (n-1) l)\n    where go l@(_:lt) (_:xs) = take n l : go lt xs\n          go _ _ = []\n</code></pre>\n\n<p>This works as follows, we define a helper function <code>go</code>, that iterates on the <em>same</em> list, but at two positions: the second list is <em>n-1</em> positions ahead of the first one. This one \"<em>inspects</em>\" if there are still enough elements to perform a <code>take</code>. We thus call <code>go</code> with <code>l</code> and <code>drop (n-1) l</code>.</p>\n\n<p>In case the second list is non-empty, we thus know that the \"last\" item of a <code>take n</code> exists (and that this is <code>n-1</code> positions ahead). In that case we thus return <code>take n l</code>, and we advance both pointers. From the moment the second list is exhausted, we know that slicing is no longer possible, and hence we stop emitting elements.</p>\n\n<p>The advantage is that this will run on infinite lists, since we never call <code>length</code> on the list (or any other function that needs to run to the end of the list), emitting the next slice itself runs in <em>O(n)</em> due to the <code>take n</code>, but checking if a next slice has to be emitted only takes <em>O(1)</em>. If we thus are interested in the <em>k</em>-th element only, it takes <em>O(k+n)</em> time.</p>\n\n<p>Without using explicit recursion, we can use <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:zipWith\" rel=\"nofollow noreferrer\"><strong><code>zipWith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]</code></strong></a> and <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-List.html#v:tails\" rel=\"nofollow noreferrer\"><strong><code>tails :: [a] -&gt; [[a]]</code></strong></a>:</p>\n\n<pre><code>neighbors :: Int -&gt; [a] -&gt; [[a]]\nneighbors n l = zipWith (const . take n) (tails l) (drop (n-1) l)\n</code></pre>\n"}], "owner": {"reputation": 584, "user_id": 718291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8588d16143d8a06f9ffb6e2e31811de7?s=128&d=identicon&r=PG", "display_name": "Chris Buck", "link": "https://stackoverflow.com/users/718291/chris-buck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 925, "favorite_count": 0, "closed_date": 1532882382, "accepted_answer_id": 51582236, "answer_count": 2, "score": 2, "last_activity_date": 1532886390, "creation_date": 1532879199, "last_edit_date": 1532880241, "question_id": 51581983, "link": "https://stackoverflow.com/questions/51581983/is-there-a-way-to-pattern-match-for-length-in-haskell", "closed_reason": "Duplicate", "title": "Is there a way to pattern match for length in Haskell?", "body": "<p>I've got a function that will take a list and return a list of sublists of a specified length:</p>\n\n<pre><code>*Main&gt; neighbors 3 [1,2,3,4]\n[[1,2,3],[2,3,4]]\n\nneighbors :: Int -&gt; [a] -&gt; [[a]]\nneighbors n xs =\n    let ys = take n xs\n        zs = drop 1 xs\n    in if (length ys &lt; n)\n       then []\n       else ys : neighbors n zs\n</code></pre>\n\n<p>While it works, it doesn't look particularly \"Haskell-y\" to me, so I'm thinking there might be a pattern-match to do the same thing. Is there? Or, perhaps, I'm missing a different, tacit, way of doing this? I've looked at the various split libraries, and <a href=\"https://wiki.haskell.org/Let_vs._Where\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Let_vs._Where</a> gave me the tools to get the function working at all.</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1532873439, "post_id": 51581150, "comment_id": 90127550, "body": "<code>t</code> is a typeconstructor with a parameter. For example <code>Maybe</code>, if <code>a</code> is then <code>Int</code>, then the type is a <code>Maybe Int</code>."}, {"owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1532873538, "post_id": 51581150, "comment_id": 90127576, "body": "@WillemVanOnsem Well, that makes sense. Thanks for the answer."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1532878669, "post_id": 51581150, "comment_id": 90128982, "body": "The most famous foldable <code>t</code> is <code>[]</code>. Just pretend that <code>t a</code> is <code>[a]</code>, except it is a bit more general."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1532873949, "creation_date": 1532873949, "answer_id": 51581228, "question_id": 51581150, "link": "https://stackoverflow.com/questions/51581150/what-does-t-a-mean-in-type-signature-in-haskell/51581228#51581228", "title": "What does `... -&gt; t a -&gt;...` mean in type signature in Haskell?", "body": "<blockquote>\n  <p>Isn't both t and a a type variable? if so, what does the juxtapositions of two type variable mean in Haskell?</p>\n</blockquote>\n\n<p>Like a <em>data</em> constructor can take <em>parameters</em> (for example <code>Just</code>), a <em>type</em> constructor can take parameters as well, these parameters are then types. For example the <code>Maybe</code> type constructor takes a type parameter (for example <code>Int</code>), and then is a type <code>Maybe Int</code>.</p>\n\n<p>One can for example use a list <code>[]</code> to store elements, but there is still a type parameter to be resolved: the type of objects the list will store. <code>[] Int</code> or <code>[Int]</code> is then a list of <code>Int</code>s.</p>\n\n<p>Now <code>Foldable</code> types are types that can be folded. For example a list <code>[]</code> is a <code>Foldable</code> (note that we use <code>[]</code>, not <code>[a]</code> or <code>[Int]</code>) as well as a <code>Maybe</code>, or for example a <code>Tree</code>. Most \"collections\" of elements are <code>Foldable</code>s, although types that are not collections can be <code>Foldable</code>s and vice versa.</p>\n\n<p>The <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Foldable.html#v:all\" rel=\"noreferrer\"><strong><code>all :: Foldable t =&gt; (a -&gt; Bool) -&gt; t a -&gt; Bool</code></strong></a> and <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Foldable.html#v:any\" rel=\"noreferrer\"><strong><code>any :: Foldable t =&gt; (a -&gt; Bool) -&gt; t a -&gt; Bool</code></strong></a> are functions that can operate on <code>Foldable</code>s. The advantage is thus that we can write <code>all</code> and <code>any</code> to operate on a list of <code>a</code>s (so <code>[a]</code>), but a <code>Maybe a</code> can be used as well: you can see <code>Maybe</code> as a type that is a collection that either contains <em>no</em> elements (<code>Nothing</code>), or exactly <em>one</em> element (<code>Just x</code> with <code>x</code> the element). We can for example write:</p>\n\n<pre><code>Prelude&gt; all id Nothing\nTrue\nPrelude&gt; all id (Just True)\nTrue\nPrelude&gt; all id (Just False)\nFalse\nPrelude&gt; all id []\nTrue\nPrelude&gt; all id [True]\nTrue\nPrelude&gt; all id [False]\nFalse\nPrelude&gt; all id [False, True]\nFalse\nPrelude&gt; all id [True, True]\nTrue\n</code></pre>\n\n<p>The <code>all</code> thus can work on lists, <code>Maybe</code>s, but a lot of other types as well.</p>\n"}], "owner": {"reputation": 639, "user_id": 6708910, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/B5pvi.jpg?s=128&g=1", "display_name": "Our", "link": "https://stackoverflow.com/users/6708910/our"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 1, "accepted_answer_id": 51581228, "answer_count": 1, "score": 3, "last_activity_date": 1532873978, "creation_date": 1532873362, "last_edit_date": 1532873978, "question_id": 51581150, "link": "https://stackoverflow.com/questions/51581150/what-does-t-a-mean-in-type-signature-in-haskell", "title": "What does `... -&gt; t a -&gt;...` mean in type signature in Haskell?", "body": "<p>In the sign signature of the functions <code>all</code> and <code>any</code>, I see this:</p>\n\n<pre><code>Prelude&gt; :t all \nall :: Foldable t =&gt; (a -&gt; Bool) -&gt; t a -&gt; Bool\nPrelude&gt; :t any\nany :: Foldable t =&gt; (a -&gt; Bool) -&gt; t a -&gt; Bool\n</code></pre>\n\n<p>However, what does <code>... -&gt; t a -&gt;...</code> mean ? </p>\n\n<p>Isn't both <code>t</code> and <code>a</code> a type variable ? if so, what does the juxtapositions of two type variable mean in Haskell ?</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1532865513, "post_id": 51580107, "comment_id": 90125403, "body": "Because your function <code>\\a -&gt; 0</code> returns a <i>number</i>, whereas for <code>\\a -&gt; a</code>, it returns the parameter, so the output is the same as the input type."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1532865553, "post_id": 51580107, "comment_id": 90125410, "body": "What would you expect to happen? You&#39;re specifying a return type, i.e. a number, so of course the type is going to change! What <i>specifically</i> confuses you?"}, {"owner": {"reputation": 579, "user_id": 2310837, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/31dd98bf2d532f8d0addfcb5665c3134?s=128&d=identicon&r=PG", "display_name": "joelfischerr", "link": "https://stackoverflow.com/users/2310837/joelfischerr"}, "edited": false, "score": 1, "creation_date": 1532865557, "post_id": 51580107, "comment_id": 90125411, "body": "Sure, but why is the first parameter now <code>p</code> instead of  <code>(t1 -&gt; t1 -&gt; t2)</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1532865687, "post_id": 51580107, "comment_id": 90125444, "body": "@joelfischerr: because the first parameter is <code>f</code> (in <code>\\f b -&gt; ...</code>), and <code>f</code> thus is a free parameter, since we use it as an argument for <code>(\\a -&gt; 0)</code>, which means that regardless what we write, it is &quot;ignored&quot;."}, {"owner": {"reputation": 579, "user_id": 2310837, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/31dd98bf2d532f8d0addfcb5665c3134?s=128&d=identicon&r=PG", "display_name": "joelfischerr", "link": "https://stackoverflow.com/users/2310837/joelfischerr"}, "edited": false, "score": 0, "creation_date": 1532865976, "post_id": 51580107, "comment_id": 90125539, "body": "and it&#39;s ignored because of Haskells lazy evaluation or would it work the same way with eager evaluation?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1532866198, "post_id": 51580107, "comment_id": 90125611, "body": "Typing is independent of evaluation strategy."}, {"owner": {"reputation": 579, "user_id": 2310837, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/31dd98bf2d532f8d0addfcb5665c3134?s=128&d=identicon&r=PG", "display_name": "joelfischerr", "link": "https://stackoverflow.com/users/2310837/joelfischerr"}, "edited": false, "score": 0, "creation_date": 1532866325, "post_id": 51580107, "comment_id": 90125648, "body": "But if f b b was evaluated before it was substituted into \\a -&gt; b, it would need a more specific type wouldn&#39;t it?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 3, "creation_date": 1532866484, "post_id": 51580107, "comment_id": 90125695, "body": "<code>f b b</code> is not a subexpression in your code. Function application is left associative, so it parses as <code>(((\\a -&gt; 0) f) b) b</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1532866787, "creation_date": 1532866787, "answer_id": 51580266, "question_id": 51580107, "link": "https://stackoverflow.com/questions/51580107/why-do-these-two-functions-have-a-different-type/51580266#51580266", "title": "Why do these two functions have a different type?", "body": "<h1>Deriving the type for <code>(\\f b -&gt; (\\a -&gt; a) f b b)</code></h1>\n\n<p>Well let us try to derive the type for the expression:</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; a) f b b)\n</code></pre>\n\n<p>or more verbose:</p>\n\n<pre><code>(\\f -&gt; (\\b -&gt; (((\\a -&gt; a) f) b) b))\n</code></pre>\n\n<p>We here see that this is a function taking two parameters (well technically speaking a function always takes one parameter, and the result of that function then can take another one, but let us assume that if we talk about \"two parameters\", we mean such construct).</p>\n\n<p>The parameters are thus <code>f</code>, and <code>b</code>, and initially we do not know much about these, so we assign them a type, and the expression is:</p>\n\n<pre><code>f :: g\nb :: h\n(\\f b -&gt; (\\a -&gt; a) f b b) :: g -&gt; (h -&gt; i)\n</code></pre>\n\n<p>We thus create three types <code>g</code>, <code>h</code> and <code>i</code> (I here used other identifiers than <code>a</code>, <code>b</code> and <code>c</code>, since that could introduce confusion with the variables).</p>\n\n<p>But we are not done yet, since the expression itself, can introduce more constraints on how the types behave. We see for example a lambda expression: <code>\\a -&gt; a</code>, this clearly has as type:</p>\n\n<pre><code>\\a -&gt; a :: j -&gt; j\n</code></pre>\n\n<p>Next we see a function application, with <code>\\a -&gt; a</code> as function, and <code>f</code> as argument, so that means that <code>g ~ j</code> (<code>g</code> and <code>j</code> are the same type), and the type of <code>(\\a -&gt; a) f</code> is <code>(\\a -&gt; a) f :: g</code>.</p>\n\n<p>But we are not done yet, since the result of <code>(\\a -&gt; a) f</code>, now acts as a function in a function application with <code>b</code>, so that means that <code>g</code> is in fact a function, with input type <code>h</code>, and some (currently unknown output type), so:</p>\n\n<pre><code>g ~ (h -&gt; k)\n</code></pre>\n\n<p>So the type of <code>(\\a -&gt; a) f b</code> is <code>k</code>, but again we are not done yet, since we perform another function application with <code>(\\a -&gt; a) f b</code> as function (type <code>k</code>), and <code>b</code> as parameter, so that means that <code>k</code> is in fact a function, with <code>h</code> as parameter type, and the result is the type of the expression, so <code>i</code>. So that means we have:</p>\n\n<pre><code>g ~ j\ng ~ (h -&gt; k)\nk ~ (h -&gt; i)\n</code></pre>\n\n<p>In other words, the type of the expression is:</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; a) f b b) :: (h -&gt; (h -&gt; i)) -&gt; (h -&gt; i)\n</code></pre>\n\n<p>or less verbose:</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; a) f b b) :: (h -&gt; h -&gt; i) -&gt; h -&gt; i\n</code></pre>\n\n<h1>Deriving the type for <code>(\\f b -&gt; (\\a -&gt; 0) f b b)</code></h1>\n\n<p>The first steps of the derivation are more or less the same, we first introduce some type variables:</p>\n\n<pre><code>f :: g\nb :: h\n(\\f b -&gt; (\\a -&gt; 0) f b b) :: g -&gt; (h -&gt; i)\n</code></pre>\n\n<p>and now we start doing the inference. We first infer the type of <code>(\\a -&gt; 0)</code>. This is a function, with type <code>Num l =&gt; j -&gt; l</code> since <code>0</code> is a <code>Num</code>ber, but it can be any <code>Num</code> type, and has nothing to do with the type of the parameter <code>a</code>.</p>\n\n<p>Next we see that there is a function call with <code>(\\a -&gt; 0)</code> as function, and <code>f</code> as parameter, we thus conclude that <code>g ~ j</code>. The type of the result of this function call is <code>(\\a -&gt; 0) f :: Num l =&gt; l</code>.</p>\n\n<p>Now we see another function call with <code>(\\a -&gt; 0) f</code> as function, and <code>b</code> as parameter. We thus conclude that <code>l</code> is a function (so <code>l ~ (h -&gt; k)</code>).</p>\n\n<p>The last function call is with <code>(\\a -&gt; 0) f b :: k</code> as function, and <code>b</code> again as parameter. This means that <code>k</code> is a function <code>k ~ h -&gt; i</code>. We thus obtain the following types and equalities:</p>\n\n<pre><code>f :: g\nb :: h\n(\\a -&gt; 0) :: Num l =&gt; j -&gt; l\n(\\f b -&gt; (\\a -&gt; 0) f b b) :: g -&gt; (h -&gt; i)\ng ~ j\nl ~ (h -&gt; k)\nk ~ (h -&gt; i)\n</code></pre>\n\n<p>The type of the expression is thus:</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; 0) f b b) :: g -&gt; (h -&gt; i)\n</code></pre>\n\n<p>or more specific:</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; 0) f b b) :: Num (h -&gt; (h -&gt; i)) =&gt; g -&gt; (h -&gt; i)\n</code></pre>\n\n<p>or less verbose:</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; 0) f b b) :: Num (h -&gt; h -&gt; i) =&gt; g -&gt; h -&gt; i\n</code></pre>\n\n<p>So since we use as inner lambda expression <code>(\\a -&gt; 0)</code>, nor the <em>type</em> nor the <em>value</em> of <code>f</code>, are relevant anymore. <code>(\\a -&gt; 0) f</code> will always return <code>0</code>, and this should be a function, that can take a <code>b</code> into account.</p>\n\n<p>At least from a theoretical point of view, there is nothing \"strange\" about a function that is a <code>Num</code> (as long as it supports the functions that should be implemented by <code>Num</code> types). We could for example implement a function <code>instance Num (a -&gt; b -&gt; Int)</code>, and thus see <code>0</code> as a <em>constant</em> function that always maps to <code>0</code>, and <code>(+)</code> as a way to construct a new function that adds the two functions together.</p>\n"}], "owner": {"reputation": 579, "user_id": 2310837, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/31dd98bf2d532f8d0addfcb5665c3134?s=128&d=identicon&r=PG", "display_name": "joelfischerr", "link": "https://stackoverflow.com/users/2310837/joelfischerr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 51580266, "answer_count": 1, "score": 1, "last_activity_date": 1532866787, "creation_date": 1532865461, "last_edit_date": 1532865588, "question_id": 51580107, "link": "https://stackoverflow.com/questions/51580107/why-do-these-two-functions-have-a-different-type", "title": "Why do these two functions have a different type?", "body": "<p>I have two functions</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; a) f b b)\n</code></pre>\n\n<p>and</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; 0) f b b)\n</code></pre>\n\n<p>I tried to find the type of these functions by hand and got</p>\n\n<pre><code>(t1 -&gt; t1 -&gt; t2) -&gt; t1 -&gt; t2\n</code></pre>\n\n<p>and</p>\n\n<pre><code>Num t3 =&gt; (t1 -&gt; t1 -&gt; t2) -&gt; t1 -&gt; t3\n</code></pre>\n\n<p>But when I use GHCI to get the type using <code>:t</code> I get the following</p>\n\n<pre><code>(\\f b -&gt; (\\a -&gt; a) f b b) :: (t1 -&gt; t1 -&gt; t2) -&gt; t1 -&gt; t2\n(\\f b -&gt; (\\a -&gt; 0) f b b) :: Num (t1 -&gt; t1 -&gt; t2) =&gt; p -&gt; t1 -&gt; t2\n</code></pre>\n\n<p>I don't understand how changing <code>\\a -&gt; a</code> to <code>\\a -&gt; 0</code> changes the first parameter from <code>(t1 -&gt; t1 -&gt; t2)</code> to <code>p</code></p>\n"}, {"tags": ["haskell", "gcc", "ghc", "haskell-stack"], "comments": [{"owner": {"reputation": 490, "user_id": 3795915, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f2ea9606db9a831bc217ceb69b19e50?s=128&d=identicon&r=PG&f=1", "display_name": "Anrothan", "link": "https://stackoverflow.com/users/3795915/anrothan"}, "reply_to_user": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1532872896, "post_id": 51579755, "comment_id": 90127412, "body": "I wonder if it could be related at all to xcode? It seems that it may actually be what installs <code>gcc</code>, and the version automatically installed is past the most recent stable 8.x release."}], "owner": {"reputation": 490, "user_id": 3795915, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f2ea9606db9a831bc217ceb69b19e50?s=128&d=identicon&r=PG&f=1", "display_name": "Anrothan", "link": "https://stackoverflow.com/users/3795915/anrothan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 619, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1532883343, "creation_date": 1532863000, "last_edit_date": 1532883343, "question_id": 51579755, "link": "https://stackoverflow.com/questions/51579755/stack-gcc-iso-c99-compiler-support-missing", "title": "Stack - gcc ISO C99 compiler support missing", "body": "<p>After moving the contents of my old computer to a new one, I tried to continue working on a haskell project with Stack, but stack build commands no longer work. The initial issue was with the user directory having a space in it, which I fixed. Now the problem seems to be that the gcc compiler claims not to support ISO C99. I tried uninstalling by removing the stack directories as recommended and reinstalling, but the same error happens.</p>\n\n<p>Here's what I get: </p>\n\n<pre><code>$ stack build --verbose\n\n.......................\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.540986: [debug] GHC build  : x86_64-apple-darwin\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.541096: [debug] GHC host   : x86_64-apple-darwin\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.541205: [debug] GHC target : x86_64-apple-darwin\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.541270: [debug] LLVM target: x86_64-apple-darwin\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.545717: [debug] checking for path to top of build tree... /Users/derekmaffett/.stack/programs/x86_64-osx/ghc-8.4.3.temp/ghc-8.4.3\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.546706: [debug] checking for perl... /usr/bin/perl\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.559229: [debug] checking for a BSD-compatible install... /usr/local/bin/ginstall -c\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.560560: [debug] checking for gfind... no\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.561585: [debug] checking for find... /usr/bin/find\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.569598: [debug] checking whether ln -s works... yes\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.571630: [debug] checking for gsed... /usr/local/bin/gsed\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.663057: [debug] checking XCode version... 9.4.1\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.669808: [debug] configure: XCode version component 1: 9\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.669935: [debug] configure: XCode version component 2: 4\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.671086: [debug] checking for gcc... gcc\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.836599: [debug] checking whether the C compiler works... yes\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.836730: [debug] checking for C compiler default output file name... a.out\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.879977: [debug] checking for suffix of executables...\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.940808: [debug] checking whether we are cross compiling... no\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:14.980289: [debug] checking for suffix of object files... o\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:15.015762: [debug] checking whether we are using the GNU C compiler... yes\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:15.053195: [debug] checking whether gcc accepts -g... yes\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:15.112028: [debug] checking for gcc option to accept ISO C89... none needed\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:15.181570: [debug] checking how to run the C preprocessor... gcc -E\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:15.785414: [debug] checking for gcc option to accept ISO C99... unsupported\n@(src/Stack/Setup.hs:1097:54)\n2018-07-29 18:51:15.785615: [debug] configure: error: C99-compatible compiler needed\n@(src/Stack/Setup.hs:1097:54)\nConfiguring GHC ...\nReceived ExitFailure 1 when running\nRaw command: /Users/docr/.stack/programs/x86_64-osx/ghc-8.2.2.temp/ghc-8.2.2/configure --prefix=/Users/docr/.stack/programs/x86_64-osx/ghc-8.2.2/\nRun from: /Users/docr/.stack/programs/x86_64-osx/ghc-8.2.2.temp/ghc-8.2.2/\n</code></pre>\n\n<p>Stack version</p>\n\n<pre><code>$ stack --version\nVersion 1.7.1, Git revision 681c800873816c022739ca7ed14755e85a579565 (5807 commits) x86_64 hpack-0.28.2\n\n$ gcc --version\nConfigured with: --prefix=/Library/Developer/CommandLineTools/usr --with-gxx-include-dir=/usr/include/c++/4.2.1\nApple LLVM version 9.1.0 (clang-902.0.39.2)\nTarget: x86_64-apple-darwin17.7.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n</code></pre>\n\n<p>I installed Stack with the following method, as recommended. </p>\n\n<pre><code>curl -sSL https://get.haskellstack.org/ | sh\n</code></pre>\n"}, {"tags": ["haskell", "types", "category-theory", "isomorphism", "higher-rank-types"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532876739, "post_id": 51577631, "comment_id": 90128424, "body": "This looks like a (bad) bug to me."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1532877437, "post_id": 51577631, "comment_id": 90128619, "body": ":type is not very accurate, especially for functions. Perhaps there is a bug that is messing up bw\u2019s signature. Try using :type +v bw."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1532878175, "post_id": 51577631, "comment_id": 90128843, "body": "I get <code>bw :: Functor f =&gt; f a -&gt; (a -&gt; a&#39;) -&gt; f a&#39;</code>. How did you get <code>f1</code> and <code>f2</code> above?"}], "answers": [{"tags": [], "owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "is_accepted": false, "score": 0, "last_activity_date": 1532850563, "creation_date": 1532850563, "answer_id": 51578338, "question_id": 51577631, "link": "https://stackoverflow.com/questions/51577631/why-is-this-type-annotation-wrong/51578338#51578338", "title": "Why is this type annotation wrong?", "body": "<p>The <code>forall</code> quantifier makes your type accept all <code>a -&gt; a'</code>, but what your actually need in <code>fw</code> is a restriction ensuring that the parameter type and the returned type is the same, and that is what signature <code>a -&gt; a</code> means. </p>\n\n<p>So yes, the <code>forall</code> version accepts a function <code>a -&gt; a</code>, but it accepts not only such functions. As stated above, the compiler tells you that <code>fw</code> should only accept a function with type <code>a -&gt; a</code>. </p>\n"}, {"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1532855427, "post_id": 51578403, "comment_id": 90122920, "body": "Thank you. I ran some more experiments and confirmed that indeed problems begin with <code>.</code>. However, it does not seem to be a problem for <code>fw</code>, even though its type also has <code>G</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532876700, "post_id": 51578403, "comment_id": 90128419, "body": "To me, this does not explain the type signature given to <code>bw</code> before composition is considered. Why does <code>bw</code>&#39;s type mention an unrestricted, unrelated type <code>f2</code>? Not even GHC seems to believe the type is unrelated -- if you apply <code>bw</code> to a value that unifies with <code>f2 a</code>, GHC will also set <code>f1</code> to be the same thing!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532878519, "post_id": 51578403, "comment_id": 90128938, "body": "@DanielWagner I can&#39;t reproduce <code>f2</code>. Maybe the OP is using another definition, where <code>G</code> quantifies <code>f</code> as well?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532879682, "post_id": 51578403, "comment_id": 90129297, "body": "@chi I can, in 8.2.2 (the only version I have, so perhaps other versions do not have this bug)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532880419, "post_id": 51578403, "comment_id": 90129512, "body": "@DanielWagner Ah, that&#39;s it, I think. See my last edit."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1532880721, "last_edit_date": 1532880721, "creation_date": 1532851260, "answer_id": 51578403, "question_id": 51577631, "link": "https://stackoverflow.com/questions/51577631/why-is-this-type-annotation-wrong/51578403#51578403", "title": "Why is this type annotation wrong?", "body": "<p>This is a predicativity issue.</p>\n\n<p>Essentially, if we have a polymorphic value <code>f :: forall a . SomeTypeDependingOn a</code>, and we use it in some larger expression, this can instantiate the type <code>a</code> to any type <code>T</code> needed to fit that context. However, predicativity requires that <code>T</code> does not contain <code>forall</code>s.\nThis restriction is needed to have type inference.</p>\n\n<p>In your code, <code>bw . fw</code> you use the polymorphic function <code>.</code> (composition). This has a polymorphic type, where one type variable <code>t</code> stands for the domain of the second function to be composed (<code>g</code> in <code>f . g</code>) . For <code>bw . fw</code> to type check we should pick <code>t ~ G f a</code>, but <code>G f a = (forall a' . ...)</code> so it violates predicativity.</p>\n\n<p>The usual solution is to use a <code>newtype</code> wrapper</p>\n\n<pre><code>newtype G f a = G { unG :: forall a'. (a -&gt; a') -&gt; f a' }\n</code></pre>\n\n<p>which \"hides\" the <code>forall</code> under a constructor, so that <code>t ~ G f a</code> becomes allowed. \nTo use that, one needs to exploit the isomorphisms <code>G</code> and <code>unG</code> as needed, wrapping and unwrapping as needed. This requires extra work by the programmer, but it is this work that enables the inference algorithm to do its job.</p>\n\n<p>Alternatively, don't use <code>.</code>, and compose your functions in pointful style</p>\n\n<pre><code>test :: Functor f =&gt; G f a -&gt; G f a\ntest x = bw (fw x)\n</code></pre>\n\n<hr>\n\n<p>About the type of <code>bw</code>, as reported by GHCi:</p>\n\n<pre><code>&gt; :t bw\nbw :: Functor f1 =&gt; f2 a1 -&gt; (a2 -&gt; a') -&gt; f1 a'\n</code></pre>\n\n<p>This type is the result of \"<code>forall</code> hoisting\", which essentially \"moves\" the universal quantifiers in this way:</p>\n\n<pre><code>a1 -&gt; ... -&gt; forall b. F b   =====&gt;     forall b. a1 -&gt; ... -&gt; F b\n</code></pre>\n\n<p>Hoisting is automatically performed so to help type inference.</p>\n\n<p>More in defail, we have</p>\n\n<pre><code>bw :: forall f a . Functor f =&gt; f a -&gt; G f a\n-- by definition of G\nbw :: forall f a . Functor f =&gt; f a -&gt; (forall a'. (a -&gt; a') -&gt; f a')\n-- after hoisting\nbw :: forall f a a'. Functor f =&gt; f a -&gt; (a -&gt; a') -&gt; f a'\n</code></pre>\n\n<p>Since now all the quantifiers are at the top level, when composing <code>bw</code> with another function as in <code>bw . h</code> or <code>h . bw</code>, we can first instantiate <code>f, a, a'</code> to fresh type variables, and then perform unification on such variables so to match the type of <code>h</code>.</p>\n\n<p>For instance, in <code>bw . undefined</code> we proceed as follows</p>\n\n<pre><code> -- fresh variables for (.)\n (.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n -- fresh variables for bw\n bw :: Functor f . f a1 -&gt; (a1 -&gt; a') -&gt; f a'\n -- fresh variables for undefined\n undefined :: a2\n\n So we get:\n b = f a1\n c = (a1 -&gt; a') -&gt; f a'\n a2 = a -&gt; b\n\n Hence the type of (bw . undefined) is\n a -&gt; c\n = a -&gt; (a1 -&gt; a') -&gt; f a'\n (assuming Functor f)\n</code></pre>\n\n<p>GHCi agrees, except that it chooses different names for the type variables. This choice is immaterial, of course.</p>\n\n<pre><code>(bw . undefined) :: Functor f =&gt; a1 -&gt; (a2 -&gt; a') -&gt; f a'\n</code></pre>\n\n<hr>\n\n<p>Ah-ha! There seems to be some issue with GHCi-8.2.2 which is not present in GHC 8.4.3.</p>\n\n<pre><code>-- GHCi 8.2.2\n&gt; :set -XRankNTypes\n&gt; type G f a = forall a'. (a -&gt; a') -&gt; f a'\n&gt; bw :: Functor f =&gt; f a -&gt; G f a ; bw x = \\f -&gt; fmap f x\n&gt; :t bw\nbw :: Functor f1 =&gt; f2 a1 -&gt; (a2 -&gt; a') -&gt; f1 a'\n\n-- GHCi 8.4.3\n&gt; :set -XRankNTypes\n&gt; type G f a = forall a'. (a -&gt; a') -&gt; f a'\n&gt; bw :: Functor f =&gt; f a -&gt; G f a ; bw x = \\f -&gt; fmap f x\n&gt; :t bw\nbw :: Functor f =&gt; f a -&gt; (a -&gt; a') -&gt; f a'\n</code></pre>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 51578403, "answer_count": 2, "score": 3, "last_activity_date": 1532880721, "creation_date": 1532843608, "last_edit_date": 1532854592, "question_id": 51577631, "link": "https://stackoverflow.com/questions/51577631/why-is-this-type-annotation-wrong", "title": "Why is this type annotation wrong?", "body": "<p>I tried to follow the <a href=\"http://www.haskellforall.com/2012/06/gadts.html\" rel=\"nofollow noreferrer\">article by Gabriel Gonzalez</a> and I ran into a type mismatch. Consider the following short module:</p>\n\n<pre><code>{-# LANGUAGE DeriveFunctor #-}\n{-# LANGUAGE Rank2Types #-}\n\nmodule Yoneda where\n\nnewtype F a = F a deriving (Show, Functor)\n\ntype G f a = forall a'. (a -&gt; a') -&gt; f a'\n\nfw :: Functor f =&gt; G f a -&gt; f a\nfw x = x id\n\nbw :: Functor f =&gt; f a -&gt; G f a\nbw x = \\f -&gt; fmap f x\n</code></pre>\n\n<p>It compiles fine. <em>(With either <code>ghc</code> 8.2.2 and 8.4.3.)</em> But when I poke it in repl, <code>fw</code> and <code>bw</code> do not compose:</p>\n\n<pre><code>\u03bb :t bw . fw\n\n&lt;interactive&gt;:1:6: error:\n    \u2022 Couldn't match type \u2018a\u2019 with \u2018G f a1\u2019\n      \u2018a\u2019 is a rigid type variable bound by\n        the inferred type of it :: Functor f =&gt; a -&gt; (a1 -&gt; a') -&gt; f a'\n        at &lt;interactive&gt;:1:1\n      Expected type: a -&gt; f a1\n        Actual type: G f a1 -&gt; f a1\n    \u2022 In the second argument of \u2018(.)\u2019, namely \u2018fw\u2019\n      In the expression: bw . fw\n</code></pre>\n\n<p>When I look at <code>bw</code> more closely, it appears that the types of the functor it takes and returns are distinct:</p>\n\n<pre><code>\u03bb :t bw\nbw :: Functor f1 =&gt; f2 a1 -&gt; (a2 -&gt; a') -&gt; f1 a'\n</code></pre>\n\n<p>\u2014 Even though I stated in the type signature that they should be the same! And whatever type annotations I pepper <code>fw</code> and <code>bw</code> with, they do not want to unify.</p>\n\n<p>If I remove the type signature from <code>fw</code>, everything works smoothly. In particular, the inferred type signature would then be:</p>\n\n<pre><code>fw :: ((a -&gt; a) -&gt; t) -&gt; t\n</code></pre>\n\n<p>So, it appears that the <code>forall</code> quantifier spoils things. But I do not understand why. Should not it mean <em>\"any type <code>a -&gt; a'</code> will do, including <code>a -&gt; a</code>\"</em>? It seems as though the same type synonym <code>G f a</code> acts in different ways in the type signatures of <code>fw</code> and <code>bw</code>!</p>\n\n<p>What's going on here?</p>\n\n<hr>\n\n<p>Some more experiments:</p>\n\n<pre><code>\u03bb (fw . bw) (F 1)\n...error...\n\u03bb (fw (bw (F 1)))\nF 1\n\u03bb :t fw . undefined\n...error...\n\u03bb :t undefined . fw\n...error\n\u03bb :t bw . undefined\nbw . undefined :: Functor f =&gt; a1 -&gt; (a2 -&gt; a') -&gt; f a'\n\u03bb :t undefined . bw\nundefined . bw :: Functor f =&gt; f a -&gt; c\n</code></pre>\n\n<p>So <em>(as @chi pointed out in an answer)</em> no function may be composed with <code>fw</code>. But not so for <code>bw</code>. Why?</p>\n"}, {"tags": ["haskell", "compiler-construction", "pascal", "semantics"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1532821247, "post_id": 51575705, "comment_id": 90117782, "body": "I think the type checking question is probably too broad, and the reason for the close vote.  I think the AST question would be good if this question included things like the current AST data structure."}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1532821739, "post_id": 51575705, "comment_id": 90117842, "body": "I linked to the ast, it&#39;s too clumsy to include it in the question"}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1532822289, "post_id": 51575705, "comment_id": 90117911, "body": "@Carl Also broad? i&#39;m asking about a very specific thing how is this broad?"}, {"owner": {"reputation": 28675, "user_id": 2663863, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b1de0d4b3d9e3d329191078f7d0da8e0?s=128&d=identicon&r=PG", "display_name": "MartynA", "link": "https://stackoverflow.com/users/2663863/martyna"}, "edited": false, "score": 1, "creation_date": 1532849143, "post_id": 51575705, "comment_id": 90121691, "body": "Not my &quot;too broad&quot; vote.  Maybe the problem is that although the problem (assignment to function result) is clear, how to answer it is not.  It seems that to answer, one would need to know how to express, in the notation you are using, that the specific <code>Indent</code> in the function header is the same as one which is the lvalue in an assignment in the function body.  IOW, we readers don&#39;t know the &quot;syntax of the syntax&quot;.  Problem gets trickier if you want to cover <code>Result :=</code>  Interesting q, +1"}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1532852449, "post_id": 51575705, "comment_id": 90122305, "body": "Well After some thought I think my problem is knowing how to convert the above code to LLVM code, and I just want the algorithm"}, {"owner": {"reputation": 24405, "user_id": 99354, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b6ee96d3a17fcbd2bd24210eb7caf441?s=128&d=identicon&r=PG&f=1", "display_name": "Marco van de Voort", "link": "https://stackoverflow.com/users/99354/marco-van-de-voort"}, "edited": false, "score": 0, "creation_date": 1532858939, "post_id": 51575705, "comment_id": 90123747, "body": "I updated my answer to watch nested functions."}], "answers": [{"comments": [{"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1532862526, "post_id": 51578753, "comment_id": 90124657, "body": "oh shoot, I&#39;ll have to worry about return value of parent function being used inside sub-functions. I wonder if this can be simplified by doing some transformations. Anyway I&#39;ll try to write some proof-of-concept (read &quot;throw away&quot;) code for now and build on it later"}, {"owner": {"reputation": 27437, "user_id": 95954, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/iD0qO.png?s=128&g=1", "display_name": "Rudy Velthuis", "link": "https://stackoverflow.com/users/95954/rudy-velthuis"}, "reply_to_user": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 1, "creation_date": 1532870810, "post_id": 51578753, "comment_id": 90126874, "body": "@BanishedBot: simply implicitly declare a local variable in the appropriate local frame, with the same name as the function. then it will work like any other local variable, even if there are nested routines (these get their own result variable in their scope). Just don&#39;t forget to get the return value from that specific local variable. In many versions of Pascal that implicit result variable can be called Result too (i.e. both function name and Result are valid result variable names and both map to the same variable)."}, {"owner": {"reputation": 24405, "user_id": 99354, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b6ee96d3a17fcbd2bd24210eb7caf441?s=128&d=identicon&r=PG&f=1", "display_name": "Marco van de Voort", "link": "https://stackoverflow.com/users/99354/marco-van-de-voort"}, "edited": false, "score": 0, "creation_date": 1532939332, "post_id": 51578753, "comment_id": 90144928, "body": "Oh, and FPC (since before 2000) and Delphi (since D2009) also support exit(value) which writes the return value, and then EXITs the function."}], "tags": [], "owner": {"reputation": 24405, "user_id": 99354, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b6ee96d3a17fcbd2bd24210eb7caf441?s=128&d=identicon&r=PG&f=1", "display_name": "Marco van de Voort", "link": "https://stackoverflow.com/users/99354/marco-van-de-voort"}, "is_accepted": true, "score": 5, "last_activity_date": 1532858913, "last_edit_date": 1532858913, "creation_date": 1532854630, "answer_id": 51578753, "question_id": 51575705, "link": "https://stackoverflow.com/questions/51575705/compiling-pascal-function-return-value-assignment/51578753#51578753", "title": "Compiling Pascal function return value assignment", "body": "<p>Assignments may happen multiple times, and the Delphi dialect also allows read.</p>\n\n<p>The best is to simply treat a function declaration as something that declares an implicit variable for the return variable, with its declared type.</p>\n\n<p>Then you can assign and read it, and on procedure exit points (end of procedure/function or the EXIT keywords) you copy the value from the implicit variable into the register used for return values. </p>\n\n<p>If the return value is complex (array, struct) and doesn't fit in a register, the typical solution is to pass the return value by an implicit var parameter. You can then use that location directly for the return variable.</p>\n\n<p>Added later: for the more advanced users: functions nested within other functions are after their parents declaration, so can access their parents return value via the frame pointer they get. Pascal nested procedures can get relatively complex.</p>\n"}], "owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 303, "favorite_count": 0, "accepted_answer_id": 51578753, "answer_count": 1, "score": 1, "last_activity_date": 1532858913, "creation_date": 1532816625, "last_edit_date": 1532822615, "question_id": 51575705, "link": "https://stackoverflow.com/questions/51575705/compiling-pascal-function-return-value-assignment", "title": "Compiling Pascal function return value assignment", "body": "<p>I'm writing a toy Pascal compiler in Haskell. I can produce a Type-annotated AST.\nI've been ignoring function return value assignments:  </p>\n\n<pre><code>function foo : integer;\nbegin\n    foo := 12\nend;    \n</code></pre>\n\n<p>How do I handle those, given that the grammar doesn't distinguish between them and any other regular assignment statement?<br>\nShould <a href=\"https://github.com/sam46/Paskell/blob/master/src/Grammar.hs\" rel=\"nofollow noreferrer\">the AST</a> be modified to specifically highlight a return value assignment?     </p>\n\n<p>And how to deal with them in the type checking phase (An environment Symbol table consisting of function signatures and a stack of contexts was enough so far)?</p>\n"}, {"tags": ["haskell", "type-constructor"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1532813961, "post_id": 51575460, "comment_id": 90116616, "body": "If <code>b</code> is <code>Maybe</code>, not <code>Maybe Int</code>, but <code>Maybe</code>, and <code>a</code> is <code>Int</code>, then what is <code>b a</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1532814320, "post_id": 51575460, "comment_id": 90116687, "body": "That&#39;s called a &quot;record&quot;. Usually you see multiple fields like <code>data T = K { one :: Int , two :: String , three :: [Bool] }</code>."}], "answers": [{"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 4, "last_activity_date": 1532815080, "last_edit_date": 1532815080, "creation_date": 1532814425, "answer_id": 51575521, "question_id": 51575460, "link": "https://stackoverflow.com/questions/51575460/what-does-the-parameters-without-arrows-mean-in-type-constructor/51575521#51575521", "title": "What does the parameters without arrows mean in type constructor?", "body": "<p><code>Frank</code> is a type of kind <code>* -&gt; (* -&gt; *) -&gt; *</code>, that is, it takes a type <code>a</code> (of kind <code>*</code>) such as <code>Int</code>, <code>Char</code>, or <code>String</code>; and a unary type <em>constructor</em> <code>b</code> (of kind <code>* -&gt; *</code>) such as <code>Maybe</code> or <code>Either String</code>. (You can check the kind of a type using the <code>:kind</code> or <code>:k</code> command in GHCi.)</p>\n\n<p>It has one constructor, also named <code>Frank</code>, which contains one <em>field</em> (not a constructor) of type <code>b a</code> called <code>frankField</code>\u2014for example, the type of <code>frankField</code> in a value of type <code>Frank Int Maybe</code> is <code>Maybe Int</code>, since <code>b</code> = <code>Maybe</code> and <code>a</code> = <code>Int</code>, so <code>b a</code> = <code>Maybe Int</code>.</p>\n\n<p>This definition is using <em>record</em> notation to give a name to the field\u2014you could also have written just <code>data Frank a b = Frank (b a)</code> to leave it anonymous, but the advantage of naming the field is that you can use explicit record syntax to construct a <code>Frank</code> value:</p>\n\n<pre><code>frank1 :: Frank Int Maybe\nfrank1 = Frank { frankField = Just 1 }\n</code></pre>\n\n<p>Or to modify a value:</p>\n\n<pre><code>frank2 :: Frank Int Maybe\nfrank2 = frank1 { frankField = Nothing }\n</code></pre>\n\n<p>Or access the field by name:</p>\n\n<pre><code>value :: Maybe Int\nvalue = frankField frank1\n</code></pre>\n\n<p>This is more convenient, and more common, when a constructor includes multiple fields; also, you\u2019ll typically see <code>newtype</code> instead of <code>data</code> when a type wraps only a single value, since <code>newtype</code> has less overhead and slightly different laziness semantics.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 51575521, "answer_count": 1, "score": 1, "last_activity_date": 1532815080, "creation_date": 1532813873, "last_edit_date": 1532814045, "question_id": 51575460, "link": "https://stackoverflow.com/questions/51575460/what-does-the-parameters-without-arrows-mean-in-type-constructor", "title": "What does the parameters without arrows mean in type constructor?", "body": "<p>In the expression</p>\n\n<pre><code>data Frank a b = Frank {frankField :: b a} deriving (Show)\n</code></pre>\n\n<p>What does <code>{frankField :: b a}</code> means?</p>\n\n<p>Is <code>{frankField :: b a}</code> a type constructor? If so, should the parameters look like <code>b-&gt;a</code> instead <code>b a</code>?</p>\n"}, {"tags": ["haskell", "dhall"], "answers": [{"comments": [{"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 1, "creation_date": 1532865922, "post_id": 51574591, "comment_id": 90125528, "body": "<a href=\"https://hackage.haskell.org/package/dhall-1.16.1/docs/Dhall-Tutorial.html#g:12\" rel=\"nofollow noreferrer\">The dhall tutorial</a> mentions a <code>constructors</code> keyword that can be used to generate the convenience constructors."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 6, "last_activity_date": 1532806352, "creation_date": 1532806352, "answer_id": 51574591, "question_id": 51574390, "link": "https://stackoverflow.com/questions/51574390/how-to-define-and-use-a-haskell-like-sum-type-in-dhall/51574591#51574591", "title": "How to define and use a Haskell-like sum type in Dhall", "body": "<p>I believe the standard way this is done is by creating a union type where each option's type is an empty record:</p>\n\n<pre><code>$ dhall &gt; SumProp &lt;&lt;EOF\n&lt; option1 : {} | option2 : {} &gt;\nEOF\n</code></pre>\n\n<p>This type permits the values:</p>\n\n<pre><code>&lt; option1 = {=} | option2 : {} &gt;\n&lt; option2 = {=} | option1 : {} &gt;\n</code></pre>\n\n<p>though you'll obviously want to name these something convenient like <code>option1</code> and <code>option2</code>:</p>\n\n<pre><code>$ dhall &gt; option1 &lt;&lt;EOF\n&lt; option1 = {=} | option2 : {} &gt;\nEOF\n$ dhall &gt; option2 &lt;&lt;EOF\n&lt; option2 = {=} | option1 : {} &gt;\nEOF\n</code></pre>\n\n<p>This blog article by Gabriel Gonzalez <a href=\"http://www.haskellforall.com/2017/01/typed-nix-programming-using-dhall.html\" rel=\"noreferrer\">Typed Nix programming using Dhall </a> includes an example, if you search for the definition of the type <code>OperatingSystem</code>.</p>\n"}], "owner": {"reputation": 1242, "user_id": 3252252, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/4V81y.jpg?s=128&g=1", "display_name": "Jesuspc", "link": "https://stackoverflow.com/users/3252252/jesuspc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 547, "favorite_count": 2, "accepted_answer_id": 51574591, "answer_count": 1, "score": 6, "last_activity_date": 1532823775, "creation_date": 1532804646, "last_edit_date": 1532823775, "question_id": 51574390, "link": "https://stackoverflow.com/questions/51574390/how-to-define-and-use-a-haskell-like-sum-type-in-dhall", "title": "How to define and use a Haskell-like sum type in Dhall", "body": "<p>How can I define a sum type analogous to Haskell's sum types in the Dhall programming language?</p>\n\n<p>For instance, if in Haskell I'd define</p>\n\n<pre><code>data SumProp = Option1 | Option2\n</code></pre>\n\n<p>My purpose is to define in Dhall a record in which one of its properties has a limited set of possible values:</p>\n\n<pre><code>\\(sumPropValue : SumProp) -&gt; { value = sumPropValue }\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1532794314, "post_id": 51572782, "comment_id": 90112033, "body": "Are the scores ordered in advance (like here), or is thus just a coincidence?"}, {"owner": {"reputation": 215, "user_id": 1876850, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e36e3bcf77a173a8322fb3a408bf630f?s=128&d=identicon&r=PG", "display_name": "Florian", "link": "https://stackoverflow.com/users/1876850/florian"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1532795262, "post_id": 51572782, "comment_id": 90112266, "body": "Yes, they are ordered in advance."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1532794615, "creation_date": 1532794615, "answer_id": 51573134, "question_id": 51572782, "link": "https://stackoverflow.com/questions/51572782/how-to-create-a-ranking-based-on-a-list-of-scores-in-haskell/51573134#51573134", "title": "How to create a ranking based on a list of scores in Haskell?", "body": "<p>We can write a recursive algorithm that maintains a state: the current rank it is assigning. The algorithm each time looks two elements far. In case the next element is the same, the rank is <em>not</em> incremented, otherwise it is.</p>\n\n<p>We thus can implement it like:</p>\n\n<pre><code>rank :: Eq a =&gt; [a] -&gt; [(a, Int)]\nrank = go 1\n    where go i (x:xr@(x2:_)) = (x, i) : go'\n              where go' | x == x2 = go i xr\n                        | otherwise = go (i+1) xr\n          go i [x] = [(x, i)]\n          go _ [] = []\n</code></pre>\n\n<p>We thus specify that <code>rank = go 1</code>, we thus \"<em>initialize</em>\" a state with <code>1</code>. Each time we check with <code>go</code> if the list contains at least two elements. If that is the case, we first emit the first element with the state <code>(x, i)</code>, and then we perform recursion on the rest <code>xr</code>. Depending on whether the first element <code>x</code> is equal to the second element <code>x2</code>, we do or do not increment the state. In case the list only contains one element <code>x</code>, we thus return <code>[(x, i)]</code>, and in case the list contains no elements at all, we return the empty list.</p>\n\n<p>Note that this assumes that the scores are already in descending order (or in an order from \"best\" to \"worst\", since in some games the \"<em>score</em>\" is sometimes a negative thing). We can however use a <code>sort</code> step as pre-processing if that would not be the case.</p>\n"}, {"comments": [{"owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 0, "creation_date": 1532801235, "post_id": 51573370, "comment_id": 90113730, "body": "It&#39;s also probably faster, since the functions in <code>Prelude</code> are pretty heavily optimized."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": false, "score": 5, "last_activity_date": 1532796576, "creation_date": 1532796576, "answer_id": 51573370, "question_id": 51572782, "link": "https://stackoverflow.com/questions/51572782/how-to-create-a-ranking-based-on-a-list-of-scores-in-haskell/51573370#51573370", "title": "How to create a ranking based on a list of scores in Haskell?", "body": "<p>This solution is fairly similar to Willem's, except that it doesn't explicitly use recursion. Many style guides, including <a href=\"https://wiki.haskell.org/Haskell_programming_tips#Avoid_explicit_recursion\" rel=\"noreferrer\">the Haskell wiki</a>, suggest to avoid explicit recursion if there's a simple implementation involving higher-order functions. In your case, your function is a pretty straightforward use of <code>scanl</code>, which folds a list with an accumulating value (in your case, the accumulator is the current rank and score) and stores the intermediate results.</p>\n\n<pre><code>ranks :: Eq a =&gt; [a] -&gt; [(a, Int)]\n-- Handle the empty case trivially.\nranks [] = []\n-- Scan left-to-right. The first element of the result should always\n-- have rank 1, hence the `(x, 1)' for the starting conditions.\nranks (x:xs) = scanl go (x, 1) xs\n    -- The actual recursion is handled by `scanl'. `go' just\n    -- handles each specific iteration.\n    where go (curr, rank) y\n              -- If the \"current\" score equals the next element,\n              -- don't change the rank.\n              | curr == y = (curr, rank)\n              -- If they're not equal, increment the rank and\n              -- move on.\n              | otherwise = (y, rank + 1)\n</code></pre>\n\n<p>By avoiding explicit recursion, it's arguably easier to see at a glance what the function does. I can look at this, immediately see the <code>scanl</code>, and know that the function will be iterating over the list left-to-right with some state (the rank) and producing intermediate results.</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1532806319, "last_edit_date": 1532806319, "creation_date": 1532802518, "answer_id": 51574116, "question_id": 51572782, "link": "https://stackoverflow.com/questions/51572782/how-to-create-a-ranking-based-on-a-list-of-scores-in-haskell/51574116#51574116", "title": "How to create a ranking based on a list of scores in Haskell?", "body": "<p>Here's a simple one-liner, putting some off-the-shelf pieces together with a list comprehension.</p>\n\n<pre><code>import Data.List\nimport Data.Ord (Down (..))\n\nrank :: Ord a =&gt; [a] -&gt; [(a, Int)]\nrank xs = [(a, i) | (i, as) &lt;- zip [1..] . group . sortBy (comparing Down) $ xs\n          , a &lt;- as]\n</code></pre>\n\n<p>If the list is already sorted in reverse order, you can leave out the <code>sortBy (comparing Down)</code>.</p>\n"}], "owner": {"reputation": 215, "user_id": 1876850, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e36e3bcf77a173a8322fb3a408bf630f?s=128&d=identicon&r=PG", "display_name": "Florian", "link": "https://stackoverflow.com/users/1876850/florian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 404, "favorite_count": 0, "accepted_answer_id": 51573134, "answer_count": 3, "score": 2, "last_activity_date": 1532806319, "creation_date": 1532791880, "last_edit_date": 1532793621, "question_id": 51572782, "link": "https://stackoverflow.com/questions/51572782/how-to-create-a-ranking-based-on-a-list-of-scores-in-haskell", "title": "How to create a ranking based on a list of scores in Haskell?", "body": "<p>So I got a score list and want to create a ranking list from it. If scores are the same they share a rank.</p>\n\n<p>For example if I have a score list like</p>\n\n<pre><code>[100, 100, 50, 50, 20]\n</code></pre>\n\n<p>the generated list would be</p>\n\n<pre><code>[(100, 1), (100, 1), (50, 2), (50, 2), (20, 3)]\n</code></pre>\n\n<p>I guess this is a fairly simple task, but I haven't gotten to solve it yet. I tried to do it with pattern matching or folding but without any luck.</p>\n\n<p>My last failed approach looks like this:</p>\n\n<pre><code>scores = [100, 100, 50, 50, 20, 10]\n\nranks = foldr (\\x acc -&gt; if x == (fst $ last acc)\n  then last acc:acc\n  else (x, (+1) $ snd $ last acc):acc) [(head scores, 1)] scores\n</code></pre>\n\n<p>Any help is appreciated.</p>\n"}, {"tags": ["haskell", "terminal", "io"], "answers": [{"comments": [{"owner": {"reputation": 774, "user_id": 6034245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/n3qwA.jpg?s=128&g=1", "display_name": "chrisheyn", "link": "https://stackoverflow.com/users/6034245/chrisheyn"}, "edited": false, "score": 0, "creation_date": 1532792239, "post_id": 51572794, "comment_id": 90111508, "body": "THX for the fast reply. I&#39;ll go to try this package"}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 6, "last_activity_date": 1532792821, "last_edit_date": 1532792821, "creation_date": 1532791975, "answer_id": 51572794, "question_id": 51572503, "link": "https://stackoverflow.com/questions/51572503/pass-string-to-edit-in-terminal-and-confirm-with-enter-key-in-haskell-program/51572794#51572794", "title": "Pass string to edit in terminal and confirm with enter-key in Haskell program", "body": "<p>Yes, using <a href=\"http://hackage.haskell.org/package/haskeline-0.7.4.3/docs/System-Console-Haskeline.html\" rel=\"noreferrer\"><code>haskeline</code></a> (a readline-style library).  It has the function <code>getInputLineWithInitial</code> which has the behavior you are asking for.  Example:</p>\n\n<pre><code>import System.Console.Haskeline\n\nmain = do\n  result &lt;- runInputT defaultSettings $ getInputLineWithInitial \"\"\n     (\"Pass string to edit in terminal \", \"in Haskell program\")\n  print result\n</code></pre>\n"}], "owner": {"reputation": 774, "user_id": 6034245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/n3qwA.jpg?s=128&g=1", "display_name": "chrisheyn", "link": "https://stackoverflow.com/users/6034245/chrisheyn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 1, "accepted_answer_id": 51572794, "answer_count": 1, "score": 3, "last_activity_date": 1532792821, "creation_date": 1532789695, "question_id": 51572503, "link": "https://stackoverflow.com/questions/51572503/pass-string-to-edit-in-terminal-and-confirm-with-enter-key-in-haskell-program", "title": "Pass string to edit in terminal and confirm with enter-key in Haskell program", "body": "<p>Is there a way to \"print\" a string in terminal and the user can edit this string and press Enter to confirm and pass it back into program?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1532789652, "post_id": 51572169, "comment_id": 90110885, "body": "How do you know you didn\u2019t get <code>twentyGrid</code> wrong?"}], "answers": [{"comments": [{"owner": {"reputation": 5, "user_id": 10148536, "user_type": "registered", "profile_image": "https://graph.facebook.com/1315858475183934/picture?type=large", "display_name": "Michael Mafeni", "link": "https://stackoverflow.com/users/10148536/michael-mafeni"}, "edited": false, "score": 0, "creation_date": 1532820168, "post_id": 51572863, "comment_id": 90117614, "body": "oh yeah. Thank you very much !!"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1532792614, "creation_date": 1532792614, "answer_id": 51572863, "question_id": 51572169, "link": "https://stackoverflow.com/questions/51572169/cant-find-error-in-code-project-euler-11-haskell/51572863#51572863", "title": "Can&#39;t find error in code (Project Euler #11 (Haskell))", "body": "<p>It looks like you are handling the diagonals that go from upper left to lower right, both above the main diagonal (<code>upDiag</code>) and below the main diagnoal (<code>lowDiag</code>).  However, you don't seem to be handling diagonals in the other direction.  For example, if you look in the top-left corner of the grid:</p>\n\n<blockquote>\n  <p>08 02 22 <strong>97</strong><br>\n  49 49 <strong>99</strong> 40  ...<br>\n  81 <strong>49</strong> 31 73<br>\n  <strong>52</strong> 70 95 23<br>\n  ...</p>\n</blockquote>\n\n<p>you have no code checking diagonals like the bolded one.</p>\n"}], "owner": {"reputation": 5, "user_id": 10148536, "user_type": "registered", "profile_image": "https://graph.facebook.com/1315858475183934/picture?type=large", "display_name": "Michael Mafeni", "link": "https://stackoverflow.com/users/10148536/michael-mafeni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 51572863, "answer_count": 1, "score": 0, "last_activity_date": 1532792614, "creation_date": 1532787189, "question_id": 51572169, "link": "https://stackoverflow.com/questions/51572169/cant-find-error-in-code-project-euler-11-haskell", "title": "Can&#39;t find error in code (Project Euler #11 (Haskell))", "body": "<p>I can't seem to find out why my code isn't working. I think I'm correct and all the examples I've seen do the same thing I do. But when I execute it, I get a different answer. Could someone please help me in finding out what's wrong? (adj4 is my final answer)</p>\n\n<pre><code>type Grid = [[Integer]]\n\ntwentyGrid :: [Integer]\ntwentyGrid = [8,2,22,97,38,15,0,40,0,75,4,5,7,78,52,12,50,77,91,8,49,49,99,40,17,81,18,57,60,87,17,40,98,43,69,48,4,56,62,0,81,49,31,73,55,79,14,29,93,71,40,67,53,88,30,3,49,13,36,65,52,70,95,23,4,60,11,42,69,24,68,56,1,32,56,71,37,2,36,91,22,31,16,71,51,67,63,89,41,92,36,54,22,40,40,28,66,33,13,80,24,47,32,60,99,3,45,2,44,75,33,53,78,36,84,20,35,17,12,50,32,98,81,28,64,23,67,10,26,38,40,67,59,54,70,66,18,38,64,70,67,26,20,68,2,62,12,20,95,63,94,39,63,8,40,91,66,49,94,21,24,55,58,5,66,73,99,26,97,17,78,78,96,83,14,88,34,89,63,72,21,36,23,9,75,0,76,44,20,45,35,14,0,61,33,97,34,31,33,95,78,17,53,28,22,75,31,67,15,94,3,80,4,62,16,14,9,53,56,92,16,39,5,42,96,35,31,47,55,58,88,24,0,17,54,24,36,29,85,57,86,56,0,48,35,71,89,7,5,44,44,37,44,60,21,58,51,54,17,58,19,80,81,68,5,94,47,69,28,73,92,13,86,52,17,77,4,89,55,40,4,52,8,83,97,35,99,16,7,97,57,32,16,26,26,79,33,27,98,66,88,36,68,87,57,62,20,72,3,46,33,67,46,55,12,32,63,93,53,69,4,42,16,73,38,25,39,11,24,94,72,18,8,46,29,32,40,62,76,36,20,69,36,41,72,30,23,88,34,62,99,69,82,67,59,85,74,4,36,16,20,73,35,29,78,31,90,1,74,31,49,71,48,86,81,16,23,57,5,54,1,70,54,71,83,51,54,69,16,92,33,48,61,43,52,1,89,19,67,48]\n\n\n\nrows :: Int -&gt; [Integer] -&gt; Grid --split grid into rows of length n\nrows n [] = []\nrows n xs = (take n xs):(rows n (drop n xs))\n\ncols :: Int -&gt; [Integer] -&gt; Grid\ncols n  = (transpose.rows n)\n\nrowGrid :: Grid\nrowGrid = rows 20 twentyGrid\n\ncolGrid :: Grid\ncolGrid = cols 20 twentyGrid\n\ngetDiag ::  Grid-&gt; [Integer] --get a diagonal\ngetDiag [] = []\ngetDiag xss\n    | head xss == [] = []\n    | otherwise  = ((head.head) xss) : (getDiag ((map(drop 1).(drop 1)) xss))\n\nadjac :: Int -&gt; [Integer] -&gt; [[Integer]] -- get all possible combinations of n numbers\nadjac 0 xs = []\nadjac n [] = []\nadjac n (x:xs)\n    | length (x:xs) &gt; n = (take n (x:xs)) : (adjac n xs)\n    | otherwise          = [x:xs]\n\ndiags :: Grid -&gt; Grid\ndiags [] = []\ndiags (xs:xss)\n    | (xs == []) = []\n    | otherwise   =(getDiag (xs:xss)): (diags (map (drop 1) (xs:xss)))\n\nupDiag :: Grid --get upper diaonals\nupDiag = diags rowGrid\n\nlowDiag :: Grid -- get lower diagonals\nlowDiag = diags colGrid\n\nallCells :: Grid --every diagonal column and row merged together\nallCells = rowGrid ++ colGrid ++ upDiag ++ lowDiag\n\nadj4 :: Integer --find largest product of 4 adjacent numbers\nadj4 = (maximum.map maximum.map (map product).map (adjac 4)) allCells\n\ntestAdj :: [[Integer]]\ntestAdj = (map (map product).map (adjac 4)) allCells\n</code></pre>\n"}, {"tags": ["haskell", "haddock"], "comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1532786755, "post_id": 51572074, "comment_id": 90110198, "body": "What have you tried that isn&#39;t working? Is putting <code>-- $somechunkname</code> in the export list not enough?"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1532789275, "post_id": 51572074, "comment_id": 90110789, "body": "Have added clarifications to the question."}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1532866108, "post_id": 51572074, "comment_id": 90125578, "body": "Can you give a full reprodicible example?"}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1532866233, "post_id": 51572074, "comment_id": 90125627, "body": "Oh, and named chunks are not for linking. AFAIK a reference to a named chunk is simply replaced by the contents of the named chunk."}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1532866278, "post_id": 51572074, "comment_id": 90125637, "body": "For linking you can try anchors: <a href=\"http://haskell-haddock.readthedocs.io/en/latest/markup.html#anchors\" rel=\"nofollow noreferrer\">haskell-haddock.readthedocs.io/en/latest/markup.html#anchors</a>"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1532874396, "post_id": 51572074, "comment_id": 90127796, "body": "Hang on, are anchors and named-chunks completely different concepts? I&#39;ve spent an hour trying to link to a named chunk using the <code>#something</code> syntax, but it just doesn&#39;t work."}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1532953493, "post_id": 51572074, "comment_id": 90153485, "body": "@SaurabhNanda: Yeah, anchors and named chunks are unrelated."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1533109441, "post_id": 51572074, "comment_id": 90220206, "body": "@sjakobi there isn&#39;t any reason why <b>both</b> of these should exist, right? It should be possible to link directly to named chunks of documentation, right?"}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1533169570, "post_id": 51572074, "comment_id": 90252072, "body": "@SaurabhNanda: In my understanding, named chunks are about reducing clutter in export lists. So they do have a different purpose than anchors. You should still be able to make a link to a named chunk by including an anchor label in the named chunk."}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 118, "favorite_count": 1, "answer_count": 0, "score": 7, "last_activity_date": 1532789264, "creation_date": 1532786303, "last_edit_date": 1532789264, "question_id": 51572074, "link": "https://stackoverflow.com/questions/51572074/how-to-link-to-a-named-chunk-of-documentation-in-haddock", "title": "How to link to a named chunk of documentation in Haddock?", "body": "<p>I might be missing something really obvious (or might have developed temporary blindness staring at the Haddock user guide), but I can't seem to find any way to link to a <a href=\"http://haskell-haddock.readthedocs.io/en/latest/markup.html#named-chunks-of-documentation\" rel=\"noreferrer\">named chunk of documentation in Haddocks</a></p>\n\n<p><em>Edit:</em> I'm trying to create an internal hyperlink from one part of the doc to another named chunk of documentation. I've tried the following:</p>\n\n<pre><code>-- You may want to take a look at 'findByPkHelpers' section for\n-- variations of this function.\n--\n-- I even tried putting '$findByPkHelpers' but didn't work\n--\n-- ... snip ...\n\n-- ** Some heading\n-- \n-- $findByPkHelpers\n</code></pre>\n"}, {"tags": ["haskell", "haskell-lens"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1532784902, "post_id": 51571807, "comment_id": 90109767, "body": "Well it runs in <i>linear</i> time, which is typically quite long to calculate the length."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 2, "last_activity_date": 1532883848, "last_edit_date": 1532883848, "creation_date": 1532802595, "answer_id": 51574131, "question_id": 51571807, "link": "https://stackoverflow.com/questions/51571807/what-makes-lengthof-inefficient-in-lens/51574131#51574131", "title": "What makes lengthOf inefficient in lens?", "body": "<p><em>Update:</em>  See below -- the poor performance of <code>lengthOf</code> seems to be just lack of specialization to the list case when benchmarking.</p>\n\n<p>As @WillemVanOnsem indicates, I think the comment is mostly referring to the fact that this particular approach -- of running through the elements of the container with a counter -- will be inefficient for containers that have some other method of returning a length.  For example, for a very large vector <code>v</code>, you could technically use <code>lengthOf traverse v</code>, but <code>Data.Vector.length v</code> will be much faster.</p>\n\n<p>On the other hand, <code>lengthOf</code> <em>can be</em> quite inefficient for, say, counting the elements in a list.  The following benchmark:</p>\n\n<pre><code>import Criterion.Main\nimport Control.Lens\n\nl :: [Int]\nl = replicate 1000000 123\n\nmain = defaultMain\n  [ bench \"Prelude.length\"        $ whnf length l\n  , bench \"Control.Lens.lengthOf\" $ whnf (lengthOf traverse) l\n  ]\n</code></pre>\n\n<p>shows that <code>length</code> is about 15 times faster than <code>lengthOf</code>.  (I used GHC 8.4.3 with <code>-O2</code> for all my tests.)</p>\n\n<p>Note that this difference isn't a result of list fusion (since there's no fusion in the <code>Prelude.length</code> case when the <code>whnf</code> call is used).</p>\n\n<p>It's actually a result of specialization of the code to lists.  Even though <code>Prelude.length</code> is applicable to any <code>Foldable</code>, the instance for lists uses a list-specific implementation that's essentially equivalent to:</p>\n\n<pre><code>myLength :: [a] -&gt; Int\nmyLength xs = lenAcc xs 0\n  where lenAcc [] n = n\n        lenAcc (_:ys) n = lenAcc ys (n+1)\n</code></pre>\n\n<p>(I didn't check for sure that this was the implementation being used, but <code>myLength</code> had nearly equivalent performance to <code>Data.List</code>.)</p>\n\n<p>The Core for <code>myLength</code> uses unboxed integers in a loop that directly pattern matches the list constructors, more or less like:</p>\n\n<pre><code>lenAcc\n  = \\xs n -&gt;\n      case xs of\n        [] -&gt; n\n        (:) _ xs' -&gt; lenAcc xs' (+# n 1#)\n</code></pre>\n\n<p>It turned out that if I used <code>lengthOf</code> in a more realistic program with ample room to specialize to a list in the same way:</p>\n\n<pre><code>import Control.Lens\n\nl :: [Int]\n{-# NOINLINE l #-}\nl = replicate 1000000 123\n\nmyLength :: [a] -&gt; Int\nmyLength = lengthOf traverse\n\nmain = print (myLength l)\n</code></pre>\n\n<p>it generated Core like the following.  The same as above with an extra parameter which was essentially a casting identity function:</p>\n\n<pre><code>lenAcc'\nlenAcc'\n  = \\n id' xs -&gt;\n      case xs of {\n        [] -&gt; id' (I# n);\n        (:) _ xs' -&gt; lenAcc' (+# n 1#) id' xs'\n      }\n</code></pre>\n\n<p>I wasn't able to benchmark it, but it would probably be plenty fast.</p>\n\n<p>So, <code>lengthOf traverse</code> is capable of being optimized to be almost as fast as <code>Prelude.length</code>, but depending on how it's used, it might end up using a really inefficient implementation.</p>\n"}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1532883848, "creation_date": 1532784031, "question_id": 51571807, "link": "https://stackoverflow.com/questions/51571807/what-makes-lengthof-inefficient-in-lens", "title": "What makes lengthOf inefficient in lens?", "body": "<p>I noticed this <a href=\"https://github.com/ekmett/lens/commit/cdd89717877e628f4b18f82e8e504d83dd4ea32b\" rel=\"nofollow noreferrer\">remark</a> in <code>lens</code> claiming that <code>lengthOf</code> can be \"rather inefficient\":</p>\n\n<pre><code>-- /Note:/ This can be rather inefficient for large containers [...]\nlengthOf :: Getting (Endo (Endo Int)) s a -&gt; s -&gt; Int\nlengthOf l = foldlOf' l (\\a _ -&gt; a + 1) 0\n</code></pre>\n\n<p>Can it be asymptocically inefficient? Can it leak space despite being strict left fold or does GHC generate too much \"busywork\" code?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1532770382, "post_id": 51569942, "comment_id": 90106041, "body": "Well this is a type <i>alias</i>. You thus can write <code>Generate a</code>, but behind the curtains it is <code>RandT StdGen (ReaderT World Render) a</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1532778300, "post_id": 51569942, "comment_id": 90108085, "body": "It is not a product type declaration. That would be something like <code>data T = C Int Bool String</code>. This declares <code>Generate a</code> to be exactly the same of the type after the <code>=</code>. So, in the library there&#39;s this type <code>RandT</code>, parametrized over 3 type arguments, and here it is instantiated in some way."}], "answers": [{"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": true, "score": 8, "last_activity_date": 1532781566, "creation_date": 1532781566, "answer_id": 51571497, "question_id": 51569942, "link": "https://stackoverflow.com/questions/51569942/is-this-a-type-declaration/51571497#51571497", "title": "Is this a type declaration?", "body": "<p>I think it isn\u2019t obvious how to parse this so let\u2019s break it up</p>\n\n<pre><code>type\nGenerate a\n=\nRandT\n  StdGen\n  (ReaderT\n    World\n    Render)\n  a\n</code></pre>\n\n<p>So let\u2019s break it down. Line 1 is <code>type</code> this means \u201cI\u2019m here defining a type alias\u201d. A type alias is a shorthand for another type and is exactly the same as the type it expands into. Note that <code>data</code> means \u201cI\u2019m defining a new datatype and this is how to construct its values\u201d.</p>\n\n<p>Line 2 says \u201cthis type will be called <code>Generate</code> and is a has parameter <code>a</code>\u201d that is the thing <code>Generate</code> is a function from some type-level thing (in this case types e.g. <code>Int</code> or <code>Maybe Int</code> and not e.g. <code>Maybe</code>)</p>\n\n<p>Line 4 says that this type is equal to some application of the type constructor <code>RandT</code>. This thing has kind <code>* -&gt; (* -&gt; *) -&gt; * -&gt; *</code> and it\u2019s meaning is roughly:</p>\n\n<ol>\n<li>The first argument is the type of the random number generator</li>\n<li>The second argument is some Monad </li>\n<li>A Monad is returned (I.e. the third argument is the type inside the Monad and the result is the Monad)</li>\n</ol>\n\n<p>Let\u2019s look at the second argument. This is an application of <code>ReaderT</code>, a type-level thing of kind <code>* -&gt; (* -&gt; *) -&gt; * -&gt; *</code>. The first argument is the thing you want to be able to read (the state of the world). The second is some Monad you want to be based on. In this case <code>Render</code> which I assume let\u2019s you build up the art as as you go. There is no third so just like currying in normal Haskell, the result of this has kind <code>* -&gt; *</code>, which is the kind that was wanted by <code>RandT</code>.</p>\n\n<p>The way to read this is: <code>Generate</code> is a Monad that lets one use random number generation (with the standard generator), read a value of type <code>World</code>, and render art.</p>\n"}, {"comments": [{"owner": {"reputation": 1195, "user_id": 2814202, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/c8e45b7eb53a10285dbc4195f61e9d83?s=128&d=identicon&r=PG&f=1", "display_name": "himekami", "link": "https://stackoverflow.com/users/2814202/himekami"}, "edited": false, "score": 0, "creation_date": 1532821796, "post_id": 51575052, "comment_id": 90117849, "body": "thank you for the monad transformer term. now I know what to search for .."}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 2, "last_activity_date": 1532809972, "creation_date": 1532809972, "answer_id": 51575052, "question_id": 51569942, "link": "https://stackoverflow.com/questions/51569942/is-this-a-type-declaration/51575052#51575052", "title": "Is this a type declaration?", "body": "<p>Since no one has mentioned it so far, the term you\u2019re looking for is <em>monad transformer</em>. Monad transformers let you add various effects on top of an existing type of actions. Examples include <code>ReaderT</code>, <code>StateT</code>, and <code>MaybeT</code>. So in your example you have:</p>\n\n<ul>\n<li><p><code>Render</code> is a <code>Monad</code> that describes rendering actions.</p></li>\n<li><p><code>ReaderT World</code> is a monad <em>transformer</em>; when applied to a monad, it produces a monad that can read an immutable environment of type <code>World</code>. So <code>ReaderT World Render</code> is a monad that describes <code>Render</code> actions, and also stores a <code>World</code> that can be read with <code>ask</code> or <code>asks</code> inside actions of this type, e.g., <code>world &lt;- ask</code>.</p></li>\n<li><p><code>RandT StdGen</code> is a monad transformer which equips a monad with a random number generator of type <code>StdGen</code> (a standard generator), which you can access using the methods of <code>MonadRandom</code>: <code>getRandom</code>, <code>getRandoms</code>, <code>getRandomR</code>, and <code>getRandomRs</code>. So <code>RandT StdGen (ReaderT World Render)</code> is a monad that can render things, read the state of the <code>World</code>, and generate random numbers from a <code>StdGen</code>, e.g., <code>dieRoll &lt;- getRandomR (1, 6)</code>.</p></li>\n</ul>\n\n<p>The <code>type</code> declaration just defines <code>Generate</code> as an <em>alias</em> for <code>RandT StdGen (ReaderT World Render)</code>, with one type parameter <code>a</code> that indicates the result type of <code>Generate</code> actions. Anywhere you see <code>Generate Foo</code>, the compiler directly substitutes <code>RandT StdGen (ReaderT World Render) Foo</code>.</p>\n"}], "owner": {"reputation": 1195, "user_id": 2814202, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/c8e45b7eb53a10285dbc4195f61e9d83?s=128&d=identicon&r=PG&f=1", "display_name": "himekami", "link": "https://stackoverflow.com/users/2814202/himekami"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 51571497, "answer_count": 2, "score": 1, "last_activity_date": 1532809972, "creation_date": 1532770061, "question_id": 51569942, "link": "https://stackoverflow.com/questions/51569942/is-this-a-type-declaration", "title": "Is this a type declaration?", "body": "<p>Haskell newbie here. I was following this generative art tutorial over the net and came across the following code snippet. I ran it and it works just fine. The thing is I don't understand any bit of it. </p>\n\n<pre><code>type Generate a = RandT StdGen (ReaderT World Render) a\n</code></pre>\n\n<p>Is it a product type declaration ? if it is then is it possible to combine a group of types in parentheses like the above ? The way I see, it looks more like a function defined in a type or something like that.</p>\n"}, {"tags": ["haskell", "haddock"], "comments": [{"owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 0, "creation_date": 1532801386, "post_id": 51569105, "comment_id": 90113776, "body": "It is my understanding the Haddock doesn&#39;t produce documentation for implementations of typeclasses, only the typeclasses themselves, so I don&#39;t think there&#39;s even any documentation for you to link to in the way you want."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 0, "creation_date": 1533061440, "post_id": 51569105, "comment_id": 90205155, "body": "These days, you <i>should</i> see a &quot;source&quot; link to each listed instance. If not, you may be using an older version of Haddock. @Kwarrtz, an instance (but not a method implementation) <i>can</i> have a docstring, but unfortunately this will be formatted rather horribly if it&#39;s not very short."}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 1, "last_activity_date": 1533048002, "creation_date": 1533048002, "answer_id": 51616053, "question_id": 51569105, "link": "https://stackoverflow.com/questions/51569105/how-to-link-to-a-specific-implementation-of-a-typeclass-function/51616053#51616053", "title": "How to link to a specific implementation of a typeclass function?", "body": "<p>Implement the method as a simple synonym to a plain old function, instead of writing the implementation in place.</p>\n\n<pre><code>module MyModule where\n\ndata MyType = MyConstructor\n\ncomplicatedFunction_MyType :: MyType -&gt; Int\ncomplicatedFunction_MyType MyConstructor = 734\n</code></pre>\n\n<hr>\n\n<pre><code>module YourClass where\n\nclass Something a where\n\n  -- | Please take a look at 'MyModule.complicatedFunction_MyType' for an \n  -- example of how to write this function for your own implementations\n  -- of this type-class\n  complicatedFunction :: a -&gt; Int\n\ninstance Something MyType where\n  complicatedFunction = complicatedFunction_MyType\n</code></pre>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1533048002, "creation_date": 1532762937, "question_id": 51569105, "link": "https://stackoverflow.com/questions/51569105/how-to-link-to-a-specific-implementation-of-a-typeclass-function", "title": "How to link to a specific implementation of a typeclass function?", "body": "<p>I'm writing the documentation for a type-class where I'd like to point to an existing typeclass implementation to given an example of how to write your own instances. Here's what I'm trying:</p>\n\n<pre><code>class Something a where\n\n  -- | Please take a look at 'MyModule.complicatedFunction' for an \n  -- example of how to write this function for your own implementations\n  -- of this type-class\n  complicatedFunction :: a -&gt; Int\n</code></pre>\n\n<p>The generated function <em>does</em> link to <code>MyModule</code>, but it doesn't link to the MyModule's implementation of <code>complicatedFunction</code>, and I don't see a way to link to its source-code either.</p>\n"}, {"tags": ["haskell", "random", "types", "monads"], "comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1532779048, "post_id": 51568471, "comment_id": 90108231, "body": "The &quot;pure&quot; way of having pseudo-random values is to add to each function a new parameter (the current random seed) and a new ouput value (the modified seed, to be used by the following functions). Composing these modified functions can get annoying, and <code>State</code> or <code>State</code>-like monads can be used to reduce the boilerplate involved and avoid obscuring the main logic of the function. Alas, looking at the signature of <code>getContVar</code>, it seems to be inextricably bound to <code>IO</code> or <code>ST</code> (because of the <code>PrimMonad</code> constratint) so we can&#39;t use that technique here."}, {"owner": {"reputation": 47, "user_id": 7724046, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TLUZn.png?s=128&g=1", "display_name": "Twisted Mersenne", "link": "https://stackoverflow.com/users/7724046/twisted-mersenne"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1532793520, "post_id": 51568471, "comment_id": 90111809, "body": "Thanks, @danidiaz. If using the &quot;pure&quot; approach works I may just try and go for it As for the others, I&#39;m not trying to avoid monads, but I&#39;m having trouble with putting together variables that should in principle be compatible. I do not know what &quot;is Haskell&quot; and did not &quot;learn it&quot; anywhere, I am actually trying to learn some of it now from basic mathematical and programming constructs that are easily functionally implemented in Python, Julia, or even C++. So I appreciate any help in putting together a working example, but please spare the smugness for all of your &quot;fans&quot; out there."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1532802411, "post_id": 51568471, "comment_id": 90114020, "body": "@TwistedMersenne Perhaps you could take a look at the &quot;random&quot; library <a href=\"http://hackage.haskell.org/package/random-1.1/docs/System-Random.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/random-1.1/docs/System-Random.ht&zwnj;&#8203;ml</a> You can create a seed using <code>mkStdGen</code> (our using <code>getStdGen</code>, but that is an <code>IO</code> action). The type <code>StdGen</code> is an instance of <code>RandomGen</code>. <code>RandomGen</code> is a typeclass, somethign a bit like an &quot;interface&quot; in other languages. Then you can use functions like <code>random</code> or <code>randomR</code>, which take the seed and return random values along with a modified seed. The types that can be generated are instances of the <code>Random</code> typeclass."}, {"owner": {"reputation": 47, "user_id": 7724046, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TLUZn.png?s=128&g=1", "display_name": "Twisted Mersenne", "link": "https://stackoverflow.com/users/7724046/twisted-mersenne"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1532812944, "post_id": 51568471, "comment_id": 90116402, "body": "@danidiaz, thanks. Using randomR may end up being &quot;easier&quot; since I&#39;m trying to combine random numbers with pure mathematical functions. It&#39;s more work and not clear to me how to update the rng state in that case, since Haskell (mathematically correctly but annoyingly) doesn&#39;t allow something like <code>(rd,rng) = randomR (0, 1) rng</code>, but maybe an additional step using a different variable allows me to update a &quot;global&quot; <code>rng</code> state each time. If you have a working example, that&#39;d be great, but I&#39;ll try to post it if it works."}], "answers": [{"comments": [{"owner": {"reputation": 47, "user_id": 7724046, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TLUZn.png?s=128&g=1", "display_name": "Twisted Mersenne", "link": "https://stackoverflow.com/users/7724046/twisted-mersenne"}, "edited": false, "score": 0, "creation_date": 1532812259, "post_id": 51574109, "comment_id": 90116294, "body": "Thanks, that&#39;s really helpful. I should keep that in mind that GCHi is in <code>IO</code>, so when I write a one-liner function  I&#39;m no longer in <code>IO</code> territory, I&#39;m guessing. Could you write a <code>do</code> syntax in a single line I can use interactively? And since it&#39;s returning a value of fmap over a list shouldn&#39;t it be just [Double]? The basics of monads are clear enough, I guess, like Functors and Applicative the definition <code>(&gt;&gt;=) :: (Monad m) =&gt; m a -&gt; (a -&gt; m b) -&gt; m b</code> says almost all that is needed. In practice specific cases may be less straightforward with all the type restrictions of Haskell."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 47, "user_id": 7724046, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TLUZn.png?s=128&g=1", "display_name": "Twisted Mersenne", "link": "https://stackoverflow.com/users/7724046/twisted-mersenne"}, "edited": false, "score": 0, "creation_date": 1532814220, "post_id": 51574109, "comment_id": 90116662, "body": "@TwistedMersenne: To write <code>do</code> notation as a one-liner, you can use semicolons and (optionally) curly braces instead of relying on the layout rule: <code>do a &lt;- b; c &lt;- d; e</code> or <code>do { a &lt;- b; c &lt;- d; e }</code>. This also works for other layout-sensitive notation like <code>case exp of { pat -&gt; exp; pat -&gt; exp; \u2026 }</code> and <code>let { pat = exp; pat = exp } in exp</code> since layout is syntactic sugar for explicit delimiters. Alternatively, you can enter multiple  lines of input in GHCi with the <code>:{</code> and <code>:}</code> commands, or <code>:set +m</code> to enable multi-line input mode by default\u2014although imo these are both a bit clunky."}, {"owner": {"reputation": 47, "user_id": 7724046, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TLUZn.png?s=128&g=1", "display_name": "Twisted Mersenne", "link": "https://stackoverflow.com/users/7724046/twisted-mersenne"}, "edited": false, "score": 0, "creation_date": 1533652760, "post_id": 51574109, "comment_id": 90419602, "body": "Well, that works, on ghci it worked with the multiline environment, but couldn&#39;t make it work with curly brackets, though. Still, it returns a monad again and passes on the problem to the next function. I was hoping to use a monadic function to ultimately get a double and not have to wrap the entire program in a monadic construct, but I guess this is it in Haskell. Maybe with a pure prng it&#39;s better."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 47, "user_id": 7724046, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TLUZn.png?s=128&g=1", "display_name": "Twisted Mersenne", "link": "https://stackoverflow.com/users/7724046/twisted-mersenne"}, "edited": false, "score": 0, "creation_date": 1533654777, "post_id": 51574109, "comment_id": 90420958, "body": "@TwistedMersenne <i>&quot;I was hoping to [...] ultimately get a double and not have to wrap the entire program in a monadic construct&quot;</i> Perhaps this will be helpful: <a href=\"https://stackoverflow.com/a/51620647/126014\">stackoverflow.com/a/51620647/126014</a>"}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 2, "last_activity_date": 1532802456, "creation_date": 1532802456, "answer_id": 51574109, "question_id": 51568471, "link": "https://stackoverflow.com/questions/51568471/how-can-a-random-number-be-used-as-a-double-in-a-haskell-function/51574109#51574109", "title": "How can a random number be used as a Double in a Haskell function?", "body": "<p>When you're evaluating expressions in GHCi, you're already in the <code>IO</code> monad. That's why the OP GCHi code works.</p>\n\n<p>As <em>n.m.</em> points out in a comment, monads <em>are</em> the practical way of using random numbers (and all other non-deterministic or effectful behaviour) in Haskell. If you want to write Haskell code, you'll have to learn what they are, sooner or later. The good news, though, is that it's not as difficult to learn what a monad is than some people seem to believe.</p>\n\n<p>Haskell does have syntactic sugar for monads, in the form of <code>do</code> notation. Using that, you can write the function like this:</p>\n\n<pre><code>f x = do\n  rng &lt;- create\n  rd &lt;- (genContVar (uniformDistr 0 1)) rng\n\n  return $ takeWhile (&lt;rd) $ fmap (*x) [1..10]\n</code></pre>\n\n<p>This function has the type <code>PrimMonad m =&gt; Double -&gt; m [Double]</code>. The presence of <code>PrimMonad</code> in the output type implies some sort of effect. The function can (and is likely to) be impure.</p>\n\n<p>In theory, one could write an entire Haskell program using impure language constructs like the above, but the point of Haskell is to keep as much of the code pure as possible, so one should limit the use of impure code as much as possible.</p>\n"}], "owner": {"reputation": 47, "user_id": 7724046, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TLUZn.png?s=128&g=1", "display_name": "Twisted Mersenne", "link": "https://stackoverflow.com/users/7724046/twisted-mersenne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 51574109, "answer_count": 1, "score": 2, "last_activity_date": 1532802456, "creation_date": 1532756944, "question_id": 51568471, "link": "https://stackoverflow.com/questions/51568471/how-can-a-random-number-be-used-as-a-double-in-a-haskell-function", "title": "How can a random number be used as a Double in a Haskell function?", "body": "<p>I am trying to write a function that uses a random number as a condition to compare to a list (which is created by mapping a function over a range of integers). I'm doing it interactively, and if I do it by defining each term separately it works:</p>\n\n<pre><code>import System.Random.MWC (create)\nimport Statistics.Distribution (genContVar)\nimport Statistics.Distribution.Uniform (uniformDistr)\n\nrng &lt;- create\nrd &lt;- (genContVar (uniformDistr 0 1)) rng\n\nf x = takeWhile (&lt;rd) $ fmap (*x) [1..10]\n</code></pre>\n\n<p>alternatively, I can use a non-random Double with a let expression and also have no problem</p>\n\n<pre><code>f x = let rd = 0.4 in takeWhile (&lt;rd) $ fmap (*x) [1..10]\n</code></pre>\n\n<p>however, if I try to put it all together I get an error</p>\n\n<pre><code>f x = let rand &lt;- (genContVar (uniformDistr 0 1) g) in takeWhile (&lt;rand) $ fmap (*x) [1..10]\n\n&lt;interactive&gt;:39:16: error:\nparse error on input \u2018&lt;-\u2019\nPerhaps this statement should be within a 'do' block?\n</code></pre>\n\n<p>I understand that having different variable types prevents so much as adding up and Int and a Double, and that monads are very particular, but being new to Haskell I'm hoping to avoid the broader philosophy about that for now and instead try to find a practical way of using random numbers in general functions.</p>\n"}, {"tags": ["haskell", "haddock"], "answers": [{"tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": false, "score": 1, "last_activity_date": 1532758523, "creation_date": 1532758523, "answer_id": 51568631, "question_id": 51568404, "link": "https://stackoverflow.com/questions/51568404/how-to-document-type-class-constraints-using-haddock/51568631#51568631", "title": "How to document type-class constraints using Haddock?", "body": "<p>There isn't any way to make this work with the latest version of Haddock.</p>\n\n<p>This idea has been brought up before in passing: <a href=\"https://github.com/haskell/haddock/issues/472#issuecomment-257136046\" rel=\"nofollow noreferrer\">https://github.com/haskell/haddock/issues/472#issuecomment-257136046</a>. I wouldn't hold my breath though - this would require some really core changes to how Haddock stores doc strings.</p>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1532758523, "creation_date": 1532756235, "question_id": 51568404, "link": "https://stackoverflow.com/questions/51568404/how-to-document-type-class-constraints-using-haddock", "title": "How to document type-class constraints using Haddock?", "body": "<p>I'm trying to document some very scary type-class constraints and explaining why they're required, but I can't seem to get the following working in Haddock:</p>\n\n<pre><code>{-|\n\nThis will show-up at the top of the module\n\n-}\n\nmodule Try where\n\n-- | This shows up immediately after the class \"header\"\nclass (\n\n    -- | PROBLEM: This doesn't work...\n    Show a -- ^ PROBLEM: Also, this doesn't work\n\n    ) =&gt; Something a where\n\n    -- | This shows up as the method's documentation\n    something :: a -&gt; Int\n</code></pre>\n"}, {"tags": ["haskell", "ghc", "type-inference", "typechecking"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 4, "creation_date": 1532725314, "post_id": 51565312, "comment_id": 90097821, "body": "A guess: this is <i>let polymorphism</i>.  We would expect the monomorphism restriction to apply, but that only happens when there are class constraints, so as to avoid duplication of computation (because constraints become functions under the hood).  If you give the signature <code>(Maybe Int, Maybe Double)</code> and use <code>x = Just 0</code> you do get an error, which corroborates this story (recall that numeric literals are polymorphic)."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1537199354, "post_id": 51565312, "comment_id": 91687586, "body": "@luqui I tried <code>let { foo :: (Maybe Int, Maybe Double) ; foo = let {x=Just 0} in (x,x) }</code> and it worked, with no error. (?) It even worked with <code>foo :: (Integral a, Fractional b) =&gt; (Maybe a, Maybe b)</code>."}], "answers": [{"comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 0, "creation_date": 1532732049, "post_id": 51565505, "comment_id": 90099649, "body": "It\u2019s also maybe worth noting that enabling certain GHC extensions implicitly disables let generalization, namely GADTs or TypeFamilies."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 0, "creation_date": 1532733443, "post_id": 51565505, "comment_id": 90099899, "body": "@AlexisKing, I can&#39;t verify that.  The example the OP gives compiles regardless of those extensions.  Example?"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 5, "creation_date": 1532734516, "post_id": 51565505, "comment_id": 90100115, "body": "@AlexisKing That doesn&#39;t apply here. <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-MonoLocalBinds\" rel=\"nofollow noreferrer\"><code>MonoLocalBinds</code></a> applies to only those binding groups with free variables that are either affected by the monomorphism restriction or neither let-bound nor top-level. <code>Nothing</code> (as a data constructor) is both not monomorphized and top-level, so the binding group <code>x = Nothing</code> gets to be properly generalized."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1532734537, "post_id": 51565505, "comment_id": 90100118, "body": "@luqui: That\u2019s strange; the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html\" rel=\"nofollow noreferrer\">GHC docs</a> say that <code>MonoLocalBinds</code> is implied by <code>TypeFamilies</code> and <code>GADTs</code>, and no other extensions. Edit: ah, it\u2019s true but irrelevant to this particular example."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1532734738, "post_id": 51565505, "comment_id": 90100151, "body": "@HTNW Yes, you\u2019re right, but this answer speaks about let generalization more generally and does not mention that let is only <i>sometimes</i> generalized in GHC Haskell."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 21, "last_activity_date": 1532726042, "last_edit_date": 1532726042, "creation_date": 1532725294, "answer_id": 51565505, "question_id": 51565312, "link": "https://stackoverflow.com/questions/51565312/code-unexpectedly-accepted-by-ghc-ghci/51565505#51565505", "title": "Code unexpectedly accepted by GHC/GHCi", "body": "<p>Briefly put, the type of <code>x</code> gets generalized by <code>let</code>. This is a key step in the <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system\" rel=\"noreferrer\">Hindley-Milner</a> type inference algorithm.</p>\n\n<p>Concretely, <code>let x = Nothing</code> initially assigns <code>x</code> the type <code>Maybe t</code>, where <code>t</code> is a fresh type variable. Then, the type gets generalized, universally quantifying all its type variables (technically: except those in use elsewhere, but here we only have <code>t</code>). This causes <code>x :: forall t. Maybe t</code>. Note that this is exactly the same type as <code>Nothing :: forall t. Maybe t</code>.</p>\n\n<p>Hence, each time we use <code>x</code> in our code, that refers to a potentially different type <code>Maybe t</code>, much like <code>Nothing</code>. Using <code>(x, x)</code> gets the same type as <code>(Nothing, Nothing)</code> for this reason.</p>\n\n<p>Instead, lambdas do <em>not</em> feature the same generalization step. By comparison <code>(\\x -&gt; (x, x)) Nothing</code> \"only\" has type <code>forall t. (Maybe t, Maybe t)</code>, where both components are forced to be of the same type. Here <code>x</code> is again assigned type <code>Maybe t</code>, with <code>t</code> fresh, but it is not generalized. Then <code>(x, x)</code> is assigned type <code>(Maybe t, Maybe t)</code>. Only at the top-level we generalize adding <code>forall t</code>, but at that point is too late to obtain a heterogeneous pair.</p>\n"}], "owner": {"reputation": 323, "user_id": 9631527, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb9e5f1bf9b89241e5dddb0eb757ad78?s=128&d=identicon&r=PG&f=1", "display_name": "tlon", "link": "https://stackoverflow.com/users/9631527/tlon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "accepted_answer_id": 51565505, "answer_count": 1, "score": 17, "last_activity_date": 1532726042, "creation_date": 1532724273, "question_id": 51565312, "link": "https://stackoverflow.com/questions/51565312/code-unexpectedly-accepted-by-ghc-ghci", "title": "Code unexpectedly accepted by GHC/GHCi", "body": "<p>I don't understand why this code should pass type-checking:</p>\n\n<pre><code>foo :: (Maybe a, Maybe b)\nfoo = let x = Nothing in (x,x)\n</code></pre>\n\n<p>Since each component is bound to the same variable <code>x</code>, I would expect that the most general type for this expression to be <code>(Maybe a, Maybe a)</code>.  I get the same results if I use a <code>where</code> instead of a <code>let</code>.  Am I missing something?</p>\n"}, {"tags": ["haskell", "vector", "random", "noise", "unfold"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1532714816, "post_id": 51563306, "comment_id": 90093590, "body": "Is <code>fs</code> an unused reimplementation of <code>fst</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 5, "last_activity_date": 1532721330, "creation_date": 1532721330, "answer_id": 51564736, "question_id": 51563306, "link": "https://stackoverflow.com/questions/51563306/haskell-efficiency-iterative-map-with-added-noise/51564736#51564736", "title": "Haskell: Efficiency iterative map with added noise", "body": "<p><strong>tl;dr:</strong> Don't try to optimize a Haskell program without using profiling and benchmarking.  Adding random exclamation marks and <code>seq</code>s is almost never going to work.  The big problem here, in fact, is that <code>StdGen</code> is an incredibly slow random number generator and it's completely dominating the execution time of your program.  You need to replace it to make any significant progress.</p>\n\n<p>Here's the longer answer:  A good first step is to install a benchmarking library, like <code>criterion</code>, and write a test case:</p>\n\n<pre><code>import Criterion.Main\n\n...your program above...\n\nvect1 :: (Double, Int) -&gt; U.Vector Double\nvect1 = first . new 0.5 1 10000\n\nmain = defaultMain [\n  bench \"vect1\" $ nf vect1 (0,1)\n  ]\n</code></pre>\n\n<p>In my case, the results look like:</p>\n\n<pre><code>benchmarking vect1\ntime                 8.097 ms   (8.071 ms .. 8.125 ms)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 8.140 ms   (8.124 ms .. 8.162 ms)\nstd dev              52.90 \u03bcs   (36.32 \u03bcs .. 91.72 \u03bcs)\n</code></pre>\n\n<p>so we have about 8 milliseconds per run to generate a 10000-element vector.</p>\n\n<p>Now, let's get rid of all the bangs, <code>seq</code>s and intermediate calculations you added to try to speed things up:</p>\n\n<pre><code>new :: Double-&gt; Double -&gt; Int -&gt; (Double, Int) -&gt; U.Vector (Double,Int)\nnew skal r n = U.unfoldrN n go\n  where  \n   go (x0,g0)  = let  x = r * x0 * (1-x0)\n                      g = g0 + 1\n                      noise = skal * (fst $ genR g)\n                 in Just ((x0+noise, g0), (x,g))\n</code></pre>\n\n<p>Rerunning, here are the results:</p>\n\n<pre><code>time                 8.195 ms   (8.168 ms .. 8.235 ms)\n</code></pre>\n\n<p>Ah, so they had no effect at all.  Glad we got rid of them.</p>\n\n<p>Now, it's worth noting that <code>unfoldrN</code> is carrying along the accumulator for you which holds on to your <code>g</code>.  You don't also need to include <code>g</code> in the result if you're going to throw it away anyway, so we can simplify <code>new</code> to:</p>\n\n<pre><code>new :: Double-&gt; Double -&gt; Int -&gt; (Double, Int) -&gt; U.Vector Double\nnew skal r n = U.unfoldrN n go\n  where  \n   go (x0,g0)  = let  x = r * x0 * (1-x0)\n                      g = g0 + 1\n                      noise = skal * (fst $ genR g)\n                 in Just (x0+noise, (x,g))\n</code></pre>\n\n<p>and drop the <code>first</code> call from the definition of <code>vect1</code>:</p>\n\n<pre><code>vect1 :: (Double, Int) -&gt; U.Vector Double\nvect1 = new 0.5 1 10000\n</code></pre>\n\n<p>This gives:</p>\n\n<pre><code>time                 8.289 ms   (8.238 ms .. 8.373 ms)\n</code></pre>\n\n<p>so it didn't really make a difference.  Undoubtedly, the compiler was able to optimize away the useless extra <code>Double</code>s anyway, so changing the code had no effect.</p>\n\n<p>A more serious problem with the algorithm is that it uses generators in a really weird way.  A <code>StdGen</code> is meant to be seeded and then reused to generate multiple random numbers, not to be generated fresh from a seed based on a counter.  We really ought to rewrite <code>new</code> to use the generator properly:</p>\n\n<pre><code>new :: Double-&gt; Double -&gt; Int -&gt; (Double, Int) -&gt; U.Vector Double\nnew skal r n (x0, seed) = U.unfoldrN n go (x0, g0)\n  where\n   g0 = mkStdGen seed  -- create initial generator from seed\n   go (x0,g0)  = let  (eps, g) = randomR (0, 1.0) g0 -- use generator properly\n                      x = r * x0 * (1-x0)\n                      noise = skal * eps\n                 in Just (x0 + noise, (x, g))\n</code></pre>\n\n<p>though again, this makes almost no difference to our benchmarking times.  I'll admit that this one surprised me.  I thought it would have a significant effect.  Good thing I was benchmarking these changes so I had actual objective evidence of the effect (or lack of effect) of this change!</p>\n\n<p>Now, it seems like it's probably time to profile our program and see what it's spending its time doing.</p>\n\n<pre><code>$ stack ghc -- -prof -fprof-auto -O2 Generating.hs\n$ ./Generating -n 100 +RTS -p   # run 100 iterations\n</code></pre>\n\n<p>If you look at the <code>Generating.prof</code> file that's output, you'll see that the majority of time is spent in <code>System.Random</code>, like so:</p>\n\n<pre><code>COST CENTRE               MODULE                            SRC                                                    %time %alloc\n\nrandomR                   System.Random                     System/Random.hs:409:3-27                               21.7   24.0\nstdNext                   System.Random                     System/Random.hs:(518,1)-(528,64)                       15.4   16.6\nrandomIvalInteger         System.Random                     System/Random.hs:(468,1)-(489,76)                       12.2   12.0\nrandomIvalInteger.f       System.Random                     System/Random.hs:(486,8)-(489,76)                       11.0    4.8\nrandomIvalInteger.f.v'    System.Random                     System/Random.hs:489:25-76                               7.0    8.6\n</code></pre>\n\n<p>It turns out that Haskell's standard random number generator is appallingly slow, and we'll need to replace it with something faster to make any more progress.  </p>\n\n<p>The <code>mersenne-random-pure64</code> package provides a fast Mersenne Twister implementation that produces high quality random numbers, and we can rewrite <code>new</code> to use it.  Note that <code>randomDouble</code> returns a uniform random number in the interval <code>[0,1)</code>:</p>\n\n<pre><code>import System.Random.Mersenne.Pure64\nnew :: Double-&gt; Double -&gt; Int -&gt; (Double, Int) -&gt; U.Vector Double\nnew skal r n (x0, seed) = U.unfoldrN n go (x0, g0)\n  where\n   g0 = pureMT (fromIntegral seed)\n   go (x0,g0)  = let (eps, g) = randomDouble g0\n                     x = r * x0 * (1-x0)\n                     noise = skal * eps\n                 in Just (x0 + noise, (x, g))\n</code></pre>\n\n<p>Re-benchmarking (recompiled without profiling) gives:</p>\n\n<pre><code>benchmarking vect1\ntime                 106.7 \u03bcs   (106.4 \u03bcs .. 107.0 \u03bcs)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 107.1 \u03bcs   (106.7 \u03bcs .. 107.7 \u03bcs)\nstd dev              1.415 \u03bcs   (842.3 ns .. 2.377 \u03bcs)\n</code></pre>\n\n<p>Note that that's 107 <strong>micro</strong>seconds, so it's about 75 times faster.</p>\n\n<p>That's where I'd stop, but if you decide to continue optimizing, make sure you refer frequently to the profiling and benchmarking results to make sure your changes are having an effect.</p>\n\n<p>I highly recommend Googling for \"profiling haskell programs\" and for the \"criterion\" library and taking some time to learn how to use these tools.</p>\n\n<p>For reference, the final program is:</p>\n\n<pre><code>import Criterion.Main\nimport qualified Data.Vector.Unboxed as U \nimport System.Random.Mersenne.Pure64\n\nnew :: Double-&gt; Double -&gt; Int -&gt; (Double, Int) -&gt; U.Vector Double\nnew skal r n (x0, seed) = U.unfoldrN n go (x0, g0)\n  where\n   g0 = pureMT (fromIntegral seed)\n   go (x0,g0)  = let (eps, g) = randomDouble g0\n                     x = r * x0 * (1-x0)\n                     noise = skal * eps\n                 in Just (x0 + noise, (x, g))\n\nvect1 :: (Double, Int) -&gt; U.Vector Double\nvect1 = new 0.5 1 10000\n\nmain = defaultMain [\n  bench \"vect1\" $ nf vect1 (0,1)\n  ]\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 7784908, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/280a16ff968b8d9982bf2406335f6821?s=128&d=identicon&r=PG&f=1", "display_name": "val", "link": "https://stackoverflow.com/users/7784908/val"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1532721330, "creation_date": 1532714657, "question_id": 51563306, "link": "https://stackoverflow.com/questions/51563306/haskell-efficiency-iterative-map-with-added-noise", "title": "Haskell: Efficiency iterative map with added noise", "body": "<p>I am wondering how to improve the time performance of the white noise addition to the logistic map? \nThe noise is only allowed to be added after calculating the values (as it is an iterative map.)</p>\n\n<pre><code> module Generating\n\nimport System.Random (Random,randomR,random,mkStdGen,StdGen)\nimport Data.Random.Normal (mkNormals,normal)\nimport qualified Data.Vector.Unboxed as U \nimport Control.Monad.State\n\ngenR :: (Random a, Fractional a) =&gt; Int -&gt; (a, StdGen)\ngenR x = randomR (0,1.0) (mkStdGen x)\n\n\nnew ::Double-&gt; Double -&gt;Int -&gt; (Double,Int) -&gt; U.Vector (Double,Int)\nnew skal r n = U.unfoldrN n go\n  where  \n   go (x0,g0)  = let  !eins= (1.0-x0)\n                      !x=x0 `seq` eins `seq` r*x0*eins\n                      !g=g0+1\n                      !noise= skal*(fst $ genR g)\n             in Just ((x0+noise,g0),(x,g))\n\nfs :: (t, t1) -&gt; t\nfs (x,y)=x\n\nfirst :: U.Vector (Double,Int)-&gt;U.Vector Double\nfirst  =U.map (\\(x,y)-&gt;x)  \n</code></pre>\n\n<p>As you can see, I actually only want the first value of the tuple, but the generator needs to be updated.</p>\n\n<p>Any suggestions? Maybe State Monads?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 4, "creation_date": 1532709137, "post_id": 51560542, "comment_id": 90090994, "body": "Just so you know, &quot;new to Haskell&quot; and &quot;trying to use the <code>ad</code> package&quot; together suggest that you&#39;re quite ambitious! What is the intended type of <code>impEuler</code>? Style point: it&#39;s pretty strange for a function to return a pair one of whose components is an argument to the function; normally you&#39;d return just the new information and let the caller pack it up as needed."}, {"owner": {"reputation": 53, "user_id": 10144898, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-cIJEaz1lYBY/AAAAAAAAAAI/AAAAAAAAABI/a2q1JtpIxZY/photo.jpg?sz=128", "display_name": "dkli", "link": "https://stackoverflow.com/users/10144898/dkli"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1532728487, "post_id": 51560542, "comment_id": 90098826, "body": "I see, good to know that this is acutally an advanced topic ^^ I got the idea for the type of impEuler from <a href=\"https://www.johndcook.com/blog/2016/06/02/ode-solver-as-a-functional-fold/\" rel=\"nofollow noreferrer\">this blog</a>, the idea being that one can perform the ode integration using <code>scanl (impEulerSystem odeSystem) ((head etaValues) ,initialConditions) (tail etaValues) </code>"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1532710959, "post_id": 51562268, "comment_id": 90091828, "body": "If you remove the type signature for <code>fDisc</code>, lift it out, or enable <code>ScopedTypeVariables</code>, you can give <code>impEuler</code> the more general type <code>(Real p, Real q, Fractional q) =&gt; ((p, Forward q) -&gt; Forward q) -&gt; (p, q) -&gt; p -&gt; q</code>."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 3, "last_activity_date": 1532709812, "creation_date": 1532709812, "answer_id": 51562268, "question_id": 51560542, "link": "https://stackoverflow.com/questions/51560542/haskell-ad-module-difficulties-with-mode-typeclass/51562268#51562268", "title": "haskell AD module: difficulties with Mode typeclass", "body": "<p>The crucial thing is, <code>fDisc</code> must be able to support the automatic differentiation. I.e. it must have a type like <code>Forward Double -&gt; Forward Double</code>. However, in</p>\n\n<pre><code>   fDisc yUnknown = yUnknown - y + (newx - x) * (f (x,yUnknown))\n</code></pre>\n\n<p>you have the values <code>y</code>, <code>x</code> and <code>newx</code>, and these are plain concrete-numbers, probably <code>Double</code>. Haskell never converts / promotes types implicitly, so with that you demand that <code>fDisc :: Double -&gt; Double</code>, which means <code>newton</code> can't work with it.</p>\n\n<p>Solution: allow explicit promotion of these values. A standard way to do that is <code>realToFrac</code>.</p>\n\n<pre><code>impEuler :: (Double -&gt; Forward Double -&gt; Forward Double) -&gt; (Double,Double) -&gt; Double\nimpEuler f (x, y) newx = newy\n where newy = newton fDisc y 1e-3\n       fDisc :: Forward Double -&gt; Forward Double\n       fDisc yUnknown = yUnknown - realToFrac y + realToFrac (newx - x) * f x yUnknown\n</code></pre>\n\n<p>Note that I had to curry the function <code>f</code>, so it takes the time argument separately, as a constant, before the solution variable.</p>\n"}], "owner": {"reputation": 53, "user_id": 10144898, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-cIJEaz1lYBY/AAAAAAAAAAI/AAAAAAAAABI/a2q1JtpIxZY/photo.jpg?sz=128", "display_name": "dkli", "link": "https://stackoverflow.com/users/10144898/dkli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 2, "accepted_answer_id": 51562268, "answer_count": 1, "score": 5, "last_activity_date": 1532778598, "creation_date": 1532703153, "last_edit_date": 1532778598, "question_id": 51560542, "link": "https://stackoverflow.com/questions/51560542/haskell-ad-module-difficulties-with-mode-typeclass", "title": "haskell AD module: difficulties with Mode typeclass", "body": "<p>I am new to Haskell and having a hard time understanding how to get my program using the automatic differentiation module AD to typecheck.</p>\n\n<p>My goal is to implement an implicit Euler ODE solver which makes use of newton's method to numerically solve the discretized equation. (I am trying to generalize this to systems of ODEs, but for my question it is sufficient to consider the case of only one ODE)</p>\n\n<p>I have implemented the newton method as follows:</p>\n\n<pre><code>import Numeric.AD\nimport Numeric.AD.Rank1.Forward (Forward, diff')\n\nnewton :: (Fractional a, Eq a, Ord a) =&gt; (Forward a -&gt; Forward a) -&gt; a -&gt; a -&gt; a\nnewton equation guess tolerance\n    | abs (equation (auto guess)) &lt; auto tolerance = guess\n    | otherwise = newton equation newGuess tolerance\n    where\n        newGuess = guess - correction\n        (y,y') = diff' equation guess\n        correction = y/y'\n</code></pre>\n\n<p>This function works, in the sense that I can use it in something like </p>\n\n<pre><code>mySqrtOfTwo = newton (\\(x) -&gt; x^2 - 2) 1 0.001\n</code></pre>\n\n<p>However, if I try to use it in another function, such as </p>\n\n<pre><code>impEuler f (x, y) newx = (newx, newy) \n    where\n        newy = newton fDisc y 1e-3\n        fDisc yUnknown = yUnknown - y + (newx - x) * (f (x,yUnknown))\n</code></pre>\n\n<p>I get the error </p>\n\n<pre><code>\u2022 Occurs check: cannot construct the infinite type: b ~ Forward b\n\u2022 In the second argument of \u2018newton\u2019, namely \u2018y\u2019\n      In the expression: newton fDisc y 1e-3\n      In an equation for \u2018newy\u2019: newy = newton fDisc y 1e-3\n</code></pre>\n\n<p>I think I understand why this error appears, but I do not understand why it only occurs when the <code>newton</code> function is used in another function and not when it is called directly. Moreover, I am wondering what the proper way to deal with this is. </p>\n\n<p>I have thought about implementing the function <code>newton</code> slightly differently, in such a way that it has the type </p>\n\n<pre><code>newton :: (Fractional a, Eq a, Ord a) =&gt; (a -&gt; a) -&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>but I do not know how to do this and if this is even good style. </p>\n\n<p>To simplify the question: I know that I can use <code>auto</code> to go from <code>a</code> to <code>Forward a</code>, but I don't know how to go the other way and if this is even possible.</p>\n\n<p>EDIT: as @leftroundabout suggested, I implemented the function as follows:</p>\n\n<pre><code>impEuler :: (Double -&gt; Forward Double -&gt; Forward Double) -&gt; (Double,Double) -&gt; Double -&gt; Double\nimpEuler f (x, y) newx = newy\nwhere newy = newton fDisc y 1e-3\n      fDisc :: Forward Double -&gt; Forward Double\n      fDisc yUnknown = yUnknown - realToFrac y - realToFrac (newx - x) * f x yUnknown\n</code></pre>\n\n<p>This requires the ode passed to impEuler to also have the type <code>(Double -&gt; Forward Double -&gt; Forward Double)</code>, which I wanted avoid because I might decide to solve the ode with an explicit method (which does not require newton's method). Therefore, I added the function </p>\n\n<pre><code>odePromoter :: (Double -&gt; Double -&gt; Double) -&gt; (Double -&gt; Forward Double -&gt; Forward Double)\nodePromoter ode x y = realToFrac (ode x (realToFrac y))\n</code></pre>\n\n<p>in order to turn an ode of type (Double -> Double -> Double) into one of type (Double -> Forward Double -> Forward Double). </p>\n"}, {"tags": ["haskell", "nix", "nixos"], "comments": [{"owner": {"reputation": 635, "user_id": 860338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782e20b78bb80f4207cbea38f88c922a?s=128&d=identicon&r=PG", "display_name": "ImAlsoGreg", "link": "https://stackoverflow.com/users/860338/imalsogreg"}, "edited": false, "score": 1, "creation_date": 1532737428, "post_id": 51558875, "comment_id": 90100611, "body": "Your <code>default.nix</code> is using the <code>project</code> attribute from <code>reflex-platform</code>. As it happens, <code>reflex-platform</code> supplies its own preferred version of <code>nixpkgs</code>, since it relies on some patches that aren&#39;t available yet upstream.  What you can do for heist is to jailbreak it (artificially strip the version bounds) in <code>default.nix</code>. This can be a good stopgap while waiting for the proper updates to get upstream:  ``` ... packages = {   common = ./common;   heist = pkgs.haskell.lib.doJailbreak pkgs.heist;   backend = ./backend; ... ```"}, {"owner": {"reputation": 521, "user_id": 7126380, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10207438513426512/picture?type=large", "display_name": "Johnny Liao", "link": "https://stackoverflow.com/users/7126380/johnny-liao"}, "reply_to_user": {"reputation": 635, "user_id": 860338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782e20b78bb80f4207cbea38f88c922a?s=128&d=identicon&r=PG", "display_name": "ImAlsoGreg", "link": "https://stackoverflow.com/users/860338/imalsogreg"}, "edited": false, "score": 0, "creation_date": 1532739742, "post_id": 51558875, "comment_id": 90100901, "body": "@ImAlsoGreg Thx again! Now I add this line. And after I add back servant-snap or snap, nix-shell tells me <code>attribute &#39;heist&#39; missing</code>. I don&#39;t know where to start. Do you happen to know where to look at this issue?"}, {"owner": {"reputation": 521, "user_id": 7126380, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10207438513426512/picture?type=large", "display_name": "Johnny Liao", "link": "https://stackoverflow.com/users/7126380/johnny-liao"}, "reply_to_user": {"reputation": 635, "user_id": 860338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782e20b78bb80f4207cbea38f88c922a?s=128&d=identicon&r=PG", "display_name": "ImAlsoGreg", "link": "https://stackoverflow.com/users/860338/imalsogreg"}, "edited": false, "score": 0, "creation_date": 1532741828, "post_id": 51558875, "comment_id": 90101166, "body": "ok, I just need to change pkgs.heist to pkgs.haskellPackages.heist and get the attribute. Now it is compiling. Thx! Plz let me give credit to your &quot;doJailbreak&quot; answer in this common &quot;version conflict&quot; problem."}, {"owner": {"reputation": 521, "user_id": 7126380, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10207438513426512/picture?type=large", "display_name": "Johnny Liao", "link": "https://stackoverflow.com/users/7126380/johnny-liao"}, "reply_to_user": {"reputation": 635, "user_id": 860338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782e20b78bb80f4207cbea38f88c922a?s=128&d=identicon&r=PG", "display_name": "ImAlsoGreg", "link": "https://stackoverflow.com/users/860338/imalsogreg"}, "edited": false, "score": 0, "creation_date": 1532742035, "post_id": 51558875, "comment_id": 90101189, "body": "Oh, no.. now it&#39;s ... <code>building &#39;&#47;nix&#47;store&#47;04s6cca0b5q00n0qqp8h1kwzqrbiz1f5-cabal2nix-heist&zwnj;&#8203;.drv&#39;... installing *** found zero or more than one cabal file ([]). Exiting. builder for &#39;&#47;nix&#47;store&#47;04s6cca0b5q00n0qqp8h1kwzqrbiz1f5-cabal2nix-heist&zwnj;&#8203;.drv&#39; failed with exit code 1 error: build of &#39;&#47;nix&#47;store&#47;04s6cca0b5q00n0qqp8h1kwzqrbiz1f5-cabal2nix-heist&zwnj;&#8203;.drv&#39; failed (use &#39;--show-trace&#39; to show detailed location information)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 521, "user_id": 7126380, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10207438513426512/picture?type=large", "display_name": "Johnny Liao", "link": "https://stackoverflow.com/users/7126380/johnny-liao"}, "is_accepted": false, "score": 2, "last_activity_date": 1532753858, "creation_date": 1532753858, "answer_id": 51568193, "question_id": 51558875, "link": "https://stackoverflow.com/questions/51558875/nix-env-and-nix-shell-have-different-versions-of-snap/51568193#51568193", "title": "nix-env and nix-shell have different versions of snap", "body": "<p>Got an answer from elvishjerricco on IRC #nixos.</p>\n\n<blockquote>\n  <p>To <code>doJailbreak</code> heist, you'd use the <code>overrides</code> argument to\n  <code>project</code></p>\n  \n  <p><code>packages</code> is for just declaring directories that you want to turn\n  into haskell packages; it'll run cabal2nix for you. <code>overrides</code> is for\n  doing derivation changes to the haskell package set.</p>\n</blockquote>\n\n<h1>default.nix</h1>\n\n<pre><code>(import ./reflex-platform {}).project ({ pkgs, ... }: {\n\n  overrides = self: super: {\n   heist = pkgs.haskell.lib.doJailbreak super.heist;\n   map-syntax = pkgs.haskell.lib.doJailbreak super.map-syntax;\n  };\n\n  packages = {\n    common = ./common;\n    backend = ./backend;\n    frontend = ./frontend;\n    google-maps-reflex = ./google-maps-reflex;\n  };\n\n  shells = {\n    ghc = [\"common\" \"backend\" \"frontend\" \"heist\"]; # \"backend\" \"frontend\"];\n    ghcjs = [\"common\" \"frontend\"];\n  };\n})\n</code></pre>\n"}], "owner": {"reputation": 521, "user_id": 7126380, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10207438513426512/picture?type=large", "display_name": "Johnny Liao", "link": "https://stackoverflow.com/users/7126380/johnny-liao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1532753858, "creation_date": 1532697677, "last_edit_date": 1532700947, "question_id": 51558875, "link": "https://stackoverflow.com/questions/51558875/nix-env-and-nix-shell-have-different-versions-of-snap", "title": "nix-env and nix-shell have different versions of snap", "body": "<p>I was following directions on <a href=\"https://github.com/reflex-frp/reflex-platform/blob/develop/docs/project-development.md\" rel=\"nofollow noreferrer\">reflex-platfrom project development</a>,trying to test <a href=\"https://github.com/imalsogreg/servant-reflex\" rel=\"nofollow noreferrer\">servant-reflex</a> as a submodule.</p>\n\n<p><a href=\"https://github.com/YuMingLiao/haskell_code\" rel=\"nofollow noreferrer\">My project</a> is here.</p>\n\n<p>In my <code>backend.cabal</code>, I have a built-depend:\n <code>snap &gt;= 1.1.1.0 &amp;&amp; &lt; 1.2</code></p>\n\n<p>When I <code>nix-shell -A shells.ghc --run \"cabal new-build all\"</code>, it tries to install heist-1.0.1.0 and snap-1.0.0.2, then failed at</p>\n\n<pre><code>Configuring heist-1.0.1.0...\nSetup: Encountered missing dependencies:\naeson &gt;=0.6 &amp;&amp; &lt;1.2\n</code></pre>\n\n<p>To see what in my nixos-unstable, I:</p>\n\n<pre><code>`nix-channel --list`\nnixos https://nixos.org/channels/nixos-unstable\n\n`nix-env -f \"&lt;nixpkgs&gt;\" -qaP -A haskellPackages.aeson`\nwarning: Nix search path entry '/home/demo/.nix-defexpr/channels' does not exist, ignoring\nhaskellPackages.aeson  aeson-1.2.4.0\n\n`nix-env -f \"&lt;nixpkgs&gt;\" -qaP -A haskellPackages.snap`\nwarning: Nix search path entry '/home/demo/.nix-defexpr/channels' does not exist, ignoring\nhaskellPackages.snap  snap-1.1.0.0\n\n`nix-env -f \"&lt;nixpkgs&gt;\" -qaP -A haskellPackages.heist`\nwarning: Nix search path entry '/home/demo/.nix-defexpr/channels' does not exist, ignoring\nhaskellPackages.heist  heist-1.0.1.2\n</code></pre>\n\n<p>Q: Why does nix-shell install heist-1.0.1.0 and snap-1.0.0.2, instead of heist-1.0.1.2 and snap-1.1.0.0, which then can dependent on aeson-1.2.4.0?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 3, "creation_date": 1532713825, "post_id": 51550731, "comment_id": 90093098, "body": "This is strictly a result of different versions of ghc. Newer versions of ghc use a version of base that makes Semigroup a superclass of Monoid."}], "answers": [{"tags": [], "owner": {"reputation": 35, "user_id": 9616002, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "madmonk", "link": "https://stackoverflow.com/users/9616002/madmonk"}, "is_accepted": false, "score": 1, "last_activity_date": 1532720831, "creation_date": 1532720831, "answer_id": 51564629, "question_id": 51550731, "link": "https://stackoverflow.com/questions/51550731/haskell-stack-wont-install-dates/51564629#51564629", "title": "haskell stack won&#39;t install dates", "body": "<p>In the end I needed to change the resolver in the stack.yaml file to an older version (lts-8.24) which would enforce the use of ghc-8.0.2. Using </p>\n\n<p>stack --resolver ghc-8.0.2 setup/build </p>\n\n<p>did not prevent stack from using the latest ghc version when I did </p>\n\n<p>stack exec blah-exe</p>\n\n<p>which raised the conflict. </p>\n"}], "owner": {"reputation": 35, "user_id": 9616002, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "madmonk", "link": "https://stackoverflow.com/users/9616002/madmonk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1532721279, "creation_date": 1532665306, "last_edit_date": 1532721279, "question_id": 51550731, "link": "https://stackoverflow.com/questions/51550731/haskell-stack-wont-install-dates", "title": "haskell stack won&#39;t install dates", "body": "<p>In a standalone module I'm using the dates package <a href=\"http://hackage.haskell.org/package/dates\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/dates</a> installed via cabal and it works fine. But a problem emerges when I try to make a small package out of this module using stack. The dates package is appropriately listed in dependencies and all but it doesn't work. When I try to manually install the package using stack in the project sandbox, I get the below error. Meanwhile I can install this package with cabal outside the stack sandbox without issues. </p>\n\n<p>VERSIONS IN THE SANDBOX:\nghc-8.4.3\nstack-1.7.1</p>\n\n<p>SYSTEM VERSIONS:\nghc-8.0.2\ncabal-1.24.0.2 (compiled 1.24.2.0)</p>\n\n<p>error message:</p>\n\n<pre><code>Configuring dates-0.2.2.1...\nPreprocessing library for dates-0.2.2.1..\nBuilding library for dates-0.2.2.1..\n[1 of 4] Compiling Data.Dates.Internal ( Data/Dates/Internal.hs, .stack-work/dist/x86_64-linux/Cabal-2.2.0.1/build/Data/Dates/Internal.o )\n[2 of 4] Compiling Data.Dates.Types ( Data/Dates/Types.hs, .stack-work/dist/x86_64-linux/Cabal-2.2.0.1/build/Data/Dates/Types.o )\n\n/tmp/stack16211/dates-0.2.2.1/Data/Dates/Types.hs:62:10: error:\n    \u2022 No instance for (Semigroup DateTime)\n        arising from the superclasses of an instance declaration\n    \u2022 In the instance declaration for \u2018Monoid DateTime\u2019\n   |\n62 | instance Monoid DateTime where\n   |          ^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["parsing", "haskell", "if-statement"], "comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 3, "creation_date": 1532649448, "post_id": 51548966, "comment_id": 90065546, "body": "Your <code>let</code> syntax looks off. You need an <code>in</code> in there don&#39;t you?"}, {"owner": {"reputation": 13, "user_id": 2333853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f706c03e4f4582bf6ae4626101de1932?s=128&d=identicon&r=PG", "display_name": "Gordon Hawkes", "link": "https://stackoverflow.com/users/2333853/gordon-hawkes"}, "reply_to_user": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1532649703, "post_id": 51548966, "comment_id": 90065624, "body": "Hi there, cheers for quick reply, I have no idea on this! what does that do?"}, {"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 1, "creation_date": 1532650247, "post_id": 51548966, "comment_id": 90065751, "body": "<a href=\"https://wiki.haskell.org/Let_vs._Where\" rel=\"nofollow noreferrer\">This</a> would be a good read over."}, {"owner": {"reputation": 13, "user_id": 2333853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f706c03e4f4582bf6ae4626101de1932?s=128&d=identicon&r=PG", "display_name": "Gordon Hawkes", "link": "https://stackoverflow.com/users/2333853/gordon-hawkes"}, "reply_to_user": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1532651662, "post_id": 51548966, "comment_id": 90066010, "body": "Thanks for that again, implemented the series of in then else statements (see latest code segment), must be almost sorted as no parse errors but get &quot;couldn&#39;t match expected type Sale -&gt; Bool with actual type &quot;Bool&quot;, error occurs at &quot;True&quot;. Is this simple to fix from here? im far too tired to work anything else out!"}, {"owner": {"reputation": 13, "user_id": 2333853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f706c03e4f4582bf6ae4626101de1932?s=128&d=identicon&r=PG", "display_name": "Gordon Hawkes", "link": "https://stackoverflow.com/users/2333853/gordon-hawkes"}, "reply_to_user": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1532652187, "post_id": 51548966, "comment_id": 90066094, "body": "Saying &quot;wrong type from what expected in second argument of ==&quot; I don&#39;t understand that, its not an argument is it?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 5, "creation_date": 1532663357, "post_id": 51548966, "comment_id": 90068258, "body": "<code>addNewTrack</code> doesn&#39;t do anything except return its first argument. <code>incrExistingTrack</code> doesn&#39;t do anything except return an empty list, because the first definition consists solely of irrefutable patterns, so it will <i>always</i> match any arguments."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1532681878, "post_id": 51548966, "comment_id": 90075571, "body": "Your <code>database</code> is a list of <code>Sale</code>s?"}, {"owner": {"reputation": 13, "user_id": 2333853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f706c03e4f4582bf6ae4626101de1932?s=128&d=identicon&r=PG", "display_name": "Gordon Hawkes", "link": "https://stackoverflow.com/users/2333853/gordon-hawkes"}, "edited": false, "score": 0, "creation_date": 1532689858, "post_id": 51548966, "comment_id": 90080061, "body": "yes, thats absolutely correct."}, {"owner": {"reputation": 13, "user_id": 2333853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f706c03e4f4582bf6ae4626101de1932?s=128&d=identicon&r=PG", "display_name": "Gordon Hawkes", "link": "https://stackoverflow.com/users/2333853/gordon-hawkes"}, "edited": false, "score": 0, "creation_date": 1532689945, "post_id": 51548966, "comment_id": 90080113, "body": "When compiling I am also getting told my pattern match is &quot;redundant&quot; in incrExistingTrack, no idea why or how to fix that?"}, {"owner": {"reputation": 13, "user_id": 2333853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f706c03e4f4582bf6ae4626101de1932?s=128&d=identicon&r=PG", "display_name": "Gordon Hawkes", "link": "https://stackoverflow.com/users/2333853/gordon-hawkes"}, "edited": false, "score": 0, "creation_date": 1532705615, "post_id": 51548966, "comment_id": 90089217, "body": "Thanks for help to all of you who contributed, made the proposed changes and something compiles, but was unable to prove this functionality all worked. I couldn&#39;t work out how to output the updated list from addNewTrack rather than simply the same as the first argument, it must be a very simple fix though..."}], "answers": [{"tags": [], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "is_accepted": true, "score": 0, "last_activity_date": 1532654920, "creation_date": 1532654920, "answer_id": 51549580, "question_id": 51548966, "link": "https://stackoverflow.com/questions/51548966/parse-error-on-if-statement-in-haskell/51549580#51549580", "title": "Parse Error on if statement in Haskell", "body": "<p>You fed <code>sameTrack</code> too few arguments. It should be <code>sameTrack testDatabase title artist</code>.</p>\n\n<p>Also note that <code>trackExists == True</code> is verbose. It can be just <code>trackExists</code>.</p>\n"}], "owner": {"reputation": 13, "user_id": 2333853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f706c03e4f4582bf6ae4626101de1932?s=128&d=identicon&r=PG", "display_name": "Gordon Hawkes", "link": "https://stackoverflow.com/users/2333853/gordon-hawkes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "accepted_answer_id": 51549580, "answer_count": 1, "score": 0, "last_activity_date": 1532682632, "creation_date": 1532649199, "last_edit_date": 1532674020, "question_id": 51548966, "link": "https://stackoverflow.com/questions/51548966/parse-error-on-if-statement-in-haskell", "title": "Parse Error on if statement in Haskell", "body": "<p>This is for an academic assignment and I simply cannot fix it.</p>\n\n<p>I have a list (database) of \"tracks\" (of music records) - tuples of (Title, Artist, SalesNumber) and my task is to increment a sale of a given track if it is already present in the database (same title and artist) and just increment by 1 to sales number, or if is not already present, to add it to the database. I have written - I think correctly - functions to perform either of these tasks however am struggling to write the function which determines whether adding a new record or simply incrementing it and to call either.</p>\n\n<pre><code>addNewTrack :: [Sale] -&gt; Title -&gt; Artist -&gt; [Sale]\naddNewTrack testDatabase title artist = testDatabase\n\nincrExistingTrack :: [Sale] -&gt; Title -&gt; Artist -&gt; [Sale]\nincrExistingTrack testDatabase testedTitle testedArtist = []\nincrExistingTrack ((title, artist, salesNumber): xs) testedTitle    testedArtist\n | testedTitle == title &amp;&amp; testedArtist == artist =\n [(title, artist, salesNumber + 1)]\n | otherwise = incrExistingTrack xs title artist\n\nrecordSale :: [Sale] -&gt; Title -&gt; Artist -&gt; [Sale]\nrecordSale testDatabase title artist\nlet trackExists = sameTrack title artist\nif trackExists == True\n then incrExistingTrack title artist\n else addNewTrack title artist\n\nsameTrack :: Title -&gt; Artist -&gt; Sale -&gt; Bool\nsameTrack queriedTitle queriedArtist (title, artist, salesNumber)\n | (queriedTitle == title) &amp;&amp; (queriedArtist == artist) = True\n | otherwise = False\n</code></pre>\n\n<p>What is wrong with the if statement in my recordSale function to give \"parse error (possibly incorrect indentation or mismatched brackets)\" on the first character of the fourth line of the function?</p>\n\n<pre><code>recordSale :: [Sale] -&gt; Title -&gt; Artist -&gt; [Sale]\nrecordSale testDatabase title artist\nlet trackExists = sameTrack title artist\nif trackExists == True\n  then incrExistingTrack title artist\n  else addNewTrack title artist\n</code></pre>\n\n<p>I have been shifting things around and changing indents to no avail. I am sure it must be a very simple error. How can I identify the problem? Is there an alternative and possibly more elegant implementation of what I'm trying to do?</p>\n\n<pre><code>recordSale :: [Sale] -&gt; Title -&gt; Artist -&gt; [Sale]\nrecordSale testDatabase title artist\n  = let trackExists = sameTrack title artist\n    in if trackExists == True\n        then incrExistingTrack testDatabase title artist\n        else addNewTrack testDatabase title artist\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1532648925, "post_id": 51548887, "comment_id": 90065454, "body": "What should be the result of <code>compare (WrappedTwo Red) (WrappedTwo Green)</code>?"}, {"owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532649199, "post_id": 51548887, "comment_id": 90065501, "body": "i suppose it should be <code>EQ</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1532649267, "post_id": 51548887, "comment_id": 90065510, "body": "I think you should use something other than <code>Ord</code>. Although it is not technically a law, I (and many others) think that <code>x == y</code> should imply <code>f x == f y</code> for all <code>f</code>, a law which your proposed instance would surely break. If you keep the derived <code>Eq</code> instance, your proposal would also violate my expectation that <code>x == y</code> iff <code>compare x y == EQ</code>."}, {"owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532649362, "post_id": 51548887, "comment_id": 90065528, "body": "How? <code>Red == Red</code> and <code>WrappedTwo Red == WrappedTwo Red</code>. Same is true for <code>One == One</code> and <code>WrappedOne One == WrappedOne One</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532649409, "post_id": 51548887, "comment_id": 90065538, "body": "You&#39;re right: my original comment was not precise. I&#39;ve updated it."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532649493, "post_id": 51548887, "comment_id": 90065562, "body": "But, to say how: since you want <code>WrappedTwo Red == WrappedTwo Green</code> (if you accept that <code>EQ</code> and <code>(==)</code> should coincide), then a suitable choice of <code>f</code> which shows the problem would be <code>f (WrappedTwo Red) = False; f (WrappedTwo Green) = True</code>."}, {"owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1532649583, "post_id": 51548887, "comment_id": 90065588, "body": "I see. The thing is, <code>WrappedOne</code> and <code>WrappedTwo</code> are comparable. It just so happens that when they wrap other types, the types they wrap are no longer relevant. So they are ordinal at the top level, just not at the level of their subtypes."}], "answers": [{"comments": [{"owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "edited": false, "score": 0, "creation_date": 1532651177, "post_id": 51549038, "comment_id": 90065933, "body": "this doesnt completely fit my usecase, as <code>WrappedOne</code> and <code>WrappedTwo</code> are just two of many such types. It would be equally cumbersome to write a <code>constructor</code> function for each type as it would be to write an instance of <code>Ord</code>.  Also, to address the comment above, it is totally possible that <code>f (WrappedTwo Red) &#47;= f (WrappedTwo Green)</code>. There is plenty of precedence for this in real life. While red and green are not equivalent, a box wrapped in red is functionally equivalent to the same box wrapped in green."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1532649902, "creation_date": 1532649902, "answer_id": 51549038, "question_id": 51548887, "link": "https://stackoverflow.com/questions/51548887/defining-an-ordinal-type-whose-enumerated-subtypes-are-not-ordinal/51549038#51549038", "title": "Defining an Ordinal type whose enumerated subtypes are not ordinal", "body": "<p>I suggest that you don't do this, for the reasons I discussed in the comments: your <code>Ord</code> instance and <code>Eq</code> instance should agree, and your <code>Eq</code> instance should only equate things that behave the same. Instead, have a view of your data which only has the information you care to compare. So:</p>\n\n<pre><code>data Constructor = Lower | Higher deriving (Eq, Ord, Read, Show)\ndata Wrapper = WrappedOne Foo | WrappedTwo Bar deriving (Read, Show)\n\nconstructor :: Wrapper -&gt; Constructor\nconstructor (WrappedOne _) = Lower\nconstructor (WrappedTwo _) = Higher\n</code></pre>\n\n<p>Now, where you would have called <code>compare wrapperA wrapperB</code>, instead call <code>compare (constructor wrapperA) (constructor wrapperB)</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 3, "last_activity_date": 1532720047, "last_edit_date": 1532720047, "creation_date": 1532684198, "answer_id": 51555049, "question_id": 51548887, "link": "https://stackoverflow.com/questions/51548887/defining-an-ordinal-type-whose-enumerated-subtypes-are-not-ordinal/51555049#51555049", "title": "Defining an Ordinal type whose enumerated subtypes are not ordinal", "body": "<p>Not 100% clear on what you want; I guess you want all values constructed with <code>WrappedTwo</code> to be considered equivalent?</p>\n\n<pre><code>newtype ForgetOrder a = ForgetOrder a\n\ninstance Eq (ForgetOrder a) where\n    _ == _ = True\n\ninstance Ord (ForgetOrder a) where\n    compare _ _ = EQ\n</code></pre>\n\n<p>Then you can define your type as:</p>\n\n<pre><code>data WrapperType = WrappedOne OrderedType\n                 | WrappedTwo (ForgetOrder UnorderedType) deriving (Eq, Ord, Show)\n</code></pre>\n\n<p>Yes it is a bit cumbersome to have to wrap and unwrap the newtype, and also cumbersome to write pattern synonyms to avoid it.  C'est la vie.</p>\n\n<p>However, I'm worried that you want <code>WrappedTwo Red /= WrappedTwo Green</code> as well.   At which point I'm going to have to jump on the bandwagon with Mr. Wagner and say, whatever path of thought you are traversing that requires this, turn back and find another way.  One of the great pleasures of Haskell is that people <em>care about laws</em> [1].  You will find that there are very few libraries on Hackage which define law-breaking instances.  And for good reason: for example, <code>Data.Set</code> expects <code>Ord</code> to define a total order and be compatible with <code>Eq</code>.  A type with a law-breaking <code>Ord</code> makes a <code>Set</code> of that type completely nonsensical and broken.  But I confidently put all kinds of things in <code>Set</code>s without a worry in the world, because lawfulness is so ubiquitous in Haskell culture.</p>\n\n<p>But if you're not thinking that... good.  Sorry for being preachy.</p>\n\n<hr>\n\n<p>[1] I was quite embarrassed to find that the expected laws are not <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Ord.html#t:Ord\" rel=\"nofollow noreferrer\">documented with the <code>Ord</code> class</a>.  Anyway my conventional understanding of these laws is as follows:</p>\n\n<ol>\n<li><p><strong>Equivalence of notation:</strong></p>\n\n<pre><code>x &lt; y   =  compare x y == LT\nx &gt; y   =  compare x y == GT\nx == y  =  compare x y == EQ\nx &lt;= y  =  x &lt; y || x == y\nx &gt;= y  =  x &gt; y || x == y\n</code></pre></li>\n<li><p><strong><code>==</code> is an equivalence relation:</strong></p>\n\n<pre><code>x == x\nIf x == y then y == x\nIf x == y and y == z then x == z\n</code></pre></li>\n<li><p><strong><code>==</code> extensionality</strong>  <em>(this one seems to be a bit looser than the others; for example the documentation for <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-List.html#v:sort\" rel=\"nofollow noreferrer\"><code>sort</code></a> presupposes that <code>==</code> may not be extensional):</em></p>\n\n<pre><code>if x == y, then f x == f y\n</code></pre>\n\n<p><em>(For f's which are definable from outside a given abstraction\nboundary; IOW different representations of the same value are\nallowed as long as the user cannot tell them apart.)</em></p></li>\n<li><p><strong>Totality of <code>&lt;</code>:</strong></p>\n\n<pre><code>If x &lt;= y  and  y &lt;= z  then x &lt;= z\n</code></pre>\n\n<p><em>(Trichotomy follows from \"equivalence of notation\" with compare)</em></p></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 0, "last_activity_date": 1532698067, "creation_date": 1532698067, "answer_id": 51559011, "question_id": 51548887, "link": "https://stackoverflow.com/questions/51548887/defining-an-ordinal-type-whose-enumerated-subtypes-are-not-ordinal/51559011#51559011", "title": "Defining an Ordinal type whose enumerated subtypes are not ordinal", "body": "<p>As an alternative approach, if you are only interested in comparisons at the constructor level and don't need to lift the underlying <code>Ord</code> instance for the ordered component types, you can use <code>Data.Data</code> generics to order by constructor indexes:</p>\n\n<pre><code>{-# LANGUAGE DeriveDataTypeable #-}\nimport Data.Data\nimport Data.Ord\n\ndata OrderedType = One | Two | Three deriving (Eq, Ord, Show, Data)\ndata UnorderedType = Red | Blue | Green deriving (Eq, Show, Data)\n\ndata WrapperType = WrappedOne OrderedType\n                   | WrappedTwo UnorderedType deriving (Eq, Show, Data)\n\ncompareCon :: (Data a) =&gt; a -&gt; a -&gt; Ordering\ncompareCon = comparing (constrIndex' . toConstr)\n  where constrIndex' x = case constrRep x of\n          AlgConstr i -&gt; i\n          _           -&gt; 0\n</code></pre>\n\n<p>There's a <code>constrIndex</code> in the <code>Data.Data</code> module, but it throws an error when the type isn't algebraic, so the <code>constrIndex'</code> above is safer.</p>\n\n<p>Anyway, with these definitions, we get:</p>\n\n<pre><code>&gt; compareCon (WrappedOne One) (WrappedTwo Red)\nLT\n&gt; compareCon (WrappedOne One) (WrappedOne Two)\nEQ\n&gt; compareCon (WrappedTwo Blue) (WrappedTwo Green)\nEQ\n&gt; \n</code></pre>\n\n<p>This seems much safer than abusing <code>Ord</code>.</p>\n"}], "owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1532720047, "creation_date": 1532648434, "last_edit_date": 1532649229, "question_id": 51548887, "link": "https://stackoverflow.com/questions/51548887/defining-an-ordinal-type-whose-enumerated-subtypes-are-not-ordinal", "title": "Defining an Ordinal type whose enumerated subtypes are not ordinal", "body": "<p>I'm running into issues defining ordinal types whose values may or may not be ordinal.</p>\n\n<p>Basically I have two types, an <code>OrderedType</code> and an <code>UnorderedType</code></p>\n\n<pre><code>data OrderedType = One | Two | Three deriving (Eq, Ord, Show)\ndata UnorderedType = Red | Blue | Green deriving (Eq, Show)\n</code></pre>\n\n<p>I have a type whose value constructors take either as an argument:</p>\n\n<pre><code>data WrapperType = WrappedOne OrderedType\n                   | WrappedTwo UnorderedType deriving (Eq, Ord, Show)\n</code></pre>\n\n<p>Basically, what I want to be able to do is have <code>WrapperType</code>s be ordered without\nhaving to implement a <code>compare</code> function for <code>WrappedOne</code> and <code>WrappedTwo</code>.</p>\n\n<p>When I try to compile the above I get the following error:</p>\n\n<pre><code>\u2022 No instance for (Ord UnorderedType)\narising from the first field of \u2018WrappedTwo\u2019 (type \u2018UnorderedType\u2019)\nPossible fix:\nuse a standalone 'deriving instance' declaration,\n  so you can specify the instance context yourself\n\u2022 When deriving the instance for (Ord WrappedType)\n</code></pre>\n\n<p>Which makes sense, because the stock derived <code>Ord</code> instance of <code>WrappedType</code> will try\nto compare all values of <code>WrappedTwo</code>.</p>\n\n<p>In a nutshell, what I want to be able to do is this:</p>\n\n<pre><code>WrappedOne _ &lt; WrappedTwo _ -- True\n</code></pre>\n\n<p>But without writing an <code>Ord</code> instance for each type.</p>\n\n<p>How do I do this?</p>\n"}, {"tags": ["haskell"], "owner": {"reputation": 21, "user_id": 10141559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd71a5282d6093c0ebc1ae6bf15dbb61?s=128&d=identicon&r=PG&f=1", "display_name": "robinhood", "link": "https://stackoverflow.com/users/10141559/robinhood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "closed_date": 1532645060, "answer_count": 0, "score": 2, "last_activity_date": 1532645036, "creation_date": 1532644494, "last_edit_date": 1532645036, "question_id": 51548396, "link": "https://stackoverflow.com/questions/51548396/declaring-type-of-function-in-haskell-ghci", "closed_reason": "Duplicate", "title": "Declaring type of function in Haskell (GHCI)?", "body": "<p>hello there i am new to programming and i am studying haskell language through the book called Learn Yourself Haskell for Great Good. It is found online for free. Anyway there is this chapter called \"Types and typeclasses\". The writer encouraged reader to do an explicit type declaration for our own fucntion. He gave an example:-   </p>\n\n<pre><code>addThree :: Int -&gt; Int -&gt; Int -&gt; Int  \naddThree x y z = x + y + z  \n</code></pre>\n\n<p>so i typed the exact thing on my command  prompt(GHCI) but it shows error like this</p>\n\n<pre><code>  &lt; interactive &gt; :1:1: error:   \n  Variable not in scope:addThree :: Int -&gt; Int -&gt; Int -&gt;Int  \n</code></pre>\n\n<p>i even tried copying and paste but it still shwos error\nwhat is wrong and what i can do about it? thanks in advance!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1532626697, "post_id": 51544297, "comment_id": 90057054, "body": "You haven&#39;t actually asked a question, but even so it looks to me like you&#39;re looking for <a href=\"http://hackage.haskell.org/package/transformers-0.5.5.0/docs/Control-Monad-Trans-Maybe.html#v:MaybeT\" rel=\"nofollow noreferrer\"><code>MaybeT</code></a>, and more generally, monad transformers."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1532628808, "post_id": 51544297, "comment_id": 90058173, "body": "This would be clearer if you defined <code>myfn</code> to take two <code>Maybe</code> values as arguments, then indicated what the return values for <code>myfn Nothing Nothing</code>, <code>myfn (Just 3) Nothing</code>, <code>myfn Nothing (Just &quot;Hi&quot;)</code>, and <code>myfn (Just 3) (Just &quot;Hi&quot;)</code> should be."}, {"owner": {"reputation": 1987, "user_id": 76815, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/7098db4767250d01b2e2c66ef8ec9754?s=128&d=identicon&r=PG", "display_name": "Tony", "link": "https://stackoverflow.com/users/76815/tony"}, "edited": false, "score": 0, "creation_date": 1532630127, "post_id": 51544297, "comment_id": 90058727, "body": "@AJFarmer I&#39;ve edited my post to make the comment clearer. I was hoping for an example as I&#39;ve not had success."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1532632247, "post_id": 51544297, "comment_id": 90059660, "body": "So <code>myfn == Left &quot;No value for maybeV1&quot;</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": false, "score": 2, "last_activity_date": 1532780641, "last_edit_date": 1532780641, "creation_date": 1532631474, "answer_id": 51545814, "question_id": 51544297, "link": "https://stackoverflow.com/questions/51544297/bind-or-return-to-left-inside-a-fn-or-block-that-expects-either/51545814#51545814", "title": "Bind or return to Left inside a fn or block that expects Either", "body": "<ol>\n<li><p>Remember what <code>do</code> means and expand it:</p>\n\n<pre><code>myfn =\n  let maybe1 = Nothing :: Maybe Int\n      maybe2 = Just \"Hi\"\n  in\n  maybe (return $ Left \"x\") return maybe1\n  &gt;&gt;= \\v1 -&gt;\n  maybe (return $ Left \"y\") return maybe2\n  &gt;&gt;= \\v2 -&gt; return v1\n</code></pre></li>\n<li><p>Write down the types</p>\n\n<pre><code>maybe1 :: Maybe Int\nmaybe2 :: Maybe String\nmaybe :: a -&gt; (b -&gt; a) -&gt; Maybe b -&gt; a\nreturn :: Monad m =&gt; a -&gt; m a\nLeft :: a -&gt; Either a b\n&gt;&gt;= :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\nmyfn :: Either String Int\n</code></pre></li>\n<li><p>Recall that <code>Monad (Either a)</code>.</p></li>\n<li><p>Stare really hard</p></li>\n<li><p>Write down some more types</p>\n\n<pre><code>Left \"x\" :: Either String b\nreturn $ Left \"x\" :: Monad m =&gt; m (Either String b)\nmaybe (return $ Left \"x\") return maybe1 :: (Monad m, Monad n, n String ~ m (Either String b)) =&gt; m (Either String b)\n</code></pre>\n\n<p>Note that <code>x~y</code> means that <code>x</code> and <code>y</code> are the same type.</p></li>\n<li><p>Stare really hard</p></li>\n<li><p>Try some other types</p>\n\n<pre><code>Left \"x\" :: Either String b\nmaybe (Left \"x\") return maybe1 :: (Monad m, Either String b ~ m Int) =&gt; m Int\n-- but recall Monad (Either a) so Monad (Either String)\nmaybe (Left \"x\") return maybe1 :: Either String Int\n</code></pre></li>\n<li><p>Write down the answer (this is the easiest step so I\u2019ll leave it as an exercise)</p></li>\n</ol>\n"}], "owner": {"reputation": 1987, "user_id": 76815, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/7098db4767250d01b2e2c66ef8ec9754?s=128&d=identicon&r=PG", "display_name": "Tony", "link": "https://stackoverflow.com/users/76815/tony"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1532780641, "creation_date": 1532625366, "last_edit_date": 1532638661, "question_id": 51544297, "link": "https://stackoverflow.com/questions/51544297/bind-or-return-to-left-inside-a-fn-or-block-that-expects-either", "title": "Bind or return to Left inside a fn or block that expects Either", "body": "<p>Given this contrived example:</p>\n\n<pre><code>myfn :: Either Text Int\nmyfn = do\n  let maybeV1 :: Maybe Int  = Nothing\n  let maybeV2 :: Maybe Text = Just \"Hi\"\n  -- the next two lines are where I need help, want to terminate early\n  v1 :: Int &lt;- maybe (return $ Left \"No value for maybeV1\") return maybeV1\n  v2 :: Text &lt;- maybe (return $ Left \"No value for maybeV2\") return maybeV2\n  -- by this point, if either of the maybes were Nothing, we've \n  -- returned Left Text.\n  -- Otherwise, we have the Just values in v1 and v2\n</code></pre>\n\n<p>Edit: How can I bind the maybe values to v1/v2 or terminate early, setting the Left of the Either?</p>\n\n<p>Edit 2: I am aware that this contrived example could be handled with pattern matching, etc. The solution I am looking for is specifically how to accomplish with monad transformers?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 2, "creation_date": 1532628732, "post_id": 51544265, "comment_id": 90058133, "body": "Use <code>&quot;\\&quot;&quot; &lt;&gt; pgaName a &lt;&gt; &quot;\\&quot;&quot;</code>"}, {"owner": {"reputation": 4436, "user_id": 1571426, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/56bde89dc174e0413a987e044309f251?s=128&d=identicon&r=PG", "display_name": "user9645", "link": "https://stackoverflow.com/users/1571426/user9645"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1532629252, "post_id": 51544265, "comment_id": 90058335, "body": "@4castle - that works thanks, do you want to put it as an answer?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1532674732, "post_id": 51544265, "comment_id": 90071722, "body": "Aside from the bug, this code appears to be of rather low quality. Splicing strings together by hand is a terrible way to construct database queries! Haskell has several libraries available to do the job properly."}, {"owner": {"reputation": 4436, "user_id": 1571426, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/56bde89dc174e0413a987e044309f251?s=128&d=identicon&r=PG", "display_name": "user9645", "link": "https://stackoverflow.com/users/1571426/user9645"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1532688998, "post_id": 51544265, "comment_id": 90079576, "body": "@dfeuer - tell it to the author <a href=\"https://github.com/PostgREST/postgrest\" rel=\"nofollow noreferrer\">PostgREST</a>"}], "answers": [{"tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": true, "score": 3, "last_activity_date": 1532673870, "creation_date": 1532673870, "answer_id": 51552175, "question_id": 51544265, "link": "https://stackoverflow.com/questions/51544265/how-to-wrap-a-text-value-with-quotes-in-haskell/51552175#51552175", "title": "How to wrap a Text value with quotes in Haskell", "body": "<p>You faced the problem because <code>(++)</code> operates on lists (<code>[]</code>), and while <code>String</code>s are just <code>[Char]</code>, <code>Text</code> is not.</p>\n\n<p>Fortunately, there is generic append operator coming from <code>Monoid</code> class called <code>(&lt;&gt;)</code>. So, as @4castle said, just use <code>\"\\\"\" &lt;&gt; pgaName a &lt;&gt; \"\\\"\"</code> to concatenate <code>Text</code>s.</p>\n"}], "owner": {"reputation": 4436, "user_id": 1571426, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/56bde89dc174e0413a987e044309f251?s=128&d=identicon&r=PG", "display_name": "user9645", "link": "https://stackoverflow.com/users/1571426/user9645"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 51552175, "answer_count": 1, "score": 0, "last_activity_date": 1532673870, "creation_date": 1532625262, "question_id": 51544265, "link": "https://stackoverflow.com/questions/51544265/how-to-wrap-a-text-value-with-quotes-in-haskell", "title": "How to wrap a Text value with quotes in Haskell", "body": "<p>I have some broken Haskell code and have never even heard of Haskell before now.</p>\n\n<p>The code is generating a DB query string and is failing to properly quote the identifiers.</p>\n\n<p>So I simply want to put quotes around the identifiers.</p>\n\n<p>Here is the existing code:</p>\n\n<p>(this part in a separate file):</p>\n\n<pre><code>data PgArg = PgArg {\n  pgaName :: Text\n, pgaType :: Text\n, pgaReq  :: Bool\n} deriving (Show, Eq, Ord)\n</code></pre>\n\n<p>(then the broken part in another file):</p>\n\n<pre><code>    unwords [\n         \"_args_record AS (\",\n         \"SELECT * FROM \" &lt;&gt; (if isObject then \"json_to_record\" else \"json_to_recordset\") &lt;&gt; \"($1)\",\n         \"AS _(\" &lt;&gt; intercalate \", \" ((\\a -&gt; pgaName a &lt;&gt; \" \" &lt;&gt; pgaType a) &lt;$&gt; pgArgs) &lt;&gt; \")\",\n     \")\"]\n</code></pre>\n\n<p>I tried a few hacks, ultimately winding up with:</p>\n\n<pre><code>    unwords [\n         \"_args_record AS (\",\n         \"SELECT * FROM \" &lt;&gt; (if isObject then \"json_to_record\" else \"json_to_recordset\") &lt;&gt; \"($1)\",\n         \"AS _(\" &lt;&gt; intercalate \", \" ((\\a -&gt; ([\"\\\"\"] ++ (pgaName a) ++ [\"\\\"\"]) &lt;&gt; \" \" &lt;&gt; pgaType a) &lt;$&gt; pgArgs) &lt;&gt; \")\",\n     \")\"]\n</code></pre>\n\n<p>So basically I just changed:</p>\n\n<pre><code>pgaName a\n</code></pre>\n\n<p>To:</p>\n\n<pre><code>([\"\\\"\"] ++ (pgaName a) ++ [\"\\\"\"])\n</code></pre>\n\n<p>-- Anyway it fails with a type mismatch</p>\n\n<pre><code>error:\n    * Couldn't match expected type `[Char]' with actual type `Text'\n    * In the first argument of `(++)', namely `(pgaName a)'\n      In the second argument of `(++)', namely `(pgaName a) ++ [\"\\\"\"]'\n      In the first argument of `(&lt;&gt;)', namely\n        `([\"\\\"\"] ++ (pgaName a) ++ [\"\\\"\"])'\n</code></pre>\n\n<p>Any ideas how to fix this correctly?</p>\n"}, {"tags": ["javascript", "haskell", "rxjs", "observable"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 8, "creation_date": 1532620385, "post_id": 51542865, "comment_id": 90053584, "body": "I&#39;m pretty sure that <code>ScalarObservable</code> is just an optimisation specialisation for <code>Observable&lt;Number&gt;</code>. Notice that the law doesn&#39;t state the two sides need to return the exact same value, but just that they need to behave equally."}, {"owner": {"reputation": 383, "user_id": 4011917, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/1d5e31f8c447fa0413a66118ec21cda8?s=128&d=identicon&r=PG&f=1", "display_name": "Mateusz Wit", "link": "https://stackoverflow.com/users/4011917/mateusz-wit"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 2, "creation_date": 1532620889, "post_id": 51542865, "comment_id": 90053919, "body": "Thanks @Bergi, I was hoping on such an answer. In the end, in <a href=\"https://wiki.haskell.org/Monad_laws\" rel=\"nofollow noreferrer\">wiki.haskell.org/Monad_laws</a>, we can read that <i>&quot;Here, p \u2261 q simply means that you can replace p with q and vice-versa, and the behaviour of your program will not change: p and q are equivalent.&quot;</i>. Would that mean that if we do <code>x.flatMap(x =&gt; Observable.of(x)).subscribe(a =&gt; console.log(a))</code> and <code>x.subscribe(a =&gt; console.log(a))</code> and we end up with the same side effect, then it&#39;s enough proof for the <i>Left identity</i> to hold for Observable?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1532622465, "post_id": 51542865, "comment_id": 90054860, "body": "That&#39;s the right identity, but in general yes"}], "answers": [{"comments": [{"owner": {"reputation": 2154, "user_id": 326532, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/ac438a379f001cf3d7c2c95b0733332e?s=128&d=identicon&r=PG", "display_name": "Dean Radcliffe", "link": "https://stackoverflow.com/users/326532/dean-radcliffe"}, "edited": false, "score": 0, "creation_date": 1573585805, "post_id": 58651367, "comment_id": 103927023, "body": "There&#39;s actually a 5th mode, shown here <a href=\"http://www.deanius.com/ConcurModes2.png\" rel=\"nofollow noreferrer\">deanius.com/ConcurModes2.png</a> and playfully discussed here: <a href=\"https://dev.to/deanius/declarative-concurrency-with-rx-helper-and-rxjs-30ai\" rel=\"nofollow noreferrer\">dev.to/deanius/&hellip;</a>"}, {"owner": {"reputation": 45, "user_id": 1425431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c81926d2f774695a5799a4cd826384aa?s=128&d=identicon&r=PG", "display_name": "user1425431", "link": "https://stackoverflow.com/users/1425431/user1425431"}, "edited": false, "score": 0, "creation_date": 1583978837, "post_id": 58651367, "comment_id": 107296796, "body": "<a href=\"http://introtorx.com/Content/v1.0.10621.0/10_LeavingTheMonad.html\" rel=\"nofollow noreferrer\">introtorx.com/Content/v1.0.10621.0/10_LeavingTheMonad.html</a>"}], "tags": [], "owner": {"reputation": 19040, "user_id": 2956115, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/09tkv.jpg?s=128&g=1", "display_name": "artur grzesiak", "link": "https://stackoverflow.com/users/2956115/artur-grzesiak"}, "is_accepted": false, "score": 12, "last_activity_date": 1572557259, "creation_date": 1572557259, "answer_id": 58651367, "question_id": 51542865, "link": "https://stackoverflow.com/questions/51542865/is-rxjs-observable-a-monad/58651367#58651367", "title": "Is RxJS.Observable a monad?", "body": "<p><strong>tldr;</strong> Yes.</p>\n\n<hr>\n\n<p>JavaScript is a dynamic language with duck typing so in runtime, instance of an <code>Observable</code> class is <em>equivalent</em> to an instance of <code>ScalarObservable</code>. RxJS itself is written in TypeScript and these irregularities do not surface up in types and they are - exactly as @Bergi wrote in a comment - an optimisation. On the other hand, you are completely right: in a nominal type system type mismatch could be a real problem and even a compile time error.</p>\n\n<hr>\n\n<p>Now, answering the question itself - please take a look at a <a href=\"https://github.com/jasonzoladz/purescript-rxjs/blob/master/src/RxJS/Observable.purs#L118-L157\" rel=\"noreferrer\">Purescript library</a> with bindings to RxJS:</p>\n\n<pre><code>foreign import data Observable :: Type -&gt; Type\n\ninstance monoidObservable :: Monoid (Observable a) where\n  mempty = _empty\n\ninstance functorObservable :: Functor Observable where\n  map = _map\n\ninstance applyObservable :: Apply Observable where\n  apply = combineLatest id\n\ninstance applicativeObservable :: Applicative Observable where\n  pure = just\n\ninstance bindObservable :: Bind Observable where\n  bind = mergeMap\n\ninstance monadObservable :: Monad Observable\n\n-- | NOTE: The semigroup instance uses `merge` NOT `concat`.\ninstance semigroupObservable :: Semigroup (Observable a) where\n  append = merge\n\ninstance altObservable :: Alt Observable where\n  alt = merge\n\ninstance plusObservable :: Plus Observable where\n  empty = _empty\n\ninstance alternativeObservable :: Alternative Observable\n\ninstance monadZeroObservable :: MonadZero Observable\n\ninstance monadPlusObservable :: MonadPlus Observable\n\ninstance monadErrorObservable :: MonadError Error Observable where\n  catchError = catch\n\ninstance monadThrowObservable :: MonadThrow Error Observable where\n  throwError = throw\n</code></pre>\n\n<p>Assuming Purescript types are correct: apart from being a regular <code>Monad</code>, <code>Observable</code> conforms to <code>MonadPlus</code> and <code>MonadError</code> classes. <code>MonadPlus</code> allows to combine computations, while <code>MonadError</code> allows to interrupt or skip some part of computations (in case of <code>Observable</code> we can easily retry computations as well).\n<code>Observable</code> is not only a monad, but a very powerful one - <em>maybe</em> even the most powerful monad used in the main<strong>stream$</strong>.</p>\n\n<p>I do not have any formal proofs, but can shortly describe how to use Observable to model or replace monads describe in <a href=\"https://wiki.haskell.org/All_About_Monads\" rel=\"noreferrer\">https://wiki.haskell.org/All_About_Monads</a>.</p>\n\n<p><strong>Maybe</strong> <em>Computations which may not return a result</em></p>\n\n<p>Non-result can be represented as regular JS <code>undefined</code> or an <code>EMPTY</code> stream.</p>\n\n<p><strong>Error</strong> <em>Computations which can fail or throw exceptions</em></p>\n\n<p>You can throw regular JS errors or return more idiomatic <code>throwError</code> from monadic bind. An error can be catch'ed and then handled or use to retry computations. Throwing an error immediately stops ongoing computations. </p>\n\n<p><strong>List</strong> <em>Non-deterministic computations which can return multiple possible results</em></p>\n\n<p>List is kind of a younger brother of Observable, lacking entirely the time dimension. Anything that can be expressed via operations on a list can be exactly mapped to operations on an observable. You can easily lift a list via <code>Observable.from</code> and downgrade to observable with <code>.toList()</code>. Being native, list performance is going to be much better than observable's. But remember that list is eager and observable lazy, so in some cases observable may outperform list.</p>\n\n<p><strong>IO</strong> <em>Computations which perform I/O</em></p>\n\n<p>Any IO operations (network, disk etc) can be easily wrapped / lifted to the observable world. </p>\n\n<p><strong>State</strong> <em>Computations which maintain state</em></p>\n\n<p>BehaviorSubject</p>\n\n<p><strong>Reader</strong> <em>Computations which read from a shared environment</em></p>\n\n<p>From a consumer perspective it does not matter at all where an instance of <em>Observable</em> comes from. For example: if you declared your config as an observable you can easily change the exact environment from where the value(s) are provided.</p>\n\n<p><strong>Writer</strong> <em>Computations which write data in addition to computing values</em></p>\n\n<p>The simplest option is to return two streams one with values and the other with logs / auxiliary data.</p>\n\n<p><strong>Cont</strong> <em>Computations which can be interrupted and restarted</em></p>\n\n<p>To interrupt computations you can throw an error, use an operator e.g. <code>.switchMap</code>, <code>.takeUntil</code>, explicitly unsubscribe or <code>.mergeMap</code> to <code>EMPTY</code>. Having access to some form of a cache restarting <em>deterministic</em> computations from arbitrary step is pretty trivial: just split your computations to smaller observables and cache their results once computed; when restarted run computations only if cache empty - otherwise use cached value.</p>\n\n<hr>\n\n<p>If you decide to use observables to represent structure of your computations - you not only can model / replace the most common monads used in practice, but your computations are automatically reactive in flavour. Moreover if you stick to only observable your computations are going to be homogenous, which means there is very little or no need for monad transformers and accidental complexity introduced by them.\nMy working hypothesis is that observable type offers some local (or even global) maximum for expressing structure of asynchronous computations. For example: Observable offers not one, not two, but <strong>three!</strong> monadic binds with different semantic: <code>mergeMap</code>, <code>switchMap</code>, <code>exhaustMap</code> (if you wonder: <code>concatMap</code> is actually a special case of <code>mergeMap</code>). This very fact on its own is kind of indication that observable is a very interesting mathematical structure.</p>\n\n<hr>\n\n<p><strong>A bonus</strong></p>\n\n<p>Observable is said to be a stream and streams (in general) are [commonads] (<a href=\"https://bartoszmilewski.com/2017/01/02/comonads/\" rel=\"noreferrer\">https://bartoszmilewski.com/2017/01/02/comonads/</a>). Does it mean that observable is not only a monad but a comonad as well?</p>\n\n<p><a href=\"https://twitter.com/headinthebox/status/244544069110476800\" rel=\"noreferrer\">Erik Meijer twit's</a>:</p>\n\n<blockquote>\n  <p>@rix0rrr For a while Rx had a ManySelect operator. Rx is both a monad and a comonad. 144 characters is too short to explain that. Sorry ;-)</p>\n</blockquote>\n"}], "owner": {"reputation": 383, "user_id": 4011917, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/1d5e31f8c447fa0413a66118ec21cda8?s=128&d=identicon&r=PG&f=1", "display_name": "Mateusz Wit", "link": "https://stackoverflow.com/users/4011917/mateusz-wit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2765, "favorite_count": 8, "answer_count": 1, "score": 26, "last_activity_date": 1572557259, "creation_date": 1532620013, "question_id": 51542865, "link": "https://stackoverflow.com/questions/51542865/is-rxjs-observable-a-monad", "title": "Is RxJS.Observable a monad?", "body": "<p>Is Observable really a monad? Does it abide by Monad laws (<a href=\"https://wiki.haskell.org/Monad_laws\" rel=\"noreferrer\">https://wiki.haskell.org/Monad_laws</a>)? Doesn't seem to me like it does. But maybe my understanding is wrong and somebody can shed some light on the issue. My current reasoning is (I'm using <strong>::</strong> to denote \"is of kind\"):</p>\n\n<p><em>1) Left identity:</em>  <strong>return a >>= f \u2261 f a</strong></p>\n\n<pre><code>var func = x =&gt; Rx.Observable.of(10)\n\nvar a = Rx.Observable.of(1).flatMap(func) :: Observable\nvar b = func(1)                           :: ScalarObservable\n</code></pre>\n\n<p>HASKELL: </p>\n\n<pre><code>func = (\\_ -&gt; putStrLn \"B\")\n\ndo { putStrLn \"hello\"; return \"A\" } &gt;&gt;= func   :: IO ()\n\nfunc \"A\"                                       :: IO ()\n</code></pre>\n\n<p>So left identity doesn't hold for Observable. Observable clearly isn't ScalarObservable. In Haskell, the types are the same - <strong>IO ()</strong>.</p>\n\n<p><em>2) Right identity:</em> <strong>m >>= return \u2261 m</strong></p>\n\n<pre><code>var x = Rx.Observable.of(1);\n\nx.flatMap(x =&gt; Observable.of(x)) :: Observable\nx                                :: ScalarObservable\n</code></pre>\n\n<p>HASKELL:</p>\n\n<pre><code>Just 2 &gt;&gt;= return  :: Num b =&gt; Maybe b\nJust 2             :: Num a =&gt; Maybe a\n</code></pre>\n\n<p>The same situation as with the left identity. Observable !== ScalarObservable. Whereas in Haskell, the type stays the same, it's a Maybe with a Num inside it.</p>\n\n<p><em>3) Associativity</em></p>\n\n<p><strong>(m >>= f) >>= g      \u2261      m >>= (\\x -> f x >>= g)</strong></p>\n\n<pre><code>var x = Rx.Observable.of(10)\n\nvar func1 = (x) =&gt; Rx.Observable.of(x + 1)\nvar func2 = (x) =&gt; Rx.Observable.of(x + 2)\n\n\nx.flatMap(func1).flatMap(func2)         :: Observable\nx.flatMap(e =&gt; func1(e).flatMap(func2)) :: Observable\n</code></pre>\n\n<p>HASKELL:</p>\n\n<pre><code>add2 x = Just(x + 2)\nadd1 x = Just(x + 1)\n\nJust 2 &gt;&gt;= add1 &gt;&gt;= add2             :: Num b =&gt; Maybe b\nJust 2 &gt;&gt;= (\\x -&gt; add1(x) &gt;&gt;= add2)  :: Num b =&gt; Maybe b\n</code></pre>\n\n<p>This is the only law that seems to hold for Observable.\nBut I don't know, maybe this should not be reasoned in the way I did. What do you think?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1532618550, "post_id": 51542313, "comment_id": 90052380, "body": "My Haskell is pretty rusty, but wouldn&#39;t <code>let sales = sales ++ </code> create an infinite list? Sales is defined in terms of itself."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1532618654, "post_id": 51542313, "comment_id": 90052440, "body": "<code>let sales = sales ++ [manufacturer, product]</code> is the erroneous line. You&#39;re trying to change state. Haskell has no state. This is a recursive definition and therefore loops."}, {"owner": {"reputation": 21, "user_id": 9485443, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kH3Fu.jpg?s=128&g=1", "display_name": "Matt G", "link": "https://stackoverflow.com/users/9485443/matt-g"}, "edited": false, "score": 0, "creation_date": 1532619084, "post_id": 51542313, "comment_id": 90052739, "body": "That&#39;ll be why I get the loop error, wasn&#39;t sure how to add a new list to a current one other than ++"}], "answers": [{"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": true, "score": 7, "last_activity_date": 1532619241, "last_edit_date": 1532619241, "creation_date": 1532618746, "answer_id": 51542477, "question_id": 51542313, "link": "https://stackoverflow.com/questions/51542313/haskell-user-input-stored-in-a-list/51542477#51542477", "title": "Haskell - User Input Stored in a List", "body": "<p><strong>You cannot mutate variables in Haskell. All Haskell variables are immutable.</strong> </p>\n\n<pre><code>-- `sales` is now defined as `[]`. It cannot be changed, ever.\nsales = []\n\nrecordPurchase ::  IO ()\nrecordPurchase = do\n    putStrLn \"Manufacturer\"\n    manufacturer &lt;- getLine\n    putStrLn \"Product Name\"\n    product &lt;- getLine\n    -- Here, you define a new value called `sales`,\n    -- which is recursively defined, since it refers to itself. \n    -- This causes a loop.\n    let sales = sales ++ [manufacturer, product]\n    print sales\n</code></pre>\n\n<p>To see why this causes a loop, consider the definition of <code>sales</code> as an equation: <code>sales = sales ++ [manufacturer, product]</code>:</p>\n\n<pre><code>  sales\n= sales ++ [manufacturer, product]\n= sales ++ [manufacturer, product] ++ [manufacturer, product]\n= sales ++ [manufacturer, product] ++ [manufacturer, product] ++ [manufacturer, product]\n= (etc)\n</code></pre>\n\n<p>What you probably mean is this:</p>\n\n<pre><code>recordPurchase ::  IO ()\nrecordPurchase = do\n    putStrLn \"Manufacturer\"\n    manufacturer &lt;- getLine\n    putStrLn \"Product Name\"\n    product &lt;- getLine\n    print [manufacturer, product]\n</code></pre>\n\n<p>The usual way of storing data, however, is recursion. We'd do it a bit like this (pseudocode):</p>\n\n<pre><code>mainLoop :: [String] -&gt; IO ()\nmainLoop sales = do\n    -- Get new sales info\n    newInfo &lt;- getNewInfo\n\n    -- Define a new list with the extra info\n    let newSales = sales ++ [newInfo]\n\n    -- Do something with the sales info, e.g. print it\n    print newInfo\n\n    -- Go through the 'loop' again, with the new sales info.\n    mainLoop newSales\n\n -- The main program is just the main loop with initial value of `[]`:\n main = mainLoop []\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 231, "user_id": 10060260, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6a263d7dfcf997df2aeae96112cd050?s=128&d=identicon&r=PG&f=1", "display_name": "Kevin Li", "link": "https://stackoverflow.com/users/10060260/kevin-li"}, "is_accepted": false, "score": 0, "last_activity_date": 1532618747, "creation_date": 1532618747, "answer_id": 51542479, "question_id": 51542313, "link": "https://stackoverflow.com/questions/51542313/haskell-user-input-stored-in-a-list/51542479#51542479", "title": "Haskell - User Input Stored in a List", "body": "<p>@Carcigenicate is right. The compiler thinks that when you type</p>\n\n<p><code>let sales = sales ++ [manufacturer, product]</code></p>\n\n<p>you're defining <code>sales</code> in terms of itself.</p>\n\n<p>You don't seem to be storing additional entries, so why not just do</p>\n\n<p><code>print [manufacturer, product]</code></p>\n\n<p>since your program exits right afterwards?</p>\n\n<p>EDIT: Since you want to have your program keep running, you're going\nto have to be cleverer about storing data.\nHaskell data structures are immutable. You may want to check out the State monad, which handles stateful computations in functional way.</p>\n"}], "owner": {"reputation": 21, "user_id": 9485443, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kH3Fu.jpg?s=128&g=1", "display_name": "Matt G", "link": "https://stackoverflow.com/users/9485443/matt-g"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 674, "favorite_count": 0, "accepted_answer_id": 51542477, "answer_count": 2, "score": 0, "last_activity_date": 1532655695, "creation_date": 1532618254, "last_edit_date": 1532655695, "question_id": 51542313, "link": "https://stackoverflow.com/questions/51542313/haskell-user-input-stored-in-a-list", "title": "Haskell - User Input Stored in a List", "body": "<p>I'm looking to take a user input and store it as a list, which I would later be able to search. At the moment I have an empty list called \"sales\" and this function to take an input and store it in this list.</p>\n\n<pre><code>sales = []\n\nrecordPurchase ::  IO ()\nrecordPurchase = do\n    putStrLn \"Manufacturer\"\n    manufacturer &lt;- getLine\n    putStrLn \"Product Name\"\n    product &lt;- getLine\n    let sales = sales ++ [manufacturer, product]\n    print sales\n</code></pre>\n\n<p>At the moment I get an</p>\n\n<pre><code>\"*** Exception: &lt;&lt;loop&gt;&gt;\"\n</code></pre>\n\n<p>error. This particular error is solved now, it was due to the line</p>\n\n<pre><code>let sales = sales ++ [manufacturer, product]\n</code></pre>\n\n<p>However I'm not sure how to combine two lists it seems. Even when it was \"working\" I was still getting an empty list when sales was printed. I don't know whether I'm even on track here, particularly with the function definition as \"IO()\".</p>\n\n<p>The bonus part here is if I was able to populate a list, how would I then be able to search it and display certain elements, such as products by a specific manufacturer?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1532613844, "post_id": 51540753, "comment_id": 90049133, "body": "Shouldn&#39;t the signature of <code>getValue</code> be <code>a -&gt; Int</code>?"}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 0, "creation_date": 1532618490, "post_id": 51540753, "comment_id": 90052339, "body": "it is probably not the only error. Sometimes it makes sense to start with the first one"}], "answers": [{"comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 2, "creation_date": 1532614484, "post_id": 51540832, "comment_id": 90049634, "body": "There&#39;s another issue, though.  The <code>HasValue</code> instance should be <code>instance HasValue (Combiner a)</code>, not just <code>instance HasValue Combiner</code>."}, {"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "edited": false, "score": 0, "creation_date": 1532619434, "post_id": 51540832, "comment_id": 90052974, "body": "Thank you. Also, are all types with * kinds are completely grounded?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "edited": false, "score": 0, "creation_date": 1532627131, "post_id": 51540832, "comment_id": 90057282, "body": "@PetrasPurlys: after some rereading, I think that the term <i>monotype</i> is more appropriate, and yes, those are types with kind <code>*</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1532627038, "last_edit_date": 1532627038, "creation_date": 1532614022, "answer_id": 51540832, "question_id": 51540753, "link": "https://stackoverflow.com/questions/51540753/haskell-could-not-deduce-from-context/51540832#51540832", "title": "Haskell | Could not deduce from context", "body": "<p>Given I understand it correctly, you defined the <strong>wrong signature for <code>getValue</code></strong>. Now it is defined:</p>\n\n<pre><code>class HasValue a where\n  getValue :: <b>Int</b></code></pre>\n\n<p>So that means there can be different versions of <code>getValue</code>, but since these all return an <code>Int</code>, it is completely impossible to know which <code>instance</code> we want to pick.</p>\n\n<p>Based on the <code>instance</code> declaration later in the file (and the name of the function) however, I think you were actually looking for:</p>\n\n<pre><code>class HasValue a where\n  getValue :: <b>a -&gt; Int</b></code></pre>\n\n<p>Now Haskell can derive the <code>a</code> from the type of the <em>parameter</em> of the function application. Furthermore this also matches with your function body in the <code>instance HasValue</code>.</p>\n\n<p>Furthermore the <code>Combiner</code> is <em>not</em> a <em>monotype</em>, so we need to add the type parameter in the head:</p>\n\n<pre><code>instance HasValue <b>(</b>Combiner <b>a)</b> where\n  getValue (Combiner x f) = f x</code></pre>\n"}], "owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 280, "favorite_count": 0, "accepted_answer_id": 51540832, "answer_count": 1, "score": 3, "last_activity_date": 1532627038, "creation_date": 1532613782, "question_id": 51540753, "link": "https://stackoverflow.com/questions/51540753/haskell-could-not-deduce-from-context", "title": "Haskell | Could not deduce from context", "body": "<p>I have this code that does not compile. I'd like to understand why it can not deduce the types.</p>\n\n<pre><code>module Main where\n\ndata Combiner a = Combiner a (a -&gt; Int)\ncomb = Combiner 3 (\\x -&gt; 5)\n\nclass HasValue a where\n  getValue :: Int\n\ninstance HasValue Combiner where\n  getValue (Combiner x f) = f x\n\nmain = print $ getValue comb\n</code></pre>\n\n<p>Here's the error:</p>\n\n<pre><code>main.hs:8:3: error:\n\u2022 Could not deduce (HasValue a0)\n  from the context: HasValue a\n    bound by the type signature for:\n               getValue :: HasValue a =&gt; Int\n    at main.hs:8:3-17\n  The type variable \u2018a0\u2019 is ambiguous\n\u2022 In the ambiguity check for \u2018getValue\u2019\n  To defer the ambiguity check to use sites, enable AllowAmbiguousTypes\n  When checking the class method:\n    getValue :: forall a. HasValue a =&gt; Int\n  In the class declaration for \u2018HasValue\u2019\n</code></pre>\n"}, {"tags": ["haskell", "monads", "request-response"], "comments": [{"owner": {"reputation": 11066, "user_id": 147057, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/cf9d83a95db2460ccb18f311fa8a766c?s=128&d=identicon&r=PG", "display_name": "max taldykin", "link": "https://stackoverflow.com/users/147057/max-taldykin"}, "edited": false, "score": 0, "creation_date": 1532605976, "post_id": 51537980, "comment_id": 90043786, "body": "You are talking about <b>threads</b> but I don&#39;t see any threads in your code. What about really spawning some with <a href=\"https://hackage.haskell.org/package/base-4.8.1.0/docs/Control-Concurrent.html#v:forkIO\" rel=\"nofollow noreferrer\"><code>forkIO</code></a> and communicating via <a href=\"https://hackage.haskell.org/package/base-4.8.1.0/docs/Control-Concurrent-Chan.html\" rel=\"nofollow noreferrer\"><code>Chan</code></a>? In this case you will have chan writes instead of nested functions."}, {"owner": {"reputation": 541, "user_id": 359606, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b8c8a858811dfece044c3818e21bf4f3?s=128&d=identicon&r=PG", "display_name": "redfish64", "link": "https://stackoverflow.com/users/359606/redfish64"}, "reply_to_user": {"reputation": 11066, "user_id": 147057, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/cf9d83a95db2460ccb18f311fa8a766c?s=128&d=identicon&r=PG", "display_name": "max taldykin", "link": "https://stackoverflow.com/users/147057/max-taldykin"}, "edited": false, "score": 0, "creation_date": 1532609621, "post_id": 51537980, "comment_id": 90046205, "body": "I didn&#39;t want to complicate the example, but runTestIO would assign which threads would work on the result in the real situation. I mentioned threads because I was trying to fill in the background as to to why I wanted to do this. In the real code, I will be using Chan writes, but I don&#39;t want the cpu threads to pause. That&#39;s why I want to create these snippets of monad computations, so that I can split them up and assign them to different threads. If it would help, I can add actual threads and a chan to communicate to the example."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1532614805, "post_id": 51537980, "comment_id": 90049897, "body": "I don&#39;t have time to provide a full answer now, but the pattern of &quot;request a value from outside the context before proceeding inside it&quot; is one way of looking at what free monads do."}, {"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 1, "creation_date": 1532619086, "post_id": 51537980, "comment_id": 90052744, "body": "Can&#39;t you just use normal IO ? (and evaluate them until you need them). What I mean is, <code>(x, io)</code> to do later <code>io x</code> is actually equivalent to <code>io x</code>, even if it&#39;s an IO. Haskell is lazy and <code>io x</code> will only get evaluated when you try to extract the value of it."}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1532619556, "post_id": 51537980, "comment_id": 90053046, "body": "Is your question about how to make the code you posted more readable, or is it about whether your scheme re. using threads to avoid blocking makes sense?"}, {"owner": {"reputation": 541, "user_id": 359606, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b8c8a858811dfece044c3818e21bf4f3?s=128&d=identicon&r=PG", "display_name": "redfish64", "link": "https://stackoverflow.com/users/359606/redfish64"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1532672674, "post_id": 51537980, "comment_id": 90070815, "body": "@jberryman it&#39;s about making it more readable."}], "answers": [{"tags": [], "owner": {"reputation": 541, "user_id": 359606, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b8c8a858811dfece044c3818e21bf4f3?s=128&d=identicon&r=PG", "display_name": "redfish64", "link": "https://stackoverflow.com/users/359606/redfish64"}, "is_accepted": true, "score": 0, "last_activity_date": 1532949102, "creation_date": 1532949102, "answer_id": 51592676, "question_id": 51537980, "link": "https://stackoverflow.com/questions/51537980/request-response-pattern-within-haskell/51592676#51592676", "title": "Request, Response pattern within Haskell", "body": "<p>I created a monad transformer specifically to do this. Unless someone can show me that it's easily done another way, and is just clutter, I'll probably create a haskell package for this.</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE ScopedTypeVariables #-}\nmodule ReqResPattern where\n\nimport Control.Monad.IO.Class (MonadIO(..))\nimport Data.Fix (Fix(..))\nimport Control.Monad.Fix\nimport Debug.Trace(trace)\n\n-- | This is a monad transformer that contains a simple category that tells what\n--   type of operation it is. Then when run, the monad will stop everytime the category\n--   changes. A specific example of use would be if you wanted to run some code within\n--   a thread pool for cpu tasks, another for disk tasks, and a final thread pool for\n--   network tasks.\n--\n--   You could then easily designate which work to do in which thread\n--   by using \"switchCat\" and then feeding the monad to the appropriate thread pool using\n--   an MVar or something.\n\ndata CatT catType m a = CatT { runCatT :: (m (Either (CatT catType m a) a)),\n                               cat :: Maybe catType\n                               -- ^ This is the category that the monad starts in.\n                               -- It may switch categories at any time by returning\n                               -- a new CatT.\n                             }\n\ninstance Functor m =&gt; Functor (CatT cat m) where\n  fmap f (CatT a cat) = CatT (fmap (cattfmap f) a) cat\n\ncattfmap :: Functor m =&gt; (a -&gt; b) -&gt; (Either (CatT cat m a) a) -&gt; (Either (CatT cat m b) b)\ncattfmap f (Left ct) = Left $ fmap f ct\ncattfmap f (Right a) = Right $ f a\n\ninstance Monad m =&gt; Applicative (CatT cat m) where\n  pure x = CatT (pure (Right x)) Nothing\n  (&lt;*&gt;) = cattapp\n\ncattapp :: forall m a b cat . Monad m =&gt; CatT cat m (a -&gt; b) -&gt; CatT cat m a -&gt; CatT cat m b\ncattapp cmf@(CatT mf cat1) cma@(CatT ma cat2) = CatT (ma &gt;&gt;= mappedMf mf) cat2\n  --the type is cat2 because this is the type the resulting structure will start with\n  where\n    mappedMf :: m (Either (CatT cat m (a -&gt; b)) (a -&gt; b)) -&gt; Either (CatT cat m a) a -&gt; m (Either (CatT cat m b) b)\n    mappedMf mf ea = fmap (doit ea) mf\n\n    doit :: Either (CatT cat m a) a -&gt; Either (CatT cat m (a -&gt; b)) (a -&gt; b) -&gt; (Either (CatT cat m b) b)\n    doit (Left ca) (Left cf) = Left $ cf &lt;*&gt; ca\n    doit (Right a) (Left cf) = Left $ cf &lt;*&gt; (pure a)\n    doit (Left ca) (Right f) = Left $ (pure f) &lt;*&gt; ca\n    doit (Right a) (Right f) = Right $ f a\n\ninstance (Eq cat, Monad m) =&gt; Monad (CatT cat m) where\n  (&gt;&gt;=) = cattglue\n\ncattglue :: forall m a b cat . (Monad m, Eq cat) =&gt; (CatT cat m a) -&gt; (a -&gt; (CatT cat m b)) -&gt; (CatT cat m b)\ncattglue (CatT ma cat1) cfmb = CatT (doit ma cfmb) cat1\n  where\n    doit :: m (Either (CatT cat m a) a) -&gt; (a -&gt; (CatT cat m b)) -&gt; m (Either (CatT cat m b) b)\n    doit ma famb = ma &gt;&gt;= (flip doit2 famb)\n    doit2 :: (Either (CatT cat m a) a) -&gt; (a -&gt; (CatT cat m b)) -&gt; m (Either (CatT cat m b) b)\n    --if we are already calling another cat, we just glue that one and use it as the inner cat\n    doit2 (Left ca) f = return $ Left $ (ca &gt;&gt;= f)\n    --otherwise we are returning an object directly\n    doit2 (Right a) f =\n      --in this case we have a value, so we pass it to the function to extract\n      --the next cat, then run them until we get a cat with a conflicting category\n      runCatsUntilIncompatible cat1 (f a)\n\n    runCatsUntilIncompatible :: Maybe cat -&gt; CatT cat m b -&gt; m (Either (CatT cat m b) b)\n    runCatsUntilIncompatible cat1 cm2 =\n        case (cat1, (cat cm2)) of\n          (Nothing, Nothing) -&gt; runCatT cm2\n          (Nothing, Just _) -&gt; return $ Left cm2\n          (Just a, Just b) | a == b -&gt; runCatT cm2\n          (Just _, Nothing) -&gt; (runCatT cm2) &gt;&gt;=\n            (\\cm2v -&gt;\n               case cm2v of\n                 (Right v) -&gt; return (Right v)\n                 (Left cm3) -&gt; runCatsUntilIncompatible cat1 cm3\n            )\n\n          _ -&gt; return $ Left cm2\n\nisCompatibleCats :: Eq ct =&gt; (Maybe ct) -&gt; (Maybe ct) -&gt; Bool\nisCompatibleCats Nothing _ = False\nisCompatibleCats _ Nothing = True\nisCompatibleCats (Just a) (Just b) = a == b\n\nswitchCat :: (Eq cat, Monad m) =&gt; cat -&gt; CatT cat m ()\nswitchCat c = CatT (return $ Right ()) $ Just c\n\ninstance (Eq cat, MonadIO m) =&gt; MonadIO (CatT cat m) where\n  liftIO io = CatT (fmap Right $ liftIO io) Nothing\n\ndata MyCat = DiskCat | CPUCat\n  deriving (Eq, Show)\n\ntype IOCat cat a = CatT cat IO a\n\ntest1 :: IOCat MyCat Int\ntest1 = do\n  liftIO $ putStrLn \"A simple cat\"\n  return 1\n\n\ntest2 :: IOCat MyCat ()\ntest2 = do\n  switchCat CPUCat\n  liftIO $ putStrLn \"CPU Cat 1\"\n  switchCat CPUCat\n  liftIO $ putStrLn \"CPU Cat 2\"\n  return ()\n\ntest2' :: IOCat MyCat ()\ntest2' = \n  switchCat CPUCat &gt;&gt;\n  (liftIO $ putStrLn \"CPU Cat 1\") &gt;&gt;\n  switchCat CPUCat &gt;&gt;\n  (liftIO $ putStrLn \"CPU Cat 2\") &gt;&gt;\n  return ()\n\n\ntest2'' :: IOCat MyCat ()\ntest2'' = \n  switchCat CPUCat &gt;&gt;\n  ((liftIO $ putStrLn \"CPU Cat 1\") &gt;&gt;\n   (switchCat CPUCat &gt;&gt;\n    ((liftIO $ putStrLn \"CPU Cat 2\") &gt;&gt;\n     return ())))\n\n\ntest3 :: IOCat MyCat ()\ntest3 = do\n  switchCat CPUCat\n  liftIO $ putStrLn \"CPU Cat 1\"\n  switchCat DiskCat\n  liftIO $ putStrLn \"Disk Cat 2\"\n  switchCat CPUCat\n  liftIO $ putStrLn \"CPU Cat 3\"\n  return ()\n\ntest3' :: IOCat MyCat ()\ntest3' = \n  switchCat CPUCat &gt;&gt;\n  (liftIO $ putStrLn \"CPU Cat 1\") &gt;&gt;\n  switchCat DiskCat &gt;&gt;\n  (liftIO $ putStrLn \"Disk Cat 2\") &gt;&gt;\n  switchCat CPUCat &gt;&gt;\n  (liftIO $ putStrLn \"CPU Cat 3\") &gt;&gt;\n  return ()\n\ntest3'' :: IOCat MyCat ()\ntest3'' = \n  switchCat CPUCat &gt;&gt; \n  ((liftIO $ putStrLn \"CPU Cat 1\") &gt;&gt;\n    (switchCat DiskCat &gt;&gt;\n     ((liftIO $ putStrLn \"Disk Cat 2\") &gt;&gt;\n      (switchCat CPUCat &gt;&gt;\n       ((liftIO $ putStrLn \"CPU Cat 3\") &gt;&gt;\n        return ())))))\n</code></pre>\n"}], "owner": {"reputation": 541, "user_id": 359606, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b8c8a858811dfece044c3818e21bf4f3?s=128&d=identicon&r=PG", "display_name": "redfish64", "link": "https://stackoverflow.com/users/359606/redfish64"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 143, "favorite_count": 1, "accepted_answer_id": 51592676, "answer_count": 1, "score": 2, "last_activity_date": 1532949102, "creation_date": 1532605268, "question_id": 51537980, "link": "https://stackoverflow.com/questions/51537980/request-response-pattern-within-haskell", "title": "Request, Response pattern within Haskell", "body": "<p>I'm trying to figure out a good way to implement a request response pattern, where a monad can request the monad runner to perform an action and return a value back to the monad.</p>\n\n<p>The reason I want to do this is because I have a bunch of tasks to perform where some of the work is IO based and some is CPU based. I want a bunch of cpu threads to do the cpu work, hand off io tasks to another thread designated to do disk work, and be then free to work on other CPU tasks while the disk thread finds a value for them. A task might be something like:</p>\n\n<pre><code>do some cpu work \nrequest load a value from disk\ndo some more cpu work  \nrequest another value from disk\n... etc ..\n</code></pre>\n\n<p>I created the following as a simple way to do this, where ReqRes, below, represent the disk based tasks. However, in testIO, it has a waterfall look to it  where the code marches off to the right, every time it makes a new request, due to nested functions.</p>\n\n<p>I was wondering if there is a cleaner way to do it, that doesn't require this nested function structure.</p>\n\n<pre><code>module ReqResPattern where\n\nimport Control.Monad.IO.Class (MonadIO(..))\n\ndata ReqRes m = RR1 String (String -&gt; m (ReqRes m)) | RR2 Int (Int -&gt; m (ReqRes m)) | Fin\n\ntestIO :: MonadIO m =&gt; m (ReqRes m)\ntestIO =\n  do\n    return $ RR1 \"fred\"\n      (\\x -&gt;\n         do\n           liftIO $ putStrLn $ \"str: \" ++ x\n           return $ RR2 1\n             (\\y -&gt;\n                do\n                  liftIO $ putStrLn $ \"int: \" ++ (show y)\n                  return $ Fin \n             )\n      )\n\n\nrunTestIO :: IO ()\nrunTestIO =\n  doit testIO\n  where\n    doit :: IO (ReqRes IO) -&gt; IO ()\n    doit m = \n      do\n        v &lt;- m\n        case v of\n          RR1 v f -&gt; doit $ f (v ++ \" foo\") \n          RR2 v f -&gt; doit $ f (v+1)\n          Fin -&gt; return ()\n        return ()\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 6, "creation_date": 1532603732, "post_id": 51537493, "comment_id": 90042478, "body": "Mind that <code>char</code> is in lowercase, so it is a type variable, not a <code>Char</code>acter."}, {"owner": {"reputation": 850, "user_id": 5484068, "user_type": "registered", "accept_rate": 18, "profile_image": "https://www.gravatar.com/avatar/a2ec720ad8a18aa36c86f0d6db5672fb?s=128&d=identicon&r=PG&f=1", "display_name": "vincedjango", "link": "https://stackoverflow.com/users/5484068/vincedjango"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1532636849, "post_id": 51537493, "comment_id": 90061778, "body": "I actually meant Char, but i&#39;m happy that I&#39;ve made this mistake. It added some flavor to my question that may help people starting on Haskell."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1532604409, "creation_date": 1532604409, "answer_id": 51537710, "question_id": 51537493, "link": "https://stackoverflow.com/questions/51537493/having-trouble-understanding-currying/51537710#51537710", "title": "Having trouble understanding currying", "body": "<pre><code>f :: a -&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>is read as</p>\n\n<pre><code>f :: a -&gt; (a -&gt; a -&gt; a)\n</code></pre>\n\n<p>which means: <code>f</code> takes an argument <code>a</code> and returns a function <code>a -&gt; a -&gt; a</code>. Since <code>a</code> is a type variable, <code>f</code> is polymorphic, so the type <code>a</code> will be chosen to be whatever matches with the argument of <code>f</code>,</p>\n\n<p>Consequently, for any typeable expression <code>w</code>, the expression <code>f w</code> has type</p>\n\n<pre><code>(type of w) -&gt; (type of w) -&gt; (type of w)\n</code></pre>\n\n<p>This is precisely what happens in all the examples provided in the question.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1532604738, "creation_date": 1532604738, "answer_id": 51537806, "question_id": 51537493, "link": "https://stackoverflow.com/questions/51537493/having-trouble-understanding-currying/51537806#51537806", "title": "Having trouble understanding currying", "body": "<blockquote>\n  <p><strong>Note</strong>: the <code>char</code> as type parameter, is <em>not</em> a <code>Char</code>acter. Since it starts with a lowercase, it is a type parameter. The type of <code>x</code> is thus <code>x :: b</code> as well.</p>\n</blockquote>\n\n<p>A function in Haskell has <em>exactly</em> one parameter. If one writes:</p>\n\n<pre><code>f :: a -&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>then this is actually short for:</p>\n\n<pre><code>f :: a -&gt; (a -&gt; (a -&gt; a))\n</code></pre>\n\n<p>So <code>f</code> takes a parameter of type <code>a</code>, and returns a function of type <code>a -&gt; (a -&gt; a)</code>.</p>\n\n<h1><code>f x :: a -&gt; a -&gt; a</code></h1>\n\n<p>In case we want to derive the type of <code>f x</code>, we can see that:</p>\n\n<pre><code>f :: a -&gt; (a -&gt; (a -&gt; a))\nx :: b\n</code></pre>\n\n<p>since <code>x</code> is the parameter of a function application with <code>f</code> as function, it thus means that the type of <code>x</code> (<code>b</code>) should be the same as the type of the parameter of the function (<code>a</code>). So it means that <code>a ~ b</code> (<code>a</code> is the same type as <code>b</code>).</p>\n\n<p>The type of the result the type of the output of the function, so <code>a -&gt; (a -&gt; a)</code>, or <code>b -&gt; (b -&gt; b)</code>. But since <code>b</code> is not more specific than <code>a</code>, both are fine.</p>\n\n<p>A less verbose expression of <code>a -&gt; (a -&gt; a)</code> is <code>a -&gt; a -&gt; a</code>.</p>\n\n<h1><code>f y :: (b -&gt; b) -&gt; (b -&gt; b) -&gt; b -&gt; b</code></h1>\n\n<p>So what about <code>f y</code>? As ingredients, we have:</p>\n\n<pre><code>f :: a -&gt; (a -&gt; (a -&gt; a))\ny :: b -&gt; b\n</code></pre>\n\n<p>Since <code>y</code> is the parameter of a function application with <code>f</code>, the type of <code>y</code> (<code>b -&gt; b</code>) is the same type as <code>a</code>, so that means that <code>a ~ (b -&gt; b)</code>.</p>\n\n<p>The type of output is thus:</p>\n\n<pre><code>f y :: a -&gt; (a -&gt; a)\n</code></pre>\n\n<p>or when we convert this:</p>\n\n<pre><code>f y :: (b -&gt; b) -&gt; ((b -&gt; b) -&gt; (b -&gt; b))\n</code></pre>\n\n<p>or less verbose:</p>\n\n<pre><code>f y :: (b -&gt; b) -&gt; (b -&gt; b) -&gt; b -&gt; b\n</code></pre>\n\n<h1><code>f z :: (b -&gt; b -&gt; b) -&gt; (b -&gt; b -&gt; b) -&gt; b -&gt; b -&gt; b</code></h1>\n\n<p>As ingredients we have:</p>\n\n<pre><code>f :: a -&gt; (a -&gt; (a -&gt; a))\nz :: b -&gt; (b -&gt; b)\n</code></pre>\n\n<p>So that means that for a function application <code>f z</code>, we thus have <code>a ~ (b -&gt; (b -&gt; b))</code>. The result is that the type of <code>f z</code> is:</p>\n\n<pre><code>f z :: a -&gt; (a -&gt; a)\n</code></pre>\n\n<p>or when we convert <code>a</code> to <code>(b -&gt; (b -&gt; b))</code>:</p>\n\n<pre><code>f z :: (b -&gt; (b -&gt; b)) -&gt; ((b -&gt; (b -&gt; b)) -&gt; (b -&gt; (b -&gt; b)))\n</code></pre>\n\n<p>or less verbose:</p>\n\n<pre><code>f z :: (b -&gt; b -&gt; b) -&gt; (b -&gt; b -&gt; b) -&gt; b -&gt; b -&gt; b\n</code></pre>\n"}], "owner": {"reputation": 850, "user_id": 5484068, "user_type": "registered", "accept_rate": 18, "profile_image": "https://www.gravatar.com/avatar/a2ec720ad8a18aa36c86f0d6db5672fb?s=128&d=identicon&r=PG&f=1", "display_name": "vincedjango", "link": "https://stackoverflow.com/users/5484068/vincedjango"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 51537806, "answer_count": 2, "score": 1, "last_activity_date": 1532604738, "creation_date": 1532603626, "question_id": 51537493, "link": "https://stackoverflow.com/questions/51537493/having-trouble-understanding-currying", "title": "Having trouble understanding currying", "body": "<p>In theory I understand what currying is, but in practice i'm puzzled with what I get in ghci.</p>\n\n<p>Let's look at the example below. First here are the types I'll be using.</p>\n\n<pre><code>Prelude&gt; :t f\nf :: a -&gt; a -&gt; a -&gt; a\n\nPrelude&gt; :t x\nx :: char\n\nPrelude&gt; :t y\ny :: char -&gt; char\n\nPrelude&gt; :t z\nz :: char -&gt; char -&gt; char\n</code></pre>\n\n<p>By doing the following, can you explain to me how I get these types?</p>\n\n<pre><code>Prelude&gt; :t f x\nf x :: a -&gt; a -&gt; a\n\nPrelude&gt; :t f y\nf y :: (char -&gt; char) -&gt; (char -&gt; char) -&gt; char -&gt; char\n\nPrelude&gt; :t f z\nf z\n  :: (char -&gt; char -&gt; char)\n     -&gt; (char -&gt; char -&gt; char) -&gt; char -&gt; char -&gt; char\n</code></pre>\n"}, {"tags": ["haskell", "math", "module"], "comments": [{"owner": {"reputation": 98400, "user_id": 3001761, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/feZwC.jpg?s=128&g=1", "display_name": "jonrsharpe", "link": "https://stackoverflow.com/users/3001761/jonrsharpe"}, "edited": false, "score": 7, "creation_date": 1532602026, "post_id": 51536971, "comment_id": 90041464, "body": "<a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:abs\" rel=\"nofollow noreferrer\"><code>abs</code></a>?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1532608849, "post_id": 51536971, "comment_id": 90045652, "body": "Don&#39;t return a <code>String</code>; if <code>getJOL</code> can only return two different values, then use a type that only <i>has</i> two values. You can use <code>Bool</code>, or a custom type with more descriptive values, like <code>data CalibrationStatus = GoodCalibration | BadCalibration</code>."}], "answers": [{"tags": [], "owner": {"reputation": 726, "user_id": 9767286, "user_type": "registered", "profile_image": "https://graph.facebook.com/10216280821678325/picture?type=large", "display_name": "Jones1220", "link": "https://stackoverflow.com/users/9767286/jones1220"}, "is_accepted": false, "score": 5, "last_activity_date": 1532602321, "creation_date": 1532602321, "answer_id": 51537098, "question_id": 51536971, "link": "https://stackoverflow.com/questions/51536971/how-do-you-write-the-mathematical-x-in-haskell/51537098#51537098", "title": "How do you write the mathematical |x| in haskell?", "body": "<p>Just use the absolute values <code>abs</code>. This will check, whether the absolute difference is lower than 20.</p>\n\n<pre><code>getJOL :: [Int] -&gt; String\ngetJOL [w,x,y,z] = if abs(x - w) &lt; 20 &amp;&amp; abs(y - x) &lt; 20 &amp;&amp; abs(z - y) &lt; 20\n                     then \"Good calibration\"\n                     else \"Bad calibration\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 10, "last_activity_date": 1532604482, "creation_date": 1532604482, "answer_id": 51537736, "question_id": 51536971, "link": "https://stackoverflow.com/questions/51536971/how-do-you-write-the-mathematical-x-in-haskell/51537736#51537736", "title": "How do you write the mathematical |x| in haskell?", "body": "<p>Yes, <code>abs</code> is the function you want. That's the conventional name for |<em>x</em>| in most languages.</p>\n\n<p>BTW you should probably not hard-code the case for exactly four list-elements. It's both unsafe (what if someone hands you a list with five elements?) and repetitive. Just <em>recurse</em> over the list, and abort when a pair with too large distance is found:</p>\n\n<pre><code>getJOL (w:x:ys)\n  | abs (x - w) &gt;= 20  = \"Bad calibration\"\ngetJOL (_:xs) = getJOL xs\ngetJOL [] = \"Good calibration\"\n</code></pre>\n"}], "owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1532604482, "creation_date": 1532601936, "last_edit_date": 1532602038, "question_id": 51536971, "link": "https://stackoverflow.com/questions/51536971/how-do-you-write-the-mathematical-x-in-haskell", "title": "How do you write the mathematical |x| in haskell?", "body": "<p>How do you get the <code>(x - y) &lt; 20</code> always positive?</p>\n\n<p>I'd like to make a condition for:</p>\n\n<pre><code>getJOL :: [Int] -&gt; String\ngetJOL [w,x,y,z] = if x - w &lt; 20 &amp;&amp; y - x &lt; 20 &amp;&amp; z - y &lt; 20\n                     then \"Good calibration\"\n                     else \"Bad calibration\"\n</code></pre>\n\n<p>The difference between two values must be positive.</p>\n"}, {"tags": ["haskell", "prompt", "read-eval-print-loop", "ghci"], "comments": [{"owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 0, "creation_date": 1532591076, "post_id": 51533529, "comment_id": 90034695, "body": "daniel is experiencing this problem, as shown in this screen shot: <a href=\"https://twitter.com/danielmkarlsson/status/1022258418252435456\" rel=\"nofollow noreferrer\">twitter.com/danielmkarlsson/status/1022258418252435456</a>"}, {"owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 0, "creation_date": 1532591737, "post_id": 51533529, "comment_id": 90035051, "body": "The reason I want to do this is to make it easier to read what I&#39;ve posted to ghci. Sometimes the prompt even takes up multiple lines, which isn&#39;t helpful, particularly when I&#39;ve evaluated a block of code."}, {"owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1532593895, "post_id": 51533529, "comment_id": 90036289, "body": "post edited to include ghci output."}], "answers": [{"comments": [{"owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 0, "creation_date": 1532594475, "post_id": 51534536, "comment_id": 90036683, "body": "Thanks. I tried that, but the output doesn&#39;t change. I&#39;ve updated the original post above to show output after set prompt-cont."}, {"owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 0, "creation_date": 1532594700, "post_id": 51534536, "comment_id": 90036878, "body": "Unfortunately none of these (prompt-cont, prompt-function, prompt-cont-function) changes the output."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 1, "creation_date": 1532594764, "post_id": 51534536, "comment_id": 90036924, "body": "Ah, you&#39;re probably using an old GHC version. These flags were renamed recently."}, {"owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 0, "creation_date": 1532594870, "post_id": 51534536, "comment_id": 90036984, "body": "OK. You found it. The one I need is set prompt2. Thanks for your help."}, {"owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 0, "creation_date": 1532598390, "post_id": 51534536, "comment_id": 90039229, "body": "Can you tell me what exactly the verbose version is telling me?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 0, "creation_date": 1532598424, "post_id": 51534536, "comment_id": 90039250, "body": "I don&#39;t know what you mean."}, {"owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 0, "creation_date": 1532598940, "post_id": 51534536, "comment_id": 90039572, "body": "Before setting prompt2, the prompt was verbose. What is the purpose of listing those modules, and which modules exactly is it listing?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 1, "creation_date": 1532599099, "post_id": 51534536, "comment_id": 90039684, "body": "I don&#39;t think there&#39;s any good purpose of this. Most people just don&#39;t use continuations in GHCi at all, and those who do probably have the prompt shortened in their <code>.ghci</code> file."}, {"owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "reply_to_user": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "edited": false, "score": 1, "creation_date": 1532619080, "post_id": 51534536, "comment_id": 90052734, "body": "@renick promp-cont by default shows you the currently loaded modules."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 5, "last_activity_date": 1532594706, "last_edit_date": 1532594706, "creation_date": 1532594318, "answer_id": 51534536, "question_id": 51533529, "link": "https://stackoverflow.com/questions/51533529/stopping-ghci-from-displaying-modules-in-the-prompt/51534536#51534536", "title": "stopping ghci from displaying modules in the prompt", "body": "<p>Ok, that is indeed a prompt problem, but not a <code>prompt</code> problem. <code>:{ :}</code> Continuations in GHCi use a different prompt, namely <code>prompt-cont</code>.</p>\n\n<pre><code>GHCi, version 8.2.1: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; :set prompt &gt;&gt;\n&gt;&gt;:set prompt-cont | \n&gt;&gt;:{\n|let foo :: [Int]\n|    foo = [37, 9, 18]\n|:}\n&gt;&gt;foo\n[37,9,18]\n</code></pre>\n\n<p>In older GHCi versions, <code>prompt-cont</code> was called <code>prompt2</code>:</p>\n\n<pre><code>GHCi, version 7.10.2: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; :set prompt &gt;&gt;\n&gt;&gt;:set prompt2 |\n&gt;&gt;:{\n|let foo :: [Int]\n|    foo = [37, 9, 18]\n|:}\n&gt;&gt;foo\n[37,9,18]\n</code></pre>\n\n<p>I recommend you also check out <a href=\"https://github.com/gibiansky/IHaskell\" rel=\"nofollow noreferrer\"><code>IHaskell</code></a> if you like a REPL with proper capability of defining functions in local code blocks. GHCi's support for this was always a bit fiddly.</p>\n"}], "owner": {"reputation": 667, "user_id": 226931, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/73c823d60aece86b5f2c6ed552f421ef?s=128&d=identicon&r=PG", "display_name": "renick", "link": "https://stackoverflow.com/users/226931/renick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 419, "favorite_count": 1, "accepted_answer_id": 51534536, "answer_count": 1, "score": 6, "last_activity_date": 1532594992, "creation_date": 1532591034, "last_edit_date": 1532594992, "question_id": 51533529, "link": "https://stackoverflow.com/questions/51533529/stopping-ghci-from-displaying-modules-in-the-prompt", "title": "stopping ghci from displaying modules in the prompt", "body": "<p>When I start a session in ghci, I use:</p>\n\n<pre><code>:set prompt &gt;&gt; \n</code></pre>\n\n<p>However, some function calls still display module names at the prompt when evaluated. I never want anything other than my custom prompt, I think. </p>\n\n<ol>\n<li>How do I suppress this display?</li>\n<li>What exactly is the prompt trying to show me? Why does it only do this for some function calls and not all of them? I don't understand the logic of what is happening.</li>\n</ol>\n\n<p>Actual ghci output:</p>\n\n<pre><code>&gt;&gt;m00 &lt;- iOIandRTfromPhrase 0.25 2 2 4 [2] 2 [2] 4.0 3                                                                                                       \n&gt;&gt;rs &lt;- newMMap [(\"100\",m00)]                                                                                                                                \n&gt;&gt;:{                                                                                                                                                         \n*ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List| let lsysTest rules axiom gen phraseLength = do                                                                                                                           \n*ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List|     f &lt;- flatRandomPattern gen rules axiom [0.25,0.5..1.5] phraseLength                                                                                                  \n*ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List|     return f                                                                                                                                                             \n*ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List| :}         \n&gt;&gt;:{                                                                                                                                                         \n*ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List| let lsysTestB rules axiom gen iois phraseLength = do \n*ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List|     f &lt;- flatRandomPattern gen rules axiom iois phraseLength\n*ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List|     return f                                                                                                                                                             \n*ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List| :}         \n&gt;&gt;         \n</code></pre>\n\n<p>Setting prompt-cont doesn't change the output, it seems.</p>\n\n<blockquote>\n  <blockquote>\n    <p>:set prompt-cont |<br>\n    Some flags have not been recognized: prompt-cont, |<br>\n    :{<br>\n    *ExperimentalConductive ExperimentalConductive Music.Theory.Bjorklund SuperDirtAction NonlinearEnsemble EnsembleNew Control.Concurrent Data.List| let lsys rules axiom gen phraseLength iOIs = do                                                                                                                          </p>\n  </blockquote>\n</blockquote>\n\n<p>Answer, from leftaroundabout below: older ghci needs set prompt2. Newer versions might require different commands, as described in comments below.</p>\n"}, {"tags": ["haskell", "haskell-stack", "haddock"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1532589682, "post_id": 51530084, "comment_id": 90033891, "body": "Does stack not cache <code>webservice</code> in this case? It certainly does if you just once <code>stack build</code> the project, doesn&#39;t it? If not, then this sounds like one more reason to use <code>cabal</code> instead during development. I say this often... <code>stack</code> is a great <i>release tool</i>, but IMO less than optimal for development."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1532591989, "post_id": 51530084, "comment_id": 90035188, "body": "if you&#39;re writing haddocks for a module deep within the module hierarchy, it change the source file, which triggers recompilation of a lot of files."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1532592151, "post_id": 51530084, "comment_id": 90035277, "body": "Yeah but surely not files <i>from another library</i>?"}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1532681725, "post_id": 51530084, "comment_id": 90075497, "body": "I think that you can get the comment parse errors a bit earlier if you add <code>-haddock</code> to your ghc options. To shorten the build time you can try <code>-fno-code</code>."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 1, "creation_date": 1532709552, "post_id": 51530084, "comment_id": 90091192, "body": "<code>-fno-code</code> doesn&#39;t really work. It &quot;builds&quot; the entire project, but aborts with the following before haddocks can be built - <code>Warning: the following files would be used as linker inputs, but linking is not being done:</code>"}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1532715479, "post_id": 51530084, "comment_id": 90093911, "body": "@SaurabhNanda: You may be interested in the ongoing <a href=\"https://summerofcode.withgoogle.com/organizations/5706672807346176/#4975710121230336\" rel=\"nofollow noreferrer\">Hi Haddock GSoC project</a>. If all goes well, haddock generation will soon no longer require rebuilding the library."}, {"owner": {"reputation": 661, "user_id": 1021134, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8724cd9cfab6d6818d3cf8c7f10400e5?s=128&d=identicon&r=PG", "display_name": "fredefox", "link": "https://stackoverflow.com/users/1021134/fredefox"}, "edited": false, "score": 0, "creation_date": 1532719616, "post_id": 51530084, "comment_id": 90095655, "body": "Not strictly what I think your after, but may still be helpful to you: use stacks <code>--file-watch</code> to ease your suffering somewhat."}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 301, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1532571536, "creation_date": 1532571536, "question_id": 51530084, "link": "https://stackoverflow.com/questions/51530084/getting-stack-to-build-only-haddock-docs-and-not-the-library-executable", "title": "Getting stack to build only haddock docs and not the library/executable", "body": "<p>Following up from <a href=\"https://stackoverflow.com/questions/50175379/how-to-exclude-dependencies-when-building-haddocks\">How to exclude dependencies when building haddocks?</a> I'm stuck in the following loop:</p>\n\n<ol>\n<li>Run the following command: <code>stack haddock --no-haddock-deps webservice</code></li>\n<li>Wait for the <code>webservice</code> library to be built</li>\n<li>Haddock then starts processing from the very first source file</li>\n<li>Haddock fails on some trivial parse error related to comments</li>\n<li>Fix such parse errors</li>\n<li>Go to step 1</li>\n</ol>\n\n<p>Is there any way to get stack/haddock to start from where it errored out, without going through steps (2) and (3) above?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 1, "creation_date": 1532635636, "post_id": 51529298, "comment_id": 90061237, "body": "Looking at the other answers, I think the code in the question is what I would rather read. It\u2019s basically obvious what this does and you won\u2019t need to change much if you suddenly realise that <code>runService2</code> needs to depend on <code>s1&#39;</code>."}], "answers": [{"tags": [], "owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "is_accepted": true, "score": 9, "last_activity_date": 1532571303, "last_edit_date": 1532571303, "creation_date": 1532565084, "answer_id": 51529411, "question_id": 51529298, "link": "https://stackoverflow.com/questions/51529298/idiomatic-stateful-loop-in-haskell/51529411#51529411", "title": "Idiomatic stateful loop in Haskell", "body": "<pre><code>main = fix (zipWithM ($) &gt;=&gt;)\n  [runService1, runService2, runService3]\n  [initState1 , initState2 , initState3 ]\n</code></pre>\n\n<p>Compare <code>fix . (&gt;&gt;=) :: IO a -&gt; IO b</code>, which is <code>forever</code>.</p>\n\n<p>Edit: This only works if <code>State1</code> = <code>State2</code> = <code>State3</code>. If not, <code>data-fix</code> allows:</p>\n\n<pre><code>main = fix (traverse unFix &gt;=&gt;)\n  [ana runService1 initState1, ana runService2 initState2, ana runService3 initState3]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4235, "user_id": 1518183, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/822d321afa518348af0f484e24eef47c?s=128&d=identicon&r=PG", "display_name": "user1518183", "link": "https://stackoverflow.com/users/1518183/user1518183"}, "edited": false, "score": 0, "creation_date": 1532614365, "post_id": 51534342, "comment_id": 90049536, "body": "Thank you very much, this should be the answer too."}, {"owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 1, "creation_date": 1532619623, "post_id": 51534342, "comment_id": 90053089, "body": "You can replace the explicit recursion in the last <code>loop</code> with a <code>forever</code> in front of the <code>do</code>."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 6, "last_activity_date": 1532619820, "last_edit_date": 1532619820, "creation_date": 1532593779, "answer_id": 51534342, "question_id": 51529298, "link": "https://stackoverflow.com/questions/51529298/idiomatic-stateful-loop-in-haskell/51534342#51534342", "title": "Idiomatic stateful loop in Haskell", "body": "<p>I practice, you probably want to shove that state in a suitable <em>state monad</em>. The <code>lens</code> library makes it easy to access that:</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell    #-}\nimport Control.Lens.TH\nimport Control.Monad.Trans.State\n\ndata AllState = AllState { _s\u2080 :: State0, _s\u2081 :: State1, _s\u2082 :: State2 }\nmakeLenses ''AllState\n\nloop :: StateT AllState IO ()\nloop = do\n   s\u2080 &lt;~ runService0 &lt;$&gt; use s\u2080\n   s\u2081 &lt;~ runService1 &lt;$&gt; use s\u2081\n   s\u2082 &lt;~ runService2 &lt;$&gt; use s\u2082\n   loop\n\nmain = evalStateT loop $ AllState initState0 initState1 initState2\n</code></pre>\n\n<p>As such, this doesn't buy you very much over your original code, but it becomes much more convenient if you also give the <code>runService</code> actions a suitable state-monad type:</p>\n\n<pre><code>runService0 :: StateT State0 IO ()\nrunService1 :: StateT State1 IO ()\nrunService2 :: StateT State2 IO ()\n</code></pre>\n\n<p>...then you can simply use the <a href=\"http://ekmett.github.io/lens/Control-Lens-Zoom.html#t:Zoom\" rel=\"nofollow noreferrer\"><code>zoom</code></a> mechanism:</p>\n\n<pre><code>loop :: StateT AllState IO ()\nloop = do\n   zoom s\u2080 runService0\n   zoom s\u2081 runService1\n   zoom s\u2082 runService2\n   loop\n</code></pre>\n\n<p>or as Gurkenglas suggests</p>\n\n<pre><code>loop = forever $ do\n   zoom s\u2080 runService0\n   zoom s\u2081 runService1\n   zoom s\u2082 runService2\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 1, "last_activity_date": 1532621770, "last_edit_date": 1532621770, "creation_date": 1532621362, "answer_id": 51543252, "question_id": 51529298, "link": "https://stackoverflow.com/questions/51529298/idiomatic-stateful-loop-in-haskell/51543252#51543252", "title": "Idiomatic stateful loop in Haskell", "body": "<p>This solution is not more succinct, but solves an infelicity of the original formulation: the \"unfolding\" of each process is commingled with the \"zipping together\" of all processes. It would be nice if we could define each process independently, and combine them later as we saw fit.</p>\n\n<p>We need the following auxiliary type:</p>\n\n<pre><code>newtype Iter = Iter (IO Iter)\n\nunfoldIter :: (s -&gt; IO s) -&gt; s -&gt; Iter\nunfoldIter f s = Iter (unfoldIter f &lt;$&gt; f s)\n\nrunIter :: Iter -&gt; IO ()\nrunIter (Iter action) = action &gt;&gt;= runIter\n\ndoNothingIter :: Iter\ndoNothingIter = unfoldIter return ()\n\nzipIter :: Iter -&gt; Iter -&gt; Iter\nzipIter (Iter action1) (Iter action2) =\n    Iter (zipIter &lt;$&gt; action1 &lt;*&gt; action2)\n\ninstance Monoid Iter where\n    mempty = doNothingIter\n    mappend = zipIter\n</code></pre>\n\n<p>Then <code>loop</code> becomes:</p>\n\n<pre><code>loop :: State1 -&gt; State2 -&gt; State3 -&gt; IO ()\nloop s1 s2 s3 = \n    runIter $ unfoldIter runService1 s1\n           &lt;&gt; unfoldIter runService2 s2\n           &lt;&gt; unfoldIter runService3 s3\n</code></pre>\n\n<hr>\n\n<p>If we don't want to define our own auxiliary type, we could use a streaming library that provided a \"zipping\" operation, like for example <a href=\"https://hackage.haskell.org/package/streaming-0.2.1.0/docs/Streaming-Prelude.html#g:8\" rel=\"nofollow noreferrer\">streaming</a> does.</p>\n"}], "owner": {"reputation": 4235, "user_id": 1518183, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/822d321afa518348af0f484e24eef47c?s=128&d=identicon&r=PG", "display_name": "user1518183", "link": "https://stackoverflow.com/users/1518183/user1518183"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 310, "favorite_count": 0, "accepted_answer_id": 51529411, "answer_count": 3, "score": 8, "last_activity_date": 1532621770, "creation_date": 1532563781, "question_id": 51529298, "link": "https://stackoverflow.com/questions/51529298/idiomatic-stateful-loop-in-haskell", "title": "Idiomatic stateful loop in Haskell", "body": "<p>Is there an idiomatic way to express following code in Haskell?</p>\n\n<pre><code>main :: IO ()\nmain = loop initState1 initState2 initState3\n\nloop :: State1 -&gt; State2 -&gt; State3 -&gt; IO ()\nloop s1 s2 s3 = do\n  s1' &lt;- runService1 s1\n  s2' &lt;- runService2 s2\n  s3' &lt;- runService3 s3\n  loop s1' s2' s3'\n</code></pre>\n\n<p>This code is very verbose so I probably doing something weird.</p>\n"}]