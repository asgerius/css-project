[{"tags": ["scala", "performance", "haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1518043390, "post_id": 48674498, "comment_id": 84347552, "body": "Although there can be some small optimizations with immutable objects, probably the largest performance boost is due to <i>lazy evaluation</i>. Instead of processing each function immediately, functions are only evaluated if we need the result. Although this could <i>technically</i> also be achieved by OO programming, etc. it requires a lot of bookkeeping. Personally I would say that using immutabl structures can increase the amount of data, since each time a new oobject is constructed, and the old ones are swapped out of the cache."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1518043428, "post_id": 48674498, "comment_id": 84347568, "body": "I think this question, whilst perfectly valid, might be better suited for <a href=\"https://cs.stackexchange.com/\">CS stack exchange</a>."}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1518043891, "post_id": 48674498, "comment_id": 84347748, "body": "Are you asking specifically about memory in the presence of multicore concurrency? I don&#39;t think any of those points can be said to be true in general, but I&#39;m only familiar with the GHC runtime."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518046728, "post_id": 48674498, "comment_id": 84348803, "body": "@WillemVanOnsem Lazy evaluation seems to be the most Haskell-like feature that TensorFlow makes use of."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518053530, "post_id": 48674498, "comment_id": 84350597, "body": "In practice, <i>GPUs</i> liberated us, and those run fairly typical, albeit very wide, SIMD architectures. If you&#39;re talking about day-to-day CPUs, the fastest languages are imperative ones for fairly fundamental reasons."}], "answers": [{"comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518053665, "post_id": 48674843, "comment_id": 84350628, "body": "There is nothing intrinsically functional about calling into a framework with optimised routines."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518054183, "post_id": 48674843, "comment_id": 84350747, "body": "@Veedrac Agreed, but there is something functional about, say, building an object to represent an expression, limiting it to operations without side effects, and evaluating it lazily."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518055161, "post_id": 48674843, "comment_id": 84350973, "body": "I wouldn&#39;t say that&#39;s a good description of your examples, eg. C++&#39;s STL or Tensorflow, which are both strict and side-effectful."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518055256, "post_id": 48674843, "comment_id": 84350996, "body": "Maybe you\u2019d accept expression templates in C++ as a better example (albeit strict)?"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518055588, "post_id": 48674843, "comment_id": 84351080, "body": "I don\u2019t want to get off on too much of a tangent, since there are both strict and lazy functional languages, but tensorflow can have lazy evaluation."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518056205, "post_id": 48674843, "comment_id": 84351215, "body": "I can get where you&#39;re coming from with expression templates, but it&#39;s quite tenuous; JIT compilation isn&#39;t functional programming just because the intermediates are tree-like data structures that get optimised in tenuously-functional ways, so the same surely applies here."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518056986, "post_id": 48674843, "comment_id": 84351385, "body": "I\u2019m not saying that C++ has turned into a functional language or anything (although you can use a subset of it for functional template metaprogramming), but would you agree there\u2019s an influence on the language, and it\u2019s in the direction of getting programmers to write higher-level functions? An example of what I was thinking of with the STL would be the limits on what you can do within an <code>&lt;algorithm&gt;</code> using a <code>parallel_unsequenced_policy</code>?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518057336, "post_id": 48674843, "comment_id": 84351476, "body": "A higher abstraction level, sure."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1518058156, "post_id": 48674843, "comment_id": 84351678, "body": "A higher abstraction level is true, but not what I was thinking of. Backus in \u201977 said that the <b>real</b> von Neumann bottleneck is that we had to think in terms of sequencing single-word operations. A fold or traversal are high-level abstractions, but they\u2019re still fundamentally sequences of single-word operations. But there are also a bunch of language extensions, motivated by hardware parallelism, that encourage programmers to write algorithms that operate on \u201cthe larger conceptual units of the task at hand.\u201d And these limit what functions can do in ways inspired by functional languages."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518088900, "post_id": 48674843, "comment_id": 84365653, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/164743/discussion-between-veedrac-and-davislor\">continue this discussion in chat</a>."}, {"owner": {"reputation": 247, "user_id": 5798781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1602009eb7d0d616746170d6a7f636d9?s=128&d=identicon&r=PG&f=1", "display_name": "XOXO", "link": "https://stackoverflow.com/users/5798781/xoxo"}, "edited": false, "score": 1, "creation_date": 1518106772, "post_id": 48674843, "comment_id": 84378228, "body": "Thanks for putting togethor this useful answer to what is obviously a point of contention, it will certainly help me."}], "tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": true, "score": 15, "last_activity_date": 1518114479, "last_edit_date": 1518114479, "creation_date": 1518044976, "answer_id": 48674843, "question_id": 48674498, "link": "https://stackoverflow.com/questions/48674498/does-functional-programming-reduce-the-von-neumann-bottleneck/48674843#48674843", "title": "Does functional programming reduce the Von Neumann bottleneck?", "body": "<p>Oh man, that\u2019s a classic.  <a href=\"http://www.thocp.net/biographies/papers/backus_turingaward_lecture.pdf\" rel=\"noreferrer\">John Backus\u2019 1977 ACM Turing Award lecture is all about that: \u201cCan Programming Be Liberated from the von Neumann Style? A Functional Style and Its Algebra of Programs.\u201d</a>  (The paper, \u201cLambda: The Ultimate Goto,\u201d was presented at the same conference.)</p>\n\n<p>I\u2019m guessing that either you or whoever raised this question had that lecture in mind.  What Backus called \u201cthe von Neumann bottleneck\u201d was \u201ca connecting tube that can transmit a single word between the CPU and the store (and send an address to the store).\u201d</p>\n\n<p>CPUs do still have a data bus, although in modern computers, it\u2019s usually wide enough to hold a vector of words.  Nor have we gotten away from the problem that we need to store and look up a lot of addresses, such as the links to daughter nodes of lists and trees.</p>\n\n<p>But Backus was not just talking about physical architecture (emphasis added):</p>\n\n<blockquote>\n  <p>Not only is this tube a literal bottleneck for the data traffic of a problem, but, <strong>more importantly, it is an intellectual bottleneck that has kept us tied to word-at-a-time thinking</strong> instead of encouraging us to think in terms of the larger conceptual units of the task at hand. Thus programming is basically planning and detailing the enormous traffic of words through the von Neumann bottleneck, and much of that traffic concerns not significant data itself but where to find it. </p>\n</blockquote>\n\n<p>In that sense, functional programming has been largely successful at getting people to write higher-level functions, such as maps and reductions, rather than \u201cword-at-a-time thinking\u201d such as the <code>for</code> loops of C.  If you try to perform an operation on a lot of data in C, today, then just like in 1977, you need to write it as a sequential loop.  Potentially, each iteration of the loop could do anything to any element of the array, or any other program state, or even muck around with the loop variable itself, and any pointer could potentially alias any of these variables.  At the time, that was true of the <code>DO</code> loops of Backus\u2019 first high-level language, Fortran, as well, except maybe the part about pointer aliasing.  To get good performance today, you try to help the compiler figure out that, no, the loop doesn\u2019t really need to run in the order you literally specified: this is an operation it can parallelize, like a reduction or a transformation of some other array or a pure function of the loop index alone.</p>\n\n<p>But that\u2019s no longer a good fit for the physical architecture of modern computers, which are all vectorized symmetric multiprocessors\u2014like the Cray supercomputers of the late \u201970s, but faster.</p>\n\n<p>Indeed, the C++ Standard Template Library now has algorithms on containers that are totally independent of the implementation details or the internal representation of the data, and Backus\u2019 own creation, Fortran, added <code>FORALL</code> and <code>PURE</code> in 1995.</p>\n\n<p>When you look at today\u2019s big data problems, you see that the tools we use to solve them resemble functional idioms a lot more than the imperative languages Backus designed in the \u201950s and \u201960s.  You wouldn\u2019t write a bunch of <code>for</code> loops to do machine learning in 2018; you\u2019d define a model in something like Tensorflow and evaluate it.  If you want to work with big data with a lot of processors at once, it\u2019s extremely helpful to know that your operations are associative, and therefore can be grouped in any order and then combined, allowing for automatic parallelization and vectorization.  Or that a data structure can be lock-free and wait-free because it is immutable.  Or that a transformation on a vector is a map that can be implemented with SIMD instructions on another vector.</p>\n\n<h3>Examples</h3>\n\n<p>Last year, I wrote a couple short programs in several different languages to solve a problem that involved finding the coefficients that minimized a cubic polynomial.  A brute-force approach in C11 looked, in relevant part, like this:</p>\n\n<pre><code>      static variable_t ys[MOST_COEFFS];\n\n//      #pragma omp simd safelen(MOST_COEFFS)\n      for ( size_t j = 0; j &lt; n; ++j )\n        ys[j] = ((a3s[j]*t + a2s[j])*t + a1s[j])*t + a0s[j];\n\n      variable_t result = ys[0];\n\n//      #pragma omp simd reduction(min:y)\n      for ( size_t j = 1; j &lt; n; ++j ) {\n        const variable_t y = ys[j];\n        if (y &lt; result)\n          result = y;\n      } // end for j\n</code></pre>\n\n<p>The corresponding section of the C++14 version looked like this:</p>\n\n<pre><code>  const variable_t result =\n    (((a3s*t + a2s)*t + a1s)*t + a0s).min();\n</code></pre>\n\n<p>In this case, the coefficient vectors were <code>std::valarray</code> objects, a special type of object in the STL that have restrictions on how their components can be aliased, and whose member operations are limited, and a lot of the restrictions on what operations are safe to vectorize sound a lot like the restrictions on pure functions.  The list of allowed reductions, like <code>.min()</code> at the end, is, <a href=\"https://cs.stackexchange.com/questions/83360/what-property-of-cons-allows-elimination-of-tail-recursion-modulo-cons/86036#86036\">not coincidentally</a>, similar to the <code>instances</code> of <code>Data.Semigroup</code>.  You\u2019ll see a similar story these days if you look through <code>&lt;algorithm&gt;</code> in the STL.</p>\n\n<p>Now, I\u2019m not going to claim that C++ has become a functional language.  As it happened, I made all the objects in the program immutable and automatically collected by RIIA, but that\u2019s just because I\u2019ve had a lot of exposure to functional programming and that\u2019s how I like to code now.  The language itself doesn\u2019t impose such things as immutability, garbage collection or absence of side-effects.  But when we look at what Backus in 1977 said was the <em>real</em> von Neumann bottleneck, \u201can intellectual bottleneck that has kept us tied to word-at-a-time thinking instead of encouraging us to think in terms of the larger conceptual units of the task at hand,\u201d does that apply to the C++ version?  The operations are linear algebra on coefficient vectors, not word-at-a-time.  And the ideas C++ borrowed to do this\u2014and the ideas behind expression templates even more so\u2014are largely functional concepts.  (Compare that snippet to how it would\u2019ve looked in K&amp;R C, and how Backus defined a functional program to compute inner product in section 5.2 of his Turing Award lecture in 1977.)</p>\n\n<p>I also wrote a version in Haskell, but I don\u2019t think it\u2019s as good an example of escaping that kind of von Neumann bottleneck.</p>\n\n<p>It\u2019s absolutely possible to write functional code that meets all of Backus\u2019 descriptions of the von Neumann bottleneck.  Looking back on the code I wrote this week, I\u2019ve done it myself.  A fold or traversal that builds a list?  They\u2019re high-level abstractions, but they\u2019re also defined as sequences of word-at-a-time operations, and half or more of the data passed through the bottleneck when you create and traverse a singly-linked list is the addresses of other data!  They\u2019re efficient ways to put data through the von Neumann bottleneck, and that\u2019s basically why I did it: they\u2019re great patterns for programming von Neumann machines.</p>\n\n<p>If we\u2019re interested in coding a different way, however, functional programming gives us tools to do so.  (I\u2019m not going to claim it\u2019s the only thing that does.)  Express a reduction as a <code>foldMap</code>, apply it to the right kind of vector, and the associativity of the monoidal operation lets you split up the problem into chunks of whatever size you want and combine the pieces later.  Make an operation a <code>map</code> rather than a fold, on a data structure other than a singly-linked list, and it can be automatically parallelized or vectorized.  Or transformed in other ways that produce the same result, since we\u2019ve expressed the result at a higher level of abstraction, not a particular sequence of word-at-a-time operations.</p>\n\n<p>My examples so far have been about parallel programming, but I\u2019m sure quantum computing will shake up what programs look like a lot more fundamentally.</p>\n"}], "owner": {"reputation": 247, "user_id": 5798781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1602009eb7d0d616746170d6a7f636d9?s=128&d=identicon&r=PG&f=1", "display_name": "XOXO", "link": "https://stackoverflow.com/users/5798781/xoxo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 688, "favorite_count": 1, "accepted_answer_id": 48674843, "answer_count": 1, "score": 8, "last_activity_date": 1518114479, "creation_date": 1518043119, "last_edit_date": 1518043525, "question_id": 48674498, "link": "https://stackoverflow.com/questions/48674498/does-functional-programming-reduce-the-von-neumann-bottleneck", "title": "Does functional programming reduce the Von Neumann bottleneck?", "body": "<p>I believe (from doing some reading) that reading/writing data across the bus from CPU caches to main memory places a considerable constraint on how fast a computational task (which needs to move data across the bus) can complete - the <em>Von Neumann bottleneck</em>.</p>\n\n<p>I have come across a few articles so far which mention that functional programming can be more performant than other paradigms like the imperative approach eg. OO (in certain models of computation).</p>\n\n<p>Can someone please explain some of the ways that purely functional programming can reduce this bottleneck? ie. are any of the following points found (in general) to be true? </p>\n\n<ol>\n<li><p>Using immutable data structures means generally less data is moving across that bus - less writes?</p></li>\n<li><p>Using immutable data structures means that data is possibly more likely to be hanging around in CPU cache - because less updates to existing state means less flushing of objects from cache?</p></li>\n<li><p>Is it possible that using immutable data structures means that we may often never even read the data back from main memory because we may create the object during computation and have it in local cache and then during same time slice create a new immutable object off of it (if there is a need for an update) and we then never use original object  ie. we are working a lot more with objects that are sitting in local cache.</p></li>\n</ol>\n"}, {"tags": ["haskell", "ghc", "ghci"], "comments": [{"owner": {"reputation": 1758, "user_id": 8724882, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/d88f8198fb4ae68267aced911e3533f9?s=128&d=identicon&r=PG&f=1", "display_name": "sandwood", "link": "https://stackoverflow.com/users/8724882/sandwood"}, "edited": false, "score": 1, "creation_date": 1523865549, "post_id": 48674160, "comment_id": 86718948, "body": "I notice that ghci does not propose :type-at command when typing :t followed by completion. I had to find your post to discover the existence of this feature"}, {"owner": {"reputation": 98, "user_id": 9224699, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ayZoN.png?s=128&g=1", "display_name": "Commodore64", "link": "https://stackoverflow.com/users/9224699/commodore64"}, "edited": false, "score": 1, "creation_date": 1609190925, "post_id": 48674160, "comment_id": 115773706, "body": "For future reference, here&#39;s the link in the docs (it&#39;s hard to search for hyphenated terms on the interwebs): <a href=\"https://downloads.haskell.org/ghc/latest/docs/html/users_guide/ghci.html#ghci-cmd-:type-at\" rel=\"nofollow noreferrer\">downloads.haskell.org/ghc/latest/docs/html/users_guide/&hellip;</a>. Also: both row- and column are 1-indexed, the start location is inclusive, the end location exclusive."}], "answers": [{"comments": [{"owner": {"reputation": 778, "user_id": 6499999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48bb54922bb8f6ad1b5ba41fd3e9bf1b?s=128&d=identicon&r=PG", "display_name": "JoL", "link": "https://stackoverflow.com/users/6499999/jol"}, "edited": false, "score": 0, "creation_date": 1518042726, "post_id": 48674341, "comment_id": 84347252, "body": "Wow, that&#39;s embarrassing. So it was just an off-by-one error. :P"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 778, "user_id": 6499999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48bb54922bb8f6ad1b5ba41fd3e9bf1b?s=128&d=identicon&r=PG", "display_name": "JoL", "link": "https://stackoverflow.com/users/6499999/jol"}, "edited": false, "score": 0, "creation_date": 1518042790, "post_id": 48674341, "comment_id": 84347278, "body": "Not well-documented."}, {"owner": {"reputation": 778, "user_id": 6499999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48bb54922bb8f6ad1b5ba41fd3e9bf1b?s=128&d=identicon&r=PG", "display_name": "JoL", "link": "https://stackoverflow.com/users/6499999/jol"}, "edited": false, "score": 0, "creation_date": 1518042888, "post_id": 48674341, "comment_id": 84347326, "body": "It definetely could be better documented. I tried using 0-based indices, but I didn&#39;t think about just moving the right bound."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 778, "user_id": 6499999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48bb54922bb8f6ad1b5ba41fd3e9bf1b?s=128&d=identicon&r=PG", "display_name": "JoL", "link": "https://stackoverflow.com/users/6499999/jol"}, "edited": false, "score": 0, "creation_date": 1518042956, "post_id": 48674341, "comment_id": 84347354, "body": "But thanks for making me aware that exists. I\u2019ve been using typed holes, but might even use it someday."}], "tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": true, "score": 6, "last_activity_date": 1518042462, "creation_date": 1518042462, "answer_id": 48674341, "question_id": 48674160, "link": "https://stackoverflow.com/questions/48674160/how-to-get-the-type-of-an-arbitrary-expression-in-a-file-in-haskell/48674341#48674341", "title": "How to get the type of an arbitrary expression in a file in Haskell?", "body": "<p>When I try <code>:type-at thing.hs 5 8 5 14</code>, I get <code>:: () -&gt; IO ()</code>.  <code>:type-at thing.hs 5 14 5 24</code> also works, as does <code>:type-at thing.hs 5 14 6 1</code>.</p>\n\n<p>So, the right bound should be the cell one past the end of the expression.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1518042538, "creation_date": 1518042538, "answer_id": 48674364, "question_id": 48674160, "link": "https://stackoverflow.com/questions/48674160/how-to-get-the-type-of-an-arbitrary-expression-in-a-file-in-haskell/48674364#48674364", "title": "How to get the type of an arbitrary expression in a file in Haskell?", "body": "<p>Sometimes one can simply use a typed hole <em>in front</em> of the expression you are curious about works, using the hole as if it were a function. For instance </p>\n\n<pre><code>return (f 3)\n----&gt;\nreturn (_ (f 3))\n</code></pre>\n\n<p>In this way, the hole will be typed with something like <code>WantedType -&gt; OtherType</code>, where <code>WantedType</code> is the type of <code>f 3</code>.</p>\n\n<p>This is not ideal, though, since the hole will prevent type inference to do its job. I.e., sometimes the type of <code>f 3</code> is polymorphic, and its context forces it to be instantiated. For instance, <code>4 + length []</code> makes <code>4</code> to be <code>Int</code>, even if it can be of any <code>Num</code> type. Using <code>(_ 4) + length []</code> introduces a function between the arbitrary <code>Num</code> type (which will get defaulted to <code>Integer</code>) and the needed <code>Int</code>, making type inference misbehave.</p>\n\n<p>Instead, an alternative could be to use the translation</p>\n\n<pre><code>return (f 3)\n------&gt;\nreturn (f 3 `asTypeOf` _)\n</code></pre>\n\n<p>This should play better with the type inference, and return the right\u2122 type.</p>\n\n<p>Of course, figuring out how <code>:type-at</code> works should be better. Still, the type hole trick is not too inconvenient when you have an editor already open at the spot.</p>\n"}, {"tags": [], "owner": {"reputation": 1758, "user_id": 8724882, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/d88f8198fb4ae68267aced911e3533f9?s=128&d=identicon&r=PG&f=1", "display_name": "sandwood", "link": "https://stackoverflow.com/users/8724882/sandwood"}, "is_accepted": false, "score": 0, "last_activity_date": 1523866760, "creation_date": 1523866760, "answer_id": 49852605, "question_id": 48674160, "link": "https://stackoverflow.com/questions/48674160/how-to-get-the-type-of-an-arbitrary-expression-in-a-file-in-haskell/49852605#49852605", "title": "How to get the type of an arbitrary expression in a file in Haskell?", "body": "<p>I believe @chi answer can be improved (by avoiding the type inference issue ) by using a Dummy unary type constructor which does not implement the Show typeclass and using it with the print function : </p>\n\n<pre><code>someExpressionWeSearchType = Right $ Just (1 , [\"Foo\"] , getLine)\n\ndata Dummy a = Dummy a\n\n\nmain = do\n  putStrLn \"Here we go\"\n  --some code here...\n  let exp  = someExpressionWeSearchType\n  --Debug stuff =&gt; \n  print $ Dummy exp\n\n  -- other code here \n  putStrLn \"Done\"\n</code></pre>\n\n<p>This gives the following result when loaded : </p>\n\n<pre><code>Prelude&gt; :l test.hs\n[1 of 1] Compiling Main             ( test.hs, interpreted )\n\ntest.hs:11:3: error:\n    * No instance for (Show\n                         (Dummy (Either a0 (Maybe (Bool, [[Char]], IO String)))))\n        arising from a use of `print'\n    * In a stmt of a 'do' block: print $ Dummy exp\n      In the expression:\n        do putStrLn \"Here we go\"\n           let exp = someExpressionWeSearchType\n           print $ Dummy exp\n           putStrLn \"Done\"\n      In an equation for `main':\n          main\n            = do putStrLn \"Here we go\"\n                 let exp = ...\n                 print $ Dummy exp\n                 ....\n   |\n11 |   print $ Dummy exp\n   |   ^^^^^^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>So we can see that type inside the Dummy : <strong>Either a0 (Maybe (Bool, [[Char]], IO String))</strong></p>\n"}], "owner": {"reputation": 778, "user_id": 6499999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48bb54922bb8f6ad1b5ba41fd3e9bf1b?s=128&d=identicon&r=PG", "display_name": "JoL", "link": "https://stackoverflow.com/users/6499999/jol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 245, "favorite_count": 0, "accepted_answer_id": 48674341, "answer_count": 3, "score": 9, "last_activity_date": 1523866760, "creation_date": 1518041642, "question_id": 48674160, "link": "https://stackoverflow.com/questions/48674160/how-to-get-the-type-of-an-arbitrary-expression-in-a-file-in-haskell", "title": "How to get the type of an arbitrary expression in a file in Haskell?", "body": "<p><code>:type</code> is not enough because the expression I want might include locally defined variables like things assigned with <code>&lt;-</code>, <code>let</code> or <code>where</code>. Typed holes (replacing the expression with <code>_</code> and loading with ghc) are close, but they give you what's accepted there, which might be more general than the expression you're curious about.</p>\n\n<p>I thought I found the jackpot with <code>:type-at</code>, but I can't get it to work like I'd hope. With this file, named \"thing.hs\":</p>\n\n<pre><code>something :: ()\nsomething = ()\n\nmain :: IO ()\nmain = return something\n</code></pre>\n\n<p>This is the result I get when using <code>:type-at</code>:</p>\n\n<pre><code>&gt; :set +c\n&gt; :l thing.hs\n[1 of 1] Compiling Main             ( thing.hs, interpreted )\nOk, one module loaded.\nCollecting type info for 1 module(s) ... \n&gt; :type-at thing.hs 5 8 5 13 -- \"return\" on last line\n\n&lt;no location info&gt;: error: not an expression: \u2018\u2019\n&gt; :type-at thing.hs 5 1 5 4 -- \"main\" on last line\n :: IO ()\n&gt; :type-at thing.hs 5 15 5 23 -- \"something\" on last line\n\n&lt;no location info&gt;: error: not an expression: \u2018\u2019\n</code></pre>\n\n<p>That's basically the same as using <code>:type</code>. I was hoping I'd even be able to pass it the span for <code>return something</code> and get <code>Monad a =&gt; a ()</code> or <code>IO ()</code>. Would be even cooler if one could select between seeing the type of the expression alone and the type of the expression \"at that point\" (after being restricted by the type that would appear with a type hole), but either would be fine.</p>\n"}, {"tags": ["string", "haskell", "matching"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1518032772, "post_id": 48672029, "comment_id": 84342284, "body": "You can compile with <code>-Wall</code> and it will show which patterns are missing, but that being said, you make this function terribly complex. I would advice to use a <i>push down automaton</i>, so with a list (as stack) as accumulator."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1518032864, "post_id": 48672029, "comment_id": 84342346, "body": "Furthermore this will not always work since the <code>span (&#47;= &quot;)&quot;)</code> will cut off from the moment it finds a closing bracket, but if you write <code>&quot;foo(bar(qux))&quot;</code>, then it will thus find <code>bar(qux</code> as inner content."}, {"owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518033111, "post_id": 48672029, "comment_id": 84342494, "body": "can you be more specific with the acumulator idea? I&#39;m actually a bit lost on how to implement it"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518037066, "post_id": 48672029, "comment_id": 84344532, "body": "You can implement a stack as a list where the head of the list is the top of the stack.  You push with <code>cons</code> and pop with <code>head</code>.  Or you can write a recursive-descent parser and use the built-in stack."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 1, "creation_date": 1518037258, "post_id": 48672029, "comment_id": 84344653, "body": "But you seem to be having a lot of problems with a part of this assignment that is kind of ancillary to the main point you\u2019re supposed to be learning. You might find it valuable to come back and write a parser later by hand, but maybe you want to take the easy way out here."}], "answers": [{"comments": [{"owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "edited": false, "score": 0, "creation_date": 1518036197, "post_id": 48672190, "comment_id": 84344104, "body": "The problema is, I cannot use the parsec library, because I&#39;m only allowed to use prelude functions"}, {"owner": {"reputation": 603, "user_id": 9309570, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TDfkA.jpg?s=128&g=1", "display_name": "mpetruska", "link": "https://stackoverflow.com/users/9309570/mpetruska"}, "reply_to_user": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "edited": false, "score": 0, "creation_date": 1518078518, "post_id": 48672190, "comment_id": 84358624, "body": "Right, I see, may I suggest this one, then? Error = String <code>f :: [String] -&gt; Either Error FProp</code> <code>...</code> <code>f _ = Left &quot;Unrecognized expression&quot;</code>"}], "tags": [], "owner": {"reputation": 603, "user_id": 9309570, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TDfkA.jpg?s=128&g=1", "display_name": "mpetruska", "link": "https://stackoverflow.com/users/9309570/mpetruska"}, "is_accepted": false, "score": 3, "last_activity_date": 1518033214, "creation_date": 1518033214, "answer_id": 48672190, "question_id": 48672029, "link": "https://stackoverflow.com/questions/48672029/non-exhaustive-pattern-error-haskell/48672190#48672190", "title": "non-exhaustive pattern error haskell", "body": "<p>The function you implemented is partial, not all cases are covered. You need to add a catch-all case and return an error.\nTo be able to do that, the function should return a type that allows modelling parsing failures (like <code>Either Error FProp</code>).</p>\n\n<p>In my opinion you can create a much better parser with the <a href=\"https://wiki.haskell.org/Parsec\" rel=\"nofollow noreferrer\">parsec library</a>. There are also many <a href=\"http://jakewheat.github.io/intro_to_parsing/\" rel=\"nofollow noreferrer\">great tutorials</a> you might want to investigate.</p>\n"}], "owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1518055330, "creation_date": 1518032611, "last_edit_date": 1518055330, "question_id": 48672029, "link": "https://stackoverflow.com/questions/48672029/non-exhaustive-pattern-error-haskell", "title": "non-exhaustive pattern error haskell", "body": "<p>I'm trying to parse an input from user into my datatype:</p>\n\n<pre><code>type Var = String\ndata FProp = V Var\n            | No FProp\n            | Y FProp FProp\n            | O FProp FProp\n            | Si FProp FProp\n            | Sii FProp FProp deriving Read\n</code></pre>\n\n<p>using this function, by pattern matching:</p>\n\n<pre><code>f:: [String] -&gt; FProp\nf(\"(\":\"S\":\"i\":\"(\":xs) = (Si (let x = fst (span (/= \")\") xs) in f x) (let y = snd (span (/= \")\") xs) in f y))\nf(\"(\":\"Y\":\"(\":xs) = (Y (let x = fst (span (/= \")\") xs) in f x) (let y = snd (span (/= \")\") xs) in f y))\nf(\"(\":\"S\":\"i\":\"i\":\"(\":xs) = (Sii (let x = fst (span (/= \")\") xs) in f x) (let y = snd (span (/= \")\") xs) in f y))\nf(\"(\":\"O\":\"(\":xs) = (O (let x = fst (span (/= \")\") xs) in f x) (let y = snd (span (/= \")\") xs) in f y))\nf(\"(\":\"N\":\"O\":\"(\":xs) = (No (f xs))\nf (\"(\":\"V\":\"(\":xs) = (V(head xs))\n</code></pre>\n\n<p>The input would look like: \"(Si (V(q)) (No (V(p))))\" (equivalent to the formula: q -> \u00acp).</p>\n\n<p>It seemed like everything went fine, when I got this error: <strong>Non-exhaustive patterns in function f</strong>\n\u00bfCan I get some help in order to solve this?\nI think it might have to do with the way I defined the last recursive case (the one for V).</p>\n"}, {"tags": ["list", "haskell", "recursion"], "comments": [{"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 1, "creation_date": 1518030524, "post_id": 48671304, "comment_id": 84340980, "body": "Say I call <code>shuffle 2 [1,2,3,4,5,6]</code> and tomorrow I call it again with the same input. Do you want/expect the outcome to be the same? Because that is what func prog / Haskell  is all about (and more of course)."}, {"owner": {"reputation": 83, "user_id": 9301564, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a9f1505cec5669873e68f463059234?s=128&d=identicon&r=PG&f=1", "display_name": "Alowishious", "link": "https://stackoverflow.com/users/9301564/alowishious"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1518030714, "post_id": 48671304, "comment_id": 84341076, "body": "@Elmex80s I would expect the output to be the same, yes."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1518030833, "post_id": 48671304, "comment_id": 84341146, "body": "Splitting a list: <code>Data.List.splitAt</code>."}], "answers": [{"tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 1, "last_activity_date": 1518035445, "creation_date": 1518035445, "answer_id": 48672731, "question_id": 48671304, "link": "https://stackoverflow.com/questions/48671304/splitting-a-list-into-parts-then-shuffling-those-parts-haskell/48672731#48672731", "title": "Splitting a list into parts then shuffling those parts: Haskell", "body": "<p>not a good shuffle, your first and last elements never move.</p>\n\n<p>something like this?</p>\n\n<pre><code>&gt; let shuffle 0 x = x\n      shuffle n x = shuffle (n-1) $ uncurry riffle $ splitAt (length x `div` 2) x\n</code></pre>\n\n<p>or with iterate</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 5, "last_activity_date": 1518084966, "last_edit_date": 1518084966, "creation_date": 1518036943, "answer_id": 48673070, "question_id": 48671304, "link": "https://stackoverflow.com/questions/48671304/splitting-a-list-into-parts-then-shuffling-those-parts-haskell/48673070#48673070", "title": "Splitting a list into parts then shuffling those parts: Haskell", "body": "<p>To split a list in half, with both halves in order, you should generally use a tortoise and hare algorithm.</p>\n\n<pre><code>-- split2 xs = splitAt (length xs `quot` 2) xs\nsplit2 :: [a] -&gt; ([a], [a])\nsplit2 xs0 = go xs0 xs0\n  where\n    go (_:_:hs) (t:ts) =\n      let (front, rear) = go hs ts\n      in (t:front, rear)\n    go _ ts = ([], ts)\n</code></pre>\n\n<p>This should generally be more efficient than calculating the length of the list and dividing by two. It will also work even if the list is infinite.</p>\n\n<hr>\n\n<p>In this case, however, you don't need a lazy version; you're going to use the second half pretty much immediately. So you can use this more Lisp/Scheme/ML-style version if you prefer:</p>\n\n<pre><code>split2' :: [a] -&gt; ([a], [a])\nsplit2' xs0 = go [] xs0 xs0\n  where\n    go front (_:_:hs) (t:ts) = go (t:front) hs ts\n    go front _ ts = (reverse front, ts)\n</code></pre>\n\n<p>I'm not sure which will be faster, but <code>split2'</code> is less susceptible to space leaks introduced by compiler transformations.</p>\n"}], "owner": {"reputation": 83, "user_id": 9301564, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a9f1505cec5669873e68f463059234?s=128&d=identicon&r=PG&f=1", "display_name": "Alowishious", "link": "https://stackoverflow.com/users/9301564/alowishious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 305, "favorite_count": 0, "accepted_answer_id": 48673070, "answer_count": 2, "score": 0, "last_activity_date": 1518084966, "creation_date": 1518029704, "last_edit_date": 1518084646, "question_id": 48671304, "link": "https://stackoverflow.com/questions/48671304/splitting-a-list-into-parts-then-shuffling-those-parts-haskell", "title": "Splitting a list into parts then shuffling those parts: Haskell", "body": "<p>The question is: Define a function <code>shuffle :: Int -&gt; [a] -&gt; [a]</code> that takes a\nnatural number n and an even-lengthed list, and splits and then riffles the list n times. For example, <code>shuffle 2 [1,2,3,4,5,6] = [1,5,4,3,2,6]</code>. I have a function riffle that works accordingly, but I don't know how to split a list.</p>\n\n<p>My riffle function is:</p>\n\n<pre><code>riffle :: [a] -&gt; [a] -&gt; [a]\nriffle [] ys = ys\nriffle xs [] = xs\nriffle (x:xs)(y:ys) = x : y : riffle xs ys \n</code></pre>\n\n<p>I started shuffle, I think, here is what I have:</p>\n\n<pre><code>shuffle :: Int -&gt; [a] -&gt; [a]\nshuffle [] = []\nshuffle a xs = (length xs) 'div' a\n</code></pre>\n\n<p>I was attempting to take a list and divide into parts specified \"a\". I'm new to Haskell and am still not certain how it all works: All help is appreciated.</p>\n"}, {"tags": ["list", "haskell", "types"], "comments": [{"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 1, "creation_date": 1518027084, "post_id": 48670614, "comment_id": 84339023, "body": "What &quot;exercise&quot; are you doing? Your thinking is pretty much spot on."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 3, "creation_date": 1518027085, "post_id": 48670614, "comment_id": 84339025, "body": "Where did you get that exercise? My best guess is that they thought the type was something like <code>[Show a =&gt; a]</code>, which isn\u2019t how Haskell works, as you said."}, {"owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "edited": false, "score": 0, "creation_date": 1518027257, "post_id": 48670614, "comment_id": 84339130, "body": "The exercise is meant as exam-preparation and was given and answered from my lecturer."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518027442, "post_id": 48670614, "comment_id": 84339248, "body": "Well strictly speaking we can make <code>instance Num Bool</code>, and <code>instance IsString Bool</code>, and thus construct a list of booleans with this."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1518027460, "post_id": 48670614, "comment_id": 84339263, "body": "Your lecturer might just be wrong, then\u2026? (Fun fact: you can make it work by making <code>IsString Bool</code> and <code>Num Bool</code> instances, but that has nothing to do with <code>Show</code>.)"}, {"owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "edited": false, "score": 0, "creation_date": 1518027941, "post_id": 48670614, "comment_id": 84339527, "body": "I sent him a message and asked for an explanation. I will let you know his answer."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1518038931, "post_id": 48670614, "comment_id": 84345524, "body": "@WillemVanOnsem I completely agree, but asking questions which rely on subtle GHC extensions like overloaded strings fells very un-academic to me. In my experience, a lecturer usually focuses on the general CS ideas rather than the details of a particular language/technology/piece of software which become completely irrelevant in other contexts. I could understand relying on overloaded numeric literals, at most, but not overloaded strings. That just sounds evil. I wonder if the OP correctly understood the question/answer -- it looks quite strange indeed."}, {"owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "edited": false, "score": 0, "creation_date": 1518086743, "post_id": 48670614, "comment_id": 84364207, "body": "I gave you the whole information that I am given in my post. &quot;What is the type of <code>[&quot;xyz&quot;,False,42]</code>? Is that a valid expression in Haskell at all?&quot; with a hint on the solution: &quot;Yes, it is. Show-Instance!&quot;. As I asked my lecturer about this exercise he pointed me to Existential types. I wrote an answer that uses an instance of Show with Existential types and I think that is what my lecturer wanted. Anyway, my answer would still be &quot;no, without extension and further ado this is no valid expression in Haskell.&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "edited": false, "score": 0, "creation_date": 1518028113, "post_id": 48670857, "comment_id": 84339613, "body": "Thank you for this detailed answer. It is nothing I would have come up with at my current state of Haskell-expertise."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "edited": false, "score": 3, "creation_date": 1518028154, "post_id": 48670857, "comment_id": 84339632, "body": "@Lyndra: well I agree that it is making a lot of assumptions, and specific compiler features, so personally I would say that the answer to the question is <i>no, that expression is invalid</i>, but of course one can start nitpicking."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "edited": false, "score": 2, "creation_date": 1518039250, "post_id": 48670857, "comment_id": 84345688, "body": "@Lyndra Indeed, you should not be expected to learn Haskell at this level of detail during a CS course. I&#39;d expect that, in a CS course, the intended answer is &quot;no, that can not be typed&quot;, as Willem also states. You should ask your instructor about this -- maybe you misunderstood the question/answer, or they simply wrote the wrong answer :)"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 6, "last_activity_date": 1518031316, "last_edit_date": 1518031316, "creation_date": 1518027970, "answer_id": 48670857, "question_id": 48670614, "link": "https://stackoverflow.com/questions/48670614/explanation-why-a-list-with-different-types-is-a-valid-haskell-expression-needed/48670857#48670857", "title": "Explanation why a list with different types is a valid Haskell expression needed", "body": "<p>If we are allowed to define some more context, we can make this a valid expression, for instance with:</p>\n\n<pre><code>import Data.String(IsString(fromString))\n\ninstance IsString Bool where\n    fromString [] = False\n    fromString _ = True\n\ninstance Num Bool where\n    (+) = (||)\n    (*) = (&amp;&amp;)\n    abs = id\n    signum = id\n    fromInteger 0 = False\n    fromInteger _ = True\n    negate = not\n</code></pre>\n\n<p>(here I used the truthiness of Python to convert from an <code>Integer</code> and <code>String</code> literal)</p>\n\n<p>Then we can write it with the <code>OverloadedStrings</code> pragma:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nthe_list = [\"xyz\", True, 42]\n</code></pre>\n\n<p>This will then be equivalent to:</p>\n\n<pre><code>Prelude Data.String&gt; [\"xyz\", True, 42]\n[True,True,True]\n</code></pre>\n\n<p>But note that the list still contains only <code>Bool</code>s, we only made <code>Bool</code> an instance of <code>IsString</code> and <code>Num</code> to enable us to convert string <em>literals</em> and number <em>literals</em> to <code>Bool</code>s.</p>\n\n<p>A list of heterogeneous types is not possible in Haskell, and since by default a <code>Bool</code> is not a <code>Num</code>, we thus can not parse that expression without adding some extra magic.</p>\n\n<p>An additional note is that it is valid Haskell <em>grammar</em>: syntactically there is nothing wrong, it is only in the next stage of the compiler: type checking, etc. that it will raise errors, since the syntax is <em>nonsensical</em>.</p>\n"}, {"comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1518082812, "post_id": 48681274, "comment_id": 84361387, "body": "This is absolutely not what is being asked. The question is not whether you can put an Int and a Bool and a String to the same list, but whether a certain expression typechecks. You have made up a totally different expression and created an environment where it typechecks. That would be zero points for this exercise."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1518126805, "post_id": 48681274, "comment_id": 84389467, "body": "The output from the exercise\u2026? I thought the exercise was just an input?"}, {"owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "edited": false, "score": 0, "creation_date": 1518183419, "post_id": 48681274, "comment_id": 84412673, "body": "You are right. The input from the exercise equals the output of my program."}], "tags": [], "owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "is_accepted": false, "score": 0, "last_activity_date": 1518183320, "last_edit_date": 1518183320, "creation_date": 1518079950, "answer_id": 48681274, "question_id": 48670614, "link": "https://stackoverflow.com/questions/48670614/explanation-why-a-list-with-different-types-is-a-valid-haskell-expression-needed/48681274#48681274", "title": "Explanation why a list with different types is a valid Haskell expression needed", "body": "<p>My lecturer gave me a hint to check for <a href=\"https://wiki.haskell.org/Heterogenous_collections#Existential_types\" rel=\"nofollow noreferrer\">Existential types</a> in Haskell.</p>\n\n<p>I produced a working example from the description from the link above:</p>\n\n<pre><code>    {-# LANGUAGE ExistentialQuantification #-}\n\n    module Main where\n\n    data Showable = forall a . Show a =&gt; MkShowable a\n    pack:: Show a =&gt; a -&gt; Showable\n    pack a= MkShowable a\n\n    instance Show Showable where\n        show (MkShowable a) = show a\n\n    hlist :: [Showable]\n    hlist = [pack \"xyz\", pack True, pack 42]\n\n    main :: IO ()\n    main = do\n        putStrLn \"Heterogenous list 'camouflaged' as Showable:\"\n        print hlist\n</code></pre>\n\n<p>This works and produces indeed the input from the exercise. The datatype extension for Existential Quantification in the first line is necessary.</p>\n\n<p>My explanation (I might have gotten something wrong though):</p>\n\n<ol>\n<li><p>I create a new type <code>Showable</code>with one constructor <code>MkShowable</code> that takes any value <code>a</code> as long as it is in typeclass <code>Show</code> and thus makes a <code>Showable</code> out of it.</p></li>\n<li><p>The method pack makes a <code>Show a</code> become a <code>Showable</code> by using the constructor <code>MkShowable</code> I described in 1.</p></li>\n<li><p><code>Showable</code> is made an instance of <code>Show</code>-typeclass and tells that if a <code>Showable</code>(<code>MkShowable a</code>) is to be shown, simply show <code>a</code>. So we can easily print our <code>Showable</code>s.</p></li>\n</ol>\n\n<p>Furthermore I created a (heterogenous) list <code>hlist</code> of type <code>[Showable]</code>and packed the values from my example into it, using <code>pack</code>. The list is printed in the main function.</p>\n\n<p>This really reminds me of object-oriented programming.</p>\n"}], "owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1518183320, "creation_date": 1518026904, "last_edit_date": 1518027294, "question_id": 48670614, "link": "https://stackoverflow.com/questions/48670614/explanation-why-a-list-with-different-types-is-a-valid-haskell-expression-needed", "title": "Explanation why a list with different types is a valid Haskell expression needed", "body": "<p>So in an exercise I am given a list like <code>[\"xyz\", True, 42]</code>. The question was if that is a valid expression in Haskell and what the type of that expression is.</p>\n\n<p>A list can only hold homogenous types but the type of <code>\"xyz\"</code>is <code>[Char]</code>, the type of <code>True</code> is <code>Bool</code> and the type of <code>42</code> is <code>Num p =&gt; p</code>. That is different types so I can't put them into a list. </p>\n\n<p>That's what I thought. But the given answer to that exercise is \"Yes, it is a valid expression. Show-instance!.\"</p>\n\n<p>Why is it a valid expression although the types of the list elements are different and what is meant with show-instance? I'm thinking of something like superclasses from object oriented languages but I thought this is not how Haskell works.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518029149, "post_id": 48670039, "comment_id": 84340199, "body": "You know this, but another way to add items to the end of a list is to add each new element to the beginning of a strict accumulator, then reverse the list to get it in the proper order. This is faster than appending, because when you add to the end of an immutable list, the previous last node needs to be replaced with one that links to the new last node, then the node before that needs to be replaced with one that links to the new second-to-last, and so on, until you\u2019ve copied the entire list with each insertion and your algorithm now takes quadratic time."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518029279, "post_id": 48670039, "comment_id": 84340280, "body": "@Davislor: yeah, I know we can use a &quot;reverse accumulator&quot;, but I am not convinced that this is much faster at all, since reversing takes time as well, and furthermore it can create a huge load on memory (since it is not said we want the entire encoding anyway)."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518029472, "post_id": 48670039, "comment_id": 84340386, "body": "Not saying that it is or isn\u2019t a better approach to this problem. Mainly I remember trying to figure out why my <code>accum ++ [x]</code> function was so slow, and I figure someone else at the same stage, like the OP, would benefit from the explanation."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518030219, "post_id": 48670039, "comment_id": 84340832, "body": "@Davislor: fair point, I updated the answer and explained why appending to the right is usually not a good idea :)."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1518030199, "last_edit_date": 1518030199, "creation_date": 1518024921, "answer_id": 48670039, "question_id": 48669774, "link": "https://stackoverflow.com/questions/48669774/run-length-encoding-in-haskell/48670039#48670039", "title": "Run Length Encoding in Haskell", "body": "<p>A lot of your code is dedicated to updated an accumulator. You add elements to the tail of that accumulator, and this will have a drastic impact on performance.</p>\n\n<p>The reason this is usually not very efficient is because a list in Haskell <code>[a]</code> is implemented - at least conceptually - as a <em>linked list</em>. As a result concatenating two lists <code>l1</code> and <code>l2</code> together with <code>l1 ++ l2</code>, will take <em>O(|l1|)</em> time (that is the number of elements in <code>l1</code>). So that means that if the list already contains 100 elements, adding one extra at the end will require a lot of work.</p>\n\n<p>Another anti-pattern is the use of <code>head</code> and <code>tail</code>. Yes these functions can be used, but unfortunately since you do not use pattern matching, it could happen that an empty list is passed, and then <code>head</code> and <code>tail</code> will error.</p>\n\n<p>Another problem here is that you use <code>length</code> on a list. Since sometimes lists in Haskell can have infinite length, the <code>length</code> call will - if we need it - never ends.</p>\n\n<p>In cases where you have to append at the end of the accumulator, usually we can write the recursion in the tail of a list \"cons\" we are building. So we can rewrite our program from:</p>\n\n<pre><code>encode :: String -&gt; [Encoding]\nencode [] = []\nencode (h:t)  = ...\n</code></pre>\n\n<p>The question is now how we can count these values. We can use <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Prelude.html#v:span\" rel=\"nofollow noreferrer\"><strong><code>span :: (a -&gt; Bool) -&gt; [a] -&gt; ([a],[a])</code></strong></a>, a function that will - for a given predicate and a list - construct a 2-tuple where the first item contains the prefix of the list where all elements satisfy the predicate, and the second item contains the rest of the list, so we can use this like:</p>\n\n<pre><code>encode :: String -&gt; [Encoding]\nencode [] = []\nencode (h:t)  | nh &gt; 1 = Multiple nh h : tl\n              | otherwise = Single h : tl\n    where (s1, s2) = span (h ==) t\n          nh = 1 + length s1\n          tl = encode s2\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude Data.List&gt; encode \"Foobaaar   qqquuux\"\n[Single 'F',Multiple 2 'o',Single 'b',Multiple 3 'a',Single 'r',Multiple 3 ' ',Multiple 3 'q',Multiple 3 'u',Single 'x']\n</code></pre>\n\n<p>For the decoding, we again do not need an accumulator, and can make use of <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Prelude.html#v:replicate\" rel=\"nofollow noreferrer\"><strong><code>replicate :: Int -&gt; a -&gt; [a]</code></strong></a>:</p>\n\n<pre><code>decode :: [Encoding] -&gt; String\ndecode [] = []\ndecode (Single h:t) = h : decode t\ndecode (Multiple nh h) = replicate nh h ++ decode t\n</code></pre>\n\n<p>Or we can use a list monad instead:</p>\n\n<pre><code>decode :: [Encoding] -&gt; String\ndecode = (&gt;&gt;= f)\n    where f (Single h) = [h]\n          f (Multiple nh h) = replicate nh h\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude Data.List&gt; decode [Single 'F',Multiple 2 'o',Single 'b',Multiple 3 'a',Single 'r',Multiple 3 ' ',Multiple 3 'q',Multiple 3 'u',Single 'x']\n\"Foobaaar   qqquuux\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": false, "score": 3, "last_activity_date": 1518026566, "last_edit_date": 1518026566, "creation_date": 1518025967, "answer_id": 48670352, "question_id": 48669774, "link": "https://stackoverflow.com/questions/48669774/run-length-encoding-in-haskell/48670352#48670352", "title": "Run Length Encoding in Haskell", "body": "<p>As an extension to <a href=\"https://stackoverflow.com/users/67579/willem-van-onsem\">Willem Van Onsem's</a> excellent <a href=\"https://stackoverflow.com/a/48670039/3058609\">answer</a>, consider creating the run lengths separately, then combining them together with their letters with <code>zipWith</code>.</p>\n\n<p><code>Data.List</code> has the function <a href=\"https://hackage.haskell.org/package/base-4.10.1.0/docs/Data-List.html#v:group\" rel=\"nofollow noreferrer\"><code>group</code></a> (which itself is a specialization of the generic <code>groupBy</code>; <code>group = groupby (==)</code>) which breaks strings into homogenous substrings. i.e.:</p>\n\n<pre><code>group \"aaabbccccd\"\n= [\"aaa\", \"bb\", \"cccc\", \"d\"]\n</code></pre>\n\n<p>Calculating the length of each will give you run-length.</p>\n\n<p>N.B. that <code>group</code> is implemented exactly the same way as Willem's <code>span</code> solution.</p>\n\n<pre><code>import Data.List (group)\n\ndata Encoding = Multiple Int Char\n              | Single       Char\n  deriving (Eq, Show, Ord)\n\nencode :: String -&gt; [Encoding]\nencode xs = zipWith op lengths letters\n  where\n  groups  = group xs\n  lengths = map length groups\n  letters = map head   groups\n\n  op :: Int -&gt; Char -&gt; Encoding\n  op 1 = Single\n  op n = Multiple n\n</code></pre>\n\n<p>This could also be done as one very ugly list comprehension.</p>\n\n<pre><code>encode xs = [ let (n, c) = (length g, head g)\n              in  if   n == 1\n                  then Single c\n                  else Multiple n c\n            | g &lt;- group xs ]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 1, "last_activity_date": 1518029025, "creation_date": 1518029025, "answer_id": 48671121, "question_id": 48669774, "link": "https://stackoverflow.com/questions/48669774/run-length-encoding-in-haskell/48671121#48671121", "title": "Run Length Encoding in Haskell", "body": "<ol>\n<li><p>Your <code>encoding</code> function is a functional map.  Instead of making your own primitive recursive function just use <code>map</code>.</p></li>\n<li><p>Your encoding is reversing the output (<code>xs ++ [Single c]</code> etc) which is both counter intuitive and computationally expensive.  Stop it.</p></li>\n<li><p>Too many parenthesis, such as on <code>case (..) of</code>, <code>if (...) then</code> and the arms of the case <code>(...) -&gt;</code>.  All these are unneeded and clutter the code.</p></li>\n<li><p>If you type <code>head</code> chances are you should have pattern matched somewhere instead.</p></li>\n</ol>\n\n<p>Consider:</p>\n\n<pre><code>encoding :: String -&gt; [Encoding]\nencoding = map enc . group       -- Point 1, use map which also takes\n                                 -- care of point 2 and 3.\n where\n enc [x]      = Single x\n enc xs@(x:_) = Multiple (length xs) x -- Point 4, patterns not `head`\n -- Here consider make pattern matches total either via an error call or Maybe type\n</code></pre>\n"}], "owner": {"reputation": 289, "user_id": 9189009, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8867132937b784622d8bdc154e230b2?s=128&d=identicon&r=PG&f=1", "display_name": "Alexia Desouza", "link": "https://stackoverflow.com/users/9189009/alexia-desouza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1546, "favorite_count": 0, "accepted_answer_id": 48670039, "answer_count": 3, "score": 3, "last_activity_date": 1518030199, "creation_date": 1518024112, "question_id": 48669774, "link": "https://stackoverflow.com/questions/48669774/run-length-encoding-in-haskell", "title": "Run Length Encoding in Haskell", "body": "<pre><code>import Data.List\n\ndata Encoding = Multiple Int Char | Single Char deriving (Eq,Show,Ord)\n</code></pre>\n\n<p>Encoding of run length</p>\n\n<pre><code>encode :: String -&gt; [Encoding]\nencode inputString =encoding (group inputString) []\n\n\nencoding :: [String] -&gt; [Encoding] -&gt; [Encoding]\nencoding groupString xs=\nif (length groupString == 0)\n    then xs\nelse\n    case (head groupString) of\n            ([c]) -&gt;encoding (tail groupString)  (xs ++ [Single c])\n            (x) -&gt; encoding (tail groupString)  (xs ++ [Multiple (length x) (head x)])\n</code></pre>\n\n<p>Decoding of run length</p>\n\n<pre><code>decode :: [Encoding] -&gt; String\ndecode listString = decoding listString []              \n\ndecoding :: [Encoding] -&gt; String -&gt; String\ndecoding inputString xs=\nif (length inputString == 0)\n    then xs\nelse\n    case (head inputString) of\n        (Single x) -&gt;decoding (tail inputString) (xs++ [x])\n        (Multiple num x) -&gt;decoding (tail inputString) (xs ++ (replicate num x) )\n</code></pre>\n\n<p>This is my run length encoding solution, can anyone suggest me a better way to write encoding and decoding functions</p>\n"}, {"tags": ["parsing", "haskell", "types", "io"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1518022676, "post_id": 48669145, "comment_id": 84336363, "body": "Please fix your indentation. I attempted to apply simple formatting, but there are some newlines and indentation missing from <code>parseStringToFProp</code>, at least."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1518023121, "post_id": 48669145, "comment_id": 84336692, "body": "One of your lines is literally over 330 characters.  Please format your code to fit in a normal window."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1518023271, "post_id": 48669145, "comment_id": 84336796, "body": "You should avoid all those <code>==,head,tail,null</code> and exploit pattern matching instead. This would greatly improve readability, and avoid partial functions which can crash your program. E.g. <code>foo [] = ... ; foo (&#39;S&#39;:&#39;i&#39;:xs) = ...</code>"}, {"owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "edited": false, "score": 0, "creation_date": 1518023908, "post_id": 48669145, "comment_id": 84337160, "body": "Yes, You&#39;re definitely right, I just fixed the code.But my doubt is: what should I do in case I get the empty string or [ ] ?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1518025550, "post_id": 48669145, "comment_id": 84338121, "body": "After more pondering, I think the above code can not be easily fixed into a working version. If you need to parse parenthesized expressions, precedence, etc. you need to use a proper parser, define (e.g.) a LL(1) grammar, and so on. You could exploit the <code>parsec</code> library which is quite popular, for instance."}], "answers": [{"tags": [], "owner": {"reputation": 88, "user_id": 8694631, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a75dbeb79cdd294dc5543569e341e62c?s=128&d=identicon&r=PG&f=1", "display_name": "J.del Rey", "link": "https://stackoverflow.com/users/8694631/j-del-rey"}, "is_accepted": false, "score": 0, "last_activity_date": 1518126473, "creation_date": 1518126473, "answer_id": 48695317, "question_id": 48669145, "link": "https://stackoverflow.com/questions/48669145/haskell-in-trouble-with-function-to-parse-from-an-input-string-to-my-datatype/48695317#48695317", "title": "HASKELL: In trouble with function to parse from an input String to my DataType", "body": "<p>With the read function you dont need parse anymore just write the datatype in your input as you have declared before in the data constructor even with parentheses, for example: <code>No (V \u201csome string\u201d)</code></p>\n"}, {"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 0, "last_activity_date": 1518131725, "creation_date": 1518131725, "answer_id": 48696346, "question_id": 48669145, "link": "https://stackoverflow.com/questions/48669145/haskell-in-trouble-with-function-to-parse-from-an-input-string-to-my-datatype/48696346#48696346", "title": "HASKELL: In trouble with function to parse from an input String to my DataType", "body": "<p>If you are free to choose any input format, and if it is acceptable for the user to enter expressions like:</p>\n\n<pre><code>(Si (V \"q\") (No (V \"p\")))\n</code></pre>\n\n<p>quotation marks and all, then there is a very simple solution.</p>\n\n<p>You can have Haskell derive a <code>Read</code> instance for your data type by adding <code>deriving (Read)</code> at the end of your definition.  You have already done this, but you possibly haven't realized that the effect of this is to <strong>automatically</strong> define a parser for your data type, which can be used via <code>read</code>, <code>reads</code>, and some related functions.</p>\n\n<p>For example, if you compile and run the following standalone program: </p>\n\n<pre><code>type Var = String\ndata FProp = V Var\n           | No FProp\n           | Y FProp FProp\n           | O FProp FProp\n           | Si FProp FProp\n           | Sii FProp FProp\n           deriving (Show, Read)\n\nmain :: IO ()\nmain = do\n  putStrLn \"Enter an expression:\"\n  str &lt;- getLine\n  let fprop = read str :: FProp\n  putStrLn \"Your expression was:\"\n  print fprop\n</code></pre>\n\n<p>this will automatically parse a user-supplied string into an <code>FProp</code> (and just print it back out, but you can do anything you like with <code>fprop</code> in your real program):</p>\n\n<pre><code>$ runghc Proposition.hs\nEnter an expression:\n(Si (V \"q\") (No (V \"p\")))\nYour expression was:\nSi (V \"q\") (No (V \"p\"))\n$\n</code></pre>\n\n<p>This program isn't very robust.  If you enter an invalid expression, it'll generate an exception.  You can use <code>reads</code> instead to make it more user-friendly:</p>\n\n<pre><code>getFExpr :: IO FProp\ngetFExpr = do\n  putStrLn \"Enter an FProp expression:\"\n  str &lt;- getLine\n  case reads str of\n    (x, \"\"):_ -&gt; return x\n    _         -&gt; putStrLn \"\\nInvalid expression!\\n\" &gt;&gt; getFExpr\n\nmain :: IO ()\nmain = do\n  fprop &lt;- getFExpr\n  putStrLn \"Your expression was:\"\n  print fprop\n</code></pre>\n"}], "owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1518131725, "creation_date": 1518022268, "last_edit_date": 1518130411, "question_id": 48669145, "link": "https://stackoverflow.com/questions/48669145/haskell-in-trouble-with-function-to-parse-from-an-input-string-to-my-datatype", "title": "HASKELL: In trouble with function to parse from an input String to my DataType", "body": "<p>I got some really helpful tips in a question related to this Project before, but now, I need help with the following. I have a datatype (same as in previous question):</p>\n\n<pre><code>type Var = String\ndata FProp = V Var\n           | No FProp\n           | Y FProp FProp\n           | O FProp FProp\n           | Si FProp FProp\n           | Sii FProp FProp\n           deriving Read\n</code></pre>\n\n<p>And I need to parse an input string from the user into my datatype. I finally built the function:</p>\n\n<pre><code>main = do\n    putStrLn \"Welcome! Choose your option.\"\n    a &lt;- getLine\n    if (a Prelude.== \"(1)\")\n        then do\n            y &lt;- getLine\n            let ys = read (y)::String\n                     in let f = parseStringToFProp ys\n                     in let b = determinarTautologia f\n                     in printResult b\n    else do\n        y &lt;- getLine\n        x &lt;- getLine\n        let {ys = read (y)::String; xs = read (x)::String}\n             in let {f1 = parseStringToFProp ys; f2 = parseStringToFProp xs}\n             in let b = sonEquivalentes f1 f2\n             in printResult b\n</code></pre>\n\n<p>this is the code for the function which calls the parser, which is my main doubt:</p>\n\n<pre><code>f:: [Char] -&gt; FProp\nf (x:xs) | x == ' '= f xs                            \n         | x == '(' || x == ')' = f xs                   \n         | x == 'S' &amp;&amp; head xs Prelude.== 'i' \n           &amp;&amp; head (tail xs) == 'i' = (Sii (f xs))\n         | x == 'S' &amp;&amp; head xs == 'i' \n           &amp;&amp; not (head (tail xs) == 'i') = (Si (f xs)) \n         | x == 'Y' = (Y (f xs))\n         | x == 'O' = (O (f xs))\n         | x == 'N' &amp;&amp; head xs == 'o' = (O (f xs))          \n</code></pre>\n\n<p>The function aims to create an FProp from a String, being its type <code>[Char] -&gt; FProp</code>. The problem is that I do not come up with the base case of this recursive function. What could I do if I get <code>[]</code>? </p>\n"}, {"tags": ["string", "haskell", "typeclass"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518020978, "post_id": 48668696, "comment_id": 84335221, "body": "<code>IsString</code> does not mean you can apply all kinds of operations with it. It only means that we can convert a <code>String</code> to it, and that by enabling the pragma, we can write literals that we then will transparently convert to such objects."}, {"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1518021066, "post_id": 48668696, "comment_id": 84335293, "body": "do you mean that <code>IsString</code> works only with hardcoded strings? And not with any value which is actually a string?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1518021142, "post_id": 48668696, "comment_id": 84335348, "body": "but <code>a</code> is not actually a <code>String</code>. You can however use <code>fromString</code> to cast the result of <code>&quot;foo&quot; ++ &quot;bar&quot;</code> to a <code>String</code>."}, {"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518021269, "post_id": 48668696, "comment_id": 84335438, "body": "<code>&quot;foo&quot; ++ &quot;bar&quot;</code> already is a <code>String</code>. I can use <code>fromString</code> to cast from <code>String</code> to <code>a</code>, but I hoped this to happen automatically"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518021436, "post_id": 48668696, "comment_id": 84335547, "body": "no, as far as I know it only works for <code>String</code> literals. This is probably desirable as well, since otherwise this would result in implicit type conversions, and this could result in rather undefined behavior. Since if we would generalize that, and we have an <code>a</code>, and we implicitly want to cast it to a <code>d</code>, and there are two ways to do it (for instance by <code>f1 :: a -&gt; b</code> and <code>f2 :: b -&gt; d</code>, and <code>g1 :: a -&gt; c</code> and <code>g2 :: c -&gt; d</code>), then what should the compiler pick?"}], "answers": [{"comments": [{"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "edited": false, "score": 1, "creation_date": 1518022401, "post_id": 48668950, "comment_id": 84336198, "body": "Thanks for the explanation. Now it kind of makes sense. It just feels weird that <code>&quot;777&quot; :: a</code> works and <code>show 777 :: a</code> doesn&#39;t, since in both cases the compiler is converting <code>[Char]</code> to <code>a</code>. In other terms, the fact that the code compiles or not, does not depends just on the types of the expressions... isn&#39;t this against equational resoning?"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518023579, "post_id": 48668950, "comment_id": 84336976, "body": "The way string constants work with <code>OverloadedStrings</code> is sort of like how numeric constants work.  The constant <code>1</code> is overloaded and means <code>fromIntegral 1</code>, so you can use integer <i>constants</i> for any type of <code>Num</code>, defaulting to <code>Integer</code>. Similarly, you can use a string <i>constant</i> for any type of <code>IsString</code>, defaulting to <code>String</code>. However, that does not mean you can implicitly convert any <code>Integer</code> expression to any <code>Num</code> without an explicit call to <code>fromIntegral</code>. Likewise for srings. (Some other languages, such as C++, do provide such implicit conversions.)"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518024256, "post_id": 48668950, "comment_id": 84337374, "body": "If you want to do this, the easiest way ts to define a conversion function, such as <code>Data.ByteString.pack</code>.  So, after the right <code>import qualified</code>, <code>B.pack (&quot;foo&quot; ++ &quot;bar&quot;)</code> would get you your <code>ByteString</code>. However, it will often be more efficient to reimplement functions for your new type (or else why have it?), so you would more likely write <code>B.append &quot;foo&quot; &quot;bar&quot;</code>, and the compiler can then infer the correct types for the arguments."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1518021593, "creation_date": 1518021593, "answer_id": 48668950, "question_id": 48668696, "link": "https://stackoverflow.com/questions/48668696/isstring-instance-not-automatically-converted-to-string/48668950#48668950", "title": "IsString instance not automatically converted to String", "body": "<p>The idea of the <a href=\"https://hackage.haskell.org/package/base-4.10.1.0/docs/Data-String.html#t:IsString\" rel=\"nofollow noreferrer\"><strong><code>IsString</code></strong></a> typeclass is to specify that we can convert a <code>String</code> object to such object (with the <strong><code>fromString :: String -&gt; a</code></strong> function). Furthermore by enabling the <code>OverloadedStrings</code> pragma, we can also write <code>a</code> objects as string literals (in that case these <code>String</code> <em>literals</em> will transparently be converted to <code>a</code>s by calling the <code>fromString</code> function).</p>\n\n<p>Note however that <code>IsString</code> does <em>not</em> results in a way to convert <code>a</code>s back to <code>String</code>s. Furthermore functions that are defined on <code>String</code>s can <em>not</em> be used for such instances (at least not without doing some implementation work).</p>\n\n<p>If you write:</p>\n\n<pre><code>(\"foo\" ++ \"bar\") :: a\n</code></pre>\n\n<p>Haskell will derive that you call <code>(++) :: [b] -&gt; [b] -&gt; [b]</code>, so as a result it knows that the type of these string literals is a <code>IsString [b] =&gt; [b]</code>. So that means that <code>a ~ [b]</code>. Since your type is probably not a list, there is no way that this can match.</p>\n"}], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 281, "favorite_count": 0, "accepted_answer_id": 48668950, "answer_count": 1, "score": 3, "last_activity_date": 1518024100, "creation_date": 1518020872, "last_edit_date": 1518024100, "question_id": 48668696, "link": "https://stackoverflow.com/questions/48668696/isstring-instance-not-automatically-converted-to-string", "title": "IsString instance not automatically converted to String", "body": "<p>I have a type <code>a</code> which is an instance of the <code>IsString</code> typeclass.</p>\n\n<p>If I use something like</p>\n\n<pre><code>\"foobar\" :: a\n</code></pre>\n\n<p>everything works fine.</p>\n\n<p>As soon as I use a function that returns a string, as in</p>\n\n<pre><code>(\"foo\" ++ \"bar\") :: a\n</code></pre>\n\n<p>I get a compilation error telling me that</p>\n\n<pre><code>Couldn't match expected type \u2018a\u2019 with actual type \u2018[Char]\u2019\nExpected type: a\nActual type: String\n</code></pre>\n\n<p>Notice that I have the <code>{-# LANGUAGE OverloadedStrings #-}</code> pragma.</p>\n\n<p>Is there something else I should do to solve the compilation error?</p>\n"}, {"tags": ["haskell", "ghc", "functional-dependencies"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1518015322, "post_id": 48666715, "comment_id": 84331168, "body": "Do you actually have UndecidableInstances enabled?  It&#39;s almost always necessary with FunctionalDependencie, and the error message suggests you don&#39;t."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1518018995, "post_id": 48666715, "comment_id": 84333857, "body": "@Carl I use FunDeps quite a lot, and I don&#39;t think I&#39;ve never used UndecidableInstances."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1518021185, "post_id": 48666715, "comment_id": 84335386, "body": "I guess it only comes up when the instances are polymorphic - but that&#39;s still an exceptionally common case.  Basically every mtl-style instance, for example."}, {"owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1518094998, "post_id": 48666715, "comment_id": 84369716, "body": "@Carl, I am a newbie on such extensions, and someone else had warned me that I had better not enable an extension unless I know exacly what it does, so I just came here to get some suggestions."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1518096685, "post_id": 48666715, "comment_id": 84370926, "body": "@Krantz That&#39;s a good general policy. As an introduction: UndecidableInstances allows you to compile instances with a fully-polymorphic argument. It doesn&#39;t break any code that already works, it doesn&#39;t allow new bugs.The only downside is that if you have an instance that actually loops during type-checking, it will take longer for the compiler to produce an error message - but it still will. Also, it&#39;s usually a bad idea to use it with a single-parameter type class. But for a MPTC with fundeps enabled, it&#39;s often necessary."}], "answers": [{"comments": [{"owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "edited": false, "score": 0, "creation_date": 1518095347, "post_id": 48668467, "comment_id": 84369946, "body": "I think I know this method. What I actually want was to automatically make all <code>t m</code> (where <code>t</code> implements MonadTrans, and <code>m</code> implements Logger) an instance of typeclass Logger. Then an explicit <code>lift</code> can be omitted. So is it impossible to do this in Haskell?"}], "tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 1, "last_activity_date": 1518020210, "creation_date": 1518020210, "answer_id": 48668467, "question_id": 48666715, "link": "https://stackoverflow.com/questions/48666715/satisfy-the-condition-that-a-uniquely-determines-b-when-using-functional-depen/48668467#48668467", "title": "Satisfy the condition that &#39;A uniquely determines B&#39; when using Functional Dependencies in Haskell", "body": "<p>The trouble is that while <code>m -&gt; e</code> it doesn't follow that <code>t m -&gt; e</code> because the compiler doesn't know anything about what <code>t</code> might do.</p>\n\n<p>What you have defined is not actually a monad transformer, its a class of <code>Logger</code> monads. Canonically, the <a href=\"https://hackage.haskell.org/package/mtl\" rel=\"nofollow noreferrer\">mtl</a> way of approaching this would be:</p>\n\n<ol>\n<li><p>Define a <code>class (Monad m) =&gt; MonadLogger e m | m -&gt; e</code> (just rename your existing class).</p></li>\n<li><p>Define <code>newtype LoggerT e m a = LoggerT(runLoggerT :: m &lt;...&gt;)</code>. This is your monad transformer. runLoggerT unwraps a LoggerT action and returns a value in the inner monad <code>m</code>. The details of what it returns are up to you.</p></li>\n<li><p>Create instances of <code>Monad</code>, <code>MonadTrans</code> and <code>MonadLogger</code> for <code>LoggerT</code>.</p></li>\n<li><p>Define <code>type Logger e = Logger e Identity</code></p></li>\n<li><p>Create inductive instances for all the other mtl monad transformers.</p></li>\n</ol>\n\n<p>If you take a look at the examples in the mtl library you should be able to see how its done.</p>\n"}, {"comments": [{"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 1, "creation_date": 1523186588, "post_id": 48703661, "comment_id": 86447562, "body": "The reason you need <code>UndecidableInstances</code> is that in the instance head <code>instance ( ... ) =&gt; Logger e (t m)</code> the second parameter is supposed to determine the first, according to the FunDep. But <code>e</code> does not appear in <code>(t m)</code>. Switching on <code>UndecidableInstances</code> in effect says to the compiler &quot;it&#39;s OK, the constraints will get you from <code>(t m)</code> to <code>e</code>&quot;. That might or might not be true, the compiler doesn&#39;t know. Usually it is OK. But you might try to call method <code>logMessage</code> somewhere the compiler can&#39;t determine <code>e</code>."}], "tags": [], "owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "is_accepted": true, "score": 1, "last_activity_date": 1518171733, "creation_date": 1518171733, "answer_id": 48703661, "question_id": 48666715, "link": "https://stackoverflow.com/questions/48666715/satisfy-the-condition-that-a-uniquely-determines-b-when-using-functional-depen/48703661#48703661", "title": "Satisfy the condition that &#39;A uniquely determines B&#39; when using Functional Dependencies in Haskell", "body": "<p>Many thanks to @Carl, this problem is solved.<br>\nWhen I turned on the language extension <strong>Undecidable Instances</strong> (by <code>{-# LANGUAGE UndecidableInstances #-}</code>), this error message disappeared.<br>\nThough still I wonder why this extension is needed, for now, it really makes the code compile. </p>\n"}], "owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 48703661, "answer_count": 2, "score": 2, "last_activity_date": 1518171733, "creation_date": 1518015084, "last_edit_date": 1518095641, "question_id": 48666715, "link": "https://stackoverflow.com/questions/48666715/satisfy-the-condition-that-a-uniquely-determines-b-when-using-functional-depen", "title": "Satisfy the condition that &#39;A uniquely determines B&#39; when using Functional Dependencies in Haskell", "body": "<p>I am trying to write a \u2018logger\u2019 Monad Transformer. Other Monad Transformers will then be applied to it, to form a more complex monad. I want the logger function to work on all these monads, so I wrote a typeclass as follows. </p>\n\n<pre><code>class Logger e m | m -&gt; e where\n    logMessage :: e -&gt; m ()\n</code></pre>\n\n<p>The reason I use Functional Dependencies here, is that the monad <code>m</code> will explicitly contain the type <code>e</code> (as what it is with <code>State</code> monad), which stands for the message type.<br>\nThe transformer <code>ET</code> is made an instance of typeclass Logger.  </p>\n\n<pre><code>data ET e m a = ET { ... }\ninstance Monad m =&gt; Monad (ET e m) where\n    logMessage msg = ...\ninstance Monad m =&gt; Logger e (ET e m) where\n    logMessage msg = ...\n</code></pre>\n\n<p>Now, I want the monad <code>T1 (T2 ... (ET m))</code> (which has an <code>ET</code> in the transformer chain) to be an instance of typeclass <code>Logger</code>, but it failed to compile. Below is the code.  </p>\n\n<pre><code>instance (Logger e m, MonadTrans t) =&gt; Logger e (t m) where\n    logMessage = lift . logMessage\n</code></pre>\n\n<p>I thought that since <code>t</code> is only a Monad Transformer, and <code>m</code> is guaranteed to uniquely determine <code>e</code>, then <code>t m</code> should also uniquely determine <code>e</code>. But the compiler seems to think differently.  </p>\n\n<pre><code>Test.hs:43:10: error:\n? Illegal instance declaration for \u2018Logger e (t m)\u2019\n    The coverage condition fails in class \u2018Logger\u2019\n      for functional dependency: \u2018m -&gt; e\u2019\n    Reason: lhs type \u2018t m\u2019 does not determine rhs type \u2018e\u2019\n    Un-determined variable: e\n    Using UndecidableInstances might help\n? In the instance declaration for \u2018MonadException e (t m)\u2019\n   |\n43 | instance (Logger e m, MonadTrans t) =&gt; Logger e (t m) where\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>Can anyone explain how the extension <code>FunctionalDependencies</code> works, as well as how to solve this problem?<br>\nThe compiler I use is <code>The Glorious Glasgow Haskell Compilation System, version 8.2.2</code>, on Windows 10.  </p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518015087, "post_id": 48666639, "comment_id": 84330982, "body": "Shouldn&#39;t <code>Tcons</code> have parameters <code>a (TList a)</code>?"}, {"owner": {"reputation": 153, "user_id": 5285349, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/c6e48d86c74fd1fca638a7ca513297de?s=128&d=identicon&r=PG&f=1", "display_name": "JamalCrawford..", "link": "https://stackoverflow.com/users/5285349/jamalcrawford"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518015256, "post_id": 48666639, "comment_id": 84331118, "body": "Whys that?  I guess I should of said that I am creating a reversed list."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1518023671, "post_id": 48666639, "comment_id": 84337028, "body": "<code>tappend</code> should be something like <code>TList a -&gt; a -&gt; TList a</code>. You are trying to implement something closer to <code>++</code>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1518056196, "post_id": 48666639, "comment_id": 84351212, "body": "Please do not vandalise questions -- even if you happen to have posted them."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1518015588, "creation_date": 1518015588, "answer_id": 48666888, "question_id": 48666639, "link": "https://stackoverflow.com/questions/48666639/haskell-recursive-data-type-for-appending/48666888#48666888", "title": "Haskell recursive data type for appending", "body": "<p>There is sometime that is a bit <em>uncommon</em> in your definition:</p>\n\n<pre><code>data TList a = Tnil | Tcons (TList a) a\n</code></pre>\n\n<p>Here <code>Tcons</code> has as first parameter a <code>TList a</code>, followed by an <code>a</code>. Which thus means that you will probably first specify an <code>init</code> (the first part of the list), followed by a <code>last</code> (the last element). Usually a linked list is defined in the opposite way: with a <code>Tcons</code> that first has a <code>head</code> (an <code>a</code>) followed by a <code>tail</code>: a <code>TList a</code> that contains the rest of the list.</p>\n\n<p>But let us for now use the above definition. Let us inspect the parameters:</p>\n\n<pre><code>tappend :: TList a -&gt; TList a -&gt; TList a\ntappend (Tcons t <b>h</b>) y = Tcons <b>h</b> (tappend t y)</code></pre>\n\n<p>Here at the right we see that you construct a new <code>Tcons</code>, but as first parameter, you use <code>h</code>, which is an <code>a</code>, as second parameter you use <code>tappend t y</code> that will produce a list, so you called the constructor with flipped parameters. We can fix it with:</p>\n\n<pre><code>tappend :: TList a -&gt; TList a -&gt; TList a\ntappend (Tcons t <b>h</b>) y = Tcons (tappend t y) <b>h</b></code></pre>\n\n<p>But now we still will get an error, since we did not take into account what we should do in case we encounter a <code>Tnil</code>, in that case we can return the second list:</p>\n\n<pre><code>tappend :: TList a -&gt; TList a -&gt; TList a\n<b>tappend Tnil y = y</b>\ntappend (Tcons t h) y = Tcons (tappend t y) h</code></pre>\n\n<p>Now the function will compile, and work. But the result is a bit strange. In case we use for example:</p>\n\n<pre><code>tappend [1, 4, 2, 5] [1, 3, 0, 2]\n</code></pre>\n\n<p>(of course we can not use list syntax), we will have as output:</p>\n\n<pre><code>tappend [1, 3, 0, 2, 1, 4, 2, 5]\n</code></pre>\n\n<p>So in fact we will append these but in a flipped way. It is not very clear to me how you want the semantics of the <code>tappend</code> function.</p>\n"}], "owner": {"reputation": 153, "user_id": 5285349, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/c6e48d86c74fd1fca638a7ca513297de?s=128&d=identicon&r=PG&f=1", "display_name": "JamalCrawford..", "link": "https://stackoverflow.com/users/5285349/jamalcrawford"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 366, "favorite_count": 0, "accepted_answer_id": 48666888, "answer_count": 1, "score": 1, "last_activity_date": 1518054922, "creation_date": 1518014884, "last_edit_date": 1518054922, "question_id": 48666639, "link": "https://stackoverflow.com/questions/48666639/haskell-recursive-data-type-for-appending", "title": "Haskell recursive data type for appending", "body": "<p>I am learning Haskell and have run into something I don't quite understand.  I have the following recursive data type:</p>\n\n<pre><code>data TList a = Tnil | Tcons (TList a) a\n</code></pre>\n\n<p>When I look at this I understand it as creating a data type called TList with a generic type a.  That has two constructors Tnil and Tcons.  Basically I am trying to add a function that appends two list so I wrote the following pattern matching function:</p>\n\n<pre><code>tappend :: TList a -&gt; TList a -&gt; TList a\ntappend (Tcons t h) y = Tcons h (tappend t y)\n</code></pre>\n\n<p>I keep getting an error when trying to run it that says something along the lines of  \" Couldn't match expected type \u2018TList (TList a)\u2019 with actual type \u2018a\u2019 \" Also if someone could possible break down the data type I created that would be great.  The recursive part is what I just haven't been able to wrap my head around it. </p>\n"}, {"tags": ["c", "arrays", "haskell", "vector", "benchmarking"], "comments": [{"owner": {"reputation": 7970, "user_id": 4117097, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lrdeC.jpg?s=128&g=1", "display_name": "Anton Malyshev", "link": "https://stackoverflow.com/users/4117097/anton-malyshev"}, "edited": false, "score": 0, "creation_date": 1518013735, "post_id": 48666065, "comment_id": 84329965, "body": "Post the command line, how you compile your C code, probably no optimization flags there"}, {"owner": {"reputation": 120941, "user_id": 2402272, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1182b1d5518a596d4e8cfe0567a65c4d?s=128&d=identicon&r=PG", "display_name": "John Bollinger", "link": "https://stackoverflow.com/users/2402272/john-bollinger"}, "edited": false, "score": 0, "creation_date": 1518014153, "post_id": 48666065, "comment_id": 84330298, "body": "Your C benchmark appears to be calling the function under test indirectly, via a pointer.  This is unlikely to produce results reflective of the speed of calling the same function directly."}, {"owner": {"reputation": 120941, "user_id": 2402272, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1182b1d5518a596d4e8cfe0567a65c4d?s=128&d=identicon&r=PG", "display_name": "John Bollinger", "link": "https://stackoverflow.com/users/2402272/john-bollinger"}, "edited": false, "score": 0, "creation_date": 1518014312, "post_id": 48666065, "comment_id": 84330420, "body": "Your C benchmark is also inefficient in how it records the <code>Foo</code> values: it updates a local <code>Foo</code> with them, and then updates an array element from that, which copies each value twice."}, {"owner": {"reputation": 120941, "user_id": 2402272, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1182b1d5518a596d4e8cfe0567a65c4d?s=128&d=identicon&r=PG", "display_name": "John Bollinger", "link": "https://stackoverflow.com/users/2402272/john-bollinger"}, "edited": false, "score": 0, "creation_date": 1518014600, "post_id": 48666065, "comment_id": 84330623, "body": "I can&#39;t speak much to the Haskell, but are you sure the elements of your vector are stored <i>by value</i>, as the elements of your C array are?  If they were instead stored <i>by reference</i> then that might well be faster to manipulate, and the semantics would be inequivalent to those of your C benchmark."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1518014645, "post_id": 48666065, "comment_id": 84330657, "body": "It&#39;s quite unlikely that it&#39;s actually populating a vector in a nanosecond. It seems quite likely it&#39;s optimizing your whole program away as unused in one way or another."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1518014824, "post_id": 48666065, "comment_id": 84330768, "body": "Include the actual C code in your question, not just a link to it. Your question is meaningless without the code you&#39;re comparing."}, {"owner": {"reputation": 153119, "user_id": 584518, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Lundin", "link": "https://stackoverflow.com/users/584518/lundin"}, "edited": false, "score": 0, "creation_date": 1518015014, "post_id": 48666065, "comment_id": 84330916, "body": "The real question is: what makes you think you can get picosecond accuracy benchmarks on a bloody PC?"}, {"owner": {"reputation": 389, "user_id": 3209516, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b2c1df69a0524ff3c85a132c343e9930?s=128&d=identicon&r=PG&f=1", "display_name": "piotrMocz", "link": "https://stackoverflow.com/users/3209516/piotrmocz"}, "reply_to_user": {"reputation": 7970, "user_id": 4117097, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lrdeC.jpg?s=128&g=1", "display_name": "Anton Malyshev", "link": "https://stackoverflow.com/users/4117097/anton-malyshev"}, "edited": false, "score": 0, "creation_date": 1518015279, "post_id": 48666065, "comment_id": 84331132, "body": "@AntonMalyshev I updated the question."}, {"owner": {"reputation": 389, "user_id": 3209516, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b2c1df69a0524ff3c85a132c343e9930?s=128&d=identicon&r=PG&f=1", "display_name": "piotrMocz", "link": "https://stackoverflow.com/users/3209516/piotrmocz"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1518015304, "post_id": 48666065, "comment_id": 84331149, "body": "@dfeuer true. I simplified the code a bit to extract the minimal example. In my original code (with the structs more complex, but still nothing unusual) the timing was more reasonable. This is why I&#39;m curious what is wrong in the haskell code/the benchmark."}, {"owner": {"reputation": 7970, "user_id": 4117097, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lrdeC.jpg?s=128&g=1", "display_name": "Anton Malyshev", "link": "https://stackoverflow.com/users/4117097/anton-malyshev"}, "edited": false, "score": 0, "creation_date": 1518016246, "post_id": 48666065, "comment_id": 84331811, "body": "@piotrMocz you can compare assembler outputs for gcc and the haskell compiler then, probably AVX is used there"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 153119, "user_id": 584518, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Lundin", "link": "https://stackoverflow.com/users/584518/lundin"}, "edited": false, "score": 0, "creation_date": 1518023069, "post_id": 48666065, "comment_id": 84336656, "body": "@Lundin criterion uses pretty advanced statistical methods for its benchmarks - and it reports error terms, too.  It certainly has the ability to benchmark sub-nanosecond timings.  I would expect huge error terms in the cases where it does, though, and those weren&#39;t reported."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 1, "creation_date": 1518025475, "post_id": 48666065, "comment_id": 84338068, "body": "It\u2019s not <i>impossible</i> that ghc might deduce that a vector operation can be vectorized or parallelized when gcc can\u2019t do the same for a translation into C. One aspect of C that\u2019s showing its age is that you have to write all your vector operations as sequential loops that potentially can muck around with any element or the loop index itself in arbitrary ways, especially once pointer aliasing gets involved. Then, today, what you really want the compiler to do is figure out, <i>oh, you\u2019re just performing the same operations on <code>i</code> or <code>a[i]</code> for each element,</i> and optimize to <code>forall</code> semantics."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 1, "creation_date": 1518025573, "post_id": 48666065, "comment_id": 84338133, "body": "But you\u2019re right to be skeptical.  You might try compiling with <code>-S</code> and checking the assembly code. But maybe the C version would benefit from a <code>#pragma omp</code> directive."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1518026506, "post_id": 48666065, "comment_id": 84338703, "body": "These unsafe thaw&#39;s and freezes are all violating the guarantee you are (implicitly) giving by making the call.  I wouldn&#39;t trust the code any further than I can throw my mainframe, let alone for benchmark numbers.  Want to use a mutable vector? Then use a mutable vector, stop pretending an immutable vector is mutable with all sorts of dishonest calls."}, {"owner": {"reputation": 389, "user_id": 3209516, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b2c1df69a0524ff3c85a132c343e9930?s=128&d=identicon&r=PG&f=1", "display_name": "piotrMocz", "link": "https://stackoverflow.com/users/3209516/piotrmocz"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518045445, "post_id": 48666065, "comment_id": 84348319, "body": "@Davislor As far as I could tell, the Haskell-generated assembly didn&#39;t contain any vectorized instructions. Still, even if it used vectors heavily, the picosecond times suggest it&#39;s actually a problem of not evaluating the computation. I will try to produce a better example tomorrow."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518045639, "post_id": 48666065, "comment_id": 84348392, "body": "Yeah. You could see if a <code>seq</code> or <code>$!</code> in the right place fixes it?"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518049588, "post_id": 48666065, "comment_id": 84349571, "body": "Another possibility: benchmark a call through FFI?"}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 1, "last_activity_date": 1518049740, "creation_date": 1518049740, "answer_id": 48675581, "question_id": 48666065, "link": "https://stackoverflow.com/questions/48666065/surprisingly-low-times-when-benchmarking-data-vector/48675581#48675581", "title": "Surprisingly low times when benchmarking Data.Vector", "body": "<p>While I don't trust the benchmarking code I also can not reproduce the issue.  I modified the Haskell gist (just removed the second two benchmarks) and the C benchmark (made it perform the operation 1000 times then divided the times by 1000).</p>\n\n<p>EDIT: I don't trust the code because:</p>\n\n<ol>\n<li>You are using unsafe* calls that have implicit contracts you violate.</li>\n<li>The code doesn't even compile - you have a typo and a missing language extension.  This is usually an indication of other shenanigans.</li>\n</ol>\n\n<p><strong>My Results</strong></p>\n\n<p>What is the result? Spot on, no oddities here.</p>\n\n<pre><code>% gcc bench.c -O3 &amp;&amp; ./a.out\nStarting the benchmark\n[[ Malloced-array-[10000000] ]]Time taken: 11.904249 ms (cpu) 11.904249 ms (wall)\nDone\n./a.out  11.78s user 0.14s system 98% cpu 12.131 total\n</code></pre>\n\n<p>i.e. <strong>11ms</strong> for C at 10^7 elements.</p>\n\n<p>and</p>\n\n<pre><code>% ghc -O2 bench.hs &amp;&amp; ./bench\nbenchmarking Storable vector (FAKE mutable)/10e6\ntime                 2.362 ms   (2.236 ms .. 2.561 ms)\n                     0.953 R\u00b2   (0.909 R\u00b2 .. 0.989 R\u00b2)\nmean                 2.344 ms   (2.268 ms .. 2.482 ms)\nstd dev              305.0 \u03bcs   (169.1 \u03bcs .. 477.1 \u03bcs)\nvariance introduced by outliers: 79% (severely inflated)\n\nbenchmarking Storable vector (FAKE mutable)/10e7\ntime                 23.37 ms   (22.13 ms .. 24.73 ms)\n                     0.989 R\u00b2   (0.979 R\u00b2 .. 0.996 R\u00b2)\nmean                 23.19 ms   (22.63 ms .. 23.76 ms)\nstd dev              1.287 ms   (1.015 ms .. 1.713 ms)\nvariance introduced by outliers: 19% (moderately inflated)\n\nbenchmarking Storable vector (FAKE mutable)/10e8\ntime                 232.2 ms   (215.1 ms .. 247.3 ms)\n                     0.994 R\u00b2   (0.974 R\u00b2 .. 1.000 R\u00b2)\nmean                 223.5 ms   (215.9 ms .. 231.5 ms)\nstd dev              10.41 ms   (7.887 ms .. 13.06 ms)\nvariance introduced by outliers: 14% (moderately inflated)\n</code></pre>\n\n<p>i.e. <strong>23ms</strong> for Haskell at 10^7 result.</p>\n\n<p>This is on a moderately new macbook with GHC 8.2.</p>\n"}], "owner": {"reputation": 389, "user_id": 3209516, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b2c1df69a0524ff3c85a132c343e9930?s=128&d=identicon&r=PG&f=1", "display_name": "piotrMocz", "link": "https://stackoverflow.com/users/3209516/piotrmocz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "closed_date": 1518115908, "accepted_answer_id": 48675581, "answer_count": 1, "score": 4, "last_activity_date": 1518049740, "creation_date": 1518013007, "last_edit_date": 1518015495, "question_id": 48666065, "link": "https://stackoverflow.com/questions/48666065/surprisingly-low-times-when-benchmarking-data-vector", "closed_reason": "Duplicate", "title": "Surprisingly low times when benchmarking Data.Vector", "body": "<p>I am benchmarking Haskell's array libraries (the <code>array</code> and <code>vector</code> packages) to come up with the best way of storing large data for my use case. I am using <code>criterion</code> as the benchmarking tool.</p>\n\n<p><strong>Long story short:</strong> my code simply allocates a vector and proceeds to fill it with simple structs (1M, 10M, and 100M elements, respectively). When I compare the Haskell benchmark times with a simple reference implementation I wrote in C, Haskell is a few times faster and I find it suspicious: the C code is a simple loop filling the structs in the array.</p>\n\n<p><strong>The question:</strong> is it possible for Haskell's <code>vector</code> library to beat C in terms of performance? Or does it mean my benchmarks are flawed/something is not actually evaluated/there's some 'gotcha'?</p>\n\n<p><strong>Another question</strong> how to make sure that the Haskell vectors are actually evaluated?</p>\n\n<p><strong>Longer explanation:</strong> The task at hand is to fill a vector with a large number of structs. They have <code>Storable</code> instances and the vector used is <code>Data.Vector.Storable</code>.</p>\n\n<p>The data type is the following:</p>\n\n<pre><code>data Foo = Foo Int Int deriving (Show, Eq, Generic, NFData)\n</code></pre>\n\n<p>And the <code>Storable</code> instances look like this:</p>\n\n<pre><code>chunkSize :: Int\nchunkSize = sizeOf (undefined :: Int)\n{-# INLINE chunkSize #-}\n\ninstance Storable Foo where\n    sizeOf    _ = 2 * chunkSize ; {-# INLINE sizeOf    #-}\n    alignment _ = chunkSize     ; {-# INLINE alignment #-}\n    peek ptr = Foo\n        &lt;$&gt; peekByteOff ptr 0\n        &lt;*&gt; peekByteOff ptr chunkSize\n    {-# INLINE peek #-}\n    poke ptr (Foo a b) = do\n        pokeByteOff ptr 0 a\n        pokeByteOff ptr chunkSize b\n    {-# INLINE poke #-}\n</code></pre>\n\n<p>The serialization itself seems to work fine. The vector is then allocated:</p>\n\n<pre><code>mkFooVec :: Int -&gt; IO (Vector Foo)\nmkFooVec !i = unsafeFreeze =&lt;&lt; new (i + 1)\n</code></pre>\n\n<p>And populated with the structs:</p>\n\n<pre><code>populateFooVec :: Int -&gt; Vector Foo -&gt; IO (Vector Foo)\npopulateFooVec !i !v = do\n    v' &lt;- unsafeThaw v\n    let go 0 = return ()\n        go j = unsafeWrite v' j (Foo j $ j + 1) &gt;&gt; go (j - 1)\n    go i\n    unsafeFreeze v'\n</code></pre>\n\n<p>Benchmark is the standard criterion one:</p>\n\n<pre><code>    defaultMain [\n      bgroup \"Storable vector (mutable)\"\n        $ (\\(i :: Int) -&gt; env (mkFooVec (10 ^ i))\n        $ \\v -&gt; bench (\"10e\" &lt;&gt; show i)\n        $ nfIO (populateFooVec (10 ^ i) v))  &lt;$&gt; [6..8]\n    ]\n</code></pre>\n\n<p>The <a href=\"https://gist.github.com/piotrMocz/2a600bc2bf678cf26b988da662a3d37a\" rel=\"nofollow noreferrer\">gist</a> contains other benchmarks, trying to force evaluation in different ways.</p>\n\n<p>Reference C code doing more or less the same can be found <a href=\"https://gist.github.com/piotrMocz/158efc264503d5e487263e092985f656\" rel=\"nofollow noreferrer\">here (gist)</a>. The main logic is the following:</p>\n\n<pre><code>Foo *allocFoos(long n) {\n    return (Foo *) malloc(n * sizeof(Foo));\n}\n\n// populate the array with structs:\nvoid createFoos(Foo *v, long n) {\n    for (long i = 0; i &lt; n; ++i) {\n        v[i].name = i;\n        v[i].id = i + 1;\n    }\n}\n</code></pre>\n\n<p>And the command used to run it: <code>gcc -O2 -o bench benchmark.c &amp;&amp; ./bench</code></p>\n\n<p>Now when I run the benchmarks, the C code takes about 50ms, while Criterion reports results around 800 picoseconds (!). This makes me wonder: maybe I'm interpreting the results wrong? Maybe the vector isn't actually evaluated (although if you look at the Haskell gist, I try to force the evaluation in different ways). What am I doing wrong? If nothing -- how does <code>vector</code> beat a simple for loop in C (that GCC further unrolls, btw)?</p>\n\n<p>Please pardon my terribly long question, I was trying to give the whole context ;)</p>\n"}, {"tags": ["list", "function", "haskell", "monads"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1518008461, "post_id": 48664418, "comment_id": 84326177, "body": "Becaue the type of <code>&gt;&gt;=</code> is <code>(a -&gt; m b) -&gt; m a -&gt; m b</code>. So the <code>f</code> we use with <code>map</code> will produce a list of lists of <code>b</code>s, so we need to convert that to a <code>[b]</code> again."}, {"owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1518008667, "post_id": 48664418, "comment_id": 84326334, "body": "Ah! If it was <code>(a -&gt; m b) -&gt; m a -&gt; b</code> I would not need concat. But because of that <code>m b</code> where <code>m</code> is the list I get a list of singleton-lists?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1518008735, "post_id": 48664418, "comment_id": 84326387, "body": "The type signature in your comment is a bit of a weird one. Do you mean <code>(a -&gt; b) -&gt; m a -&gt; m b</code>? That seems to match more with your conclusion that you wouldn&#39;t need concat. And in fact that is a very useful function: it is <code>fmap</code>, from <code>Functor</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1518009286, "post_id": 48664418, "comment_id": 84326849, "body": "Note that in category theory, monads are defined using <code>return :: a -&gt; m a</code> and <code>join :: m (m a) -&gt; m a</code>. <code>concat</code> is effectively filling the purpose of <code>join</code>, which can be used to implement <code>xs &gt;&gt;= f = join (fmap f xs)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 8, "last_activity_date": 1518026363, "last_edit_date": 1518026363, "creation_date": 1518009207, "answer_id": 48664770, "question_id": 48664418, "link": "https://stackoverflow.com/questions/48664418/list-instance-of-monad-in-haskell-why-use-concat-in-bind-operation/48664770#48664770", "title": "List instance of monad in Haskell - why use concat in bind-operation?", "body": "<p>If</p>\n\n<pre><code>x :: [a]\nf :: a -&gt; [b]\n</code></pre>\n\n<p>then</p>\n\n<pre><code>map f :: [a] -&gt; [[b]]\nmap f x :: [[b]]\n</code></pre>\n\n<p>so, we need to flatten the latter into <code>[b]</code>. This is done by <code>concat</code>.</p>\n\n<p>Note how <code>f</code> was already producing a list, so <code>map</code> makes that into a list-of-lists. This is crucial: if <code>f</code> was not producing a list but were <code>f :: a-&gt;b</code>, then we don't need <code>concat</code> -- we don't even need a monad, since a functor providing <code>fmap=map :: (a-&gt;b) -&gt; [a] -&gt; [b]</code> would be enough.</p>\n\n<p>The added benefit of a monad over a functor mainly lies in letting <code>f</code> produce a value in a monadic type.</p>\n"}], "owner": {"reputation": 107, "user_id": 7625157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebe71e48c552db097529be721e1039e6?s=128&d=identicon&r=PG&f=1", "display_name": "Lyndra", "link": "https://stackoverflow.com/users/7625157/lyndra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 643, "favorite_count": 0, "accepted_answer_id": 48664770, "answer_count": 1, "score": 2, "last_activity_date": 1518026363, "creation_date": 1518008231, "last_edit_date": 1518009296, "question_id": 48664418, "link": "https://stackoverflow.com/questions/48664418/list-instance-of-monad-in-haskell-why-use-concat-in-bind-operation", "title": "List instance of monad in Haskell - why use concat in bind-operation?", "body": "<p>I found some question here: <a href=\"https://stackoverflow.com/questions/27276389/redefining-monad-list-instance\">Redefining monad list instance</a>. I'm currently trying to get my head wrapped around monads. But I need some help here, I don't get the instance-definition of lists as monads.</p>\n\n<p>This is my given definition of a list-instance for a monad:</p>\n\n<pre><code>    instance Monad [] where\n    xs &gt;&gt;= f = concat $ map f xs\n    return x = [x]\n    fail _ = []\n</code></pre>\n\n<p>I dont understand, why I need concat in the bind-function.\nThis is my definition of <code>(&gt;&gt;=)</code>:</p>\n\n<pre><code>    (&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>So I have some monadic value <code>m a</code> and a function, taking a value <code>a</code> and producing a monadic value <code>m b</code> given as parameters. I 'feed' <code>a</code> from <code>m a</code> into the function <code>(a -&gt; m b)</code> and thus get a monadic value <code>m b</code> as a result.\nIn my own words: The bind-operator <code>(&gt;&gt;=)</code> allows to chain monadic functions (returning monadic values) where the value of the output of the earlier function is the input for the next function. Right?</p>\n\n<p>Back to the list-instance. <code>map f xs</code> uses the function <code>f</code> on every value in <code>xs</code>. So <code>map (*2) [1,2,3]</code> results in <code>[2,4,6]</code>. And that's all I wanted here or not? How should I use <code>concat</code> here?\nThe definition of <code>concat</code> is as follows:</p>\n\n<pre><code>    concat :: [[a]] -&gt; [a]\n</code></pre>\n\n<p>Why do I get a list of lists in the <code>(&gt;&gt;=)</code>-function? Is it because list is the monad and I take every single value from that list to feed it to <code>f</code> and <code>map</code> just gets singleton-inputs? But how do I iterate over the whole list then? Where does the 'picking each value' happen? And if <code>map</code> takes the whole list xs as input (that's how I understand it) why should I get a list of lists?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518022887, "post_id": 48664390, "comment_id": 84336518, "body": "Good answer!  If I want <code>Int</code>, I usually write a type signature for some helper function or variable, but another good place to put the type coercion here would be the constant. In GHCI, I would often write <code>(1::Int)</code>. rather than <code>1</code>."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518025309, "post_id": 48664390, "comment_id": 84337963, "body": "@Davislor you can also use <code>asTypeOf</code> if you already have variables with a certain type, e.g. <code>bijection x = read x (show x) `asTypeOf` x</code>."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1518026004, "post_id": 48664390, "comment_id": 84338401, "body": "I don\u2019t think that snippet is quite right, but good suggestion."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 1, "creation_date": 1518026044, "post_id": 48664390, "comment_id": 84338432, "body": "@Davislor yeah, it should have been <code>bijection x = read (show x) `asTypeOf` x</code>."}], "tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 5, "last_activity_date": 1518008154, "last_edit_date": 1592644375, "creation_date": 1518008154, "answer_id": 48664390, "question_id": 48663946, "link": "https://stackoverflow.com/questions/48663946/understanding-readmaybe-text-read/48664390#48664390", "title": "Understanding readMaybe (Text.Read)", "body": "<p><strong>TL;DR:</strong> The context of <code>readMaybe s</code> tells us that it's a <code>Num a =&gt; Maybe a</code>, defaulting makes it a <code>Maybe Integer</code>.</p>\n<hr />\n<p>We have to look at all places where the result of <code>readMaybe</code> is used to determine its type.</p>\n<p>We have</p>\n<ul>\n<li><code>Nothing</code>, which doesn't tell us <em>aynthing</em> about <code>a</code></li>\n<li><code>Just n</code>, and <code>n</code> is used in the context <code>m = n + 1</code>.</li>\n</ul>\n<p>Since <code>m = n + 1</code>, we now know that <code>n</code>'s type must be an instance of <code>Num</code>, since <code>(+) :: Num a =&gt; a -&gt; a -&gt; a</code> and <code>1 :: Num a =&gt; a</code>. At this point the type isn't clear, therefore it <a href=\"https://www.haskell.org/onlinereport/decls.html\" rel=\"noreferrer\">gets <code>default</code>ed</a>:</p>\n<blockquote>\n<h3>4.3.4  Ambiguous Types, and Defaults for Overloaded Numeric Operations</h3>\n<pre><code>topdecl   -&gt;  default (type1 , ... , typen)   (n&gt;=0)\n</code></pre>\n<p>A problem inherent with Haskell -style overloading is the possibility of an ambiguous type. For example, using the read and show functions defined in Chapter 10, and supposing that just Int and Bool are members of Read and Show, then the expression</p>\n<pre><code>let x = read &quot;...&quot; in show x -- invalid\n</code></pre>\n<p>is ambiguous, because the types for show and read,</p>\n<pre><code>show  :: forall a. Show a =&gt;a -&gt;String\nread  :: forall a. Read a =&gt;String -&gt;a\n</code></pre>\n<p>could be satisfied by instantiating a as either Int in both cases, or Bool. Such expressions are considered ill-typed, a static error.</p>\n<p>We say that an expression e has an ambiguous type if, in its type forall u. cx =&gt;t, there is a type variable u in u that occurs in cx but not in t. Such types are invalid.</p>\n</blockquote>\n<p>The <code>default</code>s defined in the Haskell report are <code>default (Integer, Double)</code>, e.g. GHC tries <code>Integer</code> first, and if that doesn't work it tries to use <code>Double</code>.</p>\n<p>Since <code>Integer</code> is a valid type in the context <code>m = n + 1</code>, we have <code>m :: Integer</code>, therefore <code>n :: Integer</code>, and at last <code>readMaybe s :: Maybe Integer</code>.</p>\n<p>If you want to disable <code>default</code>s, use <code>default ()</code> and you'll be greeted by ambiguous types errors, just as you expected.</p>\n"}, {"comments": [{"owner": {"reputation": 43, "user_id": 9327407, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d179db1a9e911d8ef84b6dd05c55b93?s=128&d=identicon&r=PG&f=1", "display_name": "oreilleDough", "link": "https://stackoverflow.com/users/9327407/oreilledough"}, "edited": false, "score": 0, "creation_date": 1518010364, "post_id": 48664619, "comment_id": 84327610, "body": "Thank you for your very detailed answer. I added <code>{-# OPTIONS_GHC -Wall #-}</code> so that I get a handful of helping warnings. I did not know about type propagation (let alone backward propagation !), it seems to be very powerful indeed."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1518008785, "creation_date": 1518008785, "answer_id": 48664619, "question_id": 48663946, "link": "https://stackoverflow.com/questions/48663946/understanding-readmaybe-text-read/48664619#48664619", "title": "Understanding readMaybe (Text.Read)", "body": "<p>There indeed some underlying magic, due to how type inference works.</p>\n\n<p>Here's a simpler example, run inside GHCi:</p>\n\n<pre><code>&gt; print (1 :: Integer)\n1\n&gt; print (1 :: Float)\n1.0\nPrelude&gt; print 1\n1\n</code></pre>\n\n<p>In the last line, <code>1</code> is a polymorphic value of type <code>Num a =&gt; a</code>, i.e. a value inside any numeric type like <code>Integer</code> and <code>Float</code>. If we consider that value inside type <code>Integer</code>, we print it as \"1\". If we consider it as a <code>Float</code>, we print it as \"1.0\". Other numeric types may even have different print formats.</p>\n\n<p>Still, GHCi in the last line decides that <code>1</code> is an <code>Integer</code>. Why?</p>\n\n<p>Well, it turns out that the code is ambiguous: after all <code>1</code> could be printed in different ways! Haskell in such cases raises an error, due to the ambiguity. However, it makes an exception for numeric types (those inc lass <code>Num</code>), to be more convenient to program. Concretely, when a numeric type is not precisely determined by the code, Haskell uses its <em>defaulting rules</em>, which specify which numeric types should be used.</p>\n\n<p><a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html?highlight=default#ghc-flag--Wtype-defaults\" rel=\"nofollow noreferrer\">GHC can warn</a> when defaulting happens, if wanted.</p>\n\n<p>Further, the types are propagated. If we evaluate</p>\n\n<pre><code>case readMaybe s of\n  Just x -&gt; let z = x + length ['a','z']\n            in ...\n</code></pre>\n\n<p>GHC knows that <code>length</code> returns an <code>Int</code>. Also, <code>(+)</code> operates only on arguments of the same type, hence <code>x</code> has to be an <code>Int</code> as well. This in turns implies that the call <code>readMaybe s</code> has to return <code>Maybe Int</code>. Hence, the right <code>Read</code> instance for <code>Int</code>s is chosen.</p>\n\n<p>Note how this information is propagated backwards by the type inference engine, so that the programmer does not have to add type annotations which can be deduced from the rest of the code. It happens very frequently in Haskell.</p>\n\n<p>One can always be explicit, as in</p>\n\n<pre><code>readMaybe s :: Maybe Int\n-- or, with extensions on, one can mention the variable part of the type, only\nreadMaybe s @ Int\n</code></pre>\n\n<p>If you prefer, feel free to add such annotations. Sometimes, they make the code more readable since they document your intent. Whoever reads the code, can immediately spot which <code>Read</code> instance is being used here without looking at the context.</p>\n"}], "owner": {"reputation": 43, "user_id": 9327407, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d179db1a9e911d8ef84b6dd05c55b93?s=128&d=identicon&r=PG&f=1", "display_name": "oreilleDough", "link": "https://stackoverflow.com/users/9327407/oreilledough"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 709, "favorite_count": 0, "accepted_answer_id": 48664390, "answer_count": 2, "score": 4, "last_activity_date": 1518008785, "creation_date": 1518006858, "question_id": 48663946, "link": "https://stackoverflow.com/questions/48663946/understanding-readmaybe-text-read", "title": "Understanding readMaybe (Text.Read)", "body": "<p>I'm currenlty learning Haskell and have questions regarding this example found in <a href=\"http://www.seas.upenn.edu/~cis194/fall16/lectures/06-io-and-monads.html\" rel=\"nofollow noreferrer\">Joachim Breitner's online course CIS194</a>:</p>\n\n<pre><code>import Text.Read\nmain = putStrLn \"Hello World. Please enter a number:\" &gt;&gt;\n       getLine &gt;&gt;= \\s -&gt;\n       case readMaybe s of   -- why not `readMaybe s :: Maybe Int` ?!\n           Just n -&gt;  let m = n + 1 in\n                      putStrLn (show m)\n           Nothing -&gt; putStrLn \"That\u2019s not a number! Try again\"\n</code></pre>\n\n<p>The code does exactly what expected, that is it returns an integer +1 if the input is an integer and it returns \"That\u2019s not a number! Try again\" otherwise (<em>e.g.</em> if the input is a <code>Double</code>).\nI don't understand why <code>readMaybe s</code> only returns <code>Just n</code> if <code>n</code> is of type <code>Int</code>. The type of <code>readMaybe</code> is <code>readMaybe :: Read a =&gt; String -&gt; Maybe a</code> and therefore I thought it would only work if the line read instead:</p>\n\n<pre><code>case readMaybe s :: Maybe Int of\n</code></pre>\n\n<p>In fact if I just prompt <code>&gt; readMaybe \"3\"</code> in ghci, it returns <code>Nothing</code>, whereas <code>&gt; readMaybe \"3\" :: Maybe Int</code> returns <code>Just 3</code>.</p>\n\n<p>To sum up, my question is the following: how does the compiler now that <code>s</code> is parsed to an <code>Int</code> and not something else (<em>e.g.</em> <code>Double</code>) without the use of <code>:: Maybe Int</code>? Why does it not return <code>Nothing</code> everytime ?</p>\n\n<p>I hope my question was clear enough, thanks a lot for your help. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1518000989, "post_id": 48662019, "comment_id": 84321366, "body": "Am I corect that one is in the <code>Safe</code> and the other in the <code>Text.Read</code> module?"}, {"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1518001016, "post_id": 48662019, "comment_id": 84321384, "body": "yes, you are correct"}], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 7, "last_activity_date": 1518001376, "creation_date": 1518001376, "answer_id": 48662213, "question_id": 48662019, "link": "https://stackoverflow.com/questions/48662019/what-is-the-difference-between-readmay-and-readmaybe/48662213#48662213", "title": "What is the difference between `readMay` and `readMaybe`?", "body": "<p>There is no difference. Here's how <code>readMay</code>'s defined:</p>\n\n<pre><code>-- | This function provides a more precise error message than 'readEither' from 'base'.\nreadEitherSafe :: Read a =&gt; String -&gt; Either String a\nreadEitherSafe s = case [x | (x,t) &lt;- reads s, (\"\",\"\") &lt;- lex t] of\n        [x] -&gt; Right x\n        []  -&gt; Left $ \"no parse on \" ++ prefix\n        _   -&gt; Left $ \"ambiguous parse on \" ++ prefix\n    where\n        maxLength = 15\n        prefix = '\\\"' : a ++ if length s &lt;= maxLength then b ++ \"\\\"\" else \"...\\\"\"\n            where (a,b) = splitAt (maxLength - 3) s\n\nreadMay :: Read a =&gt; String -&gt; Maybe a\nreadMay = eitherToMaybe . readEitherSafe\n</code></pre>\n\n<p>And here is <code>readMaybe</code>:</p>\n\n<pre><code>-- | Parse a string using the 'Read' instance.\n-- Succeeds if there is exactly one valid result.\n-- A 'Left' value indicates a parse error.\n--\n-- @since 4.6.0.0\nreadEither :: Read a =&gt; String -&gt; Either String a\nreadEither s =\n  case [ x | (x,\"\") &lt;- readPrec_to_S read' minPrec s ] of\n    [x] -&gt; Right x\n    []  -&gt; Left \"Prelude.read: no parse\"\n    _   -&gt; Left \"Prelude.read: ambiguous parse\"\n where\n  read' =\n    do x &lt;- readPrec\n       lift P.skipSpaces\n       return x\n\n-- | Parse a string using the 'Read' instance.\n-- Succeeds if there is exactly one valid result.\n--\n-- @since 4.6.0.0\nreadMaybe :: Read a =&gt; String -&gt; Maybe a\nreadMaybe s = case readEither s of\n                Left _  -&gt; Nothing\n                Right a -&gt; Just a\n</code></pre>\n\n<p>They differ in the intermediate error message (<code>readEitherSafe</code> shows the input), but the result will be same.</p>\n\n<hr>\n\n<p><code>readMay</code> from <code>Safe</code> predates <code>readMaybe</code> from <code>Text.Read</code>. Unless you're on a <code>base</code> version less than 4.6.0.0, use <code>readMaybe</code> from <code>Text.Read</code> as it does not need another package.</p>\n"}], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 342, "favorite_count": 0, "accepted_answer_id": 48662213, "answer_count": 1, "score": 3, "last_activity_date": 1518001376, "creation_date": 1518000870, "last_edit_date": 1518001073, "question_id": 48662019, "link": "https://stackoverflow.com/questions/48662019/what-is-the-difference-between-readmay-and-readmaybe", "title": "What is the difference between `readMay` and `readMaybe`?", "body": "<p>The two functions <code>readMay</code> and <code>readMaybe</code> have the same signature <code>Read a =&gt; String -&gt; Maybe a</code>.</p>\n\n<p>Is there any difference between them? If so, what are they? Which of the two function should be preferred?</p>\n"}, {"tags": ["haskell", "typeclass"], "answers": [{"tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": false, "score": 2, "last_activity_date": 1517970895, "last_edit_date": 1517970895, "creation_date": 1517970534, "answer_id": 48655034, "question_id": 48654955, "link": "https://stackoverflow.com/questions/48654955/haskell-confused-about-uses-of-num-typeclass/48655034#48655034", "title": "Haskell: confused about uses of Num typeclass", "body": "<p>The numeric constant <code>42</code> is defined to be the same as <code>fromIntegral (42::Integer)</code>, and any instance of <code>Num</code> has an implementation of <code>fromIntegral</code>.  It occurs in the expression <code>x * 42</code>, so its inferred type is the same as <code>x</code>, which is an <code>instance</code> of <code>Num</code>.  So the compiler calls the proper version of <code>fromIntegral</code> for that <code>Num</code> <code>instance</code> (or rather, does the calculation at compile time) and everything is hunky-dorey.</p>\n\n<p>But a constant with a decimal point tries to convert from a decimal to the type of <code>x</code>.  All we know about that type is that it\u2019s an <code>instance</code> of <code>Num</code>, so it can\u2019t do the conversion in the general case.  There\u2019s no way to represent <code>4.2</code> as, say, an <code>Integer</code>.</p>\n\n<p>As the error message says, the compiler can convert a decimal constant to any <code>Fractional</code> type.  So change the type constraint from <code>Num</code> to <code>Fractional</code>, and the decimal will work.</p>\n"}, {"comments": [{"owner": {"reputation": 33, "user_id": 9325006, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-DSuAdSfxVQY/AAAAAAAAAAI/AAAAAAAAAig/Lp4IBBMIJOI/photo.jpg?sz=128", "display_name": "Luciana", "link": "https://stackoverflow.com/users/9325006/luciana"}, "edited": false, "score": 0, "creation_date": 1518043410, "post_id": 48655095, "comment_id": 84347560, "body": "So, when you say: &quot;but the two operands have the same type&quot;, you mean that applying the function this way should work?: <b>g 3.14</b>. I&#39;ve tried <b>f 3.14</b> for example, and it worked, that&#39;s why I&#39;m so confused :/"}, {"owner": {"reputation": 2424, "user_id": 3206471, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/fdc1f4bd9f3118fff33a160e9efdb61e?s=128&d=identicon&r=PG", "display_name": "gigabytes", "link": "https://stackoverflow.com/users/3206471/gigabytes"}, "reply_to_user": {"reputation": 33, "user_id": 9325006, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-DSuAdSfxVQY/AAAAAAAAAAI/AAAAAAAAAig/Lp4IBBMIJOI/photo.jpg?sz=128", "display_name": "Luciana", "link": "https://stackoverflow.com/users/9325006/luciana"}, "edited": false, "score": 0, "creation_date": 1518047683, "post_id": 48655095, "comment_id": 84349056, "body": "Yes, <code>g 3.14</code> works because <code>3.14</code> is a Fractional. Also <code>f 3.14</code> works because any fractional is also a Num, so 42 can be instantiated as a Fractional value without any problems. Remember that the literals are not of a specific type, but they are of <i>any</i> t type as long as t is a Num (or Fractional). I\u2019ll edit the answer later to better elaborate this point."}, {"owner": {"reputation": 33, "user_id": 9325006, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-DSuAdSfxVQY/AAAAAAAAAAI/AAAAAAAAAig/Lp4IBBMIJOI/photo.jpg?sz=128", "display_name": "Luciana", "link": "https://stackoverflow.com/users/9325006/luciana"}, "edited": false, "score": 0, "creation_date": 1518048484, "post_id": 48655095, "comment_id": 84349269, "body": "I&#39;ve just tried <code>g 3.14</code> and it didn&#39;t work (with <code>g</code> defined like I said in my post), same error :("}, {"owner": {"reputation": 2424, "user_id": 3206471, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/fdc1f4bd9f3118fff33a160e9efdb61e?s=128&d=identicon&r=PG", "display_name": "gigabytes", "link": "https://stackoverflow.com/users/3206471/gigabytes"}, "reply_to_user": {"reputation": 33, "user_id": 9325006, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-DSuAdSfxVQY/AAAAAAAAAAI/AAAAAAAAAig/Lp4IBBMIJOI/photo.jpg?sz=128", "display_name": "Luciana", "link": "https://stackoverflow.com/users/9325006/luciana"}, "edited": false, "score": 0, "creation_date": 1518048879, "post_id": 48655095, "comment_id": 84349380, "body": "Yes, as I wrote in the answer, the <code>Num a</code> constraint in the type is too broad. Change it to <code>Fractional a</code> and everything should work as expected."}], "tags": [], "owner": {"reputation": 2424, "user_id": 3206471, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/fdc1f4bd9f3118fff33a160e9efdb61e?s=128&d=identicon&r=PG", "display_name": "gigabytes", "link": "https://stackoverflow.com/users/3206471/gigabytes"}, "is_accepted": true, "score": 5, "last_activity_date": 1517971073, "creation_date": 1517971073, "answer_id": 48655095, "question_id": 48654955, "link": "https://stackoverflow.com/questions/48654955/haskell-confused-about-uses-of-num-typeclass/48655095#48655095", "title": "Haskell: confused about uses of Num typeclass", "body": "<p>The problem is that the <code>Num a</code> constraint is too broad. Using the interpreter might help:</p>\n\n<pre><code>Prelude&gt; :type 42\n42 :: Num t =&gt; t\nPrelude&gt; :type 4.2\n4.2 :: Fractional t =&gt; t\n</code></pre>\n\n<p>Numeric literals in Haskell are polymorphic, so as the types are saying, the literals are instantiated as any type as long as the type is a <code>Num</code> or, respectively, a <code>Fractional</code>. </p>\n\n<p>Now look at the type signature of the <code>(*)</code> function from the <code>Num</code> class:</p>\n\n<pre><code>Prelude&gt; :type (*)\n(*) :: Num a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>The <code>(*)</code> operator works on any <code>Num</code> value, but the two operands have <em>the same type</em>. So if you are multiplying by a value of Fractional type (whatever type the literal <code>4.2</code> will be instantiated into), the other operand must be Fractional as well, and the same type in particular. This is why the <code>Num</code> constraint on your function is too broad: your function cannot work on any <code>Num</code> type, but only on <code>Fractional</code>s, hence the compiler is saying that you are missing a <code>Fractional a =&gt;</code> constraint in the type signature.</p>\n\n<p>If you let the compiler inference the type of your function, it will agree:</p>\n\n<pre><code>Prelude&gt; let g x = x * 4.2\nPrelude&gt; :type g\ng :: Fractional a =&gt; a -&gt; a\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 4, "last_activity_date": 1517983189, "creation_date": 1517983189, "answer_id": 48656952, "question_id": 48654955, "link": "https://stackoverflow.com/questions/48654955/haskell-confused-about-uses-of-num-typeclass/48656952#48656952", "title": "Haskell: confused about uses of Num typeclass", "body": "<p>Haskell types work differently than it appears you are expecting.</p>\n\n<p><code>Num a =&gt; a -&gt; a</code> does not mean \"there is some type <code>a</code> that is an instance of <code>Num</code> for which this takes a value of type <code>a</code> and returns a value of type <code>a</code>.\"</p>\n\n<p>It means \"For every single type <code>a</code> that is an instance of <code>Num</code>, this takes a value of type <code>a</code> and returns a value of type <code>a</code>.\"</p>\n\n<p>This means that it has to work for any type the caller chooses.  If the caller chooses <code>a ~ Int</code> (<code>~</code> is the syntax for type equality, which some optional GHC features enable as a constraint) and then calls <code>g 1</code>, what <code>Int</code> value should that be?</p>\n\n<p>Well, that doesn't work out very well.  <code>4.2</code> isn't a valid <code>Int</code>.  So the <code>*</code> operator fails to type-check, because it can't make the types of its arguments match.</p>\n\n<p>This is why it has a more restrictive type - the types it accepts must be types that the literal <code>4.2</code> is a valid representation of. That ends up requiring a <code>Fractional</code> constraint.</p>\n\n<p>Type variables in Haskell are universally quantified. They always make statements about <em>all</em> types which satisfy their constraints. If there is ever a counter-example possible, things won't type-check.</p>\n"}], "owner": {"reputation": 33, "user_id": 9325006, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-DSuAdSfxVQY/AAAAAAAAAAI/AAAAAAAAAig/Lp4IBBMIJOI/photo.jpg?sz=128", "display_name": "Luciana", "link": "https://stackoverflow.com/users/9325006/luciana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 1, "accepted_answer_id": 48655095, "answer_count": 3, "score": 2, "last_activity_date": 1517983189, "creation_date": 1517969949, "last_edit_date": 1517971330, "question_id": 48654955, "link": "https://stackoverflow.com/questions/48654955/haskell-confused-about-uses-of-num-typeclass", "title": "Haskell: confused about uses of Num typeclass", "body": "<p>I'm confused about why this works:</p>\n\n<pre><code>f :: Num a =&gt; a -&gt; a\nf x = x * 42\n</code></pre>\n\n<p>But this doesn't:</p>\n\n<pre><code>g :: Num a =&gt; a -&gt; a\ng x = x * 4.2\n</code></pre>\n\n<p>I had understood that <code>Num</code> enclosed all types that implemented operators <code>(+)</code>, <code>(-)</code>, <code>(*)</code>. So, if <code>42</code> is an <code>Int</code> and <code>4.2</code> is a <code>Fractional</code>, and both types implement the operator <code>(*)</code>, why am I getting this error for <code>g</code>?:</p>\n\n<pre><code>Could not deduce (Fractional a) arising from the literal \u20184.2\u2019 \nfrom the context (Num a)\nbound by the type signature for g :: Num a =&gt; a -&gt; a\nat file.hs:9:6-20\nPossible fix:\nadd (Fractional a) to the context of\nthe type signature for g :: Num a =&gt; a -&gt; a\n</code></pre>\n"}, {"tags": ["haskell", "functional-programming", "language-agnostic", "fold"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 4, "creation_date": 1517965137, "post_id": 48654292, "comment_id": 84306783, "body": "Haskell is lazy, so the second parameter to <code>A</code> is only evaluated if necessary."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1517969343, "post_id": 48654292, "comment_id": 84307900, "body": "You say, &quot;The example is <code>A x (B x (C x D))</code> which still means it needs to execute the right-most thing first.&quot;. (Here I assume by &quot;right-most thing&quot; you mean <code>D</code>, or possibly <code>C x D</code>.) This appears to be the fundamental mistake you&#39;ve made in your reasoning."}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 4, "creation_date": 1517995974, "post_id": 48654292, "comment_id": 84317922, "body": "I suspect that you&#39;re confusing associativity (which applies to operators) with order of evaluation (which applies to their operands). In <code>A x (B x (C x D))</code>, you can evaluate <code>A</code> before <code>B x (C x D)</code>, and if you know that <code>A</code> provides the answer you never need to evaluate <code>B x (C x D)</code>. (Consider for example <code>0 * (123456789 * (890123456 * 789123456))</code>, which you can immediately see is <code>0</code>.)"}], "answers": [{"tags": [], "owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "is_accepted": false, "score": 1, "last_activity_date": 1517966754, "creation_date": 1517966754, "answer_id": 48654574, "question_id": 48654292, "link": "https://stackoverflow.com/questions/48654292/why-does-foldright-work-for-infinite-lists/48654574#48654574", "title": "Why does foldright work for infinite lists?", "body": "<p>Your objection proves too much. If it was valid, no infinite lists at all would be possible! An infinite list is constructed using <code>(:)</code>. Its second argument, the tail of the list, is also an infinite list, and would have to be evaluated first. This recursively doesn't get us anywhere.</p>\n"}, {"comments": [{"owner": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "edited": false, "score": 0, "creation_date": 1518156011, "post_id": 48654779, "comment_id": 84397742, "body": "What about fold left? If it&#39;s left associative, but it &quot;works from the outside inwards&quot;, wouldn&#39;t that mean fold left starts from the right and that it could never work with infinite lists?"}, {"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "reply_to_user": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "edited": false, "score": 2, "creation_date": 1518174174, "post_id": 48654779, "comment_id": 84407094, "body": "adrianmc - you\u2019ve got it exactly"}], "tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": true, "score": 12, "last_activity_date": 1517968381, "creation_date": 1517968381, "answer_id": 48654779, "question_id": 48654292, "link": "https://stackoverflow.com/questions/48654292/why-does-foldright-work-for-infinite-lists/48654779#48654779", "title": "Why does foldright work for infinite lists?", "body": "<p>Let's start with a function:</p>\n\n<pre><code>&gt;&gt;&gt; let check x y = if x &gt; 10 then x else y\n&gt;&gt;&gt; check 100 5\n100\n&gt;&gt;&gt; check 0 5\n5\n</code></pre>\n\n<p><code>check</code> takes two arguments, but might not use its second argument.  Since haskell is lazy, this means that the second argument may never be evaluated:</p>\n\n<pre><code>&gt;&gt;&gt; check 20 (error \"fire the missles!\")\n20\n</code></pre>\n\n<p>This laziness lets us skip a possibly <em>infinite</em> amount of work:</p>\n\n<pre><code>&gt;&gt;&gt; check 30 (sum [1..])\n30\n</code></pre>\n\n<p>Now let's step through <code>foldr check 0 [0..]</code> using equational reasoning:</p>\n\n<pre><code>foldr check 0 [0..]\n= check 0 (foldr check 0 [1..]) -- by def'n of foldr\n= foldr check 0 [1..] -- by def'n of check\n= check 1 (foldr check 0 [2..]) -- by def'n of foldr\n= foldr check 0 [2..] -- by def'n of check\n-- ...\n= foldr check 0 [10..]\n= check 10 (foldr check 0 [11..]) -- by def'n of foldr\n= foldr check 0 [11..] -- by def'n of check\n= check 11 (foldr check 0 [12..]) -- by def'n of foldr\n= 11 -- by def'n of check\n</code></pre>\n\n<p>Note how laziness forces us to evaluate from the top-down, seeing how (and if) the outer-most function call uses its arguments, rather than from the bottom-up (evaluating all arguments before passing them to a function), as strict languages do.</p>\n"}, {"tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": false, "score": 4, "last_activity_date": 1517969528, "last_edit_date": 1517969528, "creation_date": 1517969179, "answer_id": 48654868, "question_id": 48654292, "link": "https://stackoverflow.com/questions/48654292/why-does-foldright-work-for-infinite-lists/48654868#48654868", "title": "Why does foldright work for infinite lists?", "body": "<p>It works because of lazy evaluation.  Let\u2019s take a really simple example.</p>\n\n<pre><code>import Data.Char (toUpper)\n\nmain :: IO ()\nmain = interact (foldr capitalized []) where\n  capitalized :: Char -&gt; String -&gt; String\n  capitalized x xs = (toUpper x):xs\n</code></pre>\n\n<p>Run this program interactively and see what happens.  The input is an infinite (or at least indefinite) list of characters read from standard input.</p>\n\n<p>This works because each element of the output list gets produced lazily, when it is needed.  So the tail is <strong>not</strong> produced first: it\u2019s only computed if and when it\u2019s needed.  Until then, it\u2019s deferred, and we can use the partial results.  The partial result for <code>'h':xs</code> is <code>'H':(foldr capitalized [] xs)</code>.  The partial result for <code>'h':'e':'l':'l':'o':',':' ':'w':'o':'r':'l':'d':'!':'\\n':xs</code> is a string we can output before we proceed to the tail <code>xs</code>.</p>\n\n<p>Now see what happens if you try this with <code>foldl</code>.</p>\n\n<p>This works for any data structure that generates a useful prefix.  For a reduction operation that produces a single value, and no useful intermediate results, a strict left fold (<code>Data.List.foldl'</code>) is usually the better choice.</p>\n"}], "owner": {"reputation": 1738, "user_id": 839793, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8c937b20c39c2d768b9e68c800eb3f81?s=128&d=identicon&r=PG", "display_name": "adrianmc", "link": "https://stackoverflow.com/users/839793/adrianmc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 397, "favorite_count": 0, "accepted_answer_id": 48654779, "answer_count": 3, "score": 3, "last_activity_date": 1517991595, "creation_date": 1517964603, "question_id": 48654292, "link": "https://stackoverflow.com/questions/48654292/why-does-foldright-work-for-infinite-lists", "title": "Why does foldright work for infinite lists?", "body": "<p>I was under the impression that <code>foldright</code> starts from the end of a list and works backwards (this is how I imagined what right-associative means). So I am confused that the following works for infinite lists.</p>\n\n<p>I have a function <code>find</code>:</p>\n\n<pre><code>find :: (a -&gt; Bool) -&gt; List a -&gt; Optional a\nfind p = foldRight (\\c a -&gt; if p c then Full c else a) Empty\n</code></pre>\n\n<p>Note that the following work:</p>\n\n<pre><code>&gt;&gt; find (const True) infinity\nFull 0\n</code></pre>\n\n<p>I did do some searching and found this post: <a href=\"https://stackoverflow.com/questions/1446419/how-do-you-know-when-to-use-fold-left-and-when-to-use-fold-right\">How do you know when to use fold-left and when to use fold-right?</a></p>\n\n<p>Unfortunately, the accepted answer is not particularly helpful because the example for right-associative operations is:</p>\n\n<pre><code>A x (B x (C x D))\n</code></pre>\n\n<p>Which still means it needs to execute the right-most thing first.</p>\n\n<p>I was wondering if anyone can clear this up for me, thanks.</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517964627, "post_id": 48654253, "comment_id": 84306635, "body": "I am just wanting to flatten a list of lists [[a]] into a single list [a] with no duplicates"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1517964645, "post_id": 48654253, "comment_id": 84306639, "body": "Have you tried anything to achieve deduplification? If so, what went wrong?"}, {"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 1, "creation_date": 1517964666, "post_id": 48654253, "comment_id": 84306641, "body": "<code>nub</code> is the hard-to-google name you need."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1517964696, "post_id": 48654253, "comment_id": 84306654, "body": "<code>nub</code> is O(n^2) and might not be the name you need depending on what you want."}, {"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1517964839, "post_id": 48654253, "comment_id": 84306683, "body": "@ThomasM.DuBuisson, I have tried to do some checking such as if xs == x, try and call the function again. But I do not understand how to essentially skip over duplicates."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1517965408, "post_id": 48654253, "comment_id": 84306874, "body": "Hint: your <code>flatten</code> is just <code>concat</code>. And to flatten and remove duplicates, use <code>nub . concat</code>."}, {"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1517965474, "post_id": 48654253, "comment_id": 84306896, "body": "@Bergi, you&#39;re right, it is an implementation of concat, but I am trying to do things without using built in functions as best I can (I should have mentioned that earlier)"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1517965683, "post_id": 48654253, "comment_id": 84306951, "body": "@PushedCrayon OK. Still, you should only implement the duplicate elimination (<code>nub</code>) on the flat list and then compose it with the <code>concat</code> implementation, instead of trying to do everything at once."}], "answers": [{"comments": [{"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517967194, "post_id": 48654559, "comment_id": 84307369, "body": "Would there be any way to possibly look ahead at the next item in a list and compare it to the current item? If they are similar you could skip over it.. I don&#39;t know if that is a possibility in Haskell"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517971344, "post_id": 48654559, "comment_id": 84308332, "body": "@PushedCrayon Yes: Try the pattern guard <code>f (x1:x2:xs) | x1 == x2 = f (x2:xs)</code>.  The type of the list elements must be an instance of <code>Eq</code> for <code>==</code> to be defined."}], "tags": [], "owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "is_accepted": false, "score": 4, "last_activity_date": 1518020345, "last_edit_date": 1518020345, "creation_date": 1517966634, "answer_id": 48654559, "question_id": 48654253, "link": "https://stackoverflow.com/questions/48654253/how-to-modify-haskell-function-to-remove-duplicates/48654559#48654559", "title": "How to modify haskell function to remove duplicates", "body": "<p>Skipping over duplicates in an unsorted list requires keeping a set of already-seen elements, and checking every incoming element.</p>\n\n<p>Something like:</p>\n\n<pre><code>dedupliction_step :: [a] -&gt; SetOf a -&gt; [a] -&gt; [a]\n\ndeduplication_step [] _ output = output\ndedupliction_step (x:rest) already_seen output = \n  if x `belongsTo` already_seen then deduplication_step rest already_seen output\n  else deduplication_step rest updated_seen x:output where\n    updated_seen = putElementInto already_seen x\n</code></pre>\n\n<p>This gives you the idea. How do you implement <code>SetOf</code> and its related manipulations, depends on the problem at hand. </p>\n\n<p>For short sets, you can use <code>SetOf</code> = <code>List</code>; then <code>belongsTo</code> = <code>elem</code>. It has a linear lookup time, though, so for long sets it becomes expensive.</p>\n\n<p>For long sets, you can use e.g. a <code>Data.Tree</code> or <code>Data.Set</code> with logarithmic lookup and update time.</p>\n\n<p>For short sets of numbers, <code>Data.Bits</code> could be considered; it's O(1) lookup and update, but limited to 32 or 64 values.</p>\n"}], "owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 1, "closed_date": 1517982026, "answer_count": 1, "score": 0, "last_activity_date": 1518020345, "creation_date": 1517964208, "question_id": 48654253, "link": "https://stackoverflow.com/questions/48654253/how-to-modify-haskell-function-to-remove-duplicates", "closed_reason": "Needs more focus", "title": "How to modify haskell function to remove duplicates", "body": "<p>I have this haskell function that flattens a two deep list into one list. How can I edit it to make sure that it doesn't allow for duplicates? An example would be </p>\n\n<pre><code>flatten[['a'],[],['a','b']] --&gt; ['a','b']\n</code></pre>\n\n<p>My current program would output</p>\n\n<pre><code>['a','a','b']\n\nflatten :: [[a]] -&gt; [a]\nflatten []            = []\nflatten ([]:vs)       = flatten vs\nflatten ((x:xs):vs)   = x:flatten (xs:vs)\n</code></pre>\n"}, {"tags": ["sorting", "haskell", "recursion", "insertion"], "answers": [{"tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": true, "score": 1, "last_activity_date": 1517986195, "last_edit_date": 1517986195, "creation_date": 1517966259, "answer_id": 48654507, "question_id": 48654207, "link": "https://stackoverflow.com/questions/48654207/recursive-insertion-sort-function-in-haskell/48654507#48654507", "title": "Recursive insertion sort function in Haskell", "body": "<p>Okay, let\u2019s take a look.  You said you understand most of it already, but I\u2019ll go through the rest of it anyway, for completeness.</p>\n\n<pre><code>isort :: [Int] -&gt; [Int]\n</code></pre>\n\n<p>Integer sort takes and returns a list of <code>Int</code>.</p>\n\n<pre><code>isort [] = []\n</code></pre>\n\n<p>A base case of the tail-recursive function: the empty list is sorted.  In practice, sorting an empty list is trivial and we never care about it, and recursion on a non-empty list will always hit the next base case before this one, so this line is here primarily so the pattern guards will cover every possible list.</p>\n\n<pre><code>isort [x] = [x]\n</code></pre>\n\n<p>A singleton list is sorted, tautologically.  This is the base case that we will reach in practice.</p>\n\n<pre><code>isort (x:xs) = insert (isort xs)\n</code></pre>\n\n<p>Now we get to the line you asked about.  This is the recursive case.  It calls the <code>insert</code> function, defined below, on the tail of the list.  You can think of the head of the list, <code>x</code>, as a hidden parameter of <code>insert</code>.</p>\n\n<p>This function basically sorts the tail of the list and then inserts the head into that sorted list:</p>\n\n<pre><code>  where\n        insert [] = [x]\n</code></pre>\n\n<p>Inserting <code>x</code> into the empty list produces a singleton list.</p>\n\n<pre><code>        insert (y:ys)\n          | x &lt; y = x : y : ys\n          | otherwise = y : insert ys\n</code></pre>\n\n<p>This pair of cases handles the non-trivial insertion with a second recursive function.  It assumes that the <code>xs</code> is sorted, and maintains that invariant.  As such, it traverses the input list and, the first time it encounters an element greater than <code>x</code>, it splices <code>x</code> in at the head of the list.  (One easy optimization would be to also do this if <code>y</code> is <em>equal</em> to <code>x</code>, instead of reading a lot of duplicates\u2014imagine if you\u2019re sorting a list that contains the same element millions of times!)</p>\n\n<p>While the elements of the input list are less than (or, as written, equal to) <code>x</code>, it creates a new prefix list which will be spliced in front of <code>x</code>.</p>\n\n<p>So, if you call it with <code>x:xs</code> as <code>[3,2,1]</code>, it will first split that into <code>3:[2,1]</code> and call itself recursively on <code>[2,1]</code>.  Then, it will again recurse and generate <code>2:[1]</code>, see that <code>[1]</code> is a singleton, and stop recursing and start unwinding the stack.  On the way back out, it\u2019ll see that 2>1 and recurse again, inserting 2 into [] and prepending 1 to get <code>1:[2]</code>.  Then, it gets back to the scope of the original call, and attempts to insert <code>3</code> into <code>[1,2]</code>.  It now recurses twice, generating the prefix <code>1:2</code> and inserts <code>3</code> into <code>[]</code> to get <code>1:2:[3]</code>, or <code>[1,2,3]</code>, which it returns.</p>\n\n<p>That implementation is a good start, but an experienced Haskell programmer would probably write a version that\u2019s <em>tail-recursive modulo cons</em>.  You\u2019re more likely to see something like this expressed as a strict left fold, where the accumulating parameter is the sorted prefix of the list so far and each step inserts the head of the remaining list into it to obtain a new sorted prefix list.  (Well, in the real world they would use a different sorting algorithm that doesn\u2019t take quadratic time, and so would you if you weren\u2019t doing this as an exercise, but the strict-left-fold and tail-recursion-modulo-cons patterns are very useful.)  That is more efficient because the compiler can implement it with a single stack frame and a single strict accumulator, which is equivalent to a <code>while</code> loop in imperative languages.  A right fold, where you start with the empty list and insert each element in reverse order, would also work, although it doesn\u2019t really have any advantages here.</p>\n\n<p>Some sample code, which as you can see is very similar:</p>\n\n<pre><code>import Data.List (foldl')\n\ninsertSort :: Ord a =&gt; [a] -&gt; [a]\ninsertSort = foldl' insert [] where\n  insert [] x = [x]\n  insert (y:ys) x | x &lt;= y    = x:y:ys\n                  | otherwise = y:(insert ys x)\n</code></pre>\n\n<p>The difference if you walk through the <code>[3,2,1]</code> example again is that it goes from left to right, first generating <code>[3]</code>, then inserting <code>2</code> to get <code>[2,3]</code>, then inserting <code>1</code> to get <code>[1,2,3]</code>.  The accumulating parameter is strict and all calls it makes are tail calls, so it should be much faster and need less memory at once.  The <code>insert</code> helper function itself is tail-recursive modulo cons.</p>\n"}, {"tags": [], "owner": {"reputation": 3633, "user_id": 675154, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/23da6806cab4830b5d1b15ef2a410541?s=128&d=identicon&r=PG", "display_name": "delta", "link": "https://stackoverflow.com/users/675154/delta"}, "is_accepted": false, "score": 0, "last_activity_date": 1517966349, "creation_date": 1517966349, "answer_id": 48654522, "question_id": 48654207, "link": "https://stackoverflow.com/questions/48654207/recursive-insertion-sort-function-in-haskell/48654522#48654522", "title": "Recursive insertion sort function in Haskell", "body": "<p>Do not think too deep when dealing with recursion, let the recursion itself does. Let's first clarify what <code>isort</code>, <code>insert</code> does.</p>\n\n<ol>\n<li><code>isort xs</code> sort list <code>xs</code> in increasing order</li>\n<li><code>insert (isort xs)</code> tries to insert a single element <code>x</code> into a <strong>sorted</strong> list: <code>isort xs</code></li>\n<li><code>insert (y:ys)</code> tries to find a proper position for <code>x</code></li>\n<li>list <code>y:ys</code> is in increasing order!</li>\n<li>if <code>x&lt;y</code>, we find where <code>x</code> belong!</li>\n<li>otherwise, <code>x&gt;=y</code>, <code>x</code> should appear later than <code>x</code>, so we go to a sub-problem: <code>insert ys</code></li>\n</ol>\n"}], "owner": {"reputation": 109, "user_id": 9036068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z6aq3.jpg?s=128&g=1", "display_name": "wawaloo_17", "link": "https://stackoverflow.com/users/9036068/wawaloo-17"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1579, "favorite_count": 0, "accepted_answer_id": 48654507, "answer_count": 2, "score": 0, "last_activity_date": 1517986195, "creation_date": 1517963832, "question_id": 48654207, "link": "https://stackoverflow.com/questions/48654207/recursive-insertion-sort-function-in-haskell", "title": "Recursive insertion sort function in Haskell", "body": "<p>I have working code for a recursive insertion sort function. I just need clarification on how it works. Right now, I'm confused what's happening on the third line where it says insert(isort xs). Please explain the rest of the code, step by step if you can.\nThanks!</p>\n\n<pre><code>isort :: [Int] -&gt; [Int]\nisort [] = []\nisort [x] = [x]\nisort (x:xs) = insert (isort xs)\n  where insert [] = [x]\n        insert (y:ys)\n          | x &lt; y = x : y : ys\n          | otherwise = y : insert ys\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1517955319, "post_id": 48652821, "comment_id": 84303761, "body": "The Haskell wiki has an overview of some, <a href=\"https://wiki.haskell.org/Keywords\" rel=\"nofollow noreferrer\">wiki.haskell.org/Keywords</a> the others are functions you can lookup with <i>hoogle</i>: <a href=\"https://www.haskell.org/hoogle/?hoogle=%28%2B%2B%29\" rel=\"nofollow noreferrer\">haskell.org/hoogle/?hoogle=%28%2B%2B%29</a>"}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517955366, "post_id": 48652821, "comment_id": 84303780, "body": "Yea, I have hoogle setup so I can do lookup through the terminal. I&#39;ll check it out, thanks."}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517955470, "post_id": 48652821, "comment_id": 84303821, "body": "Hmm, hat hoogle link says the (++) performs list concatenation. I thought ++ did that... are the parenthesis just redundant? Hang on I will post actual code with bit I don&#39;t understand."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517955571, "post_id": 48652821, "comment_id": 84303859, "body": "No parenthesis are not redundant, <code>(++)</code> is the function that concatenates. But you can use such functions as operators, so <code>(++) x y == x ++ y</code>."}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517955661, "post_id": 48652821, "comment_id": 84303898, "body": "Ah, so actually the x ++ y is the infix variation of the (++) x y?  I actually prefer the (++) x y variant as it will keep consistent with what I already learned/wrote in haskell. Is there a &quot;standard&quot; way which people prefer to write - infix or not?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1517955791, "post_id": 48652821, "comment_id": 84303953, "body": "well there is no <i>Official Haskell language court</i>&quot; that will put you in jail for using one syntax over another :). I think usually by defining an operator of the sort <code>(?)</code> (here <code>?</code> is can be any sequence of symbols), it hints more towards infix use, but since you do not per se add all parameters to a function, you can for instance use them as a part of other functions, like for instance <code>zipWith (++) [[1], [4]], [[2], [5]]</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1517955858, "post_id": 48652821, "comment_id": 84303986, "body": "but some agree :) <a href=\"https://mail.haskell.org/pipermail/haskell/2003-July/012260.html\" rel=\"nofollow noreferrer\">mail.haskell.org/pipermail/haskell/2003-July/012260.html</a>"}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517955925, "post_id": 48652821, "comment_id": 84304011, "body": "Lol yea, you&#39;re right, no point getting caught up on infix/prefix, but it is kinda confusing to have to read other peoples code and not know which way they are writing, especially when they are chaining functions?"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1517986326, "post_id": 48652821, "comment_id": 84312821, "body": "\u201cMethinks it is like a weasel?\u201d <a href=\"https://en.wikipedia.org/wiki/Weasel_program\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Weasel_program</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1517956484, "post_id": 48653027, "comment_id": 84304216, "body": "Yup, this is the answer. In addition to what Willem Van Onsem said this make sense now. It&#39;s blowing my mind that you can use  <code>&lt;$&gt;</code> or <code>&lt;PinkFairy&gt;</code> or <code>&lt;HarryPoter&gt;</code> as function names. So, () used for precedence (like maths or boolean logic), <code>!!</code> is indexing, <code>@</code> is patterns, and every other symbol is up for grabs? <code>&lt;*~~LM&gt;&gt; foo :: Int -&gt;</code> Int :P"}, {"owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 1, "creation_date": 1517956968, "post_id": 48653027, "comment_id": 84304399, "body": "Not exactly. In Haskell, an indentifier can either be a function name, then probably only single-quote is allowed on top of usual alnum-underscore, or an operator, then it consists of operator symbols, like <code>&lt;**&gt;</code>. You should switch to Lisp if you want a real naming madness, where - is used in the names to separate words instead of camelCase, and + and - are usual plain identifiers."}], "tags": [], "owner": {"reputation": 7577, "user_id": 5638835, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2fba9e7db4baba416a82c4277758d886?s=128&d=identicon&r=PG&f=1", "display_name": "puhlen", "link": "https://stackoverflow.com/users/5638835/puhlen"}, "is_accepted": true, "score": 6, "last_activity_date": 1517958542, "last_edit_date": 1517958542, "creation_date": 1517956167, "answer_id": 48653027, "question_id": 48652821, "link": "https://stackoverflow.com/questions/48652821/syntax-and-semantics-of-symbol-characters-in-haskell/48653027#48653027", "title": "Syntax and semantics of symbol characters in Haskell", "body": "<p>These are mostly all regular functions.  </p>\n\n<p>The <code>&lt;&gt;</code> are not special syntax, just part of the function name.  </p>\n\n<p>The <code>()</code> are regular parenthesis which group things and define precedence like in most other languages, the important note is that when you want to refer to an operator function (like <code>++</code>) it must be in parenthesis.</p>\n\n<ul>\n<li><p><code>++</code> is the list concatenation function  <code>[1,2] ++ [3,4] = [1,2,3,4]</code>, or without using infix notation <code>(++) [1,2]  [3,4] = [1,2,3,4]</code></p></li>\n<li><p><code>:</code> is the 'cons' function, it prepends an element to a list <code>1 : [2, 3, 4] = [1,2,3,4]</code> or <code>(:) 1 [2, 3, 4] = [1,2,3,4]</code> without infix notation.</p></li>\n<li><p><code>&lt;$&gt;</code> is an infix operator alias of <code>fmap</code></p></li>\n<li><p><code>&lt;*&gt;</code> is the applicative application function</p></li>\n<li><p><code>,</code> is the tuple constructor <code>(,) 1 2 = (1, 2)</code></p></li>\n<li><p><code>!!</code> is the list index function <code>[1,2,3] !! 1 = 2</code>.  Note that since these are singly linked lists, indexing is an O(n) operation.</p></li>\n<li><p><code>@</code> is used to define an \"as pattern\".  When pattern matching it allows you to give a name to a parameter, while also destructuring it with pattern matching.  For example the pattern <code>f (xs@[x1, x2])</code> matches a two element list, where you can use <code>x1</code> and <code>x2</code> to refer to the individual elements and <code>xs</code> to refer to the list as a whole</p></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 7, "last_activity_date": 1517957209, "creation_date": 1517957209, "answer_id": 48653217, "question_id": 48652821, "link": "https://stackoverflow.com/questions/48652821/syntax-and-semantics-of-symbol-characters-in-haskell/48653217#48653217", "title": "Syntax and semantics of symbol characters in Haskell", "body": "<h1>A note on operators</h1>\n\n<p>In Haskell you can define a function that has as identifier a sequence of symbols wrapped between brackets, like for example <code>(++)</code> or <code>(:)</code> that is an <em>operator</em> that can be used both as a function, like <code>(++) x y</code>, and as an infix operator, like <code>x ++ y</code>. Behind the curtains, the Haskell compiler will convert the infix operator to a function call, so <code>x ++ y</code> is completely equivalent with <code>(++) x y</code> (except for the fact that operators have different precedence rules).</p>\n\n<h1><code>(++)</code></h1>\n\n<p>This is the <em>append</em> function: <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Prelude.html#v:-43--43-\" rel=\"noreferrer\"><strong><code>(++) :: [a] -&gt; [a] -&gt; [a]</code></strong></a> it takes two lists as input, and constructs a list of the same type of elements that contains the elements of the first list followed by the elements of the second list. For example:</p>\n\n<pre><code>(++) [1, 4, 2, 5] [1, 3, 0, 2] == [1, 4, 2, 5, 1, 3, 0, 2]\n</code></pre>\n\n<h1><code>(:)</code></h1>\n\n<p>This is a <em>constructor</em> of the list type <code>[a]</code>. It has type <strong><code>(:) :: a -&gt; [a] -&gt; [a]</code></strong>. It takes as input an element and a list of elements (all of the same type), it construct a list that starts with the first element, followed by the elements of the second parameter. For example:</p>\n\n<pre><code>(:) 1 [4, 2, 5] = [1, 4, 2, 5]\n</code></pre>\n\n<h1><code>(&lt;$&gt;)</code></h1>\n\n<p>You wrote in your question <code>&lt;$&gt;</code>, but as you perhaps figured out, that means that somewhere a function <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Functor.html#v:-60--36--62-\" rel=\"noreferrer\"><strong><code>(&lt;$&gt;) :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</code></strong></a> is defined.</p>\n\n<p>A <code>Functor</code> is a typeclass. Several types in Haskell are functors. The easiest ones are a list <code>[]</code>, and a <code>Maybe</code>. The <code>(&lt;$&gt;)</code> takes as input a function <code>f :: a -&gt; b</code>, and a functor instance, for example a list <code>[a]</code>. It will then convert it to a functor instance <code>[b]</code>. How this is done, depends on how the <code>Functor</code> instance is implemented (the <code>(&lt;$&gt;)</code> for a <code>Maybe</code> has different semantics than one for <code>[]</code>).</p>\n\n<p>Although the analogy is not complete, you can see a <code>Functor</code> sometimes as a collection of elements (a <code>Maybe</code> basically is a collection of zero <code>Nothing</code>, or one <code>Just x</code> elements). It will then map the elements the collection contains by channeling these through the function, for example:</p>\n\n<pre><code>(+1) &lt;$&gt; [1, 4, 2, 5] == [2, 5, 3, 6]\n(+1) &lt;$&gt; Nothing == Nothing\n(+1) &lt;$&gt; (Just 2) == Just 3\n</code></pre>\n\n<h1><code>(&lt;*&gt;)</code></h1>\n\n<p>This function <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Control-Applicative.html#v:-60--42--62-\" rel=\"noreferrer\"><strong><code>(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b</code></strong></a> is again somewhat hard to understand. It makes use of an <code>Applicative</code> type class.</p>\n\n<p>An type that is an instance of <code>Applicative</code> has to implement two functions: <code>pure :: Applicative a =&gt; a -&gt; f a</code> and <code>(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b</code> (or the programmer can decide to instead implement <code>liftA2</code>, but let us ignore that here).</p>\n\n<p>Again you can see <code>Applicative</code> (at least for popular instances) as a collection (like <code>[]</code> or <code>Maybe</code>). Here we thus take as input such collection of functions (all with type <code>a -&gt; b</code>), and a collection of <code>a</code>s. We then \"multiply\" these, in the sense that for instance for a list:</p>\n\n<pre><code>   [f1, f2, ..., fm] &lt;*&gt; [x1, x2, ..., xn]\n== [f1 x1, f1 x2, ..., f1 xn,\n    f2 x1, f2 x2, ..., f2 xn,\n    ...,\n    fm x1, fm x2, ..., fm xn]\n</code></pre>\n\n<p>So that means for instance for <code>Maybe</code> that if the left operand is <code>Nothing</code>, or the right operand is <code>Nothing</code>, or both are <code>Nothing</code>, then this results in a <code>Nothing</code>, if both are <code>Just</code>s (so <code>Just f &lt;*&gt; Just x</code>), then we obtain a <code>Just (f x)</code>:</p>\n\n<pre><code>Just f &lt;*&gt; Just x == Just (f x)\nJust f &lt;*&gt; Nothing == Nothing\nNothing &lt;*&gt; Just x == Nothing\nNothing &lt;*&gt; Nothing == Nothing\n</code></pre>\n\n<h1><code>(,)</code></h1>\n\n<p>This is the constructor of a <em>2-tuple</em>: <strong><code>(,) :: a -&gt; b -&gt; (a,b)</code></strong> thus takes as input an <code>a</code> and a <code>b</code>, and it constructs an 2-tuple where the first item is the first parameter, and the second item is the second parameter. For example:</p>\n\n<pre><code>(,) 4 'a' == (4, 'a')\n</code></pre>\n\n<h1><code>(x !!)</code></h1>\n\n<p>This is a <a href=\"https://wiki.haskell.org/Section_of_an_infix_operator\" rel=\"noreferrer\"><em>section of an infix operator</em></a>. You can use an infix operator, and for instance specify the left or the right part. In that case you thus construct a partially applied function. For example:</p>\n\n<pre><code>([1, 4, 2, 5] !!) == (!!) [1, 4, 2, 5]\n(!! 2) == flip (!!) 2\n</code></pre>\n\n<p>So for the latter it thus means that we constructed a function that takes as input a parameter that will be filled in as left operand. So:</p>\n\n<pre><code>(!! 2) [1, 4, 2, 5] == (!!) [1, 4, 2, 5]\n</code></pre>\n\n<p>The <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Prelude.html#v:-33--33-\" rel=\"noreferrer\"><strong><code>(!!) :: [a] -&gt; Int -&gt; a</code></strong></a> function takes as input a list and an <code>Int</code> and it returns the element at that index (zero-based indices).</p>\n\n<h1><code>p@(info@())</code></h1>\n\n<p>In contrast to the above, the <code>@</code> is <em>not</em> a function or operator (well these are actually the same), but a <a href=\"https://wiki.haskell.org/Keywords#.40\" rel=\"noreferrer\"><strong>keyword</strong></a>.</p>\n\n<p>It is used in pattern matching to obtain a reference to both an pattern and for instance match subpatterns (or obtain references to subpatterns).</p>\n\n<p>For instance, say we want to pattern match a 2-tuple, and we want to have a reference to the entire tuple, and the first element, we can use:</p>\n\n<pre><code>somefunction total@(left, _) = ...\n</code></pre>\n\n<p>So if we then call <code>somefunction (4, 'a')</code>, then this means that <code>total</code> will hold <code>(4, 'a')</code>, and <code>left</code> will hold <code>4</code>.</p>\n"}], "owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 233, "favorite_count": 0, "accepted_answer_id": 48653027, "answer_count": 2, "score": 4, "last_activity_date": 1517970213, "creation_date": 1517955115, "last_edit_date": 1517970213, "question_id": 48652821, "link": "https://stackoverflow.com/questions/48652821/syntax-and-semantics-of-symbol-characters-in-haskell", "title": "Syntax and semantics of symbol characters in Haskell", "body": "<p>I'm learning Haskell.</p>\n\n<p>One of my standard techniques when learning a new language is to implement a Hello World genetic algorithm that attempts to generate a string via genetic algorithm techniques that matches some input string.</p>\n\n<p>Due to my inexperience with Haskell (the closest thing I have to compare is Kotlin) I searched for an example code so I could match my existing understanding of basic genetic algorithm to the code and intuit some understanding of Haskell based on my already underway reading/research on the language.</p>\n\n<p>I came across this tutorial: <a href=\"https://www.arcadianvisions.com/blog/2011/haskell-genetic-algorithm-hello-world.html\" rel=\"nofollow noreferrer\">https://www.arcadianvisions.com/blog/2011/haskell-genetic-algorithm-hello-world.html</a></p>\n\n<p>I transcribed it in atom after setting my environment up, each part I didn't understand I did a quick google, if I didn't understand the syntax/semantics after 15 minutes I would carry on transcribing with the intent to catch up later on those particular parts.</p>\n\n<p>So, I understood most of the code, such as the order of function application, monads (think I'm nearly there with monads anyway), data types, function types, currying, type substitution etc. However, there were several bits of syntax/semantics that I haven't seen in my reading/researching and not sure what they do, but they appear a lot in the code example I linked to above. I'm hoping someone can explain them to me:</p>\n\n<pre><code>(++)\n(:)\n&lt;$&gt;\n&lt;*&gt;\n(,)\n(x !!)\np@(info@())\n</code></pre>\n\n<p>I am assuming the <code>()</code> and <code>&lt;&gt;</code> are some special syntax and the stuff inside them is semantic? When I hover over them in atom (I'm using atom-haskell-ghc) I can see the type <code>Functor f =&gt; Applicative (f :: * -&gt; *) where &lt;*&gt; :: f (a -&gt; b) -&gt; f a -&gt; f b</code> which kind of looks like a monad, but I don't really understand the weird syntax/semantics on the consuming end. Should I think of these as just another function (with a weird infix alias?). </p>\n\n<p>Here is a specific line exhibiting several of the examples from above:</p>\n\n<pre><code>mate :: RandomGen g =&gt; Gene -&gt; Gene -&gt; Rand g Gene\nmate gene1 gene2 = (++) &lt;$&gt; flip take gene1 &lt;*&gt; flip drop gene2 &lt;$&gt; pivot\n  where pivot = getRandomR (0, length gene1 - 1)\n</code></pre>\n"}, {"tags": ["haskell", "monad-transformers", "conduit"], "comments": [{"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1518009986, "post_id": 48650706, "comment_id": 84327355, "body": "I&#39;m not quite sure where you&#39;re trying to tie the state in with the code above, but I think the function you&#39;re looking for is <a href=\"https://www.stackage.org/haddock/lts-10.4/conduit-1.2.13/Data-Conduit-Lift.html#v:runStateC\" rel=\"nofollow noreferrer\"><code>runStateC</code></a>."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1518021593, "post_id": 48650706, "comment_id": 84335653, "body": "@MichaelSnoyman Thanks for your comment. I&#39;ve actually tried that but failed. See my updated question. For now I&#39;ve done this without conduit with forever reading stdin line by line. Can you show how to achieve what I initially wanted with conduit given that I showed the code without conduit now? I mean it should be clear now what I want."}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1518022590, "post_id": 48650706, "comment_id": 84336316, "body": "The code above has syntax errors, missing imports, and missing identifiers. It&#39;s also significantly larger than a minimal case to identify what you&#39;re trying to solve. I&#39;d recommend working this down to a minimal repro that runs on its own."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1518023468, "post_id": 48650706, "comment_id": 84336921, "body": "@MichaelSnoyman Here is full code <a href=\"https://github.com/purpleP/candlesticks/blob/master/app/Main.hs\" rel=\"nofollow noreferrer\">github.com/purpleP/candlesticks/blob/master/app/Main.hs</a> But I thought that idea is clear. Parse data from stdin, make candlesticks from it, merge current candlesticks with candlesticks from data obtaining new candlesticks that would be current state on the next iteration. Other details are unimportant. The question is how to use State monad (candlesticks are state) inside <code>Conduit</code>. Will fixup question later, because I&#39;m writing from the phone."}, {"owner": {"reputation": 34465, "user_id": 12274, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/98e72a0366a5d8e0a4a5df9ecd1933db?s=128&d=identicon&r=PG&f=1", "display_name": "JB.", "link": "https://stackoverflow.com/users/12274/jb"}, "edited": false, "score": 0, "creation_date": 1602693299, "post_id": 48650706, "comment_id": 113803424, "body": "As a note to my future self, or anyone else getting here via Google: what I needed to discover was <a href=\"https://www.yesodweb.com/blog/2014/01/conduit-transformer-exception\" rel=\"nofollow noreferrer\">Data.Conduit.Lift</a>."}], "owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 147, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1518021301, "creation_date": 1517946061, "last_edit_date": 1518021301, "question_id": 48650706, "link": "https://stackoverflow.com/questions/48650706/how-to-wrap-conduit-pipe-into-state", "title": "How to wrap conduit pipe into state?", "body": "<p>I have a code that takes stream of json arrays from stdin and computes <a href=\"https://en.wikipedia.org/wiki/Candlestick_chart\" rel=\"nofollow noreferrer\">candlesticks</a> from them. I've implemented function <code>diff</code> that should compute difference between old state and new state in <code>State</code> Monad, but I don't know how to use with conduit. The idea is that each json array is a batch of data. For each batch we compute new state of <code>candlesticks</code> and <code>diff</code> between old state and new state and print <code>diff</code>.</p>\n\n<p>AFAIK I should wrap conduit inside <code>StateT</code> somehow, but monad transformers are still new to me and it's not obvious to me how to do that.</p>\n\n<pre><code>import Data.Aeson\nimport Data.Conduit\nimport Data.Ord\nimport Control.Monad.State\nimport qualified Data.Vector as V\nimport qualified Data.Map.Lazy as Map\nimport GHC.Exts (groupWith)\nimport qualified Data.Conduit.Combinators as CC\nimport Data.Conduit (await, yield, (.|))\nimport Data.ByteString.Char8 as BC hiding (last, head, maximum, minimum, map)\nimport qualified Data.Conduit.Binary as CB\nimport Data.JsonStream.Parser hiding ((.|))\nimport System.IO (stdin, stdout)\nimport Control.Lens\n\n\njsonParseValue :: Parser a -&gt; Conduit BC.ByteString IO a\njsonParseValue parser = doParse $ runParser parser\n    where\n        doParse :: ParseOutput a -&gt; Conduit BC.ByteString IO a\n        doParse out = case out of\n                        ParseYield value newOutput  -&gt; do\n                            yield value\n                            doParse newOutput\n                        ParseNeedData cont -&gt;\n                            awaitForever $ doParse . cont\n                        ParseDone remaining -&gt; return ()\n                        ParseFailed err -&gt; error err\n\nfirst (_, _, x, _, _, _) = x\nsecond (_, _, _, x, _, _) = x\nthird (_, _, _, _, x, _) = x\nfourth (_, _, _, _, _, x) = x\n\ngroup' :: (Ord b) =&gt; (a -&gt; b) -&gt; [a] -&gt; [(b, [a])]\ngroup' k vs = map (\\g -&gt; (k $ head g, g)) $ groupWith k vs\n\ncandle :: (Num a, Ord a) =&gt; V.Vector (Int, Int, a, a, a, a) -&gt; (a, a, a, a)\ncandle vs = (V.maximum $ V.map first vs, V.minimum $ V.map second vs, third $ V.head vs, fourth $ V.last vs)\n\ncandles :: (Num a, Ord a) =&gt; [(Int, Int, a, a, a, a)] -&gt; Map.Map Int (Map.Map Int (a, a, a, a))\ncandles vs = Map.fromList $ Prelude.map (\\(k, g) -&gt;  (k, Map.fromList $ Prelude.map (\\(t, gt) -&gt; (t, candle $ V.fromList gt)) $ group' (\\(_, x, _, _, _, _) -&gt; x) g)) $ group' (\\(x, _, _, _, _, _) -&gt; x) vs\n\nupdate :: (Ord a) =&gt; Map.Map Int (Map.Map Int (a, a, a, a)) -&gt; Map.Map Int (Map.Map Int (a, a, a, a)) -&gt; Map.Map Int (Map.Map Int (a, a, a, a))\nupdate new old = Map.unionWith (Map.unionWith (\\(mm1, mn1, o1, c1) (mm2, mn2, o2, c2) -&gt; (max mm1 mm2, min mn1 mn2, o1, max c1 c2))) old new\n\ndiff' old new = Map.differenceWith (\\ n o -&gt; Just (Map.differenceWith (\\ x y -&gt; Just x) n o)) new old\n\ndiff cs return Map.empty :: State (Map.Map Int (Map.Map Int (a, a, a, a))) (Map.Map Int (Map.Map Int (a, a, a, a)))\nprintCandles = forever $ do\n    l &lt;- liftIO $ BC.getLine\n    let cs = candles $ parseByteString candlesParser l\n    old &lt;- get\n    let new = update cs old\n    put new\n    let d = diff new old\n    liftIO $ if Map.null d then return () else BL.putStrLn $ encode d\n\nmain = runStateT printCandles Map.empty\n</code></pre>\n"}, {"tags": ["dictionary", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517942660, "post_id": 48649732, "comment_id": 84297328, "body": "Why did you add <code>Ord v</code> as constraint?"}, {"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 0, "creation_date": 1517943084, "post_id": 48649732, "comment_id": 84297517, "body": "Note that possibly confusing is the <code>v</code> in your line <code>edges (Graph v) = ...</code>. This <code>v</code> is not the type of graph you&#39;re using, but the graph itself (<code>v :: Map.Map a [a]</code>). Consider changing this to <code>edges (Graph g) = ...</code>"}, {"owner": {"reputation": 163, "user_id": 6823899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff350e21c6ca08039a039aac7a3c2de2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil", "link": "https://stackoverflow.com/users/6823899/phil"}, "edited": false, "score": 0, "creation_date": 1517944583, "post_id": 48649732, "comment_id": 84298367, "body": "I can&#39;t it&#39;s a software engineering homework, I can&#39;t modify the signature of the fonctions"}, {"owner": {"reputation": 447, "user_id": 4612411, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/rCwOk.jpg?s=128&g=1", "display_name": "David Edgar", "link": "https://stackoverflow.com/users/4612411/david-edgar"}, "edited": false, "score": 0, "creation_date": 1518125417, "post_id": 48649732, "comment_id": 84388791, "body": "What do you means by :  Graph (Map.Map v [v]). What the v stands for and [v] too?"}], "answers": [{"comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1517945945, "post_id": 48649883, "comment_id": 84299127, "body": "A shorter, fancier version of <code>[ (x, y) | (x, ys) &lt;- Map.assocs v, y &lt;- ys]</code> might be <code>Map.assocs v &gt;&gt;= sequence</code>."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1517952241, "post_id": 48649883, "comment_id": 84302379, "body": "Just because I&#39;m nerding out: the first components will already be sorted because that&#39;s how <code>Map</code> does its thang.  So it would be better to sort in the list comprehension <code>y &lt;- sort ys</code>.  Better still would be to store a <code>Set</code> of target vertices rather than a list -- then everything would just stay sorted."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1517953339, "last_edit_date": 1517953339, "creation_date": 1517942827, "answer_id": 48649883, "question_id": 48649732, "link": "https://stackoverflow.com/questions/48649732/haskell-function-using-data-map-elems/48649883#48649883", "title": "Haskell: Function using Data.Map.elems", "body": "<p><a href=\"http://hackage.haskell.org/package/containers-0.5.11.0/docs/Data-Map-Lazy.html#v:elems\" rel=\"nofollow noreferrer\"><strong><code>elems :: Map k a -&gt; [a]</code></strong></a> will only give you the <em>values</em> of the map, you probably are more interested in the <a href=\"http://hackage.haskell.org/package/containers-0.5.11.0/docs/Data-Map-Lazy.html#v:assocs\" rel=\"nofollow noreferrer\"><strong><code>assocs :: Map k a -&gt; [(k,a)]</code></strong></a>.</p>\n\n<p>But if we use that, we will still not get the desired result, since this will construct a list of tuples such that we get <code>[(v, [v])]</code>, so we need to convert every 2-tuple <code>(x, [y1, y2, ..., yn])</code> into <code>n</code> tuples <code>[(x, yi)]</code>. To achieve this, we can for instance use list comprehension:</p>\n\n<pre><code>edges :: Graph v -&gt; [(v,v)]\nedges (Graph v) = [ (x, y) | (x, ys) &lt;- Map.assocs v, y &lt;- ys]\n</code></pre>\n\n<p>In case we want to order the list of edges (first by the first item of the tuples, then by the second item), we can for instance use <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Data-List.html#v:sort\" rel=\"nofollow noreferrer\"><strong><code>sort :: Ord a =&gt; [a] -&gt; [a]</code></strong></a>:</p>\n\n<pre><code>import Data.List(sort)\n\nedges_sort :: Ord v =&gt; Graph v -&gt; [(v,v)]\nedges_sort (Graph v) = sort [ (x, y) | (x, ys) &lt;- Map.assocs v, y &lt;- ys]\n</code></pre>\n\n<p>or we can define both:</p>\n\n<pre><code>import Data.List(sort)\n\nedges :: Graph v -&gt; [(v,v)]\nedges (Graph v) = [ (x, y) | (x, ys) &lt;- Map.assocs v, y &lt;- ys]\n\nedges_sort :: Ord v =&gt; Graph v -&gt; [(v,v)]\nedges_sort = sort . edges\n</code></pre>\n\n<p><strong>Some remarks</strong>:</p>\n\n<p>Like @amalloy says, we can use list monads instead of list comprehension, and use <a href=\"http://hackage.haskell.org/package/base-4.10.1.0/docs/Prelude.html#v:sequence\" rel=\"nofollow noreferrer\"><strong><code>sequence :: (Monad m, Traversable t) =&gt; t (m a) -&gt; m (t a)</code></strong></a>:</p>\n\n<pre><code>edges :: Graph v -&gt; [(v,v)]\nedges (Graph v) = Map.assocs v &gt;&gt;= sequence\n</code></pre>\n\n<p>Like @luqui says, we can also only sort the list of the values, since the specifications are that the keys are already sorted, so:</p>\n\n<pre><code>edges :: Graph v -&gt; [(v,v)]\nedges (Graph v) = [ (x, y) | (x, ys) &lt;- Map.assocs v, y &lt;- sort ys]\n</code></pre>\n"}], "owner": {"reputation": 163, "user_id": 6823899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff350e21c6ca08039a039aac7a3c2de2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil", "link": "https://stackoverflow.com/users/6823899/phil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 351, "favorite_count": 1, "accepted_answer_id": 48649883, "answer_count": 1, "score": 2, "last_activity_date": 1517969541, "creation_date": 1517942219, "last_edit_date": 1517969541, "question_id": 48649732, "link": "https://stackoverflow.com/questions/48649732/haskell-function-using-data-map-elems", "title": "Haskell: Function using Data.Map.elems", "body": "<p>Hi I am trying to return a value from <code>Data.Map.Map</code>  but can't get the right value,\nhere is the relevant code :</p>\n\n<pre><code>data Graph v = Graph (Map.Map v [v])\n\nedges :: Ord v =&gt; Graph v -&gt; [(v,v)]\nedges (Graph v) = Map.elems v\n</code></pre>\n\n<p>However this doesn't work, example of expected value : <code>[(1,2),(1,3),(3,4)]</code></p>\n\n<p>I get the error :</p>\n\n<pre><code>Expected type: Map.Map v (v, v) Actual type: Map.Map v [v]\n</code></pre>\n"}, {"tags": ["parsing", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517941604, "post_id": 48649565, "comment_id": 84296842, "body": "Usually <code>Read</code> is used to transform a string like <code>&quot;(Y (No (V \\&quot;q\\&quot;)) (V \\&quot;p\\&quot;))&quot;</code> into such value. For parsing &quot;human readable&quot; text, one usually uses another function."}, {"owner": {"reputation": 480, "user_id": 3478797, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4059db7d467d15a2eb146e4c59ef938b?s=128&d=identicon&r=PG&f=1", "display_name": "cptwonton", "link": "https://stackoverflow.com/users/3478797/cptwonton"}, "edited": false, "score": 0, "creation_date": 1517941701, "post_id": 48649565, "comment_id": 84296888, "body": "what about getLine?"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 2, "creation_date": 1517941723, "post_id": 48649565, "comment_id": 84296900, "body": "The industrial-strength solution would be to use something like Parsec, but a Lisp-style language is as easy as it gets to write a parser for by hand."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1517945599, "post_id": 48649565, "comment_id": 84298926, "body": "Can you clarify:  are you looking to parse user-supplied strings that look like &quot;&#172;q ^ p&quot; into <code>FProp</code> values, or do you expect the user to enter a string like <code>(Y (No (V &quot;q&quot;)) (V &quot;p&quot;))</code>, and you just want to turn that into an <code>FProp</code>?"}, {"owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "edited": false, "score": 0, "creation_date": 1517952108, "post_id": 48649565, "comment_id": 84302317, "body": "exactly, I want to parse  an input which can look either way (Eventually, I will pick one of the two ways), and turn that string into an FProp"}], "answers": [{"comments": [{"owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "edited": false, "score": 0, "creation_date": 1517942647, "post_id": 48649676, "comment_id": 84297320, "body": "Thanks a lot, I hope that&#39;s useful. I have a doubt,, is ForthState a Prelude class? I&#39;m only allowed to use Prelude functions and clases in order to implement the whole datatype."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "edited": false, "score": 0, "creation_date": 1517943193, "post_id": 48649676, "comment_id": 84297580, "body": "@JJdoeee It is a type (4-tuple, from the code above) you have to define yourself in order to represent the current state of the REPL. It is not something found in any library."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1517944516, "post_id": 48649676, "comment_id": 84298328, "body": "One tweak you would have to make here is that <code>words</code> is not quite adequate as a tokenizer when <code>&quot;(foo)&quot;</code> needs to be split into the tokens <code>[&quot;(&quot;,&quot;foo&quot;,&quot;)&quot;]</code>."}], "tags": [], "owner": {"reputation": 480, "user_id": 3478797, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4059db7d467d15a2eb146e4c59ef938b?s=128&d=identicon&r=PG&f=1", "display_name": "cptwonton", "link": "https://stackoverflow.com/users/3478797/cptwonton"}, "is_accepted": false, "score": 1, "last_activity_date": 1517941949, "creation_date": 1517941949, "answer_id": 48649676, "question_id": 48649565, "link": "https://stackoverflow.com/questions/48649565/parse-string-to-datatype-in-haskell/48649676#48649676", "title": "Parse String to Datatype in Haskell", "body": "<p>the read part of a REPL interpreter typically looks like this</p>\n\n<pre><code>repl :: ForthState -&gt; IO () -- parser definition\nrepl state\n    = do putStr \"&gt; \" -- puts a &gt; character to indicate it's waiting for input\n         input &lt;- getLine -- this is what you're looking for, to read a line. \n         if input == \"quit\" -- allows user to quit the interpreter \n            then do putStrLn \"Bye!\"\n                    return ()\n            else let (is, cs, d, output) = eval (words input) state -- your grammar definition is somewhere down the chain when eval is called on input\n                 in  do mapM_ putStrLn output\n                        repl (is, cs, d, [])\n\nmain = do putStrLn \"Welcome to your very own interpreter!\"\n          repl initialForthState -- runs the parser, starting with read\n</code></pre>\n\n<p>your eval method will have various loops, stack manipulations, conditionals, etc to actually figure out what the user inputted. hope this helps you with at least the reading input part.</p>\n"}, {"comments": [{"owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "edited": false, "score": 0, "creation_date": 1517952228, "post_id": 48650809, "comment_id": 84302373, "body": "Thanks a lot, this is so helpful! I was stuck and didn&#39;t know how to start, your idea is really good (I don&#39;t think i need alphanumeric characters though, just letters). Thank you very much for this help."}], "tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": true, "score": 1, "last_activity_date": 1517947824, "last_edit_date": 1517947824, "creation_date": 1517946495, "answer_id": 48650809, "question_id": 48649565, "link": "https://stackoverflow.com/questions/48649565/parse-string-to-datatype-in-haskell/48650809#48650809", "title": "Parse String to Datatype in Haskell", "body": "<p>Not a complete answer, since this is a homework problem, but here are some hints.</p>\n\n<p>The other answer suggested <code>getLine</code> followed by splitting at <code>words</code>.  It sounds like you instead want something more like a conventional tokenizer, which would let you write things like:</p>\n\n<pre><code>(Y\n   (No (V q))\n   (V p))\n</code></pre>\n\n<p>Here\u2019s one implementation that turns a string into tokens that are either a string of alphanumeric characters or a single, non-alphanumeric printable character.  You would need to extend it to support quoted strings:</p>\n\n<pre><code>import Data.Char\n\ntype Token = String\n\ntokenize :: String -&gt; [Token]\n{- Here, a token is either a string of alphanumeric characters, or else one\n - non-spacing printable character, such as \"(\" or \")\".\n -}\ntokenize [] = []\ntokenize (x:xs) | isSpace x = tokenize xs\n                | not (isPrint x) = error $\n  \"Invalid character \" ++ show x ++ \" in input.\"\n                | not (isAlphaNum x) = [x]:(tokenize xs)\n                | otherwise = let (token, rest) = span isAlphaNum (x:xs)\n                              in token:(tokenize rest)\n</code></pre>\n\n<p>It turns the example into <code>[\"(\",\"Y\",\"(\",\"No\",\"(\",\"V\",\"q\",\")\",\")\",\"(\",\"V\",\"p\",\")\",\")\"]</code>.  Note that you have access to the entire repertoire of Unicode.</p>\n\n<p>The <code>main</code> function that evaluates this interactively might look like:</p>\n\n<pre><code>main = interact ( unlines . map show . map evaluate . parse . tokenize )\n</code></pre>\n\n<p>Where <code>parse</code> turns a list of tokens into a list of ASTs and <code>evaluate</code> turns an AST into a printable expression.</p>\n\n<p>As for implementing the parser, your language appears to have similar syntax to LISP, which is one of the simplest languages to parse; you don\u2019t even need precedence rules.  A recursive-descent parser could do it, and is probably the easiest to implement by hand.  You can pattern-match on <code>parse (\"(\":xs) =</code>, but pattern-matching syntax can also implement lookahead very easily, for example <code>parse (\"(\":x1:xs) =</code> to look ahead one token.</p>\n\n<p>If you\u2019re calling the parser recursively, you would define a helper function that consumes only a single expression, and that has a type signature like <code>:: [Token] -&gt; (AST, [Token])</code>.  This lets you parse the inner expression, check that the next token is <code>\")\"</code>, and proceed with the parse.  However, externally, you\u2019ll want to consume all the tokens and return an AST or a list of them.</p>\n\n<p>The stylish way to write a parser is with monadic parser combinators.  (And maybe someone will post an example of one.)  The industrial-strength solution would be a library like Parsec, but that\u2019s probably overkill here.  Still, parsing is (mostly!) a solved problem, and if you just want to get the assignment done on time, using a library off the shelf is a good idea.</p>\n"}], "owner": {"reputation": 413, "user_id": 9323635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c66927e1d8f72d9960672cee2eb85046?s=128&d=identicon&r=PG&f=1", "display_name": "HRDSL", "link": "https://stackoverflow.com/users/9323635/hrdsl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 491, "favorite_count": 0, "accepted_answer_id": 48650809, "answer_count": 2, "score": 0, "last_activity_date": 1517947824, "creation_date": 1517941493, "last_edit_date": 1517941840, "question_id": 48649565, "link": "https://stackoverflow.com/questions/48649565/parse-string-to-datatype-in-haskell", "title": "Parse String to Datatype in Haskell", "body": "<p>I'm taking a Haskell course at school, and I have to define a Logical Proposition datatype in Haskell. Everything so far Works fine (definition and functions), and i've declared it as an instance of Ord, Eq and show. The problem comes when I'm required to define a program which interacts with the user: I have to parse the input from the user into my datatype:</p>\n\n<pre><code>type Var = String\ndata FProp = V Var\n           | No FProp\n           | Y FProp FProp\n           | O FProp FProp\n           | Si FProp FProp\n           | Sii FProp FProp\n</code></pre>\n\n<p>where the formula: \u00acq ^ p would be: (Y (No (V \"q\")) (V \"p\"))</p>\n\n<p>I've been researching, and found that I can declare my datatype as an instance of Read.</p>\n\n<p>Is this advisable? If it is, can I get some help in order to define the parsing method?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 3, "creation_date": 1517932633, "post_id": 48646430, "comment_id": 84291291, "body": "By the way, <a href=\"https://www.google.com/search?q=0!\" rel=\"nofollow noreferrer\"><code>0!</code> is <code>1</code></a>."}, {"owner": {"reputation": 1486, "user_id": 1037960, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/YJ9wv.jpg?s=128&g=1", "display_name": "Zimano", "link": "https://stackoverflow.com/users/1037960/zimano"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1517949128, "post_id": 48646430, "comment_id": 84300929, "body": "@4castle I know, I was purposely trying to do this. It insults me a little."}], "answers": [{"comments": [{"owner": {"reputation": 1486, "user_id": 1037960, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/YJ9wv.jpg?s=128&g=1", "display_name": "Zimano", "link": "https://stackoverflow.com/users/1037960/zimano"}, "edited": false, "score": 0, "creation_date": 1517930989, "post_id": 48646480, "comment_id": 84290235, "body": "Now that I look at it, you are completely right. Wow, I&#39;m pretty ashamed."}, {"owner": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "edited": false, "score": 0, "creation_date": 1517934075, "post_id": 48646480, "comment_id": 84292230, "body": "@Zeta could OP delete the question if you delete the answer? (not saying you should)"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "edited": false, "score": 0, "creation_date": 1517936919, "post_id": 48646480, "comment_id": 84294237, "body": "@\u05d2\u05dc\u05e2\u05d3\u05d1\u05e8\u05e7\u05df  <a href=\"https://meta.stackexchange.com/questions/5221/how-does-deleting-work-what-can-cause-a-post-to-be-deleted-and-what-does-that\">Yes</a>."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517937488, "post_id": 48646480, "comment_id": 84294580, "body": "@chi Neither do I, I just answered on a (now deleted) comment whether the question can get deleted. Either way, we&#39;re slightly getting off-topic on the comment train itself, so I&#39;ll remove the question deletion comment ^^."}], "tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 10, "last_activity_date": 1517930993, "last_edit_date": 1517930993, "creation_date": 1517930866, "answer_id": 48646480, "question_id": 48646430, "link": "https://stackoverflow.com/questions/48646430/why-is-a-part-of-my-where-clause-not-used-in-my-conditional-function/48646480#48646480", "title": "Why is a part of my where clause not used in my conditional function?", "body": "<p>Your recursion stops on <code>x = 1</code>, not <code>x = 0</code>.</p>\n\n<p>Let's evaluate <code>fac1 2</code> by hand:</p>\n\n<pre><code>fac1 2\n  = 2 * fac1 (2 - 1) -- 2 is neither 0 nor 1, so we take the \"otherwise\" case\n  = 2 * fac1 1       -- evaluate 2 - 1\n  = 2 * one          -- x == 1 holds, so we return \"one\"\n  = 2 * 1            -- one is 1\n  = 2                -- done\n</code></pre>\n"}], "owner": {"reputation": 1486, "user_id": 1037960, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/YJ9wv.jpg?s=128&g=1", "display_name": "Zimano", "link": "https://stackoverflow.com/users/1037960/zimano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 48646480, "answer_count": 1, "score": 4, "last_activity_date": 1517939975, "creation_date": 1517930743, "question_id": 48646430, "link": "https://stackoverflow.com/questions/48646430/why-is-a-part-of-my-where-clause-not-used-in-my-conditional-function", "title": "Why is a part of my where clause not used in my conditional function?", "body": "<p>I've been practicing Haskell as part of my course at my university, and I made the following function while experimenting with local definitions :</p>\n\n<pre><code>fac1 x | x == 0 = zero\n       | x == 1 = one\n       | otherwise = x * fac1 (x-1)\n         where zero = 0\n               one = 1\n</code></pre>\n\n<p>I would expect any call to fac1 result in zero because when x==0, it will multiply by 0. However, it gives me the correct number. </p>\n\n<p>Conversely, writing <code>one = 0</code> instead of <code>one = 1</code> results in my results being 0. I would expect the same sort of behavior for zero, but changing the value of it does nothing. I feel like it should be happening since I clearly included a <code>x==0</code> condition. The <code>x==1</code> is evaluated, why not <code>x==0</code>?</p>\n\n<p>Can someone explain what error I made?</p>\n"}, {"tags": ["list", "haskell", "filter"], "answers": [{"tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": false, "score": 6, "last_activity_date": 1517920780, "creation_date": 1517920780, "answer_id": 48643300, "question_id": 48643231, "link": "https://stackoverflow.com/questions/48643231/understanding-a-haskell-function-with-filter-and-lambda-expressions/48643300#48643300", "title": "understanding a Haskell function with filter and lambda expressions", "body": "<pre><code>(\\h x -&gt; h x &gt; x) (\\y -&gt; y*y)\n</code></pre>\n\n<p>Is equivalent to</p>\n\n<pre><code>\\x -&gt; x*x &gt; x\n</code></pre>\n\n<p>So you just need to square every number on your list and compare it to the original to see why the output is like it is:</p>\n\n<pre><code>-- original:   [-2, -1,  0,  1,  2]\n-- squared:    [ 4,  1,  0,  1,  4]\n-- comparison: [ T,  T,  F,  F,  T]\n</code></pre>\n\n<p>This predicate will return <code>True</code> for every negative number (because every negative number squared is positive, and so greater than the original, and for every positive number larger than 1. Since you're operating on <code>Int</code>s, this means that <code>0</code> and <code>1</code> are the only numbers that will fail that predicate.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1517922075, "last_edit_date": 1517922075, "creation_date": 1517921102, "answer_id": 48643384, "question_id": 48643231, "link": "https://stackoverflow.com/questions/48643231/understanding-a-haskell-function-with-filter-and-lambda-expressions/48643384#48643384", "title": "understanding a Haskell function with filter and lambda expressions", "body": "<p>It filters the list in the function (<code>[-2, -1, 0, 1, 2]</code>) by a predicate, the predicate is the expression <code>((\\h x -&gt; h x &gt; x) (\\y -&gt; y*y))</code>.</p>\n\n<p>We here see two <em>lambda expressions</em>. The former takes as input two parameters <code>h</code> and <code>x</code>, and returns <code>True</code> if <code>h x</code> is greater than <code>x</code>. The second one takes as input a parameter <code>y</code>, and returns <code>y*y</code> (so it squares the input).</p>\n\n<p>The second lambda expression is taken as first parameter of the first lambda expression, so that means that:</p>\n\n<pre><code>  ((\\h x -&gt; h x &gt; x) (\\y -&gt; y*y))\n-----------------------------------\n= \\x -&gt; (\\y -&gt; y*y) x &gt; x\n</code></pre>\n\n<p>So a function that takes as input a variable <code>x</code> and returns <code>True</code> if and only if <code>(\\y -&gt; y*y) x</code> is greater than <code>x</code>. We can again reduce that function further with:</p>\n\n<pre><code>  \\x -&gt; (\\y -&gt; y*y) x &gt; x\n-------------------------\n= \\x -&gt; x*x &gt; x\n</code></pre>\n\n<p>So it is a predicate that checks if <code>x*x &gt; x</code> for a given <code>x</code>, or \"<em>the variable should be less than the square of that variable</em>\".</p>\n\n<p>So we here filter the list <code>[-2, -1, 0, 1, 2]</code> such that only elements where its square is greater are retained. So if we evaluate this we see that:</p>\n\n<pre><code>  x|x*x|x*x &gt; x\n---+---+-------\n -2|  4| True  \n -1|  1| True  \n  0|  0| False \n  1|  1| False \n  2|  4| True  \n</code></pre>\n\n<p>So the result is <code>[-2, -1, 2]</code>.</p>\n"}], "owner": {"reputation": 53, "user_id": 9321978, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9950c460bfb64dbca291b7916423e619?s=128&d=identicon&r=PG&f=1", "display_name": "Lukas Hankeln", "link": "https://stackoverflow.com/users/9321978/lukas-hankeln"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 831, "favorite_count": 0, "accepted_answer_id": 48643384, "answer_count": 2, "score": -3, "last_activity_date": 1517932057, "creation_date": 1517920540, "last_edit_date": 1517932057, "question_id": 48643231, "link": "https://stackoverflow.com/questions/48643231/understanding-a-haskell-function-with-filter-and-lambda-expressions", "title": "understanding a Haskell function with filter and lambda expressions", "body": "<pre><code>j :: [Int]\nj = filter ((\\h x -&gt; h x &gt; x) (\\y -&gt; y*y)) [-2,-1,0,1,2]\n</code></pre>\n\n<p>This one outputs <code>[-2,-1,2]</code> but why? could someone please explain me step by step what Haskell does here to get this output?</p>\n"}, {"tags": ["haskell", "ffi"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517917574, "post_id": 48641349, "comment_id": 84281071, "body": "Are you talking about Haskell threads or C++ (OS) threads? I&#39;d guess OS threads running Haskell would stop, while those running C++ would continue (until they access Haskell land? not sure). Also keep in mind that a single OS thread can execute many Haskell threads, in general."}, {"owner": {"reputation": 63, "user_id": 3928303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89f1e801413c6845075db4a2ad39ed25?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/3928303/greg"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517919344, "post_id": 48641349, "comment_id": 84282154, "body": "I&#39;m wondering if the garbage collector grabs the process and stops all the threads, even c++ threads not running Haskell code. Or if it stops only threads currently running haskell code, or maybe the thread used to initialize the haskell runtime? I&#39;m thinking of integrating a haskell library into a c++ game engine and I want to make sure that at least the main thread isn&#39;t blocked."}, {"owner": {"reputation": 63, "user_id": 3928303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89f1e801413c6845075db4a2ad39ed25?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/3928303/greg"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517920145, "post_id": 48641349, "comment_id": 84282682, "body": "I&#39;m guessing the haskell run time wouldn&#39;t bother the main c++ thread, but I just don&#39;t know. :I"}, {"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 0, "creation_date": 1517996479, "post_id": 48641349, "comment_id": 84318248, "body": "If a thread is running c++ code, is there even a OS facility to &quot;stop&quot; or &quot;pause&quot; that thread from the outside? I highly doubt that."}], "owner": {"reputation": 63, "user_id": 3928303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89f1e801413c6845075db4a2ad39ed25?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/3928303/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 72, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1517914584, "creation_date": 1517914584, "question_id": 48641349, "link": "https://stackoverflow.com/questions/48641349/does-calling-haskell-from-a-main-app-in-c-c-stop-all-threads-during-gc", "title": "Does calling Haskell from a main app in C/C++ stop all threads during GC?", "body": "<p>I noticed that it is possible to call a Haskell library from C++ using FFI and by initializing the Haskell runtime in the c++ main function. Does this subject all the application's threads to stop the world pauses during garbage collection, or just some of them? Thx.</p>\n"}, {"tags": ["haskell", "happy"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 3, "creation_date": 1517896906, "post_id": 48636222, "comment_id": 84269356, "body": "Ofcourse happy allows that, since ghc is written via Happy. :)"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1517922453, "post_id": 48636222, "comment_id": 84284110, "body": "You should try it and find out; and if you have a Happy program with single line comments which doesn&#39;t compile, then post that program and the error."}, {"owner": {"reputation": 774, "user_id": 2755648, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/633566630d4365c3c872d00efa730166?s=128&d=identicon&r=PG&f=1", "display_name": "sid-kap", "link": "https://stackoverflow.com/users/2755648/sid-kap"}, "edited": false, "score": 0, "creation_date": 1517985157, "post_id": 48636222, "comment_id": 84312286, "body": "Ah, great! I assumed that since the file extension is <code>.y</code> and since Happy is based on yacc, that the comment syntax would be C-like (<code>&#47;* *&#47;</code> and <code>&#47;&#47;</code>). If one of you would like to answer the question, I&#39;ll mark it as correct!"}], "owner": {"reputation": 774, "user_id": 2755648, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/633566630d4365c3c872d00efa730166?s=128&d=identicon&r=PG&f=1", "display_name": "sid-kap", "link": "https://stackoverflow.com/users/2755648/sid-kap"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 210, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1517895942, "creation_date": 1517895942, "question_id": 48636222, "link": "https://stackoverflow.com/questions/48636222/does-happy-allow-single-line-comments", "title": "Does happy allow single-line comments?", "body": "<p>Is there a way to comment everything to the end of the line, like <code>--</code> in Haskell? The only comment syntax I could find was the <code>{- commented stuff -}</code> syntax.</p>\n"}, {"tags": ["haskell", "types", "read-eval-print-loop", "expression-evaluation"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 1, "creation_date": 1517882072, "post_id": 48634284, "comment_id": 84265554, "body": "You sure you\u2019re not just misremembering?"}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517882305, "post_id": 48634284, "comment_id": 84265609, "body": "Yes, I am sure, there was no commas, as in a vector. It really got me curious about it."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517882375, "post_id": 48634284, "comment_id": 84265636, "body": "<code>(:)</code> is a valid value, but <code>1 2 3</code> working is very surprising (because there is no default function instance of <code>Num</code>)."}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517882768, "post_id": 48634284, "comment_id": 84265720, "body": "Yes, but even that isn&#39;t working on GHCi. The result is this:"}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517882779, "post_id": 48634284, "comment_id": 84265727, "body": "<code>&lt;interactive&gt;:1:1: error:         * No instance for (Show (a0 -&gt; [a0] -&gt; [a0]))             arising from a use of ``print&#39;             (maybe you haven&#39;t applied a function to enough arguments?)         * In a stmt of an interactive GHCi command: print it</code>"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517883380, "post_id": 48634284, "comment_id": 84265885, "body": "Ah, maybe the haskell.org REPL at the time showed type information if it couldn\u2019t get an actual value. Is <code>:t 1 2 3</code> what you saw? <code>1 2 3 :: (Num (t1 -&gt; t2 -&gt; t3), Num t2, Num t1) =&gt; t3</code>"}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517883589, "post_id": 48634284, "comment_id": 84265920, "body": "I don&#39;t belive I saw <code>:t</code> at any moment, but <code>1 2 3 :: (Num (t1 -&gt; t2 -&gt; t3), Num t2, Num t1) =&gt; t3</code> looks really familiar."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517883620, "post_id": 48634284, "comment_id": 84265927, "body": "(I mean that that\u2019s the output of <code>:t 1 2 3</code> on GHCi, not that <code>:t</code> would have appeared on haskell.org.)"}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517883947, "post_id": 48634284, "comment_id": 84265994, "body": "I added <code>:t</code> to <code>1 2 3</code> right now on CHCi and it worked. I wasn&#39;t aware about <code>:t</code>, I&#39;m really new to Haskell."}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517883992, "post_id": 48634284, "comment_id": 84266000, "body": "So i just need to add it, that&#39;s it? What exactly does <code>:t</code> mean? &quot;type of&quot;?"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517884213, "post_id": 48634284, "comment_id": 84266041, "body": "Yep. Means exactly that in GHCi. Short for <code>:type</code>."}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517884653, "post_id": 48634284, "comment_id": 84266152, "body": "Ok, thanks for that! But am I right when I say that <code>1 2 3</code> is of type &quot;list of parameters&quot;? Why to some things I need to add <code>:t</code>, even for <code>(:)</code>, that is a valid value?"}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1517885664, "post_id": 48634284, "comment_id": 84266367, "body": "Now that I noticed it, GHCi doesn&#39;t show type information by default, while haskel.org REPL was showing it for every entry, at that time."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1517886249, "post_id": 48634284, "comment_id": 84266484, "body": "@Codefield <code>1 2 3</code> is not a list of parameters. It is the application of the function <code>1</code> to two parameters <code>2</code> and <code>3</code>. In other languages you may write <code>1(2)(3)</code> or <code>1(2,3)</code>. The fact that the type error is more wonky than you might expect is related to how numeric literals work in Haskell, and this is what any good answer to this question will address (and I&#39;m not). You need to add <code>:t</code> to some things because some things cannot be printed out (because they are not <code>Show</code>able), esp. functions, so you can use <code>:t</code> to print out their types and not their values."}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1518225743, "post_id": 48634284, "comment_id": 84431858, "body": "@HTNW Thank you for clarifying response. I was also trying Clojure REPL at that time and I think it &#39;helped&#39; me to misunderstand the Haskell semantics. Clojure evaluates functions and operators as some kind of objects and since haskell.org REPL was &#39;adding&#39; an implicit <code>:t</code> to every query, it was showing a similar behaviour of Clojure REPL: returning a number when entering number, a vector in case of a vector and even doing the same with functions. But also showing type, which made sense, since Haskell is stronly typed."}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1518225841, "post_id": 48634284, "comment_id": 84431876, "body": "@HTNW So when I typed <code>1 2 3</code> in and it returned the same thing, it looked   like a value, since Clojure would acuse an error if trying to use <code>1</code> as a function."}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1518226153, "post_id": 48634284, "comment_id": 84431937, "body": "@HTNW I don&#39;t know if the &#39;concept&#39; of an isolated list of arguments could be useful in any language, if existed, but now I know there&#39;s no such a thing in Haskell. Maybe it&#39;s a silly thing, but I thought it was awesome at that time, but I&#39;m still excited about learning an almost purely functional language such Haskell and all the math that comes with it."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1518230454, "post_id": 48634284, "comment_id": 84432695, "body": "@Codefield If you go ham with the language extensions, you can write <code>data HList (xs :: [*]) where { HNil :: HList &#39;[]; HCons :: x -&gt; HList xs -&gt; HList (x:xs) }</code>, which is a list of things of different types. You can then have <code>class AppHList f a r | f a -&gt; r where { appHList :: f -&gt; HList a -&gt; r }; instance AppHList x &#39;[] x where { appHList = const }; instance (f ~ (a -&gt; b), a ~ x, AppHList b xs r) =&gt; AppHList f (x : xs) r where { appHList f (HCons a xs) = appHList (f a) xs }</code>. This lets you pass an <code>HList</code> to a function: <code>args = HCons 5 $ HCons 4 HNil; one = appHList (-) args</code>"}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "edited": false, "score": 0, "creation_date": 1518227175, "post_id": 48635471, "comment_id": 84432140, "body": "First of all, thank you for such a detailed answer. I see you spend some time to make it complete and explain every topic. But I hope I don&#39;t disappoint you saying that I don&#39;t want to make Haskell evaluate <code>1 2 3</code> or <code>(:)</code> &#39;overwriting&#39; its usual behaviour, to not lose generality. I know that it seems that the title asks for that, but the thing is that I misunderstood the Haskell semantics and I wanted a behaviour that simply doesn&#39;t exist. Since haskell.org REPL was sort of appending <code>:t</code> to every query implicitly, <code>1 2 3</code> seamed to me as a special value, but I know what was happening."}, {"owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "edited": false, "score": 0, "creation_date": 1518227484, "post_id": 48635471, "comment_id": 84432193, "body": "I still learned a lot with your answer and still can make use <code>:t</code> to simulate that old behaviour from haskell.org REPL. Off course, maybe there&#39;s a way of making every query a <code>:t</code> query, but off course it doesn&#39;t look necessary, since just write it is easy enough (and not writing, to &#39;disable&#39; that behaviour). Thanks again."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 9, "last_activity_date": 1517891970, "last_edit_date": 1517891970, "creation_date": 1517891172, "answer_id": 48635471, "question_id": 48634284, "link": "https://stackoverflow.com/questions/48634284/how-to-make-1-2-3-a-valid-expression-in-a-haskell-repl-environment/48635471#48635471", "title": "How to make &quot;1 2 3&quot; a valid expression in a Haskell REPL environment?", "body": "<p>I suspect that you remember one of these two outcomes:</p>\n\n<pre><code>&gt; :t 1 2 3\n1 2 3 :: (Num (t1 -&gt; t -&gt; t2), Num t, Num t1) =&gt; t2\n&gt; 1 2 3\n\n&lt;interactive&gt;:7:1: error:\n    \u2022 No instance for (Num (t1 -&gt; t0 -&gt; a0)) arising from a use of \u2018it\u2019\n        (maybe you haven't applied a function to enough arguments?)\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>The former indicates that Haskell has attempted to interpret the literal <code>1</code> as a function that can be applied to the literals <code>2</code> and <code>3</code>; the <code>Num (t1 -&gt; t -&gt; t2)</code> constraint says that <code>1</code> can be interpreted as a two-argument function, while the <code>Num t</code> and <code>Num t1</code> constraints indicate that <code>2</code> and <code>3</code> can be interpreted as suitable arguments to this function.</p>\n\n<p>The latter indicates the same thing, but goes on to say that furthermore it couldn't find such an instance that tells how to interpret a number as a function.</p>\n\n<p>You can add one if you like; the least you'll need is something like this:</p>\n\n<pre><code>instance Num b =&gt; Num (a -&gt; b) where fromInteger = pure . fromInteger\n</code></pre>\n\n<p>(This leaves the other <code>Num</code> methods undefined, meaning they will throw an error if you try to use them at function type.)</p>\n\n<p>Following that declaration, the above two queries have slightly different results:</p>\n\n<pre><code>&gt; :t 1 2 3\n1 2 3 :: Num t =&gt; t\n&gt; 1 2 3\n1\n</code></pre>\n\n<p>The former indicates that since there is now an in-scope method of interpreting number literals as functions, we can collapse all the previous constraints quite a bit. The latter produces a number \"by accident\" as it were: the monomorphism restriction defaults the polymorphic type <code>Num t =&gt; t</code> to <code>Integer</code> and prints the result.</p>\n\n<p>The story with <code>(:)</code> is similar, I expect: probably you remember asking a <code>:t</code> query, which works just fine:</p>\n\n<pre><code>&gt; :t (:)\n(:) :: a -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>There's no standard way built-in of printing functions, though, so trying to \"run\" <code>(:)</code> on its own produces an error:</p>\n\n<pre><code>&gt; (:)\n\n&lt;interactive&gt;:14:1: error:\n    \u2022 No instance for (Show (a0 -&gt; [a0] -&gt; [a0]))\n        arising from a use of \u2018print\u2019\n        (maybe you haven't applied a function to enough arguments?)\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>This error says basically what I did: by default there's no way of showing functions. As before, you can add one if you like; a popular but lossy one is this:</p>\n\n<pre><code>&gt; :m + Text.Show.Functions\n&gt; (:)\n&lt;function&gt;\n</code></pre>\n\n<p>Slightly less lossy would be to do this instead (not in addition!):</p>\n\n<pre><code>&gt; :m + Data.Typeable\n&gt; instance (Typeable a, Typeable b) =&gt; Show (a -&gt; b) where show = show . typeOf\n</code></pre>\n\n<p>...but you can't apply it to <code>(:)</code> directly, as it works only with monomorphic functions.</p>\n\n<pre><code>&gt; (:) 3\n[Integer] -&gt; [Integer]\n</code></pre>\n\n<p>Of course, the best is to use a <a href=\"https://hackage.haskell.org/package/universe-1.0/docs/Data-Universe-Instances-Reverse.html\" rel=\"noreferrer\">lossless show implementation</a>, but it is even more restrictive on which functions it can be used with: only monomorphic functions (as before) with finite domain (new restriction).</p>\n\n<pre><code>&gt; :m + Data.Universe.Instances.Reverse\n&gt; enumFrom\n[((),[()])]\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 9319454, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a183b5db07adc0ae548fe29163e769a?s=128&d=identicon&r=PG&f=1", "display_name": "Codefield", "link": "https://stackoverflow.com/users/9319454/codefield"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "accepted_answer_id": 48635471, "answer_count": 1, "score": 0, "last_activity_date": 1576091053, "creation_date": 1517881764, "last_edit_date": 1576091053, "question_id": 48634284, "link": "https://stackoverflow.com/questions/48634284/how-to-make-1-2-3-a-valid-expression-in-a-haskell-repl-environment", "title": "How to make &quot;1 2 3&quot; a valid expression in a Haskell REPL environment?", "body": "<p>Some years ago, I came across with <a href=\"https://haskell.org\" rel=\"nofollow noreferrer\">haskell.org</a> and played a little bit with its REPL. One of the expressions that I tried was just a sequence of numbers, separated by spaces, like <code>1 2 3</code> and I was surprised, since it didn't generate an error, but was evaluated and returned with some of that Haskell type descriptions, that, by the way, for a C and JAVA programmer seemed very intriguing. It may be just a nuance, but the result really left me curious, since an isolated set of parameters seemed to be a value by itself. </p>\n\n<p>There were an example of an expression to try: <code>foldr (:) [] [1, 2, 3]</code>. I tried just <code>(:)</code> instead, and it still was a valid expression and returned some kind of structure.</p>\n\n<p>Nowadays, the same site's REPL doesn't recognize these two expressions. And I also downloaded and installed Haskell Platform from <a href=\"https://www.haskell.org/downloads\" rel=\"nofollow noreferrer\">here</a> and it went to that GHCi REPL does not recognize it either. I tried this: </p>\n\n<pre><code>:set -XFlexibleContexts\n</code></pre>\n\n<p>and </p>\n\n<pre><code>:set -XAllowAmbiguousTypes\n</code></pre>\n\n<p>as it was suggested by REPL messages, but it didn't work.</p>\n\n<p>I know this may be not an useful behaviour, but I still would like to reproduce it.</p>\n\n<p>Thank you in advance. </p>\n"}, {"tags": ["haskell", "hxt"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1517922564, "post_id": 48634162, "comment_id": 84284184, "body": "What&#39;s the behaviour of this program? Include any errors. If it compiles and runs without error (but the behaviour is incorrect) then include the desired behaviour."}, {"owner": {"reputation": 255, "user_id": 681337, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/be5e0ffb42be5e3337208ae8c9679bb4?s=128&d=identicon&r=PG", "display_name": "Neil", "link": "https://stackoverflow.com/users/681337/neil"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1517941676, "post_id": 48634162, "comment_id": 84296879, "body": "Sorry, I&#39;ve added the compiler error message."}], "answers": [{"comments": [{"owner": {"reputation": 255, "user_id": 681337, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/be5e0ffb42be5e3337208ae8c9679bb4?s=128&d=identicon&r=PG", "display_name": "Neil", "link": "https://stackoverflow.com/users/681337/neil"}, "edited": false, "score": 0, "creation_date": 1517958888, "post_id": 48650894, "comment_id": 84305071, "body": "Sorry, silly error on my part... the error message has been updated after I fixed the comma issue."}], "tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 1, "last_activity_date": 1517946823, "creation_date": 1517946823, "answer_id": 48650894, "question_id": 48634162, "link": "https://stackoverflow.com/questions/48634162/hxt-adding-elements-to-a-tree-based-on-a-list/48650894#48650894", "title": "HXT: Adding elements to a tree based on a list", "body": "<p>Your top code listing has a comma which is not present in the code printed by GHC in the error message.  Without the comma, GHC tries to interpret <code>mapM</code>, <code>mkInvestment</code>,  and <code>[(120, 10.0)]</code> as three arguments to <code>selem</code>.</p>\n\n<p>I haven't tried compiling with the comma; I don't know if there are additional errors.</p>\n"}, {"comments": [{"owner": {"reputation": 255, "user_id": 681337, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/be5e0ffb42be5e3337208ae8c9679bb4?s=128&d=identicon&r=PG", "display_name": "Neil", "link": "https://stackoverflow.com/users/681337/neil"}, "edited": false, "score": 0, "creation_date": 1518203845, "post_id": 48707292, "comment_id": 84424417, "body": "Ahh, that worked, thanks... the trick for me was understanding that I can use fmap there."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 1, "last_activity_date": 1518183931, "creation_date": 1518183931, "answer_id": 48707292, "question_id": 48634162, "link": "https://stackoverflow.com/questions/48634162/hxt-adding-elements-to-a-tree-based-on-a-list/48707292#48707292", "title": "HXT: Adding elements to a tree based on a list", "body": "<p>Your issue doesn't actually involve arrows; rather, it has to do with <code>mapM</code> being unnecessary here. A plain <code>fmap</code> over the list of tuples to make the element arrows, following by appending the result to the list with the rest of your elements, should be enough.</p>\n\n<pre><code>mkqelem (mkQName vns \"depositInstruction\" pacNS) [] $\n    [selem \"key\" \n        [selem \"accountId\" [txt $ pacuAccountId pacUpdate],\n         selem \"instructionId\" [txt $ pacuInstructionId pacUpdate]\n        ],\n     selem \"totalAmount\" [txt $ pacuTotalAmount pacUpdate]\n     ]\n    ++ fmap mkInvestment [(120, 10.0), (121, 15.0)]\n</code></pre>\n\n<p>As for <code>(+=)</code>, it adds children to a node, so you wouldn't use it instead of <code>mapM</code>/<code>fmap</code>, but rather, for instance, to define <code>mkInvestment</code> in a different manner:</p>\n\n<pre><code>mkInvestment :: ArrowXml a =&gt; (Fund, Amount) -&gt; a n XmlTree\nmkInvestment x = eelem \"investments\"\n    += (eelem \"investmentId\" += (txt $ show $ fst x))\n    += (eelem \"amount\" += (txt $ show $ snd x))\n    -- Minor style suggestion: you might prefer to use pattern matching here \n    -- instead of fst and snd.\n</code></pre>\n"}], "owner": {"reputation": 255, "user_id": 681337, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/be5e0ffb42be5e3337208ae8c9679bb4?s=128&d=identicon&r=PG", "display_name": "Neil", "link": "https://stackoverflow.com/users/681337/neil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 48707292, "answer_count": 2, "score": 0, "last_activity_date": 1518183931, "creation_date": 1517880863, "last_edit_date": 1517958765, "question_id": 48634162, "link": "https://stackoverflow.com/questions/48634162/hxt-adding-elements-to-a-tree-based-on-a-list", "title": "HXT: Adding elements to a tree based on a list", "body": "<p>I'm struggling using arrows in the HXT library to generate elements in a tree based on a list (the line with mapM below). </p>\n\n<pre><code>mkqelem (mkQName vns \"depositInstruction\" pacNS) []  \n    [selem \"key\" \n        [selem \"accountId\" [txt $ pacuAccountId pacUpdate],\n         selem \"instructionId\" [txt $ pacuInstructionId pacUpdate]\n        ],\n     selem \"totalAmount\" [txt $ pacuTotalAmount pacUpdate],\n     mapM mkInvestment  [(120, 10.0)]\n     ]\n\nmkInvestment :: ArrowXml a =&gt; (Fund, Amount) -&gt; a n XmlTree\nmkInvestment x = selem \"investments\" [selem \"investmentId\" [txt $ show $ fst x],selem \"amount\" [txt $ show $ snd x]] \n</code></pre>\n\n<p>The program won't compile, I get the following:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018[]\u2019 with \u2018XN.NTree\u2019\n  Expected type: a n XmlTree\n    Actual type: a n [XmlTree]\n\u2022 In the expression: mapM mkInvestment [(120, 10.0)]\n  In the third argument of \u2018mkqelem\u2019, namely\n    \u2018[mkelem\n        \"key\" [] [selem \"accountId\" [...], selem \"instructionId\" [...]],\n      selem \"totalAmount\" [txt $ pacuTotalAmount pacUpdate],\n      mapM mkInvestment [(120, 10.0)]]\u2019\n  In the expression:\n    mkqelem\n      (mkQName vns \"depositInstruction\" pacNS)\n      []\n      [mkelem\n         \"key\" [] [selem \"accountId\" [...], selem \"instructionId\" [...]],\n       selem \"totalAmount\" [txt $ pacuTotalAmount pacUpdate],\n       mapM mkInvestment [(120, 10.0)]]\n</code></pre>\n\n<p>I've tried replacing mapM with variations of +=, but I don't have a good intuition on mapping in Arrows. Any pointers?</p>\n"}, {"tags": ["haskell", "list-comprehension"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1517880397, "post_id": 48634044, "comment_id": 84265179, "body": "Can you explain the supposed logic of your solution in plain English?"}, {"owner": {"reputation": 1, "user_id": 9319497, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22fb7679eb78b9516d3503d57355bb50?s=128&d=identicon&r=PG&f=1", "display_name": "ChadT", "link": "https://stackoverflow.com/users/9319497/chadt"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1517880646, "post_id": 48634044, "comment_id": 84265237, "body": "@FyodorSoikin s is the string taken from user and xs is generated by matching letters in &quot;lowerlist&quot; and s, and then if xs has the same letters as &quot;lowerlist&quot; then returns True for pangram."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1517898899, "post_id": 48634044, "comment_id": 84270062, "body": "Nitpick: <code>if &lt;thing&gt; then True else False</code> is the same as just <code>&lt;thing&gt;</code> itself"}], "answers": [{"tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": false, "score": 1, "last_activity_date": 1517902810, "last_edit_date": 1517902810, "creation_date": 1517893294, "answer_id": 48635788, "question_id": 48634044, "link": "https://stackoverflow.com/questions/48634044/how-do-i-get-the-list-rather-than-the-list-element-type-when-using-list-comprehe/48635788#48635788", "title": "How do I get the list rather than the list element type when using list comprehension?", "body": "<p>First, the answer to the literal question you asked.  The way to refer to a list itself within the list comprehension is to give it a binding.  Contrived examples:</p>\n\n<pre><code>a2z = 'a':[ succ (a2z!!i) | i &lt;- [0..24]]\nfibo = 0:1:[fibo !! i + fibo !! (i+1) | i &lt;- [0..]]\n</code></pre>\n\n<p>Now, as for the pangram program.  It looks as if you want hints to solve it yourself, not a complete solution, so: what you want is not to compare your string to the literal alphabet, but to test whether a predicate based on the input string is true of every character in the alphabet. That is, your predicate is some function of the input which must be true of <code>all</code> characters in the alphabet.  You might try filling in the hole in this skeleton:</p>\n\n<pre><code>import Data.Char (toLower)\n\nmain :: IO ()\nmain = interact ( unlines . map show . map isPangram . lines )\n\nisPangram :: String -&gt; Bool\nisPangram xs = all (_ ys) alphabet\n  where alphabet = ['a'..'z']\n        ys = map toLower xs\n</code></pre>\n\n<p>As GHC will tell you, the type of the missing function is <code>:: String -&gt; Char -&gt; Bool</code>.  So you might also write it this way:</p>\n\n<pre><code>import Data.Char (toLower)\n\nmain :: IO ()\nmain = interact ( unlines . map show . map isPangram . lines )\n\nisPangram :: String -&gt; Bool\nisPangram xs = all p alphabet\n  where alphabet = ['a'..'z']\n        ys = map toLower xs\n\n        p :: Char -&gt; Bool\n        p c = _\n</code></pre>\n\n<p>You can remove the <code>ys</code> parameter and simply refer to <code>ys</code> directly within <code>p</code>, as that variable, holding the normalized input, is in the scope of <code>p</code>.</p>\n\n<p>Maybe you want a tweak to your current program.  In this case, the list you\u2019re generating is a list of <code>Bool</code>.  You can get the program to work if the list contains, for each letter of the alphabet, <code>True</code> if that letter appears in the input, <code>False</code> if not.  You can also use <code>all</code> to reduce this list to a single Boolean value.</p>\n\n<p>If you instead want to accumulate a set of all the letters that have been encountered so far in the string, and stop when it equals the entire alphabet, you want a more complex recursive tail-recursive function.  It would build its accumulating parameter as something like insertion into a <code>Data.List.Ordered</code>, make sure to insert only elements from the alphabet, each only once, and stop when the cardinality of the accumulated set (which is the <code>length</code> of the ordered list) is the same as that of the alphabet.  It would, however, be more efficient to start with the complete alphabet and remove elements as they are encountered, stopping when either the input or the alphabet are empty:</p>\n\n<pre><code>import Data.Char (toLower)\nimport Data.List -- You\u2019ll need a function from here.\n\nmain :: IO ()\nmain = interact ( unlines . map show . map isPangram . lines )\n\nisPangram :: String -&gt; Bool\nisPangram xs = isPangram' alphabet ys\n  where alphabet = ['a'..'z']\n        ys = map toLower xs\n\n        isPangram' :: [Char] -&gt; [Char] -&gt; Bool\n        isPangram' [] _ = _  -- There are no more letters to search for.\n        isPangram' _ [] = _ -- There is nothing left to search.\n        isPangram' ws (z:zs) = isPangram' _ _ -- Remove an element from both lists.\n</code></pre>\n\n<p>An alternative approach would be to normalize the input, <code>filter</code> out all extraneous elements, and take the <code>nub</code> of what\u2019s left as a list of <code>Char</code>.</p>\n"}], "owner": {"reputation": 1, "user_id": 9319497, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22fb7679eb78b9516d3503d57355bb50?s=128&d=identicon&r=PG&f=1", "display_name": "ChadT", "link": "https://stackoverflow.com/users/9319497/chadt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1517902810, "creation_date": 1517879893, "question_id": 48634044, "link": "https://stackoverflow.com/questions/48634044/how-do-i-get-the-list-rather-than-the-list-element-type-when-using-list-comprehe", "title": "How do I get the list rather than the list element type when using list comprehension?", "body": "<p>I'm receiving errors while writing a function that takes a string from the user and decides returns bool whether it's a pangram or not. I'm having complications due to this error </p>\n\n<p>\"Couldn't match expected type Char with actual type [Char]\".</p>\n\n<p>This is all the code I have in a .hs file.</p>\n\n<pre><code>lowerlist = ['a'..'z']\nupperlist = ['A'.. 'Z']\ntlist = zip upperlist lowerlist\n\npangram s = [if xs == lowerlist then True else False| xs &lt;- lowerlist, xs `elem` s]\n</code></pre>\n\n<p>If I put [] around xs then it just gives me a bunch of \"[True, false, true, true, .....]\".</p>\n\n<p>Can someone help solve this problem for me and perhaps give me tips on this program?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 1219, "user_id": 6382398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/567598034dbeeb9a87b6685040caa4c0?s=128&d=identicon&r=PG&f=1", "display_name": "Stephan Strate", "link": "https://stackoverflow.com/users/6382398/stephan-strate"}, "is_accepted": true, "score": 3, "last_activity_date": 1517870706, "creation_date": 1517870706, "answer_id": 48632724, "question_id": 48631994, "link": "https://stackoverflow.com/questions/48631994/printing-a-wreq-response-to-the-terminal/48632724#48632724", "title": "Printing a wreq response to the terminal", "body": "<p>You need to unwrap the <code>Response ByteString</code>, so you get a <code>ByteString</code> and you can use it with <code>C.unpack</code>.</p>\n\n<p>Here is a working example:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nimport Network.Wreq\nimport Control.Lens\nimport Data.ByteString.Lazy.Char8 as C\n\nmain :: IO ()\nmain = do\n    r &lt;- get \"http://httpbin.org/get\"\n    Prelude.putStrLn $ C.unpack $ (r ^. responseBody)\n</code></pre>\n"}], "owner": {"reputation": 2512, "user_id": 2325380, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SvFan.jpg?s=128&g=1", "display_name": "Mark Karavan", "link": "https://stackoverflow.com/users/2325380/mark-karavan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 48632724, "answer_count": 1, "score": 0, "last_activity_date": 1517870706, "creation_date": 1517867056, "question_id": 48631994, "link": "https://stackoverflow.com/questions/48631994/printing-a-wreq-response-to-the-terminal", "title": "Printing a wreq response to the terminal", "body": "<p>I want to do something very simple; make a <code>wreq</code> response and print the contents to the terminal.</p>\n\n<p>main.hs looks like this:\n{-# LANGUAGE OverloadedStrings #-}</p>\n\n<pre><code>module Main where\n\nimport Network.Wreq\nimport qualified Data.ByteString.Char8 as C\n\nmain :: IO ()\nmain = do\n  r &lt;- get \"http://httpbin.org/get\"\n  putStrLn (C.unpack r)\n</code></pre>\n\n<p>Why?  Because <code>r</code> seems to be a bytestring, so it should be unpackable.</p>\n\n<pre><code>Prelude&gt; import Network.Wreq\nPrelude Network.Wreq&gt; r &lt;- get \"http://httpbin.org/get\"\nPrelude Network.Wreq&gt; :type r\nr :: Response Data.ByteString.Lazy.Internal.ByteString\n</code></pre>\n\n<p>My .cabal file looks like this:</p>\n\n<pre><code>executable wreqscraper\n  hs-source-dirs:      src\n  main-is:             Main.hs\n  default-language:    Haskell2010\n  build-depends:       base &gt;= 4.7 &amp;&amp; &lt; 5,\n                       wreq,\n                       bytestring\n</code></pre>\n\n<p>And when I try to build it with <code>stack build</code> I get this:</p>\n\n<pre><code>/Users/mkaravan/end2end/haskell_sandbox/wreqscraper/src/Main.hs:22:22: error:\n    \u2022 Couldn't match expected type \u2018C.ByteString\u2019\n                  with actual type \u2018Response\n                                      Data.ByteString.Lazy.Internal.ByteString\u2019\n    \u2022 In the first argument of \u2018C.unpack\u2019, namely \u2018r\u2019\n      In the first argument of \u2018putStrLn\u2019, namely \u2018(C.unpack r)\u2019\n      In a stmt of a 'do' block: putStrLn (C.unpack r)\n</code></pre>\n\n<p>What is the correct way to print these contents with <code>putStrLn</code> (or something similar)?</p>\n"}, {"tags": ["haskell", "typeclass"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1517905872, "post_id": 48631986, "comment_id": 84273394, "body": "It&#39;s not quite <code>* -&gt; Constraint</code>, since it&#39;s just a synonym, so it can&#39;t be used as a first-class entity with that kind.  Fine for this question, but if any more structure is needed, use the idiom <code>class (RealFloat a, Floating a, ...) =&gt; NiceFloating a; instance (RealFloat a, Floating a, ...) =&gt; NiceFloating a</code>, which can be used in a higher-order way."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1517906037, "post_id": 48631986, "comment_id": 84273468, "body": "I&#39;d also upgrade it to a class. A constraint synonym can reduce repetition there too. <code>type NiceFloating&#39; a = (...); class NiceFloatingC a =&gt; NiceFloating a; instance NiceFloatingC a =&gt; NiceFloating a</code>. Kind of ugly, but works when you need to pass the <code>NiceFloating</code> around."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1517908097, "post_id": 48631986, "comment_id": 84274658, "body": "@luqui True, it&#39;s not quite it, yet <code>:k</code> in GHCi pretends it is <code>* -&gt; Constraint</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1541857204, "post_id": 48631986, "comment_id": 93364880, "body": "Also, with <code>-XLiberalTypeSynonyms</code>, such a typesyn <i>can</i> be used in some settings that would otherwise require a proper class."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 12, "last_activity_date": 1517867042, "creation_date": 1517867042, "answer_id": 48631986, "question_id": 48631939, "link": "https://stackoverflow.com/questions/48631939/a-concise-way-to-factor-out-multiple-typeclasses-in-haskell/48631986#48631986", "title": "A concise way to factor out multiple typeclasses in Haskell?", "body": "<pre><code>{-# LANGUAGE ConstraintKinds #-}\ntype NiceFloating a = (RealFloat a, Floating a, Real a, Show a, Ord a, Typeable a)\n</code></pre>\n\n<p>This defines the wanted <code>NiceFloating :: * -&gt; Constraint</code>.</p>\n"}], "owner": {"reputation": 463, "user_id": 7342065, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a47003905491d69d47a261235044a44?s=128&d=identicon&r=PG&f=1", "display_name": "kye", "link": "https://stackoverflow.com/users/7342065/kye"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 2, "accepted_answer_id": 48631986, "answer_count": 1, "score": 8, "last_activity_date": 1517867042, "creation_date": 1517866827, "question_id": 48631939, "link": "https://stackoverflow.com/questions/48631939/a-concise-way-to-factor-out-multiple-typeclasses-in-haskell", "title": "A concise way to factor out multiple typeclasses in Haskell?", "body": "<p>In my Haskell codebase, I have many functions that take polymorphic arguments. These polymorphic arguments all need to satisfy the same set of typeclasses (<code>RealFloat a, Floating a, Real a, Show a, Ord a, Typeable a</code>) and this set of typeclasses needs to be present in the functions' type annotations. </p>\n\n<p>Right now I've been manually writing the typeclass annotations for every function, but it gets verbose to have that list of typeclasses repeated 30+ times in my codebase, and cumbersome to have to change each type annotation if I find out I need to add another typeclass to the list. I'm wondering if there is a more concise way to factor out a common list of typeclasses. </p>\n\n<p>I'm really looking to define a \"typeclass synonym\" like <code>typeclass NiceFloating a = RealFloat a, Floating a, Real a, Show a, Ord a, Typeable a</code> so I can just write <code>NiceFloating a =&gt; a</code> in all of my type annotations instead.</p>\n\n<p>If that feature doesn't exist, perhaps I can write a \"master typeclass\" that requires that a value satisfy every typeclass in the list of typeclasses? But I don't want to write out all the operations for e.g. Real, Show, and Ord by hand\u2014is there a way around that?</p>\n"}, {"tags": ["list", "haskell", "io"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 4, "creation_date": 1517865308, "post_id": 48631406, "comment_id": 84260222, "body": "Variables on Haskell are immutable. You are evaluating <code>app valueTab [pi]</code> (which could have been written <code>valueTab ++ [pi]</code> by the way) but this doesn&#39;t change the value of <code>valueTab</code>. It cannot. <code>valueTab</code> is forever an empty list."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 3, "creation_date": 1517865843, "post_id": 48631406, "comment_id": 84260482, "body": "OTOH the result of <code>replicateM</code> function (it&#39;s a function that returns a value) could be interesting but you never do anything with it. Perhaps try to explore this possibility."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 2, "creation_date": 1517868034, "post_id": 48631406, "comment_id": 84261499, "body": "If you\u2019re allowed to throw out the boilerplate, you might find this a lot simpler to write using <code>interact</code>, <code>words</code>, <code>map</code> and <code>read</code>."}, {"owner": {"reputation": 124, "user_id": 6764854, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh6.googleusercontent.com/-7qldIMLvddw/AAAAAAAAAAI/AAAAAAAAADg/ty9jotc0CVw/photo.jpg?sz=128", "display_name": "Kurt Anderson", "link": "https://stackoverflow.com/users/6764854/kurt-anderson"}, "edited": false, "score": 0, "creation_date": 1517972915, "post_id": 48631406, "comment_id": 84308694, "body": "Thanks for the insights in to haskell. I see I am thinking too much Java on this problem haha."}], "answers": [{"comments": [{"owner": {"reputation": 124, "user_id": 6764854, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh6.googleusercontent.com/-7qldIMLvddw/AAAAAAAAAAI/AAAAAAAAADg/ty9jotc0CVw/photo.jpg?sz=128", "display_name": "Kurt Anderson", "link": "https://stackoverflow.com/users/6764854/kurt-anderson"}, "edited": false, "score": 0, "creation_date": 1517972846, "post_id": 48647478, "comment_id": 84308689, "body": "Thank you so much for that explanation. I can&#39;t believe it was that simple, and at the same time, I would never have been able to figure that out just by looking at it. But from your explanation, I definitely have a little bit stronger of a grasp of the concepts here. Now I can actually get in to trying to solve the puzzle! Thanks again for taking the time to answer. Also, nice work nailing it on the head that it was from codingame!"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 1, "last_activity_date": 1517934148, "creation_date": 1517934148, "answer_id": 48647478, "question_id": 48631406, "link": "https://stackoverflow.com/questions/48631406/how-to-add-to-a-list-from-io-in-haskell/48647478#48647478", "title": "How to add to a List from IO in Haskell.", "body": "<p>It looks like you're doing a problem on codinggame.com.  Other coding sites seem to do a better job with their Haskell templates, particularly for beginner exercises -- the template usually takes care of <em>all</em> the input and output, and you just need to supply the missing pure function.  In contrast, codinggame.com's Haskell templates seem to assume the beginner has a pretty firm grasp of the IO monad, and leave out a lot of essential details (e.g., the fact that the result of the <code>replicateM</code> action should actually be bound to a variable) which you're expected to fill in.</p>\n\n<p>The <code>replicateM</code> call in the original template probably looked something like:</p>\n\n<pre><code>replicateM n $ do\n    input_line &lt;- getLine\n    let pi = read input_line :: Int    -- maybe this line was there, maybe not\n    return ()\n</code></pre>\n\n<p>This expression creates a composite IO action that, when executed, will repeat the following subaction <code>n</code> times:</p>\n\n<ul>\n<li>read a line, binding the string read to <code>input_line</code></li>\n<li>prepare to convert that line to an integer value <code>pi</code> (though this is never done because <code>pi</code> isn't used)</li>\n<li>regardless of the string read, return \"unit\" (the value <code>()</code>) as the result of the subaction</li>\n</ul>\n\n<p>The value of the composite action is then a list of the values returned by the subactions.  Since those were all units, the final value of the composite action is a list <code>[(),(),()...()]</code>, with one <code>()</code> for each line read.  However, because the value of this composite action is never bound to a variable (i.e., because there's no <code>result &lt;- ...</code> before the <code>replicateM</code> expression), this list is thrown away.</p>\n\n<p>So, this template provides a needlessly verbose method of reading <code>n</code> lines of input and doing nothing with them.</p>\n\n<p>Fortunately, all you need to do to make this template do something useful is to have the subaction return a value that's useful (e.g., the integer <code>pi</code>) which will cause the composite action to return a list of the integers read, and then make sure you bind the resulting list to a variable using the <code>&lt;-</code> notation.</p>\n\n<p>In other words, you want to write:</p>\n\n<pre><code>main = do\n    ...\n\n    pis &lt;- replicateM n $ do\n        input_line &lt;- getLine\n        let pi = read input_line :: Int\n        return pi\n\n    hPutStrLn stderr (show pis)\n</code></pre>\n\n<p>You won't need the helper function <code>app</code>, and you won't need to pre-declare a list <code>valueTab</code> to contain the result.  The result is automatically produced by <code>replicateM</code>, and you just need to name it so you can use it.</p>\n\n<p>The complete working program will look like:</p>\n\n<pre><code>import System.IO\nimport Control.Monad\n\ntype Int2 = [Int]\n\nmain :: IO ()\nmain = do\n    hSetBuffering stdout NoBuffering -- DO NOT REMOVE\n\n    -- Auto-generated code below aims at helping you parse\n    -- the standard input according to the problem statement.\n\n    input_line &lt;- getLine\n    let n = read input_line :: Int\n    let value = [] :: [Int]\n\n    pis &lt;- replicateM n $ do\n        input_line &lt;- getLine\n        let pi = read input_line :: Int\n        return pi\n\n    hPutStrLn stderr (show pis)\n\n    -- hPutStrLn stderr \"Debug messages...\"\n    -- Write answer to stdout\n\n    return ()\n</code></pre>\n"}], "owner": {"reputation": 124, "user_id": 6764854, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh6.googleusercontent.com/-7qldIMLvddw/AAAAAAAAAAI/AAAAAAAAADg/ty9jotc0CVw/photo.jpg?sz=128", "display_name": "Kurt Anderson", "link": "https://stackoverflow.com/users/6764854/kurt-anderson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 756, "favorite_count": 1, "accepted_answer_id": 48647478, "answer_count": 1, "score": 0, "last_activity_date": 1517934148, "creation_date": 1517864537, "question_id": 48631406, "link": "https://stackoverflow.com/questions/48631406/how-to-add-to-a-list-from-io-in-haskell", "title": "How to add to a List from IO in Haskell.", "body": "<p>I am trying to write a simple function which reads in one line at a time (which I know will be integers) and then stores them in to a list. For the life of me however, it seems like the list comes out to empty. </p>\n\n<pre><code>import System.IO\nimport Control.Monad\n\ntype Int2 = [Int]\n\nvalueTab = [] :: [Int]\n\napp [ ] list = list \napp (h:t) list = h:(app t list)\n\nmain :: IO ()\nmain = do\n    hSetBuffering stdout NoBuffering -- DO NOT REMOVE\n\n    -- Auto-generated code below aims at helping you parse\n    -- the standard input according to the problem statement.\n\n    input_line &lt;- getLine\n    let n = read input_line :: Int\n    let value = [] :: [Int]\n\n    replicateM n $ do\n        input_line &lt;- getLine\n        let pi = read input_line :: Int\n        hPutStrLn stderr (show input_line)\n        hPutStrLn stderr (show valueTab)\n        return $ app valueTab [pi]\n\n\n    -- hPutStrLn stderr \"Debug messages...\"\n\n    -- Write answer to stdout\n\n\n    --putStrLn input_line\n    return ()\n</code></pre>\n\n<p>So when I run this with \n8\n6\n4\n3 all on their own lines, \nIt prints 6, [], 4, [], 3 []. </p>\n\n<p>Is this a problem with my printing, with my list declaration, with the way that I store them or? I have both value and valueTab to check whether it was a scope problem. </p>\n\n<p>Note: The code is boilerplate code on a coding website that tests it on it's platform. Assume replicateM is just a loop that runs through the code x number of times. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1517858701, "post_id": 48629999, "comment_id": 84256899, "body": "A Haskell list <code>[a]</code> is already a linked list, so is there a specific reason why you did not use <code>a</code> and defined your own (more verbose) one?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1517858766, "post_id": 48629999, "comment_id": 84256928, "body": "Furthermore I do not really get why you post all kinds of functions that can be performed on the linked list here. The one that seems the most relevant is inserting at the <i>n</i>-th position, so perhaps you can retain that one and rewrite it to delete a node instead."}, {"owner": {"reputation": 289, "user_id": 9189009, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8867132937b784622d8bdc154e230b2?s=128&d=identicon&r=PG&f=1", "display_name": "Alexia Desouza", "link": "https://stackoverflow.com/users/9189009/alexia-desouza"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517858991, "post_id": 48629999, "comment_id": 84257035, "body": "I&#39;m told to do that way. Okay i&#39;ll delete the other functions. Thanks"}], "answers": [{"tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 1, "last_activity_date": 1517862014, "creation_date": 1517862014, "answer_id": 48630835, "question_id": 48629999, "link": "https://stackoverflow.com/questions/48629999/how-to-delete-nth-element-from-a-link-list/48630835#48630835", "title": "How to delete nth element from a link list?", "body": "<p>perhaps this will give you some ideas</p>\n\n<pre><code>Prelude&gt; let removeAt n = map snd . filter ((/=n) . fst) . zip [1..]\nPrelude&gt; removeAt 3 [1..10]\n[1,2,4,5,6,7,8,9,10]\n</code></pre>\n\n<p>either you can count the position recursively, or add an index with <code>zip</code> and work on that index.</p>\n"}, {"tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": true, "score": 2, "last_activity_date": 1517871571, "last_edit_date": 1517871571, "creation_date": 1517862361, "answer_id": 48630912, "question_id": 48629999, "link": "https://stackoverflow.com/questions/48629999/how-to-delete-nth-element-from-a-link-list/48630912#48630912", "title": "How to delete nth element from a link list?", "body": "<p>A linked list <code>LList</code> is either <code>Empty</code> or contains a value and another linked list.</p>\n\n<pre><code>data LList a = Empty | Node a LList\n</code></pre>\n\n<p>This is probably easier if we define an operator (like <code>(:)</code> for the built-in <code>[]</code> linked-list)</p>\n\n<pre><code>data LList a = Empty | a :+: LList\n--   much like:\n-- data [a]  = []    | a :   [a]\n</code></pre>\n\n<p>Your lists are specifically <code>Int</code>s, so we can drop the polymorphism</p>\n\n<pre><code>data LList = Empty | Int :+: LList\n  deriving (Eq, Show, Ord)\n\n-- and, useful for testing:\nfromList :: [Int] -&gt; LList\nfromList = foldr (:+:) Empty\n</code></pre>\n\n<hr>\n\n<p>Inserting after <code>n</code> is just pushing through the linked list <code>n</code> times and re-linking at that point.</p>\n\n<pre><code>import Data.Either (partitionEithers)\n-- partitionEithers :: [Either a b] -&gt; ([a], [b])\n\n-- fun fact, I had to look this one up, but this is how haskell implements (++)\n(|++|) :: LList -&gt; LList -&gt; LList\nEmpty    |++| ys    = ys\nxs       |++| Empty = xs\n(x:+:xs) |++| ys    = x :+: (xs |++| ys)\n\nmySplitAt :: Int -&gt; LList -&gt; (LList, LList)\nmySplitAt n = partitionEithers . map (go n) . zip [0..]\n  where\n  go n (i, x) | i &lt; n     = Left x\n              | otherwise = Right x\n\ninsertAfter :: Int -&gt; Int -&gt; LList -&gt; LList\ninsertAfter n x xs = before |++| (x :+: after)\n  where (before, after) = mySplitAt n xs\n</code></pre>\n\n<p>Which means naturally that deleting the nth value is just relinking after a specific node</p>\n\n<pre><code>delete :: Int -&gt; LList -&gt; LList\ndelete n xs = before |++| after\n  where (before, _ :+: after) = mySplitAt n xs\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "is_accepted": false, "score": 0, "last_activity_date": 1518016667, "creation_date": 1518016667, "answer_id": 48667245, "question_id": 48629999, "link": "https://stackoverflow.com/questions/48629999/how-to-delete-nth-element-from-a-link-list/48667245#48667245", "title": "How to delete nth element from a link list?", "body": "<p>You could do it like this. </p>\n\n<pre><code>removeNth :: Int -&gt; [a] -&gt; [a]\nremoveNth n ls = let (pref, suff) = splitAt n ls\n                 in  pref ++ (tail suff) \n</code></pre>\n"}], "owner": {"reputation": 289, "user_id": 9189009, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8867132937b784622d8bdc154e230b2?s=128&d=identicon&r=PG&f=1", "display_name": "Alexia Desouza", "link": "https://stackoverflow.com/users/9189009/alexia-desouza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 356, "favorite_count": 1, "accepted_answer_id": 48630912, "answer_count": 3, "score": 3, "last_activity_date": 1518016667, "creation_date": 1517858630, "last_edit_date": 1517859133, "question_id": 48629999, "link": "https://stackoverflow.com/questions/48629999/how-to-delete-nth-element-from-a-link-list", "title": "How to delete nth element from a link list?", "body": "<p>How to delete nth element from a link list?</p>\n\n<pre><code>import Data.List \n\ndata LinkedList = LLEmpty  | LLNode Int LinkedList deriving (Eq, Show, Ord)                 \n</code></pre>\n\n<p>Inserting an integer at the n-th position </p>\n\n<pre><code>linkListInsertNPosition :: Int -&gt; Int -&gt; LinkedList -&gt; LinkedList                       \nlinkListInsertNPosition pos val listL =\n    let ninsertion = insertionN val (lengthL listL - pos) listL\n        in ninsertion\n\ninsertionN :: Int -&gt; Int -&gt; LinkedList -&gt; LinkedList           \ninsertionN val count listL =\n    case listL of\n        LLEmpty -&gt; LLEmpty\n        (LLNode a b) -&gt; if (count &lt;=0)\n                            then LLNode val (LLNode a b)\n                       else LLNode a (insertionN val (count - 1) b)            \n</code></pre>\n\n<p>last,tail and head of link list</p>\n\n<pre><code>lastL :: LinkedList -&gt; Int                             \nlastL listL =\n    case listL of\n        LLNode a b -&gt; a\n\ntailL :: LinkedList -&gt; LinkedList                   \ntailL listL =\n    case listL of\n    LLEmpty -&gt; LLEmpty\n    LLNode a b -&gt; b\n\nheadL :: LinkedList -&gt; Int                   --100\nheadL listL =\ncase listL of \n    LLNode a LLEmpty -&gt; a\n    LLNode a b -&gt; headL (tailL b)\n</code></pre>\n\n<p>Obtaining the length of a linked list</p>\n\n<pre><code>lengthL :: LinkedList -&gt; Int                    \nlengthL listL =\ncase listL of\n    LLEmpty -&gt; 0\n    LLNode a b -&gt; 1 + (lengthL (tailL listL))\n</code></pre>\n\n<p>I'm stucked on deleting nth element in a link list. Can anyone help me and suggest a way.\nHow to join the link list after the nth element is deleted? or i will need to do a new link list?</p>\n"}, {"tags": ["haskell", "cloud-haskell"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 2, "creation_date": 1517857921, "post_id": 48629760, "comment_id": 84256487, "body": "Not a Haskell expert, but this is what <code>liftIO</code> is for."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 6, "last_activity_date": 1517857930, "creation_date": 1517857930, "answer_id": 48629809, "question_id": 48629760, "link": "https://stackoverflow.com/questions/48629760/avoid-unsafeperformio-for-interaction-in-a-process-monad/48629809#48629809", "title": "Avoid `unsafePerformIO` for interaction in a Process Monad", "body": "<p>Yes, sure. <code>Process</code> is an instance of <code>MonadIO</code>, so you can just</p>\n\n<pre><code>let run = liftIO . runApp\n</code></pre>\n\n<p>instead.</p>\n"}], "owner": {"reputation": 2047, "user_id": 1942289, "user_type": "registered", "accept_rate": 51, "profile_image": "https://i.stack.imgur.com/ckjmp.jpg?s=128&g=1", "display_name": "Abhiroop Sarkar", "link": "https://stackoverflow.com/users/1942289/abhiroop-sarkar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 48629809, "answer_count": 1, "score": 1, "last_activity_date": 1517857930, "creation_date": 1517857693, "question_id": 48629760, "link": "https://stackoverflow.com/questions/48629760/avoid-unsafeperformio-for-interaction-in-a-process-monad", "title": "Avoid `unsafePerformIO` for interaction in a Process Monad", "body": "<p>I am using Cloud Haskell for message processing. I am also using a general monad transformer stack (with IO at the bottom) for some general tracking of state, configuration etc. </p>\n\n<p>I am running into a situation where I have to use <code>unsafePerformIO</code> for working inside the Process monad. I am describing the situation below. Please bear in mind this is a much contrived example to simplify and present the crux of the problem</p>\n\n<pre><code>data AppConfig\ndata AppState \n\ntype App = ReaderT AppConfig (StateT AppState IO)\n\nrunApp :: App a -&gt; Int -&gt; IO (a, AppState)\nrunApp k maxDepth =\n    let config = AppConfig maxDepth\n        state = AppState 0\n    in runStateT (runReaderT k config) state\n\nmsgHandler :: App ()\nmsgHandler = -- some message handling logic here --\n\nrunServer :: Process ()\nrunServer = do\n  let run handler = return $ unsafePerformIO $ runApp handler\n  (_,_) &lt;- receiveWait [match $ run taskSubmissionHandler]\n  runServer\n</code></pre>\n\n<p>Can this <code>unsafePerformIO</code> be somehow avoided? I understand that the Process monad itself is just a wrapper around the IO monad but there are certain IO operations which are essential inside my transformer stack, which cannot be avoided.</p>\n"}, {"tags": ["haskell", "cabal"], "answers": [{"tags": [], "owner": {"reputation": 21995, "user_id": 263061, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7c724c96f7ec19f73245499b6169e329?s=128&d=identicon&r=PG", "display_name": "nh2", "link": "https://stackoverflow.com/users/263061/nh2"}, "is_accepted": true, "score": 1, "last_activity_date": 1517937137, "last_edit_date": 1517937137, "creation_date": 1517852165, "answer_id": 48628304, "question_id": 48628303, "link": "https://stackoverflow.com/questions/48628303/how-to-access-cabal-setup-hs-information-from-within-my-haskell-source-files/48628304#48628304", "title": "How to access cabal/Setup.hs information from within my Haskell source files?", "body": "<p>It seems Cabal and ghc have no out-of-the-box functionality from you to learn your <code>dist/</code> directory or similar info. Here are some approaches to do it manually:</p>\n\n<h1>Solution 1: Serialising the entire Cabal information into a known place</h1>\n\n<p>One solution is shown by the <a href=\"https://hackage.haskell.org/package/cabal-toolkit-0.0.4/docs/Distribution-Simple-Toolkit.html\" rel=\"nofollow noreferrer\">cabal-toolkit</a> library.</p>\n\n<p>It gives you a hook modifier <code>userHooksWithBuildInfo :: UserHooks -&gt; UserHooks</code> that you call in your <code>Setup.hs</code>, which serialises the <code>LocalBuildInfo</code> (which includes all important Cabal-level information, including <code>ConfigFlags{ configDistPref }</code>) into a dotfile (called <code>.lbi.buildinfo</code>) in the source directory.</p>\n\n<p>It then provides a TemplateHaskell function <code>localBuildInfoTypedQ :: Q (TExp LocalBuildInfo)</code> which reads that file so that you can load the information in TH.</p>\n\n<p>(I the Hackage version I linked above probably lacks an <code>addDependentFile</code> call <a href=\"https://github.com/TerrorJack/cabal-toolkit/blob/513b634528611bba1516a332170825ec906a9dfc/src/Distribution/Simple/Toolkit.hs#L83\" rel=\"nofollow noreferrer\">here</a> to notice when the serialised info changes, but the Github version already has a <a href=\"https://github.com/TerrorJack/cabal-toolkit/commit/fbffa0ac529747a390f9447a8b33c0571c331c73\" rel=\"nofollow noreferrer\">fix</a> for it).</p>\n\n<hr>\n\n<p>However, if you'd like temp files like this to end up in the <code>dist/</code> directory, this also doesn't help (since as mentioned, the dotfile is in the toplevel of your project and you should add it e.g. to <code>.gitignore</code>).</p>\n\n<h1>Solution 2: Passing specific information to GHC using <code>-D</code> flags</h1>\n\n<p>Via a <a href=\"https://www.haskell.org/cabal/release/cabal-2.0.1.1/doc/API/Cabal/Distribution-Simple.html#g:2\" rel=\"nofollow noreferrer\"><code>confHook</code></a>, that calls cabal configure with <code>\"-ghc-options=-D__CPP_CABAL_DIST_DIR__=\" ++ configDistPref</code>. Example for your <code>Setup.hs</code> file:</p>\n\n<pre><code>main = do\n  defaultMainWithHooks $\n    simpleUserHooks\n      { confHook = \\inputs configFlags@ConfigFlags{ configDistPref = configDistPref } -&gt; do\n          putStrLn \"In Cabal configure hook\"\n\n          let distDir = fromFlagOrDefault \"dist\" configDistPref\n\n          (confHook simpleUserHooks) inputs (configFlags{ configProgramArgs = (\"ghc\", [\"-D__CPP_CABAL_DIST_DIR__=\" ++ distDir]) : configProgramArgs configFlags })\n      }\n</code></pre>\n\n<p>Then the only difficulty is to actually splice the <code>__CPP_CABAL_DIST_DIR__</code> macro into the code because you can't write <code>\"__CPP_CABAL_DIST_DIR__\"</code> in a Haskell String literal, that won't get substituted by CPP, so you have to use a string quasiquoter like <a href=\"https://hackage.haskell.org/package/raw-strings-qq-1.1/docs/Text-RawString-QQ.html\" rel=\"nofollow noreferrer\">this one</a>, e.g. <code>[r|__CPP_CABAL_DIST_DIR__]</code> just to get that macro in; the usual way of doing CPP <a href=\"https://gcc.gnu.org/onlinedocs/gcc-3.4.4/cpp/Stringification.html\" rel=\"nofollow noreferrer\">stringification</a> with <code>#__CPP_CABAL_DIST_DIR__</code> doesn't work in ghc's CPP, as explained <a href=\"https://guide.aelve.com/haskell/cpp-vww0qd72\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<blockquote>\n  <p>There are three main reasons why code with CPP might not work as expected:</p>\n  \n  <p>You used <code>#</code>, <code>##</code> or <code>__VA_ARGS__</code>. GHC runs CPP in traditional mode, which disables all advanced features.</p>\n</blockquote>\n\n<h1>Solution 3: Passing specific information by generating a Haskell module with a preprocessor</h1>\n\n<p>You can add a <code>hookedPreProcessors</code> to your hooks in <code>Setup.hs</code>. In this hook you render as Haskell literals or strings any information from Cabal that you want to access.</p>\n\n<p>An example on how to write a preprocessor can be found <a href=\"https://hackage.haskell.org/package/Cabal-2.0.1.0/docs/Distribution-Simple-PreProcess.html#t:PreProcessor\" rel=\"nofollow noreferrer\">here</a> in the Cabal documentation, or even clearer, in <a href=\"https://stackoverflow.com/a/16261412/263061\">this answer</a>.</p>\n\n<p>Don't forget to add the module to be generated by your pre-processor to the <code>exposed-modules</code> or <code>other-modules</code> in your <code>.cabal</code> file, and put a file matching the preprocessor extension into your project, otherwise the preprocessor will not create the <code>.hs</code> file.</p>\n\n<hr>\n\n<p>For my own use cases, I'm using <strong>Solution 3</strong> because it is clean, doesn't need any CPP or TemplateHaskell magic, gives good error messages and does not require the equivalent of <code>runhaskell Setup.hs configure</code> to run, <code>build</code> is enough because preprocessors are run at build time.</p>\n"}], "owner": {"reputation": 21995, "user_id": 263061, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/7c724c96f7ec19f73245499b6169e329?s=128&d=identicon&r=PG", "display_name": "nh2", "link": "https://stackoverflow.com/users/263061/nh2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 48628304, "answer_count": 1, "score": 2, "last_activity_date": 1517937137, "creation_date": 1517852165, "question_id": 48628303, "link": "https://stackoverflow.com/questions/48628303/how-to-access-cabal-setup-hs-information-from-within-my-haskell-source-files", "title": "How to access cabal/Setup.hs information from within my Haskell source files?", "body": "<p>I need to use some <code>Cabal</code>-level information from within my Haskell <code>.hs</code> source files.</p>\n\n<p>For example, obtaining the path to the <code>dist/</code> build directory (<a href=\"https://hackage.haskell.org/package/Cabal-2.0.1.0/docs/Distribution-Simple-Setup.html#t:ConfigFlags\" rel=\"nofollow noreferrer\"><code>configDistPref</code></a>; I don't want to hardcode <code>dist/</code>), so that I can look up some contents in it using <code>runIO</code> in <code>TemplateHaskell</code>.</p>\n\n<p>From normal Haskell files, I don't seem to be able to access <code>Cabal</code>-level information.</p>\n\n<p>What ways are there for me to bring that information from a custom <code>Setup.hs</code> file into my Haskell source files?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": true, "score": 19, "last_activity_date": 1517856326, "creation_date": 1517856326, "answer_id": 48629420, "question_id": 48627923, "link": "https://stackoverflow.com/questions/48627923/haskell-stack-commands-for-uninstall-clean-up/48629420#48629420", "title": "haskell `stack` commands for uninstall/clean up?", "body": "<p><code>stack clean</code> command clears local cache in <code>.stack-work</code>.</p>\n\n<p>The feature for cleaning <code>.stack</code> cache is not implemented yet. See this GitHub issue:</p>\n\n<ul>\n<li><a href=\"https://github.com/commercialhaskell/stack/issues/133\" rel=\"noreferrer\">https://github.com/commercialhaskell/stack/issues/133</a></li>\n</ul>\n\n<p><code>stack setup</code> installs GHC for project but it stores GHC globally (so you don't need to install GHC again for another project if this project uses same version of GHC).</p>\n\n<p>You can just do <code>rm -rf .stack-work</code> to clean project local build cache (built modules, github dependencies for project, etc.). Though, <code>rm -rf .stack-work</code> won't work for multipackage project. Just do <code>stack clean --full</code> to clear local cache completely for project.</p>\n\n<p>To clean global cache, you can just do <code>rm -rf ~/.stack</code>.</p>\n\n<p>Thus, again, citing latest comment from issue discussion:</p>\n\n<blockquote>\n  <p>The garbage collection question definitely needs to be answered in some form or another. If possible, I think I might find a documentation solution preferable to a new command. It would be great if the manual discussed the directory structure of <code>~/.stack</code> and explained what directories were safe to delete.</p>\n</blockquote>\n"}], "owner": {"reputation": 179, "user_id": 799521, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/WlSxW.png?s=128&g=1", "display_name": "l\u016bc\u0113te cels\u0113", "link": "https://stackoverflow.com/users/799521/l%c5%abc%c4%93te-cels%c4%93"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4527, "favorite_count": 0, "accepted_answer_id": 48629420, "answer_count": 1, "score": 11, "last_activity_date": 1517856326, "creation_date": 1517850783, "last_edit_date": 1517851944, "question_id": 48627923, "link": "https://stackoverflow.com/questions/48627923/haskell-stack-commands-for-uninstall-clean-up", "title": "haskell `stack` commands for uninstall/clean up?", "body": "<p><code>stack setup</code> download and installs GHC for project,  </p>\n\n<blockquote>\n  <p><code>~/.stack/programs</code>,<br>\n  <code>~/.stack/snapshots</code>\n  and somewhere else which I don't know yet)  </p>\n  \n  <p><code>stack build</code> downloads dependencies and build them.<br>\n  <code>~/.stack/setup-exe-cache</code> and somewhere else.</p>\n</blockquote>\n\n<p>I want to clean up project-wide ghc and downloaded dependencies/build output from them, plus all the other project related things on my disk.</p>\n\n<p>There's no way to do this other than just manually delete them?</p>\n"}, {"tags": ["haskell", "memoization"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1517838705, "post_id": 48622076, "comment_id": 84244777, "body": "It&#39;s kinda neat! <code>g</code> is a closure, containing thunks for <code>f Z</code> and <code>memo (f . S)</code>, which is itself a version of <code>g</code> for a different <code>f</code>. So you end up with a list-shaped chain of closures, each containing a thunk for <code>f n</code>."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1517853312, "post_id": 48622076, "comment_id": 84254006, "body": "I think you can ignore the commented-out code.  It doesn&#39;t appear to match the definition of <code>memo</code> given, since if you try to type <code>g (f Z)</code>, you&#39;ll discover it has type <code>Nat</code> and so can&#39;t be applied to the argument <code>(memo (f . S))</code>.  Maybe it refers to an older version of <code>memo</code>, or maybe the author was just &quot;thinking out loud&quot; and left the comment laying around."}], "answers": [{"comments": [{"owner": {"reputation": 1973, "user_id": 1716999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06a58106c9a1013f1ca791c46579d664?s=128&d=identicon&r=PG", "display_name": "rubystallion", "link": "https://stackoverflow.com/users/1716999/rubystallion"}, "edited": false, "score": 0, "creation_date": 1517879869, "post_id": 48625651, "comment_id": 84265068, "body": "Very interesting to see how much thought went into such a short, simple-looking function! In contrast to some other memoization functions, this one indeed also works with normal integers like in your examples instead of only with lazy Nats, etc."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 7, "last_activity_date": 1517857730, "last_edit_date": 1517857730, "creation_date": 1517843781, "answer_id": 48625651, "question_id": 48622076, "link": "https://stackoverflow.com/questions/48622076/how-does-this-short-memoization-function-in-the-ghc-test-suite-work/48625651#48625651", "title": "How does this short memoization function in the GHC test suite work?", "body": "<p>This is quite tricky to explain. I'll start with a simpler example.</p>\n\n<p>One has to keep in mind the difference between</p>\n\n<pre><code>\\x -&gt; let fz = f 0 in if x==0 then fz else f x\nlet fz = f 0 in \\x -&gt; if x==0 then fz else f x\n</code></pre>\n\n<p>Both compute the same function. However, the former will always (re)compute <code>f 0</code> when called with argument <code>0</code>. Instead, the latter will compute <code>f 0</code> only the first time it is called with argument <code>0</code> -- when that happens, <code>fz</code> is evaluated, and the result stored there forever, so that it can be reused again the next time <code>fz</code> is needed.</p>\n\n<p>This is not too different from</p>\n\n<pre><code>f 0 + f 0\nlet fz = f 0 in fz + fz\n</code></pre>\n\n<p>where the latter will call <code>f 0</code> only once, since the second time <code>fz</code> will be already evaluated.</p>\n\n<p>So, we could achieve a light memoization of <code>f</code>, storing only <code>f 0</code> as follows:</p>\n\n<pre><code>g = let fz = f 0 in \\x -&gt; if x==0 then fz else f x\n</code></pre>\n\n<p>Equivalently:</p>\n\n<pre><code>g = \\x -&gt; if x==0 then fz else f x\n   where\n   fz = f 0       \n</code></pre>\n\n<p>Note that here we can not bring <code>\\x -&gt;</code> on the left of <code>=</code>, or we lose memoization!</p>\n\n<p>Equivalently:</p>\n\n<pre><code>g = g' \n   where\n   fz = f 0       \n   g' = \\x -&gt; if x==0 then fz else f x\n</code></pre>\n\n<p>Now we can bring <code>\\x -&gt;</code> on the left without any problem.</p>\n\n<p>Equivalently:</p>\n\n<pre><code>g = g' \n   where\n   fz = f 0       \n   g' x = if x==0 then fz else f x\n</code></pre>\n\n<p>Equivalently:</p>\n\n<pre><code>g = g' \n   where\n   fz = f 0       \n   g' 0 = fz\n   g' x = f x\n</code></pre>\n\n<p>Now, this only memoizes <code>f 0</code> instead of every <code>f n</code>. Indeed, computing <code>g 4</code> twice will cause <code>f 4</code> to be computed twice.</p>\n\n<p>To avoid this, we can start making <code>g</code> to work on any function <code>f</code> instead of a fixed one:</p>\n\n<pre><code>g f = g'    -- f is now a parameter\n   where\n   fz = f 0       \n   g' 0 = fz\n   g' x = f x\n</code></pre>\n\n<p>Now, we exploit that:</p>\n\n<pre><code>-- for any f, x\ng f x = f x\n-- hence, in particular\ng (f . succ) (pred x) = (f . succ) (pred x) = f (succ (pred x)) = f x\n</code></pre>\n\n<p>So, <code>g (f . succ) (pred x)</code> is a complicated way of writing <code>f x</code>. As usual, <code>g</code> memoizes the function at zero. However this is <code>(f . succ) 0 = f 1</code>. In this way, we obtained memoization at <code>1</code>, instead!</p>\n\n<p>Hence, we can recurse</p>\n\n<pre><code>g f = g'    -- f is now a parameter\n   where\n   fz = f 0       \n   g' 0 = fz\n   g' x = g (f . succ) (pred x)\n</code></pre>\n\n<p>If called with <code>0</code>, this uses <code>fz</code> to store <code>f 0</code>, memoizing it.</p>\n\n<p>If called with <code>1</code>, this will invoke <code>g (f . succ)</code> which will allocate another <code>fz</code> for the <code>1</code> case.\nThis looks good, but that <code>fz</code> won't last for long, since it will be reallocated every time <code>g' x</code> is called, negating the memoization.</p>\n\n<p>To fix this issue, we use another variable, so that <code>g (f . succ)</code> will be computed only once, at most.</p>\n\n<pre><code>g f = g'    -- f is now a parameter\n   where\n   fz = f 0       \n   fs = g (f . succ)\n   g' 0 = fz\n   g' x = fs (pred x)\n</code></pre>\n\n<p>Here, <code>fs</code> is evaluated at most once, and will cause the allocation of another <code>fz</code> for the <code>1</code> case. This <code>fz</code> now won't disappear.</p>\n\n<p>Recursively, one can be convinced that now all the values <code>f n</code> are memoized.</p>\n"}], "owner": {"reputation": 1973, "user_id": 1716999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06a58106c9a1013f1ca791c46579d664?s=128&d=identicon&r=PG", "display_name": "rubystallion", "link": "https://stackoverflow.com/users/1716999/rubystallion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 2, "accepted_answer_id": 48625651, "answer_count": 1, "score": 11, "last_activity_date": 1517857730, "creation_date": 1517831782, "question_id": 48622076, "link": "https://stackoverflow.com/questions/48622076/how-does-this-short-memoization-function-in-the-ghc-test-suite-work", "title": "How does this short memoization function in the GHC test suite work?", "body": "<p><a href=\"https://github.com/ryantm/ghc/blob/master/testsuite/tests/simplCore/should_run/simplrun005.hs\" rel=\"noreferrer\">Here</a> is the complete runnable code for the following memoization function:</p>\n\n<pre><code>memo f = g\n  where\n    fz = f Z\n    fs = memo (f . S) \n    g  Z    = fz\n    g (S n) = fs n\n    -- It is a BAD BUG to inline 'fs' inside g\n    -- and that happened in 6.4.1, resulting in exponential behaviour\n\n-- memo f = g (f Z) (memo (f . S))\n--        = g (f Z) (g (f (S Z)) (memo (f . S . S)))\n--        = g (f Z) (g (f (S Z)) (g (f (S (S Z))) (memo (f . S . S . S))))\n\nfib' :: Nat -&gt; Integer\nfib'             =  memo fib\n  where\n  fib Z          =  0\n  fib (S Z)      =  1\n  fib (S (S n)) = fib' (S n) + fib' n\n</code></pre>\n\n<p>I tried to figure it out with expansion of the terms by hand, but that expansion looks just like the slow, unmemoized function. How does it work? And how is the commented out code derived?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1517829990, "post_id": 48620995, "comment_id": 84239433, "body": "Why wouldn&#39;t Haskell allow that?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1517837377, "post_id": 48620995, "comment_id": 84243938, "body": "Why would you write <code>f1</code> in terms of either <code>g</code> function if having a <code>G</code> instances is not a requirement to have an <code>F</code> instance? Just define <code>f1</code> and <code>f2</code> in terms of each other, and ignore the fact that <code>f</code> <i>could</i> be defined in terms of the <code>g</code>s; that&#39;s more of a coincidence than a useful fact."}], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1517852076, "post_id": 48622235, "comment_id": 84253316, "body": "OverlappingInstances is deprecated in favor of per-instance OVERLAPPING, OVERLAPPABLE, and OVERLAPS annotations."}, {"owner": {"reputation": 1790, "user_id": 3350784, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OTuvN.png?s=128&g=1", "display_name": "Yuuri", "link": "https://stackoverflow.com/users/3350784/yuuri"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1517931181, "post_id": 48622235, "comment_id": 84290383, "body": "@HTNW Thanks, I have not known about that."}], "tags": [], "owner": {"reputation": 1790, "user_id": 3350784, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OTuvN.png?s=128&g=1", "display_name": "Yuuri", "link": "https://stackoverflow.com/users/3350784/yuuri"}, "is_accepted": false, "score": 1, "last_activity_date": 1517833459, "last_edit_date": 1517833459, "creation_date": 1517832402, "answer_id": 48622235, "question_id": 48620995, "link": "https://stackoverflow.com/questions/48620995/dual-default-methods/48622235#48622235", "title": "Dual default methods", "body": "<p>If I get the requirements right, they can be straightforwardly satisfied with a couple of extensions:</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances, UndecidableInstances, OverlappingInstances #-}\n\nclass F t where\n  f1 :: t -&gt; t -&gt; t\n  f1 _ = f2\n  f2 :: t -&gt; t\n  f2 x = f1 x x\n\nclass F t =&gt; G t where\n  g1 :: t -&gt; t -&gt; t\n  g1 x _ = g2 x\n  g2 :: t -&gt; t\n  g2 x = g1 x x\n\ninstance G t =&gt; F t where\n  f1 = flip g1\n  f2 = g2\n\ninstance F Int where\n  f1 = (-)\n\nmain = mapM_ print ([f1 4 2, f2 4] :: [Int])\n\n*Main&gt; :main\n2\n0\n</code></pre>\n\n<p>The <code>instance</code> can be changed to <code>G</code>:</p>\n\n<pre><code>instance G Int where\n  g1 = subtract\n\nmain = mapM_ print ([f1 4 2, f2 4, g1 4 2, g2 4] :: [Int])\n\n*Main&gt; :main\n2\n0\n-2\n0\n</code></pre>\n\n<p>However, I'd consider this solution poor. Could this duality be expressed in some other way? If you provide a concrete example of what <code>F</code> and <code>G</code> are, a more suitable design may be found.</p>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 0, "last_activity_date": 1517849785, "creation_date": 1517849785, "answer_id": 48627616, "question_id": 48620995, "link": "https://stackoverflow.com/questions/48620995/dual-default-methods/48627616#48627616", "title": "Dual default methods", "body": "<p>A fairly common idiom for defining subclass methods in terms of the superclass (or is it superclass methods in terms of the subclass? I can never keep it straight) is to expose an explicit <code>*Default</code> method, as in</p>\n\n<pre><code>class F t where\n    {-# MINIMAL f1 | f2 #-}\n    f1 = ... f2 ...\n    f2 = ... f1 ...\n\nf1Default :: G t =&gt; ...\nf1Default = ... g1 ...\n\nf2Default :: G t =&gt; ...\nf2Default = ... g2 ...\n\nclass G t where\n    {-# MINIMAL g1 | g2 #-}\n    g1 = ... g2 ...\n    g2 = ... g1 ...\n</code></pre>\n\n<p>This gives the instance-writer control over which default is used.</p>\n\n<p>There are many examples of this pattern in base, including <code>fmapDefault</code>, <code>foldMapDefault</code>, <code>bimapDefault</code>, <code>bifoldMapDefault</code>, and <a href=\"http://hoogle.haskell.org/?hoogle=Default%20&amp;scope=package%3Abase\" rel=\"nofollow noreferrer\">many more</a>, and I expect there are a fair number of examples of this outside base as well.</p>\n"}], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1517849785, "creation_date": 1517828176, "question_id": 48620995, "link": "https://stackoverflow.com/questions/48620995/dual-default-methods", "title": "Dual default methods", "body": "<p>Consider the following classes:</p>\n\n<pre><code>class F t where\n  f1 :: ...\n  f2 :: ...\n\nclass F t =&gt; G t where\n  g1 :: ...\n  g2 :: ...\n</code></pre>\n\n<p>Also I can write the following default functions:</p>\n\n<ol>\n<li><code>f1</code> in terms of <code>f2</code>.</li>\n<li><code>f2</code> in terms of <code>f1</code>.</li>\n<li><code>g1</code> in terms of <code>g2</code>.</li>\n<li><code>g2</code> in terms of <code>g1</code>.</li>\n<li><code>f1</code> in terms of <code>g1</code>, if <code>G t</code>.</li>\n<li><code>f2</code> in terms of <code>g2</code>, if <code>G t</code>.</li>\n</ol>\n\n<p>Hence, I should be able to do the following:</p>\n\n<pre><code>instance F T1 where\n  f1 x = (some function of f2)\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>instance F T1\ninstance G T1 where\n  g1 x = (some function of g2)\n</code></pre>\n\n<p>But it seems the only way I can achieve this is to have two default definitions of <code>f1</code> and <code>f2</code>, but I don't think GHC allows this. Is there anyway I can write this so that for both types that are only of class <code>F</code>, and types that are also of class <code>G</code>, only have to implement one function?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 431, "user_id": 3042847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20812bf59589551344aeae214de49f6a?s=128&d=identicon&r=PG&f=1", "display_name": "xgrommx", "link": "https://stackoverflow.com/users/3042847/xgrommx"}, "edited": false, "score": 0, "creation_date": 1517904126, "post_id": 48631275, "comment_id": 84272520, "body": "More general for HFix we can use HBase (as alternative of high ordered version of Base of recursion schemes of Kmett) <a href=\"https://gist.github.com/xgrommx/4c72ae9d407214deab55fe9aebc08b45\" rel=\"nofollow noreferrer\">gist.github.com/xgrommx/4c72ae9d407214deab55fe9aebc08b45</a>"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 2, "last_activity_date": 1517863943, "creation_date": 1517863943, "answer_id": 48631275, "question_id": 48619450, "link": "https://stackoverflow.com/questions/48619450/shortcut-fusion-for-triemaps/48631275#48631275", "title": "Shortcut fusion for triemaps", "body": "<p>The paper appears to draw a parallel between <code>ExpoNat a</code> as a recursive <code>Type</code> and <code>Tree</code> as a recursive type constructor (<code>Type -&gt; Type</code>).</p>\n\n<pre><code>newtype  Fix f   =  Fix (f ( Fix f))\nnewtype HFix h a = HFix (h (HFix h) a)\n</code></pre>\n\n<p><code>Fix f</code> represents the least fixed point of the endofunctor on the category of types and functions, <code>f :: Type -&gt; Type</code>; <code>HFix h</code> represents the least fixed point of the endofunctor <code>h</code> on a category of functors and natural transformations, <code>h :: (Type -&gt; Type) -&gt; (Type -&gt; Type)</code>.</p>\n\n<pre><code>-- x ~ Fix (ExpoNatF a) ~ ExpoNat\ndata ExpoNatF a x = ExpoNatF (Maybe a) x | NoExpoNatF\n\nfmap :: (x -&gt; y) -&gt; ExpoNatF a x -&gt; ExpoNatF a y\nfmap f (ExpoNatF u v) = ExpoNatF u (f v)\nfmap _ NoExpoNatF = NoExpoNatF\n\n\n-- f ~ HFix TreeMapH ~ TreeMap\ndata TreeMapH f a = TreeMapH (Maybe a) (f (f a)) | EmptyTreeMapH\n\nhfmap :: (f ~&gt; g) -&gt; (TreeMapH f ~&gt; TreeMapH g)\nhfmap f (TreeMapH u v) = TreeMapH u ((fmap . fmap) f v)\nhfmap _ EmptyTreeMapH = EmptyTreeMapH\n\n\n-- (~&gt;) is the type of natural transformations\ntype f ~&gt; g = forall a. f a -&gt; g a\n</code></pre>\n\n<ul>\n<li><p>Endofunctors give rise to algebras.</p>\n\n<pre><code>type  Alg f a = f a -&gt; a\ntype HAlg h f = h f ~&gt; f\n</code></pre></li>\n<li><p><code>fold</code>, or <code>cata</code> maps any algebra to a morphism (function|natural transformation).</p>\n\n<pre><code> cata ::  Alg f a -&gt;   Fix f -&gt; a\nhcata :: HAlg h f -&gt; (HFix h ~&gt; h)\n</code></pre></li>\n<li><p><code>build</code> constructs a value from its Church encoding.</p>\n\n<pre><code>type  Church f = forall a.  Alg f a -&gt; a\ntype HChurch h = forall f. HAlg h f ~&gt; f\n\n build ::  Church f -&gt;  Fix f\nhbuild :: HChurch h -&gt; HFix h a\n\n-- The paper actually has a slightly different type for Church encodings, derived from the categorical view, but I'm pretty sure they're equivalent\n</code></pre></li>\n<li><p><code>build/fold</code> fusion is summarized by one equation.</p>\n\n<pre><code> cata alg ( build f) = f alg\nhcata alg (hbuild f) = f alg\n</code></pre></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 25181, "user_id": 23845, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/434aee9ad675384a9e745c7217ac4abe?s=128&d=identicon&r=PG", "display_name": "Edward Z. Yang", "link": "https://stackoverflow.com/users/23845/edward-z-yang"}, "is_accepted": false, "score": 3, "last_activity_date": 1517895079, "creation_date": 1517895079, "answer_id": 48636074, "question_id": 48619450, "link": "https://stackoverflow.com/questions/48619450/shortcut-fusion-for-triemaps/48636074#48636074", "title": "Shortcut fusion for triemaps", "body": "<p>I worked on it some more and I now have working fusion, without using the generic gadgets from the paper.</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE PolyKinds #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE DeriveFunctor #-}\n{-# LANGUAGE DeriveFoldable #-}\n{-# LANGUAGE DeriveTraversable #-}\nmodule Tree where\n\ndata Tree = Leaf | Node Tree Tree\n  deriving (Show)\n\ndata ExpoTree a = ExpoTree (Maybe a) (ExpoTree (ExpoTree a))\n                | NoExpoTree\n  deriving (Show, Functor)\n</code></pre>\n\n<p>I derived most of the specialized types by taking the generic construction and then inlining type definitions until I bottomed out.  I've kept the generic construction in here for ease of comparison.</p>\n\n<pre><code>data HExpoTree f a = HExpoTree (Maybe a) (f (f a))\n                   | HNoExpoTree\n\ntype g ~&gt; h = forall a. g a -&gt; h a\n\nclass HFunctor f where\n  ffmap :: Functor g =&gt; (a -&gt; b) -&gt; f g a -&gt; f g b\n  hfmap :: (Functor g, Functor h) =&gt; (g ~&gt; h) -&gt; (f g ~&gt; f h)\n\ninstance HFunctor HExpoTree where\n  ffmap f HNoExpoTree = HNoExpoTree\n  ffmap f (HExpoTree x y) = HExpoTree (fmap f x) (fmap (fmap f) y)\n  hfmap f HNoExpoTree = HNoExpoTree\n  hfmap f (HExpoTree x y) = HExpoTree x (f (fmap f y))\n\ntype Alg f g = f g ~&gt; g\n\nnewtype Mu f a = In { unIn :: f (Mu f) a }\n\ninstance HFunctor f =&gt; Functor (Mu f) where\n  fmap f (In r) = In (ffmap f r)\n\nhfold :: (HFunctor f, Functor g) =&gt; Alg f g -&gt; (Mu f ~&gt; g)\nhfold m (In u) = m (hfmap (hfold m) u)\n</code></pre>\n\n<p>An <code>Alg ExpoTreeH g</code> can be decomposed into a product of two natural transformations:</p>\n\n<pre><code>type ExpoTreeAlg g = forall a. Maybe a -&gt; g (g a) -&gt; g a\ntype NoExpoTreeAlg g = forall a. g a\n\n{-# NOINLINE fold #-}\nfold :: Functor g =&gt; ExpoTreeAlg g -&gt; NoExpoTreeAlg g -&gt; ExpoTree a -&gt; g a\nfold f z NoExpoTree = z\nfold f z (ExpoTree x y) = f x (fold f z (fmap (fold f z) y))\n</code></pre>\n\n<p>The natural transformation here <code>c ~&gt; x</code> is very interesting, and turns out to be quite necessary.  Here's the build translation:</p>\n\n<pre><code>hbuild :: HFunctor f =&gt; (forall x. Alg f x -&gt; (c ~&gt; x)) -&gt; (c ~&gt; Mu f)\nhbuild g = g In\n\nnewtype I :: (* -&gt; *) where\n  I :: x -&gt; I x\n  deriving (Show, Eq, Functor, Foldable, Traversable)\n\n-- Needs to be a newtype, otherwise RULE firer gets bamboozled\nnewtype ExpoTreeBuilder c = ETP {runETP :: (forall x. Functor x\n                                        =&gt; (forall a. Maybe a -&gt; x (x a) -&gt; x a)\n                                        -&gt; (forall a. x a)\n                                        -&gt; (forall a. c a -&gt; x a)\n                                            )}\n\n{-# NOINLINE build #-}\nbuild :: ExpoTreeBuilder c -&gt; forall a. c a -&gt; ExpoTree a\nbuild g = runETP g ExpoTree NoExpoTree\n</code></pre>\n\n<p>The newtype for the builder function is needed, because GHC 8.0 doesn't know how to fire the RULE without.</p>\n\n<p>Now, the shortcut fusion rule:</p>\n\n<pre><code>{-# RULES \"ExpoTree fold/build\"\n          forall (g :: ExpoTreeBuilder c) c (f :: ExpoTreeAlg g) (n :: NoExpoTreeAlg g).\n          fold f n (build g c) = runETP g f n c #-}\n</code></pre>\n\n<p>Implementation of 'match' with 'build':</p>\n\n<pre><code>{-# INLINE match #-}\nmatch :: Tree -&gt; ExpoTree ()\nmatch n = build (match_mk n) (I ())\n  where\n    match_mk :: Tree -&gt; ExpoTreeBuilder I\n    match_mk Leaf = ETP $ \\ f z (I c) -&gt; f (Just c) z\n    match_mk (Node x y) = ETP $ \\ f z c -&gt;\n      -- NB: This fmap is bad for performance\n      f Nothing (fmap (const (runETP (match_mk y) f z c)) (runETP (match_mk x) f z c))\n</code></pre>\n\n<p>Implementation of 'appl' with 'fold' (we need to define a custom functor to define the return type.)</p>\n\n<pre><code>newtype PFunTree a = PFunTree { runPFunTree :: Tree -&gt; Maybe a }\n  deriving (Functor)\n\n{-# INLINE appl #-}\nappl :: ExpoTree a -&gt; PFunTree a\nappl = fold appl_expoTree appl_noExpoTree\n  where\n    appl_expoTree :: ExpoTreeAlg PFunTree\n    appl_expoTree = \\z f -&gt; PFunTree $ \\n -&gt;\n                case n of Leaf       -&gt; z\n                          Node n1 n2 -&gt; runPFunTree f n1 &gt;&gt;= flip runPFunTree n2\n    appl_noExpoTree :: NoExpoTreeAlg PFunTree\n    appl_noExpoTree = PFunTree $ \\n -&gt; Nothing\n</code></pre>\n\n<p>Putting it all together:</p>\n\n<pre><code>applmatch :: Tree -&gt; Tree -&gt; Maybe ()\napplmatch x = runPFunTree (appl (match x))\n</code></pre>\n\n<p>We can once again inspect the core with <code>-ddump-simpl</code>. Unfortunately, while we have successfully fused away the <code>TrieMap</code> data structure, we are left with suboptimal code due to the <code>fmap</code> in <code>match</code>. Eliminating this inefficiency is left to future work.</p>\n"}], "owner": {"reputation": 25181, "user_id": 23845, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/434aee9ad675384a9e745c7217ac4abe?s=128&d=identicon&r=PG", "display_name": "Edward Z. Yang", "link": "https://stackoverflow.com/users/23845/edward-z-yang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 2, "answer_count": 2, "score": 4, "last_activity_date": 1517895079, "creation_date": 1517823383, "question_id": 48619450, "link": "https://stackoverflow.com/questions/48619450/shortcut-fusion-for-triemaps", "title": "Shortcut fusion for triemaps", "body": "<p>This problem arose when attempting to fuse away intermediate triemaps in Haskell.</p>\n\n<p>Consider the trie for Peano natural numbers:</p>\n\n<pre><code>data Nat = Zero | Succ Nat\n\ndata ExpoNat a = ExpoNat (Maybe a) (ExpoNat a)\n               | NoExpoNat\n</code></pre>\n\n<p>We can easily define a fold on <code>ExpoNat</code> (it is essentially a list) and use <a href=\"https://wiki.haskell.org/Correctness_of_short_cut_fusion#foldr.2Fbuild_2\" rel=\"noreferrer\">foldr/build</a> (a.k.a. <a href=\"http://okmij.org/ftp/tagless-final/index.html\" rel=\"noreferrer\">finally tagless</a>) to fuse away intermediate occurrencess of <code>ExpoNat</code>:</p>\n\n<pre><code>{-# NOINLINE fold #-}\nfold :: (Maybe a -&gt; b -&gt; b) -&gt; b -&gt; ExpoNat a -&gt; b\nfold f z (ExpoNat x y) = f x (fold f z y)\nfold f z NoExpoNat = z\n\n{-# NOINLINE build #-}\nbuild :: (forall b. (Maybe a -&gt; b -&gt; b) -&gt; b -&gt; b) -&gt; ExpoNat a\nbuild f = f ExpoNat NoExpoNat\n\n{-# RULES \"fold/build\" forall f n (g :: forall b. (Maybe a -&gt; b -&gt; b) -&gt; b -&gt; b). fold f n (build g) = g f n #-}\n</code></pre>\n\n<p>As an example, we take <code>match</code> and <code>appl</code> from \"<a href=\"https://stackoverflow.com/questions/45204600/is-there-a-way-to-generalize-this-triemap-code\">Is there a way to generalize this TrieMap code?</a>\" and compose them such that <code>ExpoNat</code> is fused away. (Note that we must \"strengthen the induction hypothesis\" in <code>appl</code>.)</p>\n\n<pre><code>{-# INLINE match #-}\nmatch :: Nat -&gt; ExpoNat ()\nmatch n = build $ \\f z -&gt;\n  let go Zero = f (Just ()) z\n      go (Succ n) = f Nothing (go n)\n  in go n\n\n{-# INLINE appl #-}\nappl :: ExpoNat a -&gt; (Nat -&gt; Maybe a)\nappl\n  = fold (\\f z -&gt; \\n -&gt;\n            case n of Zero    -&gt; f\n                      Succ n' -&gt; z n')\n         (\\n -&gt; Nothing)\n\napplmatch :: Nat -&gt; Nat -&gt; Maybe ()\napplmatch x = appl (match x)\n</code></pre>\n\n<p>The fusion can be verified by inspecting Core with <code>-ddump-simpl</code>.</p>\n\n<p>Now we would like to do the same for <code>Tree</code>.</p>\n\n<pre><code>data Tree = Leaf | Node Tree Tree\n\ndata TreeMap a\n  = TreeMap {\n        tm_leaf :: Maybe a,\n        tm_node :: TreeMap (TreeMap a)\n    }\n  | EmptyTreeMap\n</code></pre>\n\n<p>We are in trouble: <code>TreeMap</code> is a non-regular data type, and so it is not obvious how to write its corresponding fold/build pair.</p>\n\n<p><a href=\"https://pdfs.semanticscholar.org/3cb7/d5c74497fc23d813de4d121c0796eb82962b.pdf\" rel=\"noreferrer\">Haskell Programming with Nested Types: A Principled Approach</a> seems to have the answer (see the <code>Bush</code> type) but 4:30 AM seems to be too late for me to get it working.  How is one supposed to write <code>hfmap</code>?  Have there been further developments since?</p>\n\n<p>A similar variant of this question has been asked in <a href=\"https://stackoverflow.com/questions/30810090/whats-the-type-of-a-catamorphism-fold-for-non-regular-recursive-types\">What&#39;s the type of a catamorphism (fold) for non-regular recursive types?</a></p>\n"}, {"tags": ["haskell", "covariance"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517822489, "post_id": 48619201, "comment_id": 84234886, "body": "Well you pass a function <code>a -&gt; b</code>, so you first convert the input by channeling it through <code>f</code>."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517822891, "post_id": 48619201, "comment_id": 84235131, "body": "The <code>a</code> becomes to <code>b</code> right, I mean <code>h . f = ( a -&gt; b ) -&gt; IO ()</code>, after the application of <code>f</code>."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1517823020, "post_id": 48619201, "comment_id": 84235227, "body": "It doesn&#39;t consume an int. The expression <code>f int</code> is not an <code>Int</code>. It has the type <code>IO ()</code>."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1517823776, "post_id": 48619201, "comment_id": 84235701, "body": "But <code>f</code> consumes <code>Int</code> right?"}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1517824006, "post_id": 48619201, "comment_id": 84235844, "body": "Yes, <code>f</code> consumes an <code>Int</code> but <code>supplyRandom</code> doesn&#39;t. The function <code>f</code> consumes the <code>Int</code> that <code>supplyRandom</code> produces."}], "answers": [{"tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 2, "last_activity_date": 1517827451, "last_edit_date": 1517827451, "creation_date": 1517826832, "answer_id": 48620564, "question_id": 48619201, "link": "https://stackoverflow.com/questions/48619201/why-is-the-functor-implementation-possible/48620564#48620564", "title": "Why is the functor implementation possible?", "body": "<p>A function of type <code>a -&gt; IO ()</code> is a value which is in need of an <code>a</code>: you cannot make any use of this value without having an <code>a</code> somewhere. It sounds like you know this already., but it bears repeating to make the next bit clearer.</p>\n\n<p>Now, what about a <code>Callback a</code>, a function which is willing to operate on a value of type <code>a -&gt; IO ()</code>? The only way it could operate on such a value is by passing it some <code>a</code> that it has access to: this is exactly what we established in the previous paragraph. So while you don't know <em>how</em> it produces this <code>a</code>, it must be able to produce one somehow, else it could not do anything with its <code>a -&gt; IO ()</code>. </p>\n\n<p>Therefore, you can <code>fmap</code> over that <code>a</code>, producing a <code>b</code>, and yielding overall a <code>Callback b</code>, a value which can work with any <code>b -&gt; IO ()</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1517989050, "post_id": 48620994, "comment_id": 84314122, "body": "Awesome explanation. Thanks a lot."}], "tags": [], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "is_accepted": true, "score": 8, "last_activity_date": 1517831311, "last_edit_date": 1517831311, "creation_date": 1517828171, "answer_id": 48620994, "question_id": 48619201, "link": "https://stackoverflow.com/questions/48619201/why-is-the-functor-implementation-possible/48620994#48620994", "title": "Why is the functor implementation possible?", "body": "<blockquote>\n  <p>For me the function <code>supplyRandom</code> produces <code>int &lt;- randomRIO (1, 10)</code> an Int and at the same time, it consumes the Int <code>f int</code>. <strong>I can not see, why the author mean, it only produces an <code>Int</code></strong>.</p>\n</blockquote>\n\n<p>Actually, in the line <code>int &lt;- randomRIO (1, 10)</code> it's <code>randomRIO</code> that's producing the <code>Int</code> and it's <code>supplyRandom</code> that's consuming it. Similarly, in the line <code>f int</code> it's <code>supplyRandom</code> that's producing (i.e. supplying) the <code>Int</code> and it's <code>f</code> that's consuming it.</p>\n\n<p>When we say producing and consuming we really just mean giving and taking. Producing doesn't necessarily mean producing out of thin air, although that's possible too. For example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>produceIntOutOfThinAir :: Callback Int\nproduceIntOutOfThinAir = Callback $ \\f -&gt; f 42 -- produced 42 out of thin air\n</code></pre>\n\n<p>In the author's example, <code>supplyRandom</code> doesn't produce an <code>Int</code> out of thin air. Instead, it takes the <code>Int</code> that <code>randomRIO</code> produces and in turn supplies that <code>Int</code> to <code>f</code>. That's perfectly fine.</p>\n\n<p>The type signature of <code>supplyRandom</code> (i.e. <code>(Int -&gt; IO ()) -&gt; IO ()</code> when unwrapped) only tells us that <code>supplyRandom</code> produces some <code>Int</code>. It doesn't specify how that <code>Int</code> must be produced.</p>\n\n<hr>\n\n<p><strong>Original answer:</strong></p>\n\n<p>Let's look at the type of <code>fmap</code> for <code>Functor Callback</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fmap :: (a -&gt; b) -&gt; Callback a -&gt; Callback b\n</code></pre>\n\n<p>Let's replace <code>Callback</code> with its unwrapped type:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>                           Callback a                Callback b\n                     __________|__________      _________|_________\n                    |                     |    |                   |\nfmap :: (a -&gt; b) -&gt; ((a -&gt; IO ()) -&gt; IO ()) -&gt; (b -&gt; IO ()) -&gt; IO ()\n        |______|    |_____________________|    |__________|\n           |                   |                    |\n           f                   g                    h\n</code></pre>\n\n<p>As you can see, <code>fmap</code> takes three inputs and needs to produce a value of type <code>IO ()</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f :: a -&gt; b\ng :: (a -&gt; IO ()) -&gt; IO ()\nh :: b -&gt; IO ()\n--------------------------\nIO ()\n</code></pre>\n\n<p>This is a visual representation of our goal. Everything above the line is our context (i.e. our hypotheses, or things we know). Everything below the line are our goals (i.e. things we're trying to prove using our hypotheses). In terms of Haskell code this can be written as:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fmap f g h = (undefined :: IO ()) -- goal 1\n</code></pre>\n\n<p>As you can see, we need to use the inputs <code>f</code>, <code>g</code> and <code>h</code> to produce a value of type <code>IO ()</code>. Currently, I'm returning <code>undefined</code>. You can think of <code>undefined</code> as a placeholder for the actual value (i.e. a fill in the blank). So, how do we do fill in this blank? We have two options. We can either apply <code>g</code> or apply <code>h</code> since they both return an <code>IO ()</code>. Suppose we decide to apply <code>h</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fmap f g h = h (undefined :: b) -- goal 2\n</code></pre>\n\n<p>As you can see, <code>h</code> needs to be applied to a value of type <code>b</code>. Hence, our new goal is <code>b</code>. How do we fill in the new blank? The only function in our context which produces a value of type <code>b</code> is <code>f</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fmap f g h = h (f (undefined :: a)) -- goal 3\n</code></pre>\n\n<p>However, we now have to produce a value of type <code>a</code> and we neither have a value of type <code>a</code> nor do we have any function which produces a value of type <code>a</code>. So, applying <code>h</code> is not an option. Back to goal 1. Our other option was to apply <code>g</code>. So, let's try that instead:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fmap f g h = g (undefined :: a -&gt; IO ()) -- goal 4\n</code></pre>\n\n<p>Our new goal is <code>a -&gt; IO ()</code>. What does a value of type <code>a -&gt; IO ()</code> look like? Since it's a function we know that it looks like a lambda:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fmap f g h = g (\\x -&gt; (undefined :: IO ())) -- goal 5\n</code></pre>\n\n<p>Our new goal is again <code>IO ()</code>. Seems like we're back to square 1, but wait... something is different. Our context is different because we introduced a new value <code>x :: a</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f :: a -&gt; b\ng :: (a -&gt; IO ()) -&gt; IO ()\nh :: b -&gt; IO ()\nx :: a\n--------------------------\nIO ()\n</code></pre>\n\n<p>Where did this value <code>x</code> come from? Seems like we just pulled it out of thin air right? No, we didn't pull it out of thin air. The value <code>x</code> came from <code>g</code>. You see, the type <code>a</code> is covariant in <code>g</code> which means that <code>g</code> produces <code>a</code>. Indeed, when we created the lambda to fill in the blank of goal 4 we introduced a new variable <code>x</code> into our context which gets its value, whatever it may be, from <code>g</code>.</p>\n\n<p>Anyway, we again need to produce a value of type <code>IO ()</code> but now we can go back to option 1 (i.e. apply <code>h</code>) because we finally have a value of type <code>a</code>. We don't want to go back to option 2 (i.e. apply <code>g</code>) because then we'd just be running in circles. Option 1 is our way out:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fmap f g h = g (\\x -&gt; h (undefined :: b)) -- goal 6\n\nfmap f g h = g (\\x -&gt; h (f (undefined :: a))) -- goal 7\n\nfmap f g h = g (\\x -&gt; h (f x)) -- goal proved\n</code></pre>\n\n<p>As you can see, <code>\\x -&gt; h (f x)</code> is just <code>h . f</code> (i.e. function composition) and the rest is packing and unpacking of <code>newtype</code>. Hence, the actual function is defined as:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fmap f (Callback g) = Callback $ \\h -&gt; g (h . f)\n</code></pre>\n\n<p>Hope that explains why <code>a</code> is covariant in <code>(a -&gt; IO ()) -&gt; IO ()</code>. Hence, it's possible to define a <code>Functor</code> instance of <code>Callback</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1517830743, "last_edit_date": 1517830743, "creation_date": 1517829537, "answer_id": 48621440, "question_id": 48619201, "link": "https://stackoverflow.com/questions/48619201/why-is-the-functor-implementation-possible/48621440#48621440", "title": "Why is the functor implementation possible?", "body": "<p>So we have this:</p>\n\n<pre><code>newtype Callback a = Callback\n    { runCallback :: (a -&gt; IO ()) -&gt; IO ()\n    }\n</code></pre>\n\n<p>Let's strip the newtype for the time being and operate on functions.</p>\n\n<p>Given a function of type <code>(a -&gt; IO ()) -&gt; IO ()</code> and a function of type <code>a-&gt;b</code>, we need to produce a function of type <code>((b -&gt; IO ()) -&gt; IO ())</code>. How could we do that? Let's try:</p>\n\n<pre><code>  transformCallback :: (a-&gt;b) -&gt; ((a -&gt; IO ()) -&gt; IO ()) -&gt; ((b -&gt; IO ()) -&gt; IO ())\n  transformCallback f g = ????\n</code></pre>\n\n<p>So the resulting callback, the expression we have denoted with ????, should accept a function of type <code>b -&gt; IO ()</code>, and return an <code>IO ()</code>.</p>\n\n<pre><code>  transformCallback f g = \\h -&gt; ????\n</code></pre>\n\n<p>Good, now we have a function <code>f</code> of type <code>a-&gt;b</code>, a function <code>h</code> of type <code>b-&gt;IO ()</code>, and the original callback <code>g</code> of type <code>((a-&gt;IO()) -&gt; IO())</code>. What can we do with these? The only possible course of action seems to be combining <code>f</code> and <code>h</code> to get something of type <code>a-&gt;IO()</code>.</p>\n\n<pre><code> transformCallback f g = \\h -&gt; ??? h . f ???\n</code></pre>\n\n<p>Great, we have something of type <code>a-&gt;IO()</code>, and <code>g</code> that accepts that type and returns <code>IO ()</code>, exactly what we should return.</p>\n\n<pre><code> transformCallback f g = \\h -&gt; g ( h . f )\n</code></pre>\n\n<p>So where is <code>f</code> being called? What do we feed it?</p>\n\n<p>Recall that the original callback has the type <code>(a -&gt; IO ()) -&gt; IO ()</code>. We can ask, where is this <code>(a -&gt; IO ())</code> function called? What is being fed to it?</p>\n\n<p>First of all, it doesn't <em>have</em> to be called. The callback may well ignore it and produce an <code>IO()</code>  independently. But if it is called, the callback calls it, and it gets an <code>a</code> to feed to that <code>a-&gt;IO()</code> from somewhere. It's important enough to repeat: <em>the callback produces an <code>a</code> and feeds it to its argument</em>.</p>\n\n<p>Now if we feed our original callback a function that transforms an <code>a</code> to <code>b</code> and then feeds the result to a function of type <code>b-&gt;IO</code>, the callback is just as happy to consume it as any other function of type <code>a-&gt;IO</code>. Now as before, <em>the callback produces an <code>a</code> and feeds it to its argument</em>, and the argument converts it to <code>b</code>, and then produces an <code>IO</code>, and everything continues as it should.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 204, "favorite_count": 0, "accepted_answer_id": 48620994, "answer_count": 3, "score": 7, "last_activity_date": 1517831311, "creation_date": 1517822395, "question_id": 48619201, "link": "https://stackoverflow.com/questions/48619201/why-is-the-functor-implementation-possible", "title": "Why is the functor implementation possible?", "body": "<p>I read following article <a href=\"https://www.schoolofhaskell.com/user/commercial/content/covariance-contravariance\" rel=\"noreferrer\">https://www.schoolofhaskell.com/user/commercial/content/covariance-contravariance</a> on the section <strong>Positive and negative position</strong> there is an example:  </p>\n\n<pre><code>newtype Callback a = Callback ((a -&gt; IO ()) -&gt; IO ())\n</code></pre>\n\n<blockquote>\n  <p>Is it covariant or contravariant on <code>a</code>?</p>\n</blockquote>\n\n<p>Was the question.<br>\nThe explanation is:  </p>\n\n<blockquote>\n  <p>But now, we wrap up this entire function as the input to a new\n  function, via: <code>(a -&gt; IO ()) -&gt; IO ()</code>. As a whole, does this function\n  consume an <code>Int</code>, or does it produce an  <code>Int</code>? To get an intuition, let's\n  look at an implementation of <code>Callback Int</code> for random numbers:</p>\n\n<pre><code>supplyRandom :: Callback Int\nsupplyRandom = Callback $ \\f -&gt; do\n    int &lt;- randomRIO (1, 10)\n    f int\n</code></pre>\n  \n  <p>It's clear from this implementation that <code>supplyRandom</code> is, in fact,\n  producing an <code>Int</code>. This is similar to <code>Maybe</code>, meaning we have a solid\n  argument for this also being covariant. So let's go back to our\n  positive/negative terminology and see if it explains why.</p>\n</blockquote>\n\n<p>For me the function <code>supplyRandom</code> produces <code>int &lt;- randomRIO (1, 10)</code> an Int and at the same time, it consumes the Int <code>f int</code>. <strong>I can not see, why the author mean, it only produces an <code>Int</code></strong>.    </p>\n\n<p>An author continued further and explained the following:</p>\n\n<blockquote>\n  <p>In <code>a -&gt; IO ()</code>, <code>a</code> is in negative position. In <code>(a -&gt; IO ()) -&gt; IO ()</code>, <code>a -&gt; IO ()</code> is in negative position. Now we just follow multiplication rules: when you multiply two negatives, you get a positive. As a\n  result, in <code>(a -&gt; IO ())-&gt; IO ()</code>, a is in the positive position, meaning that Callback is covariant on a, and we can define a Functor instance. And in fact, GHC agrees with us. </p>\n</blockquote>\n\n<p>I understand the explanation but I didn't get the idea, why <code>a</code> is in the positive position and why it is covariant.   </p>\n\n<p>Consider the functor definition: </p>\n\n<pre><code>class Functor (f :: * -&gt; *) where\n  fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>How it is possible to transform the type variable <code>a</code> in <code>(a -&gt; IO ())-&gt; IO ()</code> to <code>(b -&gt; IO ())-&gt; IO ()</code>? I think, I misunderstand the concept.  </p>\n\n<p>Looking at the functor implementation:  </p>\n\n<pre><code>newtype Callback a = Callback\n    { runCallback :: (a -&gt; IO ()) -&gt; IO ()\n    }\n\ninstance Functor Callback where\n    fmap f (Callback g) = Callback $ \\h -&gt; g (h . f)\n</code></pre>\n\n<p>it is not clear where the transformation from <code>a -&gt; b</code> takes place.</p>\n"}, {"tags": ["haskell", "concurrency", "scripting"], "answers": [{"comments": [{"owner": {"reputation": 831, "user_id": 3371760, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/09370cd5d499c9f0f75b54aa1b4daa17?s=128&d=identicon&r=PG", "display_name": "Fried Brice", "link": "https://stackoverflow.com/users/3371760/fried-brice"}, "edited": false, "score": 0, "creation_date": 1517781127, "post_id": 48613327, "comment_id": 84223429, "body": "Thank you for explaining that. I guess my unix-foo could use some work.  I tried using full paths, but what ended up happening was the directory I ran the script from ended up with a mess of files lying around in it--files that I wanted to have in the subdirectories.  I think what I&#39;ll do is spin off a child process for each directory."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": true, "score": 2, "last_activity_date": 1517780939, "creation_date": 1517780939, "answer_id": 48613327, "question_id": 48613284, "link": "https://stackoverflow.com/questions/48613284/haskell-interaction-between-withcurrentdirectory-and-runconcurrently/48613327#48613327", "title": "Haskell: interaction between withCurrentDirectory and runConcurrently", "body": "<p>This isn't possible with <code>withCurrentDirectory</code>. The current directory is a process-wide setting.  Whenever something changes it, it's changed for everything in the process.  This isn't a Haskell issue - it's just how the concept of \"current directory\" works.</p>\n\n<p>To get this to work concurrently, you'll need to use full paths for everything, instead of changing the current directory.</p>\n"}], "owner": {"reputation": 831, "user_id": 3371760, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/09370cd5d499c9f0f75b54aa1b4daa17?s=128&d=identicon&r=PG", "display_name": "Fried Brice", "link": "https://stackoverflow.com/users/3371760/fried-brice"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 48613327, "answer_count": 1, "score": 2, "last_activity_date": 1517780939, "creation_date": 1517780538, "question_id": 48613284, "link": "https://stackoverflow.com/questions/48613284/haskell-interaction-between-withcurrentdirectory-and-runconcurrently", "title": "Haskell: interaction between withCurrentDirectory and runConcurrently", "body": "<p>I'm trying to automate some file management in Haskell using <code>System.Directory</code>. My script works synchronously, but in my use case, I have about twenty directories, for each of which I'd like to start a long-running process, so I am also using <code>Control.Concurrent.Async</code>, which seems to be causing problems.</p>\n\n<p>Minimal Example:</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack --resolver lts-10.3 --install-ghc runghc --package async\n\nimport Control.Concurrent.Async (Concurrently(..), runConcurrently)\nimport Control.Monad (filterM)\nimport System.Directory as Dir\nimport System.Process (callCommand)\n\ndirs :: IO [FilePath]\ndirs = do\n  prefix &lt;- (++ \"/Desktop/dirs/\") &lt;$&gt; Dir.getHomeDirectory\n  paths &lt;- fmap (prefix ++) &lt;$&gt; Dir.listDirectory prefix\n  filterM Dir.doesDirectoryExist paths\n\npullDir :: FilePath -&gt; IO ()\npullDir dir = Dir.withCurrentDirectory dir $ callCommand \"pwd\"\n\nmain :: IO ()\nmain = dirs &gt;&gt;= runConcurrently . traverse (Concurrently . pullDir) &gt;&gt; pure ()\n</code></pre>\n\n<p>Expected output:</p>\n\n<pre><code>/Users/daniel/Desktop/dirs/1\n/Users/daniel/Desktop/dirs/2\n/Users/daniel/Desktop/dirs/3\n/Users/daniel/Desktop/dirs/4\n/Users/daniel/Desktop/dirs/5\n</code></pre>\n\n<p>Actual output (varies!):</p>\n\n<pre><code>/Users/daniel/Desktop/dirs/3\n/Users/daniel/Desktop/dirs/4\n/Users/daniel/Desktop/dirs/3\n/Users/daniel/Desktop/dirs/5\n/Users/daniel/Desktop/dirs/5\n</code></pre>\n\n<p>We see the actual output runs <code>pwd</code> for the same directory more than once and fails to run <code>pwd</code> for some of the directories entierly. I'm almost positive this has to do with <code>withCurrentDirectory</code>.</p>\n\n<p>How can I implement this correctly while still preserving the concurrency?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 179940, "user_id": 20713, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/09b9758a4a83cc25547eb93891f19df7?s=128&d=identicon&r=PG", "display_name": "ephemient", "link": "https://stackoverflow.com/users/20713/ephemient"}, "edited": false, "score": 2, "creation_date": 1517777864, "post_id": 48612909, "comment_id": 84222500, "body": "Well yes, because you didn&#39;t <code>import Prelude (negate)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1517778720, "last_edit_date": 1517778720, "creation_date": 1517777972, "answer_id": 48612958, "question_id": 48612909, "link": "https://stackoverflow.com/questions/48612909/defining-instance-for-num/48612958#48612958", "title": "Defining instance for Num", "body": "<p>GHCi tries to provide the same access to bindings as if we were inside the module we load. Since the module has explicit <code>Prelude</code> imports</p>\n\n<pre><code>import Prelude ((+), (-), (&lt;), (++), (*), otherwise, id)\nimport qualified Prelude as P\n</code></pre>\n\n<p>then GHCi also requires the user to type <code>P.negate</code>. After all, the module source code requires that as well.</p>\n\n<p>In GHCi, I guess one can also <code>import Prelude</code> so to have all the bindings available again, without having to qualify them with <code>P.</code>.</p>\n"}], "owner": {"reputation": 320, "user_id": 2555122, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/100000085947037/picture?type=large", "display_name": "Sergey Vernidub", "link": "https://stackoverflow.com/users/2555122/sergey-vernidub"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 48612958, "answer_count": 1, "score": -3, "last_activity_date": 1517778720, "creation_date": 1517777605, "question_id": 48612909, "link": "https://stackoverflow.com/questions/48612909/defining-instance-for-num", "title": "Defining instance for Num", "body": "<p>I have a module with type declaration and some functions for this type</p>\n\n<pre><code>module Stream where\n\nimport Prelude ((+), (-), (&lt;), (++), (*), otherwise, id)\nimport qualified Prelude as P\n\ninfixr 1 :&amp;\n\n\ndata Stream a = a :&amp; Stream a\n\n\ninstance P.Show a =&gt; P.Show (Stream a) where\n  show xs = showInfinity (P.show (take 5 xs)) where\n    showInfinity xs = P.init xs ++ \"...\"\n\nhead :: Stream a -&gt; a\nhead (x:&amp;_) = x\n\n\ntail :: Stream a -&gt; Stream a\ntail (_:&amp;xs) = xs\n\n\n(!!) :: Stream a -&gt; P.Int -&gt; a\n(!!) xs 0 = head xs\n(!!) xs n = (tail xs) !! (n - 1)\n\n\ntake :: P.Int -&gt; Stream a -&gt; [a]\ntake 0 xs = []\ntake n xs = (head xs) : (take (n - 1) (tail xs))\n\n\nmap :: (a -&gt; b) -&gt; Stream a -&gt; Stream b\nmap f xs = f (head xs) :&amp; map f (tail xs)\n\n\nzipWith :: (a -&gt; b -&gt; c) -&gt; Stream a -&gt; Stream b -&gt; Stream c\nzipWith f xs ys = f (head xs) (head ys) :&amp; zipWith f (tail xs) (tail ys)\n\n\niterate :: (a -&gt; a) -&gt; a -&gt; Stream a\niterate f a = a :&amp; iterate f (f a)\n</code></pre>\n\n<p>Now I want to declare instance of Num class for my type.</p>\n\n<pre><code>instance P.Num a =&gt; P.Num (Stream a) where\n  (+)         xs ys  = zipWith (+) xs ys\n  (-)         xs ys  = zipWith (-) xs ys\n  (*)         xs ys  = zipWith (*) xs ys\n  negate      xs     = map P.negate xs\n  abs         xs     = map P.abs xs\n  signum      xs     = map P.signum xs\n  fromInteger x      = P.error \"Not implemented yet\" --constStream x\n</code></pre>\n\n<p>Functions <code>*</code>, <code>-</code>, <code>*</code> work as I want, but functions <code>negate</code>, <code>abs</code> and <code>signum</code> don't exist.</p>\n\n<pre><code>GHCi, version 8.2.2: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; :l Stream\n[1 of 1] Compiling Stream           ( Stream.hs, interpreted )\nOk, one module loaded.\n*Stream&gt; s1 = iterate (\\x -&gt; x + 1) 1\n*Stream&gt; negate s1\n\n&lt;interactive&gt;:3:1: error:\n    \u2022 Variable not in scope: negate :: Stream P.Integer -&gt; t\n    \u2022 Perhaps you meant \u2018P.negate\u2019 (imported from Prelude)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517778515, "post_id": 48612338, "comment_id": 84222648, "body": "Laws for polymorphic functions (like <code>return</code>) often use the function at different types. E.g. the monad law <code>join . join = join . fmap join</code> can be quite confusing, since those <code>join</code>s are not the same function."}], "answers": [{"comments": [{"owner": {"reputation": 35, "user_id": 9274783, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-pnYm-XfrwBQ/AAAAAAAAAAI/AAAAAAAAAP4/0wAUPrYQX_E/photo.jpg?sz=128", "display_name": "\u0391\u03c7\u03b9\u03bb\u03bb\u03ad\u03b1\u03c2 \u039c\u03c0\u03b1\u03bb\u03b1\u03ba\u03c4\u03c3\u03ae\u03c2", "link": "https://stackoverflow.com/users/9274783/%ce%91%cf%87%ce%b9%ce%bb%ce%bb%ce%ad%ce%b1%cf%82-%ce%9c%cf%80%ce%b1%ce%bb%ce%b1%ce%ba%cf%84%cf%83%ce%ae%cf%82"}, "edited": false, "score": 0, "creation_date": 1517776591, "post_id": 48612517, "comment_id": 84222176, "body": "So the return in the left side is the implementation of return in a generic monad. And the return of the right side is the implementation of return in a monad transformer which is a monad as well. Am I saying it right?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 35, "user_id": 9274783, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-pnYm-XfrwBQ/AAAAAAAAAAI/AAAAAAAAAP4/0wAUPrYQX_E/photo.jpg?sz=128", "display_name": "\u0391\u03c7\u03b9\u03bb\u03bb\u03ad\u03b1\u03c2 \u039c\u03c0\u03b1\u03bb\u03b1\u03ba\u03c4\u03c3\u03ae\u03c2", "link": "https://stackoverflow.com/users/9274783/%ce%91%cf%87%ce%b9%ce%bb%ce%bb%ce%ad%ce%b1%cf%82-%ce%9c%cf%80%ce%b1%ce%bb%ce%b1%ce%ba%cf%84%cf%83%ce%ae%cf%82"}, "edited": false, "score": 0, "creation_date": 1517778629, "post_id": 48612517, "comment_id": 84222687, "body": "@\u0391\u03c7\u03b9\u03bb\u03bb\u03ad\u03b1\u03c2\u039c\u03c0\u03b1\u03bb\u03b1\u03ba\u03c4\u03c3\u03ae\u03c2 Yes, that sounds correct. (More precisely, I&#39;d say that the second one is the implementation of return in the transformed monad.)"}], "tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": true, "score": 2, "last_activity_date": 1517774988, "creation_date": 1517774988, "answer_id": 48612517, "question_id": 48612338, "link": "https://stackoverflow.com/questions/48612338/how-does-monadtrans-first-law-type-check/48612517#48612517", "title": "How does MonadTrans first law type check?", "body": "<p>Given some monad transformer <code>t</code> over some monad <code>m</code>, both <code>m</code> and <code>t m</code> are monads. Therefore, <code>return</code> may be instantiated to type <code>a -&gt; m a</code> or <code>a -&gt; t m a</code>.</p>\n\n<p>In this scenario, <code>lift</code> has type <code>m a -&gt; t m a</code>. Therefore, if we pick the type <code>a -&gt; m a</code> for <code>return</code>, then <code>lift . return</code> has type <code>a -&gt; t m a</code>. This is the other possible type for <code>return</code>, so the equivalence typechecks.</p>\n\n<p>Here is the entire equivalence annotated with types:</p>\n\n<pre><code>(lift :: m a -&gt; t m a) . (return :: a -&gt; m a) = (return :: a -&gt; t m a)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": false, "score": 2, "last_activity_date": 1517775075, "creation_date": 1517775075, "answer_id": 48612533, "question_id": 48612338, "link": "https://stackoverflow.com/questions/48612338/how-does-monadtrans-first-law-type-check/48612533#48612533", "title": "How does MonadTrans first law type check?", "body": "<p>First: it should be understood that <code>return</code> of <code>m</code> and the <code>return</code> of <code>t m</code> are two different functions, which belong to two different instances.</p>\n\n<p>The convention for the function composition <code>f . g</code> is the same as in the usual mathematical notation, that is, it must hold <code>g : x -&gt; y</code> and <code>f: y -&gt; z</code> for some types <code>x, y, z</code>.</p>\n\n<p>The documentation states quite clearly that the type of <code>lift</code> is:</p>\n\n<pre><code>lift :: Monad m =&gt; m a -&gt; t m a \n</code></pre>\n\n<p>that is, as soon as a <code>Monad</code> can be found for <code>m</code>, <code>lift</code> is essentially of type <code>m a -&gt; t m a</code>. </p>\n\n<p>We know that <code>return</code> which belongs to <code>m</code> has type <code>a -&gt; m a</code>.</p>\n\n<p>Thus, the two functions <code>return</code> and <code>lift</code> with types <code>a -&gt; m a</code> and <code>m a -&gt; t m a</code> are composable, their composition is the <code>return</code> of <code>t m</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1517781698, "creation_date": 1517781698, "answer_id": 48613432, "question_id": 48612338, "link": "https://stackoverflow.com/questions/48612338/how-does-monadtrans-first-law-type-check/48613432#48613432", "title": "How does MonadTrans first law type check?", "body": "<p>Compare the types of <code>lift</code> and <code>return</code> first:</p>\n\n<pre><code>return ::  Monad m                =&gt;   a -&gt;   m a\nlift   :: (Monad m, MonadTrans t) =&gt; m a -&gt; t m a\n</code></pre>\n\n<p>Both do something similar: <code>return</code> lifts a value of any type into a monadic type wrapping the first type. <code>lift</code> lifts a value already wrapped in a monad into <em>another</em> monad created by the monad transformer. Because both the original monad <code>m</code> and the transformed monad <code>t m</code> have their own <code>return</code> function, you have two ways of putting a value of type <code>a</code> into a monad <code>t m a</code>:</p>\n\n<ol>\n<li>Use the transformed monad's <code>return :: a -&gt; t m a</code></li>\n<li>Use the original <code>return :: a -&gt; m a</code>, then <code>lift :: m a -&gt; t m a</code>.</li>\n</ol>\n\n<p>The commutative diagram looks like</p>\n\n<pre><code>               return\n           a  -------&gt;  m a\n           \\            |\n            \\           | lift \n    return   \\          |\n              \\         v\n               +------ t m a\n</code></pre>\n\n<p>The first monad transformer law just states that it shouldn't matter which path you take to get from <code>a</code> to <code>t m a</code>.</p>\n"}], "owner": {"reputation": 35, "user_id": 9274783, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-pnYm-XfrwBQ/AAAAAAAAAAI/AAAAAAAAAP4/0wAUPrYQX_E/photo.jpg?sz=128", "display_name": "\u0391\u03c7\u03b9\u03bb\u03bb\u03ad\u03b1\u03c2 \u039c\u03c0\u03b1\u03bb\u03b1\u03ba\u03c4\u03c3\u03ae\u03c2", "link": "https://stackoverflow.com/users/9274783/%ce%91%cf%87%ce%b9%ce%bb%ce%bb%ce%ad%ce%b1%cf%82-%ce%9c%cf%80%ce%b1%ce%bb%ce%b1%ce%ba%cf%84%cf%83%ce%ae%cf%82"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 48612517, "answer_count": 3, "score": 1, "last_activity_date": 1517781698, "creation_date": 1517773877, "last_edit_date": 1517775149, "question_id": 48612338, "link": "https://stackoverflow.com/questions/48612338/how-does-monadtrans-first-law-type-check", "title": "How does MonadTrans first law type check?", "body": "<p>There is something I do not understand in the <code>MonadTrans</code> class laws.</p>\n\n<p><code>lift . return</code> is of type <code>a -&gt; t m a</code></p>\n\n<p><code>return</code> is of type <code>a -&gt; m a</code></p>\n\n<p>How does  <code>lift . return = return</code> typecheck?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 3, "last_activity_date": 1517772715, "creation_date": 1517772715, "answer_id": 48612193, "question_id": 48612055, "link": "https://stackoverflow.com/questions/48612055/haskell-stack-version-dependencies/48612193#48612193", "title": "Haskell stack version dependencies", "body": "<p>There is no package named <code>http</code> in Hackage. But you have a package named <code>HTTP</code>.</p>\n\n<p>So, fixing the package name should resolve the problem for you.</p>\n\n<p>(Also the blog article seems quite outdated, the standard way of doing HTTP request is via conduit/wreq/req these days).</p>\n"}], "owner": {"reputation": 2512, "user_id": 2325380, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SvFan.jpg?s=128&g=1", "display_name": "Mark Karavan", "link": "https://stackoverflow.com/users/2325380/mark-karavan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 48612193, "answer_count": 1, "score": 2, "last_activity_date": 1517772715, "creation_date": 1517771902, "question_id": 48612055, "link": "https://stackoverflow.com/questions/48612055/haskell-stack-version-dependencies", "title": "Haskell stack version dependencies", "body": "<p>New to Stack.  I'm starting to build a <a href=\"http://adit.io/posts/2012-03-10-building_a_concurrent_web_scraper_with_haskell.html\" rel=\"nofollow noreferrer\">concurrent web scraper</a>, and ran <code>stack new my-project simple</code>.  In <code>my-project.cabal</code> I have to insert the dependencies for hxt, url, http, and maybet.</p>\n\n<pre><code>executable my-project\n  hs-source-dirs:      src\n  main-is:             Main.hs\n  default-language:    Haskell2010\n  build-depends:       base &gt;= 4.7 &amp;&amp; &lt; 5,\n                       time,\n                       hxt,\n                       http,\n                       maybet\n</code></pre>\n\n<p>When I run <code>stack build</code>, I get this:</p>\n\n<pre><code>Error: While constructing the build plan, the following exceptions were encountered:\n\nIn the dependencies for my-project-0.1.0.0:\n    http must match -any, but the stack configuration has no specified version\n    maybet must match -any, but the stack configuration has no specified version\nneeded since my-project is a build target.\n\nSome potential ways to resolve this:\n\n  * Set 'allow-newer: true' to ignore all version constraints and build anyway.\n\n  * You may also want to try using the 'stack solver' command.\n</code></pre>\n\n<p>Inserting <code>allow-newer: true</code> under the executable directive doesn't seem to work and adding version suffixes like <code>http == *</code> gives a parse error, and giving it <code>http == 4000.3.9,</code> as per the <a href=\"https://hackage.haskell.org/package/HTTP\" rel=\"nofollow noreferrer\">hackage docs</a> gives me     <code>http must match ==4000.3.9, but the stack configuration has no specified version</code></p>\n\n<p>Is there an easy way to tell the cabal file that I want the newest version?</p>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517771152, "post_id": 48611896, "comment_id": 84220250, "body": "Both iterate over over the input, the only difference is that <code>foldr</code> will apply the last value with the given value <code>z</code> (here <code>2</code>), whereas the other <code>foldr</code> will not do that."}, {"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517771915, "post_id": 48611896, "comment_id": 84220523, "body": "Meaning that my deconstruct of foldr1 (1/(2/(3/2))) is wrong, since it does have a value z, but takes the head of the list instead ~"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 6, "last_activity_date": 1517773104, "creation_date": 1517773104, "answer_id": 48612246, "question_id": 48611896, "link": "https://stackoverflow.com/questions/48611896/foldr-and-foldr1-haskell/48612246#48612246", "title": "foldr and foldr1 Haskell", "body": "<p><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code> has as implementation:</p>\n\n<pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\nfoldr _ z [] = z\nfoldr f z (x:xs) = f x (foldr f z xs)\n</code></pre>\n\n<p>So that means that if we enter <code>foldr f z [x1, x2, x3]</code>, then it is evaluated as:</p>\n\n<pre><code>   foldr f z [x1, x2, x3]\n-&gt; f x1 (foldr f z [x2, x3])\n-&gt; f x1 (f x2 (foldr f z [x3]))\n-&gt; f x1 (f x2 (f x3 (foldr f z [])))\n-&gt; f x1 (f x2 (f x3 z))\n</code></pre>\n\n<p>So for your example that will evaluate to:</p>\n\n<pre><code>  (/) 1 ((/) 2 ((/) 3 2))\n= 1 / (2 / (3 / 2))\n= 1 / (2 / 1.5)\n= 1 / 1.33333...\n= 0.75\n</code></pre>\n\n<p>The <code>foldr1 :: (a -&gt; a -&gt; a) -&gt; [a] -&gt; a</code> function is <em>almost</em> similar, except that in case we see the a 1-element list, we return that element, so the difference is:</p>\n\n<pre><code>foldr1 :: (a -&gt; a -&gt; a) -&gt; [a] -&gt; a\nfoldr1 _ <b>[x]</b> = x\nfoldr f (x:xs) = f x (foldr1 f xs)</code></pre>\n\n<p>So that means that for a <code>foldr1 f [x1, x2, x3]</code> we get:</p>\n\n<pre><code>   foldr1 f [x1, x2, x3]\n-&gt; f x1 (foldr1 f [x2, x3])\n-&gt; f x1 (f x2 (foldr1 f [x3]))\n-&gt; f x1 (f x2 x3))\n</code></pre>\n\n<p>So for the sample input, we get:</p>\n\n<pre><code>  (/) 2 ((/) 2 3)\n= 2 / (2 / 3)\n= 2 / 0.6666...\n= 3.0\n</code></pre>\n\n<p>So in case <code>z</code> and <code>xi</code> have the same type, then <code>foldr f z [x1, ..., xn]</code> is equal to <code>foldr1 f [x1, ..., xn, z]</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": false, "score": 6, "last_activity_date": 1517773320, "creation_date": 1517773320, "answer_id": 48612272, "question_id": 48611896, "link": "https://stackoverflow.com/questions/48611896/foldr-and-foldr1-haskell/48612272#48612272", "title": "foldr and foldr1 Haskell", "body": "<p>In general</p>\n\n<pre><code>foldr1 op [y1, ..., yn, x]\n</code></pre>\n\n<p>is essentially the same as </p>\n\n<pre><code>foldr op x [y1, ..., yn]\n</code></pre>\n\n<p>as long as <code>n &gt;= 1</code>. That is, in your special case</p>\n\n<pre><code>foldr1 (/) [2, 2, 3]\n</code></pre>\n\n<p>will evaluate to <code>2/(2/3) = 3</code>.</p>\n\n<p>With the division operator, it's a bit boring, because </p>\n\n<pre><code>foldr1 (/) [y, y, x1, ... , xn]\n  = y/(y/(foldr1 (/) [x1, ..., xn]))\n  = foldr1 (/) [x1, ..., xn]\n</code></pre>\n\n<p>for all <code>n &gt;= 1</code>. So, in your example, it should just return the result of</p>\n\n<pre><code>foldr1 (/) [3]\n</code></pre>\n\n<p>which is of course <code>3.0</code>, and it does indeed evaluate to <code>3.0</code>.</p>\n\n<p>Here is less degenerate example:</p>\n\n<pre><code>foldr1 (/) [2, 3, 5, 7] --  evals to 0.47619047619047616\n</code></pre>\n\n<p>Here, it gives the same result as <code>2 / (3 / (5 / 7))</code>, which is in turn\nthe same as</p>\n\n<pre><code>foldr (/) 7 [2, 3, 5]\n</code></pre>\n\n<p>I hope it clarifies the order of evaluation a little bit.</p>\n"}], "owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2490, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1517773320, "creation_date": 1517770863, "question_id": 48611896, "link": "https://stackoverflow.com/questions/48611896/foldr-and-foldr1-haskell", "title": "foldr and foldr1 Haskell", "body": "<p>I am trying to dive deep in the folds, considering it seems a very powerful asset to me. However, can you help me with this:</p>\n\n<pre><code>foldr  (/) 2 [1,2,3] -- (1/(2/(3/2))), result 0,75 {where 2 is base)\nfoldr1 (/)   [2,2,3] -- (1/(2/(3/2))), result 3.00 {where 2 is base)\n</code></pre>\n\n<p>I think I am seriously overseeing an essential difference between the folds. Thx</p>\n"}, {"tags": ["parsing", "haskell", "parsec", "megaparsec"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517762611, "post_id": 48610286, "comment_id": 84217382, "body": "I guess that when <code>fail</code> is run, the position is <code>1:3</code>, since <code>p</code> consumed the prefix. Later on <code>try</code> rolls it back, but it&#39;s too late."}, {"owner": {"reputation": 835, "user_id": 5841943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/A62rN.png?s=128&g=1", "display_name": "suhdonghwi", "link": "https://stackoverflow.com/users/5841943/suhdonghwi"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517767219, "post_id": 48610286, "comment_id": 84218972, "body": "@chi Thanks. But why is <code>try</code> too late to roll it back? Is there a solution for this?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 3, "creation_date": 1517778280, "post_id": 48610286, "comment_id": 84222590, "body": "Don\u2019t confuse the error reporting with the state of the parser. The error occurred at position <code>1:3</code> (after the <code>if</code> was recognised). The parsing process did backtrack - if you compose <code>identifier</code> into a bigger parser using <code>&lt;|&gt;</code> you\u2019d observe the other branch being tried at the initial position - but since it didn\u2019t have any more alternatives to try the original error was reported. I\u2019d fix it using a combination of <code>lookahead</code> and <code>notFollowedBy</code>."}, {"owner": {"reputation": 835, "user_id": 5841943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/A62rN.png?s=128&g=1", "display_name": "suhdonghwi", "link": "https://stackoverflow.com/users/5841943/suhdonghwi"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1517794403, "post_id": 48610286, "comment_id": 84226556, "body": "@BenjaminHodgson Thank you very much. I misunderstood the notion of backtracking. However, I fixed my parser with <code>lookAhead</code> and <code>notFollowedBy</code> as your advice. But this time, error location is <code>1:1:</code>, but error message is <code>unexpected &#39;i&#39;</code>. I expected it to be <code>unexpected &#39;if&#39;</code>. How can I achieve this?"}, {"owner": {"reputation": 835, "user_id": 5841943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/A62rN.png?s=128&g=1", "display_name": "suhdonghwi", "link": "https://stackoverflow.com/users/5841943/suhdonghwi"}, "edited": false, "score": 0, "creation_date": 1517809123, "post_id": 48610286, "comment_id": 84229682, "body": "Finally. Solved the problem via <code>observing</code> function :D"}, {"owner": {"reputation": 835, "user_id": 5841943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/A62rN.png?s=128&g=1", "display_name": "suhdonghwi", "link": "https://stackoverflow.com/users/5841943/suhdonghwi"}, "edited": false, "score": 0, "creation_date": 1517849518, "post_id": 48610286, "comment_id": 84251897, "body": "Well, sorry for continuous self-commenting but.. turns out that <code>obeserving</code> method also had a problem. It failed to parse if there are trailing characters after reserved name, i.e. <code>ifa</code>, <code>thens</code>. I ended up with following method: if reserved name is parsed, then set source position to initial position of identifier using <code>setPosition</code>. This method fixes all the problems I had, but I&#39;m still looking for a more elegant/haskell-ish solution."}], "owner": {"reputation": 835, "user_id": 5841943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/A62rN.png?s=128&g=1", "display_name": "suhdonghwi", "link": "https://stackoverflow.com/users/5841943/suhdonghwi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 263, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1517761181, "creation_date": 1517761181, "question_id": 48610286, "link": "https://stackoverflow.com/questions/48610286/megaparsec-unexpected-input-consumption-when-using-try", "title": "Megaparsec: Unexpected input consumption when using try", "body": "<p>I'm currently writing my simple programming language parser in Haskell with megaparsec library.</p>\n\n<p>I found <a href=\"https://markkarpov.com/megaparsec/parsing-simple-imperative-language.html\" rel=\"nofollow noreferrer\">this</a> megaparsec tutorial, and I wrote following parser code:</p>\n\n<pre><code>import Data.Void\n\nimport Text.Megaparsec\nimport Text.Megaparsec.Char\n\nimport qualified Text.Megaparsec.Char.Lexer as L\n\ntype Parser = Parsec Void String\n\nlexeme :: Parser a -&gt; Parser a\nlexeme = L.lexeme space\n\nrws :: [String] -- list of reserved words\nrws = [\"if\", \"then\"]\n\nidentifier :: Parser String\nidentifier = (lexeme . try) (p &gt;&gt;= check)\n  where\n    p = (:) &lt;$&gt; letterChar &lt;*&gt; many alphaNumChar\n    check x =\n        if x `elem` rws\n            then fail $ \"keyword \" ++ show x ++ \" cannot be an identifier\"\n            else return x\n</code></pre>\n\n<p>A simple identifier parser with reserved name error handling. It successfully parses valid identifier such as <code>foo</code>, <code>bar123</code>.</p>\n\n<p>But when an <strong>invalid</strong> input(a.k.a. <em>reserved name</em>) goes in to the parser, it outputs error:</p>\n\n<pre><code>&gt;&gt; parseTest identifier \"if\"\n1:3:\nkeyword \"if\" cannot be an identifier\n</code></pre>\n\n<p>which, error message is alright, but error location(<code>1:3:</code>) is a bit different from what I expected. I expected error location to be <code>1:1:</code>.</p>\n\n<p>In the following part of definition of <code>identifier</code>,</p>\n\n<pre><code>identifier = (lexeme . try) (p &gt;&gt;= check)\n</code></pre>\n\n<p>I expected <code>try</code> would behave like there was no input consumed if <code>(p &gt;&gt;= check)</code> fails and go back to source location <code>1:1:</code>.</p>\n\n<p>Is my expectation wrong? How can I get this code work as I intended?</p>\n"}, {"tags": ["haskell", "typeclass", "megaparsec"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1517757147, "post_id": 48609426, "comment_id": 84215478, "body": "In a nutshell: it means &quot;<code>m</code> uniquely determines both <code>e</code> and <code>s</code>&quot; (i.e., in this specific example, the parsing monad determines what the error type and the token stream type are)."}], "owner": {"reputation": 858, "user_id": 1910822, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/d3cbcd57f668d93aa65a1d637ee8a14c?s=128&d=identicon&r=PG", "display_name": "mtber75", "link": "https://stackoverflow.com/users/1910822/mtber75"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "closed_date": 1517757051, "answer_count": 0, "score": 1, "last_activity_date": 1517757088, "creation_date": 1517756314, "question_id": 48609426, "link": "https://stackoverflow.com/questions/48609426/after-defining-the-name-of-a-type-classes-in-haskell-what-does-the-vertical-bar", "closed_reason": "Duplicate", "title": "After defining the name of a type classes in Haskell, what does the vertical bar followed by a function mean?", "body": "<p>I was taking a look at the <code>megaparsec</code> library and noticed that a class is defined as</p>\n\n<pre><code>class (Stream s, A.Alternative m, MonadPlus m)\n=&gt; MonadParsec e s m | m -&gt; e s where\n</code></pre>\n\n<p>I know that I am creating a type class named MonadParsec, but what does <code>| m -&gt; e s</code> mean exactly?</p>\n"}, {"tags": ["haskell", "conduit"], "answers": [{"comments": [{"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 0, "creation_date": 1517773640, "post_id": 48607907, "comment_id": 84221126, "body": "Cool, straight from the source!  Thanks so much for your answer.  One final question: like <code>print</code>/<code>printC</code>, does there exist an analogous version of <code>putStrLn</code>?"}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "reply_to_user": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 1, "creation_date": 1517773735, "post_id": 48607907, "comment_id": 84221154, "body": "Yes, stdoutC, but it&#39;s specialized for ByteString."}], "tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": true, "score": 7, "last_activity_date": 1517746293, "creation_date": 1517746293, "answer_id": 48607907, "question_id": 48603210, "link": "https://stackoverflow.com/questions/48603210/is-there-a-way-to-emulate-tee-with-haskells-conduit-extra/48607907#48607907", "title": "Is there a way to emulate tee with Haskell&#39;s conduit-extra?", "body": "<p>One approach is to use the <code>conduitFile</code> function:</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack --resolver lts-10.3 script\nimport Conduit\nimport Data.Conduit.Process\nimport Data.Conduit.Binary (conduitFile)\n\nmain :: IO ()\nmain = do\n(ClosedStream, out, ClosedStream, ph) &lt;-\n    streamingProcess (shell \"cat /etc/passwd\")\n\nrunConduitRes $ out .| conduitFile \"myCommand.log\" .| printC\n</code></pre>\n\n<p>Another is to use <code>ZipSink</code> to consume the stream in two different ways at once:</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack --resolver lts-10.3 script\nimport Conduit\nimport Data.Conduit.Process\n\nmain :: IO ()\nmain = do\n(ClosedStream, out, ClosedStream, ph) &lt;-\n    streamingProcess (shell \"cat /etc/passwd\")\n\nrunConduitRes $ out .| getZipSink (\n    ZipSink (sinkFile \"myCommand.log\") *&gt;\n    ZipSink printC)\n</code></pre>\n"}], "owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 1, "accepted_answer_id": 48607907, "answer_count": 1, "score": 4, "last_activity_date": 1517746293, "creation_date": 1517701031, "question_id": 48603210, "link": "https://stackoverflow.com/questions/48603210/is-there-a-way-to-emulate-tee-with-haskells-conduit-extra", "title": "Is there a way to emulate tee with Haskell&#39;s conduit-extra?", "body": "<p>I am trying to spawn a process from within a Haskell program, and I would like to print its standard error stream to the screen while also writing the same stream to a file, much like what the <code>tee</code> command achieves.  </p>\n\n<p>I can print the standard error stream:</p>\n\n<pre><code>import Data.Conduit ((.|), runConduit)\nimport qualified Data.Conduit.List as CL\nimport Data.Conduit.Process\n\nmain :: IO ()\nmain = do\n  (ClosedStream, ClosedStream, err, sph) &lt;- streamingProcess (shell myCommand)\n\n  runConduit $ err .| CL.mapM_ print\n</code></pre>\n\n<p>And I can direct the stream to a file:</p>\n\n<pre><code>import System.IO (withFile, IOMode (..))\nimport Data.Conduit.Process\n\nmain :: IO ()\nmain = do\n  let logFile = \"myCommand.log\"\n  withFile logFile WriteMode $ \\h -&gt; do\n    (ClosedStream, ClosedStream, UseProvidedHandle, sph) &lt;-\n      streamingProcess (shell myCommand) {std_err = UseHandle h}\n</code></pre>\n\n<p>How can I do both simultaneously? </p>\n"}, {"tags": ["function", "haskell", "types"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517691875, "post_id": 48601573, "comment_id": 84200625, "body": "<code>triple</code> works with numbers, but <code>threetimes</code> does not involve numbers at all. Because of that, it should not be constrained to numbers, only: <code>x</code> could be a list, and <code>f</code> a list-to-list function, for example. Anyway, note that in GHCi you can use <code>:t expression</code> to get the type."}, {"owner": {"reputation": 976, "user_id": 1274282, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nBRxs.png?s=128&g=1", "display_name": "Taylor Fausak", "link": "https://stackoverflow.com/users/1274282/taylor-fausak"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1517796813, "post_id": 48601573, "comment_id": 84227035, "body": "Here is a link to the Reddit discussion thread that @amalloy mentioned: <a href=\"https://np.reddit.com/r/haskell/comments/7v1s37/how_would_you_define_these_types_in_haskell/\" rel=\"nofollow noreferrer\">np.reddit.com/r/haskell/comments/7v1s37/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 11, "last_activity_date": 1517692884, "last_edit_date": 1517692884, "creation_date": 1517689634, "answer_id": 48601675, "question_id": 48601573, "link": "https://stackoverflow.com/questions/48601573/how-would-you-define-these-types-in-haskell/48601675#48601675", "title": "How would you define these types in Haskell?", "body": "<p>You can construct the type by looking how the types are applied and what functions you use.</p>\n\n<h1><code>threetimes</code></h1>\n\n<p>Take for instance:</p>\n\n<pre><code>threetimes f x = f (f (f x))\n</code></pre>\n\n<p>Here we first will assume that <code>f</code> has type <code>a</code> (so <code>f :: a</code>), and <code>x</code> has type <code>b</code> (so <code>x :: b</code>).</p>\n\n<p>Now we take a look at the body of the function, the most inner expression is <code>f x</code>, so that means that <code>f</code> is a function, it takes an <code>x</code> as input, so it is a function <code>f :: b -&gt; c</code>. The type of <code>f x</code> is thus <code>f x :: c</code>. But now we look at <code>f (f x)</code>, since <code>f x :: c</code>, thus thus means that the input type for <code>f</code> should be <code>c</code>, but we already set it to <code>b</code>, so as a result we know that <code>b</code> and <code>c</code> are the same type so <code>b ~ c</code>, and <code>f :: b -&gt; b</code>, and <code>f (f x) :: b</code>.</p>\n\n<p>We then take a look at the entire expression <code>f (f (f x))</code>. So that means that the type is <code>b</code>, so we conclude that:</p>\n\n<pre><code>threetimes :: (b -&gt; b) -&gt; b -&gt; b\n</code></pre>\n\n<h1><code>triple</code></h1>\n\n<p>For <code>triple x</code>, we look at:</p>\n\n<pre><code>triple x = x * 3\n</code></pre>\n\n<p>Operators are actually a convenient way to write functions, we actually wrote:</p>\n\n<pre><code>triple x = (*) x 3\n</code></pre>\n\n<p>If we take a look at the <code>(*)</code> function, as well as to the <code>3</code> literal, we see that:</p>\n\n<pre><code>(*) :: Num a =&gt; a -&gt; a -&gt; a\n3 :: Num b =&gt; b\n</code></pre>\n\n<p>So that means that we know that <code>x</code> is of type <code>a</code> (i.e. <code>x :: Num a =&gt; a</code>), and the since we thus then apply a <code>Num a =&gt; a -&gt; a</code> to <code>3</code>, then this means that <code>a ~ b</code>, so as a result the type is:</p>\n\n<pre><code>triple :: Num a =&gt; a -&gt; a\n</code></pre>\n\n<h1><code>last</code></h1>\n\n<p>We can again take a look at <code>head</code> and <code>reverse</code>:</p>\n\n<pre><code>reverse :: [a] -&gt; [a]\nhead :: [b] -&gt; b\n</code></pre>\n\n<p>So if we now analyze:</p>\n\n<pre><code>last xs = head (reverse xs)\n</code></pre>\n\n<p>this means that we call <code>reverse</code> with <code>xs</code> as argument, as a result we know that <code>xs :: [a]</code>, and that <code>reverse xs :: [a]</code>, we then call <code>head</code> with <code>(reverse xs)</code> as argument, so now we know that <code>[a] ~ [b]</code>, and as a consequence <code>a ~ b</code>. We also can conclude that <code>head (reverse xs) :: a</code>, so this means that:</p>\n\n<pre><code>last :: [a] -&gt; a\n</code></pre>\n"}], "owner": {"reputation": 121, "user_id": 7023122, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/4fc771105a47761221bba39fd522effe?s=128&d=identicon&r=PG&f=1", "display_name": "James Johnson", "link": "https://stackoverflow.com/users/7023122/james-johnson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1517692884, "creation_date": 1517688844, "question_id": 48601573, "link": "https://stackoverflow.com/questions/48601573/how-would-you-define-these-types-in-haskell", "title": "How would you define these types in Haskell?", "body": "<p>I'm in the process of learning Haskell, but am finding it really difficult to understand what seems to be the most basic of things! For one, understanding types. \nFor example, I don't really understand the types of these functions,</p>\n\n<pre><code>threetimes f x = f (f (f x))\n</code></pre>\n\n<p>or </p>\n\n<pre><code>triple x = x * 3\n</code></pre>\n\n<p>Wouldn't triple x and threetimes be of type integer because they take values and apply operations on them?</p>\n\n<p>Also when looking at the last function,</p>\n\n<pre><code>last xs = head (reverse xs)\n</code></pre>\n\n<p>What is the type of last? </p>\n\n<p>Thanks guys. Sorry if the question seems to basic!</p>\n"}, {"tags": ["haskell", "nixos", "keter"], "answers": [{"comments": [{"owner": {"reputation": 554, "user_id": 1146898, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/413b69be81046e5a73b343424248ce73?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/1146898/ben"}, "edited": false, "score": 0, "creation_date": 1517731544, "post_id": 48602955, "comment_id": 84208272, "body": "Ooh, that makes sense. <code>pprjam</code> depends on <code>libpqxx</code>, but can&#39;t find it. I guess I just need to use <code>nix-copy-closure</code> to deploy <code>pprjam</code> and setup nginx as a frontend webserver instead of keter."}, {"owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "reply_to_user": {"reputation": 554, "user_id": 1146898, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/413b69be81046e5a73b343424248ce73?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/1146898/ben"}, "edited": false, "score": 0, "creation_date": 1517826736, "post_id": 48602955, "comment_id": 84237464, "body": "That&#39;s probably a better solution. Although keter is quite simple, it expect it to provide little benefit. Its killer feature, zero-downtime redeploys, can also be achieved with systemd socket activation."}, {"owner": {"reputation": 554, "user_id": 1146898, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/413b69be81046e5a73b343424248ce73?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/1146898/ben"}, "edited": false, "score": 0, "creation_date": 1517849443, "post_id": 48602955, "comment_id": 84251837, "body": "Zero-downtime redeploys was what I wanted it for most of all. I&#39;m not familiar with &quot;systemd socket activation&quot; but I will research it, thanks!"}], "tags": [], "owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "is_accepted": true, "score": 1, "last_activity_date": 1517698832, "creation_date": 1517698832, "answer_id": 48602955, "question_id": 48601385, "link": "https://stackoverflow.com/questions/48601385/how-to-build-deploy-keter-for-nixos/48602955#48602955", "title": "How to build &amp; deploy Keter for NixOS?", "body": "<p><code>exec</code> is actually a shell built-in, not a <code>coreutils</code> command. Actually the createProcess error message is confusing. The command name that can't be found comes before the <code>createProcess:</code>. So the problem is not that <code>pprjam</code> can not find <code>exec</code> (as a command), but <code>createProcess</code> detected a failed <code>exec</code> system call.</p>\n\n<p>It seems that <code>/opt/keter/temp/pprjam-0/dist/bin/pprjam</code> is missing on your server, or the runtime linker can not find <code>pprjam</code>'s dependencies. If the latter is the case, you may be able to fix it by extending the <code>LD_LIBRARY_PATH</code> environment variable of the Keter service.</p>\n"}], "owner": {"reputation": 554, "user_id": 1146898, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/413b69be81046e5a73b343424248ce73?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/1146898/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 48602955, "answer_count": 1, "score": 2, "last_activity_date": 1517698832, "creation_date": 1517687607, "question_id": 48601385, "link": "https://stackoverflow.com/questions/48601385/how-to-build-deploy-keter-for-nixos", "title": "How to build &amp; deploy Keter for NixOS?", "body": "<p>Here is my fork of Keter with <code>*.nix</code> files generated via <code>cabal2nix</code>: <a href=\"https://github.com/bsima/keter/tree/nix\" rel=\"nofollow noreferrer\">https://github.com/bsima/keter/tree/nix</a></p>\n\n<p>I did <code>nix-build shell.nix</code> on my dev machine (NixOS 17.09), then used <code>nix-copy-closure</code> to put it on my VPS on Digital Ocean (also NixOS 17.09, via nix-infect).</p>\n\n<p>I created a systemd service which starts just fine, but then Keter dies after trying to fork a process for the server:</p>\n\n<pre><code>2018-02-03 19:34:03.21: Data.Conduit.Process.Unix.monitorProcess: /opt/keter/temp/pprjam-0/dist/bin/pprjam: createProcess: runInteractiveProcess: exec: does not exist (No such file or directory)\n</code></pre>\n\n<p>It can't find <code>exec</code>, which I believe should be a part of <code>coreutils</code>. I doubt <code>coreutils</code> is missing, but just in case I put it in my <code>environment.systemPackages</code> and rebuilt, but it still didn't work.</p>\n\n<p>So that makes me think this is a <code>$PATH</code> problem, or <a href=\"https://github.com/NixOS/nixpkgs/issues/17267\" rel=\"nofollow noreferrer\">this issue</a> (which I don't quite understand, so I'm assuming it's more likely a <code>$PATH</code> problem).</p>\n\n<p>Is there something I have to do in Keter's <code>default.nix</code> in order to help it find <code>exec</code> on the <code>$PATH</code> of the target machine? What else am I missing here?</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517738493, "post_id": 48600930, "comment_id": 84209978, "body": "As a thumb rule, <code>:</code> is considered to be &quot;uppercase&quot; -- it can be used to start type and constructor names, but not other variables for values."}], "answers": [{"tags": [], "owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "is_accepted": true, "score": 13, "last_activity_date": 1517699537, "last_edit_date": 1517699537, "creation_date": 1517685316, "answer_id": 48601053, "question_id": 48600930, "link": "https://stackoverflow.com/questions/48600930/invalid-type-signature-for-in-haskell/48601053#48601053", "title": "Invalid type signature for (:==) in haskell", "body": "<p><code>(:==)</code> is not a valid symbol for a function or variable identifier in Haskell. Symbols starting with <code>:</code> are reserved for constructors (<code>data MyData a b = a :== b</code> is a valid alternative).<br>\nEither choose a different name for your function, or use <code>(,)</code> which is a perfectly valid function that does what your function does, or use something like the data type in the parentheses above.</p>\n\n<p>Source: <a href=\"https://www.haskell.org/onlinereport/lexemes.html#sect2.4\" rel=\"noreferrer\">Haskell 98 Report - Lexical Structure - Section 2.4</a></p>\n"}, {"tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": false, "score": 4, "last_activity_date": 1517705131, "last_edit_date": 1517705131, "creation_date": 1517685357, "answer_id": 48601060, "question_id": 48600930, "link": "https://stackoverflow.com/questions/48600930/invalid-type-signature-for-in-haskell/48601060#48601060", "title": "Invalid type signature for (:==) in haskell", "body": "<p><code>:==</code> is not a valid identifier for a function. Operator identifiers starting with a colon ':' are reserved for constructors.</p>\n\n<p>Consider defining your own pair type instead:</p>\n\n<pre><code>data MyPair a b = a :== b\n</code></pre>\n\n<p>If you are constructing some kind of small domain specific embedded language, this is an opportunity to give a meaningful name to the type, to distinguish it from ordinary pairs.</p>\n"}], "owner": {"reputation": 81, "user_id": 7334370, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh6.googleusercontent.com/-vlQRvZMKqto/AAAAAAAAAAI/AAAAAAAADu0/Oq_HBklkrwQ/photo.jpg?sz=128", "display_name": "M&#225;rton Kardos", "link": "https://stackoverflow.com/users/7334370/m%c3%a1rton-kardos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 458, "favorite_count": 0, "accepted_answer_id": 48601053, "answer_count": 2, "score": 1, "last_activity_date": 1517705131, "creation_date": 1517684532, "last_edit_date": 1517685340, "question_id": 48600930, "link": "https://stackoverflow.com/questions/48600930/invalid-type-signature-for-in-haskell", "title": "Invalid type signature for (:==) in haskell", "body": "<p>If I define the following function:</p>\n\n<pre><code>(:==) :: a -&gt; b -&gt; (a,b)\nx :== y = (x,y)\n</code></pre>\n\n<p>I get the error:</p>\n\n<pre><code>Op.hs:2:1: error:\n    Invalid type signature: (:==) :: ...\n    Should be of form &lt;variable&gt; :: &lt;type&gt;\n  |\n2 | (:==) :: a -&gt; b -&gt; (a,b)\n  | ^^^^^\n</code></pre>\n\n<p>Can anyone explain why?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1517682138, "post_id": 48600512, "comment_id": 84197717, "body": "Please don&#39;t post images of text and instead post the text."}, {"owner": {"reputation": 489, "user_id": 7496663, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/198e998b737574814b1f92f236e99ee4?s=128&d=identicon&r=PG&f=1", "display_name": "Adam  M.", "link": "https://stackoverflow.com/users/7496663/adam-m"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1517682361, "post_id": 48600512, "comment_id": 84197774, "body": "@ThomasM.DuBuisson I&#39;ve edited and fixed this now"}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 1, "creation_date": 1517684733, "post_id": 48600512, "comment_id": 84198500, "body": "The error is due to the fact that <code>dfs maze (curr : trail) curr `map` (adj c (fst curr) (snd curr) prev)</code> is a list of paths. to see this, remember that <code>dfs maze (curr : trail) curr :: Pos -&gt; Path</code> and that <code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</code>, in this case we have <code>b ~ Path</code> so we end up with <code>[Path]</code>. How to resolve this depends on what you want to achieve, maybe take the head, maybe use listToMaybe(thus returning a <code>Maybe Path</code> instead of an error when there are no paths). Also, a line above that <code>null adj</code> doesn&#39;t compile either, because <code>adj</code> is a function."}, {"owner": {"reputation": 489, "user_id": 7496663, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/198e998b737574814b1f92f236e99ee4?s=128&d=identicon&r=PG&f=1", "display_name": "Adam  M.", "link": "https://stackoverflow.com/users/7496663/adam-m"}, "reply_to_user": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1517684929, "post_id": 48600512, "comment_id": 84198554, "body": "@M.Aroosi right, I see what you&#39;re saying I&#39;ll have to do some reading about how maybe works to understand exactly to solve this in the context of my problem"}], "answers": [{"comments": [{"owner": {"reputation": 489, "user_id": 7496663, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/198e998b737574814b1f92f236e99ee4?s=128&d=identicon&r=PG&f=1", "display_name": "Adam  M.", "link": "https://stackoverflow.com/users/7496663/adam-m"}, "edited": false, "score": 0, "creation_date": 1517688150, "post_id": 48601067, "comment_id": 84199499, "body": "Your post has helped me immensely and I am very impressed with how well written it is, but I am now running into a <code>Prelude.!!: negative index</code> error which is frustrating because there is no line number referenced and removing the possibility of a negative value in a <code>Pos</code> type still causes the error"}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 1, "last_activity_date": 1517687419, "last_edit_date": 1517687419, "creation_date": 1517685376, "answer_id": 48601067, "question_id": 48600512, "link": "https://stackoverflow.com/questions/48600512/haskell-cannot-get-right-type-from-cons-operator/48601067#48601067", "title": "Haskell cannot get right type from &#39;:&#39; cons operator", "body": "<p>Lets zoom in on two lines.  First is the type of dfs:</p>\n\n<pre><code>dfs :: Maze -&gt;Path -&gt; Pos -&gt; Pos -&gt; Path\n</code></pre>\n\n<p>So dfs when fully applied returns a <code>Path</code>, great.</p>\n\n<p>We also have the definition of dfs, which must return a Path, is:</p>\n\n<pre><code>dfs maze (curr : trail) curr `map` (adj c (fst curr) (snd curr) prev)\n</code></pre>\n\n<p>Or with some simplifications to make explicit what is going on:</p>\n\n<pre><code>map (dfs and some args) (some list)\n</code></pre>\n\n<p>So dfs must return a path, so says the type, but the definition shows it as returning a list of paths.</p>\n\n<p>What you seem to want is try to descend into one of the adjacent positions and perform a depth first search then descend into the next possible path, taking advantage of lazy evaluation along the way - great!</p>\n\n<ol>\n<li><p>Lets change dfs to returning a list of Paths (<code>[Path]</code>) - that will be a list of solutions or non-solutions (<code>[]</code>) if a dead end is found.  Change <code>reverse ...</code> to <code>[reverse ...]</code>.  and <code>map</code> to <code>concatMap</code>.</p></li>\n<li><p>It doesn't make sense to ask if a function is null, I think you ment the application of <code>adj</code> such as <code>null (adj c (fst curr) ...</code>.</p></li>\n<li><p>Find path now has to select one of the list of solutions now returned by dfs - the first one should suffice.  You can use <code>listToMaybe</code> to get a <code>Maybe Path</code> result.</p></li>\n</ol>\n\n<p>.</p>\n\n<pre><code>import Data.Maybe (listToMaybe)\n\ntype Maze = [[Cell]]    \ndata Cell = Cell { top, left, right, bottom :: Bool }    \ntype Pos = (Int, Int)    \ntype Path = [Pos]\n\nfindPath :: Maze -&gt; Maybe Path\nfindPath [] = Just []\nfindPath  maze = listToMaybe $ dfs maze [] (-1,-1) (1,1)\n\ndfs :: Maze -&gt;Path -&gt; Pos -&gt; Pos -&gt; [Path]\ndfs maze trail prev curr\n    | (curr == goal) = [reverse $ goal : trail] -- ?\n    | (null adjVal)  = []\n    | otherwise      = dfs maze (curr : trail) curr `concatMap` adjVal\n    where   c = maze!!(fst curr- 1)!!(snd curr - 1)\n            goal = (length maze, length (maze!!0))\n            adjVal = adj c (fst curr) (snd curr) prev\n\nadj:: Cell -&gt; Int -&gt; Int -&gt; Pos -&gt;Path\nadj c x y prev =     if (top c &amp;&amp; prev /= (x-1, y)) then [(x-1, y)] else [] ++\n                     if (left c &amp;&amp; prev /= (x, y-1)) then [(x, y-1)] else [] ++\n                     if (right c &amp;&amp; prev /= (x, y+1)) then [(x, y+1)] else [] ++\n                     if (bottom c &amp;&amp; prev /= (x+1, y)) then [(x+1, y)] else []\n</code></pre>\n\n<p>There are lots of other things you can clean up if you so desire.</p>\n\n<ul>\n<li><code>[]</code> to signify a failed path instead of <code>Maybe Path</code>.  If the first depth-first search fails then your returned \"solution\" will be <code>[]</code>.</li>\n<li>Use of <code>!!</code> and assumption the input is not jagged.  You could use an array.</li>\n<li>Verbose definition of <code>adj</code> that could use guards instead.</li>\n</ul>\n"}], "owner": {"reputation": 489, "user_id": 7496663, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/198e998b737574814b1f92f236e99ee4?s=128&d=identicon&r=PG&f=1", "display_name": "Adam  M.", "link": "https://stackoverflow.com/users/7496663/adam-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 48601067, "answer_count": 1, "score": 0, "last_activity_date": 1517687419, "creation_date": 1517681961, "last_edit_date": 1517684703, "question_id": 48600512, "link": "https://stackoverflow.com/questions/48600512/haskell-cannot-get-right-type-from-cons-operator", "title": "Haskell cannot get right type from &#39;:&#39; cons operator", "body": "<p>I am getting an error where I am trying to use map in a depth first search algorithm to test paths to contain the goal cell in a maze that is undirected, and without cycles. where I am running into trouble is with the recursive call with map.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>type Maze = [[Cell]]\n\ndata Cell = Cell { top, left, right, bottom :: Bool }\n\ntype Pos = (Int, Int)\n\ntype Path = [Pos]\n\nfindPath :: Maze -&gt; Path\nfindPath [] = []\nfindPath  maze = dfs maze [] (-1,-1) (1,1) \n\ndfs :: Maze -&gt;Path -&gt; Pos -&gt; Pos -&gt; Path\ndfs maze trail prev curr  \n    | (curr == goal) = reverse $ goal : trail -- ?\n    | (null adj)     = []\n    | otherwise      = dfs maze (curr : trail) curr `map` (adj c (fst curr) (snd curr) prev)\n    where   c = maze!!(fst curr- 1)!!(snd curr - 1)\n            goal = (length maze, length (maze!!0))\n\n\n\nadj:: Cell -&gt; Int -&gt; Int -&gt; Pos -&gt;Path\nadj c x y prev =     if (top c &amp;&amp; prev /= (x-1, y)) then [(x-1, y)] else [] ++  \n                     if (left c &amp;&amp; prev /= (x, y-1)) then [(x, y-1)] else [] ++  \n                     if (right c &amp;&amp; prev /= (x, y+1)) then [(x, y+1)] else [] ++  \n                     if (bottom c &amp;&amp; prev /= (x+1, y)) then [(x+1, y)] else []\n</code></pre>\n\n<p>what I expect with <code>dfs maze (curr : trail) curr 'map' (adj c (fst curr) (snd curr) prev)</code> is that I apply a function <code>f::Pos-&gt;trail</code> to each element in <code>[Pos]</code> but what the <code>(curr : trail)</code> gives is a <code>[Path]</code> rather than a <code>Path</code></p>\n\n<p>The error stack gives me is as follows:</p>\n\n<pre><code>stack: WARNING! Expecting stack options comment at line 1, column 1\nstack: WARNING! Missing or unusable stack options specification\nstack: WARNING! Using runghc without any additional stack options\n\nSolveMaze.hs:77:24: error:\n    * Couldn't match type `[Pos]' with `(Int, Int)'\n      Expected type: Path\n        Actual type: [Path]\n    * In the expression:\n        dfs maze (curr : trail) curr\n          `map` (adj c (fst curr) (snd curr) prev)\n      In an equation for `dfs':\n          dfs maze trail prev curr\n            | (curr == goal) = reverse $ goal : trail\n            | (null adj) = []\n            | otherwise\n            = dfs maze (curr : trail) curr\n                `map` (adj c (fst curr) (snd curr) prev)\n            where\n                c = maze !! (fst curr - 1) !! (snd curr - 1)\n                goal = (length maze, length (maze !! 0))\n   |\n77 |     | otherwise      = dfs maze (curr : trail) curr `map` (adj c (fst curr)\n (snd curr) prev)\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I am sorry if this is a really basic problem for you Haskell wizards but I've been staring at this for so long that I can't take it and needed to reach out for help. Thank you.</p>\n"}, {"tags": ["haskell", "syntax", "boilerplate", "recursion-schemes"], "answers": [{"comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 2, "creation_date": 1517745041, "post_id": 48601147, "comment_id": 84211715, "body": "Personally, I don&#39;t like <code>exprF (+) (*) id</code> way of calling function. Looks error-prone because it&#39;s easy to mess up parameters (swap <code>+</code> and <code>*</code>). Specifying explicitly mapping from constructor to functions looks better to me."}], "tags": [], "owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "is_accepted": false, "score": 3, "last_activity_date": 1517685934, "creation_date": 1517685934, "answer_id": 48601147, "question_id": 48600170, "link": "https://stackoverflow.com/questions/48600170/how-to-write-less-boilerplate-in-a-expression-evaluator-written-with-recursion-s/48601147#48601147", "title": "How to write less boilerplate in a expression evaluator written with recursion-schemes", "body": "<p><a href=\"https://hackage.haskell.org/package/catamorphism-0.5.1.0/docs/Data-Morphism-Cata.html\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/catamorphism-0.5.1.0/docs/Data-Morphism-Cata.html</a> derives a catamorphism for <code>ExprF</code>.</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE DeriveFunctor #-} \n{-# LANGUAGE DeriveFoldable #-} \n{-# LANGUAGE DeriveTraversable #-}\n{-# LANGUAGE TemplateHaskell #-}\n\nimport Data.Functor.Foldable \nimport Data.Functor.Foldable.TH\nimport Data.Morphism.Cata\n\ndata Expr \n  = Plus Expr Expr \n  | Mult Expr Expr \n  | Const Expr \n  deriving (Show, Eq)\nmakeBaseFunctor ''Expr\n$(makeCata defaultOptions ''ExprF)\n\n-- Write a simple evaluator\neval :: Expr -&gt; Int \neval = cata $ exprF (+) (*) id\n</code></pre>\n\n<p>Note that it can also derive a catamorphism for <code>Expr</code>, yielding <code>eval = expr (+) (*) id</code> and letting you skip <code>Data.Functor.Foldable.TH</code> for this specific usecase.</p>\n"}, {"tags": [], "owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "is_accepted": true, "score": 1, "last_activity_date": 1518189844, "creation_date": 1518189844, "answer_id": 48708993, "question_id": 48600170, "link": "https://stackoverflow.com/questions/48600170/how-to-write-less-boilerplate-in-a-expression-evaluator-written-with-recursion-s/48708993#48708993", "title": "How to write less boilerplate in a expression evaluator written with recursion-schemes", "body": "<p>Alternatively you could refactor your language to have binary operations on one hand and unary ones on the other. You'd write:</p>\n\n<pre><code>data BinOp = PlusOp | MultOp deriving (Show, Eq)\ndata UnOp  = ConstOp deriving (Show, Eq)\n\ndata Expr  = Bin BinOp Expr  Expr\n           | Un  UnOp  Expr\n         deriving (Show, Eq)\nmakeBaseFunctor ''Expr\n</code></pre>\n\n<p>The evaluator then becomes:</p>\n\n<pre><code>eval :: Expr -&gt; Int\neval = cata $ \\case\n  BinF op l r -&gt; bin op l r\n  UnF  op v   -&gt; un op v\n  where\n    bin = \\case\n      PlusOp -&gt; (+)\n      MultOp -&gt; (*)\n\n    un = \\case\n      ConstOp -&gt; id\n</code></pre>\n"}], "owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 3, "accepted_answer_id": 48708993, "answer_count": 2, "score": 5, "last_activity_date": 1518189844, "creation_date": 1517679810, "question_id": 48600170, "link": "https://stackoverflow.com/questions/48600170/how-to-write-less-boilerplate-in-a-expression-evaluator-written-with-recursion-s", "title": "How to write less boilerplate in a expression evaluator written with recursion-schemes", "body": "<p>With the <a href=\"http://hackage.haskell.org/package/recursion-schemes\" rel=\"noreferrer\">recursion-scheme</a> library \nit's easy to write abstract syntax trees and the corresponding expression evaluators:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE DeriveFunctor #-} \n{-# LANGUAGE DeriveFoldable #-} \n{-# LANGUAGE DeriveTraversable #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE LambdaCase #-}\n\nimport Data.Functor.Foldable \nimport Data.Functor.Foldable.TH\n\ndata Expr  = Plus Expr  Expr \n           | Mult Expr Expr \n           | Const Expr \n         deriving (Show, Eq)\nmakeBaseFunctor ''Expr  \n-- Write a simple evaluator\neval :: Expr -&gt; Int \neval = cata alg \n  where \n    alg = \\case\n      PlusF  x y  -&gt; (+) x y\n      MultF  x y  -&gt; (*) x y\n      ConstF x    -&gt; x \n</code></pre>\n\n<p>Now look at the case in the <code>alg</code> function in the where clause of <code>eval</code>. I think all the <code>x</code> and <code>y</code> variables \nshould not be necessary. Therefore I'm looking for some way (a syntax, a language extension etc.)\nto remove this boilerplate and just to write:</p>\n\n<pre><code>  PlusF  -&gt; (+)\n  MultF  -&gt; (*)\n  ConstF -&gt; id \n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 241, "user_id": 5622934, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3ac80aebf3caef245b0627aaff0a6039?s=128&d=identicon&r=PG&f=1", "display_name": "BigMeister", "link": "https://stackoverflow.com/users/5622934/bigmeister"}, "edited": false, "score": 0, "creation_date": 1517675020, "post_id": 48599420, "comment_id": 84195400, "body": "And why if I write the signatures this way:  sum :: (Num a, Num c) =&gt; a -&gt; a -&gt; c It still does not work?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1517675983, "post_id": 48599420, "comment_id": 84195727, "body": "That implies you convert between <code>Num</code> types.  If you are given a <code>Num</code> constraint then all you know how to do is basic arithmetic and convert from an Integer (see <code>:info Num</code> in GHCi).  So you can write a <code>sum</code> with that signature but the implementation would have to look something like <code>sum _ _ = fromInteger 42</code> since you have no way to convert the input <code>a</code> types to arbitrary output <code>c</code> types."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 241, "user_id": 5622934, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3ac80aebf3caef245b0627aaff0a6039?s=128&d=identicon&r=PG&f=1", "display_name": "BigMeister", "link": "https://stackoverflow.com/users/5622934/bigmeister"}, "edited": false, "score": 0, "creation_date": 1517679933, "post_id": 48599420, "comment_id": 84196993, "body": "@BigMeister: there are no generic ways to convert any num to any num, since you could for instance introduce an <i>algebraic</i> num as well."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1517674714, "creation_date": 1517674714, "answer_id": 48599420, "question_id": 48599388, "link": "https://stackoverflow.com/questions/48599388/haskell-signatures-basics/48599420#48599420", "title": "Haskell signatures: basics", "body": "<p>Because the <code>(+)</code> function has signature:</p>\n\n<pre><code>(+) :: Num a =&gt; <b>a</b> -&gt; <b>a</b> -&gt; <b>a</b></code></pre>\n\n<p>So that means that the <code>(+)</code> function <strong>requires the operands to have the same type</strong>, and the result has the same type as the operands.</p>\n\n<p>Your signature would mean that a programmer can pick any <code>Num</code> type as first operand, and any <code>Num</code> type as second operand, and then construct <em>any</em> type. So it would mean that I could specialize the function into <code>sum :: Int -&gt; Float -&gt; Char</code>, but there is no such <code>(+)</code> defined.</p>\n\n<p>We <em>can</em> make the type more flexible, for instance by using <code>fromIntegral :: (Integral a, Num b) =&gt; a -&gt; b</code>:</p>\n\n<pre><code>integralSum :: (Integral i, Integral j, Num c) =&gt; i -&gt; j -&gt; c\nintegralSum x y = fromIntegral x + fromIntegral y\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "is_accepted": false, "score": 5, "last_activity_date": 1517760732, "last_edit_date": 1517760732, "creation_date": 1517674754, "answer_id": 48599430, "question_id": 48599388, "link": "https://stackoverflow.com/questions/48599388/haskell-signatures-basics/48599430#48599430", "title": "Haskell signatures: basics", "body": "<p>Let's look at the type of the <code>+</code> operator. We can do this in <code>ghci</code> with the <code>:t</code> command:</p>\n\n<pre><code>Prelude&gt; :t (+)\n(+) :: Num a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>Note that both operands and the return value must all have the same type. This is why you get the compiler errors. You are allowing <code>sum</code> to take operands of two different types. So you can change your type signature to</p>\n\n<pre><code>sum :: (Num a, Num a) =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>If you want to add numbers of different types, you will need additional logic to convert the parameters to the same type before applying the <code>+</code> operator.</p>\n"}, {"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 7, "last_activity_date": 1517677056, "last_edit_date": 1517677056, "creation_date": 1517675273, "answer_id": 48599490, "question_id": 48599388, "link": "https://stackoverflow.com/questions/48599388/haskell-signatures-basics/48599490#48599490", "title": "Haskell signatures: basics", "body": "<p>For a different answer let's try ignoring everything besides the type signature.</p>\n\n<pre><code>sum :: (Num a, Num b) =&gt; a -&gt; b -&gt; c\n</code></pre>\n\n<p>This says that if I give you a value of some type and all you know is it is an instance of <code>Num</code> (the <code>a</code> type variable), and I give you a second value which could be a different type but also a <code>Num</code> (the <code>b</code> type variable), then you know how to give me a value of <em>any</em> type I ask for (<code>c</code>).</p>\n\n<p>That is,  I'm going to give you <code>(3%4 :: Rational)</code> and <code>(7.99 :: Double)</code>  could you please give me <code>val :: Config</code> which is the configuration structure for my web server?  The expression <code>sum (3%4) 7.99 :: Config</code> matches your type signature after all.</p>\n"}], "owner": {"reputation": 241, "user_id": 5622934, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3ac80aebf3caef245b0627aaff0a6039?s=128&d=identicon&r=PG&f=1", "display_name": "BigMeister", "link": "https://stackoverflow.com/users/5622934/bigmeister"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "accepted_answer_id": 48599420, "answer_count": 3, "score": 5, "last_activity_date": 1517760732, "creation_date": 1517674500, "last_edit_date": 1517674708, "question_id": 48599388, "link": "https://stackoverflow.com/questions/48599388/haskell-signatures-basics", "title": "Haskell signatures: basics", "body": "<p>Why this does not work exactly? </p>\n\n<pre><code>sum :: (Num a, Num b) =&gt; a -&gt; b -&gt; c\nsum a b = a + b\n</code></pre>\n\n<p>For sure, the error message is related to the signature but I continue to not understand the reason.</p>\n\n<pre><code>Couldn't match expected type \u2018a\u2019 with actual type \u2018b\u2019\n\u2018b\u2019 is a rigid type variable bound by\n  the type signature for:\n    sum :: forall a b c. (Num a, Num b) =&gt; a -&gt; b -&gt; c\n\n\u2018a\u2019 is a rigid type variable bound by\n  the type signature for:\n    sum :: forall a b c. (Num a, Num b) =&gt; a -&gt; b -&gt; c\n\nIn the second argument of \u2018(+)\u2019, namely \u2018b\u2019\nIn the expression: a + b\nIn an equation for \u2018sum\u2019: sum a b = a + b\n</code></pre>\n\n<p>What Am I missing?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 2, "creation_date": 1517670020, "post_id": 48598132, "comment_id": 84193867, "body": "Well, you can pass <code>-ddump-deriv</code> option to <code>ghc</code> compiler to see generated by GHC instances. But I don&#39;t think that in that case it will be very useful for you..."}], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 3, "last_activity_date": 1517670756, "creation_date": 1517670756, "answer_id": 48598816, "question_id": 48598132, "link": "https://stackoverflow.com/questions/48598132/how-to-implement-monad-monaderror-and-monadstate-for-a-monadic-parser-without-g/48598816#48598816", "title": "How to implement Monad, MonadError and MonadState for a monadic parser without GeneralizedNewTypederiving extension?", "body": "<p><code>GeneralizedNewtypeDeriving</code> wraps the instances of the underlying type (in your case, <code>ExceptT String (State String)</code>) with the <code>newtype</code> boilerplate. The <code>Functor</code> one, for example, amounts to:</p>\n\n<pre><code>-- p :: ExceptT String (State String) a\ninstance Functor Parser where\n    fmap f (Parser p) = Parser (fmap f p)\n    -- Or, equivalently:\n    -- fmap f = Parser . fmap f . runParser\n</code></pre>\n\n<p>As for what the underlying instances do, you can check their sources by following the \"Source\" links for the instances in the docs. <a href=\"https://hackage.haskell.org/package/transformers-0.5.5.0/docs/Control-Monad-Trans-Except.html#t:ExceptT\" rel=\"nofollow noreferrer\"><code>Functor</code> for <code>ExceptT</code></a>, for example, is:</p>\n\n<pre><code>instance (Functor m) =&gt; Functor (ExceptT e m) where\n    fmap f = ExceptT . fmap (fmap f) . runExceptT\n</code></pre>\n\n<p>(The nested <code>fmap</code>s are there because the underlying type of <code>ExceptT e m a</code> is <code>m (Either e a)</code>, and so there are two <code>Functor</code> layers to get through: <code>m</code> and <code>Either</code>.)</p>\n"}, {"tags": [], "owner": {"reputation": 3567, "user_id": 4019871, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/7db9ac6bdc0a996dd01da64b3660f8b6?s=128&d=identicon&r=PG&f=1", "display_name": "Mas Bagol", "link": "https://stackoverflow.com/users/4019871/mas-bagol"}, "is_accepted": false, "score": 0, "last_activity_date": 1517760346, "creation_date": 1517760346, "answer_id": 48610110, "question_id": 48598132, "link": "https://stackoverflow.com/questions/48598132/how-to-implement-monad-monaderror-and-monadstate-for-a-monadic-parser-without-g/48610110#48610110", "title": "How to implement Monad, MonadError and MonadState for a monadic parser without GeneralizedNewTypederiving extension?", "body": "<p>It took me almost the whole day to figure out how implement this. But, after I\nfigure it out, the concept is actually pretty simple. The whole point is to dig\nthrough the monad stack to apply a function that is to be implemented and then\nbury the result in the monad stack again. Those jobs can be done with these\nfunctions:</p>\n\n<pre><code>unwrap :: Parser a -&gt; String -&gt; (Either String a, String)\nunwrap p s = runState (runExceptT (runParser p)) s\n\nwrap :: (String -&gt; (Either String a, String)) -&gt; Parser a\nwrap f = Parser (ExceptT (state (\\s -&gt; (f s))))\n</code></pre>\n\n<p>So, to make the Parser an instance of <code>Functor</code>, <code>Applicative</code>, <code>Monad</code>,\n<code>MonadError</code> and <code>MonadState</code>I can just define a lambda or a function inside\n<code>where</code> binding and then wrap it with <code>wrap</code>.</p>\n\n<p>Here is the instances implementation:</p>\n\n<pre><code>instance Functor Parser where\n  fmap f p = wrap fn\n    where fn s = let (ea, s') = unwrap p s\n                  in case ea of\n                       Right a -&gt; (Right (f a), s')\n                       Left  e -&gt; (Left e, s)\n\ninstance Applicative Parser where\n  pure x    = wrap fn\n    where fn s = (Right x, s)\n\n  p1 &lt;*&gt; p2 = wrap fn\n    where fn s = let (ef, s')  = unwrap p1 s\n                     (ea, s'') = unwrap p2 s'\n                  in run ef ea s'' s\n\n          run (Right f) (Right a) s' s = (Right (f a), s')\n          run (Left  e) _         s' s = (Left e, s)\n          run _         (Left e)  s' s = (Left e, s)\n\ninstance Monad Parser where\n  return  = pure\n\n  p &gt;&gt;= f = wrap fn\n    where fn s = let (ea, s') = unwrap p s\n                  in case ea of\n                       Right a -&gt; unwrap (f a) s'\n                       Left  e -&gt; (Left e, s)\n\ninstance MonadError String Parser where\n  throwError err = wrap fn\n    where fn s = (Left err, s)\n\n  catchError p h = wrap fn\n    where fn s = let (ea, s') = unwrap p s\n                  in case ea of\n                       Right a -&gt; (Right a, s')\n                       Left  e -&gt; unwrap (h e) s\n\ninstance MonadState String Parser where\n  get   = wrap fn\n    where fn s = (Right s, s)\n\n  put s = wrap fn\n    where fn s = (Right (), s)\n</code></pre>\n\n<p>With that, the parser now can be used like this:</p>\n\n<pre><code>item :: Parser Char\nitem = do\n  s &lt;- get\n  case s of\n    []     -&gt; throwError \"unexpected end of input\"\n    (c:cs) -&gt; do put cs\n                 return c\n\nsatisfy :: (Char -&gt; Bool) -&gt; Parser Char\nsatisfy p = item &gt;&gt;= \\c -&gt; if p c then return c else throwError $ \"unexpected: \" ++ show c\n\nchar :: Char -&gt; Parser Char\nchar c = satisfy (c ==)\n\nmain :: IO ()\nmain = do\n  print $ unwrap item \"c\"\n  print $ unwrap (char 'c') \"c\"\n  print $ unwrap (satisfy isDigit) \"c\"\n</code></pre>\n"}], "owner": {"reputation": 3567, "user_id": 4019871, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/7db9ac6bdc0a996dd01da64b3660f8b6?s=128&d=identicon&r=PG&f=1", "display_name": "Mas Bagol", "link": "https://stackoverflow.com/users/4019871/mas-bagol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1517760346, "creation_date": 1517666097, "question_id": 48598132, "link": "https://stackoverflow.com/questions/48598132/how-to-implement-monad-monaderror-and-monadstate-for-a-monadic-parser-without-g", "title": "How to implement Monad, MonadError and MonadState for a monadic parser without GeneralizedNewTypederiving extension?", "body": "<p>I found a Parser example in haskell that use monadic error handling and state.\nIt's written like this.</p>\n\n<pre><code>{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n\nimport Control.Monad.Except\nimport Control.Monad.State\n\nnewtype Parser a\n  = Parser { runParser :: ExceptT String (State String) a }\n    deriving ( Functor\n             , Applicative\n             , Monad\n             , MonadError String\n             , MonadState String\n             )\n</code></pre>\n\n<p>I understand what it does and how to use it. But, what I want to know is how\nit's implemented without <code>GeneralizedNewtypeDeriving</code> extension.</p>\n\n<p>So, how to make <code>Parser</code> an instance of <code>Functor</code>, <code>Applicative</code>, <code>Monad</code>,\n<code>MonadError</code>, <code>MonadState</code> if there is no <code>GeneralizedNewtypeDeriving</code>\nextension?</p>\n"}, {"tags": ["haskell", "garbage-collection", "ghc"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517660555, "post_id": 48596428, "comment_id": 84191239, "body": "I&#39;d guess GC reads everything during a major cycle, forcing the swap-in. I&#39;m not sure about this, especially in generational GC, but it might be the case. If you have large vectors/bytestrings, those shouldn&#39;t be affected much, though."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 2, "creation_date": 1517662321, "post_id": 48596428, "comment_id": 84191687, "body": "Could the experimental &quot;compact regions&quot; feature help here? <a href=\"http://hackage.haskell.org/package/compact\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/compact</a> I&#39;m not sure how it interacts with swapping, though."}], "answers": [{"tags": [], "owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "is_accepted": true, "score": 2, "last_activity_date": 1517726466, "creation_date": 1517726466, "answer_id": 48605488, "question_id": 48596428, "link": "https://stackoverflow.com/questions/48596428/does-ghc-runtime-access-old-data-even-if-my-app-doesnt/48605488#48605488", "title": "Does GHC runtime access old data even if my app doesn&#39;t?", "body": "<p>GHC uses a copying collector in which the trees of live/reachable data is copied over to a new region, which means major GC pause times increase with the size of your working set which can be counterintuitive. </p>\n\n<p>The property of \"most data being idle\" is not an uncommon one, and I think is closely related to the <em>generational hypothesis</em> which motivates generational GC, which GHC uses.</p>\n\n<p>However it sounds like you're talking about something like e.g. caching a bunch of data in memory. This is known to be problematic for the reasons above (long GC pauses, or maybe bad behavior). Compact regions are a sort of experimental feature that might work as the basis of a library for working with boxed data in this way, though I don't think anyone knows if they're a good idea yet.</p>\n\n<p>So it seems clear if your data is swapped out this will only make an already bad situation (long GC pauses for large working set) much worse.</p>\n"}], "owner": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 48605488, "answer_count": 1, "score": 3, "last_activity_date": 1517726466, "creation_date": 1517654398, "question_id": 48596428, "link": "https://stackoverflow.com/questions/48596428/does-ghc-runtime-access-old-data-even-if-my-app-doesnt", "title": "Does GHC runtime access old data even if my app doesn&#39;t?", "body": "<p>I'm wondering if it's a good idea to run ghc with tons of swap space, or if it's even feasible. I have a workload where most data is idle 99% of the time. A very small set of the data is actually being actively used at any given time. This sounds like a perfect time to let the kernel swap memory, but gc is usually a problem. Haskell only has immutable values, though, so in theory it could work.</p>\n\n<p>Does the ghc runtime read old values, forcing me to swap in/out on each gc or something, or can I expect memory that I'm not touching to not be swapped in?</p>\n\n<p>Feel free to edit the title, I couldn't think of a good description that fit.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1517680584, "post_id": 48595381, "comment_id": 84197217, "body": "There is also a <a href=\"https://stackoverflow.com/q/8745597/791604\">good semantic reason</a> to rule out differing numbers of arguments; it is not just to catch an easy error."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1517804322, "post_id": 48595381, "comment_id": 84228499, "body": "@DanielWagner I really don&#39;t see what it has to do with the number of arguments.  How is <code>foo Nothing = ... ; foo x = x</code> not a semantic problem in the same way with the &quot;equation&quot; <code>foo x = x</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1517846764, "post_id": 48595381, "comment_id": 84250107, "body": "The current rules have the following nice property: pattern matches are tried in order, yes, but once you find a pattern that matches, the equality as written is actually an equality that you can use to reason about your program. If equations with different numbers of arguments were allowed, the link shows how that property would fail: we would be able to write <code>foo = undefined</code> and have that <i>not</i> be an equality that could be used for reasoning (even when the previous patterns don&#39;t match), because the true equality would be <code>foo = \\_ _ -&gt; undefined</code>, and those two are distinguishable."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 7, "last_activity_date": 1517652687, "last_edit_date": 1517652687, "creation_date": 1517646051, "answer_id": 48595381, "question_id": 48595326, "link": "https://stackoverflow.com/questions/48595326/how-to-remove-the-trivial-parameter/48595381#48595381", "title": "How to remove the trivial parameter?", "body": "<p>Yeah you can't have different numbers of arguments for different clauses of the same function.  It's mostly to catch the common error of leaving out a parameter on one of the lines, so instead of a confusing type error it just tells you what you did wrong straight away.</p>\n\n<p>If you don't want the <code>m</code> there, you could make the wholething pointfree with the <code>maybe</code> eliminator</p>\n\n<pre><code>errorWhenNothing :: Maybe a -&gt; M a\nerrorWhenNothing = maybe (throwError \"isNothing!\") return\n</code></pre>\n\n<p>whether this is an improvement is a matter of opinion.</p>\n"}, {"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 6, "last_activity_date": 1517652786, "last_edit_date": 1517652786, "creation_date": 1517652609, "answer_id": 48596170, "question_id": 48595326, "link": "https://stackoverflow.com/questions/48595326/how-to-remove-the-trivial-parameter/48596170#48596170", "title": "How to remove the trivial parameter?", "body": "<p>Why return a <code>Maybe</code> from <code>errorWhenNothing</code>? If the input were <code>Nothing</code>, the computation would have been aborted with a <code>throwError</code> anyway. Having to pattern-match on the result of the function seems like needless work, because we <em>know</em> at that point that it is not <code>Nothing</code>.</p>\n\n<p>Perhaps we could rewrite the function like this:</p>\n\n<pre><code>errorWhenNothing :: Maybe a -&gt; M a\nerrorWhenNothing Nothing = throwError \"is Nothing!\"\nerrorWhenNothing (Just a) = return a\n</code></pre>\n\n<p>Now the second clause doesn't pass the parameter unchanged.</p>\n"}], "owner": {"reputation": 845, "user_id": 4131972, "user_type": "registered", "accept_rate": 89, "profile_image": "https://lh4.googleusercontent.com/--SIseZZR51U/AAAAAAAAAAI/AAAAAAAAAAw/xWroBmQMpfk/photo.jpg?sz=128", "display_name": "hliu", "link": "https://stackoverflow.com/users/4131972/hliu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 48595381, "answer_count": 2, "score": 2, "last_activity_date": 1517652786, "creation_date": 1517645641, "question_id": 48595326, "link": "https://stackoverflow.com/questions/48595326/how-to-remove-the-trivial-parameter", "title": "How to remove the trivial parameter?", "body": "<p>I have a function defined as follow:</p>\n\n<pre><code>errorWhenNothing :: Maybe a -&gt; M (Maybe a) -- M is a Monad\nerrorWhenNothing Nothing = throwError \"is Nothing!\"\nerrorWhenNothing m = return m\n</code></pre>\n\n<p>The parameter <code>m</code> seems trivial and removing it makes the function simpler and more compact. The problem is that I cannot rewrite the second definition as </p>\n\n<pre><code>errorWhenNothing = return\n</code></pre>\n\n<p>GHC complains <code>Equations for 'errorWhenNothing' have different numbers of arguments..</code></p>\n\n<p>I want to know is there a way to remove the <code>m</code>?</p>\n"}, {"tags": ["haskell", "conduit", "network-conduit"], "comments": [{"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1517650020, "post_id": 48594530, "comment_id": 84188615, "body": "To clarify, do you mean that you want to implement a protocol and use <code>conduit</code> in its implementation or do you mean that you would want to be able to send a bar-struct down a foo-protocol conduit and have the right header and data bytes sent down a tcp stream?"}, {"owner": {"reputation": 409, "user_id": 899333, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3c36106bbf7b90e4d67d54e37863feb?s=128&d=identicon&r=PG", "display_name": "Tom Kludy", "link": "https://stackoverflow.com/users/899333/tom-kludy"}, "reply_to_user": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1517668660, "post_id": 48594530, "comment_id": 84193476, "body": "The former.. I want to do something a bit like socks5, implementing it using conduit.  What I\u2019m mainly stuck on is how to do control flow based on data in the stream."}], "answers": [{"tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": true, "score": 3, "last_activity_date": 1517747007, "creation_date": 1517747007, "answer_id": 48607999, "question_id": 48594530, "link": "https://stackoverflow.com/questions/48594530/non-trivial-protocol-using-haskell-conduit/48607999#48607999", "title": "Non trivial protocol using Haskell conduit", "body": "<p>The question is somewhat vague, but if you're looking for an example of controlling actions in a conduit based on previously parsed results, an implementation of the netstring protocol may be sufficient:</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack --resolver lts-10.3 script\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE OverloadedStrings #-}\nimport Conduit\nimport Data.ByteString (ByteString)\nimport Data.Word8 (_colon, _comma, _0, _9, Word8)\nimport Control.Exception.Safe (throwString)\n\nnetstring :: forall m. MonadThrow m =&gt; ConduitM ByteString ByteString m ()\nnetstring = do\n  len &lt;- takeWhileCE (/= _colon) .| foldMCE addDigit 0\n  mchar1 &lt;- headCE\n  case mchar1 of\n    Just c\n      | c == _colon -&gt; return ()\n      | otherwise -&gt; throwString $ \"Didn't find a colon: \" ++ show c\n    Nothing -&gt; throwString \"Missing colon\"\n  takeCE len\n  mchar2 &lt;- headCE\n  case mchar2 of\n    Just c\n      | c == _comma -&gt; return ()\n      | otherwise -&gt; throwString $ \"Didn't end with a comma: \" ++ show c\n    Nothing -&gt; throwString \"Missing trailing comma\"\n  where\n    addDigit :: Int -&gt; Word8 -&gt; m Int\n    addDigit total char\n      | char &lt; _0 || char &gt; _9 = throwString \"Invalid character in len\"\n    addDigit total char = return $! total * 10 + fromIntegral (char - _0)\n\nmain :: IO ()\nmain = do\n  let bs = \"5:hello,6: world,\"\n  res &lt;- runConduit\n       $ yield bs\n      .| ((,) &lt;$&gt; (netstring .| foldC) &lt;*&gt; (netstring .| foldC))\n  print res\n</code></pre>\n"}], "owner": {"reputation": 409, "user_id": 899333, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3c36106bbf7b90e4d67d54e37863feb?s=128&d=identicon&r=PG", "display_name": "Tom Kludy", "link": "https://stackoverflow.com/users/899333/tom-kludy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 2, "accepted_answer_id": 48607999, "answer_count": 1, "score": 3, "last_activity_date": 1517747007, "creation_date": 1517638462, "question_id": 48594530, "link": "https://stackoverflow.com/questions/48594530/non-trivial-protocol-using-haskell-conduit", "title": "Non trivial protocol using Haskell conduit", "body": "<p>I am trying to figure out how to implement a non-trivial protocol (over TCP) using Haskell conduit.  Examples of what I consider non-trivial:</p>\n\n<ul>\n<li>Read some header byte(s) and if they match what is expected, ignore them and continue; else, return an error to the client.</li>\n<li>Read N byte(s) that indicate the length of a field, then read that number of bytes into a bytestring.</li>\n<li>Perform a back-and-forth handshake between the client and server, like a capability negotiation.  After the negotiation, invoke different server-side code depending on what was negotiated.  (for example negotiating a protocol version that the server and client agree on)</li>\n<li>Timeout the connection, with an error sent to the client, if the client fails to negotiate the protocol quickly enough</li>\n</ul>\n\n<p>So far I am struggling... any help or a pointer to some example code would be greatly appreciated!</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 4, "last_activity_date": 1517635425, "creation_date": 1517635425, "answer_id": 48594225, "question_id": 48594118, "link": "https://stackoverflow.com/questions/48594118/couldnt-match-expected-type-char-bool-bool-with-actual-type-char/48594225#48594225", "title": "Couldn&#39;t match expected type \u2018(Char, Bool) -&gt; Bool\u2019 with actual type \u2018Char\u2019", "body": "<p>It seems you\u2019re inadvertently using the Prelude\u2019s standard function <code>find</code>, of type:</p>\n\n<pre><code>Foldable t =&gt; (a -&gt; Bool) -&gt; t a -&gt; Maybe a\n</code></pre>\n\n<p>Or, specialised to lists:</p>\n\n<pre><code>(a -&gt; Bool) -&gt; [a] -&gt; Maybe a\n</code></pre>\n\n<p>Whereas the book wants you to use some <em>other</em> <code>find</code> function, probably defined elsewhere in the text, of a type like:</p>\n\n<pre><code>(Eq a) =&gt; a -&gt; [(a, b)] -&gt; b\n</code></pre>\n\n<p>Or, in your case:</p>\n\n<pre><code>Char -&gt; [(Char, Bool)] -&gt; Bool\n</code></pre>\n\n<p>You\u2019re giving it <code>x</code> as its first argument, which is of type <code>Char</code>, but it\u2019s expecting a function of type <code>(Char, Bool) -&gt; Bool</code>, because <code>(Char, Bool)</code> is the element type of the list. That\u2019s the source of the type error you got.</p>\n\n<p>You can replace <code>find x s</code> using the standard function <code>lookup</code>:</p>\n\n<pre><code>lookup :: Eq a =&gt; a -&gt; [(a, b)] -&gt; Maybe b\n</code></pre>\n\n<p>Combined with something like <code>fromJust</code> (which throws an error when a variable isn\u2019t bound), e.g., <code>fromJust (lookup x s)</code>. You could also use something like <code>find' x s = fromMaybe (error (\"unbound variable '\" ++ [x] ++ \"'\")) (lookup x s)</code> for a more detailed error message, or <code>fromMaybe False</code> (which assumes unbound variables are <code>False</code>), using <code>fromMaybe</code> from <code>Data.Maybe</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "edited": false, "score": 0, "creation_date": 1517676724, "post_id": 48594269, "comment_id": 84195931, "body": "Indeed the book has given the definition of find function very next to <code>type Assoc</code>. I noticed  <code>type Assoc</code> but not <code>find</code> function. Anyway thanks for your help."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 2, "last_activity_date": 1517636006, "creation_date": 1517636006, "answer_id": 48594269, "question_id": 48594118, "link": "https://stackoverflow.com/questions/48594118/couldnt-match-expected-type-char-bool-bool-with-actual-type-char/48594269#48594269", "title": "Couldn&#39;t match expected type \u2018(Char, Bool) -&gt; Bool\u2019 with actual type \u2018Char\u2019", "body": "<p>The function <code>find</code> that ends up being used in your code comes from <code>Data.List</code> and has signature <code>find :: (a -&gt; Bool) -&gt; [a] -&gt; Maybe a</code>. This function tries to find an element of the given list that matches the given predicate.</p>\n\n<p>However, from the way this function is used in your code, you seem to be assuming the signature <code>find :: k -&gt; Assoc k v -&gt; v</code>, with the semantics of locating a value by key in an associative list. This is how I would implement such function:</p>\n\n<pre><code>find :: Eq k =&gt; k -&gt; Assoc k v -&gt; v\nfind k ((k', v) : _) | k == k' = v\nfind k (_ : tail) = find k tail\n</code></pre>\n\n<p>I don't have this book, so I can't tell for sure, but my guess is that the book actually defines this function somewhere earlier, probably at the same place it defines the type <code>Assoc</code> itself. You have included the definition of <code>Assoc</code> in your code, but forgot to include the definition of <code>find</code>.</p>\n\n<p>Also note that the function <code>find</code> defined this way is <em>partial</em>: it doesn't know what to return when the given associative list doesn't contain the given key. In order for it to be total, it would need to return <code>Maybe v</code> instead of just <code>v</code>. Just something to keep in mind.</p>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 520, "favorite_count": 0, "accepted_answer_id": 48594269, "answer_count": 2, "score": 0, "last_activity_date": 1517636006, "creation_date": 1517634276, "question_id": 48594118, "link": "https://stackoverflow.com/questions/48594118/couldnt-match-expected-type-char-bool-bool-with-actual-type-char", "title": "Couldn&#39;t match expected type \u2018(Char, Bool) -&gt; Bool\u2019 with actual type \u2018Char\u2019", "body": "<p>I am learning section tautology checker in chapter8 of the book <a href=\"https://rads.stackoverflow.com/amzn/click/com/1316626229\" rel=\"nofollow noreferrer\" rel=\"nofollow noreferrer\">\"Programming in Haskell\"</a>.</p>\n\n<p><a href=\"https://i.stack.imgur.com/6Eeix.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/6Eeix.jpg\" alt=\"enter image description here\"></a></p>\n\n<p>There is code which mentions to </p>\n\n<pre><code>eval :: Subst -&gt; Prop -&gt; Bool\neval _ (Const b) = b\neval s (Var x) = find x s\neval s (Not p) = not (eval s p)\neval s (And p q) = eval s p &amp;&amp; eval s q\neval s (Imply p q) = eval s p &lt;= eval s q \n</code></pre>\n\n<p>I'm getting the below error when I do compile this code.</p>\n\n<pre><code>tautology_checker.hs:26:23: error:\n    \u2022 Couldn't match expected type \u2018(Char, Bool) -&gt; Bool\u2019\n              with actual type \u2018Char\u2019\n    \u2022 In the first argument of \u2018find\u2019, namely \u2018x\u2019\n      In the expression: find x s\n      In an equation for \u2018eval\u2019: eval s (Var x) = find x s\n   |\n26 | eval s (Var x) = find x s\n   |      \n</code></pre>\n\n<p>I've check for spell correction and typo. It seems to be correct. </p>\n\n<p>My code is <a href=\"https://github.com/rajcspsg/ProgrammingInHaskell/blob/master/chapter8/tautology_checker.hs\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Please help me how to resolve this error. </p>\n"}, {"tags": ["haskell", "polymorphism", "dsl", "dynamic-typing"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517661223, "post_id": 48593687, "comment_id": 84191417, "body": "You could wrap polymorphic functions under a newtype, and then use <code>Dynamic</code>. If you have many functions with distinct types, though, it can be tedious to invent all those newtypes."}], "answers": [{"tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 0, "last_activity_date": 1517683953, "creation_date": 1517683953, "answer_id": 48600842, "question_id": 48593687, "link": "https://stackoverflow.com/questions/48593687/implementing-a-language-in-haskell-dynamic-typing-for-polymorphic-functions/48600842#48600842", "title": "Implementing a language in Haskell: dynamic typing for polymorphic functions?", "body": "<p>It's hard to answer this without knowing more about your problem domain, but here is one approach that might work:</p>\n\n<ol>\n<li><p>Group your types and functions into modules: see if your application deals with <code>Foo</code> types and has a set of corresponding functions that manipulate them, and <code>Bar</code> types with a largely disjoint set of functions. A real-world example might be numerical functions and string functions. There are a few cross-overs, but mostly they are separate types with different functions. Try to write these functions so that all the <code>Foo</code> and <code>Bar</code> parameters are at the end, so prefer <code>f :: String -&gt; Foo -&gt; Foo</code> over <code>f :: Foo -&gt; String -&gt; Foo</code></p></li>\n<li><p>Create a union type <code>FooBar = data Dfoo Foo | Dbar Bar</code> and associated <a href=\"https://hackage.haskell.org/package/lens-4.16/docs/Control-Lens.html\" rel=\"nofollow noreferrer\">prisms</a> <code>_Foo</code> and <code>_Bar</code>.</p></li>\n<li><p>Write a family of functions to lift the <code>Foo</code> and <code>Bar</code> functions into the <code>FooBar</code> type by using the prisms you defined in step 2.</p></li>\n</ol>\n\n<p>For instance,</p>\n\n<pre><code>  elevate2 :: Prism' b a -&gt; (a -&gt; a -&gt; a) -&gt; b -&gt; b -&gt; Maybe b\n  elevate2 prism f arg1 arg2 = f &lt;$&gt; arg1 ^? prism &lt;*&gt; arg2 ^? prism\n</code></pre>\n\n<p>Each of your operations is now dynamically typed; when applied to the right arguments you get <code>Just</code> your result, and with the wrong arguments you get <code>Nothing</code>. If you prefer you could return an <code>Either</code> instead of <code>Maybe</code> to get more information about what went wrong, but that would require a lot more machinery in your elevation functions.</p>\n"}], "owner": {"reputation": 463, "user_id": 7342065, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a47003905491d69d47a261235044a44?s=128&d=identicon&r=PG&f=1", "display_name": "kye", "link": "https://stackoverflow.com/users/7342065/kye"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 315, "favorite_count": 1, "closed_date": 1518798772, "answer_count": 1, "score": 2, "last_activity_date": 1517683953, "creation_date": 1517628897, "question_id": 48593687, "link": "https://stackoverflow.com/questions/48593687/implementing-a-language-in-haskell-dynamic-typing-for-polymorphic-functions", "closed_reason": "Needs more focus", "title": "Implementing a language in Haskell: dynamic typing for polymorphic functions?", "body": "<p>I\u2019m writing a programming language using Haskell as the host language. (The parser, grammar, runtime, etc. for my language are all written in Haskell.) </p>\n\n<p>Depending on what\u2019s written in a program in my PL, in my language\u2019s runtime, I want to apply Haskell functions of different types dynamically (their types are known at runtime) to Haskell values of different types, whose types are known at runtime. I want to apply these functions in a generic fashion, without having to case on every possible type. Basically I want this part of my language\u2019s runtime to be dynamically-typed in Haskell. I\u2019d also like to write a typechecker for my language. </p>\n\n<p>Any suggestions for how I might do either of these things? Are there any examples of languages written in Haskell that do a similar thing, whose approaches I can learn from?</p>\n\n<p>One complication: The Haskell functions and values need to be polymorphic over floats because I am using them with a Haskell autodiff library (<a href=\"https://hackage.haskell.org/package/ad\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/ad</a>), which requires that floats have type (Floating a => a).</p>\n\n<p>I tried using the Haskell Data.Dynamic and Data.Typeable libraries to make functions and values dynamic so I could compare their types at runtime and apply the functions if the types match, but Data.Dynamic doesn\u2019t seem to allow polymorphic functions to be cast to Dynamic. The documentation even says this. I googled \u201cHaskell polymorphic functions dynamic\u201d but I don\u2019t see a way around this limitation.</p>\n\n<p>I would rather not force all the Haskell functions to have the same input/output type, and I would rather not have to statically list all of their possible types in a sum type. Maybe I can solve the applying-function problem with some kind of generic Applyable typeclass? Or use Template Haskell? None of these options sounds super appealing. </p>\n"}, {"tags": ["haskell", "cabal"], "comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1517652970, "post_id": 48593653, "comment_id": 84189294, "body": "I&#39;m hardly an expert on these matters, but AFACT, most people (myself included) have left Cabal in favour of <a href=\"https://docs.haskellstack.org\" rel=\"nofollow noreferrer\">Stack</a>. In general, you may have more luck with that."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 1, "creation_date": 1517653250, "post_id": 48593653, "comment_id": 84189375, "body": "If you&#39;re trying to install <a href=\"https://hackage.haskell.org/package/MaybeT\" rel=\"nofollow noreferrer\">this particular MaybeT package</a>, the reason it&#39;s giving you trouble <i>could be</i> that it&#39;s fallen behind. While it looks like the last update was in 2015, the original package is from 2007. This could explain the dependency trouble you&#39;re seeing. If you need a <code>Maybe</code> monad transformer, could you instead use the one &#39;included&#39; in GHC: <a href=\"https://hackage.haskell.org/package/transformers/docs/Control-Monad-Trans-Maybe.html\" rel=\"nofollow noreferrer\">Control.Monad.Trans.Maybe</a>?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1517666655, "post_id": 48593653, "comment_id": 84192849, "body": "Though the question I suggested involves Stack, while you are using cabal-install, the issue is the same: as @MarkSeemann points out, if you are using a sufficiently recent GHC the <i>MaybeT</i> package is unnecessary, as you can just use the one from <i>transformers</i> (<code>Control.Monad.Trans.Maybe</code>)."}], "owner": {"reputation": 2512, "user_id": 2325380, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SvFan.jpg?s=128&g=1", "display_name": "Mark Karavan", "link": "https://stackoverflow.com/users/2325380/mark-karavan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "closed_date": 1517666383, "answer_count": 0, "score": 2, "last_activity_date": 1517666413, "creation_date": 1517628605, "last_edit_date": 1517666413, "question_id": 48593653, "link": "https://stackoverflow.com/questions/48593653/trouble-resolving-dependencies-involving-maybet-with-cabal", "closed_reason": "Duplicate", "title": "Trouble resolving dependencies involving MaybeT with cabal", "body": "<p>I am getting back into Haskell and I haven't worked with cabal much.  I am trying to install <code>maybet</code>.  When I try to install it, I run into the following error:</p>\n\n<pre><code>&gt;&gt;mkaravan$ cabal install maybet\nResolving dependencies...\ncabal: Could not resolve dependencies:\ntrying: MaybeT-0.1.2 (user goal)\nnext goal: base (dependency of MaybeT-0.1.2)\nrejecting: base-4.10.1.0/installed-4.1... (conflict: MaybeT =&gt; base&lt;4.8)\nrejecting: base-4.10.1.0, base-4.10.0.0, base-4.9.1.0, base-4.9.0.0,\nbase-4.8.2.0, base-4.8.1.0, base-4.8.0.0, base-4.7.0.2, base-4.7.0.1,\nbase-4.7.0.0, base-4.6.0.1, base-4.6.0.0, base-4.5.1.0, base-4.5.0.0,\nbase-4.4.1.0, base-4.4.0.0, base-4.3.1.0, base-4.3.0.0, base-4.2.0.2,\nbase-4.2.0.1, base-4.2.0.0, base-4.1.0.0, base-4.0.0.0, base-3.0.3.2,\nbase-3.0.3.1 (constraint from non-upgradeable package requires installed\ninstance)\nAfter searching the rest of the dependency tree exhaustively, these were the\ngoals I've had most trouble fulfilling: base, MaybeT\n</code></pre>\n\n<p>I guess this is a common newbie gripe, but I have no idea how to go about fixing this, as Google has told me that trying to upgrade <code>base</code> is a very bad idea.  How does this work?</p>\n"}, {"tags": ["haskell", "metaprogramming"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1517605238, "post_id": 48590705, "comment_id": 84178785, "body": "<a href=\"http://hackage.haskell.org/package/hint\" rel=\"nofollow noreferrer\">hint</a>"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1517605866, "post_id": 48590705, "comment_id": 84179014, "body": "I voted to close as a duplicate and I guess I&#39;m enough to close it.  Feel free to rebuke that with specific request and how the other question is different and I&#39;ll vote to reopen."}, {"owner": {"reputation": 379, "user_id": 696592, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1471678fa5b7b89fad97c85fd0469ec0?s=128&d=identicon&r=PG", "display_name": "lightning", "link": "https://stackoverflow.com/users/696592/lightning"}, "edited": false, "score": 0, "creation_date": 1517605999, "post_id": 48590705, "comment_id": 84179072, "body": "Thanks!  I didn&#39;t see how to load entire modules using hint - is this possible?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1517608502, "post_id": 48590705, "comment_id": 84180070, "body": "Well you can  <code>setImports [&quot;Data.Map&quot;]</code> for installed modules.  Are you wanting to interpret multiple non-installed modules and some consumer of those modules? That is a different problem that I don&#39;t immediately know the answer to."}], "owner": {"reputation": 379, "user_id": 696592, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1471678fa5b7b89fad97c85fd0469ec0?s=128&d=identicon&r=PG", "display_name": "lightning", "link": "https://stackoverflow.com/users/696592/lightning"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 166, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1517619782, "creation_date": 1517604706, "question_id": 48590705, "link": "https://stackoverflow.com/questions/48590705/haskell-metaprogramming-at-runtime", "title": "Haskell metaprogramming at runtime", "body": "<p>What is the easiest way to generate code as a string/AST/some other representation during runtime, and then run the code and compute properties of the resulting values during the same program execution?  </p>\n\n<p>The three ways I could think of would be some sort of \u201ceval\u201d function that takes a string or an equivalent expression representing a program and runs it and returns the output, a \u201creload module\u201d function which dynamically reloads a file during runtime (in which case one could write the generated code to file and then reload), or writing the generated code to a file while including a line in that file which serializes the generated values, running that file, and then reloading those values from the serialization.  </p>\n\n<p>Unfortunately, I haven\u2019t had any look finding a solution with any of these methods yet - dynamic reloading doesn\u2019t appear to be supported, and serialization apparently doesn\u2019t work on functions.  Any suggestions?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1517602325, "post_id": 48587361, "comment_id": 84177576, "body": "You&#39;ve misunderstood what the quoted portion is saying; but also it isn&#39;t really clear language, and you should simply avoid reading any explanation which begins with &quot;one can think of...&quot;. That said, what it means is that &quot;a Functor&quot; (a value <code>x :: F A</code> for some <code>F</code> with <code>Functor F</code> and some <code>A</code>) can be thought of as a computation producing values of type <code>A</code>; and a contravariant functor can be thought of as consuming values of type <code>A</code>."}], "answers": [{"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1517739569, "post_id": 48587741, "comment_id": 84210272, "body": "The definition of the data type has to be like  <code>Op { runOp :: a -&gt; r }</code> not for example <code>contramap</code> on <code>Maybe a</code> does not make sense, because it produces a value right?"}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1517748412, "post_id": 48587741, "comment_id": 84212605, "body": "<code>Maybe a</code> can be thought of as a list of length 0 or 1, that is, it &#39;contains&#39; 0 or 1 values of type <code>a</code>. You cannot define <code>contramap</code> for <code>Maybe</code> because if you did, you would have <code>phantom = contramap (const ()) . fmap (const ()) :: (Functor f, Contravariant f) =&gt; f a -&gt; f b</code>, and that doesn&#39;t make sense since then we could convert any <code>a</code> to any <code>b</code> by using <code>fromJust . phantom . Just</code>. For an example of a <code>Functor</code> that is also <code>Contravariant</code>, there&#39;s <code>newtype Const c a = Const { getConst :: c }</code>, where the <code>fmap f = contramap f = Const . getConst</code>"}], "tags": [], "owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "is_accepted": true, "score": 8, "last_activity_date": 1573174042, "last_edit_date": 1573174042, "creation_date": 1517591731, "answer_id": 48587741, "question_id": 48587361, "link": "https://stackoverflow.com/questions/48587361/what-is-the-purpose-of-contramap/48587741#48587741", "title": "What is the purpose of contramap?", "body": "<p>A Functor <code>f</code> is thought of to 'contain' or 'produce' values in the sense that <code>f a</code> is like a container of <code>a</code> values. <code>fmap</code> allows you to transform the values held by <code>f</code>.<br>\nExamples:  </p>\n\n<ul>\n<li><code>[a]</code> 'contains' a non-negative number of values of type <code>a</code>  </li>\n<li><code>IO a</code> potentially does some IO and 'returns' or 'produces' a value of type <code>a</code>  </li>\n<li><code>(-&gt;) r a</code> 'contains' a value of type <code>a</code> for each value of <code>r</code>  </li>\n</ul>\n\n<p>Now a <code>Contravariant f</code> is something that can 'take in' or 'consume' values. <code>contramap</code> allows you to transform the thing <code>f a</code> takes before it consumes them.<br>\nThe main example for this is usually using something like<br>\n<code>newtype Op r a = Op { runOp :: a -&gt; r }</code><br>\n(note the <code>Predicate</code> you used seems to just be <code>Op Bool</code>)<br>\nNow we have something that can 'consume' values of type a.(the analogy might make more sense for <code>Op (IO ())</code>)<br>\nContinuing this example of 'consumption' of values, consider <code>o = Op (\\x -&gt; putStrLn x) :: Op (IO ()) String</code>, now what if we want to make use of <code>o</code>, but for values of type <code>Show a =&gt; a</code>? well that's what <code>contramap</code> is for!<br>\n<code>contramap show o :: Show a =&gt; Op (IO ()) a</code><br>\n(note that in this simple case <code>runOp (contramap show o)</code> is just <code>print</code>)  </p>\n\n<p>EDIT:<br>\nAnother interesting thing to note about <code>Contravariant</code> is with regard to composing it.<br>\nGiven <code>Contravariant c, Contravariant d, Functor f</code> and<br>\n<code>newtype Compose f g a = Compose { runCompose :: f (g a) }</code><br>\nwe have:  </p>\n\n<ul>\n<li><code>Compose f c</code> is also <code>Contravariant</code><br>\n<code>contramap f (Compose fca) = Compose $ fmap (contramap f) fca</code>  </li>\n<li><code>Compose c f</code> is also <code>Contravariant</code><br>\n<code>contramap f (Compose cfa) = Compose $ contramap (fmap f) cfa</code>  </li>\n<li><code>Compose c d</code> is actually a <code>Functor</code><br>\n<code>fmap f (Compose cda) = Compose $ contramap (contramap f) cda</code></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 5, "last_activity_date": 1517597688, "last_edit_date": 1592644375, "creation_date": 1517597688, "answer_id": 48589175, "question_id": 48587361, "link": "https://stackoverflow.com/questions/48587361/what-is-the-purpose-of-contramap/48589175#48589175", "title": "What is the purpose of contramap?", "body": "<blockquote>\n<p>Look at the definition of the functor:</p>\n<pre><code>class Functor (f :: * -&gt; *) where\n    fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n<p>It consumes the value of type <code>a</code> and it produces the value of type <code>b</code>.</p>\n</blockquote>\n<p>This is not precise, and is the source of your confusion.</p>\n<p>In particular, there are three distinct objects in the type of <code>fmap</code>: a function <code>a -&gt; b</code>, a &quot;functorial&quot; value <code>f a</code>, and a &quot;functorial&quot; value <code>f b</code>, and whether <code>a</code> is consumed or produced varies across these objects, as does whether <code>b</code> is consumed or produced.</p>\n<ul>\n<li>A function of type <code>a -&gt; b</code> consumes and <code>a</code> and produces a <code>b</code>. (This is the sentence you said, but with a new addition specifying <em>on which object</em> it applies.)</li>\n<li>If <code>f</code> is a <code>Functor</code>, then a value of type <code>f a</code> &quot;produces&quot; <code>a</code>s.</li>\n<li>If <code>f</code> is a <code>Functor</code>, then a value of type <code>f b</code> &quot;produces&quot; <code>b</code>s.</li>\n</ul>\n<p>We can extend these observations to larger function types.</p>\n<ul>\n<li>If <code>f</code> is a <code>Functor</code>, then a function of type <code>f a -&gt; f b</code> consumes <code>f a</code>s and produces <code>f b</code>s; and because functors are positive this in turn means that the function consumes <code>a</code>s and produces <code>b</code>s.</li>\n<li>If <code>f</code> is a <code>Functor</code>, then a function of type <code>(a -&gt; b) -&gt; f a -&gt; f b</code> consumes an <code>a -&gt; b</code> -- that is, in the implementation, we will produce <code>a</code>s to provide to the <code>a -&gt; b</code> function and consume the <code>b</code>s that it returns! It does this to produce an <code>f a -&gt; f b</code>, which consumes <code>a</code>s and produces <code>b</code>s.</li>\n</ul>\n<p>N.B. the role of &quot;consume&quot; and &quot;produce&quot; alternates quite a lot in the above description, even within the single object that is called <code>fmap</code>; so saying &quot;<code>fmap</code> consumes <code>a</code>s and produces <code>b</code>s&quot; is not telling the whole story.</p>\n<p>The following statement is also imprecise in a similar way:</p>\n<blockquote>\n<p>Whereas in Haskell, one can think of a <code>Functor</code> as containing or producing values, a contravariant functor is a functor that can be thought of as consuming values.</p>\n</blockquote>\n<p>You have interpreted this to mean that <code>fmap</code> as a (function) object contains values, while <code>contramap</code> produces values. But this is not what was intended; instead, the statement was intended to be about the (contravariant) functorial values themselves, not the (contra)maps that are applied to them. A more precise statement is this one:</p>\n<blockquote>\n<p>Whereas in Haskell, one can think of a value of type <code>f a</code> (for which <code>f</code> is a <code>Functor</code>) as containing or producing <code>a</code> values, a contravariant functor <code>f</code> gives rise to values of type <code>f a</code> that can be thought of as consuming <code>a</code> values.</p>\n</blockquote>\n<p>Regarding your question about positive and negative positions, you may enjoy <a href=\"https://stackoverflow.com/a/9243982/791604\">some of my previous discussion of this topic here on SO</a>.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1277, "favorite_count": 1, "accepted_answer_id": 48587741, "answer_count": 2, "score": 3, "last_activity_date": 1573174042, "creation_date": 1517590353, "question_id": 48587361, "link": "https://stackoverflow.com/questions/48587361/what-is-the-purpose-of-contramap", "title": "What is the purpose of contramap?", "body": "<p>I read many articles about contramap and find <a href=\"https://hackage.haskell.org/package/contravariant-1.4.1/docs/Data-Functor-Contravariant.html#g:3\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/contravariant-1.4.1/docs/Data-Functor-Contravariant.html#g:3</a> is the best.   </p>\n\n<p>Anyway I found, how to  use for example:</p>\n\n<pre><code>*Lib Data.Functor.Contravariant&gt; a = Predicate (\\x -&gt; x &gt; 20)\n*Lib Data.Functor.Contravariant&gt; :t contramap\ncontramap :: Contravariant f =&gt; (a -&gt; b) -&gt; f b -&gt; f a\n*Lib Data.Functor.Contravariant&gt; :t contramap (\\x -&gt; x * 2)\ncontramap (\\x -&gt; x * 2) :: (Num b, Contravariant f) =&gt; f b -&gt; f b\n*Lib Data.Functor.Contravariant&gt; :t contramap (\\x -&gt; x * 2) a\ncontramap (\\x -&gt; x * 2) a :: (Ord b, Num b) =&gt; Predicate b\n*Lib Data.Functor.Contravariant&gt; x = contramap (\\x -&gt; x * 2) a\n*Lib Data.Functor.Contravariant&gt; getPredicate x 45\nTrue \n</code></pre>\n\n<p>But could not figure out, where it can be useful. </p>\n\n<p>On the website, that I posted above, it says:  </p>\n\n<blockquote>\n  <p>Whereas in Haskell, one can think of a Functor as containing or\n  producing values, a contravariant functor is a functor that can be\n  thought of as consuming values.</p>\n</blockquote>\n\n<p>Look at the definition of the functor: </p>\n\n<pre><code>class Functor (f :: * -&gt; *) where\n  fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>It consumes the value of type <code>a</code> and it produces the value of type <code>b</code>. On <code>contramap</code> it consumes the value. </p>\n\n<pre><code>class Contravariant (f :: * -&gt; *) where\n  contramap :: (a -&gt; b) -&gt; f b -&gt; f a\n</code></pre>\n\n<p>Which variable type does it consume <code>a</code> or <code>b</code>?  </p>\n\n<p>Also a question from <a href=\"https://www.fpcomplete.com/blog/2016/11/covariance-contravariance\" rel=\"nofollow noreferrer\">https://www.fpcomplete.com/blog/2016/11/covariance-contravariance</a> about <strong>POSITIVE AND NEGATIVE POSITION</strong>. On the website it says: </p>\n\n<ul>\n<li>Positive position: the type variable is the\nresult/output/range/codomain of the function</li>\n<li>Negative position: the type variable is the argument/input/domain of\nthe function</li>\n</ul>\n\n<p>Looking at contramap type definition:  </p>\n\n<pre><code>contramap :: (a -&gt; b) -&gt; f b -&gt; f a\n</code></pre>\n\n<p>Which type variable does the author point to?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 2, "creation_date": 1517581137, "post_id": 48584499, "comment_id": 84165772, "body": "Hello and welcome to Stackoverflow. This is not so bad for a first question, but if you run into problems you need a more detailed description than &quot;Well, it doesn&#39;t work&quot;; Your question details should say what you want, what you did and what you observed (and how it is different from what you want)."}], "answers": [{"comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 2, "creation_date": 1517581432, "post_id": 48584649, "comment_id": 84165993, "body": "Your <code>replace</code> is &quot;simpler&quot; in the sense of <i>denser</i> when compared to OPs <code>repl</code>; but it&#39;s not going to be &quot;simpler&quot; in the sense of &quot;easy to understand&quot; for a complete beginner."}, {"owner": {"reputation": 23, "user_id": 9305499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c74e3685c8dd0575580944f3a7fc60c?s=128&d=identicon&r=PG&f=1", "display_name": "Marco Michaelis", "link": "https://stackoverflow.com/users/9305499/marco-michaelis"}, "edited": false, "score": 0, "creation_date": 1517581566, "post_id": 48584649, "comment_id": 84166067, "body": "Thank you so much! That&#39;s really helpful and a better answer than I could have ever hoped for."}, {"owner": {"reputation": 23, "user_id": 9305499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c74e3685c8dd0575580944f3a7fc60c?s=128&d=identicon&r=PG&f=1", "display_name": "Marco Michaelis", "link": "https://stackoverflow.com/users/9305499/marco-michaelis"}, "edited": false, "score": 0, "creation_date": 1517581801, "post_id": 48584649, "comment_id": 84166246, "body": "It&#39;s true that it is not super easy to understand, but I think I get most of it and will research the things I do not completely understand."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1517581207, "creation_date": 1517581207, "answer_id": 48584649, "question_id": 48584499, "link": "https://stackoverflow.com/questions/48584499/haskell-replace-characters-in-a-string/48584649#48584649", "title": "Haskell: replace characters in a string", "body": "<p>First of all, we can simplify the <code>repl</code> function by using <code>replicate</code>:</p>\n\n<pre><code>import Data.Char(isDigit, digitToInt)\n\nreplace x = map repl x\n    where repl '/' = \"1111111111\"\n          repl x | isDigit x &amp;&amp; xi &gt; 1 = replicate xi '1'\n              where xi = digitToInt x\n          repl x = [x]\n</code></pre>\n\n<p>Here <code>repl</code> this is a function that transforms a <code>Char</code> to a <code>String</code>. For the slash character, it returns a String of ten <code>'1'</code>s, for a character that <code>isDigit x</code>, then we replicate <code>'1'</code>, <code>xi</code> times. The last line means that all other characters <code>x</code>, are converted to a string <code>[x]</code>.</p>\n\n<p>If we now use <code>map</code>, we will convert a <code>[String]</code> into a <code>[[String]]</code>. This is of course not what we want. But we can use <code>concat :: [[a]] -&gt; [a]</code> to concatenate the sublists together:</p>\n\n<pre><code>import Data.Char(isDigit, digitToInt)\n\nreplace x = concat (map repl x)\n    where repl '/' = \"1111111111\"\n          repl x | isDigit x &amp;&amp; xi &gt; 1 = replicate xi '1'\n              where xi = digitToInt x\n          repl x = [x]\n</code></pre>\n\n<p>We can also use <code>concatMap :: (a -&gt; [b]) -&gt; [a] -&gt; [b]</code>, and use an <em>eta reduction</em> to remove the <code>x</code> parameter from your <code>replace</code> function:</p>\n\n<pre><code>import Data.Char(isDigit, digitToInt)\n\nreplace = concatMap repl\n    where repl '/' = \"1111111111\"\n          repl x | isDigit x &amp;&amp; xi &gt; 1 = replicate xi '1'\n              where xi = digitToInt x\n          repl x = [x]\n</code></pre>\n\n<p>This then produces for your sample input:</p>\n\n<pre><code>Prelude Data.Char&gt; replace \"w1w1w8/w7w1w1//w\"\n\"w1w1w111111111111111111w1111111w1w111111111111111111111w\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": false, "score": 3, "last_activity_date": 1517581359, "creation_date": 1517581359, "answer_id": 48584697, "question_id": 48584499, "link": "https://stackoverflow.com/questions/48584499/haskell-replace-characters-in-a-string/48584697#48584697", "title": "Haskell: replace characters in a string", "body": "<p>You have two problems in your code: The first is that you only defined <code>repl</code> for /,9,8,7,6,5,3 and 2. What should happen if you encounter anything that's <em>not</em> one of those things? Whatever the case may be, you will need to add a case for that to your function definition.</p>\n\n<p>The other problem is that what you want in the end is a <code>String</code>, but <code>map</code> is a function that takes a function from <code>a -&gt; b</code> and a list of a <code>[a]</code> and returns a list of b <code>[b]</code>. Your <code>repl</code> function is of type <code>Char -&gt; String</code>, so <code>map repl</code> is of type <code>String -&gt; [String]</code> (instead of <code>String -&gt; String</code> like you want). You'll have to \"flatten\" the list-of-list to just a list.</p>\n\n<p>There's a prelude function called <code>concat :: [[a]] -&gt; [a]</code> that does this for you; If you don't want to use predefined functions you can try implementing that yourself.</p>\n"}], "owner": {"reputation": 23, "user_id": 9305499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c74e3685c8dd0575580944f3a7fc60c?s=128&d=identicon&r=PG&f=1", "display_name": "Marco Michaelis", "link": "https://stackoverflow.com/users/9305499/marco-michaelis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1376, "favorite_count": 0, "accepted_answer_id": 48584649, "answer_count": 2, "score": 2, "last_activity_date": 1517581359, "creation_date": 1517580731, "question_id": 48584499, "link": "https://stackoverflow.com/questions/48584499/haskell-replace-characters-in-a-string", "title": "Haskell: replace characters in a string", "body": "<p>First of all I'm very new to haskell and functional programming in general, so there might (will) be some very dumb mistakes in my code.</p>\n\n<p>I'm trying to replace a few characters in a string with one or more different characters without using any libraries. The string could look like this \"w1w1w8/w7w1w1//w\". I want to replace every number greater than 1 with the corresponding amount of ones and the '/' with ten ones.</p>\n\n<p>After reading a few similar posts, I came up with this:</p>\n\n<pre><code>replace x = \n    let \n        repl '/' = \"1111111111\"\n        repl '9' = \"111111111\"\n        repl '8' = \"11111111\"\n        repl '7' = \"1111111\"\n        repl '6' = \"111111\"\n        repl '5' = \"11111\"\n        repl '4' = \"1111\"\n        repl '3' = \"111\"\n        repl '2' = \"11\"\n    in  map repl x\n</code></pre>\n\n<p>Well, it doesn't work and I would appreciate some input on this or even a way to achieve my goal. Thanks in advance.</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "is_accepted": true, "score": 2, "last_activity_date": 1517559892, "creation_date": 1517559892, "answer_id": 48578572, "question_id": 48578451, "link": "https://stackoverflow.com/questions/48578451/print-contains-data-type-how-to-disable/48578572#48578572", "title": "Print contains data type how to disable", "body": "<p>Take a look at</p>\n\n<pre><code>[String \"2018/1/1\",String \"2018/1/2\"]\n</code></pre>\n\n<p>the result of</p>\n\n<pre><code>&gt; exampleGetValue &gt;&gt;= return . view vrValues\n</code></pre>\n\n<p>Here the strings you are interested in, like <code>\"2018/1/1\"</code> are contained in another datatype <code>String</code>, which has, I assume, an automatically derived show instance, which will print the name of the Data constructor <code>String</code>. </p>\n\n<p>You need to unpack the strings somehow to get rid of the printing of the word <code>String</code>.</p>\n\n<p>As this is stackoverflow, and we are considered to provide answers, I will give you one possibility now, but before you read it, try to do it yourself:</p>\n\n<pre><code>unpackString (String w) = w\nmapM_ (print . unpackString) (exampleGetValue &gt;&gt;= return . view vrValues)\n</code></pre>\n\n<p>You have to determine the type signature for <code>unpackString</code> yourself, as you didn't provided any types.</p>\n"}], "owner": {"reputation": 105, "user_id": 4826652, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/5eKU9.png?s=128&g=1", "display_name": "Squallcx", "link": "https://stackoverflow.com/users/4826652/squallcx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 43, "favorite_count": 0, "accepted_answer_id": 48578572, "answer_count": 1, "score": 0, "last_activity_date": 1517559892, "creation_date": 1517559399, "question_id": 48578451, "link": "https://stackoverflow.com/questions/48578451/print-contains-data-type-how-to-disable", "title": "Print contains data type how to disable", "body": "<p>using gogol package,\nfollow example got</p>\n\n<pre><code>&gt; exampleGetValue\n-- ValueRange' {_vrValues = Just [String \"2018/1/1\",String \"2018/1/2\"], _vrRange = Just \"'\\24037\\20316\\34920\\&amp;1'!A1:1\", _vrMajorDimension = Just VRMDRows} \n&gt; exampleGetValue &gt;&gt;= return . view vrValues\n-- [String \"2018/1/1\",String \"2018/1/2\"]\n&gt; mapM_ (print) (exampleGetValue &gt;&gt;= return . view vrValues)\nString \"2018/1/1\"\nString \"2018/1/2\"\n</code></pre>\n\n<p>Why there will be a string of words</p>\n\n<p>How to do I can only show</p>\n\n<pre><code>2018/1/1\n2018/1/2\n</code></pre>\n"}, {"tags": ["haskell", "monads", "function-composition"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 5, "creation_date": 1517531050, "post_id": 48573814, "comment_id": 84144600, "body": "Have you tried deriving it yourself? Where did you get stuck? There are many questions already on Stack Overflow that show step by step how to derive types, such as <a href=\"//stackoverflow.com/q/23030638\">How (fmap . fmap) typechecks</a>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 4, "creation_date": 1517532737, "post_id": 48573814, "comment_id": 84144983, "body": "The return value should be <code>b1</code>, not <code>b</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1517545372, "post_id": 48573814, "comment_id": 84147856, "body": "How is this a duplicate of that?"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1517555245, "post_id": 48573814, "comment_id": 84151104, "body": "@dfeuer It&#39;s not. It&#39;s only <b><i>similar</i></b>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1517556985, "post_id": 48573814, "comment_id": 84151817, "body": "@Zeta, I don&#39;t even see much similarity. This one seems tied to <code>Monad ((-&gt;) a)</code>, for one thing. <code>fmap . fmap</code>, <code>foldMap . foldMap</code>, and <code>traverse . traverse</code> are all similar to each other, but this seems quite different."}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1517576851, "post_id": 48573814, "comment_id": 84163096, "body": "@dfeuer that&#39;s because <code>(&gt;&gt;=)</code> takes a function as its second argument, if we use the flipped version instead (which like <code>fmap</code>, <code>traverse</code>, <code>foldMap</code> maps a function to a function) <code>(=&lt;&lt;) :: Monad m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b</code> we get the following <code>(=&lt;&lt;) . (=&lt;&lt;) :: Monad m =&gt; (a -&gt; m b) -&gt; m (m a) -&gt; m b</code> which is quite similar to <code>fmap . fmap</code> or <code>traverse . traverse</code>. Also notice that <code>((=&lt;&lt;) . (=&lt;&lt;)) return = join</code>. In fact <code>(=&lt;&lt;) . (=&lt;&lt;)</code> is very similar to <code>foldMap . foldMap</code>"}], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 10, "last_activity_date": 1517558699, "creation_date": 1517558699, "answer_id": 48578280, "question_id": 48573814, "link": "https://stackoverflow.com/questions/48573814/understanding/48578280#48578280", "title": "Understanding (&gt;&gt;=) . (&gt;&gt;=)", "body": "<p><strong>TL;DR</strong>: We use the <code>((-&gt;) r</code> monad instance inbetween.</p>\n\n<hr>\n\n<p>We have to look at <code>(.) (&gt;&gt;=)</code>. So let us first repeat the types:</p>\n\n<pre><code>(&gt;&gt;=) :: Monad m =&gt; m a -&gt; ((a -&gt; m b) -&gt; m b)\n(.)   ::            (y  -&gt; z                 ) -&gt; (x -&gt; y) -&gt; (x -&gt; z)\n</code></pre>\n\n<p>Therefore, we have</p>\n\n<pre><code>(.) (&gt;&gt;=) :: Monad m =&gt; (x -&gt; m a) -&gt; (x -&gt; ((a -&gt; m b) -&gt; m b))\n-- or, with less parentheses\n(.) (&gt;&gt;=) :: Monad m =&gt; (x -&gt; m a) -&gt; x -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>Now, we plug in another <code>(&gt;&gt;=)</code>:</p>\n\n<pre><code>(.) (&gt;&gt;=) :: Monad m =&gt; (x -&gt;  m a               ) -&gt; x -&gt; (a -&gt; m b) -&gt; m b\n(&gt;&gt;=)     :: Monad k =&gt; k i -&gt; ((i -&gt; k j) -&gt; k j)\n</code></pre>\n\n<p>But now we have  a problem. We have <code>Monad m =&gt; m a</code> and <code>((i -&gt; k j) -&gt; k j)</code> at the same position. Is that even possible? Well, it's possible if there is a monad instance for</p>\n\n<pre><code>Monad k =&gt; (-&gt;) (i -&gt; k j)\n</code></pre>\n\n<p>Turns out there is one, namely</p>\n\n<pre><code>instance Monad ((-&gt;) r)\n</code></pre>\n\n<p>for any <code>r</code>.\nNow our outer monad <code>m</code> is <code>((-&gt;) (i -&gt; k j)</code>, therefore we replace all occurences of <code>m</code> by <code>(i -&gt; k j) -&gt;</code>:</p>\n\n<pre><code>(.) (&gt;&gt;=) ::             (x -&gt; (i -&gt; k j) -&gt; a) -&gt; x -&gt; (a -&gt; (i -&gt; k j) -&gt; b) -&gt; (i -&gt; k j) -&gt; b\n(&gt;&gt;=)     :: Monad k =&gt; k i -&gt; ((i -&gt; k j) -&gt; k j)\n</code></pre>\n\n<p>Now set <code>x ~ k i</code>, <code>a ~ k j</code> and we end up with</p>\n\n<pre><code>(.) (&gt;&gt;=) ::             (x -&gt; (i -&gt; k j) -&gt; a) -&gt; x -&gt; (a -&gt; (i -&gt; k j) -&gt; b) -&gt; (i -&gt; k j) -&gt; b\n(&gt;&gt;=)         :: Monad k =&gt; k i -&gt; ((i -&gt; k j) -&gt; k j)\n(&gt;&gt;=) . (&gt;&gt;=) :: Monad k =&gt; k i -&gt; (k j -&gt; (i -&gt; k j) -&gt; b) -&gt; (i -&gt; k j) -&gt; b\n</code></pre>\n\n<p>Last, we rename <code>k</code> to <code>m</code>, <code>i</code> to <code>a</code> and <code>j</code> to <code>b2</code>, and we end up with</p>\n\n<pre><code>(&gt;&gt;=) . (&gt;&gt;=) :: Monad m =&gt; m a -&gt; (m b2 -&gt; (a -&gt; m b2) -&gt; b) -&gt; (a -&gt; m b2) -&gt; b\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9302640"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 308, "favorite_count": 0, "accepted_answer_id": 48578280, "answer_count": 1, "score": 4, "last_activity_date": 1517558699, "creation_date": 1517530225, "last_edit_date": 1517557192, "question_id": 48573814, "link": "https://stackoverflow.com/questions/48573814/understanding", "title": "Understanding (&gt;&gt;=) . (&gt;&gt;=)", "body": "<p>I'm trying to understand <code>(&gt;&gt;=).(&gt;&gt;=)</code>, which GHCi tells me is:</p>\n\n<pre><code>(&gt;&gt;=)       :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n(&gt;&gt;=).(&gt;&gt;=) :: Monad m =&gt; m a -&gt; (m b -&gt; (a -&gt; m b) -&gt; b1) -&gt; (a -&gt; m b) -&gt; b1\n</code></pre>\n\n<p>can you provide a step by step explanation on how the result is derived?</p>\n\n<p>And is this composition ever used?</p>\n\n<p><strong>Update:</strong></p>\n\n<p>I am able to work out <code>fmap.fmap</code> but not quit <code>(&gt;&gt;=).(&gt;&gt;=)</code>, I'm able to get to <code>(.)(&gt;&gt;=) :: Monad m =&gt; (a1 -&gt; m a) -&gt; a1 -&gt; (a -&gt; m b) -&gt; m b</code> but afterword things start to get a little confusing. Any help would be appreciated, just trying to learn here.</p>\n"}, {"tags": ["performance", "haskell", "pattern-matching"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517522633, "post_id": 48572426, "comment_id": 84141764, "body": "Pattern matches are <i>concetually</i> done by iterating over the list, but a compiler is free to optimize it (and given there is a certain structure in the numbers, most will)."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1517527586, "post_id": 48572426, "comment_id": 84143629, "body": "Another option is to use memoization to &quot;precompute&quot; (rather, compute on the first use only).  <a href=\"https://hackage.haskell.org/package/data-memocombinators-0.5.1/docs/Data-MemoCombinators.html\" rel=\"nofollow noreferrer\">data-memocombinators</a> has a combinator <a href=\"https://hackage.haskell.org/package/data-memocombinators-0.5.1/docs/Data-MemoCombinators.html#v:arrayRange\" rel=\"nofollow noreferrer\"><code>arrayRange</code></a> which will memoize a certain range of inputs into a flat array with constant time lookup, which is basically what you are doing manually here."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1517531107, "post_id": 48572426, "comment_id": 84144616, "body": "Related: <a href=\"https://stackoverflow.com/q/9027384/2751851\"><i>Haskell GHC: what is the time complexity of a pattern match with N constructors?</i></a>"}], "answers": [{"comments": [{"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 3, "creation_date": 1517585573, "post_id": 48573202, "comment_id": 84168751, "body": "The code <code>createSwitchPlan</code> starting at <a href=\"https://github.com/ghc/ghc/blob/master/compiler/cmm/CmmSwitch.hs#L324\" rel=\"nofollow noreferrer\">github.com/ghc/ghc/blob/master/compiler/cmm/CmmSwitch.hs#L32&zwnj;&#8203;4</a> makes all these decisions, using jump tables for the continguous sections of a sparse pattern match."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1517602824, "post_id": 48573202, "comment_id": 84177797, "body": "Why are there two conditional jumps? Would it be better to have (at most) one subtraction and then one conditional jump?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1517604066, "post_id": 48573202, "comment_id": 84178337, "body": "@dfeuer Can you explain how you would check <code>x &lt; 0</code> and <code>x &gt; 24</code> with a single compare?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1517606035, "post_id": 48573202, "comment_id": 84179088, "body": "Er... Let me check my arithmetic."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1517606266, "post_id": 48573202, "comment_id": 84179182, "body": "<code>(fromIntegral x :: Word) &lt; 24</code>, however you say that in assembly, should do the trick, I believe."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1517607906, "post_id": 48573202, "comment_id": 84179872, "body": "The (reasonable) assumption here is that even signed values will often have contiguous defined cases  in the range <code>(0,n]</code> and we can optimize for that using <code>jb</code> instead of a pair of other jumps.  I see ghc does compile your comparison reasonably too, that is branching on the above compiles to <code>cmpq $24,7(%rbx) ; jb target_branch ; ...else branch...</code>.  Hey, sounds like you have a contribution to make the GHC&#39;s NCG!"}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 15, "last_activity_date": 1517526306, "creation_date": 1517526306, "answer_id": 48573202, "question_id": 48572426, "link": "https://stackoverflow.com/questions/48572426/performance-of-exhaustive-haskell-pattern-matching/48573202#48573202", "title": "Performance of exhaustive Haskell pattern-matching", "body": "<p>I made a simple test in the form:</p>\n\n<pre><code>f 0 = 4\nf 1 = 5\n...\n</code></pre>\n\n<p>And compiled with <code>ghc -O2 -ddump-asm -c</code>.  I observe key ASM of:</p>\n\n<p>What appears to be implementations for each top level equation:</p>\n\n<pre><code>_c2aD:\n        movl $28,%ebx    ; N.B. the constant 28 matches my largest value\n        jmp *(%rbp)\n_c2aC:\n        movl $27,%ebx\n        jmp *(%rbp)\n_c2aB:\n        movl $26,%ebx\n        jmp *(%rbp)\n....\n</code></pre>\n\n<p>What appears to be a jump table referencing the above implementations:</p>\n\n<pre><code>_n2aN:\n        .quad   _c2af-(_n2aN)+0\n        .quad   _c2ag-(_n2aN)+0\n        .quad   _c2ah-(_n2aN)+0\n        .quad   _c2ai-(_n2aN)+0\n        .quad   _c2aj-(_n2aN)+0\n        .quad   _c2ak-(_n2aN)+0\n        ...\n</code></pre>\n\n<p>What appears to be a pair of range guards followed by a dispatch:</p>\n\n<pre><code>_c2aE:\n        cmpq $25,%r14        ; N.B. the last defined input is 24\n        jge _c2ae\n_u2aH:\n        testq %r14,%r14\n        jl _c2ae\n_u2aI:\n        leaq _n2aN(%rip),%rax\n        addq (%rax,%r14,8),%rax\n        jmp *%rax\n</code></pre>\n\n<p>So do I think this will be slow for 1000 entries? No, if they are contiguous I bet GHC will generate a jump table just like I'm seeing here.  Another interesting test would be if they aren't contiguous.</p>\n"}], "owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 1, "accepted_answer_id": 48573202, "answer_count": 1, "score": 8, "last_activity_date": 1517526306, "creation_date": 1517522297, "question_id": 48572426, "link": "https://stackoverflow.com/questions/48572426/performance-of-exhaustive-haskell-pattern-matching", "title": "Performance of exhaustive Haskell pattern-matching", "body": "<p>I am wondering how Haskell pattern matching is resolved internally and how this impacts performance. Say we have a function that is expensive to compute so we precompute the first and / or more frequently used values and pattern match on the corresponding input before making the actual computation itself:</p>\n\n<pre><code>expensiveComputation :: Int -&gt; Int\nexpensiveComputation 1 = 101\nexpensiveComputation 2 = 3333333\nexpensiveComputation 3 = 42\n...\nexpensiveComputation n = the actual function\n</code></pre>\n\n<p>We could precompute a lot of these cases, thousands if we wanted, but do we? I'm assuming that it takes time for Haskell to actually find the pattern that matches the input, so maybe it is actually quicker to compute the, say, 1000th value instead of making a 1000 pattern matches?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1517521406, "post_id": 48571997, "comment_id": 84141216, "body": "N.B. The <code>f</code> in <code>F f a</code> may be a type family or data family, hence may dispatch on <code>a</code>."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1517521619, "post_id": 48571997, "comment_id": 84141301, "body": "@DanielWagner in order for such type family to dispatch on <code>a</code>, there needs to be more than one constructor of <code>Triv</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1517535945, "post_id": 48571997, "comment_id": 84145722, "body": "@FyodorSoikin That turns out not to be the case. See my answer."}], "answers": [{"comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1517521574, "post_id": 48572191, "comment_id": 84141279, "body": "Right, but in the OP&#39;s example <code>Triv</code> has only one inhabitant."}, {"owner": {"reputation": 8864, "user_id": 83435, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/41b56228b2143ab0929e01c258399f99?s=128&d=identicon&r=PG", "display_name": "So8res", "link": "https://stackoverflow.com/users/83435/so8res"}, "edited": false, "score": 0, "creation_date": 1517531908, "post_id": 48572191, "comment_id": 84144809, "body": "I&#39;m parsing this answer as saying &quot;GHC&#39;s role inference is not up to the task&quot; -- as in, there are some minor changes we could make to <code>Triv</code> that break coercion on F, so it&#39;s reasonable for GHC to be unable to infer that it&#39;s fine in this particular simple case. In the same vein, I predict that there&#39;s no way to have GHC let me type <code>coerce : F Identity a -&gt; F Identity b</code> despite the fact that in the case of <code>Identity</code>, the roles of <code>f</code> and <code>a</code> are <code>representational</code> and <code>phantom</code> respectively. Is this correct?"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 1, "last_activity_date": 1517521312, "creation_date": 1517521312, "answer_id": 48572191, "question_id": 48571997, "link": "https://stackoverflow.com/questions/48571997/is-there-any-way-to-convince-ghc-that-this-type-parameter-is-phantom/48572191#48572191", "title": "Is there any way to convince GHC that this type parameter is phantom?", "body": "<p><code>f</code>'s parameter may have a nominal role. I need the <code>Triv</code> kind to have at least two inhabitants to show a counterexample.</p>\n\n<pre><code>data Triv = T1 | T2\n\ndata family K a :: *\ndata instance K (F K T1) = K1 Int Int\ndata instance K (F K T2) = K2 Double\n\ncoerce :: F K T1 -&gt; F K T2\n-- i.e., K (F K T1) -&gt; K (F K T2)\n-- That should not typecheck.\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1517537165, "post_id": 48574482, "comment_id": 84146024, "body": "Wow! So this happens because the compiler doesn&#39;t want to prove that <code>Succ &#39;Triv ~ &#39;Triv</code>, even though it theoretically could, right?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1517537271, "post_id": 48574482, "comment_id": 84146045, "body": "@FyodorSoikin In fact this happens because of the exact opposite, namely, that <code>Succ &#39;Triv</code> is <i>not</i> equal to <code>&#39;Triv</code>. There is further discussion of this trick <a href=\"http://gelisam.blogspot.com/2017/11/computing-with-impossible-types.html\" rel=\"nofollow noreferrer\">here</a>."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 3, "last_activity_date": 1517536469, "last_edit_date": 1517536469, "creation_date": 1517535571, "answer_id": 48574482, "question_id": 48571997, "link": "https://stackoverflow.com/questions/48571997/is-there-any-way-to-convince-ghc-that-this-type-parameter-is-phantom/48574482#48574482", "title": "Is there any way to convince GHC that this type parameter is phantom?", "body": "<p>The role is in fact not phantom. The following type-checks on at least GHC 7.8.4:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}  -- used to make it very clear that the param is phantom\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE RoleAnnotations #-}\n{-# LANGUAGE TypeFamilies #-}\nmodule Test where\nimport GHC.Exts\ndata Triv = Triv\ndata F (f :: * -&gt; *) (a :: Triv) = F (f (F f a))\n\ntype family Bad a\ntype instance Bad (F f 'Triv) = Int\ntype instance Bad (F f Any) = Bool\n\nx = 3 :: Bad (F f 'Triv)\ny = True :: Bad (F f Any)\n</code></pre>\n\n<p>This hole was plugged by the time of the 8.0 release (possibly before), but <a href=\"https://gist.github.com/ekmett/ac881f3dba3f89ec03f8fdb1d8bf0a40\" rel=\"nofollow noreferrer\">there are others</a> that seem more fundamental:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}  -- used to make it very clear that the param is phantom\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE RoleAnnotations #-}\n{-# LANGUAGE TypeFamilies #-}\nmodule Test where\ndata Triv = Triv\ndata F (f :: * -&gt; *) (a :: Triv) = F (f (F f a))\n\ntype family Succ :: Triv -&gt; Triv\n\ntype family Bad a where\n    Bad (F f 'Triv) = Int\n    Bad (F f a) = Bool\n\nx = 3 :: Bad (F f 'Triv)\ny = True :: Bad (F f (Succ 'Triv))\n</code></pre>\n\n<p>And just in case you object that I can't write <code>F Bad</code>, it's easy to work around; you may add the following appendix to either of the previous two files.</p>\n\n<pre><code>data BadData a = BadData (Bad a)\nxF :: F BadData 'Triv\nxF = F (BadData x)\nyF :: F BadData (Succ 'Triv)\nyF = F (BadData y)\n</code></pre>\n"}], "owner": {"reputation": 8864, "user_id": 83435, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/41b56228b2143ab0929e01c258399f99?s=128&d=identicon&r=PG", "display_name": "So8res", "link": "https://stackoverflow.com/users/83435/so8res"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "accepted_answer_id": 48574482, "answer_count": 2, "score": 3, "last_activity_date": 1517536469, "creation_date": 1517520442, "question_id": 48571997, "link": "https://stackoverflow.com/questions/48571997/is-there-any-way-to-convince-ghc-that-this-type-parameter-is-phantom", "title": "Is there any way to convince GHC that this type parameter is phantom?", "body": "<p>Consider the following code:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}  -- used to make it very clear that the param is phantom\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE RoleAnnotations #-}\nmodule Test where\ndata Triv = Triv\ndata F (f :: * -&gt; *) (a :: Triv) = F (f (F f a))\ntype role F nominal phantom\n</code></pre>\n\n<p>I expected it to work, given that the role of <code>a</code> seems quite clearly phantom to me. However:</p>\n\n<pre><code>/.../Test.hs:7:5: error:\n    \u2022 Role mismatch on variable a:\n        Annotation says phantom but role nominal is required\n    \u2022 while checking a role annotation for \u2018F\u2019\nFailed, modules loaded: none.\n</code></pre>\n\n<p>Why is this? Is the type parameter <em>not</em> actually phantom (in the sense that, say, using <code>unsafeCoerce</code> to transform an <code>F Identity a</code> into an <code>F Identity b</code> could fail at runtime)? Or is GHC's role inference merely not up to this task? And, if the latter, is there any way to convince GHC that <code>a</code> is in fact phantom in this case?</p>\n"}, {"tags": ["regex", "haskell"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1517520381, "post_id": 48571481, "comment_id": 84140769, "body": "What should happen if you want to replace <code>&quot;foobar&quot;</code> with <code>&quot;marmoset&quot;</code> and <code>&quot;barbaz&quot;</code> with <code>&quot;elephant&quot;</code> when the string contains <code>&quot;foobarbaz&quot;</code>?"}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 2, "creation_date": 1517521433, "post_id": 48571481, "comment_id": 84141225, "body": "Can you just sort <code>ts</code> to replace the longest strings first?"}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1517522269, "post_id": 48571481, "comment_id": 84141581, "body": "@Cirdec My apologies.  I was rather unclear in my question.  Edited to reflect that that scenario wouldn&#39;t happen in my case (there would be a &quot;foobarbaz&quot; key in the list of tuples)."}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "reply_to_user": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1517522292, "post_id": 48571481, "comment_id": 84141593, "body": "@jkeuhlen That should probably do it.  Thanks for the insight!"}, {"owner": {"reputation": 2485, "user_id": 11282404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e3829cb91cc6be3541a37381b5ff21?s=128&d=identicon&r=PG&f=1", "display_name": "jpmarinier", "link": "https://stackoverflow.com/users/11282404/jpmarinier"}, "edited": false, "score": 0, "creation_date": 1566396244, "post_id": 48571481, "comment_id": 101644425, "body": "Typo: the arguments of a lambda expression must be separated by space not comma, see <code>\\acc,</code>. Otherwise, nice Haskell regex code."}], "answers": [{"tags": [], "owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "is_accepted": false, "score": 1, "last_activity_date": 1517522590, "creation_date": 1517522590, "answer_id": 48572495, "question_id": 48571481, "link": "https://stackoverflow.com/questions/48571481/haskell-replace-multiple-substrings-with-regex-in-a-single-pass/48572495#48572495", "title": "Haskell replace multiple substrings with regex in a single pass", "body": "<blockquote>\n  <p>In my case, the string <code>s</code> will always be a space-separated list of distinct words; moreover, I wish to replace each word in <code>s</code> in its entirety </p>\n</blockquote>\n\n<p>The first step I see is to split (or delimit) the string into words by spaces.</p>\n\n<p>Next, I'd sort the replacement pairs from longest to shortest, as @keuhlen suggests.</p>\n\n<p>After that, the problem should be easy, and substring search fast, because it would advance by word boundaries.</p>\n\n<p>(One extra optimization could be grouping the search pattern by length, e.g. in a tree or array, so that for shorter input words, longer patterns are never ever considered.)</p>\n"}, {"tags": [], "owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "is_accepted": true, "score": 2, "last_activity_date": 1517522916, "creation_date": 1517522916, "answer_id": 48572567, "question_id": 48571481, "link": "https://stackoverflow.com/questions/48571481/haskell-replace-multiple-substrings-with-regex-in-a-single-pass/48572567#48572567", "title": "Haskell replace multiple substrings with regex in a single pass", "body": "<p>Expanding on my comment from earlier, you can just process the longest string to be replaced first: </p>\n\n<pre><code>\u03bb&gt; s = \"blah blahblee\"\n\u03bb&gt; ts = [(\"blah\", \"asdf\"), (\"blahblee\", \";lkj\")]\n\u03bb&gt; import qualified Data.List as L\n\u03bb&gt; replaceAllIn s (L.sortOn fst ts)\n\"asdf ;lkj\"\n</code></pre>\n"}], "owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 215, "favorite_count": 0, "accepted_answer_id": 48572567, "answer_count": 2, "score": 2, "last_activity_date": 1566491660, "creation_date": 1517518079, "last_edit_date": 1566491660, "question_id": 48571481, "link": "https://stackoverflow.com/questions/48571481/haskell-replace-multiple-substrings-with-regex-in-a-single-pass", "title": "Haskell replace multiple substrings with regex in a single pass", "body": "<p>Suppose I have a string <code>s</code> and a list of tuples of strings <code>ts</code>, where the first element in the tuple is the substring of <code>s</code> I'd like to replace with the corresponding second element.  In my case, the string <code>s</code> will always be a space-separated list of distinct words; moreover, I wish to replace each word in <code>s</code> in its entirety with the corresponding value in <code>ts</code> (I hope my intent is clear here). A first attempt at this might be:</p>\n\n<pre><code>import qualified Text.Regex as R -- from regex-compat    \n\nreplaceAllIn :: String -&gt; [(String, String)] -&gt; String\nreplaceAllIn = foldl (\\acc (k, v) -&gt; R.subRegex (R.makeRegex k) acc v)\n</code></pre>\n\n<p>This, of course, doesn't work when one key is a substring of another</p>\n\n<pre><code>\u03bb&gt; s = \"blah blahblee\"\n\u03bb&gt; ts = [(\"blah\", \"asdf\"), (\"blahblee\", \";lkj\")]\n\u03bb&gt; replaceAllIn s ts\n\"asdf asdfblee\"\n</code></pre>\n\n<p>because the first key replaces both occurrences of \"blah\" upon the first pass, leaving a string that no longer has anything matching \"blahblee\" for the second pass. </p>\n\n<p>Is there a way to achieve what I want in one pass through the string?  Or is there a built-in way (in some library somewhere) to replace multiple patterns at once?</p>\n\n<p><strong>Edit:</strong>  Immediately after posting I realized I don't know why I'm using regex here.  But the question remains valid if I replaced regex substitution with something like <code>replace</code> from MissingH's Data.String.Utils.</p>\n"}, {"tags": ["shell", "haskell", "nix", "nix-shell"], "answers": [{"tags": [], "owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "is_accepted": false, "score": 2, "last_activity_date": 1517561691, "creation_date": 1517561691, "answer_id": 48579002, "question_id": 48571228, "link": "https://stackoverflow.com/questions/48571228/is-it-possible-to-break-up-a-long-nix-shell-p-line-into-multiple-lines/48579002#48579002", "title": "Is it possible to break up a long `#! nix-shell -p` line into multiple lines?", "body": "<p><code>nix-shell -p</code> reuses Nixpkgs' <a href=\"https://github.com/NixOS/nix/blob/19477e8815a7c9b91c82278ec0e22957c97bec16/src/nix-build/nix-build.cc#L250\" rel=\"nofollow noreferrer\"><code>stdenv</code></a> to do the combining of packages into appropriate environment variables. That works fine for shell commands, some libraries etc, but not for Haskell packages.</p>\n\n<p>Haskell packages require a specially wrapped GHC, which is too specific for <code>stdenv</code>. You can do it manually using the <code>ghcWithPackages</code> function:</p>\n\n<pre><code>#!/usr/bin/env nix-shell\n#!nix-shell -p 'haskellPackages.ghcWithPackages(pkgs: with pkgs; [lens acme-missiles])'\n#!nix-shell -i runhaskell\n\nimport Acme.Missiles\nimport Control.Lens\n\nmain =\n  if Just (Just True) ^.. traverse . traverse == [True]\n  then putStrLn \"Crisis averted\"\n  else launchMissiles\n</code></pre>\n\n<p>So to answer your first question, it can not be broken up in the way you like. All Haskell dependencies need to be in a single <code>-p</code>/<code>--packages</code> option and the <code>nix-shell</code> shebang parser does not currently support \"shell words\" across lines. (I suppose it could be added in a non-breaking way if you feel like it...)</p>\n"}], "owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 372, "favorite_count": 2, "answer_count": 1, "score": 2, "last_activity_date": 1517561691, "creation_date": 1517517002, "question_id": 48571228, "link": "https://stackoverflow.com/questions/48571228/is-it-possible-to-break-up-a-long-nix-shell-p-line-into-multiple-lines", "title": "Is it possible to break up a long `#! nix-shell -p` line into multiple lines?", "body": "<p>Is it possible to break up a long <code>#! nix-shell -p</code> line into multiple lines? </p>\n\n<p>Example:</p>\n\n<pre><code>#!/usr/bin/env nix-shell\n#! nix-shell -p \"haskell.packages.ghc822.ghcWithPackages (p: with p; [lens text bytestring hspec brick async])\"\n#! nix-shell -i \"runghc\"\n\n{-# language OverloadedStrings #-}\n\nimport            Data.Text\nimport            Control.Lens\nimport            Data.Monoid\n\nmain = print $ (\"foo\" :: Text, True) &amp; _1 %~ (&lt;&gt; \" bar\")\n</code></pre>\n\n<p>I've tried like this, but unsurprisingly that GHC doesn't see the lens and text packages.</p>\n\n<pre><code>#!/usr/bin/env nix-shell\n#! nix-shell -p \"haskell.packages.ghc822.text\"\n#! nix-shell -p \"haskell.packages.ghc822.lens\"\n#! nix-shell -p \"haskell.packages.ghc822.ghc\"\n#! nix-shell -i \"runghc\"\n\n{-# language OverloadedStrings #-}\n\nimport            Data.Text\nimport            Control.Lens\nimport            Data.Monoid\n\nmain = print $ (\"foo\" :: Texts, True) &amp; _1 %~ (&lt;&gt; \" bar\")\n</code></pre>\n\n<p>I vaguely remember that someone on GitHub wrote a custom <code>#!</code> interpreter for nix that allows for special handling of Haskell (and other) package dependencies, allowing them to break up into multiple lines, but its name eludes me and I can't find it. Perhaps some of you remember?</p>\n\n<p>Any other ideas I could try?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1517510911, "post_id": 48569177, "comment_id": 84135822, "body": "<code>go 0 = return []</code> is subsumed by the other case. With <code>lens</code>, <code>pick = map (experiment $ \\((k,i):xs) -&gt; (k, [(k,i-1) | i &gt; 1] ++ xs)) . init . contexts</code>"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1517517440, "post_id": 48569177, "comment_id": 84139258, "body": "The other case always returns a list of at least one element though...?"}, {"owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1517527419, "post_id": 48569177, "comment_id": 84143568, "body": "No, <code>guard $ i &lt;= 0</code> always fails. (Except if there are nonpositive coins, and on that sort of input one should be able to use those coins last.)"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1517537905, "post_id": 48569177, "comment_id": 84146208, "body": "If the guard fails it doesn&#39;t return anything, not even the empty list."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1517538042, "post_id": 48569177, "comment_id": 84146235, "body": "I just removed <code>go 0 = return []</code> and I see <code>[]</code>."}, {"owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 1, "creation_date": 1517622957, "post_id": 48569177, "comment_id": 84183635, "body": "You are, of course, right. I confused base success with base failure. Should these comments be removed to not confuse others, or kept around to warn them?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1517624611, "post_id": 48569177, "comment_id": 84183861, "body": "It&#39;s fine to leave this here because it may be instructive for people."}, {"owner": {"reputation": 402, "user_id": 9009630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/920657e98e40c2206e2166bba183551d?s=128&d=identicon&r=PG&f=1", "display_name": "jhu", "link": "https://stackoverflow.com/users/9009630/jhu"}, "edited": false, "score": 0, "creation_date": 1517757365, "post_id": 48569177, "comment_id": 84215551, "body": "This is a complete answer to the question, even providing a link between two clear but different solutions: lists only and with state. Thanks a lot! (Functional thinking still has not stuck to me sufficiently: I was unable to see this solution even though I have implemented, e.g., <code>StateT</code>-based parsers. Also, my response was delayed because of a nasty case of flu I am having.)"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 5, "last_activity_date": 1517508542, "creation_date": 1517508542, "answer_id": 48569177, "question_id": 48568337, "link": "https://stackoverflow.com/questions/48568337/backtracking-with-state/48569177#48569177", "title": "Backtracking with state", "body": "<p>There are two versions below, the first that just uses lists, and the second with <code>StateT</code>.</p>\n\n<pre><code>import Control.Applicative\nimport Control.Monad.State\n</code></pre>\n\n<p>The list type is the type of <em>nondeterministic computations</em>.</p>\n\n<p>Given a set of elements (given in compact form as a list of <code>(element, nb_copies)</code>), we can <code>pick</code> any one, and return it together with the updated set. The result is a pair <code>(Int, [(Int, Int)])</code>. As a regular function, <code>pick</code> returns all possible results of that action.</p>\n\n<p>Internally, we can also follow the definition with an \"imperative\" point of view. If the list is empty, there is nothing to pick (the empty list is the failing computation). Otherwise, there is at least one element <code>x</code> (implicitly, <code>i &gt; 0</code>). Then we either pick one <code>x</code> (<code>pickx</code>), or we pick one element from the rest (<code>pickxs</code>), being careful to put <code>x</code> back at the end.</p>\n\n<pre><code>pick :: [(Int, Int)] -&gt; [(Int, [(Int, Int)])]\npick [] = []\npick ((x, i) : xs) = pickx ++ pickxs\n  where\n    pickx = if i == 1 then [ (x, xs) ] else [ (x, (x, i-1) : xs) ]\n    pickxs = do\n      (x', xs') &lt;- pick xs\n      return (x', (x, i) : xs')\n</code></pre>\n\n<p>Then <code>sumTo</code> is defined as follows: if <code>n = 0</code> then the only solution is the empty sum (<code>[]</code>) and we return it. Otherwise, we pick one element <code>i</code> from the set, check its validity, and recursively look for a solution for <code>n-i</code> with the updated set.</p>\n\n<pre><code>sumTo :: Int -&gt; [(Int, Int)] -&gt; [[Int]]\nsumTo = go\n  where\n    go 0 _ = return []\n    go n xs = do\n      (i, xs') &lt;- pick xs\n      guard $ i &lt;= n\n      guard $ even i\n      s' &lt;- go (n-i) xs'\n      return (i : s')\n</code></pre>\n\n<p>Now threading the set around can be tedious. <code>StateT</code> transforms a type of computation to be stateful. <code>[]</code> is nondeterministic computation. <code>StateT s []</code> is stateful nondeterministic computation, with state type <code>s</code>. Here the state will be the set of remaining elements.</p>\n\n<p>Interestingly, <code>pick</code> can directly be interpreted as such a stateful computation. The intuition is that executing <code>pickState</code> removes an element from the state, which updates the state, and returns that element. <code>pickState</code> automatically fails if there are no more elements.</p>\n\n<pre><code>pickState :: StateT [(Int, Int)] [] Int\npickState = StateT pick\n</code></pre>\n\n<p>Then we repeatedly pick elements until we reach <code>0</code>.</p>\n\n<pre><code>sumToState :: Int -&gt; StateT [(Int, Int)] [] [Int]\nsumToState = go\n  where\n    go 0 = return []\n    go n = do\n      i &lt;- pickState\n      guard $ i &lt;= n\n      guard $ even i\n      s' &lt;- go (n-i)\n      return (i : s')\n</code></pre>\n\n<hr>\n\n<pre><code>main = do\n  let n = 8\n      xs = [(1, 5), (4, 2), (2, 3)]\n  print $ sumTo n xs\n  print $ evalStateT (sumToState n) xs\n</code></pre>\n\n<p>(<a href=\"http://lpaste.net/362142\" rel=\"noreferrer\">full source</a>)</p>\n"}, {"comments": [{"owner": {"reputation": 402, "user_id": 9009630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/920657e98e40c2206e2166bba183551d?s=128&d=identicon&r=PG&f=1", "display_name": "jhu", "link": "https://stackoverflow.com/users/9009630/jhu"}, "edited": false, "score": 0, "creation_date": 1517757503, "post_id": 48569356, "comment_id": 84215610, "body": "This is a nice answer. My real-life problem, from which I have simplified the example above, employs a number of different constraints, not only count constraints that fit <code>MultiSet</code> perfectly. However, <code>MultiSet</code> might still be beneficial for the part involving counts. Thanks!"}], "tags": [], "owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "is_accepted": false, "score": 4, "last_activity_date": 1517526445, "last_edit_date": 1517526445, "creation_date": 1517509230, "answer_id": 48569356, "question_id": 48568337, "link": "https://stackoverflow.com/questions/48568337/backtracking-with-state/48569356#48569356", "title": "Backtracking with state", "body": "<p>It's not much work to add the <code>StateT</code> monad transformer to your clean solution. You just need to add a layer of wrapping and unwrapping to lift the values into the <code>StateT</code> type, and then take them back out using <a href=\"http://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-State-Lazy.html#v:evalStateT\" rel=\"nofollow noreferrer\"><code>evalStateT</code></a>.</p>\n\n<p>Your code would also benefit from internally using a more specialized type for the <code>opts</code> than <code>[(Int, Int)]</code>. <a href=\"https://hackage.haskell.org/package/multiset-0.3.3/docs/Data-MultiSet.html#t:MultiSet\" rel=\"nofollow noreferrer\"><code>MultiSet</code></a> would be a good choice since it automatically manages occurrences.</p>\n\n<p>Here's a tested example of what it could look like:</p>\n\n<pre><code>import Control.Monad.State (StateT, evalStateT, get, modify, lift, guard)\nimport Data.MultiSet (MultiSet, fromOccurList, distinctElems, delete)\n\nsumToN :: Int -&gt; [(Int, Int)] -&gt; [[Int]]\nsumToN nStart optsStart =\n    evalStateT (go nStart) (fromOccurList optsStart)\n  where\n    go :: Int -&gt; StateT (MultiSet Int) [] [Int]\n    go 0 = return []\n    go n = do\n        val &lt;- lift . distinctElems =&lt;&lt; get\n        guard (val &lt;= n &amp;&amp; even val)\n        modify (delete val)\n        (val:) &lt;$&gt; go (n - val)\n</code></pre>\n\n\n\n<pre><code>\u03bb&gt; sumToN 8 [(1,5), (4,2), (2,3)]\n[[2,2,4],[2,4,2],[4,2,2],[4,4]]\n</code></pre>\n\n<hr>\n\n<p>And actually, the <code>StateT</code> isn't benefiting us very much here. You could refactor it to take the <code>MultiSet Int</code> as a parameter and it would work just as well.</p>\n\n<pre><code>import Control.Monad (guard)\nimport Data.MultiSet (fromOccurList, distinctElems, delete)\n\nsumToN :: Int -&gt; [(Int, Int)] -&gt; [[Int]]\nsumToN nStart optsStart =\n    go nStart (fromOccurList optsStart)\n  where\n    go 0 _    = return []\n    go n opts = do\n        val &lt;- distinctElems opts\n        guard (val &lt;= n &amp;&amp; even val)\n        (val:) &lt;$&gt; go (n - val) (delete val opts)\n</code></pre>\n"}], "owner": {"reputation": 402, "user_id": 9009630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/920657e98e40c2206e2166bba183551d?s=128&d=identicon&r=PG&f=1", "display_name": "jhu", "link": "https://stackoverflow.com/users/9009630/jhu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 423, "favorite_count": 0, "accepted_answer_id": 48569177, "answer_count": 2, "score": 4, "last_activity_date": 1517526445, "creation_date": 1517505457, "last_edit_date": 1517506042, "question_id": 48568337, "link": "https://stackoverflow.com/questions/48568337/backtracking-with-state", "title": "Backtracking with state", "body": "<p>The list monad provides an excellent abstraction for backtracking in\nsearch problems. However, the problem I am facing now is one which\ninvolves state in addition to backtracking. (It also involves\nconstraints related to previous choices made in the search path, but I\nwill attack that issue later.)</p>\n\n<p>The following simplified example illustrates the problematics. The\nfunction <code>sumTo</code> is given a nonnegative integer and a list with pairs\nof integers. The first element in each pair is a positive integer, the\nsecond element is the number of such integers available. The search\nproblem is to express the first argument using the integers in the\nlist, with count constraints. For example, here the integer 8 is\nrepresented in different ways as sums of five <code>1</code>s, three <code>2</code>s and two\n<code>4</code>s with the contraint that all numbers making up the sum have to be\neven (so the <code>1</code>s can not be used).</p>\n\n<pre><code>\u03bb&gt; sumTo 8 [(1,5), (4,2), (2,3)]\n[[4,4],[4,2,2],[2,2,4],[2,4,2]]\n</code></pre>\n\n<p>The following is my current recursive solution to the problem.</p>\n\n<pre><code>sumTo :: Int -&gt; [(Int, Int)] -&gt; [[Int]]\nsumTo = go []\n  where\n    go :: [(Int, Int)] -&gt; Int -&gt; [(Int, Int)] -&gt; [[Int]]\n    go _ 0 _ = [[]] -- base case: success\n    go _ _ [] = [] -- base case: out of options, failure \n    -- recursion step: use the first option if it has counts left and\n    -- is suitable; append to this cases where current option is not\n    -- used at this point\n    go prevOpts n (opt@(val,cnt):opts) =\n      (if cnt &gt; 0 &amp;&amp; val &lt;= n &amp;&amp; even val\n       then map (val:) $ go [] (n - val) $ (val,cnt-1):(prevOpts ++ opts)\n       else [])\n      ++ go (opt:prevOpts) n opts\n</code></pre>\n\n<p>While the function seems to work ok, it is <em>much</em> more complicated\nthan one without state, employing the list monad.</p>\n\n<pre><code>sumToN :: Int -&gt; [Int] -&gt; [[Int]]\nsumToN 0 _ = [[]]\nsumToN n opts = do\n  val &lt;- opts\n  guard $ val &lt;= n\n  guard $ even val\n  map (val:) $ sumToN (n - val) opts\n</code></pre>\n\n<p>Not having constraints, this one gives one additional solution.</p>\n\n<pre><code>\u03bb&gt; sumToN 8 [1, 4, 2]\n[[4,4],[4,2,2],[2,4,2],[2,2,4],[2,2,2,2]]\n</code></pre>\n\n<p>Now I am wondering <strong>if some higher order abstraction, such as\n<code>StateT</code> or something similar, could be utilized to simplify the case\nof backtracking with this kind of state constraints</strong>.</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 5056, "user_id": 4276090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/r87tb.jpg?s=128&g=1", "display_name": "Skam", "link": "https://stackoverflow.com/users/4276090/skam"}, "edited": false, "score": 1, "creation_date": 1517503537, "post_id": 48567758, "comment_id": 84131721, "body": "what happens if you have an empty list? what is your base case?"}, {"owner": {"reputation": 457, "user_id": 7802354, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1fcf67739c7428f50d20a9d627fa268d?s=128&d=identicon&r=PG&f=1", "display_name": "MasoodS", "link": "https://stackoverflow.com/users/7802354/masoods"}, "reply_to_user": {"reputation": 5056, "user_id": 4276090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/r87tb.jpg?s=128&g=1", "display_name": "Skam", "link": "https://stackoverflow.com/users/4276090/skam"}, "edited": false, "score": 1, "creation_date": 1517503724, "post_id": 48567758, "comment_id": 84131835, "body": "Oh I didnt define a base case. Now it works! thank you!"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1517503781, "post_id": 48567758, "comment_id": 84131866, "body": "You forgot to add a case for the empty list. I do not get why people always keep making exactly the same error."}, {"owner": {"reputation": 457, "user_id": 7802354, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1fcf67739c7428f50d20a9d627fa268d?s=128&d=identicon&r=PG&f=1", "display_name": "MasoodS", "link": "https://stackoverflow.com/users/7802354/masoods"}, "edited": false, "score": 0, "creation_date": 1517503869, "post_id": 48567758, "comment_id": 84131912, "body": "That&#39;s right, thank you!"}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1517513448, "post_id": 48567758, "comment_id": 84137075, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/8749675/haskell-non-exhaustive-patterns-in-function\">Haskell non exhaustive patterns in function</a>"}], "answers": [{"tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": true, "score": 1, "last_activity_date": 1517516302, "creation_date": 1517516302, "answer_id": 48571061, "question_id": 48567758, "link": "https://stackoverflow.com/questions/48567758/how-can-i-recursively-get-the-sum-of-elements-of-an-array-in-haskell/48571061#48571061", "title": "How can I recursively get the sum of elements of an array in Haskell?", "body": "<p>Your code as-written is:</p>\n\n<pre><code>sumThem :: Num a =&gt; [a] -&gt; a\nsumThem (x:xs) = x + sumThem xs\n</code></pre>\n\n<p>This matches all non-empty lists (because they pattern-match on <code>(x:xs)</code>), but look what happens when we follow the recursion:</p>\n\n<pre><code>sumThem [1,2,3]\n-&gt; 1 + sumThem [2,3]\n-&gt; 1 + 2 + sumThem [3]\n-&gt; 1 + 2 + 3 + sumThem []\n</code></pre>\n\n<p>Uh oh, now Haskell doesn't know what to do. You haven't defined a <em>base case</em> for your recursive function, and so it doesn't know when to end. In this case that is realized by failing to pattern match against an empty list. To write the base case, just imagine a reasonable answer to the question \"What's the sum of an empty set of numbers?\"</p>\n\n<pre><code>sumThem :: Num a =&gt; [a] -&gt; a\nsumThem (x:xs) = x + sumThem xs\nsumThem []     = 0\n</code></pre>\n\n<p>Now your recursion looks like:</p>\n\n<pre><code>sumThem [1,2,3]\n-&gt; 1 + sumThem [2,3]\n-&gt; 1 + 2 + sumThem [3]\n-&gt; 1 + 2 + 3 + sumThem []\n-&gt; 1 + 2 + 3 + 0\n=  6\n</code></pre>\n"}], "owner": {"reputation": 457, "user_id": 7802354, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1fcf67739c7428f50d20a9d627fa268d?s=128&d=identicon&r=PG&f=1", "display_name": "MasoodS", "link": "https://stackoverflow.com/users/7802354/masoods"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 880, "favorite_count": 0, "closed_date": 1517523218, "accepted_answer_id": 48571061, "answer_count": 1, "score": 1, "last_activity_date": 1517516302, "creation_date": 1517503461, "question_id": 48567758, "link": "https://stackoverflow.com/questions/48567758/how-can-i-recursively-get-the-sum-of-elements-of-an-array-in-haskell", "closed_reason": "Not suitable for this site", "title": "How can I recursively get the sum of elements of an array in Haskell?", "body": "<p>Instead of using \nsum[1,2,3], which is a built-in library, how can I recursively add numbers in an array?\nThis is the code I think I should use but I get the following error: </p>\n\n<pre><code>sumThem (x:xs) = x + sumThem xs\n</code></pre>\n\n<p>This is how I call it from terminal window:</p>\n\n<pre><code>sumThem [1,2,3]\n</code></pre>\n\n<p>Here is the error</p>\n\n<pre><code>Exception: jan31.hs:21:1-25: Non-exhaustive patterns in function sumThem\n</code></pre>\n"}, {"tags": ["parsing", "haskell", "happy", "alex"], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 7891692, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b416ffe05b5f3ab5d6322e91a87614d2?s=128&d=identicon&r=PG&f=1", "display_name": "Sheldor", "link": "https://stackoverflow.com/users/7891692/sheldor"}, "edited": false, "score": 0, "creation_date": 1517589004, "post_id": 48567388, "comment_id": 84170942, "body": "Thanks for the response, I&#39;ve managed to get the code working by modifying &#39;programSource&#39; to be of 0 or many style rule and it seems to be working properly now."}], "tags": [], "owner": {"reputation": 199706, "user_id": 1566221, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ce3ea4ffd1023d4382f397312352726d?s=128&d=identicon&r=PG", "display_name": "rici", "link": "https://stackoverflow.com/users/1566221/rici"}, "is_accepted": false, "score": 1, "last_activity_date": 1517502347, "creation_date": 1517502347, "answer_id": 48567388, "question_id": 48567009, "link": "https://stackoverflow.com/questions/48567009/happy-parse-error/48567388#48567388", "title": "Happy Parse Error", "body": "<p>You defined <code>ProgSource</code> to be a <em>single</em> <code>SourceUnit</code>, so the parser fails when the second one is encountered. I guess you wanted it to be a list of <code>SourceUnit</code>s.</p>\n\n<p>The same applies to <code>ContractPart</code>.</p>\n\n<p>Also, didn't you mean to quote <code>\"contract\"</code> in <code>ContractDefinition</code>? And in the same production, <code>$3</code> should be <code>$4</code>.</p>\n"}], "owner": {"reputation": 11, "user_id": 7891692, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b416ffe05b5f3ab5d6322e91a87614d2?s=128&d=identicon&r=PG&f=1", "display_name": "Sheldor", "link": "https://stackoverflow.com/users/7891692/sheldor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 322, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1517502347, "creation_date": 1517501125, "question_id": 48567009, "link": "https://stackoverflow.com/questions/48567009/happy-parse-error", "title": "Happy Parse Error", "body": "<p>I'm currently using the alex and happy lexer/parser generators to implement a parser for the Ethereum Smart contract language solidity. Currently I'm using a reduced grammar in order to simplify the initial development. </p>\n\n<p>I'm running into an error parsing the 'contract' section of the my test contract file. </p>\n\n<p>The following is the code for the grammar:</p>\n\n<pre><code>ProgSource   :: { ProgSource }\nProgSource   : SourceUnit                  { ProgSource $1 }\n\nSourceUnit   : PragmaDirective             { SourceUnit $1}\n\nPragmaDirective : \"pragma\" ident \";\"       {Pragma $2 }\n                | {- empty -}              { [] }\n\nImportDirective : \n                \"import\" stringLiteral \";\"  { ImportDir $2 }\n\nContractDefinition : contract ident \"{\" ContractPart \"}\"  { Contract $2 $3 }\n\nContractPart : StateVarDecl                   { ContractPart $1 }\n\nStateVarDecl : TypeName \"public\" ident \";\"    { StateVar $1 $3 }\n                         | TypeName \"public\" ident \"=\" Expression \";\"       { StateV $1 $3 $5 }\n</code></pre>\n\n<p>The following file is my test 'contract':</p>\n\n<pre><code>pragma solidity;\ncontract identifier12 {\n   public variable = 1;\n}\n</code></pre>\n\n<p>The result is from passing in my test contract into the main function of my parser. </p>\n\n<pre><code>$ cat test.txt | ./main\nmain: Parse error at TContract (AlexPn 17 2 1)2:1\nCallStack (from HasCallStack):\n    error, called at ./Parser.hs:232:3 in main:Parser\n</code></pre>\n\n<p>From the error it suggest that the issue is the first letter of the 'contract' token, on line 2 column 1. But from my understanding this should parse properly?</p>\n"}, {"tags": ["haskell", "quickcheck"], "comments": [{"owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1517486959, "post_id": 48561942, "comment_id": 84120350, "body": "It appears you want to reduce code duplication. It may be illustrative to add a second example so one can understand the problem just from reading code. Imagine how you might pose the question to the smartest possible automated refactoring tool that does not understand natural language."}, {"owner": {"reputation": 1790, "user_id": 3350784, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OTuvN.png?s=128&g=1", "display_name": "Yuuri", "link": "https://stackoverflow.com/users/3350784/yuuri"}, "edited": false, "score": 0, "creation_date": 1517487214, "post_id": 48561942, "comment_id": 84120500, "body": "Probably you may write a sufficiently generalized helper that explicitly generates a list of inputs (see the <code>Gen</code> typeclass) for a given function, then feeds and compares it without calling <code>quickCheck</code> itself."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 2, "last_activity_date": 1517492513, "creation_date": 1517492513, "answer_id": 48564175, "question_id": 48561942, "link": "https://stackoverflow.com/questions/48561942/harvesting-function-outputs-as-well-as-inputs-from-haskell-quickcheck/48564175#48564175", "title": "Harvesting function outputs (as well as inputs) from Haskell Quickcheck", "body": "<p>There is a separate package to annotate properties with counterexamples (which can consist of inputs and outputs): <a href=\"https://hackage.haskell.org/package/quickcheck-with-counterexamples-1.0/docs/Test-QuickCheck-Counterexamples.html\" rel=\"nofollow noreferrer\">quickcheck-with-counterexamples</a>.</p>\n\n<p><a href=\"https://github.com/nick8325/quickcheck/issues/117\" rel=\"nofollow noreferrer\">This QuickCheck issue on Github</a> has some discussion on the same topic.</p>\n"}], "owner": {"reputation": 568, "user_id": 1800086, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/562dab684e4906d5dcdcb2a72fdbd2d0?s=128&d=identicon&r=PG", "display_name": "houthakker", "link": "https://stackoverflow.com/users/1800086/houthakker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1517492513, "creation_date": 1517485424, "question_id": 48561942, "link": "https://stackoverflow.com/questions/48561942/harvesting-function-outputs-as-well-as-inputs-from-haskell-quickcheck", "title": "Harvesting function outputs (as well as inputs) from Haskell Quickcheck", "body": "<p>What is the best way to tuple: 1. QuickCheck inputs to a predicate with 2. the outputs returned by a tested function ?</p>\n\n<p>Wanting to test (2 * 350) functions in a couple of other languages (to check for divergence from the behaviour of the Haskell base and Prelude functions which they imitate) my first experiment has been to:</p>\n\n<ul>\n<li>capture output from (QuickCheck) verboseCheck result strings</li>\n<li>apply the Haskell function to each of the (re-read) inputs which QuickCheck threw at it, to obtain the corresponding Haskell output</li>\n<li>use these inputs and outputs in automated checks of the parallel functions in other languages for divergences from the behaviour of the Haskell function</li>\n</ul>\n\n<p>For example, to get test data for a function on a list, something like:</p>\n\n<pre><code>testSet1\n  :: (Show a, Testable prop)\n  =&gt; String -&gt; String -&gt; ([Int] -&gt; a) -&gt; prop -&gt; IO ()\ntestSet1 folder fname f p = do\n  r &lt;- verboseCheckResult p\n  let ys =\n        ((,) &lt;*&gt; f) . read . listTuple1 &lt;$&gt;\n        splitOn [\"Passed:\"] (tail $ init $ (lines . output) r)\n  writeFile (concat [folder, fname, \".txt\"]) (show ys)\n</code></pre>\n\n<p>This works OK, at least for simple cases, but I cannot immediately find ways of generalising this kind of pattern to avoid having to write a separate function (to generate and capture inputs with outputs) for every variant of type signature.</p>\n\n<p>The key problem is that <strong>read</strong> typically needs some type information with which to parse the list of QuickCheck-generated inputs from their (QuickCheck result output) stringifications. </p>\n\n<p>Perhaps I am taking the wrong approach. Any thoughts ?  Template Haskell ?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "answers": [{"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1517480220, "post_id": 48560231, "comment_id": 84115963, "body": "I&#39;ve found out that ghc-mod does not support ghc version 8.2.2 yet <a href=\"https://github.com/DanielG/ghc-mod\" rel=\"nofollow noreferrer\">github.com/DanielG/ghc-mod</a>."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1517480260, "post_id": 48560231, "comment_id": 84115993, "body": "The is now, how to switch to a lower version?"}, {"owner": {"reputation": 3234, "user_id": 289686, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/psWEN.jpg?s=128&g=1", "display_name": "logcat", "link": "https://stackoverflow.com/users/289686/logcat"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1517480487, "post_id": 48560231, "comment_id": 84116149, "body": "you can switch whole stackage package set to lower version of lts-8.23 for example. Change <code>resolver: </code> in stack.yaml"}, {"owner": {"reputation": 3234, "user_id": 289686, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/psWEN.jpg?s=128&g=1", "display_name": "logcat", "link": "https://stackoverflow.com/users/289686/logcat"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1517480543, "post_id": 48560231, "comment_id": 84116192, "body": "you also can browse snapshots <a href=\"https://www.stackage.org/snapshots\" rel=\"nofollow noreferrer\">stackage.org/snapshots</a> and find newest lts which have ghc-mod."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1517480963, "post_id": 48560231, "comment_id": 84116507, "body": "How did you find out? I can not find ghc-mod on snapshosts?"}, {"owner": {"reputation": 3234, "user_id": 289686, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/psWEN.jpg?s=128&g=1", "display_name": "logcat", "link": "https://stackoverflow.com/users/289686/logcat"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1517481810, "post_id": 48560231, "comment_id": 84117134, "body": "you can click on the particular snapshot, I had to scroll back few pages to 7 months ago, click on lts-8.23 and search there for ghc-mod"}], "tags": [], "owner": {"reputation": 3234, "user_id": 289686, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/psWEN.jpg?s=128&g=1", "display_name": "logcat", "link": "https://stackoverflow.com/users/289686/logcat"}, "is_accepted": true, "score": 4, "last_activity_date": 1517480128, "creation_date": 1517480128, "answer_id": 48560231, "question_id": 48559090, "link": "https://stackoverflow.com/questions/48559090/while-constructing-the-build-plan-the-following-exceptions-were-encountered/48560231#48560231", "title": "While constructing the build plan, the following exceptions were encountered", "body": "<p>Your version of stackage does not have that package <a href=\"https://www.stackage.org/lts-10.4/hoogle?q=ghc-mod\" rel=\"nofollow noreferrer\">https://www.stackage.org/lts-10.4/hoogle?q=ghc-mod</a> . The old one has it <a href=\"https://www.stackage.org/lts-8.23/hoogle?q=ghc-mod\" rel=\"nofollow noreferrer\">https://www.stackage.org/lts-8.23/hoogle?q=ghc-mod</a> . I guess package is considered unmaintained as it was last updated in July 2017.</p>\n\n<p>You can read official documentation on how to add any package from hackage, particular section External Dependencies <a href=\"https://github.com/commercialhaskell/stack/blob/master/doc/GUIDE.md#external-dependencies\" rel=\"nofollow noreferrer\">https://github.com/commercialhaskell/stack/blob/master/doc/GUIDE.md#external-dependencies</a></p>\n\n<p>However, things might be broken with latest Haskell version.</p>\n"}, {"tags": [], "owner": {"reputation": 131, "user_id": 4948836, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mSQYM.jpg?s=128&g=1", "display_name": "kuttifunk", "link": "https://stackoverflow.com/users/4948836/kuttifunk"}, "is_accepted": false, "score": 3, "last_activity_date": 1518515156, "creation_date": 1518515156, "answer_id": 48763743, "question_id": 48559090, "link": "https://stackoverflow.com/questions/48559090/while-constructing-the-build-plan-the-following-exceptions-were-encountered/48763743#48763743", "title": "While constructing the build plan, the following exceptions were encountered", "body": "<p>For lts-10.4 you might use a workaround mentioned <a href=\"https://github.com/DanielG/ghc-mod/issues/900\" rel=\"nofollow noreferrer\">here</a> at the very bottom:\nInstall a release candidate for ghc-mod-5.9.0.0 and some more packages in stack.yaml under extra-deps. Then do a </p>\n\n<pre><code>stack build ghc-mod\nstack install ghc-mod\n</code></pre>\n\n<p>and you're done. At least \"works for me\" under ghc-8.2.2:</p>\n\n<pre><code>ghc-mod --version\n\n$&gt; ghc-mod version 5.9.0.0 compiled by GHC 8.2.2\n</code></pre>\n\n<p>I have not encountered any problems using it with atom yet.\nHope this helps.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2567, "favorite_count": 1, "accepted_answer_id": 48560231, "answer_count": 2, "score": 11, "last_activity_date": 1518515156, "creation_date": 1517476586, "question_id": 48559090, "link": "https://stackoverflow.com/questions/48559090/while-constructing-the-build-plan-the-following-exceptions-were-encountered", "title": "While constructing the build plan, the following exceptions were encountered", "body": "<p>I am trying to install </p>\n\n<pre><code>stack install ghc-mod\n</code></pre>\n\n<p>and I've got the following error:</p>\n\n<pre><code>In the dependencies for ghc-mod-5.8.0.0:\n    Cabal-2.0.1.1 from stack configuration does not match &gt;=1.18 &amp;&amp; &lt;1.25 (latest matching version is 1.24.2.0)\n    base-4.10.1.0 from stack configuration does not match &gt;=4.6.0.1 &amp;&amp; &lt;4.10 (latest matching version is 4.9.1.0)\n    cabal-helper must match &lt;0.8 &amp;&amp; &gt;=0.7.3.0, but the stack configuration has no specified version (latest matching version is 0.7.3.0)\n    extra-1.6.2 from stack configuration does not match &lt;1.6 &amp;&amp; &gt;=1.4 (latest matching version is 1.5.3)\n    ghc-8.2.2 from stack configuration does not match &gt;=7.6 &amp;&amp; &lt;8.2\n    monad-journal-0.8.1 from stack configuration does not match &lt;0.8 &amp;&amp; &gt;=0.4 (latest matching version is 0.7.2)\n    optparse-applicative-0.14.0.0 from stack configuration does not match &gt;=0.13.0.0 &amp;&amp; &lt;0.14 (latest matching version is 0.13.2.0)\nneeded since ghc-mod is a build target.\n\nSome potential ways to resolve this:\n\n  * Recommended action: try adding the following to your extra-deps in /home/developer/.stack/global-project/stack.yaml:\n\n- Cabal-1.24.2.0\n- base-4.9.1.0\n- cabal-helper-0.7.3.0\n- extra-1.5.3\n- monad-journal-0.7.2\n- optparse-applicative-0.13.2.0\n\n  * Set 'allow-newer: true' to ignore all version constraints and build anyway.\n\n  * You may also want to try using the 'stack solver' command.\n\nPlan construction failed.\n</code></pre>\n\n<p>I am using</p>\n\n<pre><code>~/.local/bin$ stack --version\nVersion 1.6.3, Git revision b27e629b8c4ce369e3b8273f04db193b060000db (5454 commits) x86_64 hpack-0.20.0\n</code></pre>\n\n<p>and ghc version 8.2.2. How to bypass the error? </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1517473801, "post_id": 48558283, "comment_id": 84112364, "body": "You can specify optimizations for for instance the <code>A</code> type: <a href=\"https://www.stackbuilders.com/tutorials/haskell/ghc-optimization-and-fusion/\" rel=\"nofollow noreferrer\">stackbuilders.com/tutorials/haskell/ghc-optimization-and-fus&zwnj;&#8203;ion</a>"}, {"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1517474382, "post_id": 48558283, "comment_id": 84112618, "body": "If you could provide some sample code showing differing results, that would be totally an anwser. If I read the linked article correctly, specializing is not a &quot;threat&quot; here, but rewrite rules are."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1517490994, "post_id": 48558283, "comment_id": 84123040, "body": "Of course; here is such a function: <code>typeRep :: Typeable a =&gt; Maybe a -&gt; TypeRep</code>"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1517500206, "post_id": 48558283, "comment_id": 84129424, "body": "No compiler extensions are necessary for providing different implementations of a class based on types. That&#39;s the whole point of classes. They dispatch based on compile-time type, not a run-time tag. (There are some blurry cases regarding polymorphic recursion, but even then the type information was worked out piecewise at compile-time.)"}, {"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 0, "creation_date": 1517537820, "post_id": 48558283, "comment_id": 84146195, "body": "Woa, just noticed, that <i>facepalm</i>. Sorry for the noise question."}], "answers": [{"comments": [{"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 0, "creation_date": 1517477900, "post_id": 48558835, "comment_id": 84114526, "body": "Those are interesting and enlightening examples. They aren&#39;t answers to my question though, as <code>:t doSomething</code> yields <code>doSomething :: SomeClass a  =&gt; a -&gt; String</code>, which isn&#39;t the type <code>SomeClass a =&gt; Maybe a -&gt; String</code> which would be the function I asked for in your example."}, {"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 0, "creation_date": 1517478078, "post_id": 48558835, "comment_id": 84114649, "body": "To explain, why I am nitpicking here: I want to know, if I see that signature in a library, If I have to worry about, which type of Nothing I do pass in."}, {"owner": {"reputation": 807, "user_id": 1278218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc600c707e4f698ad2e6d0a1b9d9f119?s=128&d=identicon&r=PG", "display_name": "erdeszt", "link": "https://stackoverflow.com/users/1278218/erdeszt"}, "reply_to_user": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 0, "creation_date": 1517480454, "post_id": 48558835, "comment_id": 84116125, "body": "I see, I slightly misunderstood your question. I&#39;ll try to update the examples."}], "tags": [], "owner": {"reputation": 807, "user_id": 1278218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc600c707e4f698ad2e6d0a1b9d9f119?s=128&d=identicon&r=PG", "display_name": "erdeszt", "link": "https://stackoverflow.com/users/1278218/erdeszt"}, "is_accepted": false, "score": 2, "last_activity_date": 1517476877, "last_edit_date": 1517476877, "creation_date": 1517475736, "answer_id": 48558835, "question_id": 48558283, "link": "https://stackoverflow.com/questions/48558283/can-the-result-of-fun-sometypeclass-a-maybe-a-result-change-if-i-pa/48558835#48558835", "title": "Can the result of `fun :: (SomeTypeClass a) =&gt; Maybe a -&gt; Result` change if I pass differently typed values of `Nothing`?", "body": "<p>The easiest way I could come up with to achieve this is the following hack:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n\ndata A = A\ndata B = B\n\nclass SomeClass a where\n  doSomething :: a -&gt; String\n\ninstance SomeClass A where\n  doSomething _ = \"always a\"\n\ninstance SomeClass B where\n  doSomething _ = \"always b\"\n\ninstance SomeClass a =&gt; SomeClass (Maybe a) where\n  doSomething (Just x) = doSomething x\n  doSomething Nothing = doSomething (undefined :: a)\n\nmain = print (doSomething (Nothing :: Maybe A), doSomething (Nothing :: Maybe B), doSomething (Just A))\n</code></pre>\n\n<p>You can get around the ugly <code>undefined</code> by using a <code>data Proxy a = Proxy</code> data type. I'm not sure how useful this is in practice as you cannot inspect the input in the instances for <code>A</code> and <code>B</code>.</p>\n\n<p>Edit: here's the proxied version where you can inspect the inputs when they are <code>Just a</code>:</p>\n\n<pre><code>{-# LANGUAGE FlexibleContexts, FlexibleInstances, UndecidableInstances, ScopedTypeVariables #-}\n\ndata A = A Int\ndata B = B Int\n\ndata Proxy a = Proxy\n\nclass SomeClass a where\n  doSomething :: a -&gt; String\n\ninstance SomeClass A where\n  doSomething (A x) = \"always A with \" ++ show x\n\ninstance SomeClass B where\n  doSomething (B x) = \"always B with \" ++ show x\n\ninstance SomeClass (Proxy A) where\n    doSomething Proxy = \"proxy A(Nothing)\"\n\ninstance SomeClass (Proxy B) where\n    doSomething Proxy = \"proxy B(Nothing)\"\n\ninstance (SomeClass a, SomeClass (Proxy a)) =&gt; SomeClass (Maybe a) where\n  doSomething (Just x) = doSomething x\n  doSomething Nothing = doSomething (Proxy :: Proxy a)\n\nmain = print (doSomething (Nothing :: Maybe A), doSomething (Nothing :: Maybe B), doSomething (Just $ A 2))\n</code></pre>\n\n<p>It feels even more like a hack though(<code>UndecidableInstances</code> yikes)</p>\n"}, {"tags": [], "owner": {"reputation": 1790, "user_id": 3350784, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OTuvN.png?s=128&g=1", "display_name": "Yuuri", "link": "https://stackoverflow.com/users/3350784/yuuri"}, "is_accepted": false, "score": 0, "last_activity_date": 1517483860, "last_edit_date": 1517483860, "creation_date": 1517482750, "answer_id": 48561125, "question_id": 48558283, "link": "https://stackoverflow.com/questions/48558283/can-the-result-of-fun-sometypeclass-a-maybe-a-result-change-if-i-pa/48561125#48561125", "title": "Can the result of `fun :: (SomeTypeClass a) =&gt; Maybe a -&gt; Result` change if I pass differently typed values of `Nothing`?", "body": "<p>Adding another typeclass helper can avoid the <code>ScopedTypeVariables</code> extension can be avoided if we introduce another typeclass helper with the default <code>fun</code> implementation that calls ad-hoc \"overloaded\" <code>Nothing</code> cases which use their argument for type deducing only: </p>\n\n<pre><code>type Result = String\n\ndata A = A\ndata B = B\n\nclass SomeClass a where\n    foo :: a -&gt; Result\n\ninstance SomeClass A where\n    foo _ = \"A\"\n\ninstance SomeClass B where\n    foo _ = \"B\"\n\nclass SomeClass a =&gt; Fun a where\n    fun :: Maybe a -&gt; Result\n    fun (Just a) = foo a\n    fun a = funNothing a\n\n    funNothing :: Maybe a -&gt; Result\n\ninstance Fun A where\n    funNothing _ = \"No A\"\n\ninstance Fun B where\n    funNothing _ = \"No B\"\n\nmain = do\n    putStrLn $ fun (Just A)\n    putStrLn $ fun (Just B)\n    putStrLn $ fun (Nothing :: Maybe A)\n    putStrLn $ fun (Nothing :: Maybe B)\n</code></pre>\n\n<p>When a new type is added, fun can be easily extended with a new <code>Fun</code> instance.</p>\n"}, {"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 5, "last_activity_date": 1517495154, "last_edit_date": 1517495154, "creation_date": 1517483794, "answer_id": 48561434, "question_id": 48558283, "link": "https://stackoverflow.com/questions/48558283/can-the-result-of-fun-sometypeclass-a-maybe-a-result-change-if-i-pa/48561434#48561434", "title": "Can the result of `fun :: (SomeTypeClass a) =&gt; Maybe a -&gt; Result` change if I pass differently typed values of `Nothing`?", "body": "<p>Sure, with <code>Result</code> = <code>String</code> and <code>SomeTypeClass a</code> = <code>(Monoid a, Show a)</code>:</p>\n\n<pre><code>import Data.Foldable\ndoSomething :: (Show a, Monoid a) =&gt; Maybe a -&gt; String\ndoSomething = show . fold\n\ndoSomething (Nothing :: Maybe String) == \"\\\"\\\"\"\ndoSomething (Nothing :: Maybe [Int] == \"[]\"\ndoSomething (Nothing :: Maybe (Product Int)) == \"Product {getProduct=1}\"\ndoSomething (Nothing :: Maybe (Sum Int)) == \"Sum {getSum=0}\"\n</code></pre>\n\n<p>Not the only example of course, but probably the simplest (also, something which is at least similar to something you might encounter in real code).</p>\n"}, {"tags": [], "owner": {"reputation": 2570, "user_id": 4142266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rMCN5.png?s=128&g=1", "display_name": "mschmidt", "link": "https://stackoverflow.com/users/4142266/mschmidt"}, "is_accepted": false, "score": 0, "last_activity_date": 1517484829, "creation_date": 1517484829, "answer_id": 48561751, "question_id": 48558283, "link": "https://stackoverflow.com/questions/48558283/can-the-result-of-fun-sometypeclass-a-maybe-a-result-change-if-i-pa/48561751#48561751", "title": "Can the result of `fun :: (SomeTypeClass a) =&gt; Maybe a -&gt; Result` change if I pass differently typed values of `Nothing`?", "body": "<p>I might be wrong, but I understand it the following way:</p>\n\n<p>To implement a function <code>fun</code> like this, you need ad-hoc polymorphism, i.e. you need different implementations of <code>fun</code> for different input types. Without the possibility to get an <code>a</code> of the correct type out of <code>Nothing</code> (i.e. thin air), the answer would be <strong>no</strong>.</p>\n\n<p>However, if your type class <code>SomeTypeClass</code> has a function:</p>\n\n<pre><code>f :: Maybe a -&gt; Result\n</code></pre>\n\n<p>then <code>fun</code> can be identical to <code>f</code>:</p>\n\n<pre><code>fun = f\n</code></pre>\n\n<p>Now you have ad-hoc polymorphism by implementing different versions of <code>f</code> in your instances. I.e. the answer is <strong>yes</strong>, but you have to implement the relevant parts of your problem in the type class.</p>\n"}, {"comments": [{"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 0, "creation_date": 1517538052, "post_id": 48574787, "comment_id": 84146236, "body": "It didn&#39;t occurred to me, until now, that I don&#39;t need to always have signatures like <code>a -&gt; Something</code> in a type class, but I can bury the type <code>a</code> which will need to have an instance for the type class in some different types like in <code>Maybe a -&gt; Something</code>."}], "tags": [], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "is_accepted": false, "score": 1, "last_activity_date": 1517537953, "creation_date": 1517537953, "answer_id": 48574787, "question_id": 48558283, "link": "https://stackoverflow.com/questions/48558283/can-the-result-of-fun-sometypeclass-a-maybe-a-result-change-if-i-pa/48574787#48574787", "title": "Can the result of `fun :: (SomeTypeClass a) =&gt; Maybe a -&gt; Result` change if I pass differently typed values of `Nothing`?", "body": "<p>For reference the most basic example, I found:</p>\n\n<pre><code>module TestNothings where\n\nclass SomeClass a where\n    doSomething :: Maybe a -&gt; Int\n\nnewtype A = A Int deriving (Eq, Show)\nnewtype B = B Int deriving (Eq, Show)\nnewtype C = C Int deriving (Eq, Show)\n\ninstance SomeClass A where\n    doSomething (Just (A i)) = i\n    doSomething Nothing = 0\n\ninstance SomeClass B where\n    doSomething (Just (B i)) = i\n    doSomething Nothing = 1\n\ninstance SomeClass C where\n    doSomething (Just (C i)) = i\n    doSomething Nothing = 2\n</code></pre>\n"}], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 48561434, "answer_count": 5, "score": 3, "last_activity_date": 1517537953, "creation_date": 1517473637, "last_edit_date": 1517473707, "question_id": 48558283, "link": "https://stackoverflow.com/questions/48558283/can-the-result-of-fun-sometypeclass-a-maybe-a-result-change-if-i-pa", "title": "Can the result of `fun :: (SomeTypeClass a) =&gt; Maybe a -&gt; Result` change if I pass differently typed values of `Nothing`?", "body": "<p>Pretty much the headline, but let's elaborate:</p>\n\n<p>Assume I have some type class <code>SomeTypeClass</code> and different types <code>A</code>, <code>B</code>, <code>C</code> which each have an instance for it.</p>\n\n<p>Let's further assume I have a function</p>\n\n<pre><code>fun :: (SomeTypeClass a) =&gt; Maybe a -&gt; Result\n</code></pre>\n\n<p>for some type constant <code>Result</code>.</p>\n\n<p>Can the expressions</p>\n\n<ol>\n<li><code>fun (Nothing :: Maybe A)</code></li>\n<li><code>fun (Nothing :: Maybe B)</code></li>\n<li><code>fun (Nothing :: Maybe C)</code></li>\n</ol>\n\n<p>yield different results somehow?</p>\n\n<p>(Maybe by some compiler extension to provide different implementations for <code>fun</code> depending on the argument type or something.)    </p>\n"}, {"tags": ["list", "haskell", "types"], "comments": [{"owner": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "edited": false, "score": 1, "creation_date": 1517462883, "post_id": 48555848, "comment_id": 84107867, "body": "<code>length [unpack [1,2,3]] == 1</code>, but <code>length [1,2,3] == 3</code>, so equating these two is contradictory"}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "edited": false, "score": 0, "creation_date": 1517462983, "post_id": 48555848, "comment_id": 84107889, "body": "Not if <code>unpack</code> gets evaluated before <code>length</code>, is it not?"}, {"owner": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "edited": false, "score": 1, "creation_date": 1517463160, "post_id": 48555848, "comment_id": 84107944, "body": "length is independent on the evaluation of the list elements (as long as that doesnt crash the program). Doesn&#39;t matter how you imlement unpack"}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "edited": false, "score": 0, "creation_date": 1517463327, "post_id": 48555848, "comment_id": 84108014, "body": "So it is impossible even semantically due to contradiction. But... I mean... I can perform this function manually... why? What is the central error here?"}, {"owner": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "edited": false, "score": 4, "creation_date": 1517463437, "post_id": 48555848, "comment_id": 84108045, "body": "what do you think <code>unpack [1,2,3]</code> by itself should evaluate to?"}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "edited": false, "score": 0, "creation_date": 1517463565, "post_id": 48555848, "comment_id": 84108087, "body": "Yes, that is where I got stuck when writing <code>unpack</code>. In Python I would make it a generator."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1517463852, "post_id": 48555848, "comment_id": 84108190, "body": "Let&#39;s try a different question. What would the type of that function be?"}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1517464016, "post_id": 48555848, "comment_id": 84108237, "body": "@ReinHenrichs Possibly some construct that I am unaware of, that is why I am asking. I could not write it with what I know so far, but I also could not be sure that there is no construct that would allow this. Just as a generator in Python."}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1517481528, "post_id": 48555848, "comment_id": 84116922, "body": "So you want to flatten a list?"}], "answers": [{"comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 5, "creation_date": 1517465237, "post_id": 48556165, "comment_id": 84108678, "body": "FWIW, this is a rose tree (with values only at the leaves) and the <code>toList</code> you would get by implementing <code>Foldable</code> for it."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1517490639, "post_id": 48556165, "comment_id": 84122786, "body": "One might object to that <code>Show</code> instance, since the shown \u201cnested lists\u201d aren&#39;t actually valid Haskell code. Although it&#39;s <a href=\"https://codegolf.stackexchange.com/questions/113238/is-it-true-ask-jelly/113416#113416\">possible to <i>make</i> them valid Haskell, using the <code>-XOverloadedLists</code> extension</a>."}], "tags": [], "owner": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "is_accepted": true, "score": 5, "last_activity_date": 1517464551, "last_edit_date": 1517464551, "creation_date": 1517464177, "answer_id": 48556165, "question_id": 48555848, "link": "https://stackoverflow.com/questions/48555848/is-a-function-that-unpacks-lists-possible/48556165#48556165", "title": "Is a function that unpacks lists possible?", "body": "<p>As written in the comments, the program you want is not possible in Haskell.</p>\n\n<p>Here's a possible alternative: Create a datatype</p>\n\n<pre><code>data Unpack a = Unpack [Unpack a] | Elem a\n  deriving (Eq, Ord)\n</code></pre>\n\n<p>Further you can write a function which evaluates the unpacking:</p>\n\n<pre><code>unpacked :: [Unpack a] -&gt; [a]\nunpacked [] = []\nunpacked (Unpack x : xr) = unpacked x ++ unpacked xr\nunpacked (Elem x : xr) = x : unpacked xr\n</code></pre>\n\n<p>Let's make the output prettier:</p>\n\n<pre><code>instance Show a =&gt; Show (Unpack a) where\n  show (Unpack xs) = show xs\n  show (Elem x)    = show x\n</code></pre>\n\n<p>Example usage in ghci:</p>\n\n<pre><code>&gt; list = [Unpack [Elem 1, Unpack [Elem 3, Elem 4]], Unpack [Elem 5, Elem 6, Elem 7]]\n[[1,[3,4]],[5,6,7]]\n\n&gt; unpacked list\n[1,3,4,5,6,7]\n</code></pre>\n"}], "owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 48556165, "answer_count": 1, "score": 0, "last_activity_date": 1517464551, "creation_date": 1517462448, "question_id": 48555848, "link": "https://stackoverflow.com/questions/48555848/is-a-function-that-unpacks-lists-possible", "title": "Is a function that unpacks lists possible?", "body": "<p>I have the following problem, I want to write a function that generates nested lists and then unpacks the nested lists into a single list.</p>\n\n<p>A function that generates nested lists of a dynamic degree depending on its arguments obviously does not type-check, as the return type would vary depending on the arguments. However is it possible to recursively unpack lists to always return a flat list?</p>\n\n<p>Suppose the non-possible function would return this for an argument of 2:</p>\n\n<pre><code>[ [ [a], [b] ], [ [c], [d] ] ]\n</code></pre>\n\n<p>and this for an argument of 3:</p>\n\n<pre><code>[[[[a], [b], [c]], [[d], [e], [f]], [[g], [h], [i]]], [[[j], [k], [l]], [[m], [n], [o]], [[p], [q], [r]]], [[[s], [t], [u]], [[v], [w], [x]], [[y], [z], [a1]]]]\n</code></pre>\n\n<p>Now I would like to have some function that I can put into the recursive call that would result in something like this:</p>\n\n<pre><code>[ unpack [ unpack [a], unpack [b] ], unpack [ unpack [c], unpack [d] ] ]\n</code></pre>\n\n<p>which in turn would evaluate to <code>[a, b, c, d]</code></p>\n\n<p>I was able to write something like this for list of only one element:</p>\n\n<pre><code>unpack [x] = x\n\nf 1 = [0]\nf n = [unpack $ f x | x &lt;- [1..n-1]]\n\n*Main&gt; f 3\n[0,0]\n</code></pre>\n\n<p>But obviously it fails for 4:</p>\n\n<pre><code>*Main&gt; f 4\n[0,0,*** Exception: Non-exhaustive patterns in function unpack\n</code></pre>\n\n<p>Manual \"trace\":</p>\n\n<pre><code>f 3 = [unpack $ f x | x &lt;- [1..3-1]]\n    = [ unpack $ f 1, unpack $ f 2]\n    = [ unpack [0], unpack [f x | x &lt;- [1..2-1]]]\n    = [ unpack [0], unpack [f 1] ]\n    = [ unpack [0], unpack [0] ]\n    = [0, 0]\n</code></pre>\n\n<p>Is such a function theoretically possible? I have a strong feeling that not... but maybe that feeling is wrong.</p>\n\n<p>If it has not become clear yet what I have in mind: This <code>[unpack [1,2,3]]</code> would result in the list <code>[1,2,3]</code>.</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1517464670, "post_id": 48554493, "comment_id": 84108468, "body": "As a thumb rule, you should avoid <code>head,tail</code>, and prefer pattern matching as done by the answer below."}, {"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1517492881, "post_id": 48554493, "comment_id": 84124287, "body": "I will try and remember that, thank you. This is my first time working in Haskell, so I am just now learning how some of these things work."}], "answers": [{"comments": [{"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517453371, "post_id": 48554565, "comment_id": 84105521, "body": "So, when you call everyThird xs = helper 0 xs, you are calling a helper function (helper) that checks for those three cases? And then returns the list that is left when it has all been checked?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517454306, "post_id": 48554565, "comment_id": 84105701, "body": "Exactly. And note that <code>helper</code> calls itself to get the rest of the list. Thinking recursively like this is how Haskell works, and it helps you compartmentalize the problem by dealing with only one step at a time."}, {"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517454673, "post_id": 48554565, "comment_id": 84105780, "body": "Thank you very much, I appreciate your help!"}, {"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517853702, "post_id": 48554565, "comment_id": 84254223, "body": "Is there anyway to re-write this without using where? Or other things such as let?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517854826, "post_id": 48554565, "comment_id": 84254842, "body": "You can replace most any recursive function with a fairly complicated <code>fix</code> call, but that would just be slightly overkill. Why do you want to avoid the declaration of local variables/functions?"}, {"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517854880, "post_id": 48554565, "comment_id": 84254873, "body": "I am trying to get a feel for the language without using any tools or helpers, it helps to get a better understanding as to what is going on."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517861713, "post_id": 48554565, "comment_id": 84258499, "body": "<code>where</code>/<code>let</code> is the equivalent of declaring a local variable in any other language. It&#39;s really very fundamental to the language. But if you want to save such constructs for later, you could define <code>helper</code> as a global function and then call it."}, {"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517865452, "post_id": 48554565, "comment_id": 84260293, "body": "Thank you, I think I solved it, and I appreciate your insight!"}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 5, "last_activity_date": 1517453111, "creation_date": 1517453111, "answer_id": 48554565, "question_id": 48554493, "link": "https://stackoverflow.com/questions/48554493/how-to-create-haskell-function-that-returns-every-third-element-from-a-list-of-i/48554565#48554565", "title": "How to create Haskell function that returns every third element from a list of ints", "body": "<p>You want to do exactly what you said: iterate over the list and include the element only on each third call. However, there's a problem. Haskell is a funny language where the idea of \"changing\" a variable doesn't make sense, so the usual approach of \"have a counter variable <code>i</code> which tells us whether we're on the third element or not\" won't work in the usual way. Instead, we'll create a recursive helper function to maintain the count for us.</p>\n\n<pre><code>everyThird :: [Int] -&gt; [Int]\neveryThird xs = helper 0 xs\n  where helper _ [] = []\n        helper 0 (x : xs) = x : helper 2 xs\n        helper n (_ : xs) = helper (n - 1) xs\n</code></pre>\n\n<p>We have three cases in the helper.</p>\n\n<ol>\n<li>If the list is empty, stop and return the empty list.</li>\n<li>If the counter is at 0 (that is, if we're on the third element), make a list starting with the current element and ending with the rest of the computation.</li>\n<li>If the counter is not at zero, count down and continue iteration.</li>\n</ol>\n\n<p>Because of the way pattern matching works, it will try these three statements in order.</p>\n\n<p>Notice how we use an additional argument to be the counter variable since we can't mutate the variable like we would in an imperative language. Also, notice how we construct the list recursively; we never \"append\" to an existing list because that would imply that we're mutating the list. We simply build the list up from scratch and end up with the correct result on the first go round.</p>\n"}, {"comments": [{"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517454202, "post_id": 48554658, "comment_id": 84105685, "body": "So referring to the last part of your post, calling everyThird[] = [] will check if the list is empty, and if it is will return an empty list? Then the next call (everyThird (x:xs) = x :everyThird (drop 2xs) will take the list, drop the first two ints from it, and append the next one? I am new to Haskell and this all seems like wizardry to me"}, {"owner": {"reputation": 1508, "user_id": 7821979, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zjUOL.jpg?s=128&g=1", "display_name": "5ar", "link": "https://stackoverflow.com/users/7821979/5ar"}, "reply_to_user": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517454698, "post_id": 48554658, "comment_id": 84105785, "body": "Yes, maybe an example will help. Let&#39;s say we have <code>[1,2,3,4,5]</code>. The list isn&#39;t empty so it matches the second expression and builds <code>1:everyThird(drop 2 [2,3,4,5])</code> which evaluates to <code>1:everyThird([4,5])</code>. Ok, great, we have the first element, in the second call we build a similar expression and append it to the first one, so something like <code>1:4:everyThird(drop 2 [5])</code> is generated. Dropping two from <code>[5]</code>generates an empty list which matches the first function definition so the final expression is <code>1:4:[]</code> which is the same as <code>[1,4]</code> (the latter is just syntactic sugar)"}, {"owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517454841, "post_id": 48554658, "comment_id": 84105813, "body": "That example helped a ton, I was not quite sure how it was working in the beginning and now it is much more clear. Thank you very much!"}, {"owner": {"reputation": 1508, "user_id": 7821979, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zjUOL.jpg?s=128&g=1", "display_name": "5ar", "link": "https://stackoverflow.com/users/7821979/5ar"}, "reply_to_user": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "edited": false, "score": 0, "creation_date": 1517454946, "post_id": 48554658, "comment_id": 84105838, "body": "No problem, good luck with your Haskell studying, and don&#39;t worry - a lot of things in Haskell take some time to sink in :)"}], "tags": [], "owner": {"reputation": 1508, "user_id": 7821979, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zjUOL.jpg?s=128&g=1", "display_name": "5ar", "link": "https://stackoverflow.com/users/7821979/5ar"}, "is_accepted": false, "score": 5, "last_activity_date": 1517453968, "creation_date": 1517453968, "answer_id": 48554658, "question_id": 48554493, "link": "https://stackoverflow.com/questions/48554493/how-to-create-haskell-function-that-returns-every-third-element-from-a-list-of-i/48554658#48554658", "title": "How to create Haskell function that returns every third element from a list of ints", "body": "<p>Haskell doesn't have classical iteration (i.e. no loops), at least not without monads, but you can use similar logic as you would in a for loop by zipping your list with indexes <code>[0..]</code> and applying appropriate functions from Data.List.</p>\n\n<p>E.g. What you need to do is filter every third element:</p>\n\n<pre><code>everyThirdWithIndexes list = filter (\\x -&gt; snd x `mod` 3 == 0) $ zip list [0..]\n</code></pre>\n\n<p>&nbsp;</p>\n\n<p>Of course you have to get rid of the indexes, there are two elegant ways you can do this:</p>\n\n<pre><code>everyThird list = map (fst) . everyThirdWithIndexes list\n-- or:\neveryThird list = fst . unzip . everyThirdWithIndexes list\n</code></pre>\n\n<p>&nbsp;</p>\n\n<p>If you're not familiar with filter and map, you can define a simple recursion that builds a list from every first element of a list, drops the next two and then adds another from a new function call:</p>\n\n<pre><code>everyThird [] = []  -- both in case if the list is empty and the end case\neveryThird (x:xs) = x : everyThird (drop 2 xs)\n</code></pre>\n\n<p>&nbsp;</p>\n\n<p>EDIT: If you have any questions about these solutions (e.g. some syntax that you are not familiar with), feel free to ask in the comments. :)</p>\n"}, {"tags": [], "owner": {"reputation": 2638, "user_id": 7208029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QxbAJ.png?s=128&g=1", "display_name": "Chai T. Rex", "link": "https://stackoverflow.com/users/7208029/chai-t-rex"}, "is_accepted": false, "score": 9, "last_activity_date": 1517453997, "creation_date": 1517453997, "answer_id": 48554661, "question_id": 48554493, "link": "https://stackoverflow.com/questions/48554493/how-to-create-haskell-function-that-returns-every-third-element-from-a-list-of-i/48554661#48554661", "title": "How to create Haskell function that returns every third element from a list of ints", "body": "<p>One other way of doing this is to handle three different base cases, in all of which we're at the end of the list and the list is less than three elements long, and one recursive case, where the list is at least three elements long:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>everyThird :: [a] -&gt; [a]\neveryThird []         = []\neveryThird [x]        = [x]\neveryThird [x, _]     = [x]\neveryThird (x:_:_:xs) = x:everyThird xs\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1517477699, "post_id": 48557006, "comment_id": 84114403, "body": "He didn&#39;t want to use pre-defined functions. Apart from that a good answer."}], "tags": [], "owner": {"reputation": 22954, "user_id": 5238915, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/fncqh.jpg?s=128&g=1", "display_name": "RoadRunner", "link": "https://stackoverflow.com/users/5238915/roadrunner"}, "is_accepted": false, "score": 2, "last_activity_date": 1517468966, "last_edit_date": 1517468966, "creation_date": 1517468359, "answer_id": 48557006, "question_id": 48554493, "link": "https://stackoverflow.com/questions/48554493/how-to-create-haskell-function-that-returns-every-third-element-from-a-list-of-i/48557006#48557006", "title": "How to create Haskell function that returns every third element from a list of ints", "body": "<p>You can also use <a href=\"https://hackage.haskell.org/package/split-0.2.3.3/docs/Data-List-Split.html#v:chunksOf\" rel=\"nofollow noreferrer\"><code>chunksOf</code></a> from <code>Data.List.Split</code> to seperate the lists into chunks of 3, then just map the first element of each:</p>\n\n<pre><code>import Data.List.Split\n\neveryThird :: [a] -&gt; [a]\neveryThird xs = map head $ chunksOf 3 xs\n</code></pre>\n\n<p>Which works as follows:</p>\n\n<pre><code>*Main&gt; everyThird [1,2,3,4,5]\n[1,4]\n</code></pre>\n\n<p><strong>Note:</strong> You may need to run <code>cabal install split</code> to use <code>chunksOf</code>. </p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 5, "last_activity_date": 1517505775, "creation_date": 1517505775, "answer_id": 48568433, "question_id": 48554493, "link": "https://stackoverflow.com/questions/48554493/how-to-create-haskell-function-that-returns-every-third-element-from-a-list-of-i/48568433#48568433", "title": "How to create Haskell function that returns every third element from a list of ints", "body": "<p>One classic approach:</p>\n\n<pre><code>everyThird xs = [x | (1,x) &lt;- zip (cycle [1..3]) xs]\n</code></pre>\n"}], "owner": {"reputation": 117, "user_id": 8206309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yJtSm.jpg?s=128&g=1", "display_name": "PushedCrayon", "link": "https://stackoverflow.com/users/8206309/pushedcrayon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1411, "favorite_count": 0, "accepted_answer_id": 48554565, "answer_count": 5, "score": 0, "last_activity_date": 1517505775, "creation_date": 1517452418, "last_edit_date": 1517471601, "question_id": 48554493, "link": "https://stackoverflow.com/questions/48554493/how-to-create-haskell-function-that-returns-every-third-element-from-a-list-of-i", "title": "How to create Haskell function that returns every third element from a list of ints", "body": "<p>I want to create a function that returns every third int from a list of ints without using any predefined functions. For example, <code>everyThird [1,2,3,4,5] --&gt; [1,4]</code></p>\n\n<pre><code>everyThird:: [a] -&gt; [a]\n</code></pre>\n\n<p>Could I just continue to iterate over the list using tail and appending to a new list every third call? I am new to Haskell and very confused with all of this</p>\n"}]