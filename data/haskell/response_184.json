[{"tags": ["haskell"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 2, "creation_date": 1531955836, "post_id": 51412165, "comment_id": 89796062, "body": "You&#39;ll want to check for two cases: What should you return if n is 1? What should you do if n is greater than 1?"}], "answers": [{"comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531989216, "post_id": 51412325, "comment_id": 89806802, "body": "I think the OP wants to use 1-based indices. That is why the second case has an <code>error</code> as well."}], "tags": [], "owner": {"reputation": 58, "user_id": 10102358, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CLSltd3rmjE/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7rZpBvod8TQ7AKPmfDN-1fcjeztRQ/mo/photo.jpg?sz=128", "display_name": "Josh Wright", "link": "https://stackoverflow.com/users/10102358/josh-wright"}, "is_accepted": false, "score": 2, "last_activity_date": 1531975200, "last_edit_date": 1531975200, "creation_date": 1531956752, "answer_id": 51412325, "question_id": 51412165, "link": "https://stackoverflow.com/questions/51412165/how-to-return-the-second-item-of-the-nth-pair-in-a-given-list-haskell/51412325#51412325", "title": "How to return the second item of the nth pair in a given list (Haskell)", "body": "<p>To fill in from what you have so far:</p>\n\n<pre><code>nth :: Int -&gt; [(Int,Int)] -&gt; Int\nnth n [] = error \"??\"\nnth 0 (x:xs) = snd x\nnth n (x:xs)\n  |n &gt; 0 &amp;&amp; n &lt; length (x:xs) = nth (n-1) xs\n</code></pre>\n\n<p>(The <code>snd</code> function simply returns the second element of a pair)</p>\n\n<p>However, you might try simply combining the <code>!!</code> and <code>snd</code> functions like this:</p>\n\n<pre><code>nth' :: Int -&gt; [(Int,Int)] -&gt; Int\nnth' n xs = snd (xs !! n)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 1, "last_activity_date": 1531989771, "creation_date": 1531989771, "answer_id": 51418109, "question_id": 51412165, "link": "https://stackoverflow.com/questions/51412165/how-to-return-the-second-item-of-the-nth-pair-in-a-given-list-haskell/51418109#51418109", "title": "How to return the second item of the nth pair in a given list (Haskell)", "body": "<p>You need to <em>recurse</em> on the <em>tail</em> of the list. You thus call the function again, but with <code>n-1</code>, and the tail of the list. As base case, we then check if the index is the case, we return the second element of this the  case, we return the second element of that tuple. an implementation that does not uses any builtin functions, could look like:</p>\n\n<pre><code>nth :: Int -&gt; [(a, b)] -&gt; b\nnth _ [] = error \"Index too large\"\nnth n _ | n &lt;= 0 = error \"Index too small\"\nnth 1 ((_, b):_) = b\nnth n (_: xs) = nth (n-1) xs\n</code></pre>\n\n<p>But actually we can use the <code>(!!) :: [a] -&gt; Int -&gt; a</code>, <code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code> and <code>snd :: (a, b) -&gt; b</code> funstions, and thus write it like:</p>\n\n<pre><code>nth n = snd . (!! (n-1))\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 0, "last_activity_date": 1531998424, "creation_date": 1531998424, "answer_id": 51421101, "question_id": 51412165, "link": "https://stackoverflow.com/questions/51412165/how-to-return-the-second-item-of-the-nth-pair-in-a-given-list-haskell/51421101#51421101", "title": "How to return the second item of the nth pair in a given list (Haskell)", "body": "<pre><code>nth2nd :: Int -&gt; [(Int,Int)] -&gt; Int\nnth2nd n xs = head [b | (i,(_,b)) &lt;- zip [1..] xs, i==n]\n</code></pre>\n\n<p>is all you need. Of course this function is partial, i.e. if <code>n</code> is greater than the list's length it'll cause an error, and if <code>n</code> is less than 1 it'll try to traverse the whole list needlessly, and then cause an error (or loop indefinitely if the list is infinite).</p>\n\n<p>This isn't usually considered to be a good thing. We usually prefer to explicate the possibility of failure with <code>Maybe</code>, thus making the function <em>total</em>:</p>\n\n<pre><code>import Data.Maybe\n\nnth2ndMaybe :: Int -&gt; [(Int,Int)] -&gt; Maybe Int\nnth2ndMaybe n xs = listToMaybe [b | (i,(_,b)) &lt;- zip [1..] xs, i==n]\n</code></pre>\n\n<p>It'll still bomb on non-positive <code>n</code>s though. Adding a guard will help in handing this situation, preferably by returning <code>Nothing</code> explicitly:</p>\n\n<pre><code>nth2ndMaybe n xs \n          | n &lt; 1     = Nothing\n          | otherwise = ......\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 181, "user_id": 3511511, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5f695d53cc3acd300a9e119b40c9d7ac?s=128&d=identicon&r=PG", "display_name": "user12457", "link": "https://stackoverflow.com/users/3511511/user12457"}, "is_accepted": false, "score": 1, "last_activity_date": 1532013504, "creation_date": 1532013504, "answer_id": 51426343, "question_id": 51412165, "link": "https://stackoverflow.com/questions/51412165/how-to-return-the-second-item-of-the-nth-pair-in-a-given-list-haskell/51426343#51426343", "title": "How to return the second item of the nth pair in a given list (Haskell)", "body": "<p>You could first break the problem into small parts and then work, test each part; you finally put them back together.</p>\n\n<pre><code>-- 1. Pair each element with an index starting from 1   -&gt; [(Int, (Int, Int))]\n-- 2. Find the nth-index element                        -&gt; Maybe (Int, (Int, Int))\n-- 3. Get the 2nd element of the second element         -&gt; Int\n</code></pre>\n\n<p>put the above 3 together you get:</p>\n\n<pre><code>import Data.Foldable(find)\n\nnth :: Int -&gt; [(Int, Int)] -&gt; Int\nnth n = get2ndIn2nd . findByIndex n\n  where    \n    findByIndex n xs = find ((n ==) . fst) $ zip [1..] xs \n    get2ndIn2nd p\n        | (Just (_, (_, b))) &lt;- p = b\n        | otherwise = error \"Boo!\"\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 10102326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/689724243a76604f58584fee681ee843?s=128&d=identicon&r=PG&f=1", "display_name": "sam", "link": "https://stackoverflow.com/users/10102326/sam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 565, "favorite_count": 1, "answer_count": 4, "score": 0, "last_activity_date": 1532013504, "creation_date": 1531955302, "last_edit_date": 1531972528, "question_id": 51412165, "link": "https://stackoverflow.com/questions/51412165/how-to-return-the-second-item-of-the-nth-pair-in-a-given-list-haskell", "title": "How to return the second item of the nth pair in a given list (Haskell)", "body": "<p>I am wondering how to return the 2nd item of the nth pair in a given list. So we have </p>\n\n<pre><code>nth :: Int -&gt; [(Int,Int)] -&gt; Int\n</code></pre>\n\n<p>So if we input </p>\n\n<pre><code>nth 3 [(2,0),(1,4),(3,8)]\n</code></pre>\n\n<p>it should return 8 as this is the 2nd item of the 3rd pair.</p>\n\n<p>This is what I have got so far, it doesn't work...</p>\n\n<pre><code>nth :: Int -&gt; [(Int,Int)] -&gt; Int\nnth n [] = error \"??\"\nnth 0 (x:xs) = error \"??\"\nnth n (x:xs)\n  |n &gt; 0 &amp;&amp; n &lt; length (x:xs) = -- dont know what to put here\n</code></pre>\n\n<p>Can anyone assist?</p>\n\n<p>Thanks\nSam</p>\n"}, {"tags": ["haskell", "where-clause", "tail-recursion"], "answers": [{"tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 2, "last_activity_date": 1531954276, "creation_date": 1531954276, "answer_id": 51412034, "question_id": 51411933, "link": "https://stackoverflow.com/questions/51411933/haskell-recursion-list-of-self-growing-lists/51412034#51412034", "title": "Haskell recursion list of self growing lists", "body": "<p>Here is a much simpler case for you</p>\n\n<pre><code>Prelude&gt; let ones = 1 : ones\nPrelude&gt; take 3 ones\n[1,1,1]\n</code></pre>\n\n<p><code>ones</code> is defined to be an infinite list of <code>1</code>s.  There is no end, so there is no final empty list constructor.  <code>take n</code> initiates the generation of the first <code>n</code> elements, here with <code>n=3</code>. </p>\n"}, {"comments": [{"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1531980535, "post_id": 51412266, "comment_id": 89801963, "body": "The logic is not simple:-) I think that the problem comes also from the fact that when you try to &#39;test&#39;/&#39;inspect&#39; such structure you have no tools and play on your paper, give some try in ghci where the only way to &#39;see&#39; a list of lists is to add the <code>:[]</code> at the end and you &#39;infer&#39; that the evaluation should also produce a <code>:[]</code> and finito you re trapped in a wrong reasoning... really tricky."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1531984219, "post_id": 51412266, "comment_id": 89803921, "body": "Actually you do have such a tool: <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#ghci-cmd-:print\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/users_guide/&hellip;</a>"}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1531997379, "post_id": 51412266, "comment_id": 89812288, "body": "may be you&#39;re right, may be I am groundlessly reluctant to gchi limiting myself to some :t and :info or :k to inspect my structures, also I never saw in any tutorial or blog somebody using ghci to show how to reason about what&#39;s happening under the hood. Will try. Thank you."}], "tags": [], "owner": {"reputation": 794, "user_id": 3717658, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/vtnZE.jpg?s=128&g=1", "display_name": "Naqib Hakimi", "link": "https://stackoverflow.com/users/3717658/naqib-hakimi"}, "is_accepted": false, "score": 0, "last_activity_date": 1531957254, "last_edit_date": 1531957254, "creation_date": 1531956253, "answer_id": 51412266, "question_id": 51411933, "link": "https://stackoverflow.com/questions/51411933/haskell-recursion-list-of-self-growing-lists/51412266#51412266", "title": "Haskell recursion list of self growing lists", "body": "<p>the logic is very simple </p>\n\n<pre><code>konstSlices :: a -&gt; [[a]]\nkonstSlices x = nextSlice [x]\n    where nextSlice sl = sl : nextSlice (x:sl)\n</code></pre>\n\n<p>if <code>x = 100</code> then <code>nextSlice</code> will return <code>[100]</code> then it will recursive get first element and append it to the previous  list <code>nextSlice (x:sl)</code> in this case <code>sl</code> will grow with each call  , sorted by list index</p>\n\n<pre><code>0 -&gt; [100] = [100]\n1 -&gt; [100,100] = nextSlice (100:[100])\n2 -&gt; [100 ,100,100] = nextSlice (100:[100 ,100])\n3 -&gt; [100 ,100 , 100,100] = nextSlice (100:[100 , 100,100])\n</code></pre>\n\n<p>and process will continue , \n<code>x:sl</code> the first element of <code>sl</code> list is <code>x</code>.\nand every <code>nextSlice</code> call will return a list. <code>sl:sl:sl</code> ... </p>\n\n<blockquote>\n  <p>same as this one where <code>acc = 1</code> </p>\n</blockquote>\n\n<pre><code>num = 100 : num\nslice acc = take acc num :slice (acc+1)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1531980133, "post_id": 51414115, "comment_id": 89801770, "body": "So a way to understand this is to see that because each &#39;atomic&#39; step of this computation is creating ( the <code>ones</code> in Karafka&#39;s illustration are in my case  [... stuff...] : [...stuff...] : etc...) a chain of lists so Haskell when evaluating is reasoning something like that &quot; hey, I am asked to evaluate a bunch of things that are chained with <code>(:)</code> so because I am a smart guy I will give you a list of those things because it couldn&#39;t be nothing else&quot;. Great! Really."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1531980664, "post_id": 51414115, "comment_id": 89802028, "body": "@user3680029 Pretty much. Remember, a list is a data structure that is either the empty list <code>[]</code> or consists of a head and a tail. With lazy evaluation, the tail can be a thunk. A list terminates if its tail is <code>[]</code>, so <code>[1,2,3]</code> is the same as <code>1:2:3:[]</code>, but there\u2019s no requirement that a list must terminate."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1531980925, "post_id": 51414115, "comment_id": 89802180, "body": "And, with lazy evaluation, an infinite list is not (necessarily) a bug, if the program only needs to evaluate a finite number of steps."}], "tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": false, "score": 1, "last_activity_date": 1531972894, "last_edit_date": 1531972894, "creation_date": 1531972573, "answer_id": 51414115, "question_id": 51411933, "link": "https://stackoverflow.com/questions/51411933/haskell-recursion-list-of-self-growing-lists/51414115#51414115", "title": "Haskell recursion list of self growing lists", "body": "<p>karakfa has a great illustration of what\u2019s going on here, but I\u2019ll expand a bit.</p>\n\n<p>There isn\u2019t any closing <code>]</code>.  A list is a data structure whose head is an item of data, and whose tail is a list.  Furthermore, objects in Haskell are <strong>lazily evaluated</strong>.</p>\n\n<p>Let\u2019s take another look at this example:</p>\n\n<pre><code>konstSlices :: a -&gt; [[a]] \nkonstSlices x = nextSlice [x]\n    where nextSlice sl = sl : nextSlice (x:sl)\n</code></pre>\n\n<p>Lazy evaluation means that, if you try to use <code>konstSlices 100</code>, the program will only calculate as many items of the list as it needs to.  So, if you <code>take 1 (konstSlices 100)</code>, the program will compute</p>\n\n<pre><code>konstSlices 100 = [100]:\n  nextSlice (100:[100]))\n</code></pre>\n\n<p>The tail of the list, everything after the <code>[100]:</code>, is stored as a <strong>thunk</strong>.  Its value hasn\u2019t been computed yet.</p>\n\n<p>What if you ask for <code>take 2 (konstSlices 100)</code>?  Then, the program needs to compute the thunk until it finds the second element.  That\u2019s all it needs, so it will stop when it gets to,</p>\n\n<pre><code>    konstSlices 100 = [100]:\n      [100,100]:\n      (nextSlice (100:[100,100]))\n</code></pre>\n\n<p>And so on, for however many entries you need to compute.</p>\n\n<p>There\u2019s never anything corresponding to a closing bracket.  There doesn\u2019t need to be.  The recursive definition of <code>konstSlices</code> never generates anything like one, just more thunks.  And that\u2019s allowed.</p>\n\n<p>On the other hand, if you try to take <code>length (konstSlices 100)</code>, the program will attempt to generate an infinite number of nodes, run out of memory, and crash.  If you tried to compute the entirety of a <strong>circular</strong> list, like <code>xs = 1:xs</code>, it wouldn\u2019t need to allocate any new nodes, because it links back to the same ones, and it wouldn\u2019t need to generate new stack frames, because it\u2019s tail-recursive modulo cons, so it would go into an infinite loop.</p>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1532033320, "last_edit_date": 1532033320, "creation_date": 1532033017, "answer_id": 51431412, "question_id": 51411933, "link": "https://stackoverflow.com/questions/51411933/haskell-recursion-list-of-self-growing-lists/51431412#51431412", "title": "Haskell recursion list of self growing lists", "body": "<p>Your code is meant to be instructional.</p>\n\n<p>The list with one value prepended is displayed every iteration so that you get </p>\n\n<pre><code>[100]\n[100,100]\n[100,100,100]\n</code></pre>\n\n<p>however many times you want it. Every list listed is a brand new list. Haskell builds a new list every iteration by prepending one value to the previous list. The use of a previous value in the next value is what recursive functions do. See below, the first example.</p>\n\n<p>In an actual program, you might not be interested in the building of a list but only in the final result.</p>\n\n<p>Haskell has functions that help you see your list as it is being built. The functions generalize primitive recursion and so can work with 90% of all recursive functions that you may need.</p>\n\n<p>The functions are <code>foldl</code>/<code>foldr</code> and <code>scanl</code>/<code>scanr</code>. When you want to see your list being built use <code>scan?</code>. When you want just the final result use <code>fold?</code>.</p>\n\n<p>You may only be interested in the construction as in the following to build a Fibonacci list up to 12.</p>\n\n<pre><code>scanl (\\(a,b) x -&gt; (a+b,a)) (1,0) [2..12]\n</code></pre>\n\n<p>[(1,0),(1,1),(2,1),(3,2),(5,3),(8,5),(13,8),(21,13),(34,21),(55,34),(89,55),(144,89)]</p>\n\n<p>in which the previous two values are added to make the next first value and the previous first value becomes the next second value.</p>\n\n<p>In your code with 3 iterations, you can see what happens to each, easily.</p>\n\n<pre><code> take 3.konstSlices $ 100\n</code></pre>\n\n<p>[ [100],  [100,100],  [100,100,100] ]</p>\n\n<pre><code>scanl (\\b a -&gt; a : b) [] $ take 3 $ repeat 100\n</code></pre>\n\n<p>[ [], [100], [100,100], [100,100,100] ]</p>\n\n<p>But this shows more. It has the initial null list value to which it prepends <code>100</code> to, for the next value.</p>\n\n<p>If you want only the final result,</p>\n\n<pre><code>foldl (\\b a -&gt; a : b) [] $ take 3 $ repeat 100\n</code></pre>\n\n<p>[100,100,100]</p>\n\n<p>It is exactly</p>\n\n<pre><code>100 : []        = [100]\n100 : [100]     = [100,100]\n100 : [100,100] = [100,100,100]\n</code></pre>\n"}], "owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 751, "favorite_count": 0, "answer_count": 4, "score": 1, "last_activity_date": 1532033320, "creation_date": 1531953486, "question_id": 51411933, "link": "https://stackoverflow.com/questions/51411933/haskell-recursion-list-of-self-growing-lists", "title": "Haskell recursion list of self growing lists", "body": "<p>I found the following piece of code in Contract.hs line 147 <a href=\"https://github.com/AlexeyPirogov/PricingFinancialContractsWithHaskell\" rel=\"nofollow noreferrer\">Pricing Financial Contracts with Haskell</a>:</p>\n\n<pre><code>konstSlices :: a -&gt; [[a]]\nkonstSlices x = nextSlice [x]\n    where nextSlice sl = sl : nextSlice (x:sl)\n</code></pre>\n\n<p>This produces a infinite list of lists: </p>\n\n<pre><code>konstSlices 100 = [[100],[100,100],[100,100,100],...]\n</code></pre>\n\n<p>I am not sure what is happening inside the where clause. If we just take 3 iterations what should be inside the nextSlice at this time </p>\n\n<blockquote>\n  <p><code>[100]:[100,100]:nextSlice (100 :[100,100])</code> ?</p>\n</blockquote>\n\n<p>how the terminating: <code>[]</code> appears to pack the lists inside a list <code>[100]:[100,100]:[100,100,100]:[] = [[100],[100,100],[100,100,100]]</code>\nthe recursive construction is really hard to follow btw I am curious if there are tools allowing to follow such iterations and see how such values are build? Actually in such cases I am using a pen and a paper to get a grip on what is hapenning. Recursion lists are not the worst case btw.. (what bring me to this question was the analysis of the function <code>at t</code> (line 130) with the liftA2'ing stuff inside applicative functions which are build from other smaller functions or data constructor with function type, you rapidly see growing a big chunk of inter-related computations and you are totally lost - brain washed..)</p>\n"}, {"tags": ["haskell", "aeson"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1531954559, "post_id": 51407547, "comment_id": 89795712, "body": "The reason <code>&lt;&gt;</code> doesn&#39;t work is because there is no obvious way to combine two arbitrary JSON values. For something known to be an object, or known to be an array, it&#39;s simple to combine. But because <code>alice :: Value</code>, you have lost the information that it&#39;s an object, and there&#39;s no way to define <code>(&lt;&gt;) :: Value -&gt; Value -&gt; Value</code>."}], "answers": [{"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 3, "last_activity_date": 1531936306, "creation_date": 1531936306, "answer_id": 51408207, "question_id": 51407547, "link": "https://stackoverflow.com/questions/51407547/how-to-update-a-field-of-a-json-object/51408207#51408207", "title": "How to update a field of a JSON object?", "body": "<p>In my previous project, I used to do something like this:</p>\n\n<pre><code>import Data.Aeson\nimport Data.Text\nimport qualified Data.HashMap.Strict as HM\n\naddJsonKey :: Text -&gt; Value -&gt; Value -&gt; Value\naddJsonKey key val (Object xs) = Object $ HM.insert key val xs\naddJsonKey _ _ xs = xs\n</code></pre>\n\n<p>And then on ghci:</p>\n\n<pre><code>\u03bb&gt; :set -XOverloadedStrings\n\u03bb&gt; let alice = object [\"name\" .= \"Alice\", \"age\" .= 20]\n\u03bb&gt; addJsonKey \"email\" (String \"sibi@psibi.in\") alice\n</code></pre>\n\n<p>The key on making it work is understanding how the type <code>Value</code> is defined: <a href=\"https://www.stackage.org/haddock/lts-12.1/aeson-1.3.1.1/Data-Aeson.html#t:Value\" rel=\"nofollow noreferrer\">https://www.stackage.org/haddock/lts-12.1/aeson-1.3.1.1/Data-Aeson.html#t:Value</a></p>\n"}], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 253, "favorite_count": 0, "accepted_answer_id": 51408207, "answer_count": 1, "score": 3, "last_activity_date": 1531936306, "creation_date": 1531933792, "question_id": 51407547, "link": "https://stackoverflow.com/questions/51407547/how-to-update-a-field-of-a-json-object", "title": "How to update a field of a JSON object?", "body": "<p>I'm creating an object as JSON using <code>aeson</code>. How to add a field \"email\" to the object?</p>\n\n<pre><code>&gt; import Data.Aeson\n&gt; let alice = object [\"name\" .= \"Alice\", \"age\" .= 20]\n</code></pre>\n\n<p>I tried to use <code>&lt;&gt;</code> but didn't work</p>\n\n<pre><code>&gt; import Data.Monoid\n&gt; alice &lt;&gt; object [\"email\" .= \"alice@example.org\"]\n\n&lt;interactive&gt;:12:1: error:\n    \u2022 No instance for (Monoid Value) arising from a use of \u2018&lt;&gt;\u2019\n    \u2022 In the expression:\n        alice &lt;&gt; object [\"email\" .= \"alice@example.org\"]\n      In an equation for \u2018it\u2019:\n          it = alice &lt;&gt; object [\"email\" .= \"alice@example.org\"]\n</code></pre>\n"}, {"tags": ["haskell", "optparse-applicative"], "answers": [{"comments": [{"owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "edited": false, "score": 0, "creation_date": 1531933884, "post_id": 51407543, "comment_id": 89786379, "body": "great point. one can get &quot;names only&quot; with <code>work2 :: Parser a -&gt; IO () work2 p = (mapParser (\\_ -&gt; optionNames . optMain) p ) &amp; print</code>"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1531933885, "last_edit_date": 1531933885, "creation_date": 1531933788, "answer_id": 51407543, "question_id": 51406985, "link": "https://stackoverflow.com/questions/51406985/typed-list-of-argument-from-a-program-using-optparse-appplicative/51407543#51407543", "title": "(typed) list of argument from a program using optparse-appplicative", "body": "<p>No, there is no way. The relevant bits are:</p>\n\n<pre><code>data ParserInfo a = ParserInfo   \n    { infoParser :: Parser a\n    , -- ...\n    }\n\ndata Parser a\n  = forall x . MultP (Parser (x -&gt; a)) (Parser x)\n  | forall x . BindP (Parser x) (x -&gt; Parser a)\n  | -- ...\n</code></pre>\n\n<p>Since the <code>x</code>s of <code>MultP</code> and <code>BindP</code> are existentially quantified and do not carry a <code>Typeable</code> constraint, the information about the types used at the leaves of a <code>Parser a</code> tree is lost at runtime.</p>\n"}], "owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 41, "favorite_count": 0, "accepted_answer_id": 51407543, "answer_count": 1, "score": 0, "last_activity_date": 1531933885, "creation_date": 1531931601, "question_id": 51406985, "link": "https://stackoverflow.com/questions/51406985/typed-list-of-argument-from-a-program-using-optparse-appplicative", "title": "(typed) list of argument from a program using optparse-appplicative", "body": "<p>Is there a way to extract a list of names and types from a command line program, made using <code>optparse-applicative</code> ?</p>\n\n<p>I am +/- looking for some function of type <code>ParserInfo a -&gt; [(String,TypeRep)]</code></p>\n"}, {"tags": ["haskell", "category-theory"], "comments": [{"owner": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 3, "creation_date": 1531901520, "post_id": 51396793, "comment_id": 89764625, "body": "A function is a <i>profunctor</i>, it is contravariant in the argument (<code>contramap</code>), and covariant in the return type (<code>fmap</code>). It is called <code>dimap</code>: <code>dimap :: (a -&gt; b) -&gt; (c -&gt; d) -&gt; p b c -&gt; p a d</code>. For the arrow type: <code>(a -&gt; b) -&gt; (c -&gt; d) -&gt; (b -&gt; c) -&gt; a -&gt; d</code> (<a href=\"http://hackage.haskell.org/package/profunctors-5.3/docs/Data-Profunctor.html#t:Profunctor\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/profunctors-5.3/docs/&hellip;</a>)"}, {"owner": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "reply_to_user": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 0, "creation_date": 1531902314, "post_id": 51396793, "comment_id": 89765101, "body": "@YuvalItzchakov following my example, how to get function with type <code>(Int, Float) -&gt; (Id Int, Id2 Float)</code> using <code>dimap</code> ?"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 2, "creation_date": 1531902555, "post_id": 51396793, "comment_id": 89765249, "body": "I think the title could be slightly misleading, if I&#39;m understanding you correctly. I think you are saying: there are two &quot;parts&quot; to any functor, a type-level part (you&#39;re calling it &quot;functor for objects,&quot; but I would definitely suggest saying type-level) and the value-level part (which is <code>fmap</code>) and that you are asking what the value-level part of a bifunctor is. Is that what you&#39;re asking? (Incidentally, if it is, the &quot;functor for objects&quot; part is not correct. It is at a type-level and you are talking about data constructors, which are value-level if I am interpreting correctly)."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1531902753, "post_id": 51396793, "comment_id": 89765364, "body": "Reading through it again, I&#39;m a bit less confident that I&#39;m correct in how I read the question before. Maybe you could reword it slightly? What specifically do you mean by all of the things you are mentioning (like what are <code>Id</code> and <code>Id2</code> and what relation does the type signature <code>p (a -&gt; b) (c -&gt; d) -&gt; p (a&#39; -&gt; b&#39;) (c&#39; -&gt; d&#39;)</code> have to the rest of what you&#39;re asking about)?"}, {"owner": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1531902925, "post_id": 51396793, "comment_id": 89765488, "body": "@DavidYoung re <code>what relation</code> - it&#39;s on image"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531904367, "post_id": 51396793, "comment_id": 89766470, "body": "as the start of your post,  I&#39;d expect the second sentence to follow the first, as &quot;Bifunctor for objects - datatype constructor. Type - <code>a -&gt; b -&gt; p a b</code>. Bifunctor for functions - <code>bimap</code>. Type - <code>(a -&gt; b) -&gt; (c -&gt; d) -&gt; (p a c -&gt; p b d)</code>.&quot;"}, {"owner": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531905063, "post_id": 51396793, "comment_id": 89766997, "body": "@WillNess maybe you right, the phrase <code>all products and coproducts are bifunctors</code> says that you are right. Then my graph is wrong"}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531913001, "post_id": 51399341, "comment_id": 89772054, "body": "@WillNess it&#39;s actually copied from the question. Not sure that was intentional;  it could make a bit of sense to treat <code>f a</code> as an \u201catomic\u201d type at that point. But, not that much sense, I think I&#39;ll change this."}, {"owner": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "edited": false, "score": 0, "creation_date": 1531915360, "post_id": 51399341, "comment_id": 89773732, "body": "I have updated the image, but I still dont understand how <code>p (a -&gt; b) (c -&gt; d) -&gt; p (a&#39; -&gt; b&#39;) (c&#39; -&gt; d&#39;)</code> is profunctor, especially when <code>p</code> is <code>(,)</code>. Following my example, how to get function with type <code>(Int, Float) -&gt; (Id Int, Id2 Float)</code> using <code>dimap</code>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "edited": false, "score": 0, "creation_date": 1531916895, "post_id": 51399341, "comment_id": 89774759, "body": "@srghma <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Functor.html#t:Functor\" rel=\"nofollow noreferrer\">functors</a> have fmap ( <code>[x]-f-</code> ), <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Bifunctor.html#t:Bifunctor\" rel=\"nofollow noreferrer\">bifunctors</a> have bimap ( <code>[x,y]-(f,g)-</code> ), <a href=\"https://hackage.haskell.org/package/profunctors-5.3/docs/Data-Profunctor.html#t:Profunctor\" rel=\"nofollow noreferrer\"><i>profunctors</i></a> have dimap ( <code>-f-[x-y]-g-</code> )."}, {"owner": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531929913, "post_id": 51399341, "comment_id": 89784087, "body": "@WillNess I&#39;m sorry, the previous comment should have been written as: I have updated the image, but I still don&#39;t understand how morphism on my second image in question that have type <code>p (a -&gt; b) (c -&gt; d) -&gt; p (a&#39; -&gt; b&#39;) (c&#39; -&gt; d&#39;)</code> is profunctor (as @YuvalItzchakov pointed out), especially when <code>p</code> is <code>(,)</code>. On the image in question I provided examples for some parts of graph. Following this examples, this morphism should have type <code>(Int, Float) -&gt; (Id Int, Id2 Float)</code>, but I don&#39;t understand how to get this type using <code>dimap</code>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "edited": false, "score": 0, "creation_date": 1531931996, "post_id": 51399341, "comment_id": 89785340, "body": "@srghma you do this using bimap as the answer by chepner is showing. the functions themselves can be treated as profunctors, or used to implement a bifunctor (e.g.) behaviour, like with bimap. (IOW you can ignore that comment, it is not relevant here, I think.)"}, {"owner": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531933355, "post_id": 51399341, "comment_id": 89786075, "body": "@WillNess ok, he have said this about functions in general, not about this particular morphism. This morphism is constructed using bimap too. tnx"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 11, "last_activity_date": 1531913029, "last_edit_date": 1592644375, "creation_date": 1531908736, "answer_id": 51399341, "question_id": 51396793, "link": "https://stackoverflow.com/questions/51396793/where-is-the-bifunctor-for-functions-in-haskell/51399341#51399341", "title": "Where is the bifunctor for functions in haskell?", "body": "<blockquote>\n<p>Functor for objects - datatype constructor. Type - <code>a -&gt; f a</code></p>\n<p>Functor for functions - <code>fmap</code>. Type - <code>(a -&gt; b) -&gt; (fa -&gt; fb)</code></p>\n</blockquote>\n<p>Although this makes broadly sense, it is important to realise that the arrows above have three different meanings.</p>\n<blockquote>\n<p>Functor for objects - datatype constructor. Type - <code>a \u27fc f a</code></p>\n<p>Functor for functions - <code>fmap</code>. Type - <code>(a \u27ff b) \u27f6 (f a \u27ff f b)</code></p>\n</blockquote>\n<p>where</p>\n<ul>\n<li><code>\u27fc</code> is a type-level \u201cmaps-to symbol\u201d that associates the type <code>a</code> with a type <code>f a</code>. This does <em>not</em> have anything to do with value-level functions whose domain is <code>a</code> and codomain <code>f a</code>. (Those are found in applicatives/monads, but that's a different story.)</li>\n<li><code>\u27ff</code> is a type constructor for some morphism. In the <strong>Hask</strong> category, those morphisms happen to be Haskell functions, but that's just a special case.</li>\n<li><code>\u27f6</code> is an actual function-type constructor.</li>\n</ul>\n<p>You may for now forget about the distinction between the latter two, but <code>\u27fc</code> and <code>\u27f6</code> are really quite different conceptually<sup>\u2020</sup>. Basically, <code>\u27fc</code> is like the arrow you write in a <em>lambda</em></p>\n<pre><code>Maybe :: Type -&gt; Type\nMaybe = \\a \u27fc Maybe a\n</code></pre>\n<p>whereas <code>\u27f6</code> is just a way to express that you're abstracting over function-things.</p>\n<p>Another related thing that might not be clear is that the <em>objects</em> you're talking about are <em>Haskell types</em>. Not values (as OO objects are).</p>\n<p>So, I would phrase the listing you gave above thus:</p>\n<ul>\n<li><p>Functor</p>\n<ul>\n<li>for objects: datatype constructor. Kind <code>Type -&gt; Type</code>, mapping-association <code>a \u27fc f a</code>.</li>\n<li>for morphisms: <code>fmap</code>. Type: <code>(a -&gt; b) -&gt; (f a -&gt; f b)</code>.</li>\n</ul>\n</li>\n<li><p>Bifunctor</p>\n<ul>\n<li>for objects: datatype constructor. Kind <code>Type\u00d7Type -&gt; Type</code>, or curried <code>Type -&gt; Type -&gt; Type</code>, mapping-association <code>a \u27fc b \u27fc p a b</code>.</li>\n<li>for morphisms: <code>bimap</code>. Type: <code>(a -&gt; b) -&gt; (\u03b1 -&gt; \u03b2) -&gt; p a \u03b1 -&gt; p b \u03b2</code>.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p><sup>\u2020</sup><sub>Actually, Haskell does not have <code>\u27fc</code> or what you wrote with <code>a -&gt; f a</code>. This would be a type-level lambda, but type-level functions can actually only be expressed as <em>type families</em>, i.e. the closest you could get to expressing <code>a \u27fc f a</code> is <code>type instance Functored a = f a</code>.</sub></p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1531916960, "creation_date": 1531916960, "answer_id": 51402048, "question_id": 51396793, "link": "https://stackoverflow.com/questions/51396793/where-is-the-bifunctor-for-functions-in-haskell/51402048#51402048", "title": "Where is the bifunctor for functions in haskell?", "body": "<p>You don't need a <code>Bifunctor</code> instance for <code>(-&gt;)</code>, just <code>(,)</code>:</p>\n\n<pre><code>b1 :: a -&gt; Id a\nb2 :: a -&gt; Id2 a\n\n-- instance Bifunctor (,) where\n--   bimap f g (x, y) = (f x, g y)\n\nf :: (Int, Float) -&gt; (Id Int, Id2 Float)\nf = bimap b1 b2\n</code></pre>\n"}], "owner": {"reputation": 3281, "user_id": 3574379, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/B85yX.png?s=128&g=1", "display_name": "srghma", "link": "https://stackoverflow.com/users/3574379/srghma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 382, "favorite_count": 1, "accepted_answer_id": 51399341, "answer_count": 2, "score": 7, "last_activity_date": 1538254353, "creation_date": 1531901392, "last_edit_date": 1538254353, "question_id": 51396793, "link": "https://stackoverflow.com/questions/51396793/where-is-the-bifunctor-for-functions-in-haskell", "title": "Where is the bifunctor for functions in haskell?", "body": "<p>I can't find bifunctor analog of fmap.</p>\n\n<p>Explanation:</p>\n\n<p>Functor for objects - datatype constructor. Type -\n<code>a -&gt; f a</code></p>\n\n<p>Functor for functions - <code>fmap</code>. Type - <code>(a -&gt; b) -&gt; (fa -&gt; fb)</code></p>\n\n<p>Bifunctor for objects - result of <code>bimap f g</code>, where <code>f :: (a -&gt; a')</code>, <code>g :: (b -&gt; b')</code>. Type - <code>p a b -&gt; p a' b'</code></p>\n\n<p>Bifunctor for functions - ?. Type - <code>p (a -&gt; b) (c -&gt; d) -&gt; p (a' -&gt; b') (c' -&gt; d')</code></p>\n\n<p>Here is why I think bifunctor have such type (am I right?) with some example</p>\n\n<p><a href=\"https://i.stack.imgur.com/sbTrF.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/sbTrF.jpg\" alt=\"enter image description here\"></a></p>\n\n<hr>\n\n<p>UPDATE</p>\n\n<p><a href=\"https://i.stack.imgur.com/MOckY.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/MOckY.jpg\" alt=\"enter image description here\"></a></p>\n\n<hr>\n\n<p>UPDATE2</p>\n\n<p><code>p (a -&gt; b) (c -&gt; d) -&gt; p (a' -&gt; b') (c' -&gt; d')</code> in the image above is morphism from bifunctor to bifunctor and also profunctor (because all functions are profunctors)</p>\n\n<p>Summary:</p>\n\n<p>I've thought <code>p (a -&gt; b) (c -&gt; d) -&gt; p (a' -&gt; b') (c' -&gt; d')</code> is bifunctor for functions, but it's not. Bifunctor for morphisms is <code>bimap. Type: (a -&gt; b) -&gt; (\u03b1 -&gt; \u03b2) -&gt; p a \u03b1 -&gt; p b \u03b2.</code></p>\n\n<p>I've thought <code>p (a -&gt; b) (c -&gt; d) -&gt; p (a' -&gt; b') (c' -&gt; d')</code> is something unusual, but it's not, it's just function</p>\n"}, {"tags": ["haskell", "brackets"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 3, "creation_date": 1531875263, "post_id": 51392021, "comment_id": 89755992, "body": "This is application of an infix operator <code>(:)</code>, which is defined as right-associative. <code>x : xs</code> is not the same as <code>f x</code>."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 4, "creation_date": 1531875511, "post_id": 51392021, "comment_id": 89756042, "body": "You can customize the fixity of operators with infix declarations. The precedence and associativity of the built-in operators, as well as the means of declaring custom fixity, are detailed <a href=\"https://www.haskell.org/onlinereport/decls.html\" rel=\"nofollow noreferrer\">in Ch 4 of the Haskell 98 Report</a>"}, {"owner": {"reputation": 53, "user_id": 8495609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a66900acd679eb43146fed4e04e7ed9f?s=128&d=identicon&r=PG&f=1", "display_name": "Karl", "link": "https://stackoverflow.com/users/8495609/karl"}, "edited": false, "score": 0, "creation_date": 1531875562, "post_id": 51392021, "comment_id": 89756053, "body": "Thanks, that&#39;s already quite informative."}], "answers": [{"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 9, "last_activity_date": 1531880207, "last_edit_date": 1531880207, "creation_date": 1531879746, "answer_id": 51392566, "question_id": 51392021, "link": "https://stackoverflow.com/questions/51392021/why-is-colon-right-associative-in-this-expression/51392566#51392566", "title": "Why is colon right associative in this expression?", "body": "<p>It's <a href=\"http://hackage.haskell.org/package/ghc-prim-0.5.2.0/docs/src/GHC.Types.html#line-48\" rel=\"noreferrer\">declared in <code>GHC.Types</code></a> (which is used by the <code>Prelude</code>)</p>\n\n<pre><code>infixr 5 :\n</code></pre>\n\n<p>This is known as a <a href=\"https://www.haskell.org/onlinereport/decls.html#sect4.4.2\" rel=\"noreferrer\">fixity declaration</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "edited": false, "score": 1, "creation_date": 1532360745, "post_id": 51404145, "comment_id": 89934208, "body": "I don&#39;t think this answer is correct. The fixity has nothing to do with either the data type definition, and the examples you show are misleading. Of course it could be another way: what if you defined it with <code>infixl 5 :</code>?"}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "reply_to_user": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "edited": false, "score": 0, "creation_date": 1532436926, "post_id": 51404145, "comment_id": 89966281, "body": "As I said, the correct answer is luqui&#39;s one. <code>:</code> is right associative because it is defined as so. The point of my answer is to justify why: If you define <code>infixl 5 :</code> then, this expression wouldn&#39;t compile <code>1:2:3:[] </code>, you&#39;d need to add explicit parenthesis <code>1:(2:(3:[]))</code>. Another example, If you&#39;d try to pattern match a list with at least two element you&#39;d end up with the following code <code>f (x1:(x2:xs))</code>.which is less readble than the current <code>f (x1:x2:xs)</code>. Of course you can define <code>infixl 5 :</code> but it would be a bad desing decision because of how data is defined. Hope it helps ;)"}, {"owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "edited": false, "score": 1, "creation_date": 1532451086, "post_id": 51404145, "comment_id": 89976439, "body": "Right, but saying that it&#39;s a design decision is different from saying &quot;It couldn&#39;t be otherway&quot;, which is what you say in the answer. Your answer makes it seem like the <code>:</code> operator works the way it does just from the data declaration: it&#39;s important to point out that it <i>could</i> have worked another way, but the right-associativity was chosen simply because it allows for fewer parenthesis. In fact, if the data declaration alone was used, the default associativity would have been chosen, which is <code>infixl 9</code>."}], "tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 1, "last_activity_date": 1531984500, "last_edit_date": 1531984500, "creation_date": 1531922795, "answer_id": 51404145, "question_id": 51392021, "link": "https://stackoverflow.com/questions/51392021/why-is-colon-right-associative-in-this-expression/51404145#51404145", "title": "Why is colon right associative in this expression?", "body": "<p>luqui's anwser is the rigth one. If you think deeper on how lists are defined, you''l realize that It couldn't be otherway:</p>\n\n<pre><code>Prelude&gt; :info []\ndata [] a = [] | a : [a]\n</code></pre>\n\n<p>so a list is either </p>\n\n<ol>\n<li>\"empty list\"  </li>\n<li>\"an element, a colon (cons) and a list\"</li>\n</ol>\n\n<p>That's a list an nothing else is a list, so:</p>\n\n<pre><code> []   -- Is a list -&gt; by condition 1\n 1    -- Is not a list\n\n 1:[] -- Is a list by condition 2 -&gt; an element, a colon, a list (empty)\n 1:2  -- Is not a list. does not follow any condition -&gt; an element, a colon, an element\n\n 1:(2:[])  -- Is a list by condition 2 -&gt; an element, a colon, a list (2:[])\n (1:[]):[] -- Is NOT a list -&gt; a list (1:[]), a colon, a list\n (1:2):[]  -- Is not a list -&gt; (1:2) is not an element\n\n [1,2,3,4] -- Is syntactic sugar for 1:(2:(3:(4:[])))\n</code></pre>\n\n<p>So if <code>:</code> was left associative, we would end up with the case <code>(1:2):[]</code> which is not a list by definition. </p>\n\n<p>Hope it helps</p>\n"}], "owner": {"reputation": 53, "user_id": 8495609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a66900acd679eb43146fed4e04e7ed9f?s=128&d=identicon&r=PG&f=1", "display_name": "Karl", "link": "https://stackoverflow.com/users/8495609/karl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 428, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1531984500, "creation_date": 1531875040, "last_edit_date": 1531887262, "question_id": 51392021, "link": "https://stackoverflow.com/questions/51392021/why-is-colon-right-associative-in-this-expression", "title": "Why is colon right associative in this expression?", "body": "<p>Because function application is left associative in Haskell, I expect</p>\n\n<pre><code>'x':'y':\"z\"\n</code></pre>\n\n<p>to be equivalent to <code>('x':'y'):\"z\"</code>.\n<code>('x':'y')</code> is an error, because <code>'y'</code> is not a list as it should be.</p>\n\n<p>But <code>'x':'y':\"z\"</code> evaluates to <code>\"xyz\"</code> like <code>'x':('y':\"z\")</code>. So the implicit brackets are right associative here. How can we explain this?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 6, "creation_date": 1531876618, "post_id": 51391778, "comment_id": 89756267, "body": "GHC just told you the answer. Use <code>{-# language RankNTypes #-}</code> at the top of the file, or <code>-XRankNTypes</code> on the GHCi command line."}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 3, "last_activity_date": 1531929517, "creation_date": 1531929517, "answer_id": 51406408, "question_id": 51391778, "link": "https://stackoverflow.com/questions/51391778/how-to-use-typeclass-in-type-keyword/51406408#51406408", "title": "how to use typeclass in `type` keyword?", "body": "<p>GHC requires the <code>RankNTypes</code> extension to allow types with constraints to appear</p>\n\n<ol>\n<li><p>In the definition of a type synonym:</p>\n\n<pre><code>type A x = C x =&gt; x -&gt; Y\n</code></pre></li>\n<li><p>In a field of a newtype or datatype declaration, or</p>\n\n<pre><code>newtype B x = B (C x =&gt; x -&gt; Y)\ndata D x = D (C x =&gt; x -&gt; Y)\n</code></pre></li>\n<li><p>On the left-hand side of an arrow.</p>\n\n<pre><code>f :: (C x =&gt; x -&gt; Y) -&gt; Z\n</code></pre></li>\n</ol>\n\n<p>This may seem a bit surprising (it did to me), since these types are all actually rank-1. However, I have been told that the inference requirements of these types are actually quite similar to those of higher-rank types. In both cases, there's an argument that may need to be inferred. In the case of a higher-rank type, that is a type argument. In the case of a constrained type, that is a dictionary argument.</p>\n\n<p>If you are writing a Haskell module, add</p>\n\n<pre><code>{-# language RankNTypes #-}\n</code></pre>\n\n<p>to the very top of the source file (before the <code>module</code> line). If you are using GHCi, either run</p>\n\n<pre><code>ghci -XRankNTypes\n</code></pre>\n\n<p>or type</p>\n\n<pre><code>:set -XRankNTypes\n</code></pre>\n\n<p>at the GHCi prompt.</p>\n"}], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 163, "favorite_count": 0, "accepted_answer_id": 51406408, "answer_count": 1, "score": 3, "last_activity_date": 1531929517, "creation_date": 1531872591, "question_id": 51391778, "link": "https://stackoverflow.com/questions/51391778/how-to-use-typeclass-in-type-keyword", "title": "how to use typeclass in `type` keyword?", "body": "<p>I have a function </p>\n\n<p><code>logger :: ToJSON a =&gt; String -&gt; a -&gt; IO ()</code></p>\n\n<p>I'd like to make an alias for this type signature</p>\n\n<pre><code>type Logger = ToJSON a =&gt; String -&gt; a -&gt; IO ()\n</code></pre>\n\n<p>such that I can make more functions with the same type signature:</p>\n\n<pre><code>logger :: Logger\n\nsimpleLogger :: Logger\n</code></pre>\n\n<p>But I'm getting an error:</p>\n\n<pre><code>    \u2022 Illegal qualified type: ToJSON a =&gt; String -&gt; a -&gt; IO ()\n      Perhaps you intended to use RankNTypes or Rank2Types\n    \u2022 In the type synonym declaration for \u2018Logger\u2019\n</code></pre>\n"}, {"tags": ["haskell", "case-expression"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1531869802, "post_id": 51391362, "comment_id": 89754945, "body": "It&#39;s pattern matching on a tuple where <code>i1</code> is the first element (of type <code>s</code>) and <code>a</code> is the second element (of type <code>a</code>)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531898430, "post_id": 51391362, "comment_id": 89762849, "body": "It&#39;s a more efficient version of <code>let i1 = fst (t i0) ; a = snd (t i0) in deState (k a) i1</code>, unpacking the pair resulting from the application <code>t i0</code> into a value <code>a</code> and a new state <code>i1</code>."}], "answers": [{"tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 2, "last_activity_date": 1531891660, "creation_date": 1531891660, "answer_id": 51394168, "question_id": 51391362, "link": "https://stackoverflow.com/questions/51391362/how-to-understand-the-case-expression/51394168#51394168", "title": "How to understand the case expression?", "body": "<p>Haskell uses two data structures for managing several values: lists and tuples. Tuples have fixed length and don't need to be of the same type:</p>\n\n<pre><code>(1, \"2\") :: (Int, String)\n</code></pre>\n\n<p>You also can pattern match the values of the tuple. Just for an example:</p>\n\n<pre><code>nonBlank :: (Int, String) -&gt; Bool\nnonBlank tuple =\n  case tuple of\n    (0, _) -&gt; False\n    (_, \"\") -&gt; False\n    _ -&gt; True\n</code></pre>\n\n<p>This line declares <code>State</code>, which stores a function, which receives an argument and returns a tuple:</p>\n\n<pre><code>newtype State s a = StateOf{deState :: s -&gt; (s, a)}\n</code></pre>\n\n<p>And this line defines <code>&gt;&gt;=</code> function for this type:</p>\n\n<pre><code>StateOf t &gt;&gt;= k = StateOf (\\i0 -&gt; case t i0 of\n                              (i1, a) -&gt; deState (k a) i1)\n</code></pre>\n\n<p>You probably confused by the <code>t i0</code>, but actually, when you understand, that the type of <code>t</code> is a function <code>s -&gt; (s, a)</code>, then it's clear that <code>t i0</code> returns a tuple, which you can pattern match.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 202, "favorite_count": 0, "accepted_answer_id": 51394168, "answer_count": 1, "score": -1, "last_activity_date": 1531891660, "creation_date": 1531868884, "question_id": 51391362, "link": "https://stackoverflow.com/questions/51391362/how-to-understand-the-case-expression", "title": "How to understand the case expression?", "body": "<p>This example is very intuitive. There are 3 cases for xs, which are empty list, list with only 1 element and list with more than 1 element.</p>\n\n<pre><code>describeList :: [a] -&gt; String  \ndescribeList xs = \"The list is \" ++ case xs of [] -&gt; \"empty.\"  \n                                               [x] -&gt; \"a singleton list.\"   \n                                               xs -&gt; \"a longer list.\" \n</code></pre>\n\n<p>But I get lost in the following code</p>\n\n<pre><code>newtype State s a = StateOf{deState :: s -&gt; (s, a)}\n\npostInc :: State Int Int\npostInc = StateOf (\\i -&gt; (i+1, i))\n\ninstance Monad (State s) where\n    return a = pure a\n    StateOf t &gt;&gt;= k = StateOf (\\i0 -&gt; case t i0 of\n                                  (i1, a) -&gt; deState (k a) i1)\n</code></pre>\n\n<p>I totally don't know what <code>i1</code> and <code>a</code> represent.</p>\n"}, {"tags": ["haskell", "postgresql-simple"], "comments": [{"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1531860425, "post_id": 51389602, "comment_id": 89751968, "body": "What&#39;s the SQL query equivalent of your <code>findPath</code>?  Is there an SQL column with the SQL type <code>coord[]</code>, or something shaped more like <code>(String, Float, Float)</code>?"}, {"owner": {"reputation": 4235, "user_id": 1518183, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/822d321afa518348af0f484e24eef47c?s=128&d=identicon&r=PG", "display_name": "user1518183", "link": "https://stackoverflow.com/users/1518183/user1518183"}, "reply_to_user": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1531861986, "post_id": 51389602, "comment_id": 89752663, "body": "@bergey: Coordinates and paths are defined in different tables. There exists many-to-many relationship between them."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1531863396, "post_id": 51389602, "comment_id": 89753197, "body": "Exactly.  If the data exists in different tables then it makes little sense to create a <code>FromRow</code> instance since the data is not in one row."}, {"owner": {"reputation": 4235, "user_id": 1518183, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/822d321afa518348af0f484e24eef47c?s=128&d=identicon&r=PG", "display_name": "user1518183", "link": "https://stackoverflow.com/users/1518183/user1518183"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1531863793, "post_id": 51389602, "comment_id": 89753320, "body": "@ThomasM.DuBuisson Then, how can I create a <code>Path</code> data type when the data are logically tied together? Should I have something like <code>CoordRow</code> and <code>PathRow</code> data types which I then turn into <code>Path</code> data type?"}], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 2, "last_activity_date": 1531926978, "creation_date": 1531926978, "answer_id": 51405583, "question_id": 51389602, "link": "https://stackoverflow.com/questions/51389602/nested-data-types-in-postgresql-simple/51405583#51405583", "title": "Nested data types in postgresql-simple", "body": "<p>I would write a data type and a <code>FromRow</code> instance for each table in the database, and separate the database code from the changing-schema code.  <code>PathRow</code> and <code>[Coord]</code> are things you can get directly from the DB.  <code>makePath :: PathRow -&gt; [Coord] -&gt; Path</code>, to build the nested structure you want, doesn't need to interact with the database at all.  Then <code>findPath</code> can be implemented in terms of these pieces.</p>\n"}], "owner": {"reputation": 4235, "user_id": 1518183, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/822d321afa518348af0f484e24eef47c?s=128&d=identicon&r=PG", "display_name": "user1518183", "link": "https://stackoverflow.com/users/1518183/user1518183"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 321, "favorite_count": 0, "accepted_answer_id": 51405583, "answer_count": 1, "score": 1, "last_activity_date": 1531926978, "creation_date": 1531858824, "last_edit_date": 1531859297, "question_id": 51389602, "link": "https://stackoverflow.com/questions/51389602/nested-data-types-in-postgresql-simple", "title": "Nested data types in postgresql-simple", "body": "<p>Consider following code which can find some set of coordinates:</p>\n\n<pre><code>data Coord = Coord { lat :: Float\n                   , lon :: Float\n                   }\n\ninstance FromRow Coord where\n  fromRow = Coord\n    &lt;$&gt; field\n    &lt;*&gt; field\n\nfindSomePoints :: Connection -&gt; Int -&gt; IO [Coord]\nfindSomePoints = undefined\n</code></pre>\n\n<p>Then I would like to define data type for named set of coordinates:</p>\n\n<pre><code>data Path = Path { name :: String\n                 , points :: [Coord]\n                 }\n\ninstance FromRow Path where\n  fromRow = Path\n    &lt;$&gt; field\n    &lt;*&gt; -- PROBLEM: would like to call something like `findSomePoints conn field` here...\n\nfindPath :: Connection -&gt; Int -&gt; IO Path\nfindPath = undefined\n</code></pre>\n\n<p>Unfortunatelly, I don't know how to compose data types with queries (in my case <code>Path</code> with <code>Coord</code>). Is something like this even possible (and how?).</p>\n"}, {"tags": ["haskell", "type-families", "ghc-generics"], "comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1531862859, "post_id": 51388962, "comment_id": 89752996, "body": "Are you already committed to this particular <code>Config</code> and <code>Phase</code> structure?  Would an alternative implementation with similar type safety guarantees be workable?"}, {"owner": {"reputation": 635, "user_id": 860338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782e20b78bb80f4207cbea38f88c922a?s=128&d=identicon&r=PG", "display_name": "ImAlsoGreg", "link": "https://stackoverflow.com/users/860338/imalsogreg"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1531870069, "post_id": 51388962, "comment_id": 89754996, "body": "@K.A.Buhr, no, not highly committed, although I&#39;m still interested in the generic traversal question. If you have ideas about separating configtime from runtime fields without that avoids duplication, that&#39;d be also be useful."}], "answers": [{"comments": [{"owner": {"reputation": 635, "user_id": 860338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782e20b78bb80f4207cbea38f88c922a?s=128&d=identicon&r=PG", "display_name": "ImAlsoGreg", "link": "https://stackoverflow.com/users/860338/imalsogreg"}, "edited": false, "score": 0, "creation_date": 1531960399, "post_id": 51409436, "comment_id": 89797081, "body": "Wow, incredibly detailed, thank you so much for the idea and the explanation! To summarize the solution: separate the typeclass for collecting fields and threading phase from the typeclass that applies the phase to compute the field types.  &gt; while we can define fieldAtoB within the IsField class, as you did in your example, we run into all sorts of problems  Do you have a clear idea about the family of problems here? Or is it just - generally awkward and can&#39;t be made to work?  The kind of redundancy in your solution doesn&#39;t look bad at all."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 635, "user_id": 860338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782e20b78bb80f4207cbea38f88c922a?s=128&d=identicon&r=PG", "display_name": "ImAlsoGreg", "link": "https://stackoverflow.com/users/860338/imalsogreg"}, "edited": false, "score": 1, "creation_date": 1532013069, "post_id": 51409436, "comment_id": 89823340, "body": "Well, I just gave it another try, and I must have missed something the first time around.  It <i>is</i> easy to define <code>fieldAtoB</code> in the <code>IsField</code> class and automatically derive the <code>AtoB</code> class.  I&#39;ll update the answer."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 3, "last_activity_date": 1532015986, "last_edit_date": 1532015986, "creation_date": 1531941113, "answer_id": 51409436, "question_id": 51388962, "link": "https://stackoverflow.com/questions/51388962/how-to-derive-generic-traversals-that-involve-a-type-family/51409436#51409436", "title": "How to derive generic traversals that involve a type family", "body": "<p><em>Edit:</em> Updated to automatically derive the <code>AtoB</code> class.</p>\n\n<p>Here's a solution that appears to work.</p>\n\n<h2>Generic Phase Mapping without a Monad</h2>\n\n<p>Here are the preliminaries:</p>\n\n<pre><code>{-# LANGUAGE DataKinds, DeriveGeneric, FlexibleContexts,\n    FlexibleInstances, KindSignatures, MultiParamTypeClasses,\n    StandaloneDeriving, TypeFamilies, TypeFamilyDependencies,\n    TypeSynonymInstances, UndecidableInstances #-}\n{-# OPTIONS_GHC -Wall #-}\n\nimport qualified GHC.Generics as GHC\nimport Generics.SOP\n</code></pre>\n\n<p>Now, suppose we have a <code>Phase</code>:</p>\n\n<pre><code>data Phase = A | B\n</code></pre>\n\n<p>and a <code>Selector</code> for the field:</p>\n\n<pre><code>data Selector = Bar | Baz\n</code></pre>\n\n<p>with the idea that there's a type class with both (1) an associated type family giving the concrete field types associated with a selector for each possible phase and (2) an interface for mapping between phases:</p>\n\n<pre><code>class IsField (sel :: Selector) where\n  type Field (p :: Phase) sel = r | r -&gt; sel\n  fieldAtoB :: Field 'A sel -&gt; Field 'B sel\n</code></pre>\n\n<p>Given a record with a generic instance incorporating both <code>Field</code>s and non-<code>Field</code>s</p>\n\n<pre><code>data Foo p = Foo { bar :: Field p 'Bar\n                 , baz :: Field p 'Baz\n                 , num :: Int\n                 } deriving (GHC.Generic)\nderiving instance Show (Foo 'A)\nderiving instance Show (Foo 'B)\ninstance Generic (Foo p)\n</code></pre>\n\n<p>and a <code>Foo 'A</code> value:</p>\n\n<pre><code>foo0 :: Foo 'A\nfoo0 = Foo (BarA ()) (BazA ()) 1\n</code></pre>\n\n<p>we'd like to define a generic phase mapping <code>gAtoB</code>:</p>\n\n<pre><code>foo1 :: Foo 'B\nfoo1 = gAtoB foo0\n</code></pre>\n\n<p>that uses per-field phase maps <code>fieldAtoB</code> from the <code>IsField</code> type class.</p>\n\n<p>The key step is defining a separate type class <code>AtoB</code> dedicated to the phase <code>A</code>-to-<code>B</code> transition to act as a bridge to the <code>IsField</code> type class.  This <code>AtoB</code> type class will be used in conjuction with the <code>generics-sop</code> machinery to constrain/match the concrete phase <code>A</code> and <code>B</code> types field by field and dispatch to the appropriate <code>fieldAtoB</code> phase mapping function.  Here's the class:</p>\n\n<pre><code>class AtoB aty bty where\n  fieldAtoB' :: aty -&gt; bty\n</code></pre>\n\n<p>Fortunately, instances can be automatically derived for <code>Field</code>s, though it requires the (mostly harmless) <code>UndecidableInstances</code> extension:</p>\n\n<pre><code>instance (IsField sel, Field 'A sel ~ aty, Field 'B sel ~ bty) \n         =&gt; AtoB aty bty where\n  fieldAtoB' = fieldAtoB\n</code></pre>\n\n<p>and we can define an instance for non-<code>Field</code>s:</p>\n\n<pre><code>instance {-# OVERLAPPING #-} AtoB ty ty where\n  fieldAtoB' = id\n</code></pre>\n\n<p>Note one limitation here -- if you define a <code>Field</code> with equal concrete types in different phases, this overlapping instance with <code>fieldAtoB' = id</code> will be used and <code>fieldAtoB</code> will be ignored.</p>\n\n<p>Now, for a particular selector <code>Bar</code> whose underlying types should be <code>BarA</code> and <code>BarB</code> in the respective phases, we can define the following <code>IsField</code> instance:</p>\n\n<pre><code>-- Bar field\ndata BarA = BarA () deriving (Show)   -- Field 'A 'Bar\ndata BarB = BarB () deriving (Show)   -- Field 'B 'Bar\ninstance IsField 'Bar where\n  type Field 'A 'Bar = BarA           -- defines the per-phase field types for 'Bar\n  type Field 'B 'Bar = BarB\n  fieldAtoB (BarA ()) = (BarB ())     -- defines the field phase map\n</code></pre>\n\n<p>We can provide a similar definition for <code>Baz</code>:</p>\n\n<pre><code>-- Baz field\ndata BazA = BazA () deriving (Show)\ndata BazB = BazB () deriving (Show)\ninstance IsField 'Baz where\n  type Field 'A 'Baz = BazA\n  type Field 'B 'Baz = BazB\n  fieldAtoB (BazA ()) = (BazB ())\n</code></pre>\n\n<p>Now, we can define the generic <code>gAtoB</code> transformation like so:</p>\n\n<pre><code>gAtoB :: (Generic (rcrd 'A), Code (rcrd 'A) ~ xssA,\n          Generic (rcrd 'B), Code (rcrd 'B) ~ xssB,\n          AllZip2 AtoB xssA xssB)\n      =&gt; rcrd 'A -&gt; rcrd 'B\ngAtoB = to . gAtoBS . from\n  where\n    gAtoBS :: (AllZip2 AtoB xssA xssB) =&gt; SOP I xssA -&gt; SOP I xssB\n    gAtoBS (SOP (Z xs)) = SOP (Z (gAtoBP xs))\n    gAtoBS (SOP (S _)) = error \"not implemented\"\n\n    gAtoBP :: (AllZip AtoB xsA xsB) =&gt; NP I xsA -&gt; NP I xsB\n    gAtoBP Nil = Nil\n    gAtoBP (I x :* xs) = I (fieldAtoB' x) :* gAtoBP xs\n</code></pre>\n\n<p>There might be a way to do this with <code>generics-sop</code> combinators instead of this explicit definition, but I couldn't figure it out.</p>\n\n<p>Anyway, <code>gAtoB</code> works on <code>Foo</code> records, as per the definition of <code>foo1</code> above, but it also works on <code>Quux</code> records:</p>\n\n<pre><code>data Quux p = Quux { bar2 :: Field p 'Bar\n                   , num2 :: Int\n                   } deriving (GHC.Generic)\nderiving instance Show (Quux 'A)\nderiving instance Show (Quux 'B)\ninstance Generic (Quux p)\n\nquux0 :: Quux 'A\nquux0 = Quux (BarA ()) 2\n\nquux1 :: Quux 'B\nquux1 = gAtoB quux0\n\nmain :: IO ()\nmain = do\n  print foo0\n  print foo1\n  print quux0\n  print quux1\n</code></pre>\n\n<p>Note that I've used selectors with a <code>Selector</code> data kind, but you could rewrite this to use selectors of type <code>(a :: Phase -&gt; *)</code>, as I've done in the example at the end.</p>\n\n<h2>Generic Phase Traversal over a Monad</h2>\n\n<p>Now, you needed this to happen over the <code>IO</code> monad.  Here's a modified version that does that:</p>\n\n<pre><code>{-# LANGUAGE DataKinds, DeriveGeneric, FlexibleContexts,\n    FlexibleInstances, KindSignatures, MultiParamTypeClasses,\n    StandaloneDeriving, TypeFamilies, TypeFamilyDependencies,\n    TypeSynonymInstances, UndecidableInstances #-}\n{-# OPTIONS_GHC -Wall #-}\n\nimport qualified GHC.Generics as GHC\nimport Generics.SOP\nimport Control.Applicative\n\ndata Phase = A | B\ndata Selector = Bar | Baz\n\nclass IsField (sel :: Selector) where\n  type Field (p :: Phase) sel = r | r -&gt; sel\n  fieldAtoB :: Field 'A sel -&gt; IO (Field 'B sel)\n\ndata Foo p = Foo { bar :: Field p 'Bar\n                 , baz :: Field p 'Baz\n                 , num :: Int\n                 } deriving (GHC.Generic)\nderiving instance Show (Foo 'A)\nderiving instance Show (Foo 'B)\ninstance Generic (Foo p)\n\nfoo0 :: Foo 'A\nfoo0 = Foo (BarA ()) (BazA ()) 1\n\nfoo1 :: IO (Foo 'B)\nfoo1 = gAtoB foo0\n\n-- fieldAtoB :: Field 'A sel -&gt; Field 'B sel\nclass AtoB aty bty where\n  fieldAtoB' :: aty -&gt; IO bty\ninstance (IsField sel, Field 'A sel ~ aty, Field 'B sel ~ bty) =&gt; AtoB aty bty where\n  fieldAtoB' = fieldAtoB\ninstance {-# OVERLAPPING #-} AtoB ty ty where\n  fieldAtoB' = return\n\n-- Bar field\ndata BarA = BarA () deriving (Show)   -- Field 'A 'Bar\ndata BarB = BarB () deriving (Show)   -- Field 'B 'Bar\ninstance IsField 'Bar where           -- defines the per-phase field types for 'Bar\n  type Field 'A 'Bar = BarA\n  type Field 'B 'Bar = BarB\n  fieldAtoB (BarA ()) = return (BarB ())    -- defines the field phase map\n\n-- Baz field\ndata BazA = BazA () deriving (Show)\ndata BazB = BazB () deriving (Show)\ninstance IsField 'Baz where\n  type Field 'A 'Baz = BazA\n  type Field 'B 'Baz = BazB\n  fieldAtoB (BazA ()) = return (BazB ())\n\ngAtoB :: (Generic (rcrd 'A), Code (rcrd 'A) ~ xssA,\n          Generic (rcrd 'B), Code (rcrd 'B) ~ xssB,\n          AllZip2 AtoB xssA xssB)\n      =&gt; rcrd 'A -&gt; IO (rcrd 'B)\ngAtoB r = to &lt;$&gt; (gAtoBS (from r))\n  where\n    gAtoBS :: (AllZip2 AtoB xssA xssB) =&gt; SOP I xssA -&gt; IO (SOP I xssB)\n    gAtoBS (SOP (Z xs)) = SOP . Z &lt;$&gt; gAtoBP xs\n    gAtoBS (SOP (S _)) = error \"not implemented\"\n\n    gAtoBP :: (AllZip AtoB xsA xsB) =&gt; NP I xsA -&gt; IO (NP I xsB)\n    gAtoBP Nil = return Nil\n    gAtoBP (I x :* xs) = I &lt;$&gt; fieldAtoB' x &lt;**&gt; pure (:*) &lt;*&gt; gAtoBP xs\n\ndata Quux p = Quux { bar2 :: Field p 'Bar\n                   , num2 :: Int\n                   } deriving (GHC.Generic)\nderiving instance Show (Quux 'A)\nderiving instance Show (Quux 'B)\ninstance Generic (Quux p)\n\nquux0 :: Quux 'A\nquux0 = Quux (BarA ()) 2\n\nquux1 :: IO (Quux 'B)\nquux1 = gAtoB quux0\n\nmain :: IO ()\nmain = do\n  print foo0\n  foo1val &lt;- foo1\n  print foo1val\n  print quux0\n  quux1val &lt;- quux1\n  print quux1val\n</code></pre>\n\n<h2>Adapted to Your Problem</h2>\n\n<p>And here's a version rewritten to hew as closely to your original design as possible.  Again a key limitation is that a <code>Config</code> with equal configuration-time and run-time types will use <code>toRunTime' = return</code> and not any other definition given in its <code>Config</code> instance.</p>\n\n<pre><code>{-# LANGUAGE DataKinds, DeriveGeneric, FlexibleContexts,\n    FlexibleInstances, KindSignatures, MultiParamTypeClasses,\n    StandaloneDeriving, TypeFamilies, TypeFamilyDependencies,\n    TypeSynonymInstances, UndecidableInstances #-}\n{-# OPTIONS_GHC -Wall #-}\n\nimport qualified GHC.Generics as GHC\nimport Generics.SOP\nimport Control.Applicative\n\ndata UsagePhase = ConfigTime | RunTime\n\nclass Config (sel :: UsagePhase -&gt; *) where\n  type Phase (p :: UsagePhase) sel = r | r -&gt; sel\n  toRunTime :: Phase 'ConfigTime sel -&gt; IO (Phase 'RunTime sel)\nclass ConfigRun cty rty where\n  toRunTime' :: cty -&gt; IO rty\ninstance (Config (sel :: UsagePhase -&gt; *),\n          Phase 'ConfigTime sel ~ cty,\n          Phase 'RunTime sel ~ rty) =&gt; ConfigRun cty rty where\n  toRunTime' = toRunTime\ninstance {-# OVERLAPPING #-} ConfigRun ty ty where\n  toRunTime' = return\n\n-- DatabaseConfig field\ndata DatabaseConfig (p :: UsagePhase)\ndata ConnectInfo = ConnectInfo () deriving (Show)\ndata ConnectionPool = ConnectionPool () deriving (Show)\ninstance Config DatabaseConfig where\n  type Phase 'ConfigTime DatabaseConfig = ConnectInfo\n  type Phase 'RunTime    DatabaseConfig = ConnectionPool\n  toRunTime (ConnectInfo ()) = return (ConnectionPool ())\n\n-- KinesisConfig field\ndata KinesisConfig (p :: UsagePhase)\ndata KinesisInfo = KinesisInfo () deriving (Show)\ndata KinesisStream = KinesisStream () deriving (Show)\ninstance Config KinesisConfig where\n  type Phase 'ConfigTime KinesisConfig = KinesisInfo\n  type Phase 'RunTime    KinesisConfig = KinesisStream\n  toRunTime (KinesisInfo ()) = return (KinesisStream ())\n\n-- CfgMyHostName field\ndata CfgMyHostName = CfgMyHostName String deriving (Show)\n\ndata UiServerConfig (p :: UsagePhase) = CfgUiServerC\n  { userDatabase  :: Phase p DatabaseConfig\n  , cmsDatabase   :: Phase p DatabaseConfig\n  , kinesisStream :: Phase p KinesisConfig\n  , myHostName    :: CfgMyHostName \n  , myPort        :: Int\n  } deriving (GHC.Generic)\nderiving instance Show (UiServerConfig 'ConfigTime)\nderiving instance Show (UiServerConfig 'RunTime)\ninstance Generic (UiServerConfig p)\n\ngToRunTime :: (Generic (rcrd 'ConfigTime), Code (rcrd 'ConfigTime) ~ xssA,\n          Generic (rcrd 'RunTime), Code (rcrd 'RunTime) ~ xssB,\n          AllZip2 ConfigRun xssA xssB)\n      =&gt; rcrd 'ConfigTime -&gt; IO (rcrd 'RunTime)\ngToRunTime r = to &lt;$&gt; (gToRunTimeS (from r))\n  where\n    gToRunTimeS :: (AllZip2 ConfigRun xssA xssB) =&gt; SOP I xssA -&gt; IO (SOP I xssB)\n    gToRunTimeS (SOP (Z xs)) = SOP . Z &lt;$&gt; gToRunTimeP xs\n    gToRunTimeS (SOP (S _)) = error \"not implemented\"\n\n    gToRunTimeP :: (AllZip ConfigRun xsA xsB) =&gt; NP I xsA -&gt; IO (NP I xsB)\n    gToRunTimeP Nil = return Nil\n    gToRunTimeP (I x :* xs) = I &lt;$&gt; toRunTime' x &lt;**&gt; pure (:*) &lt;*&gt; gToRunTimeP xs\n\ncfg0 :: UiServerConfig 'ConfigTime\ncfg0 = CfgUiServerC (ConnectInfo ()) (ConnectInfo ()) (KinesisInfo())\n                    (CfgMyHostName \"localhost\") 10\n\nmain :: IO ()\nmain = do\n  print cfg0\n  run0 &lt;- gToRunTime cfg0\n  print run0\n</code></pre>\n"}], "owner": {"reputation": 635, "user_id": 860338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782e20b78bb80f4207cbea38f88c922a?s=128&d=identicon&r=PG", "display_name": "ImAlsoGreg", "link": "https://stackoverflow.com/users/860338/imalsogreg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 207, "favorite_count": 3, "accepted_answer_id": 51409436, "answer_count": 1, "score": 3, "last_activity_date": 1532015986, "creation_date": 1531855937, "last_edit_date": 1531900073, "question_id": 51388962, "link": "https://stackoverflow.com/questions/51388962/how-to-derive-generic-traversals-that-involve-a-type-family", "title": "How to derive generic traversals that involve a type family", "body": "<p>When configuring our applications, often the way that field is defined is the\nsame as the way the field is used:</p>\n\n<pre><code>data CfgMyHostName = CfgMyHostName Text\n</code></pre>\n\n<p>Other times, they differ. Let's make this formal in a typeclass:</p>\n\n<pre><code>data UsagePhase = ConfigTime | RunTime -- Used for promotion to types\n\nclass Config (a :: UsagePhase -&gt; *) where\n  type Phase (p :: UsagePhase) a = r | r -&gt; a\n  toRunTime :: Phase ConfigTime a -&gt; IO (Phase RunTime a)\n\ndata DatabaseConfig (p :: UsagePhase)\n\ninstance Config DatabaseConfig where\n  type Phase ConfigTime DatabaseConfig = ConnectInfo\n  type Phase RunTime    DatabaseConfig = ConnectionPool\n  toRunTime = connect\n</code></pre>\n\n<p>A typical service config has many fields, with some in each category.\nParameterizing the smaller components that we will compose together\nlets us write the big composite record once, rather than twice (once\nfor the config specification, once for the runtime data). This is\nsimilar to the idea in the 'Trees that Grow' paper:</p>\n\n<pre><code>data UiServerConfig (p :: UsagePhase) = CfgUiServerC {\n  userDatabase  :: Phase p DatabaseConfig\n  cmsDatabase   :: Phase p DatabaseConfig\n  ...\n  kinesisStream :: Phase p KinesisConfig\n  myHostName    :: CfgMyHostName \n  myPort        :: Int\n}\n</code></pre>\n\n<p><code>UiServerConfig</code> is one of many such services I'd like to configure, so it\nwould be nice to derive <code>Generic</code> for such record types, and to add a\ndefault <code>toRunTime</code> implementation to the <code>Config</code> class. This is where\nwe get stuck.</p>\n\n<p>Given a type parameterized like <code>data Foo f = Foo { foo :: TypeFn f Int, bar :: String}</code>,\nhow do I generically derive a traversal for any type like <code>Foo</code> which affects\nevery <code>TypeFn</code> record field (recursively)?</p>\n\n<p>As just one example of my confusion, I attempted to use generics-sop like this:</p>\n\n<pre><code>gToRunTime :: (Generic a, All2 Config xs)\n           =&gt; Phase ConfigTime xs\n           -&gt; IO (Phase RunTime xs)\ngToRunTime = undefined\n</code></pre>\n\n<p>This fails because <code>xs :: [[*]]</code>, but <code>Config</code> takes a type argument with kind <code>a :: ConfigPhase -&gt; *</code> </p>\n\n<p>Any hints about what to read in order to get untangled would really be appreciated. Full\nsolutions are acceptable too :)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 5, "creation_date": 1531849919, "post_id": 51387429, "comment_id": 89746963, "body": "What&#39;s a winning move? All your predicates so far relate two moves to each other; none is about a single move."}, {"owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1531850085, "post_id": 51387429, "comment_id": 89747040, "body": "Presumably you want to pit some of the moves in the list against others. But which? You can help by providing some desired example input-output pairs of the <code>winners</code> function."}, {"owner": {"reputation": 2313, "user_id": 5318306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897fd4f3b92d28c5c1eb28a8024661a1?s=128&d=identicon&r=PG&f=1", "display_name": "Gurkenglas", "link": "https://stackoverflow.com/users/5318306/gurkenglas"}, "edited": false, "score": 0, "creation_date": 1531850285, "post_id": 51387429, "comment_id": 89747162, "body": "Note that <code>loses_to &#47;= flip beats</code>: <code>loses_to Rock Rock</code>, but not <code>beats Rock Rock</code>."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1531851383, "post_id": 51387429, "comment_id": 89747693, "body": "I think <code>loses_to</code> <i>should</i> be implemented as <code>flip beats</code>, but actually as written it is equivalent to <code>(not .) . beats</code>. This is more an error in the current implementation than in the statement that it could be implemented as <code>flip beats</code>."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1532031297, "post_id": 51387429, "comment_id": 89832989, "body": "(As an aside, I think it would be easier to define <code>score</code> directly via an <code>==</code> guard for draws and inlining the <code>beats</code> pattern matching for winners. Everything else, by process of elimination, would be losers.)"}], "owner": {"reputation": 1, "user_id": 10095189, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/81e0f5af943d96d30e623b15279e3560?s=128&d=identicon&r=PG&f=1", "display_name": "StevePetersen", "link": "https://stackoverflow.com/users/10095189/stevepetersen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 105, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1531849438, "creation_date": 1531849438, "question_id": 51387429, "link": "https://stackoverflow.com/questions/51387429/defining-new-types-in-haskell-rps-game", "title": "Defining new types in Haskell - RPS game", "body": "<p>I'm completely new to Haskell (and more generally to functional programming), so forgive me if this is really basic stuff. I'm reading Real World Haskell and I'm creating the RPS Game</p>\n\n<hr>\n\n<pre><code>data Move = Paper | Rock | Scissors\nderiving (Eq, Show)\n\ndata Result =  Win | Draw | Lose   \nderiving (Eq, Show)\n\n-- function returns the move which beats the other move\nbeats :: Move -&gt; Move -&gt; Bool\nbeats Scissors Paper = True\nbeats Paper Rock     = True\nbeats Rock Scissors  = True\nbeats _ _            = False\n\n-- instead I could use in the 2\u00ba line: loses_to = flip beats\n\nloses_to :: Move -&gt; Move -&gt; Bool\nloses_to Scissors Paper = False\nloses_to Paper Rock     = False\nloses_to Rock Scissors  = False\nloses_to _ _            = True\n\n-- find out what the score is for moves and return Win or Draw or Lose\nscore :: Move -&gt; Move -&gt; Result\nscore this_move opposing_move\n | this_move `beats` opposing_move    = Win\n | this_move `loses_to` opposing_move = Lose\n | otherwise                          = Draw\n</code></pre>\n\n<hr>\n\n<p>There are probably a lot smarter ways to create this code. But in the example it uses the two functions \"beats\" and \"loses_to\".\nI'm stuck in creating a function called winners as follows:\nA function called 'winners' that receives a list of moves and returns a list of the indexes of the winning moves.</p>\n\n<pre><code>winners :: [Move] -&gt; ?\n</code></pre>\n\n<p>Thanks a lot for your help,</p>\n\n<p>Steve.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1531838000, "post_id": 51384015, "comment_id": 89739998, "body": "I think you do not really understand how Haskell works. Haskell is <i>statically typed</i>. That means that at <i>compile time</i>. The type of all variables is perfectly known. The value that is written at runtime, does not matter. If <code>numone</code> has type <code>Int</code>, then if I write <code>1</code> it will produce an <code>Int</code>, if I write <code>&quot;foobar&quot;</code>, then it will raise an error, since the idea is that it has to be an <code>Int</code>."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 1, "creation_date": 1531838298, "post_id": 51384015, "comment_id": 89740211, "body": "Why would anyone want to answer the question if you&#39;re just going to delete it?"}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531838372, "post_id": 51384015, "comment_id": 89740276, "body": "I am very new to Haskell yes. So how would I change the initial type before the compile time to check the type of an inputted value?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1531839294, "post_id": 51384015, "comment_id": 89740973, "body": "@Stefan: but an inputted value has no type, it is only a string, a stream of characters. If I write <code>42</code> I have <i>not</i> written the number 42. I have only written a <code>4</code> followed by a <code>2</code>. Whether you, your program or anyone else sees that as the number <code>42</code> or two random characters, or perhaps a tree, an octal number, the grayscale of a 2x1 image, etc. Is a matter of <i>interpretation</i>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1531839657, "post_id": 51384015, "comment_id": 89741221, "body": "I have answered the question as asked, because I think the answer may be useful to somebody else in the future. But given your apparent level of expertise I do not expect my answer to be useful to you; I apologize for that. I think the question is pretty irretrievably broken at the moment. You&#39;ll need to give some context about <i>why you think you need this</i> before we can redirect you to an appropriate solution. You <i>probably</i> just want to define a small grammar and write a parser, e.g. with parsec or alex+happy, but it&#39;s not super clear yet."}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1531846098, "post_id": 51384015, "comment_id": 89745018, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51368687/haskell-i-need-help-as-i-cant-seem-to-work-out-what-i-have-done-wrong-basic\">Haskell, I need help as I can&#39;t seem to work out what I have done wrong. (Basic)</a>"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1531847177, "post_id": 51384015, "comment_id": 89745609, "body": "I don&#39;t understand your question. <code>getLine</code> is type <code>IO String</code>, so <code>numone</code> is going to be type <code>String</code>, every single time: it&#39;s a string containing the characters in the line that you got. If you know those characters are digits, you can convert the string to a numeric type using <code>read</code>, in which case you&#39;d have to specify what type you want it to parse as (otherwise the compiler will complain). But in that case you still know the type beforehand, so there&#39;s no reason to check it at runtime. Maybe if you told us what you were trying to do, that would be helpful."}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531847692, "post_id": 51384015, "comment_id": 89745879, "body": "<code>You entered A123[String] and B456[String] They are the same and their types are [String] and [String]           or       They are not the same</code>Thats what I want it to show"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 2, "creation_date": 1531848508, "post_id": 51384015, "comment_id": 89746266, "body": "@Stefan So you want to read two lines and check if they&#39;re the same? You already know they have the same type (they&#39;re both <code>String</code>). You can check if the values are the same using <code>==</code>."}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531848912, "post_id": 51384015, "comment_id": 89746461, "body": "Well more specifically I want to be able to check if parts of two lines are the same or not. As simply as I can, 2018 and 2019 both share 20 then would print;  &#39;They are of the same millennium . This is the end goal, but I guess seeing as what I initially asked for isn&#39;t possible, may I have help with that instead but not a straight answer as I am wanting to learn the steps to do so."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1531849806, "post_id": 51384015, "comment_id": 89746900, "body": "@Stefan &quot;check if parts of two lines are the same&quot; This is very different from what you say in your question. Where does type comparison come in? Are you checking for arbitrary similar substrings, or do the lines have some sort of format you&#39;re working within? Do you always expect dates, and do you check for anything other than if they&#39;re the same millennium?"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1531849982, "post_id": 51384015, "comment_id": 89746997, "body": "@Stefan As I said before, I think you should edit your question to explain <i>what you&#39;re trying to do</i>. As in, what is the purpose of the program you&#39;re writing? Where do the lines you&#39;re reading come from, and what information do you need to extract from them, and why? What are some example inputs and expected outputs? Contextual information like that is extremely important, because if you don&#39;t provide it, we don&#39;t actually know what you&#39;re asking, and we can&#39;t answer properly."}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531851563, "post_id": 51384015, "comment_id": 89747759, "body": "If what I am asking help for is not clear within the edit please let me know."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1531852694, "post_id": 51384015, "comment_id": 89748308, "body": "&quot;The reason I wanted to be able to print what type of the inputted values were is to show wether or not the values [...] have same type&quot; So you want to know if they&#39;re the same type so you can know if they&#39;re the same type? But why? What is the goal here? Can you give examples of input lines and the types you expect them to have? Can you tell us what you&#39;re doing with these values after you figure out their types? What are the requirements for the program? Is it just practice for you, or is it an assignment, or is it meant to do something useful? Context helps us understand."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1531852981, "post_id": 51384015, "comment_id": 89748462, "body": "&quot;as I&#39;ve been told, that is simply not possible with how I want it.&quot; I think the problem is you haven&#39;t explained how you want it. The only example you&#39;ve given is that <code>A123[String]</code> and <code>B456[String]</code> are the same type and not the same value. Is <code>A123[String]</code> the actual contents of the line, or is the line <code>A123</code> and the type is <code>String</code>? What would a line containing a non-string look like? More examples would be helpful. If you clarify what it is you actually want, we can then tell you whether it&#39;s possible."}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531853095, "post_id": 51384015, "comment_id": 89748507, "body": "I wanted to know if they the values inputted were the same through comparison and to show what types they are. This is just practice for me as I&#39;m trying to learn. Ignoring the part about showing the types, my question is, how do I compare specific parts of two different strings? I&#39;d like to know what I can add to my code to be able to do that as right now I can only compare the two values as a whole."}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531853574, "post_id": 51384015, "comment_id": 89748717, "body": "I&#39;m not sure how else to explain it so I will use an example.  A car registration plate shows the year the car was made along with other details. If I was to compare two near identical cars and wanted to make sure I new which one was which I would look at the registration plate. My code would hopefully be able to show car A was made in year (17) and car B was made in (18). If both cars had registration numbers A17 ABCD and A18 ABCD then if you input those registration numbers into my code, it could tell them apart with a print statement.  I hope this clears it up a little bit."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1531855513, "post_id": 51384015, "comment_id": 89749672, "body": "Good, we&#39;re making progress. So if I understand, what you&#39;re looking for now is a way to compare two arbitrary strings and point out any similarities/differences between them, is that correct? In that case, you&#39;re going to want some kind of <a href=\"https://en.wikipedia.org/wiki/Longest_common_subsequence_problem\" rel=\"nofollow noreferrer\">LCS</a> algorithm (the <a href=\"https://en.wikipedia.org/wiki/Levenshtein_distance\" rel=\"nofollow noreferrer\">Levenshtein distance</a> algorithm can also be helpful). There may be a library on <a href=\"http://hackage.haskell.org/packages/\" rel=\"nofollow noreferrer\">Hackage</a> you can use. Or you may want to try writing the code yourself, that could be good practice."}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531857950, "post_id": 51384015, "comment_id": 89750807, "body": "As far as I can tell, the LCS algorithm checks all common elements of the strings. Is there anyway to use that algorithm to check a specific part of a string like in the car registration?"}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1532030870, "post_id": 51384015, "comment_id": 89832796, "body": "I think this has been suggested previously, but: if the strings have some significance for you beyond merely being a list of characters then you can <i>parse</i> them to extract that meaning. For instance, <code>data LicensePlate = LicensePlate { year :: String, number :: String }</code> and a function <code>parseLicensePlate :: String -&gt; LicensePlate</code> (of your own devising). Then, once you have a <code>LicensePlate</code>, you can compare its parts separately."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 0, "last_activity_date": 1531839501, "creation_date": 1531839501, "answer_id": 51384600, "question_id": 51384015, "link": "https://stackoverflow.com/questions/51384015/check-type-signature-of-inputted-value-and-compare-part-of-values/51384600#51384600", "title": "Check type signature of inputted value and compare part of values", "body": "<p>You may use the <a href=\"http://hackage.haskell.org/package/ghc\" rel=\"nofollow noreferrer\">GHC API</a> to compile (including typecheck) an arbitrary chunk of code given as a <code>String</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1531846468, "post_id": 51386412, "comment_id": 89745229, "body": "But OP <i>is</i> getting the type of the value. He&#39;s complaining that the type is <code>[Char]</code> when he doesn&#39;t want it to be. If he did <code>numOne &lt;- getLine</code> and then <code>:t numOne</code> in GHCi, the result would still be <code>[Char]</code>, so nothing changed."}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531847283, "post_id": 51386412, "comment_id": 89745664, "body": "In that case, how would I assign a value from <code>getLine</code> into a variable that I could test with <code>:t</code>"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 1, "creation_date": 1531847668, "post_id": 51386412, "comment_id": 89745869, "body": "@Stefan In GHCi you could do so by doing <code>numOne &lt;- getLine</code> and then <code>:t numOne</code> (outside of GHCi, you can&#39;t use <code>:t</code>), but as I said in my previous comment, the result of that will be exactly the same as the result of <code>typeOf</code>: it will always be <code>[Char]</code>. <code>getLine</code> won&#39;t ever give you anything other than a string."}], "tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 0, "last_activity_date": 1531845468, "creation_date": 1531845468, "answer_id": 51386412, "question_id": 51384015, "link": "https://stackoverflow.com/questions/51384015/check-type-signature-of-inputted-value-and-compare-part-of-values/51386412#51386412", "title": "Check type signature of inputted value and compare part of values", "body": "<p>You cannot find the type of a value in a program, since Haskell is statically typed.</p>\n\n<p>Instead, use GHCi:</p>\n\n<pre><code>&gt; ghci\nPrelude&gt; :t \"Hello!\"\n\"Hello!\" :: [Char]\nPrelude&gt; :t 12.3\n12.3 :: Fractional a =&gt; a\nPrelude&gt; :t Just (*)\nJust (*) :: Num a =&gt; Maybe (a -&gt; a -&gt; a)\n</code></pre>\n"}], "owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 112, "favorite_count": 0, "answer_count": 2, "score": -2, "last_activity_date": 1531851468, "creation_date": 1531837869, "last_edit_date": 1531851468, "question_id": 51384015, "link": "https://stackoverflow.com/questions/51384015/check-type-signature-of-inputted-value-and-compare-part-of-values", "title": "Check type signature of inputted value and compare part of values", "body": "<p>If I was to use '( ) &lt;- getLine', how would I check the type signature of the value on output through a putStrLn?</p>\n\n<pre><code> numone &lt;- getLine \n\n (show (typeOf numone))\n</code></pre>\n\n<p>When I use this it checks and prints the type signature of the word 'numone' and not what is inputted through the getLine function. Is there a workaround for this?</p>\n\n<p>Also;</p>\n\n<p>How would I compare a certain part of two inputted strings? \nIf I was to enter A12345 and A12335, I am looking for an output of \"They both contain A123 at the start\". So far I am using<br>\n<code>if numone == numtwo\n  then<br>\n    putStrLn $ \"They are the same and their types are \" ++ (show (typeOf numone)) ++ \" and \" ++ (show (typeOf numtwo))\n  else\n    putStrLn $ \"They are not the same\"</code></p>\n\n<blockquote>\n  <p>The reason I wanted to be able to print what type of the inputted values were is to show wether or not the values were the same along with if they have same type. So A123 [String] is not the same as B123 [String] but as I've been told, that is simply not possible with how I want it.</p>\n</blockquote>\n"}, {"tags": ["haskell", "math", "functional-programming", "monads", "functor"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 2, "creation_date": 1531816007, "post_id": 51376391, "comment_id": 89724668, "body": "Since the equivalence between these two forms is already clear to you, try rewriting some example code using <code>&gt;&gt;=</code> and <code>return</code> to use <code>fmap</code> and <code>join</code> instead. Is the result clearer? Does it use less &quot;monadic functions&quot;? If so, then include such a sample in your question, to make it clearer what you wish could happen; if not, then you have your answer as to why it is not often done. Also see <a href=\"https://stackoverflow.com/q/35387237/625403\">stackoverflow.com/q/35387237/625403</a>,"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1531816768, "post_id": 51376391, "comment_id": 89725171, "body": "Actually, I did, in JavaScript. It is clear to me that to make the code work in monadic way without monadic functions, all we have to do is create the composed bind with fmap*joint. The reason I don&#39;t put sample is I don&#39;t want make this topic limited to JavaScript and some concrete example."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1531816829, "post_id": 51376391, "comment_id": 89725223, "body": "I don&#39;t understand your point. Whay do you mean with &quot;a monadic function <code>a -&gt; m a</code> is not required? With only <code>fmap,join,&gt;&gt;=</code> you can not define <code>return</code>. Indeed, <code>return</code> is the only primitive that lets us create a monadic value from a non-monadic value. If you prefer, I think you could replace <code>return :: a -&gt; m a</code> with <code>base :: m ()</code> satisfying a bunch of laws, and then have <code>return x = fmap (const x) base</code>."}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 1, "creation_date": 1531816916, "post_id": 51376391, "comment_id": 89725285, "body": "I believe the types should be <code>return :: a -&gt; m a</code> (not <code>unit</code>), <code>fmap :: (a -&gt; b) -&gt; m a -&gt; m b</code>, and <code>(&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b</code>. (With the requirement  <code>Monad m</code>.) If you get the types wrong, none of it makes any sense."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531817158, "post_id": 51376391, "comment_id": 89725421, "body": "@chi , sorry it is obviously a typo and I modified it. It&#39;s <code>a -&gt; m b</code> the nomadic function, not unit/return  <code>a -&gt; m a</code>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 0, "creation_date": 1531817257, "post_id": 51376391, "comment_id": 89725475, "body": "@molbdnilo same, it was a typo. I didn&#39;t mean that of course."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531822407, "post_id": 51376391, "comment_id": 89729059, "body": "short answer: your quoted text itself talks about <code>return</code> which is a &quot;monadic function&quot; in your terminology. So no, you can&#39;t do without it. also, <code>a -&gt; b</code> is <i>not</i> the type of endofunctions (that would be <code>a -&gt; a</code> only)."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1531841745, "post_id": 51376391, "comment_id": 89742578, "body": "What is the type of <code>readIORef</code> in your proposed alternate world? Is it an <code>a -&gt; m b</code> function or an <code>a -&gt; b</code> function? If an <code>a -&gt; m b</code> function, is this suitable motivation for having <code>a -&gt; m b</code> functions (it certainly is for me)? If not, why not?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531857647, "post_id": 51376391, "comment_id": 89750657, "body": "@WillNess I think your answer is irrelevant because you merely could mention terminology issue. I think I made the things clear showing mathematical structure. Please do not make the topic confusing with playing words."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1531861635, "post_id": 51376391, "comment_id": 89752521, "body": "@bayesian-study I think there\u2019s is a misunderstanding here related to the nature of Haskell\u2019s polymorphism and that it is causing miscommunication. I think Daniel Wagner\u2019s last comment could help clarify this."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531900025, "post_id": 51376391, "comment_id": 89763777, "body": "repeat quote, <i>&quot;it is also possible to define a monad in terms of <code>return</code> and two other operations, <code>join</code> and <code>fmap</code>&quot;</i>. IOW <i>three</i> functions are needed, not two, specifically the <code>return :: (Monad m) =&gt; a -&gt; m a</code>. this is also mentioned in the answer below which is from one of the leading scientists in the field. for any function <code>f :: a -&gt; b</code> we have <code>(return . f) :: (Monad m) =&gt; a -&gt; m b</code>. moreover, opaque types like <code>IO</code> which the user doesn&#39;t have access to the definition of, inevitably must provide some primitives with such signature as well, like e.g. <code>putStr :: String -&gt; IO ()</code>."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 1, "creation_date": 1533040213, "post_id": 51376391, "comment_id": 90191962, "body": "What do you mean by, <i>&quot;a monadic function  <code>a -&gt; m b</code> is not required and normal functions <code>a -&gt; b</code> will satisfy the operation&quot;</i>? You also said that, <i>&quot;It is clear to me that to make the code work in monadic way without monadic functions, all we have to do is create the composed bind with fmap*joint. The reason I don&#39;t put sample is I don&#39;t want make this topic limited to JavaScript and some concrete example.&quot;</i> Why don&#39;t you share the code example? It would be really helpful for us to understand what you&#39;re trying to convey."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1533043450, "post_id": 51376391, "comment_id": 90194164, "body": "@AaditMShah Hi, I&#39;m really glad you&#39;ve joined this topic, and eventually, I think you are the one to deserve the 500point bounty contribution. I will edit my Question, and let you know when it&#39;s done. Currently, not enough time to write, so. Just greeting."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1533367757, "post_id": 51376391, "comment_id": 90329440, "body": "You should accept one of the two answers provided and @KenOKABE should award them the bounty because both of them are absolutely correct."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1533371406, "post_id": 51376391, "comment_id": 90330109, "body": "@AaditMShah No, pigworker understand the problem and he answered in that context, however, DarthFennec doesn&#39;t know the real Monad concept and looking at you supporting the answer as absolute correctness neither do you."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "edited": false, "score": 0, "creation_date": 1533371486, "post_id": 51376391, "comment_id": 90330123, "body": "I answered by myself and it&#39;s so disappointing to see very few knows what&#39;s the real problem is."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1533375885, "post_id": 51376391, "comment_id": 90330971, "body": "@AaditMShah and just let you know, I downvote you guys simply because your understanding is not enough, and spreading a wrong idea. If you downvote my answer, just clarify reason, and you are welcome to discuss your justification of conduct."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "edited": false, "score": 0, "creation_date": 1531817804, "post_id": 51376972, "comment_id": 89725820, "body": "Thanks for your thought. How about an issue of compatibility? To me, it&#39;s obvious there are many endo-functions type libraries, for instance Math libraries are endo-functions. If we simply can use <code>a -&gt; b</code>,  we don&#39;t use much brain to take advantage of them to monadic context, but in the situation <code>a -&gt; m b</code> is  required, &quot;oops, I forgot make to convert that and that&quot; confusion must arise."}, {"owner": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 0, "creation_date": 1531818499, "post_id": 51376972, "comment_id": 89726300, "body": "@bayesian-study In math, it common for functions to be total, thus you see a lot of <code>a -&gt; b</code> function signatures. <code>a -&gt; m b</code> arises when there a computations which have other effects. For example, if we model division, we have an edge case where we might fail when the denominator is 0. One way to model this is with a <code>Maybe</code> type: <code>divide :: a -&gt; Maybe b</code>."}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 1, "creation_date": 1531818672, "post_id": 51376972, "comment_id": 89726420, "body": "Given that <code>a -&gt; m c</code> is a special case of <code>a -&gt; b</code>, a lot of that material is highly reusable. Moreover, if you have a pure <code>f :: a -&gt; b</code>, then <code>(return . f) :: a -&gt; m b</code> is the extra bit of plumbing you need. What you don&#39;t get to do is give <code>Int -&gt; m String</code> things the type <code>Int -&gt; String</code>, because that would be a serious lie. So yes, the setup does require a bit of extra plumbing to put the extra <code>m</code>s where they&#39;re needed, and it does cause some confusion. Some people (e.g., me) advocate a cleaner separation of the notions of value and effect. NB I didn&#39;t pay to be asked this question!"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "edited": false, "score": 1, "creation_date": 1531819272, "post_id": 51376972, "comment_id": 89726807, "body": "@pigworker Interesting perceptive, however, the type thing you insist is also tricky and to be carefully, because if your mind set is <code>Int -&gt; m String</code>, why don&#39;t you define a special type <code>Int String</code>? then it becomes endo  <code>Int String a  -&gt;  Int String b</code>. I still don&#39;t see much justifications we must stick to <code>a -&gt; m b</code> because, as you say <code>a -&gt; m c</code> is a special case of <code>a -&gt; b</code>, why not the matter generalized??"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 1, "creation_date": 1531819494, "post_id": 51376972, "comment_id": 89726965, "body": "@Yuval Itzchakov I can&#39;t agree to your opinion that &quot;something will fail&quot; by using more generalized form <code>a -&gt; b</code> not the special form <code>a -&gt; m b</code>. I would agree if you mention the opposite, obviously."}, {"owner": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 0, "creation_date": 1531819589, "post_id": 51376972, "comment_id": 89727032, "body": "@bayesian-study How would you represent a division by 0 with the signature <code>a -&gt; b</code>? Can I always compute <code>b</code> for any <code>a</code>?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "reply_to_user": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 1, "creation_date": 1531819676, "post_id": 51376972, "comment_id": 89727093, "body": "@Yuval Itzchakov Simply I define a type of <code>mb</code>. and the endofuction is <code>mb a -&gt; mb b</code>  That is what we want right?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "edited": false, "score": 1, "creation_date": 1531820190, "post_id": 51376972, "comment_id": 89727430, "body": "Well, I&#39;m basically a heavy JavaScript guy from duck-typing world, and not bothered by static-typing around. I simply feel something wrong to limit the type behavior in advance of writing code. You guys are quite right if you strongly feel the type<code>m</code> gives you a &quot;free hand&quot;, your mind set is duck-typing not static. Welcome to duck-typing world.  It&#39;s definitely not a problem of generalized <code>a -&gt; b</code> endo-functions!"}, {"owner": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 0, "creation_date": 1531820887, "post_id": 51376972, "comment_id": 89727979, "body": "@bayesian-study Not sure I follow your train of thought. What is <code>mb</code> to you in this context? Can you give a concrete example? How would you model the example I provided with division?"}, {"owner": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 0, "creation_date": 1531821111, "post_id": 51376972, "comment_id": 89728159, "body": "<code>mb</code> would model a <code>Maybe a</code> in this case? What value would represent the absence of a result in the codomain?"}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 3, "creation_date": 1531826908, "post_id": 51376972, "comment_id": 89731984, "body": "What would this type <code>Int String</code> mean? It couldn&#39;t be called <code>Int String</code> because <code>Int</code> and <code>String</code> are already types. And why would a special type be a good idea if the point is to achieve <i>appropriate</i> generality? Suppose I want to convert back from a name to a registration number? That&#39;ll need a <code>String -&gt; m Int</code> for <i>the same</i> <code>m</code> but different value types. The point is to indicate what sorts of <i>interaction plans</i> are allowed, independently of the types of value to be computed by means of those plans, and allowing plans to be constructed compositionally."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "edited": false, "score": 0, "creation_date": 1531858644, "post_id": 51376972, "comment_id": 89751149, "body": "The comments are deleted for some reason, so I must re-post an important fact. <code>Maybe a</code> has absolutely no relation with <code>a -&gt; m b</code>. There is &quot;Maybe Monoids&quot;."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "reply_to_user": {"reputation": 135642, "user_id": 1870803, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jYakG.jpg?s=128&g=1", "display_name": "Yuval Itzchakov", "link": "https://stackoverflow.com/users/1870803/yuval-itzchakov"}, "edited": false, "score": 0, "creation_date": 1531859402, "post_id": 51376972, "comment_id": 89751492, "body": "@YuvalItzchakov I also should have mentioned the fact there is <code>fmap</code> of Maybe &quot;Maybe Functor&quot; <a href=\"http://blog.ploeh.dk/2018/03/26/the-maybe-functor/\" rel=\"nofollow noreferrer\">blog.ploeh.dk/2018/03/26/the-maybe-functor</a>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "edited": false, "score": 0, "creation_date": 1531861347, "post_id": 51376972, "comment_id": 89752378, "body": "@pigworker I&#39;m from duck-typing world, so please excuse me to explain the duck-typing oriented idea in JavaScript. It is simply as follows:"}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "edited": false, "score": 0, "creation_date": 1531861785, "post_id": 51376972, "comment_id": 89752582, "body": "In JS, <code>Number(&#39;123&#39;) =123</code>, also <code>Number(Number) = Number</code>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "edited": false, "score": 0, "creation_date": 1531861909, "post_id": 51376972, "comment_id": 89752627, "body": "Obviously, this corresponds to <code>unit :: a -&gt; m a</code> and <code>join :: m (m a) -&gt; m a</code>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "edited": false, "score": 0, "creation_date": 1531862113, "post_id": 51376972, "comment_id": 89752714, "body": "If you add <code>fmap :: (a -&gt; b) -&gt; (m a -&gt; m b)</code> method to <code>Number</code> object/function prototype, the pair of object ad method of <code>Number</code> becomes a monad."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "edited": false, "score": 0, "creation_date": 1531862293, "post_id": 51376972, "comment_id": 89752779, "body": "In this Monad scheme, I can&#39;t see any justification to give an extra space for the fancy <code>a -&gt; mb</code>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "edited": false, "score": 0, "creation_date": 1531862730, "post_id": 51376972, "comment_id": 89752938, "body": "In a sense, Number type is a natural born Monad, <code>1 = (1) = ((1))</code>  because it embraces the built-in structure of <code>join</code> or flatten, no need to give foregin natures later. You can chain <code>map</code> of <code>fmap</code> to the numbers. Nobody don&#39;t <code>bind</code> between numbers."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "edited": false, "score": 0, "creation_date": 1531863295, "post_id": 51376972, "comment_id": 89753159, "body": "So, the whole point is &quot;how to obtain a type of fractal structure line Number, from any other types?&quot; right? Moggi or Philip Wadler chosed Kleisli-category and <code>bind</code>  <code>a - mb</code>  which is fine, but I simply feel wrong to stick to it. It&#39;s just a historical reason."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 2, "creation_date": 1531863645, "post_id": 51376972, "comment_id": 89753279, "body": "@KenOKABE I am confused. Are you reposting your own comments that got deleted or someone else\u2019s comments? Also, there are a lot of things to unpack and discuss from those comments. I believe there are at least one or two misunderstandings that are obscuring things."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1028880"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1531864214, "post_id": 51376972, "comment_id": 89753456, "body": "@DavidYoung No, I have repost an important reference deleted along with some off-topic controversy, and please do not repeat to transform the topic to communication staff. If you insist, just email me kenokabe@gmail.com"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 1, "creation_date": 1531865070, "post_id": 51376972, "comment_id": 89753713, "body": "@KenOKABE I\u2019m afraid I don\u2019t understand what you mean, but I hope this discussion ends up working out well for everyone. Maybe the SO chat would be a better venue for it though?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1531902232, "post_id": 51376972, "comment_id": 89765039, "body": "@pigworker would this <i>&quot;cleaner separation of the notions of value and effect&quot;</i> mean replacing the EDSLs (which the monads are), with some kind of syntax-based DSL? what would replace <code>putStr</code>, for instance?"}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533002290, "post_id": 51376972, "comment_id": 90174642, "body": "@WillNess Why ask &quot;do you mean X?&quot; when you could just ask what I mean? Alternatively, you could read my POPL 2017 paper, ungooglably named &quot;Do Be Do Be Do&quot;, where I say what I mean."}], "tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": false, "score": 10, "last_activity_date": 1531817296, "creation_date": 1531817296, "answer_id": 51376972, "question_id": 51376391, "link": "https://stackoverflow.com/questions/51376391/bind-can-be-composed-of-fmap-and-join-so-do-we-have-to-use-monadic-functions-a/51376972#51376972", "title": "bind can be composed of fmap and join, so do we have to use monadic functions a -&gt; m b?", "body": "<p>In a sense, you're right. As every monad <code>m</code> is a functor, we can use <code>fmap f</code> with a function <code>f :: a -&gt; b</code> to turn an <code>m a</code> into an <code>m b</code>, but there's a catch. What's <code>b</code>?</p>\n\n<p>I like to think of such an <code>m</code> as meaning \"plan-to-get\", where \"plans\" involve some sort of additional interaction beyond pure computation. If you have a \"plan-to-get <code>Int</code>\" and you want a \"plan-to-get <code>String</code>\", you can use <code>fmap</code> with a function in <code>Int -&gt; String</code>, but the type of that function tells you that getting the <code>String</code> from the <code>Int</code> involves no further interaction.</p>\n\n<p>That isn't always so: perhaps the <code>Int</code> is a student registration number and the <code>String</code> is their name, so the plan to convert from one to the other needs an external lookup in some table. Then I don't have a pure function from <code>Int</code> to <code>String</code>, but rather a pure function from <code>Int</code> to \"plan-to-get <code>String</code>\". If I <code>fmap</code> that across my \"plan-to-get <code>Int</code>\", that's fine, but I end up with \"plan-to-get (plan-to-get <code>String</code>)\" and I need to <code>join</code> the outer and inner plans.</p>\n\n<p>The general situation is that we have enough information to compute the plan to get more. That's what <code>a -&gt; m b</code> models. In particular, we have <code>return :: a -&gt; m a</code>, which turns the information we have into the plan that gives us exactly that information by taking no further action, and we have <code>(&gt;=&gt;) :: (a -&gt; m b) -&gt; (b -&gt; m c) -&gt; (a -&gt; m c)</code> which composes two such things. We also have that <code>(&gt;=&gt;)</code> is associative and absorbs <code>return</code> on left and right, much the way <code>;</code> is associative and absorbs <code>skip</code> in classic imperative programming.</p>\n\n<p>It's more convenient to build larger plans from smaller ones using this compositional approach, keeping the number of \"plan-to-get\" layers a consistent <em>one</em>. Otherwise, you need to build up an <em>n</em>-layer plan with <code>fmap</code>, then do the right number of <code>join</code>s on the outside (which will be a brittle property of the plan).</p>\n\n<p>Now, as Haskell is a language with a concept of \"free variable\" and \"scope\", the <code>a</code> in</p>\n\n<pre><code>(&gt;=&gt;) :: (a -&gt; m b) -&gt; (b -&gt; m c) -&gt; (a -&gt; m c)\n</code></pre>\n\n<p>representing the \"overall input information\" can just be taken to come from the scope of things we already have, leaving</p>\n\n<pre><code>(&gt;&gt;=) ::       m b  -&gt; (b -&gt; m c) -&gt;       m c\n</code></pre>\n\n<p>and we get back \"bind\", which is the tool that presents the compositional structure in the most programmer-friendly form, resembling a local definition.</p>\n\n<p>To sum up, you can work with <code>a -&gt; b</code>, but often you need <code>b</code> to be \"plan-to-get something\", and that's the helpful thing to choose if you want to build plans compositionally.</p>\n"}, {"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1533095661, "post_id": 51622830, "comment_id": 90215007, "body": "I feel the OP might be mixing up &quot;endofunctions&quot; with &quot;endofunctors&quot; (as in &quot;a <code>Functor</code> is a <b>Hask</b> endofunctor&quot;), but that is just a guess."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1533142181, "post_id": 51622830, "comment_id": 90241416, "body": "@duplode This is very probable. I&#39;ve edited the answer to include this."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "edited": false, "score": 0, "creation_date": 1533375847, "post_id": 51622830, "comment_id": 90330963, "body": "and just let you know, I downvote you guys simply because your understanding is not enough, and spreading a wrong idea. If you downvote my answer, just clarify reason, and you are welcome to discuss your justification of conduct."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1533485771, "post_id": 51622830, "comment_id": 90353509, "body": "@user6440264 The reason I&#39;m having a hard time understanding your question is because I can take it about ten wildly varying ways that all make equal amounts of sense. Put another way, the reason my &quot;understanding is not enough&quot; is because <i>you aren&#39;t being clear enough</i>. I don&#39;t think I deserve downvotes for that. I&#39;d have liked for us all to work together and learn from each other (as is ultimately the purpose of this site), and I&#39;m a little disappointed that that hasn&#39;t turned out to be possible."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533648273, "post_id": 51622830, "comment_id": 90416250, "body": "@DarthFennec <a href=\"https://stackoverflow.com/posts/51376391/revisions\">stackoverflow.com/posts/51376391/revisions</a> ; <a href=\"https://imgur.com/a/SyzZbFw\" rel=\"nofollow noreferrer\">imgur.com/a/SyzZbFw</a>"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533660236, "post_id": 51622830, "comment_id": 90424215, "body": "@WillNess Why link me the revision history? I&#39;m not sure what I&#39;m looking for."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533665915, "post_id": 51622830, "comment_id": 90426865, "body": "just some meta stuff there, related to the votes you&#39;ve received. you can safely disregard all that. :)"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533668415, "post_id": 51622830, "comment_id": 90428075, "body": "@WillNess Ah, gotcha. I wasn&#39;t worried about my votes, I was just disappointed in his behavior. Thanks though ^^"}], "tags": [], "owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "is_accepted": false, "score": 8, "last_activity_date": 1533142120, "last_edit_date": 1533142120, "creation_date": 1533075092, "answer_id": 51622830, "question_id": 51376391, "link": "https://stackoverflow.com/questions/51376391/bind-can-be-composed-of-fmap-and-join-so-do-we-have-to-use-monadic-functions-a/51622830#51622830", "title": "bind can be composed of fmap and join, so do we have to use monadic functions a -&gt; m b?", "body": "<p>I'm having a bit of a hard time understanding what your question actually is, but I'll take a crack at it anyway.</p>\n\n<blockquote>\n  <p>I think that since <code>&gt;&gt;=</code> can be composed of <code>fmap</code> and <code>join</code>, a monadic function  <code>a -&gt; m b</code> is not required and normal functions <code>a -&gt; b</code> will satisfy the operation,</p>\n</blockquote>\n\n<p>I expect you're referring to the \"monadic function <code>a -&gt; m b</code>\" in the type for <code>&gt;&gt;=</code>, is that correct? Well, let's see what happens when we replace that with a function of type <code>a -&gt; b</code>:</p>\n\n<pre><code>(&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b  -- standard version\n(&gt;&gt;=) :: m a -&gt; (a -&gt; b) -&gt; m b    -- your version\n</code></pre>\n\n<p>But doesn't this look familiar? It's equivalent to <code>fmap :: (a -&gt; b) -&gt; m a -&gt; m b</code>, but with the parameters switched. In fact, the implementation is just <code>x &gt;&gt;= y = fmap y x</code>, no need for <code>join</code>. So there's your answer: if you use a \"normal function <code>a -&gt; b</code>\" instead of a \"monadic function <code>a -&gt; m b</code>\", you <em>no longer have a monad</em>. Instead, you have a <code>Functor</code>.</p>\n\n<hr>\n\n<blockquote>\n  <p>but so many tutorials around the web still insist to use a monadic functions since that is the Kleisli triple and the monad-laws.</p>\n</blockquote>\n\n<p>I'm not sure which tutorials you're looking at. In my experience, the nature of tutorials is that they insist on whatever they're a tutorial for. It would be weird if a tutorial for <code>Monad</code>s started presenting problems, and then suggesting things other than <code>Monad</code>s as solutions; at the very least, that would be out of the tutorial's scope, and a waste of time for anyone reading it to learn about <code>Monad</code>s.</p>\n\n<hr>\n\n<blockquote>\n  <p>Well, shouldn't we just use non-monadic functions, as long as they are endo-functions, for the simplicity? What do I miss?</p>\n</blockquote>\n\n<p>Endofunctions are functions of type <code>a -&gt; a</code>. Given the context of your question, I think you actually mean <em>pure functions</em> of type <code>a -&gt; b</code> (\"pure\" as opposed to inherently monadic functions such as <code>readIORef</code> that need to be type <code>a -&gt; m b</code>). If my assumption is wrong, let me know, and I'll edit the question.</p>\n\n<p>EDIT:<br>\nAs suggested in a comment by @duplode, it's likely that you mean <em>endofunctor</em>, which in Haskell is just any type of <code>Functor</code>. In this case, the below still applies.</p>\n\n<p>In situations where <code>Monad</code> isn't necessary, it is often simpler to use <code>Applicative</code>, <code>Functor</code>, or just basic pure functions. In these cases, these things should be (and generally are) used in place of a <code>Monad</code>. For example:</p>\n\n<pre><code>ws &lt;- getLine &gt;&gt;= return . words  -- Monad\nws &lt;- words &lt;$&gt; getLine           -- Functor (much nicer)\n</code></pre>\n\n<p>To be clear: If it's possible without a monad, and it's simpler and more readable without a monad, then you should do it without a monad! If a monad makes the code more complex or confusing than it needs to be, don't use a monad! Haskell has monads for the sole purpose of making certain complex computations simpler, easier to read, and easier to reason about. If that's not happening, <em>you shouldn't be using a monad</em>.</p>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533639587, "post_id": 51723762, "comment_id": 90410465, "body": "what good is <code>join</code> without any function of <code>Monad m =&gt; a -&gt; m b</code> type? It&#39;d be an applicative then, not a monad. <code>join [[x+1, x*2] | x &lt;-[10..13]]</code> is just <code>pure (&amp;) &lt;*&gt; [10..13] &lt;*&gt; [(+1),(*2)]</code>. Monad is a <i>Kleisli</i> triple, by definition, isn&#39;t it? What would replace <code>print</code>, for example? Some verbs of a non-pure Monad just have to be supplied as primitives. Not everything is achievable by composition with <code>pure</code>, unless that monad itself is <i>pure</i>, of course."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533643515, "post_id": 51723762, "comment_id": 90412927, "body": "@WillNess Yes, that&#39;s exactly what I meant by &quot;<i>On their own, the <code>return</code>/<code>fmap</code>/<code>join</code> functions are pretty useless</i>&quot;"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533644631, "post_id": 51723762, "comment_id": 90413645, "body": "all I saw was, &quot;a monadic function <code>a -&gt; m b</code> is not required&quot; --- &quot;Yes, you&#39;re totally right.&quot;"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1533646816, "post_id": 51723762, "comment_id": 90415128, "body": "@WillNess Oh, right. I understood that as &quot;a monad method <code>&gt;&gt;=</code> that takes a monadic function is not required&quot;."}], "tags": [], "owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "is_accepted": false, "score": 2, "last_activity_date": 1533738669, "last_edit_date": 1533738669, "creation_date": 1533635313, "answer_id": 51723762, "question_id": 51376391, "link": "https://stackoverflow.com/questions/51376391/bind-can-be-composed-of-fmap-and-join-so-do-we-have-to-use-monadic-functions-a/51723762#51723762", "title": "bind can be composed of fmap and join, so do we have to use monadic functions a -&gt; m b?", "body": "<h1>There is no reason.</h1>\n\n<blockquote>\n  <p>I think that since <code>&gt;&gt;=</code> can be composed of <code>fmap</code> and <code>join</code>, a monadic function <code>a -&gt; m b</code> is not required</p>\n</blockquote>\n\n<p>Yes, you're totally right. We don't need to require <code>&gt;&gt;=</code> for a monad, we could also require <code>join</code> instead. The two are totally equivalent. As we can also compose <code>join = (&gt;&gt;= id)</code>, we can do either</p>\n\n<pre><code>class Monad m where\n    return :: a -&gt; m a\n    fmap :: (a -&gt; b) -&gt; m a -&gt; m b\n    (=&lt;&lt;) :: (a -&gt; m b) -&gt; m a -&gt; m b\n    -- join = (=&lt;&lt;) id\n</code></pre>\n\n<p>or</p>\n\n<pre><code>class Monad m where\n    return :: a -&gt; m a\n    fmap :: (a -&gt; b) -&gt; m a -&gt; m b\n    join :: m (m a) -&gt; m a\n    -- (=&lt;&lt;) = (join .) . fmap\n</code></pre>\n\n<p>It doesn't matter which one we use. Admittedly, the latter looks simpler because there is only one higher-order function (<code>fmap</code>), in the former the types of <code>fmap</code> and <code>=&lt;&lt;</code> look too similar. <code>join</code> gives a better idea of what distinguishes a monad from a functor.</p>\n\n<h1>Versatility</h1>\n\n<p>We can derive <code>&gt;&gt;=</code> from <code>fmap</code> and <code>join</code>, but we can derive <code>join</code> from <code>&gt;&gt;=</code> only. In fact, we can even derive <code>fmap</code> from <code>&gt;&gt;=</code> and <code>return</code>. So should we say that <code>&gt;&gt;=</code> is more basic than the other? More powerful? Or maybe just: more convoluted?</p>\n\n<p>We would rather like to write</p>\n\n<pre><code>data Maybe a = Just a | Nothing\nimplement Functor Maybe where\n    fmap = (=&lt;&lt;) . (return .) -- maybe not even write this ourselves\nimplement Monad Maybe where\n    return = Just\n    f =&lt;&lt; Just x = f x\n    _ =&lt;&lt; Nothing  = Nothing\n</code></pre>\n\n<p>than</p>\n\n<pre><code>data Maybe a = Just a | Nothing\nimplement Functor Maybe where\n    fmap f (Just x) = Just (f x)\n    fmap f Nothing  = Nothing\nimplement Monad Maybe where\n    return x = Just x\n    join (Just (Just x)) = Just x\n    join (Just Nothing)  = Nothing\n    join Nothing         = Nothing\n</code></pre>\n\n<p>The former solution using <code>&gt;&gt;=</code> is minimal.</p>\n\n<h1>Convenience</h1>\n\n<blockquote>\n  <p>Well, shouldn't we just use non-monadic functions for the simplicity?</p>\n</blockquote>\n\n<p>No. The whole idea of defining the monad typeclass is to ease working with monadic functions. On their own, the <code>return</code>/<code>fmap</code>/<code>join</code> functions are pretty useless, what we are interested in are other functions that return the monadic data type: <code>tryParse :: String -&gt; Maybe Int</code> for example.</p>\n\n<p>And the whole idea behind monads is that we can arbitrarily chain and nest them, getting back a plain type in the end. After having parsed a number, we need to validate the optional result (giving us another optional result) - <em>in</em> the monad (<code>fmap validate</code>) before getting it back out. There are usually no operations that yield nested data directly, we only get nested monad types because we do further monadic operations inside a monadic type. And we'd much rather write</p>\n\n<pre><code>tryRead = (=&lt;&lt;) validate . tryParse\n</code></pre>\n\n<p>than</p>\n\n<pre><code>tryRead = join . fmap validate . tryParse\n</code></pre>\n\n<p>That's why <code>&gt;&gt;=</code> is more important for using monads in daily life than <code>join</code>. I would also guess that having to implement <code>&gt;&gt;=</code> directly, rather than implement <code>join</code> explicitly and have <code>&gt;&gt;=</code> get derived from it, allows for better (easier) compiler optimisations.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 13414633, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/35ba33417633a15eb98b6b7ebe63938b?s=128&d=identicon&r=PG", "display_name": "fieldchester", "link": "https://stackoverflow.com/users/13414633/fieldchester"}, "is_accepted": false, "score": 0, "last_activity_date": 1587954955, "creation_date": 1587954955, "answer_id": 61450871, "question_id": 51376391, "link": "https://stackoverflow.com/questions/51376391/bind-can-be-composed-of-fmap-and-join-so-do-we-have-to-use-monadic-functions-a/61450871#61450871", "title": "bind can be composed of fmap and join, so do we have to use monadic functions a -&gt; m b?", "body": "<p>Composition of Kleisli arrows a -> [b]    </p>\n\n<pre><code> (a-&gt;mb) -&gt; (b-&gt;mc) -&gt; (a-&gt;mc)\n    f          g  \n</code></pre>\n\n<p>a, b, c are arbitrary types, m is always the same, here it is []</p>\n\n<p>We have to produce a function (a->mc)<br>\nFunctions are produced with a lambda, we have one argument a.    </p>\n\n<pre><code>f &gt;=&gt; g =  \\a -&gt; ..f..g..\n           \\a -&gt; let mb = f a;\n                 in mc = mb &gt;&gt;= g\n</code></pre>\n\n<p>Above is taken from Bartosz Milewski Category Theory 10.1: Monads</p>\n\n<pre><code>mb &gt;&gt;= g producing mc    That looks like a functor\n\nmb &gt;&gt;= b-&gt;mc     variable substitution: mc -&gt; c'\nmb &gt;&gt;= b-&gt;c'     now this is a functor!\nfmap b-&gt;c' mb     fmap goes under the hood\nm (b-&gt;c' b)      back substitution c' -&gt; mc\nm (b-&gt;mc b)\nm (mc)    is not mc, so  another try!\n\njoin fmap g mb\njoin m(mc)     Monoid\nmc       is mc   OK!\n\nmc = mb &gt;&gt;= g\nmc = join $ fmap g mb\n</code></pre>\n\n<p>g is b -> mc, so >>= and join-fmap use it the same way.\nIf it's not available, you can build it with return.</p>\n\n<pre><code>return\nIf we have b-&gt;c instead of b-&gt;mc\n\nmb &gt;&gt;= (b-&gt;c) -&gt; (b-&gt;mc)\n         f\nmb &gt;&gt;= \\b -&gt; let c = f b ;\n             mc = return c\n             in  mc\nreturn :: c -&gt; mc\n\nmc = mb &gt;&gt;= \\b -&gt; return $ f b\nand\nmc = join $ fmap (\\b -&gt; return $ f b) mb\n</code></pre>\n\n<p>f is b -> c, you can use it together with return instead of b -> mc (Your Question).</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1700, "favorite_count": 1, "answer_count": 4, "score": 11, "last_activity_date": 1587954955, "creation_date": 1531815287, "last_edit_date": 1531822468, "question_id": 51376391, "link": "https://stackoverflow.com/questions/51376391/bind-can-be-composed-of-fmap-and-join-so-do-we-have-to-use-monadic-functions-a", "title": "bind can be composed of fmap and join, so do we have to use monadic functions a -&gt; m b?", "body": "<p>I don't use Haskell a lot, but I understand the concept of Monads.</p>\n\n<p>I had been confused by <a href=\"https://en.wikipedia.org/wiki/Kleisli_category#Extension_operators_and_Kleisli_triples\" rel=\"noreferrer\">Kleisli triple</a>, and the category, however, </p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Monad_(functional_programming)#fmap_and_join\" rel=\"noreferrer\">fmap and join</a></p>\n\n<blockquote>\n  <p>Although Haskell defines monads in terms of the return and bind functions, it is also possible to define a monad in terms of <code>return</code> and two other operations, <code>join</code> and <code>fmap</code>. This formulation fits more closely with the original definition of monads in category theory. The <code>fmap</code> operation, with type <code>(t \u2192 u) \u2192 M t \u2192 M u</code>, takes a function between two types and produces a function that does the \"same thing\" to values in the monad. The <code>join</code> operation, with type <code>M (M t) \u2192 M t</code>, \"flattens\" two layers of monadic information into one.</p>\n</blockquote>\n\n<p>helps me to the background principle of Monads.</p>\n\n<blockquote>\n  <p>The two formulations are related as follows:</p>\n</blockquote>\n\n<pre><code>fmap f m = m &gt;&gt;= (return . f)\njoin n   = n &gt;&gt;= id\n\nfmap :: (a -&gt; b) -&gt; (m a -&gt; m b)\nunit :: a -&gt; m a\njoin :: m (m a) -&gt; m a\n&gt;&gt;=  :: m a -&gt; (a -&gt; m b) -&gt; m b\n\nm &gt;&gt;= f  =  join $ fmap f m\n</code></pre>\n\n<p>My question is:\nI think that since <code>&gt;&gt;=</code>  can be composed of <code>fmap</code> and <code>join</code>, a monadic function \n<code>a -&gt; m b</code> is not required and normal functions <code>a -&gt; b</code> will satisfy the operation, but so many tutorials around the web still insist to use a monadic functions since that is the Kleisli triple and the monad-laws.</p>\n\n<p>Well, shouldn't we just use non-monadic functions, as long as they are endo-functions, for the simplicity? What do I miss?</p>\n\n<p>Related topics are</p>\n\n<p><a href=\"https://stackoverflow.com/questions/3382210/monad-join-function\">Monad join function</a></p>\n\n<p><a href=\"https://stackoverflow.com/questions/7975022/haskell-monad-bind-operator-confusion\">Haskell Monad bind operator confusion</a></p>\n\n<p><a href=\"https://stackoverflow.com/questions/35387237/difference-in-capability-between-fmap-and-bind\">Difference in capability between fmap and bind?</a></p>\n"}, {"tags": ["haskell", "types", "where"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531814167, "post_id": 51375989, "comment_id": 89723616, "body": "Looks like the consequence of the <i>monomorphism restriction</i> <a href=\"https://wiki.haskell.org/Monomorphism_restriction\" rel=\"nofollow noreferrer\">wiki.haskell.org/Monomorphism_restriction</a>"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1531817296, "creation_date": 1531817296, "answer_id": 51376971, "question_id": 51375989, "link": "https://stackoverflow.com/questions/51375989/how-to-reference-the-type-from-a-function-inside-a-sub-function/51376971#51376971", "title": "How to reference the type from a function inside a sub function", "body": "<p>This should do the job. To reuse <code>k</code> you need to turn on a very common extension.</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n\nfoo :: forall k . DingBat k =&gt; k -&gt; String\nfoo kv = \"foo\"\n  where\n  bar :: k -&gt; String\n  bar kv2 = ding2 kv kv2\n</code></pre>\n"}], "owner": {"reputation": 541, "user_id": 359606, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b8c8a858811dfece044c3818e21bf4f3?s=128&d=identicon&r=PG", "display_name": "redfish64", "link": "https://stackoverflow.com/users/359606/redfish64"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 51376971, "answer_count": 1, "score": 2, "last_activity_date": 1531817296, "creation_date": 1531813849, "last_edit_date": 1531815591, "question_id": 51375989, "link": "https://stackoverflow.com/questions/51375989/how-to-reference-the-type-from-a-function-inside-a-sub-function", "title": "How to reference the type from a function inside a sub function", "body": "<p>Is it possible to reference the type from a function's definition within one of the sub-functions within it? (See comments in code below for more detail)</p>\n\n<pre><code>module TypesAndSubFunctions where\n\nclass DingBat k where\n\nfoo :: DingBat k =&gt; k -&gt; String\nfoo kv = \"foo\"\n  where\n    -- how can I define bar so that the type 'k2' is the same \n    -- as k from foo? Or is this not possible?\n    --\n    -- The following causes an error, because k2 isn't the same type\n    -- as foo's k. But I can't seem to find a way to reference foo's k\n    -- without specifying it as an arg (as I do in bar2). Is this just\n    -- the way haskell is?\n    --\n    -- I would think there should be a simple way to reference k from\n    -- foo with the type definition of bar, but I can't see how.\n    -- bar :: DingBat k2 =&gt; k2 -&gt; String\n    -- bar kv2 = ding2 kv kv2\n\n    -- To restate the problem, I would like the same functionality for\n    -- bar as bar2, below, but without having to specify the first arg\n    bar2 :: DingBat k =&gt; k -&gt; k -&gt; String\n    bar2 kv kv2 = ding2 kv kv2\n\nding2 :: DingBat k =&gt; k -&gt; k -&gt; String\nding2 = undefined\n</code></pre>\n"}, {"tags": ["haskell", "ghc", "ghci"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1531822703, "post_id": 51375628, "comment_id": 89729237, "body": "I guess one could catch the exception and do some non-detected loop, e.g. <code>let f () = f () in f ()</code> which is not detected by the black-holing mechanism. I don&#39;t know if there&#39;s an option to disable black-holing completely. Usually, it&#39;s a useful feature."}, {"owner": {"reputation": 750, "user_id": 2314232, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1b88202ee415becbf63caa0f7429e4b0?s=128&d=identicon&r=PG", "display_name": "Jesbus", "link": "https://stackoverflow.com/users/2314232/jesbus"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531822955, "post_id": 51375628, "comment_id": 89729406, "body": "@chi Thanks, I didn&#39;t know you could catch it."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1531823415, "post_id": 51375628, "comment_id": 89729712, "body": "Note that you can only catch it inside IO, e.g. in the <code>main</code> of your program, or at the GHCi prompt. Can you elaborate about why do you want to disable black-holing?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1531823549, "post_id": 51375628, "comment_id": 89729792, "body": "Frankly \u2013 if you find yourself wanting this you must be doing something wrong. Pure functional computation should never be used to affect the runtime behaviour, except of course through the actual values. (Or for benchmarking purposes.) If you want a infinite loop, why not use <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Monad.html#v:forever\" rel=\"nofollow noreferrer\"><code>forever</code></a>?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1531841989, "post_id": 51375628, "comment_id": 89742729, "body": "@leftaroundabout I&#39;m not so sure. e.g. especially in security-related applications, terminating too early when you should be looping could be an information leak."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1531842239, "post_id": 51375628, "comment_id": 89742912, "body": "@DanielWagner terminating should also be a <i>crash</i>, which would hopefully be fixed. You leak like 1 bit of information, before prompting an investigation into the matter. Whereas looping forever would bring the service (at least one thread) to a standstill, possibly leak memory until the whole machine hangs in swap, etc. etc.. It would leak information as well, but might go unnoticed whilst there are threads to hang up."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 7, "creation_date": 1531845539, "post_id": 51375628, "comment_id": 89744738, "body": "I&#39;m <i>really</i> interested as to why anyone would <i>ever</i> want this ... could you provide a use case for this behavior? The only one I can think of is how people tend to put <code>for (;;);</code> at the end of a C program so that the terminal sticks around long enough for them to read the output when they run it in Windows. If this is what you&#39;re doing, there are better ways to go about it, in Haskell and in C."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1531943858, "post_id": 51375628, "comment_id": 89791539, "body": "I, too, am very curious!  Tell us!!!!"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1532199648, "post_id": 51375628, "comment_id": 89887807, "body": "What happens if you compile with <code>-threaded</code> and run with <code>+RTS -N2 -RTS</code>? The threaded runtime generally handles blackholes differently (as greyholes) because some other thread could potentially be in the process of evaluating the thunk."}], "answers": [{"comments": [{"owner": {"reputation": 750, "user_id": 2314232, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1b88202ee415becbf63caa0f7429e4b0?s=128&d=identicon&r=PG", "display_name": "Jesbus", "link": "https://stackoverflow.com/users/2314232/jesbus"}, "edited": false, "score": 0, "creation_date": 1532617862, "post_id": 51449042, "comment_id": 90051922, "body": "Thank you for your comments!"}], "tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": false, "score": 2, "last_activity_date": 1532114160, "creation_date": 1532114160, "answer_id": 51449042, "question_id": 51375628, "link": "https://stackoverflow.com/questions/51375628/how-to-disable-the-loop-exception-when-compiling-haskell-with-ghc/51449042#51449042", "title": "How to disable the &lt;&lt;loop&gt;&gt; exception when compiling Haskell with GHC?", "body": "<p>This isn\u2019t really an answer but wouldn\u2019t fit in a comment. In this situation one should ask what infinite loop detection is and how it works. I\u2019m going to explain it by converting from Haskell to a Haskell-look-alike language with strict (non lazy) evaluation (think eg JavaScript with Haskell syntax) and then explaining it.</p>\n\n<p>Haskell:</p>\n\n<pre><code>let f () = f () in f ()\n</code></pre>\n\n<p>Convert to strict:</p>\n\n<pre><code>let f () = make_thunk (\\() -&gt; eval_thunk f ()) in eval_thunk (make_thunk (\\() -&gt; f ()))\n</code></pre>\n\n<p>Now let\u2019s do an optimisation:</p>\n\n<pre><code>let f () = eval_thunk f_unit\n    f_unit = make_thunk (\\() -&gt; f ())\nin\neval_thunk f_unit\n</code></pre>\n\n<p>Now let\u2019s write down a fake definition for thunks:</p>\n\n<pre><code>data ThunkInner a = Done a | Fresh (() -&gt; a) | Working\ndata Thunk a = Thunk { mutable inner :: ThunkInner a }\nmake_thunk f = Thunk (Fresh f)\neval_thunk t = case t.inner of\n  | Done a -&gt; a\n  | Fresh f -&gt; (t.inner &lt;- Working; let result = f () in t.inner &lt;- Done result; result)\n  | Working -&gt; error \"&lt;&lt;loop&gt;&gt;\"\n</code></pre>\n\n<p>So we see that we get an infinite loop when we try to evaluate something as part of working out its value. You can trace the above program by hand to see how this error could arise.</p>\n\n<p>But what if that optimisation hadn\u2019t been made? Well then (assuming you don\u2019t optimise to strictness) you would get a stack overflow and could report this as a <code>&lt;&lt;loop&gt;&gt;</code> error. If it were optimised to be truly strict then maybe you would get a stack overflow error or maybe you would get an infinite loop.</p>\n\n<p>One might ask how to avoid this error and the answer could be:</p>\n\n<ol>\n<li>Don\u2019t write infinite loops</li>\n<li>Maybe compile with no optimisations</li>\n</ol>\n\n<p>But you say that sometimes infinite loops are useful because eg event loops or long lived servers. The reply is that in Haskell infinite loops are not useful because to be useful you need <code>IO</code>. Consider a function <code>be_useful :: IO ()</code> and now one can write:</p>\n\n<pre><code>f = be_useful &gt;&gt;= \\() -&gt; f\n</code></pre>\n\n<p>And now there are two steps in doing <code>f</code>:</p>\n\n<ol>\n<li>Evaluating the thunk</li>\n<li>Doing the IO actions in that value</li>\n<li>Doing the next IO action (computing the thunk again) and so on.</li>\n</ol>\n\n<p>This need not <code>&lt;&lt;loop&gt;&gt;</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 3, "last_activity_date": 1532209169, "creation_date": 1532209169, "answer_id": 51460335, "question_id": 51375628, "link": "https://stackoverflow.com/questions/51375628/how-to-disable-the-loop-exception-when-compiling-haskell-with-ghc/51460335#51460335", "title": "How to disable the &lt;&lt;loop&gt;&gt; exception when compiling Haskell with GHC?", "body": "<p>Here's a horrible hack that might work.  You can create a fake info table for the non-termination exception that's created when a blackhole loop is detected and make it loop.</p>\n\n<p>Suppose you have a Haskell program:</p>\n\n<pre><code>-- Loop.hs\nfoo :: Int\nfoo = foo\nmain = print $ foo\n</code></pre>\n\n<p>If you compile this with:</p>\n\n<pre><code>$ ghc -O2 Loop.hs\n</code></pre>\n\n<p>and run it, it'll generate a <code>Loop: &lt;&lt;loop&gt;&gt;</code> error.</p>\n\n<p>But, if you create an assembly file:</p>\n\n<pre><code># halt_and_catch_fire.s\n# version for Linux x86_64 only\n.globl base_ControlziExceptionziBase_nonTermination_closure\n.section .data\n.align 8\nbase_ControlziExceptionziBase_nonTermination_closure:\n    .quad loop\n.section .text\n.align 8\n    .quad 0\n    .quad 14            # FUN_STATIC\nloop:   jmp loop\n</code></pre>\n\n<p>and compile it with your Haskell program (with appropriate linker flags to ignore the duplicate definition):</p>\n\n<pre><code>$ ghc -O2 Loop.hs halt_and_catch_fire.s -optl -zmuldefs\n</code></pre>\n\n<p>and run it, it'll lock up.</p>\n\n<p>Note that the above assembly works on x86_64 Linux.  On any other architecture (including 32-bit Linux), it would need to be modified, as the closure layout is very architecture-dependent.</p>\n"}], "owner": {"reputation": 750, "user_id": 2314232, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1b88202ee415becbf63caa0f7429e4b0?s=128&d=identicon&r=PG", "display_name": "Jesbus", "link": "https://stackoverflow.com/users/2314232/jesbus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 304, "favorite_count": 3, "accepted_answer_id": 51460335, "answer_count": 2, "score": 4, "last_activity_date": 1532209169, "creation_date": 1531812665, "last_edit_date": 1531822522, "question_id": 51375628, "link": "https://stackoverflow.com/questions/51375628/how-to-disable-the-loop-exception-when-compiling-haskell-with-ghc", "title": "How to disable the &lt;&lt;loop&gt;&gt; exception when compiling Haskell with GHC?", "body": "<p>If my program reaches an infinite loop, I would like it to actually get stuck: run forever, run out of memory or crash with a stack overflow.</p>\n\n<p>I don't want it to quit immediately with the <code>&lt;&lt;loop&gt;&gt;</code> error message. How do I disable the run-time infinite loop detection?</p>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531812855, "post_id": 51375627, "comment_id": 89722771, "body": "This is not reall a <code>fold</code> at all, since the number of folds is fixed. By writing it this way, you make it - in my opinion - very hard to interpret."}], "answers": [{"comments": [{"owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "edited": false, "score": 0, "creation_date": 1531845750, "post_id": 51375828, "comment_id": 89744842, "body": "But in theory isn&#39;t it possible to do this? For example, I could write a function that &quot;folded&quot; a value constructor over a list in a dynamic language. I&#39;d assume the same is possible in Haskell, it just requires more effort."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "edited": false, "score": 0, "creation_date": 1531850590, "post_id": 51375828, "comment_id": 89747306, "body": "@dopatraman: in case of a dynamic language the signature of the constructor should remain the same after every <i>iteration</i>."}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1531851860, "post_id": 51375828, "comment_id": 89747882, "body": "It is possible to write a polymorphic recursive function that calls itself with different types for the various parameters.  It&#39;s not what we call a fold, and it&#39;s not the simplest way to solve your problem."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 1, "last_activity_date": 1531813290, "creation_date": 1531813290, "answer_id": 51375828, "question_id": 51375627, "link": "https://stackoverflow.com/questions/51375627/fold-a-partially-applied-value-constructor-over-a-list/51375828#51375828", "title": "Fold a partially applied value constructor over a list?", "body": "<p>Well if I understand it correctly, you basically want to parse three arguments in a constructor. This is not really what a <code>foldr</code> or <code>foldl</code> is supposed to do. <code>foldr</code> basically is a <em>catamorphism</em> over a list. You replace the <code>(:)</code> with <code>f</code>, and the <code>[]</code> with the initial accumulator <code>x0</code>. But since the number of elements in a list is not known at compile time, the type of <code>f</code> always need to have the <em>same</em> type: <code>a -&gt; b -&gt; b</code> with <code>a</code> the type of elements in the list, and <code>b</code> the type of the output of the fold.</p>\n\n<p>If we however take a closer look to the code you provide, this does <em>not</em> look like a <code>fold</code> at all. You basically have a constructor with three elements, and aim to convert these into a <code>Message</code>. You can do so by interpreting the arguments separately:</p>\n\n<pre><code>parseMsg line = Message (<b>mtype</b> st) <b>code</b> <b>rest</b>\n    where (st : sc : sr) = words line\n          <b>mtype</b> \"D\" = Debug\n          <b>mtype</b> \"E\" = Error\n          <b>code</b> = read sc :: Int\n          <b>rest</b> = unwords sr</code></pre>\n\n<p>We thus <em>unpack</em> the <code>words</code> of the <code>line</code> into <code>st</code>, <code>sc</code>, and <code>sr</code>, and then process the first, second an remaining elements into parameters of the <code>Message</code> (with <code>mtype</code> a function that translates the string into the corresponding <code>MessageType</code>), it reads the second parameter as an <code>Int</code>, and finally generate the <code>rest</code> as <code>unwords sr</code>. These parameters are then used to construct a message.</p>\n"}], "owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 51375828, "answer_count": 1, "score": 1, "last_activity_date": 1603974660, "creation_date": 1531812663, "last_edit_date": 1603974660, "question_id": 51375627, "link": "https://stackoverflow.com/questions/51375627/fold-a-partially-applied-value-constructor-over-a-list", "title": "Fold a partially applied value constructor over a list?", "body": "<p>I have a type like this:</p>\n\n<pre><code>data MessageType = Debug | Error deriving (Show, Eq)\n\ntype Code = Int\n\ntype Info = String\n\ndata Message = Message MessageType Code Info\n</code></pre>\n\n<p>and a function that takes a string and returns a <code>Message</code>:</p>\n\n<pre><code>parseMsg :: String -&gt; Message\n</code></pre>\n\n<p>So far I've written a rough state machine:</p>\n\n<pre><code>parseMsg line = fold (words line) Message\n  where fold (\"D\":xs) msgCtr = fold' xs (msgCtr Debug)\n        fold (\"E\":xs) msgCtr = fold' xs (msgCtr Error)\n        fold' (code:xs) msgCtr = fold'' xs (msgCtr (readCode code))\n        fold'' rest msgCtr = msgCtr (unwords rest)\n        readCode code = read code::Int\n</code></pre>\n\n<p>But I'd rather do this in an actual <code>foldl</code> or <code>foldr</code>. </p>\n\n<pre><code>foldl (\\msgVConstructor el -&gt; msgVConstructor el) LogMessage (words line)\n</code></pre>\n\n<p>The idea is to fold a function <code>(Message -&gt; String -&gt; Message)</code> so that the accumulator, <code>Message</code> is partially applied across the words in the string. However, I get this error</p>\n\n<pre><code>Constructor \u2018Message\u2019 should have 3 arguments, but has been given none**strong text**\n</code></pre>\n\n<p>I'm taking this to mean that a value constructor can't be partially applied in a fold. Is there no way to do this?</p>\n"}, {"tags": ["haskell", "recursion", "lazy-evaluation", "bytestring"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1531840888, "post_id": 51374714, "comment_id": 89742005, "body": "How are you compiling and testing this?"}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1531843526, "post_id": 51374714, "comment_id": 89743669, "body": "Have a look at the github repo. I use the profiler."}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 2, "creation_date": 1531848645, "post_id": 51374714, "comment_id": 89746329, "body": "When I compile &amp; run this, I see <code>157,396,032 bytes maximum residency</code> which seems pretty reasonable for a million-byte array.  The profile shows that 78% of allocations are in <code>random</code>.  If you want to compare your 3 recursion patterns, it might help to use a less-expensive placeholder function."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1531856240, "post_id": 51374714, "comment_id": 89750017, "body": "So you are looking at the total allocation (as indicated by your &#39;grep&#39;) instead of the maximum residency?  Are you mistaking this for the maximum residency?"}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1531859562, "post_id": 51374714, "comment_id": 89751568, "body": "ok, total alloc may not be a good benchmark. But it&#39;s too high, anyway. I expect some kind of fusion happening, and much faster runtimes. I&#39;ll try with a different placeholder function."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1531859988, "post_id": 51374714, "comment_id": 89751764, "body": "What is the basis for your expectation?  You&#39;re generating 1 byte for every step of StdGen which consumes around 152 bytes each step for 1G allocated just for the RNG prior to optimizations (which are inhibited by profiling)."}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1531887869, "post_id": 51374714, "comment_id": 89758662, "body": "I swapped in a dumb old RNG, and I enforced some strictness, but that makes no difference. When you run this with 1G bytes, no profiler, you&#39;ll see that it will exhaust your RAM. In the end, this should use 32kB (chunk size, I believe) plus some overhead."}], "owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 115, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1531816550, "creation_date": 1531809434, "last_edit_date": 1531816550, "question_id": 51374714, "link": "https://stackoverflow.com/questions/51374714/efficient-lazy-bytestring-generation-using-random-bytestring-as-an-example", "title": "Efficient lazy ByteString generation, using random ByteString as an example", "body": "<p>There seems to be some impediment to efficient lazy <code>ByteString</code> generation by recursion. To demonstrate this, the chosen task is to make a lazy random <code>ByteString</code>. (Random number generation is just a reasonably meaningful operation, i.e. a placeholder for any other recursion that might be of interest.)</p>\n\n<p>Here are two attempts to create a random lazy <code>ByteString</code> of fixed length <code>n</code>. They allocate huge amounts of heap. First some imports:</p>\n\n<pre><code>import qualified Data.ByteString.Lazy as BSL\nimport Data.Word8\nimport System.Random\n</code></pre>\n\n<p>Now the function that uses <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Lazy.html#v:cons\" rel=\"nofollow noreferrer\"><code>cons</code></a>:</p>\n\n<pre><code>lazyRandomByteString1 :: Int -&gt; StdGen -&gt; BSL.ByteString\nlazyRandomByteString1 n g = fst3 $ iter (BSL.empty, n, g) where\n    fst3 (a, _, _) = a\n    iter (bs', n', g') =\n        if n' == 0 then (bs', 0, g')\n        else iter (w `BSL.cons` bs', n'-1, g'') where\n            (w, g'') = random g' :: (Word8, StdGen)\n</code></pre>\n\n<p>The same, just using <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Lazy.html#v:unfoldr\" rel=\"nofollow noreferrer\"><code>unfoldr</code></a> is shorter, but almost as bad as the above:</p>\n\n<pre><code>lazyRandomByteString2 :: Int -&gt; StdGen -&gt; BSL.ByteString\nlazyRandomByteString2 n g = BSL.unfoldr f (n, g) where\n    f :: (Int, StdGen) -&gt; (Int, StdGen)\n    f (n', g') =\n        if n' == 0 then Nothing\n        else Just (w, (n'-1, g'')) where\n            (w, g'') = random g' :: (Word8, StdGen)\n</code></pre>\n\n<p>Within what's provided by <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Lazy.html#v:cons\" rel=\"nofollow noreferrer\"><code>Data.ByteString.Lazy</code></a> these are all the available options to create <code>ByteStrings</code> by recursion.</p>\n\n<p>Next, turn to <a href=\"https://hackage.haskell.org/package/bytestring-0.10.0.2/docs/Data-ByteString-Lazy-Builder.html#t:Builder\" rel=\"nofollow noreferrer\"><code>Data.ByteString.Lazy.Builder</code></a>, it was built to build lazy <code>ByteStrings</code>, surely this must be more efficient:</p>\n\n<pre><code>import Data.ByteString.Lazy.Builder (Builder, toLazyByteString, word8)\n\nlazyRandomByteString3 :: Int -&gt; StdGen -&gt; BSL.ByteString\nlazyRandomByteString3 n g = toLazyByteString builder where\n    builder :: Builder\n    builder = fst3 $ iter (mempty, n, g) where\n        fst3 (a, _, _) = a\n        iter :: (Builder, Int, StdGen) -&gt; (Builder, Int, StdGen)\n        iter (b, n', g') =\n            if n' == 0 then (b, 0, g')\n            else iter (b &lt;&gt; (word8 w), n'-1, g'') where\n                (w, g'') = random g' :: (Word8, StdGen)\n</code></pre>\n\n<p>But it isn't.</p>\n\n<p><code>Builder</code> really should be able to do this efficiently, shouldn't it? What is wrong with <code>lazyRandomByteString3</code>?</p>\n\n<p>The source code is on <a href=\"https://github.com/mcmayer/lazy-random-bytestring\" rel=\"nofollow noreferrer\">github</a>.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "edited": false, "score": 0, "creation_date": 1531814803, "post_id": 51374045, "comment_id": 89723983, "body": "If you want to access an element of a list, don&#39;t use a :, use a !! For example:  ([1..10] !! 2) == 3"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531832862, "post_id": 51374045, "comment_id": 89736138, "body": "Don&#39;t forget that some numbers are multiples of both 3 and 5. In some variants of FizzBuzz, handling that case is the main point of the exercise."}, {"owner": {"reputation": 7704, "user_id": 2968101, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/kUEZQ.jpg?s=128&g=1", "display_name": "mfrachet", "link": "https://stackoverflow.com/users/2968101/mfrachet"}, "edited": false, "score": 0, "creation_date": 1531846475, "post_id": 51374045, "comment_id": 89745234, "body": "Yeah, thank you :). Seems that guard is a good approach to resolve this. WYT ?"}], "answers": [{"tags": [], "owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "is_accepted": false, "score": 2, "last_activity_date": 1531808072, "creation_date": 1531808072, "answer_id": 51374373, "question_id": 51374045, "link": "https://stackoverflow.com/questions/51374045/learning-haskell-understanding-data-structures/51374373#51374373", "title": "Learning Haskell, understanding data structures", "body": "<p>The rule should be something like this:</p>\n\n<pre><code>data StringInt = SI_Str String\n               | SI_Int Int\n\nhandleRule:: Int -&gt; StringInt\nhandleRule x\n    | x `mod` 3 == 0 = SI_Str \"Fizz\"\n    | x `mod` 5 == 0 = SI_Str \"Buzz\"\n    | otherwise      = SI_Int x\n</code></pre>\n\n<p>When you describe a \"data\", you're actually describing a data type. The left sife of the equation is the name of the type and in this case the name of the type is StringInt. On the right side of the equation you describe the constructor (or constructor, as is in this case) how you can create the data type. In this case, we have 2 constructors the can create \"datas\" of type StringInt - the SI_Str constructor and the SI_Int constructor. How you distinguish between them and access their \"data contents\" is called pattern-matching.  Trying not to spoil the fun of learning though, I suggest starting carrying on from there.</p>\n"}, {"comments": [{"owner": {"reputation": 7704, "user_id": 2968101, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/kUEZQ.jpg?s=128&g=1", "display_name": "mfrachet", "link": "https://stackoverflow.com/users/2968101/mfrachet"}, "edited": false, "score": 0, "creation_date": 1531811826, "post_id": 51374494, "comment_id": 89722190, "body": "The idea is to use types and to try to understand them, I would prefer the first proposition and try to make it work :) . Thanks for your help"}, {"owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "reply_to_user": {"reputation": 7704, "user_id": 2968101, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/kUEZQ.jpg?s=128&g=1", "display_name": "mfrachet", "link": "https://stackoverflow.com/users/2968101/mfrachet"}, "edited": false, "score": 0, "creation_date": 1531813620, "post_id": 51374494, "comment_id": 89723267, "body": "Actually the parenthesis in <code>(Right &quot;Fuzz&quot;)</code> were crucial. And if you want to get nth element from list <code>!!</code> function should be used, not <code>:</code>. I updated my answer"}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 1, "last_activity_date": 1531813526, "last_edit_date": 1531813526, "creation_date": 1531808574, "answer_id": 51374494, "question_id": 51374045, "link": "https://stackoverflow.com/questions/51374045/learning-haskell-understanding-data-structures/51374494#51374494", "title": "Learning Haskell, understanding data structures", "body": "<p>I assume, that by the following line:</p>\n\n<pre><code>data StringInt a = Int a | String a\n</code></pre>\n\n<p>you're going to define a sum type. But actually, it requires data constructor provided:</p>\n\n<pre><code>data StringInt = Left Int | Right String\n</code></pre>\n\n<p>Or, there's already <code>Either</code> type, which helps to define a sum type, so you can just create a type alias. Thus, your program is going to look like this</p>\n\n<pre><code>type StringInt = Either Int String\n\nhandleRule:: Int -&gt; StringInt\nhandleRule x\n    | mod x 3 == 0 = Right \"Fizz\"\n    | mod x 5 == 0 = Right \"Buzz\"\n    | otherwise = Left x\n\nrun:: [Int] -&gt; [StringInt]\nrun = map handleRule\n</code></pre>\n\n<p>And the test should also be modified, since the return value is not just a string, but a string wrapped in <code>Right</code>:</p>\n\n<pre><code>module FizzBuzzSpec (spec) where\n\nimport Test.Hspec\nimport FizzBuzz\n\nspec::Spec\nspec = describe \"FizzBuzz#run\" $ do\n    it \"should have displayed Fizz for number 3\" $\n        run [1..10] !! 2 `shouldBe` (Right \"Fizz\")\n    it \"should have displayed Buzz for number 5\" $\n        run [1..10] !! 4 `shouldBe` (Right \"Buzz\")\n\nmain :: IO()\nmain = hspec spec\n</code></pre>\n\n<p>To run the tests:</p>\n\n<pre><code>runhaskell Tests.hs\n</code></pre>\n\n<p>By the way, you can skip the sum types for now, just by returning a string representation of a number if it can't be divided by <code>3</code> or <code>5</code>:</p>\n\n<pre><code>handleRule:: Int -&gt; String\nhandleRule x\n    | mod x 3 == 0 = \"Fizz\"\n    | mod x 5 == 0 = \"Buzz\"\n    | otherwise = show x\n\nrun:: [Int] -&gt; [String]\nrun = map handleRule\n</code></pre>\n"}], "owner": {"reputation": 7704, "user_id": 2968101, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/kUEZQ.jpg?s=128&g=1", "display_name": "mfrachet", "link": "https://stackoverflow.com/users/2968101/mfrachet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 51374494, "answer_count": 2, "score": 0, "last_activity_date": 1531813526, "creation_date": 1531806531, "last_edit_date": 1531811802, "question_id": 51374045, "link": "https://stackoverflow.com/questions/51374045/learning-haskell-understanding-data-structures", "title": "Learning Haskell, understanding data structures", "body": "<p>I m actually learning Haskell and I'm trying to make a simple FizzBuzz Kata.</p>\n\n<p>The idea is to take a list of numbers as entry, and to produce a list of Numbers | String following these rules:</p>\n\n<ul>\n<li>fizzBuzz:: [StringInt] -> [StringInt]</li>\n<li>every multiple of 3, the item in the list should be \"Fizz\"</li>\n<li>every multiple of 5, the item in the list should be \"Buzz\"</li>\n<li>otherwise it should be the number</li>\n</ul>\n\n<p>Here the code I've produced:</p>\n\n<pre><code>module FizzBuzz where \n\ndata StringInt a = Int a | String a\n\nhandleRule:: StringInt a -&gt; a\nhandleRule x\n    | x % 3 == 0 = StringInt \"Fizz\"\n    | x % 5 == 0 = StringInt \"Buzz\"\n    | otherwise = x\n\nrun:: [StringInt a] -&gt; [a]\nrun = map handleRule\n</code></pre>\n\n<p>While trying to run the following tests:</p>\n\n<pre><code>module FizzBuzzSpec (spec) where\n\n    import Test.Hspec\n    import FizzBuzz\n\n    spec :: Spec\n    spec = describe \"FizzBuzz#run\" $ do\n        it \"should have displayed Fizz for number 3\" $\n            run [1..10]:2 `shouldBe` \"Fizz\"\n        it \"should have displayed Buzz for number 5\" $\n            run [1..10]:4 `shouldBe` \"Buzz\"\n</code></pre>\n\n<p>I'm having the following outputs:</p>\n\n<pre><code>\u2022 Occurs check: cannot construct the infinite type: a ~ StringInt a\n\u2022 In the expression: x\n  In an equation for \u2018handleRule\u2019:\n      handleRule x\n        | (%) x 3 == 0 = StringInt \"Fizz\"\n        | (%) x 5 == 0 = StringInt \"Buzz\"\n        | otherwise = x\n\u2022 Relevant bindings include\n    x :: StringInt a (bound at src/FizzBuzz.hs:6:12)\n    handleRule :: StringInt a -&gt; a (bound at src/FizzBuzz.hs:6:1)\n</code></pre>\n\n<p>|\n9 |         | otherwise = x</p>\n\n<p><em>Important Note: I'm really a new Haskell player, sorry if I'm making horrible things right there.</em></p>\n\n<p>Do you have an idea what I'm doing wrong ?</p>\n\n<hr>\n\n<p>EDIT:</p>\n\n<p>I've tried by using:</p>\n\n<pre><code>module FizzBuzz where \n\ntype StringInt = Either Int String\n\nhandleRule:: Int -&gt; StringInt\nhandleRule x\n    | x `mod` 3 == 0 = Right \"Fizz\"\n    | x `mod` 5 == 0 = Right \"Buzz\"\n    | otherwise      = Left x\n\nrun:: [Int] -&gt; [StringInt]\nrun = map handleRule\n</code></pre>\n\n<p>And </p>\n\n<pre><code>module FizzBuzzSpec (spec) where\n\n    import Test.Hspec\n    import FizzBuzz\n\n    spec::Spec\n    spec = describe \"FizzBuzz#run\" $ do\n        it \"should have displayed Fizz for number 3\" $\n            run [1..10]:2 `shouldBe` Right \"Fizz\"\n        it \"should have displayed Buzz for number 5\" $\n            run [1..10]:4 `shouldBe` Right \"Buzz\"\n</code></pre>\n\n<p>But that always throws</p>\n\n<pre><code>    \u2022 Couldn't match expected type \u2018[[StringInt]]\u2019\n                  with actual type \u2018Either a0 [Char]\u2019\n    \u2022 In the second argument of \u2018shouldBe\u2019, namely \u2018Right \"Fizz\"\u2019\n      In the second argument of \u2018($)\u2019, namely\n        \u2018run [1 .. 10] : 2 `shouldBe` Right \"Fizz\"\u2019\n      In a stmt of a 'do' block:\n        it \"should have displayed Fizz for number 3\"\n          $ run [1 .. 10] : 2 `shouldBe` Right \"Fizz\"\n  |\n9 |                         run [1..10]:2 `shouldBe` Right \"Fizz\"\n  |                                                  ^^^^^^^^^^^^\n\n/Users/pc/Soft/haskell/hello-stack/test/FizzBuzzSpec.hs:11:50: error:\n    \u2022 Couldn't match expected type \u2018[[StringInt]]\u2019\n                  with actual type \u2018Either a1 [Char]\u2019\n    \u2022 In the second argument of \u2018shouldBe\u2019, namely \u2018Right \"Buzz\"\u2019\n      In the second argument of \u2018($)\u2019, namely\n        \u2018run [1 .. 10] : 4 `shouldBe` Right \"Buzz\"\u2019\n      In a stmt of a 'do' block:\n        it \"should have displayed Buzz for number 5\"\n          $ run [1 .. 10] : 4 `shouldBe` Right \"Buzz\"\n   |\n11 |                         run [1..10]:4 `shouldBe` Right \"Buzz\"\n   |                              \n\n                ^^^^^^^^^^^^\n</code></pre>\n\n<p>Can't get the point out of here...</p>\n\n<p>Thanks for your help guys</p>\n"}, {"tags": ["haskell", "io", "translate"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 6, "creation_date": 1531790135, "post_id": 51371869, "comment_id": 89715810, "body": "The <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:interact\" rel=\"nofollow noreferrer\"><code>interact</code></a> function allows you to write <code>main</code> like this."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1531790260, "post_id": 51371869, "comment_id": 89715833, "body": "Related: <a href=\"//stackoverflow.com/q/17002119\">Haskell pre-monadic I/O</a>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1531800404, "post_id": 51371869, "comment_id": 89717870, "body": "Also: <a href=\"https://stackoverflow.com/questions/28139259/why-do-we-need-monads/\">Why do we need monads?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 5, "last_activity_date": 1531792027, "creation_date": 1531792027, "answer_id": 51372121, "question_id": 51371869, "link": "https://stackoverflow.com/questions/51371869/why-do-we-need-io/51372121#51372121", "title": "Why do we need IO?", "body": "<p>The point is that <code>String -&gt; String</code> is a rather poor model of what programs do in general.</p>\n\n<p>What if you're writing an http server that accepts concurrent pipelined requests and responds to each pipeline concurrently while also interleaving writes from a response in a pipeline along with reads for the next request? This is the level of concurrency that http servers work at.</p>\n\n<p>Maybe, just maybe, you can stuff that into a <code>String -&gt; String</code> program. You could multiplex the pipelines into your single channel. But what about timeouts? Web servers time out connections that trickle in, to prevent slow loris attacks. How are you even going to account for that? Maybe your input string has a sequence of timestamps added at regular intervals, regardless of other inputs? Oh, but what about the variant where the recipient only reads from their receive buffer in trickles? How can you even tell that you are blocked waiting for the send buffer to drain?</p>\n\n<p>If you pursue all the potential problems and stuff them into a <code>String -&gt; String</code> program, you eventually end up with almost all the interesting parts of the server existing outside your haskell program. After all, something has to do the multiplexing, has to do the error detection and reporting, has to do timeouts. If you're writing an http server in Haskell, it would be nice if it was actually written in Haskell.</p>\n\n<p>Of course, none of this means the <code>IO</code> type as it currently exists is the best possible answer. There are reasonable complaints that can be made about it. But it at least allows you to address all of those issues within Haskell. </p>\n"}, {"comments": [{"owner": {"reputation": 53, "user_id": 9065292, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd12740bdb0c873c31a362ec43a6fec9?s=128&d=identicon&r=PG&f=1", "display_name": "alexpbell", "link": "https://stackoverflow.com/users/9065292/alexpbell"}, "edited": false, "score": 0, "creation_date": 1531918357, "post_id": 51373176, "comment_id": 89775738, "body": "Thanks for answering the question. Prelude.interact looks.. handy for what I have in mind."}], "tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": true, "score": 0, "last_activity_date": 1531801213, "creation_date": 1531801213, "answer_id": 51373176, "question_id": 51371869, "link": "https://stackoverflow.com/questions/51371869/why-do-we-need-io/51373176#51373176", "title": "Why do we need IO?", "body": "<p>That wrapper exists.  It\u2019s called <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:interact\" rel=\"nofollow noreferrer\"><code>Prelude.interact</code></a>.  I use the <code>Data.ByteString</code> versions of it often.  The wrapper to a pure <code>String -&gt; String</code> function works, because strings are lazily-evaluated singly-linked lists that can process each line of input as it\u2019s read in, but singly-linked lists of UCS-4 characters are a very inefficient data structure.</p>\n\n<p>You still need to use <code>IO</code> for the wrapper because the operations depend on the state of the universe and need to be sequenced with the outside world.  In particular, if your program is interactive, you want it to respond to a new keyboard command immediately, and run all the OS system calls in sequence, not (say) process all the input and display all the output at once when it\u2019s ready to quit the program.</p>\n"}, {"tags": [], "owner": {"reputation": 243, "user_id": 13679816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b02acae66c6a347786eb93e8cbead85?s=128&d=identicon&r=PG", "display_name": "atravers", "link": "https://stackoverflow.com/users/13679816/atravers"}, "is_accepted": false, "score": 0, "last_activity_date": 1619131454, "last_edit_date": 1619131454, "creation_date": 1614183919, "answer_id": 66354838, "question_id": 51371869, "link": "https://stackoverflow.com/questions/51371869/why-do-we-need-io/66354838#66354838", "title": "Why do we need IO?", "body": "<blockquote>\n<p>Why do we need the <code>IO</code> type?</p>\n</blockquote>\n<p>Because the chicken wanted to build an email server!</p>\n<p>...oh, sorry; I thought this was a riddle (<em>ahem</em>).</p>\n<p>From the <a href=\"https://www.haskell.org/definition/haskell2010.pdf\" rel=\"nofollow noreferrer\">Haskell 2010 Report</a>, on page 15 of 329:</p>\n<blockquote>\n<p>[...] It was decided that a committee should be formed to design such a language, providing faster communication of new ideas, a stable foundation <strong>for real applications development</strong> and [...]</p>\n<h2>Goals</h2>\n<p>The committee's primary goal was to design a language that satisfied these constraints:</p>\n<ol>\n<li>It should be suitable for teaching, research, <strong>and applications, including building large systems</strong>.</li>\n</ol>\n<p>[...]</p>\n</blockquote>\n<p>(emphasis by me)</p>\n<p>Your question is ironic: early versions of Haskell didn't provide <code>IO</code>. If you needed I/O, you had two choices - dialogues or continuations (well, the continuations were implemented with dialogues - either way, you were using dialogues).</p>\n<hr />\n<blockquote>\n<p>If the input string is some mathematical expression concatenated with data, and the output string is (non-Haskell) code, then you can <em>Get Things Done</em>.</p>\n</blockquote>\n<p>Because you can't get things done with <code>IO</code>? Hmm...</p>\n<blockquote>\n<p>[...] can we avoid the <code>IO a</code> type?</p>\n</blockquote>\n<p>This question is also tinged with irony, as the <a href=\"https://www.haskell.org/definition/haskell2010.pdf\" rel=\"nofollow noreferrer\">Report</a> refrains from providing an actual definition for <code>IO</code> - from page 75:</p>\n<blockquote>\n<p>The <code>IO</code> type serves as a tag for operations (actions) that interact with the outside world. <strong>The <code>IO</code> type is abstract</strong>: no constructors are visible to the user. <code>IO</code> is an instance of the <code>Monad</code> and <code>Functor</code> classes.</p>\n</blockquote>\n<p>(emphasis by me, again)</p>\n<p>Instead of trying to avoid <code>IO</code>, let's try to define it. Since it appears (well, from this side of the Internet) that you're more than a bit curious about:</p>\n<blockquote>\n<pre><code>main :: String -&gt; String\n</code></pre>\n</blockquote>\n<p>what about something like:</p>\n<pre><code>type IO a = OI -&gt; a\n</code></pre>\n<p>so instead of e.g:</p>\n<pre><code>interact :: (String -&gt; String) -&gt; IO ()\n</code></pre>\n<p>you would have:</p>\n<pre><code>interact :: (String -&gt; String) -&gt; OI -&gt; ()\n</code></pre>\n<p>If you're interested, these answers by me have more information:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/63315104/13679816\">https://stackoverflow.com/a/63315104/13679816</a></li>\n<li><a href=\"https://stackoverflow.com/a/64365219/13679816\">https://stackoverflow.com/a/64365219/13679816</a> (...part 2.)</li>\n</ul>\n"}], "owner": {"reputation": 53, "user_id": 9065292, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd12740bdb0c873c31a362ec43a6fec9?s=128&d=identicon&r=PG&f=1", "display_name": "alexpbell", "link": "https://stackoverflow.com/users/9065292/alexpbell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 0, "accepted_answer_id": 51373176, "answer_count": 3, "score": 0, "last_activity_date": 1619131454, "creation_date": 1531789632, "last_edit_date": 1605104144, "question_id": 51371869, "link": "https://stackoverflow.com/questions/51371869/why-do-we-need-io", "title": "Why do we need IO?", "body": "<p>In <a href=\"https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.13.9123&amp;rep=rep1&amp;type=pdf\" rel=\"nofollow noreferrer\">Tackling the Awkward Squad: monadic input/output, concurrency, exceptions, and foreign-language calls in Haskell</a>, SPJ states:</p>\n<blockquote>\n<p>For example, perhaps the functional program could be a function mapping an input character string to an output string:</p>\n<pre><code>main :: String -&gt; String\n</code></pre>\n<p>Now a &quot;wrapper&quot; program, written in (gasp!) C, can get an input string from somewhere [...] apply the function to it, and store the result somewhere [...]</p>\n</blockquote>\n<p>He then goes on to say that this locates the &quot;sinfulness&quot; in the wrapper, and that the trouble with this approach is that one sin leads to another (e.g. more than one input, deleting files, opening sockets etc).</p>\n<p>This seems odd to me. I would have thought Haskell would be most powerful, and possibly even most useful, when approached exactly in this fashion. That is, the input is a character string located in a file, and output is a new character string in a new file. If the input string is some mathematical expression concatenated with data, and the output string is (non-Haskell) code, then you can Get Things Done. In other words, why not always treat Haskell programs as translators? (Or as a compiler, but as a translator you can blend genuine I/O into the final executable.)</p>\n<p>Regardless of the wisdom of this as a general strategy (I appreciate that some things we might want to get done may not start out as mathematics), my real question is: if this is indeed the approach, can we avoid the <code>IO a</code> type? Do we need a wrapper in some other language? Does anyone actually do this?</p>\n"}, {"tags": ["haskell", "types"], "answers": [{"comments": [{"owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "edited": false, "score": 0, "creation_date": 1531781079, "post_id": 51370482, "comment_id": 89714184, "body": "Thanks! With your help I <a href=\"https://github.com/JeffreyBenjaminBrown/vivid/blob/f5db4fdc7aa13a956adc734bf6ecd2a895cab373/learning/riddles/gadt-forget/close-to-vivid.hs\" rel=\"nofollow noreferrer\">got it working</a>. I made the class actually need to know about the <code>format</code> parameter, and I used ScopedTypeVariables. I didn&#39;t turn out to need TypeApplications (and indeed couldn&#39;t get it to work)."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1531777751, "last_edit_date": 1531777751, "creation_date": 1531777354, "answer_id": 51370482, "question_id": 51370183, "link": "https://stackoverflow.com/questions/51370183/when-i-specify-x-has-type-a-why-does-haskell-try-to-infer-it-has-type-a0/51370482#51370482", "title": "When I specify x has type a, why does Haskell try to infer it has type a0?", "body": "<p>When type checking code involving polymorphic bindings, the type inference engine creates fresh type variables for each use of the binding. </p>\n\n<p>Here's a concrete example:</p>\n\n<pre><code>show () ++ show True\n</code></pre>\n\n<p>Now, we know that <code>show :: Show a =&gt; a -&gt; String</code>. Above the first call to <code>show</code> chooses <code>a ~ ()</code>, the second one chooses <code>a ~ Bool</code>. Wait! That looks as a contradiction since <code>()</code> and <code>Bool</code> are distinct types, so they can not be both equal to <code>a</code>. Is that it?</p>\n\n<p>Nah, it is not a contradiction... it looks clear that each call of <code>show</code> can make its choice of <code>a</code> independently. During type inference this is done, roughly, as follows.</p>\n\n<p>For each call we generate a fresh type variable, by renaming universally quantified type variables in the polymorphic type at hand</p>\n\n<pre><code>-- for the first call\nshow :: Show a0 =&gt; a0 -&gt; String\n-- for the second call\nshow :: Show a1 =&gt; a1 -&gt; String\n</code></pre>\n\n<p>Then, we simply pick <code>a0 ~ ()</code> and <code>a1 ~ Bool</code> and we are done. The user never realized that this was going on under the hood.</p>\n\n<p>In case there is a type error, however, the freshly generated variables can be reported to the user, revealing a piece of the underlying inference algorithm. For instance</p>\n\n<pre><code>show []\n</code></pre>\n\n<p>Here, two polymorphic values are used, so we generate fresh variables for both.</p>\n\n<pre><code>[] :: [a0]\nshow :: Show a1 =&gt; a1 -&gt; String\n</code></pre>\n\n<p>To typecheck, we need <code>a1 ~ [a0]</code>, so we end up with (after some context reduction, which does not matter now):</p>\n\n<pre><code>[] :: [a0]\nshow :: Show a0 =&gt; [a0] -&gt; String\n</code></pre>\n\n<p>Good, we no longer have <code>a1</code> around. But what about <code>a0</code>? We do not have found any specific value for <code>a0</code>. Indeed, we can not do that, since the code does not contain anything to force that choice: <code>a0</code> remains an ambiguous type at the end.</p>\n\n<p>This happens because <code>[]</code> can create a list of any type, while <code>show</code> can take a list of any type as input (as long as its element type is showable). But these constraints do not tell us what the type should be!</p>\n\n<p>Concluding, the code is ambiguous, so we have to fix it by telling GHC what type we choose. Any of these would be fine</p>\n\n<pre><code>show ([] :: [Int])   -- choose a0 ~ Int\nshow ([] :: [Bool])  -- choose a0 ~ Bool\nshow ([] :: [Char])  -- choose a0 ~ Char\n</code></pre>\n\n<p>In your code</p>\n\n<pre><code>play :: Message format m =&gt; Synth format -&gt; m -&gt; IO ()\nplay (Synth name) msg =\n  print $ name ++ \" now sounds like \" ++ theMessage msg\n</code></pre>\n\n<p>there is nothing which forces <code>theMessage msg</code> to use the same <code>format</code> which appears in the type of <code>play</code>. It is perhaps \"obvious\" to you that it should be, but it is not the only possible choice.</p>\n\n<p>Choosing the same <code>format</code> is tricky here since your <code>class</code> has ambiguous types. This could still be used by turning on <code>TypeApplciations</code> and <code>AmbiguousTypes</code>, but something tells me that your design might be wrong, so I am a bit cautious here to suggest a solution. What you are trying to achieve? Why does the type of <code>the Message</code> not mention <code>format</code> in any way?</p>\n"}, {"comments": [{"owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "edited": false, "score": 0, "creation_date": 1531781213, "post_id": 51370528, "comment_id": 89714216, "body": "Thanks! With your help I <a href=\"https://github.com/JeffreyBenjaminBrown/vivid/blob/f5db4fdc7aa13a956adc734bf6ecd2a895cab373/learning/riddles/gadt-forget/close-to-vivid.hs\" rel=\"nofollow noreferrer\">got it working</a>. I made the class actually need to know about the <code>format</code> parameter, and I used ScopedTypeVariables. I didn&#39;t turn out to need TypeApplications (and indeed couldn&#39;t get it to work)."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 6, "last_activity_date": 1531778923, "last_edit_date": 1531778923, "creation_date": 1531777626, "answer_id": 51370528, "question_id": 51370183, "link": "https://stackoverflow.com/questions/51370183/when-i-specify-x-has-type-a-why-does-haskell-try-to-infer-it-has-type-a0/51370528#51370528", "title": "When I specify x has type a, why does Haskell try to infer it has type a0?", "body": "<p><code>Message</code> is a multi-parameter typeclass.  In order to determine which instance to use, there needs to be a concrete choice for <code>a</code> <em>and</em> for <code>format</code>.  However, the method</p>\n\n<pre><code>theMessage :: a -&gt; String\n</code></pre>\n\n<p>doesn't even mention <code>format</code>, so we have no way of figuring out which concrete type to use to find an instance of <code>Message</code>.  The ambiguous type error you presumably got was about this (but that can be a tricky error message, I don't blame you for just enabling the extension).</p>\n\n<p>The quick fix is to manually specify the <code>format</code> variable using <code>ScopedTypeVariables</code> and <code>TypeApplications</code> (or adding a <code>Proxy format</code> argument to <code>theMessage</code>).</p>\n\n<pre><code>play :: forall format m. Message format m =&gt; Synth format -&gt; m -&gt; IO ()\nplay (Synth name) msg =\n    print $ name ++ \" now sounds like \" ++ theMessage @format msg\n</code></pre>\n\n<p>However, the <code>Message</code> class raises a red flag as a misuse of typeclasses.  It's not always bad, but whenever you see a class whose methods all have types like</p>\n\n<pre><code>:: a -&gt; Foo\n:: a -&gt; Bar\n</code></pre>\n\n<p>i.e. they take a single <code>a</code> in contravariant position, it's likely that you don't need a typeclass at all.  It's often cleaner to transform the class into a data type, like so:</p>\n\n<pre><code>data Message format = Message { theMessage :: String }\n</code></pre>\n\n<p>wherein each method becomes a record field.  Then concrete types that you instantiated, such as your <code>MessageA</code>, get \"demoted\" to functions:</p>\n\n<pre><code>messageA :: String -&gt; Message format\nmessageA msg = Message { theMessage = msg }\n</code></pre>\n\n<p>Whenever you would have passed an <code>a</code> with a <code>Message</code> constraint, just pass a <code>Message</code> instead.  <code>a</code> dissolves into nothingness.</p>\n\n<p>After you do this factoring you might be noticing that a lot of what you have written is sort of tautological and unnecessary.  Good!  Remove it!  </p>\n"}], "owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1531778923, "creation_date": 1531775570, "last_edit_date": 1531775992, "question_id": 51370183, "link": "https://stackoverflow.com/questions/51370183/when-i-specify-x-has-type-a-why-does-haskell-try-to-infer-it-has-type-a0", "title": "When I specify x has type a, why does Haskell try to infer it has type a0?", "body": "<p>Sometimes I'll specify something's type in a signature as, say, <code>a</code>, and GHC will respond that it can't deduce that its type is <code>a0</code>. Is there a single reason this happens, or a number of different possible reasons? Sometimes I solve it, sometimes not; I'm hoping for a unified theory.</p>\n\n<p>Here's a short example. (To see this code including comments explaining what it's trying to do, see <a href=\"https://github.com/JeffreyBenjaminBrown/vivid/blob/dac2d120395c1d96266e5d24632e324d8b335be9/learning/riddles/gadt-forget/closest-to-vivid.hs\" rel=\"nofollow noreferrer\">here</a>.)</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses\n           , AllowAmbiguousTypes\n           , FlexibleInstances\n           , GADTs #-}\n\ntype SynthName = String\n\ndata Synth format where\n  Synth :: SynthName -&gt; Synth format\n\ndata MessageA format where\n  MessageA :: String -&gt; MessageA format\ndata MessageB format where\n  MessageB :: String -&gt; MessageB format\n\nclass (Message format) a where\n  theMessage :: a -&gt; String\ninstance (Message format) (MessageA format) where\n  theMessage (MessageA msg) = msg\ninstance (Message format) (MessageB format) where\n  theMessage (MessageB msg) = msg\n\nplay :: Message format m =&gt; Synth format -&gt; m -&gt; IO ()\nplay (Synth name) msg =\n  print $ name ++ \" now sounds like \" ++ theMessage msg\n</code></pre>\n\n<p>That produces the following error.</p>\n\n<pre><code>riddles/gadt-forget/closest-to-vivid.hs:38:42: error:\n    \u2022 Could not deduce (Message format0 m)\n        arising from a use of \u2018theMessage\u2019\n      from the context: Message format m\n        bound by the type signature for:\n                   play :: forall format m.\n                           Message format m =&gt;\n                           Synth format -&gt; m -&gt; IO ()\n        at riddles/gadt-forget/closest-to-vivid.hs:36:1-54\n      The type variable \u2018format0\u2019 is ambiguous\n      Relevant bindings include\n        msg :: m (bound at riddles/gadt-forget/closest-to-vivid.hs:37:19)\n        play :: Synth format -&gt; m -&gt; IO ()\n          (bound at riddles/gadt-forget/closest-to-vivid.hs:37:1)\n      These potential instances exist:\n        instance Message format (MessageA format)\n          -- Defined at riddles/gadt-forget/closest-to-vivid.hs:30:10\n        instance Message format (MessageB format)\n          -- Defined at riddles/gadt-forget/closest-to-vivid.hs:32:10\n    \u2022 In the second argument of \u2018(++)\u2019, namely \u2018theMessage msg\u2019\n      In the second argument of \u2018(++)\u2019, namely\n        \u2018\" now sounds like \" ++ theMessage msg\u2019\n      In the second argument of \u2018($)\u2019, namely\n        \u2018name ++ \" now sounds like \" ++ theMessage msg\u2019\n   |\n38 |   print $ name ++ \" now sounds like \" ++ theMessage msg\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1531774943, "post_id": 51370040, "comment_id": 89712361, "body": "It is the <i>number of replicates</i> <code>n</code> that is restricted to <code>Ord</code>, not the elements to the list. And we <i>do</i> care about ordering, since we compare with <code>n &lt;= 0</code>."}, {"owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531775064, "post_id": 51370040, "comment_id": 89712406, "body": "Oh, I thought <code>n&lt;=0</code> is using <code>Eq</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531775118, "post_id": 51370040, "comment_id": 89712432, "body": "No <code>Eq</code> only offers to check equality <code>==</code> and unequality <code>&#47;=</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1531775378, "creation_date": 1531775378, "answer_id": 51370147, "question_id": 51370040, "link": "https://stackoverflow.com/questions/51370040/why-do-we-constraint-the-input-to-ord-in-the-replicate-function/51370147#51370147", "title": "Why do we constraint the input to Ord in the replicate function?", "body": "<p>If we look at the code, we see:</p>\n\n<pre><code>replicate' :: (Num i, Ord i) =&gt; i -&gt; a -&gt; [a]  \nreplicate' n x  \n    | n <b>&lt;=</b> 0    = []  \n    | otherwise = x:replicate' (n-1) x</code></pre>\n\n<p>We thus check if <code>n</code> is less than or equal to <code>0</code>. We thus need an order relation for <code>n</code> since this defines when two elements of type <code>i</code> are ordered in such way that the former is less than or equal to the latter.</p>\n\n<p>This function is one offered by the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Ord\" rel=\"nofollow noreferrer\"><strong><code>Ord</code></strong> typeclass</a>:</p>\n\n<blockquote><pre><code>class Eq a =&gt; Ord a where\n    compare :: a -&gt; a -&gt; Ordering\n    (&lt;) :: a -&gt; a -&gt; Bool\n    <b>(&lt;=) :: a -&gt; a -&gt; Bool</b>\n    (&gt;) :: a -&gt; a -&gt; Bool\n    (&gt;=) :: a -&gt; a -&gt; Bool\n    max :: a -&gt; a -&gt; a\n    min :: a -&gt; a -&gt; a</code></pre></blockquote>\n\n<p>Implementing <code>compare</code> or <code>(&lt;=)</code> is however enough, since all other functions can be derived from implementing one of these two (in fact implementing one of the <code>(&lt;)</code>, <code>(&lt;=)</code>, <code>(&gt;)</code>, and <code>(&gt;=)</code> would in theory be sufficient, but here they opted to pick <code>(&lt;=)</code> as implementation to derive from.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 51370147, "answer_count": 1, "score": 0, "last_activity_date": 1531775378, "creation_date": 1531774867, "question_id": 51370040, "link": "https://stackoverflow.com/questions/51370040/why-do-we-constraint-the-input-to-ord-in-the-replicate-function", "title": "Why do we constraint the input to Ord in the replicate function?", "body": "<p>This is an example to rewrite the repeat function:</p>\n\n<pre><code>replicate' :: (Num i, Ord i) =&gt; i -&gt; a -&gt; [a]  \nreplicate' n x  \n    | n &lt;= 0    = []  \n    | otherwise = x:replicate' (n-1) x\n</code></pre>\n\n<p>We only need to know how many times we are going to repeat the input. Why do we constraint the repeat number to be Ord? We don't care about the ordering, isn't it?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 231, "user_id": 10060260, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6a263d7dfcf997df2aeae96112cd050?s=128&d=identicon&r=PG&f=1", "display_name": "Kevin Li", "link": "https://stackoverflow.com/users/10060260/kevin-li"}, "edited": false, "score": 2, "creation_date": 1531768543, "post_id": 51368687, "comment_id": 89709680, "body": "Please format your code in a more readable format. Also, the lines <code>let numone = getLine</code> <code>let numtwo = getLine</code> will not typecheck because: 1. <code>numone</code> and <code>numtwo</code> are already bound to variables, which are immutable in Haskell. 2. They have type <code>IO String</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1531768604, "post_id": 51368687, "comment_id": 89709704, "body": "Your <code>let</code>s will not get executed, you only <i>encapsulate</i> the <code>getLine</code> logic into a variable. But regardless, the mistake is that you write <i>imperative code</i> in Haskell syntax."}], "answers": [{"comments": [{"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531769173, "post_id": 51368788, "comment_id": 89709926, "body": "the thing is, this still only shows the type of &#39;numone&#39; or &#39;numtwo&#39; and not the values inputted by the getLine. also in this there are four inputs and not two which is what I am working with"}, {"owner": {"reputation": 403, "user_id": 3554119, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b79421d48f8e4e753ab9ec19b3a964b7?s=128&d=identicon&r=PG&f=1", "display_name": "dirkt", "link": "https://stackoverflow.com/users/3554119/dirkt"}, "reply_to_user": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 1, "creation_date": 1531769319, "post_id": 51368788, "comment_id": 89710002, "body": "If you want two inputs and not four, then use two inputs ... or phrased differently: What purpose should the <code>let</code> in your code serve? And if you want to have the values, don&#39;t use <code>typeof</code>, but <code>show numone</code> etc. It may help if you edit the question and clearly state <i>what you want the program to do</i>."}, {"owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "edited": false, "score": 0, "creation_date": 1531769532, "post_id": 51368788, "comment_id": 89710097, "body": "okay I will edit it and show exactly what the output should be"}], "tags": [], "owner": {"reputation": 403, "user_id": 3554119, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b79421d48f8e4e753ab9ec19b3a964b7?s=128&d=identicon&r=PG&f=1", "display_name": "dirkt", "link": "https://stackoverflow.com/users/3554119/dirkt"}, "is_accepted": false, "score": 3, "last_activity_date": 1531810868, "last_edit_date": 1531810868, "creation_date": 1531768896, "answer_id": 51368788, "question_id": 51368687, "link": "https://stackoverflow.com/questions/51368687/haskell-i-need-help-as-i-cant-seem-to-work-out-what-i-have-done-wrong-basic/51368788#51368788", "title": "Haskell, I need help as I can&#39;t seem to work out what I have done wrong. (Basic)", "body": "<p>If your code is exactly as shown in the question, then the first problem is indentation.</p>\n\n<p>Indentation matters in Haskell (like in Python), unless you use the <code>{ ... ; ... ; ... }</code> syntax.</p>\n\n<p>The second problem is that <code>getLine</code> is an action in the IO-monad, so you can't use <code>let</code>, but must use a monadic binding.</p>\n\n<p>Oh, and the second binding overrides the first. So while using the name a second time is not wrong, it's bad style.</p>\n\n<p>The third thing (it's not really a problem) is that the code as written will assign static types to <code>numone</code> and <code>numtwo</code> - it's not somehow like entering different values will change their type. <code>getLine</code> has type</p>\n\n<pre><code>getLine :: IO String\n</code></pre>\n\n<p>so you'll <em>always</em> see <code>[Char]</code> (aka <code>String</code>) as the type.</p>\n\n<p>The fourth problem is that you used <code>numone</code> twice in the first output, instead of <code>numone</code> and <code>numtwo</code>.</p>\n\n<p><strong>Edit</strong></p>\n\n<p>I completely removed the second input (the former <code>let</code>-statements) according to the comments.</p>\n\n<p>Here's the corrected program:</p>\n\n<pre><code>import Data.Typeable\n\nmain :: IO ()\nmain = do  \n  putStrLn \"Enter two statements.\"  \n  numone &lt;- getLine\n  numtwo &lt;- getLine\n  putStrLn $ (\"You entered \" ++ show numone ++ (show (typeOf numone)) ++ \" and \" ++ show numtwo ++ (show (typeOf numtwo)))\n  if numone == numtwo then \n    putStrLn $ \"They are the same and their types are \" ++ (show (typeOf numone)) ++ \" and \" ++ (show (typeOf numtwo))\n  else\n    putStrLn $ \"They are not the same\"\n  return ()\n</code></pre>\n\n<p>Example session fro <code>ghci</code>:</p>\n\n<pre><code>*Main&gt; main\nEnter two statements.\nA123\nB456\nYou entered \"A123\"[Char] and \"B456\"[Char]\nThey are not the same\n*Main&gt; main\nEnter two statements.\nA123\nA123\nYou entered \"A123\"[Char] and \"A123\"[Char]\nThey are the same and their types are [Char] and [Char]\n*Main&gt;\n</code></pre>\n\n<p>So that should do what you want.</p>\n\n<p>Let me emphasize again: You'll <em>always</em> get <code>[Char]</code> as the type, no matter what you do. You can't assign dynamic types based on input. And in general, the Haskell typesystem is static; while there are some advanced constructions like <code>Data.Typeable</code>, I wouldn't recommend them for beginners. Your mental image should be \"when I compile the program, the Haskell typechecker will assign a single static type to every subexpression\". You can actually ask the typechecker for those by using <code>:t</code> in the REPL:</p>\n\n<pre><code>*Main&gt; :t getLine\ngetLine :: IO String\n</code></pre>\n"}], "owner": {"reputation": 5, "user_id": 10090097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88952ef7d7c530953ec95f5859d95bcc?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan", "link": "https://stackoverflow.com/users/10090097/stefan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1531810868, "creation_date": 1531768473, "last_edit_date": 1531769856, "question_id": 51368687, "link": "https://stackoverflow.com/questions/51368687/haskell-i-need-help-as-i-cant-seem-to-work-out-what-i-have-done-wrong-basic", "title": "Haskell, I need help as I can&#39;t seem to work out what I have done wrong. (Basic)", "body": "<p>I'm new to Haskell and am trying to learn using things like learn you a Haskell. Can someone explain what is wrong with my code as I don't really know how to read error messages yet. All I can tell so far is that the let statements aren't correct but I need them to work somehow because without them the (show (typeOf numone/numtwo)) only shows the type of either 'numone' or 'numtwo' and not the inputted values from the getLine. </p>\n\n<p>What I am trying to do is compare the inputs and show the types of the inputs but this is as far I can go without some help.</p>\n\n<pre><code>import Data.Typeable\n\nmain = do  \n  putStrLn \"Enter two statements.\"  \n  numone &lt;- getLine\n  numtwo &lt;- getLine\n\nputStrLn $ (\"You entered \" ++ show numone ++ (show (typeOf numone)) ++ \" and \" ++ show numone ++ (show (typeOf numone)))\n\n  let numone = getLine\n  let numtwo = getLine\n\nif numone == numtwo\n\n  then  \n\n    putStrLn $ \"They are the same and their types are \" ++ (show (typeOf     numone)) ++ \" and \" ++ (show (typeOf numtwo))\n\n  else\nputStrLn $ \"They are not the same\"\n</code></pre>\n\n<p>Error message;</p>\n\n<pre><code>\u2022 No instance for (Eq (IO String)) arising from a use of \u2018==\u2019\n\u2022 In the expression: numone == numtwo\n  In a stmt of a 'do' block:\n    if numone == numtwo then\n        putStrLn\n          $ \"They are the same and their types are \"\n              ++ (show (typeOf numone)) ++ \" and \" ++ (show (typeOf numtwo))\n    else\n        putStrLn $ \"They are not the same\"\n  In the expression:\n    do putStrLn \"Enter two statements.\"\n       numone &lt;- getLine\n       numtwo &lt;- getLine\n       putStrLn\n         $ (\"You entered \"\n              ++\n                show numone\n                  ++\n                    (show (typeOf numone))\n                      ++ \" and \" ++ show numone ++ (show (typeOf numone)))\n       ....\n      |\n   10 |   if numone == numtwo\n      |      ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>The output should be something like (depending on the input of getLine); </p>\n\n<pre><code>&gt;    You entered A123[String] and B456[String]\n\n&gt;    They are the same and their types are [String] and [String]     \n     or \n     They are not the same\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1531773430, "post_id": 51367527, "comment_id": 89711723, "body": "This is a bit unhelpful, but: since <code>Reader</code>, <code>Writer</code>, and <code>State</code> are defined by a library (and not language primitives), you can always turn a program that uses them into one that doesn&#39;t with sufficient inlining. So there is nothing that <i>requires</i> them. But I think the question of whether it&#39;s reasonable (as opposed to possible) to write a program by hand from scratch without them is a more difficult and interesting one. I agree with the existing answer by Dietrich here: it is totally reasonable."}, {"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1531774002, "post_id": 51367527, "comment_id": 89711975, "body": "Thanks for clarifying. Yeah, just to see if it&#39;s reasonable to use only basic Monads like <code>IO</code>, <code>Maybe</code>, and <code>Either</code>, nothing fancy."}], "answers": [{"tags": [], "owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "is_accepted": true, "score": 7, "last_activity_date": 1531765132, "creation_date": 1531765132, "answer_id": 51367907, "question_id": 51367527, "link": "https://stackoverflow.com/questions/51367527/is-it-possible-to-build-a-restful-api-in-haskell-without-using-reader-writer-sta/51367907#51367907", "title": "Is it possible to build a Restful API in Haskell without using Reader/Writer/State Monad or Monad Transformer", "body": "<p>It is generally possible to write Haskell programs without dealing with monad transformers or various monads like Reader, Writer, and State. The one monad you cannot avoid is IO.</p>\n\n<p>For example, look at this sample code from the documentation for <a href=\"http://hackage.haskell.org/package/wai-3.2.1.2/docs/Network-Wai.html\" rel=\"noreferrer\">Warp</a>:</p>\n\n<pre><code>app :: Application\napp req respond = bracket_\n    (putStrLn \"Allocating scarce resource\")\n    (putStrLn \"Cleaning up\")\n    $ respond $ responseStream status200 [] $ \\write flush -&gt; do\n        write $ byteString \"Hello\\n\"\n        flush\n        write $ byteString \"World\\n\"\n</code></pre>\n\n<p>It's all just made out of function calls and the IO monad. You are free to write your code in this style too\u2026 and parts of it will look very similar to the same code you would write in some other language. Basically, you write a function that takes two arguments: one is the HTTP request, and the other argument is something you can use to write a response. This is just the same way that <a href=\"https://www.python.org/dev/peps/pep-0333/\" rel=\"noreferrer\">WSGI</a> works in Python, or <a href=\"https://golang.org/pkg/net/http/#Handler\" rel=\"noreferrer\">net.http</a> in Go.</p>\n\n<p>If at some point you decide that monad transformers are useful and will make your code simpler, you can always try that out later. But they are not necessary by any means.</p>\n"}], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 51367907, "answer_count": 1, "score": 1, "last_activity_date": 1531765132, "creation_date": 1531763474, "question_id": 51367527, "link": "https://stackoverflow.com/questions/51367527/is-it-possible-to-build-a-restful-api-in-haskell-without-using-reader-writer-sta", "title": "Is it possible to build a Restful API in Haskell without using Reader/Writer/State Monad or Monad Transformer", "body": "<p>As a beginner, I feel Reader/Write/State Monad is difficult to understand. And Monad Transformers is even more difficult. I don't see the usage of them in other languages, which makes me a bit hard to relate them to my existing web development experience. </p>\n\n<p>Is it possible to build a Restful API that talks to Postgres in beginner-friendly Haskell? Meaning without using this advanced stuff like Monads/Monad Transformers. </p>\n"}, {"tags": ["haskell", "parallel-processing"], "answers": [{"comments": [{"owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531820335, "post_id": 51366831, "comment_id": 89727537, "body": "Thanks, replacing <code>redeepseq</code> with <code>rpar</code> fixed it. However, the performance gain is still much less than I expected: 3.1 s with <code>-N1</code> and 1.9 s with <code>-N4</code>. About the sequential program, I don&#39;t see why the GC would use an extra 132% when there is nothing to collect."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1531825826, "post_id": 51366831, "comment_id": 89731208, "body": "I believe the GC threads are asleep untill GC can initiate, they are not stuck in a busy loop."}, {"owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531829735, "post_id": 51366831, "comment_id": 89733926, "body": "Thanks for the edit. I actually chose to run a small number of long computation so the program can achieve close to perfect scaling. For instance, <a href=\"https://gist.github.com/vxgmichel/75467f62673ad34a1567e5d66c6c3925\" rel=\"nofollow noreferrer\">this python code</a> has a scaling factor of 3.6 over 4 cores."}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "reply_to_user": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1531832619, "post_id": 51366831, "comment_id": 89735976, "body": "@RobertK they are in a busy loop while GC is in progress, but there is not enough work for all GC threads. See there: <a href=\"https://github.com/ghc/ghc/blob/a122d4fdd0a5858e44f9d3be90a258903e0288b2/rts/sm/GC.c#L1103\" rel=\"nofollow noreferrer\">github.com/ghc/ghc/blob/&hellip;</a>"}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1531834311, "post_id": 51366831, "comment_id": 89737233, "body": "Oh seems i was mistaken, thanks for the reference. @Yuras"}, {"owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531842864, "post_id": 51366831, "comment_id": 89743280, "body": "Thanks for you second edit, I got the 3x speedup you were talking about. Weirdly enough, <a href=\"https://i.stack.imgur.com/c56aw.png\" rel=\"nofollow noreferrer\">2 of the 4 cores are staying idle</a> during the first second."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1531877135, "post_id": 51366831, "comment_id": 89756380, "body": "<code>rdeepseq</code> is not buggy. That issue was actually caused by a buggy implementation of <code>rparWith</code> that allowed the optimizer to mess it up. It&#39;s fixed in the master branch. I don&#39;t know if there&#39;s been a release."}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": true, "score": 2, "last_activity_date": 1531835244, "last_edit_date": 1531835244, "creation_date": 1531760667, "answer_id": 51366831, "question_id": 51366501, "link": "https://stackoverflow.com/questions/51366501/performance-issue-with-parallel-computation-in-haskell/51366831#51366831", "title": "Performance issue with parallel computation in Haskell", "body": "<p>First of all, <code>rdeepseq</code> seems to be <a href=\"https://stackoverflow.com/questions/50553279/haskell-why-following-run-sequentially/50572154#50572154\">buggy</a>. Try to run <code>./seq +RTS -N4 -s</code>, and you'll see no sparks created. That is why you don't see any speedup on 4 cores. Use <code>rnf x \u2018pseq\u2018 return x</code> instead.</p>\n\n<p>Also note GC statictics in <code>+RTS -s</code> output. Actually GC takes most of the CPU. With <code>-N4</code> you have 4 parallel GC running, they take more time. That is why sequencial progral takes much more CPU on 4 cores. Basically you have 3 GC threads idle in spin lock waiting for synchronization. The do nothing useful, by eat CPU in a busy loop. Try to limit number of parallel GC threads using <code>-qn1</code> option.</p>\n\n<p>Regarding performance gain. You should not expect perfect scaling. Also I think you have 1 fizzled spark -- it is evaluated in parallel, but its result is not used.</p>\n\n<p>Added: Comparing with the python implementation you linked in the comments, I see that you are using completely different algorithm in haskell. More or less similar approach is the next (requires <code>BangPatterns</code>):</p>\n\n<pre><code>pow :: Int -&gt; Int -&gt; Int -&gt; Int\npow a b m = go 1 b\n  where\n  go !r 0 = r\n  go r b' = go ((r * a) `mod` m) (pred b')\n</code></pre>\n\n<p>Your ariginal algorithm uses stack to build the result, so it is bound by GC, not by actuall computation. So you don't see big speedup. With new one I see 3x speedup (I had to increase amount of work to see the speedup because the algorithm becomes too slow).</p>\n"}, {"comments": [{"owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531820389, "post_id": 51375108, "comment_id": 89727577, "body": "Thanks, replacing <code>redeepseq</code> with <code>rpar</code> fixed it. However, the performance gain is still much less than I expected: 3.1 s with <code>-N1</code> and 1.9 s with <code>-N4</code>. I&#39;ll edit my question to include relevant information."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "reply_to_user": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531824404, "post_id": 51375108, "comment_id": 89730308, "body": "Haskell is a lazy language. You are telling it &#39;evaluate this in parallel&#39;, and it only evaluates it as much as it needs to. It might return an expression which is not fully evaluated, leaving work for the &#39;main&#39; thread. <a href=\"https://stackoverflow.com/questions/6872898/haskell-what-is-weak-head-normal-form\" title=\"haskell what is weak head normal form\">stackoverflow.com/questions/6872898/&hellip;</a> You need to combine the rpar strategy with the <code>rdeepseq</code> one, such that haskell interprets it as &#39;in parallel, evaluate this to normal form&#39;. Consider this function when combining strategies: <a href=\"http://hackage.haskell.org/package/parallel-3.2.2.0/docs/Control-Parallel-Strategies.html#v:dot\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/parallel-3.2.2.0/docs/&hellip;</a>"}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "reply_to_user": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531824772, "post_id": 51375108, "comment_id": 89730550, "body": "Simon Marlow has an excellent book on parallel and concurrent functional programming <a href=\"https://web.archive.org/web/20171207155221/http://chimera.labs.oreilly.com:80/books/1230000000929/index.html\" rel=\"nofollow noreferrer\">web.archive.org/web/20171207155221/http://&hellip;</a> It explains all these behaviours very nicely. Once you get this to work okay you could look into granularity control, making sure the parallel tasks are big enough. If the task is small the work of creating the spark might dominate the entire work done. @Vincent"}, {"owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531827178, "post_id": 51375108, "comment_id": 89732176, "body": "Thanks for all this information! I used <code>rpar `dot` rdeepseq</code> as a strategy and added <code>force</code> (from <code>Control.DeepSeq</code>) before and after <code>parMap</code> to make sure haskell knows all those values need to be computed. However, I did not notice any improvement and the <a href=\"https://i.stack.imgur.com/2elsb.png\" rel=\"nofollow noreferrer\">threadscope graph</a> looks very similar."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "reply_to_user": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531827732, "post_id": 51375108, "comment_id": 89732553, "body": "I would suggest looking into granularity control, moving forward. If your list contains 10 000 elements and the computations are fairly trivial, you do not want to create 10 000 sparks. Perhaps you wish to spawn 1 000 sparks which each compute 100 sequential mappings? This requires some trial and error to find a nice granularity. Also, you can try turning off the garbace collector (by allocating a large amount of space for it), while trying out your parallel strategies. @Vincent"}, {"owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531843105, "post_id": 51375108, "comment_id": 89743436, "body": "Thanks again, I&#39;ll look into that. In python, the granularity is typically controlled through the <code>chunksize</code> argument of <a href=\"https://docs.python.org/3.7/library/multiprocessing.html#multiprocessing.pool.Pool.map\" rel=\"nofollow noreferrer\">Pool.map</a>, I&#39;m surprised that <code>Concurrent.Parallel.Strategies</code> doesn&#39;t provide the same kind of feature."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "reply_to_user": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1531890658, "post_id": 51375108, "comment_id": 89759388, "body": "@Vincent passing an integer defining the chunksize versus writing a wrapper for your function which controls the exact same thing is of little difference in difficulty. You can parallelise much more than just maps, and it makes no sense to define chunksizes for simply maps. It is up to you."}], "tags": [], "owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "is_accepted": false, "score": 1, "last_activity_date": 1531813001, "last_edit_date": 1531813001, "creation_date": 1531810884, "answer_id": 51375108, "question_id": 51366501, "link": "https://stackoverflow.com/questions/51366501/performance-issue-with-parallel-computation-in-haskell/51375108#51375108", "title": "Performance issue with parallel computation in Haskell", "body": "<p>I do not believe your parallel example is parallel. <code>parMap</code> accepts a strategy, and your strategy simply tells it to perform a deepseq. You need to combine this strategy with one that defines the parallel behaviour, e.g <code>rpar</code>. You are telling haskell 'perform this map, using this strategy', and right now your strategy does not define any parallel behaviour.</p>\n\n<p>Also make sure that you compile your program specifying the <code>-rtsopts</code> flag (I do not know if stack does this for you, but ghc requires it to enable runtime options).</p>\n"}], "owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 0, "accepted_answer_id": 51366831, "answer_count": 2, "score": 4, "last_activity_date": 1531842751, "creation_date": 1531759299, "last_edit_date": 1531842751, "question_id": 51366501, "link": "https://stackoverflow.com/questions/51366501/performance-issue-with-parallel-computation-in-haskell", "title": "Performance issue with parallel computation in Haskell", "body": "<p>I'm comparing the performance of two haskell programs running the same computation. </p>\n\n<p>The first one is sequential:</p>\n\n<pre><code>main :: IO()\nmain = putStr $ unlines . map (show . solve) $ [100..107]\n  where solve x = pow x (10^7) (982451653)\n</code></pre>\n\n<p>The second one uses <a href=\"https://hackage.haskell.org/package/parallel-3.2.2.0/docs/Control-Parallel-Strategies.html\" rel=\"nofollow noreferrer\">Control.Parallel.Strategies</a>:</p>\n\n<pre><code>import Control.Parallel.Strategies\n\nmain :: IO()\nmain = putStr $ unlines . parMap rdeepseq (show . solve) $ [100..107]\n  where solve x = pow x (10^7) (982451653)\n</code></pre>\n\n<p>In both cases, <code>pow</code> is the <a href=\"https://en.wikipedia.org/wiki/Modular_exponentiation\" rel=\"nofollow noreferrer\">modular exponentiation</a> naively implemented as:</p>\n\n<pre><code>pow :: Int -&gt; Int -&gt; Int -&gt; Int\npow a 0 m = 1\npow a b m = a * (pow a (b-1) m) `mod` m\n</code></pre>\n\n<p>The sequential program runs in about 3 seconds using, as expected, 100% CPU.</p>\n\n<pre><code>$ stack ghc seq.hs -- -O2\n$ \\time -f \"%e s - %P\" ./seq &gt; /dev/null\n2.96 s - 100%\n</code></pre>\n\n<p>The parallel program also runs in about 3 seconds using 100% CPU when limited to a single core.</p>\n\n<pre><code>$ stack ghc par.hs -- -O2 -threaded\n$ \\time -f \"%e s - %P\" ./par +RTS -N1 &gt; /dev/null\n3.14 s - 99%\n</code></pre>\n\n<p>But when I ran it on 4 cores, I did not observe the performance gain I was expected:</p>\n\n<pre><code>$ \\time -f \"%e s - %P\" ./par +RTS -N4 &gt; /dev/null\n3.31 s - 235%\n</code></pre>\n\n<p>Even more surprising, the sequential program uses more than 100% CPU when run on several cores:</p>\n\n<pre><code>$ stack ghc seq.hs -- -O2 -threaded\n$ \\time -f \"%e s - %P\" ./seq +RTS -N4 &gt; /dev/null\n3.26 s - 232%\n</code></pre>\n\n<p>How can those results be explained?</p>\n\n<hr>\n\n<p><strong>EDIT -</strong> As advised by @RobertK and @Yuras, I replaced the <code>rdeeseq</code> by <code>rpar</code> and it did fix the initial issue. However, the performance is still much less than what I expected:</p>\n\n<pre><code>$ stack ghc par.hs -- -O2 -threaded\n$ \\time -f \"%e s - %P\" ./par +RTS -N1 &gt; /dev/null\n3.12 s - 99%\n$ \\time -f \"%e s - %P\" ./par +RTS -N4 &gt; /dev/null\n1.91 s - 368%\n</code></pre>\n\n<p>The execution time is barely divided by two even though the 4 cores are running more than 90% of the time on average.</p>\n\n<p>Also, some parts of the threadscope graph look very sequential:\n<a href=\"https://i.stack.imgur.com/2elsb.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/2elsb.png\" alt=\"enter image description here\"></a></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1531761053, "post_id": 51366323, "comment_id": 89706132, "body": "If an error message needs to be printed, it&#39;s best to leave that up to the <i>caller</i> of <code>take&#39;</code>. The function should simply encode the possibility of an error in its return type; some examples would be <code>Int -&gt; [a] -&gt; Maybe [a]</code>, <code>Int -&gt; [a] -&gt; Either String [a]</code>, and <code>Int -&gt; [a] -&gt; Either TakeError [a]</code>, where <code>TakeError</code> is some custom type that enumerates the possible errors, rather than a fixed string <i>description</i> of the error."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1531822774, "post_id": 51366323, "comment_id": 89729289, "body": "@chepner I&#39;d say that only makes sense for <i>recoverable</i> errors. But if you wanted to say &quot;it is an error to use this function this way&quot; I don&#39;t think it makes a lot of sense to encode this in the type."}], "answers": [{"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 5, "last_activity_date": 1531759243, "creation_date": 1531759243, "answer_id": 51366491, "question_id": 51366323, "link": "https://stackoverflow.com/questions/51366323/questions-on-lyahs-implementation-of-take/51366491#51366491", "title": "questions on LYAH&#39;s implementation of take", "body": "<blockquote>\n  <p>In the function declaration why are we using the same letter i to declare (Num i, Ord i)? Does this not overwrite the fact that i is of type Num with i is of type Ord?</p>\n</blockquote>\n\n<p>This is not a type declaration, but a type <em>constraint</em>. This means \"<code>i</code> is some type that is both a number and orderable\" (you  can have numbers that aren't orderable and orderable things that aren't numbers).</p>\n\n<blockquote>\n  <p>| n > length _ = print \"n greater than length of list\"</p>\n</blockquote>\n\n<p>That doesn't work because <code>_</code> is a wildcard pattern - the list parameter is not actually bound to anything. Writing <code>_</code> in a pattern means \"I know there's something that's supposed to go there, but I don't care what it is\". If you want to use the list there you'll have to give it a name.</p>\n\n<p>(Hint: You don't need to calculate the length of the list - there's another case where you can check if the caller tried to take more elements out of the list than intended)</p>\n\n<p>(Hint 2: <code>print \"n greater than length of list\"</code> won't work there as it's of type <code>IO ()</code> rather than <code>[a]</code> - remember that the function still needs to return the right type! If you think some input is invalid and want to print an error message and terminate your program you can use the <code>error</code> function instead).</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1531759331, "creation_date": 1531759331, "answer_id": 51366510, "question_id": 51366323, "link": "https://stackoverflow.com/questions/51366323/questions-on-lyahs-implementation-of-take/51366510#51366510", "title": "questions on LYAH&#39;s implementation of take", "body": "<blockquote>\n  <ol>\n  <li>In the function declaration why are we using the same letter <code>i</code> to declare <code>(Num i, Ord i)</code>? Does this not overwrite the fact that <code>i</code> is of type <code>Num</code> with <code>i</code> is of type <code>Ord</code>?</li>\n  </ol>\n</blockquote>\n\n<p>First, let's point out the main misunderstanding. <code>Num</code> is not a type. <code>Ord</code> is not a type. Consequently, <code>i</code> can not have type <code>Num</code> or <code>Ord</code>.</p>\n\n<p>Instead, <code>i</code> stands for a generic, unknown type, to be determined when <code>take'</code> is called. At call-time, <code>i</code> could be <code>Int</code>, <code>Integer</code>, or <code>Float</code>, to mention a few. </p>\n\n<p>In principle, the caller can choose any type they want. However, the constraint <code>(Num i, Ord i)</code> means that the caller must choose a type <code>i</code> which satisfies <code>Num i</code> (i.e. it is a numeric type), and <code>Ord i</code> (i.e. it is also an ordered type). These two constraints complement each other: complex nubmers are numeric, but not ordered, the boolean type is ordered, but not numeric.</p>\n\n<p>So, there is no contradiction between these constraints.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 1, "last_activity_date": 1531759722, "creation_date": 1531759722, "answer_id": 51366614, "question_id": 51366323, "link": "https://stackoverflow.com/questions/51366323/questions-on-lyahs-implementation-of-take/51366614#51366614", "title": "questions on LYAH&#39;s implementation of take", "body": "<blockquote>\n  <p>In the function declaration why are we using the same letter <code>i</code> to declare <code>(Num i, Ord i)</code>? Does this not overwrite the fact that i is of type <code>Num</code> with <code>i</code> is of type <code>Ord</code>?</p>\n</blockquote>\n\n<p>This is a <em>type constraint</em>. It means that the type <code>i</code> needs to offer the functions defined by the <code>Num</code> (or <code>Ord</code>) typeclass. If you write multiple typeclasses with the same type (here <code>i</code>), it thus means that <code>i</code> needs to be an instance of all these typeclasses (and thus implement the functions that both typeclasses declare). For this specific example, it means that <code>i</code> must be a type such that <code>(&lt;=) :: Ord i =&gt; i -&gt; i -&gt; i</code> exists as well as a <code>(-) :: Num i =&gt; i -&gt; i -&gt; i</code>. If you would omit one of the two, then <code>n &lt;= 0</code> or <code>n-1</code> can no longer be evaluated, since it is no longer guaranteed that these functions exist.</p>\n\n<blockquote>\n  <p>I want to modify take' so that if n is larger than length of the list a message is printed out. I've tried to implement this by using the function length in the definition for take' but then the function fails to load.</p>\n</blockquote>\n\n<p>Well the idea of Haskell is that <code>print</code> has <code>IO ()</code>. If you write <code>print</code> you do <em>not</em> print. It basically means that you have <em>encapsulated</em> this <code>IO</code> action. You can thus pass that around, and for example use it in the <code>main</code> to actually print something. But nevertheless, it conflicts with the output type <code>[a]</code>. You can however for example use <code>trace</code> here as some sort of debugging to perform an <em>unsafe</em> <code>IO</code> action. For ecample:</p>\n\n<pre><code>import Debug.Trace\n\ntake' :: (Num i, Ord i) =&gt; i -&gt; [a] -&gt; [a]  \ntake' n _  \n    | n &lt;= 0   = []  \ntake' n [] | n &gt; 0 = trace \"n greater than length of list\" []\n           | otherwise = []  \ntake' n (x:xs) = x : take' (n-1) xs\n</code></pre>\n\n<p>But this is used for <em>debugging</em> purposes. The idea of Haskell is to have a declarative language. As a result you specify <em>what</em> you want to return, not much <em>how</em> you want that to happen, and which actions need to be taken.</p>\n"}], "owner": {"reputation": 346, "user_id": 5428609, "user_type": "registered", "accept_rate": 83, "profile_image": "https://graph.facebook.com/10153291007982901/picture?type=large", "display_name": "Luke Purnell", "link": "https://stackoverflow.com/users/5428609/luke-purnell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 51366491, "answer_count": 3, "score": 1, "last_activity_date": 1531759722, "creation_date": 1531758521, "question_id": 51366323, "link": "https://stackoverflow.com/questions/51366323/questions-on-lyahs-implementation-of-take", "title": "questions on LYAH&#39;s implementation of take", "body": "<p>I've been trying to learn haskell with the book Learn yourself a haskell. The book covers an implementation of <code>take</code> in the following way:</p>\n\n<pre><code>take' :: (Num i, Ord i) =&gt; i -&gt; [a] -&gt; [a]  \ntake' n _  \n    | n &lt;= 0   = []  \ntake' _ []     = []  \ntake' n (x:xs) = x : take' (n-1) xs  \n</code></pre>\n\n<p>I have two questions on this code:</p>\n\n<ol>\n<li><p>In the function declaration why are we using the same letter <code>i</code> to declare <code>(Num i, Ord i)</code>? Does this not overwrite the fact that <code>i</code> is of type <code>Num</code> with <code>i</code> is of type <code>Ord</code>?</p></li>\n<li><p>I want to modify <code>take'</code> so that if n is larger than length of the list a message is printed out. I've tried to implement this by using the function length in the definition for take' but then the function fails to load:</p>\n\n<p>take' n _</p>\n\n<pre><code>    | n &gt; length _ = print \"n greater than length of list\"\n</code></pre></li>\n</ol>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1531753667, "post_id": 51364903, "comment_id": 89702152, "body": "That is not a type definition. A type definition starts with <code>data</code>, or <code>newtype</code>, etc."}, {"owner": {"reputation": 57, "user_id": 6106438, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-YUiDiEAB8Sk/AAAAAAAAAAI/AAAAAAAAAAA/GgelQqYU71U/photo.jpg?sz=128", "display_name": "overseas", "link": "https://stackoverflow.com/users/6106438/overseas"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531754857, "post_id": 51364903, "comment_id": 89702866, "body": "Hi, I&#39;m not sure how type definitions are relevant here. Int is a type, and I would like to annotate it with a Kind. I took the line <code>Int :: *</code> straight from the Haskell wiki."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1531759405, "post_id": 51364903, "comment_id": 89705321, "body": "@overseas <code>Int</code> is not a value or declaration, so you cannot just write <code>Int :: *</code> in GHCi. You need to tell GHCi that you are writing a type, for instance by defining one via <code>data</code> or <code>newtype</code>, or using the <code>:k</code> command."}], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 6106438, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-YUiDiEAB8Sk/AAAAAAAAAAI/AAAAAAAAAAA/GgelQqYU71U/photo.jpg?sz=128", "display_name": "overseas", "link": "https://stackoverflow.com/users/6106438/overseas"}, "edited": false, "score": 0, "creation_date": 1531755192, "post_id": 51365096, "comment_id": 89703104, "body": "thanks! this is close to what I was looking for. Sorry to be obtuse, but why is &#39;Int&#39; interpreted as a value expression? I thought that Int was a type. Is it because (foo :: bar) is always interpreted by GHCi as (valueexpr :: sometype) by default?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 57, "user_id": 6106438, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-YUiDiEAB8Sk/AAAAAAAAAAI/AAAAAAAAAAA/GgelQqYU71U/photo.jpg?sz=128", "display_name": "overseas", "link": "https://stackoverflow.com/users/6106438/overseas"}, "edited": false, "score": 1, "creation_date": 1531756774, "post_id": 51365096, "comment_id": 89703976, "body": "@overseas Yes, it&#39;s for that reason. We could define <code>data T = Int deriving Show</code> and then ask GHCi <code>Int :: T</code>. Haskell was originally defined with two distinct namespaces for value constructors and types. Kind syntax as in <code>T :: *</code> was only added later, and in GHCi you need <code>:k</code>. In Haskell source files it can only appear in precise contexts e.g. type definitions <code>data A (f :: * -&gt; *) = A (f Bool)</code> where it is clear that the <code>::</code> is at kind level."}, {"owner": {"reputation": 57, "user_id": 6106438, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-YUiDiEAB8Sk/AAAAAAAAAAI/AAAAAAAAAAA/GgelQqYU71U/photo.jpg?sz=128", "display_name": "overseas", "link": "https://stackoverflow.com/users/6106438/overseas"}, "edited": false, "score": 0, "creation_date": 1531764152, "post_id": 51365096, "comment_id": 89707719, "body": "I didn&#39;t know it was possible to have the name of a data type&#39;s value constructor be the name of another data type (referring to <code>data T = Int</code>). This seems dangerous, since if I type <code>data R = R; data L = R; x = R</code> and query for the type of x, I get <code>x :: L</code> as result (so R has been shadowed by L?)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 57, "user_id": 6106438, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-YUiDiEAB8Sk/AAAAAAAAAAI/AAAAAAAAAAA/GgelQqYU71U/photo.jpg?sz=128", "display_name": "overseas", "link": "https://stackoverflow.com/users/6106438/overseas"}, "edited": false, "score": 1, "creation_date": 1531766191, "post_id": 51365096, "comment_id": 89708695, "body": "@overseas That is actually forbidden in the same module since <code>R</code> is used twice at the value level. In GHCi some &quot;magic&quot; is used to allow for that, pretending that each definition is, roughly, in a separate module. That&#39;s why in GHCi you can do <code>x = True</code> and then <code>x = False</code> and then <code>x = &quot;hello&quot;</code> which looks as a redefinition."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1531754234, "creation_date": 1531754234, "answer_id": 51365096, "question_id": 51364903, "link": "https://stackoverflow.com/questions/51364903/why-isnt-ghci-letting-me-annotate-my-types-with-kinds/51365096#51365096", "title": "Why isn&#39;t GHCi letting me annotate my types with kinds?", "body": "<p>To check kinds in GHCi, you might want to use the following</p>\n\n<pre><code>&gt; :set -XKindSignatures\n&gt; :k (Int :: *)\n(Int :: *) :: *\n</code></pre>\n\n<p>or omit the <code>:: *</code> part and let <code>:k</code> figure it out for you.</p>\n\n<p>Typing <code>Int :: *</code> directly would make GHCi interpret <code>Int</code> as a value expression, and look for a non existent value constructor <code>Int</code>. It would also interpret <code>*</code> as a type, instead of a kind, which causes an error.</p>\n"}], "owner": {"reputation": 57, "user_id": 6106438, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-YUiDiEAB8Sk/AAAAAAAAAAI/AAAAAAAAAAA/GgelQqYU71U/photo.jpg?sz=128", "display_name": "overseas", "link": "https://stackoverflow.com/users/6106438/overseas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 51365096, "answer_count": 1, "score": 2, "last_activity_date": 1531754234, "creation_date": 1531753589, "question_id": 51364903, "link": "https://stackoverflow.com/questions/51364903/why-isnt-ghci-letting-me-annotate-my-types-with-kinds", "title": "Why isn&#39;t GHCi letting me annotate my types with kinds?", "body": "<p>I found out about Kinds while reading a History of Haskell paper and tried to run some of the examples at <a href=\"https://wiki.haskell.org/Kind\" rel=\"nofollow noreferrer\">the Haskell Wiki</a>.</p>\n\n<p>When I do, I get the error</p>\n\n<pre><code>Prelude&gt; Int :: *                                                                                                 [3/1792]\n\n&lt;interactive&gt;:1:8: error:                                                                                                 \n    Not in scope: type constructor or class \u2018*\u2019                                                                           \n\n&lt;interactive&gt;:1:8: error:\n    Illegal operator \u2018*\u2019 in type \u2018*\u2019\n      Use TypeOperators to allow operators in types\n</code></pre>\n\n<p>I don't think 'importing' TypeOperators will help because I think GHCi believes * is the multiplication operator, when I want it to denote a Kind.</p>\n\n<p><a href=\"https://wiki.haskell.org/GHC/Kinds\" rel=\"nofollow noreferrer\">This wiki page</a> seems to suggest that Kinds may not have been added to my version of GHC yet. Could this be the case?</p>\n\n<p>I am using GHCi version 8.0.2 (from Ubuntu 18.04 package manager).</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1531931719, "post_id": 51364528, "comment_id": 89785168, "body": "You&#39;ve left an awful lot out. I know you consider some of this irrelevant, but it means (for example) that I can&#39;t actually try to compile your code, or add to it, because a bunch of it is missing. I can&#39;t even get a good sense of what your <code>Zipper</code> is really supposed to mean."}, {"owner": {"reputation": 185, "user_id": 6535784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6781478127f2117d594ae66d87e091ba?s=128&d=identicon&r=PG&f=1", "display_name": "T. Westerhout", "link": "https://stackoverflow.com/users/6535784/t-westerhout"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1531937078, "post_id": 51364528, "comment_id": 89788000, "body": "@dfeuer Good point. Would a <a href=\"https://github.com/pedromartins4/memo-AG/blob/develop-tom/src/Zipper.hs\" rel=\"nofollow noreferrer\">link to actual code</a> help? And by zipper I mean a <a href=\"https://en.wikipedia.org/wiki/Zipper_(data_structure)\" rel=\"nofollow noreferrer\">zipper data structure</a> originally described by Huet."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1531974113, "post_id": 51364528, "comment_id": 89799884, "body": "A link would help; a self-contained piece of code would be better. I&#39;m familiar with Huet&#39;s zippers, but it&#39;s not at all obvious how they relate to the zipper structure you&#39;re building here."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1532043240, "post_id": 51364528, "comment_id": 89836901, "body": "&quot;... except that I can&#39;t use <code>at</code> as a pattern and if I try to make it a pattern, GHC complains about a parse error in pattern...&quot;  Did you know that pattern synonyms are supposed to be Capitalized?"}, {"owner": {"reputation": 185, "user_id": 6535784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6781478127f2117d594ae66d87e091ba?s=128&d=identicon&r=PG&f=1", "display_name": "T. Westerhout", "link": "https://stackoverflow.com/users/6535784/t-westerhout"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1532073603, "post_id": 51364528, "comment_id": 89845477, "body": "@luqui Yes, I&#39;m aware of that. The occurs because of the call to <code>position</code>. Hence the question whether it&#39;s possible to somehow emulate such an &quot;invalid&quot; pattern synonym. Simply put, I want to pattern match on <code>C_Fork</code> and <code>C_Leaf</code> without using the words &quot;C_Fork&quot; or &quot;C_Leaf&quot; directly."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 1, "creation_date": 1532244936, "post_id": 51364528, "comment_id": 89894814, "body": "There&#39;s library called <code>first-class-patterns</code> which allows to treat patterns as values: <a href=\"https://hackage.haskell.org/package/first-class-patterns\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/first-class-patterns</a> You could try to explore, whether it&#39;s possible to achieve your goal with this library."}], "answers": [{"comments": [{"owner": {"reputation": 185, "user_id": 6535784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6781478127f2117d594ae66d87e091ba?s=128&d=identicon&r=PG&f=1", "display_name": "T. Westerhout", "link": "https://stackoverflow.com/users/6535784/t-westerhout"}, "edited": false, "score": 0, "creation_date": 1532073804, "post_id": 51430011, "comment_id": 89845581, "body": "@bergey, It allows to use functions on the &quot;wrong side&quot; of the pattern, i.e. if you have <code>x &lt;- y</code>, View Patterns extension lets you modify <code>y</code> using a nice syntax. I, however, would like to emulate a function call in <code>x</code>."}], "tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 0, "last_activity_date": 1532026623, "creation_date": 1532026623, "answer_id": 51430011, "question_id": 51364528, "link": "https://stackoverflow.com/questions/51364528/calling-a-function-within-a-pattern-synonym/51430011#51430011", "title": "Calling a function within a pattern synonym", "body": "<p>The <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#view-patterns\" rel=\"nofollow noreferrer\">View Patterns</a> language extension allows using functions in patterns.</p>\n"}, {"comments": [{"owner": {"reputation": 185, "user_id": 6535784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6781478127f2117d594ae66d87e091ba?s=128&d=identicon&r=PG&f=1", "display_name": "T. Westerhout", "link": "https://stackoverflow.com/users/6535784/t-westerhout"}, "edited": false, "score": 0, "creation_date": 1532513837, "post_id": 51449588, "comment_id": 90001206, "body": "I think this is the answer I was looking for, thanks. To answer your question, this is supposed to be a part of an EDSL and I did feel like <code>at @&quot;Leaf&quot;</code> was &quot;closer&quot; to the original user-defined constructor name. You&#39;re probably right though, I&#39;ll just stick to <code>C_</code> version then."}], "tags": [], "owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "is_accepted": true, "score": 1, "last_activity_date": 1532116847, "creation_date": 1532116847, "answer_id": 51449588, "question_id": 51364528, "link": "https://stackoverflow.com/questions/51364528/calling-a-function-within-a-pattern-synonym/51449588#51449588", "title": "Calling a function within a pattern synonym", "body": "<p>As far as I can tell, this isn't really possible. There's no way to return a pattern from a function for use in a match, and because of the way GADTs are refined (I think), it doesn't appear to be possible to do anything more complex than just a direct pattern match. For example, one of my failed attempts:</p>\n\n<pre><code>instance Eq (Position a) where\n  C_Leaf == C_Leaf = True\n  C_Fork == C_Fork = True\n  _ == _ = False\n\npattern At x = ((\\y -&gt; at x == y) -&gt; True)\n</code></pre>\n\n<p>This <em>should</em> allow you to write <code>case position hole of At @\"Leaf\" -&gt; ...</code>, but it doesn't typecheck, presumably because of the type refinement process. To clarify:</p>\n\n<pre><code>C_Leaf -&gt; ...                -- This works\n((== C_Leaf) -&gt; True) -&gt; ... -- This doesn't work\ny | y == C_Leaf -&gt; ...       -- This doesn't work\n</code></pre>\n\n<p>The error I get for the latter two is <code>Couldn't match expected type \u2018Tree\u2019 with actual type \u2018hole\u2019</code>. I don't actually know for sure why this happens, but my current theory is that the expression is too complex for the type refinement to \"take\" properly: as far as the compiler is concerned, there's no reason to expect <code>==</code> to always return <code>False</code> when <code>hole</code> is the wrong type (even though <em>we</em> know that never happens). So it's not allowed.</p>\n\n<hr>\n\n<p>I have to wonder, why do you believe using <code>at @\"Leaf\"</code> would be preferable to using <code>C_Leaf</code>? It's not as if you're really \"using the original constructor names\" in one version any more than in the other: they both use the original names, with some extra characters tacked on. I suppose in the former case you could allow passing in an arbitrary constructor symbol to match against, but that kind of thing appears to be disallowed in general, so you couldn't do that anyway. From what I can tell, you don't actually gain anything with the symbol approach.</p>\n\n<p>Honestly, if your <code>hole</code> type is going to be restricted to the constructors supported by <code>Position</code> anyway, I don't really see the point in making it existential to begin with. It would be much more simple to create a sum type of all the types the zipper might contain, and pass that as a type parameter. But I don't know your use case very well, so I might be wrong.</p>\n\n<hr>\n\n<p>If you really want to, I suppose you could probably use Template Haskell to do what you're going for. That would allow for something like:</p>\n\n<pre><code>$(at \"Leaf\") -&gt; ...\n</code></pre>\n\n<p>Assuming you wrote the appropriate TH function, this would just be converted to <code>C_Leaf -&gt; ...</code> at compile time, which would compile without issue.</p>\n"}], "owner": {"reputation": 185, "user_id": 6535784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6781478127f2117d594ae66d87e091ba?s=128&d=identicon&r=PG&f=1", "display_name": "T. Westerhout", "link": "https://stackoverflow.com/users/6535784/t-westerhout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 0, "accepted_answer_id": 51449588, "answer_count": 2, "score": 10, "last_activity_date": 1532116847, "creation_date": 1531752531, "question_id": 51364528, "link": "https://stackoverflow.com/questions/51364528/calling-a-function-within-a-pattern-synonym", "title": "Calling a function within a pattern synonym", "body": "<p>I'm implementing some functionality on top of a zipper where the hole type is existentially quantified, i.e. I have something like this:</p>\n\n<pre><code>data Zipper (c :: Type -&gt; Constraint) ... =\n  forall hole. (c hole, ...) =&gt;\n    Zipper hole ...\n</code></pre>\n\n<p>where dots denote implementation details which I think are unrelated to my question. Consider now some data type:</p>\n\n<pre><code>data Tree = Fork Tree Tree | Leaf Int\n</code></pre>\n\n<p>What I would like to have is an ability to inspect my position in the tree. In case of simple recursion the standard way to achieve this is pattern matching:</p>\n\n<pre><code>case hole of\n  Fork _ _ -&gt; doSomething\n  Leaf _   -&gt; doSomethingElse\n</code></pre>\n\n<p>However, the type of hole is existentially quantified, so simple pattern matching won't do. The idea I had is to use a type class</p>\n\n<pre><code>class WhereAmI p a where\n    position :: a -&gt; p a\n\ndata Position :: Type -&gt; Type where\n    C_Leaf :: Position Tree\n    C_Fork :: Position Tree\n    -- possibly more constructors if we're traversing\n    -- multiple data structures\n</code></pre>\n\n<p>Then I can do stuff like</p>\n\n<pre><code>f :: Zipper (WhereAmI Position) Tree -&gt; Int\nf (Zipper hole _) = case position hole of\n  C_Leaf -&gt; let (Leaf x) = hole in x\n  otherwise -&gt; ...\n</code></pre>\n\n<p>What I would like, however, is to replace <code>C_Leaf</code> with something like <code>at @\"Leaf\"</code> (i.e. use the original constructor names) using some magic like this</p>\n\n<pre><code>class WhereAmI' p (a :: Symbol) where\n  position' :: Proxy a -&gt; p\n\ninstance WhereAmI' (Position Tree) \"Leaf\" where\n  position' _ = C_Leaf\n\ninstance WhereAmI' (Position Tree) \"Fork\" where\n  position' _ = C_Fork\n\nat :: forall a p. WhereAmI' p a =&gt; p\nat = position (Proxy :: Proxy a)\n</code></pre>\n\n<p>This even works except that I can't use <code>at</code> as a pattern and I if I try to make it a pattern, GHC complains about a parse error in pattern...</p>\n\n<p>Is there some clever way to achieve what I'm trying to describe here?</p>\n"}, {"tags": ["parsing", "haskell", "compiler-construction", "abstract-syntax-tree"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531751698, "post_id": 51364089, "comment_id": 89700840, "body": "<code>(Maybe OPrelation) (Maybe SimpleExpr)</code> looks wrong, I&#39;d try <code>(Maybe (OPrelation, SimpleExpr))</code>. Similarly for <code>[(OPadd, Term)]</code>. Otherwise, you have to be careful to avoid the nothing-just and just-nothing combinations, as well as two lists of distinct length."}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531752016, "post_id": 51364089, "comment_id": 89701050, "body": "yeah I&#39;ve thought about tuplin them up, but I&#39;m clearly hand waving at this point and want some guidance"}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531752070, "post_id": 51364089, "comment_id": 89701091, "body": "is it normal to have tuples in the AST?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1531752632, "post_id": 51364089, "comment_id": 89701446, "body": "Well, they are not too bad, even if often a custom tuple-like data type is better than a plain tuple. If you can find a proper name for <code>(OPadd, Term)</code>, define a custom data type, and make a list of that. Using two lists is much worse in my eye, since they would correspond to the grammar <code>{OPadd} {Term}</code>, which is completely different."}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531753420, "post_id": 51364089, "comment_id": 89701979, "body": "yeah that&#39;s what I meant be decomposing {} in the question"}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1531872171, "post_id": 51364089, "comment_id": 89755441, "body": "You essentially have tuples in your grammar, so naturally they would be in your ADT; what else is <code>{OPadd Term}</code> but a list of pairs of an <code>OPadd</code> and a <code>Term</code>? The most natural and direct representation of that in Haskell is <code>[ (OPadd, Term) ]</code>. If you choose something else, do it because you have something specific in mind to gain, not just to avoid tuples."}], "answers": [{"comments": [{"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1531761055, "post_id": 51364625, "comment_id": 89706135, "body": "Yep it seems I have to ditch the grammar and just do it like this. Thank you"}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1531773785, "post_id": 51364625, "comment_id": 89711863, "body": "the AST you provided is recursive so I&#39;ll have to introduce more terms (break it up) in my parsing logic to mitigate that, which will effectively parse according to the grammar I was given. Should I keep these two separate, i.e parse using the given grammar and then transform the result to your AST somehow?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1531808801, "post_id": 51364625, "comment_id": 89720457, "body": "@BanishedBot It is extremely common for ASTs for non-trivial high-level languages to be recursive. I would have assumed your AST and grammar to also be recursive. Specifically I would have expected <code>Factor</code> to contain the production <code>&#39;(&#39; Expr &#39;)&#39;</code> and consequently the <code>Factor</code> data type to contain an alternative that contains an <code>Expr</code>. Is that not the case? Without something like that, it&#39;d be impossible to handle arbitrarily nested expressions. And yes, you&#39;d parse your input according to the grammar and then produce the AST while doing so."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 1, "creation_date": 1531808916, "post_id": 51364625, "comment_id": 89720507, "body": "@BanishedBot If you&#39;re using a parser generator, the productions in your grammar file would be modelled after your grammar and the actions would produce the AST. If you&#39;re using a parser combinator, the structure of your definitions would follow the grammar and the return values would contain the AST nodes. The same goes for a hand-written parser."}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1531821022, "post_id": 51364625, "comment_id": 89728076, "body": "well that last point you mentioned is where I&#39;m kinda stuck at ATM. I&#39;m using parser combinatorics. There seems to be confusion around it based on what I&#39;ve found online. Some suggest producing a &quot;CST&quot; (which would have it&#39;s own data types) and then transforming that to an AST. It&#39;s not immediately obvious to me how I&#39;d have my combinatorics parse according to the grammar and return ASt nodes in one swoop. If you could add that to your answer that would help a lot of folks. Thanks!!"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1531821291, "post_id": 51364625, "comment_id": 89728308, "body": "@BanishedBot I&#39;m not sure what you mean by the last point I mentioned. Hand-writing a parser? And what do you mean by there being confusion around it?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 1, "creation_date": 1531821681, "post_id": 51364625, "comment_id": 89728565, "body": "@BanishedBot I&#39;d advise against a CST, but that all depends on how you&#39;re actually parsing. I&#39;m not sure how to be more helpful without knowing what your parser currently looks like / what kind of tools you&#39;re using or planning to use."}, {"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1531821909, "post_id": 51364625, "comment_id": 89728721, "body": "It&#39;s fine thanks. But it&#39;s good to know I can do it without a CST (which is great). This should keep me busy for a while"}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 3, "last_activity_date": 1531752777, "creation_date": 1531752777, "answer_id": 51364625, "question_id": 51364089, "link": "https://stackoverflow.com/questions/51364089/best-adt-representation-of-ast/51364625#51364625", "title": "Best ADT representation of AST", "body": "<p>The AST does not need to be that close to the grammar. The grammar is structured into multiple levels to encode precedence and uses repetition to avoid left-recursion while still being able to correctly handle left-associative operators. The AST does not need to worry about such things.</p>\n\n<p>Instead I'd define the AST like this:</p>\n\n<pre><code>data Expr = BinaryOperation BinaryOperator Expr Expr\n          | UnaryOperation UnaryOperator Expr\n          | Literal LiteralValue\n          | Variable Id\ndata BinaryOperator = Add | Sub | Mul | Div\ndata UnaryOperator = Not | Negate\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "edited": false, "score": 0, "creation_date": 1531858309, "post_id": 51387047, "comment_id": 89750978, "body": "omg... If you were just a couple hours earlier! I just did it myself with some struggle."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1531848433, "last_edit_date": 1531848433, "creation_date": 1531847929, "answer_id": 51387047, "question_id": 51364089, "link": "https://stackoverflow.com/questions/51364089/best-adt-representation-of-ast/51387047#51387047", "title": "Best ADT representation of AST", "body": "<p>Here's an additional answer that might help you.  I don't want to spoil your fun, so here's a very simple example grammar:</p>\n\n<pre><code>-- Expr = Term ['+' Term]\n-- Term = Factor ['*' Factor]\n-- Factor = number | '(' Expr ')'\n-- number = one or more digits\n</code></pre>\n\n<h2>Using a CST</h2>\n\n<p>As one approach, we can represent this grammar as a concrete syntax tree (CST):</p>\n\n<pre><code>data Expr = TermE Term | PlusE Term Term            deriving (Show)\ndata Term = FactorT Factor | TimesT Factor Factor   deriving (Show)\ndata Factor = NumberF Int | ParenF Expr             deriving (Show)\n</code></pre>\n\n<p>A Parsec-based parser to turn the concrete syntax into a CST might look like this:</p>\n\n<pre><code>expr :: Parser Expr\nexpr = do\n  t1 &lt;- term\n  (PlusE t1 &lt;$ symbol \"+\" &lt;*&gt; term)\n    &lt;|&gt; pure (TermE t1)\n\nterm :: Parser Term\nterm = do\n  f1 &lt;- factor\n  (TimesT f1 &lt;$ symbol \"*\" &lt;*&gt; factor)\n    &lt;|&gt; pure (FactorT f1)\n\nfactor :: Parser Factor\nfactor = NumberF . read &lt;$&gt; lexeme (many1 (satisfy isDigit))\n    &lt;|&gt; ParenF &lt;$&gt; between (symbol \"(\") (symbol \")\") expr\n</code></pre>\n\n<p>with helper functions for whitespace processing:</p>\n\n<pre><code>lexeme :: Parser a -&gt; Parser a\nlexeme p = p &lt;* spaces\n\nsymbol :: String -&gt; Parser String\nsymbol = lexeme . string\n</code></pre>\n\n<p>and main entry point:</p>\n\n<pre><code>parseExpr :: String -&gt; Expr\nparseExpr pgm = case parse (spaces *&gt; expr) \"(string)\" pgm of\n  Right e -&gt; e\n  Left err -&gt; error $ show err\n</code></pre>\n\n<p>after which we can run:</p>\n\n<pre><code>&gt; parseExpr \"1+1*(3+4)\"\nPlusE (FactorT (Number 1)) (TimesT (Number 1) (ParenF (PlusE\n(FactorT (Number 3)) (FactorT (Number 4)))))\n&gt;\n</code></pre>\n\n<p>To convert this into the following AST:</p>\n\n<pre><code>data AExpr -- Abstract Expression\n  = NumberA Int\n  | PlusA AExpr AExpr\n  | TimesA AExpr AExpr\n</code></pre>\n\n<p>we could write:</p>\n\n<pre><code>aexpr :: Expr -&gt; AExpr\naexpr (TermE t) = aterm t\naexpr (PlusE t1 t2) = PlusA (aterm t1) (aterm t2)\n\naterm :: Term -&gt; AExpr\naterm (FactorT f) = afactor f\naterm (TimesT f1 f2) = TimesA (afactor f1) (afactor f2)\n\nafactor :: Factor -&gt; AExpr\nafactor (NumberF n) = NumberA n\nafactor (ParenF e) = aexpr e\n</code></pre>\n\n<p>To interpret the AST, we could use:</p>\n\n<pre><code>interp :: AExpr -&gt; Int\ninterp (NumberA n) = n\ninterp (PlusA e1 e2) = interp e1 + interp e2\ninterp (TimesA e1 e2) = interp e1 * interp e2\n</code></pre>\n\n<p>and then write:</p>\n\n<pre><code>calc :: String -&gt; Int\ncalc = interp . aexpr . parseExpr\n</code></pre>\n\n<p>after which we have a crude little calculator:</p>\n\n<pre><code>&gt; calc \"1 + 2 * (6 + 3)\"\n19\n&gt;\n</code></pre>\n\n<h2>Skipping the CST</h2>\n\n<p>As an alternative approach, we could replace the parser with one that parses <strong>directly</strong> into an AST of type <code>AExpr</code>:</p>\n\n<pre><code>expr :: Parser AExpr\nexpr = do\n  t1 &lt;- term\n  (PlusA t1 &lt;$ symbol \"+\" &lt;*&gt; term)\n    &lt;|&gt; pure t1\n\nterm :: Parser AExpr\nterm = do\n  f1 &lt;- factor\n  (TimesA f1 &lt;$ symbol \"*\" &lt;*&gt; factor)\n    &lt;|&gt; pure f1\n\nfactor :: Parser AExpr\nfactor = NumberA . read &lt;$&gt; lexeme (many1 (satisfy isDigit))\n    &lt;|&gt; between (symbol \"(\") (symbol \")\") expr\n</code></pre>\n\n<p>You can see how little the structure of these parsers changes.  All that's disappeared is the distinction between expressions, terms, and factors at the <em>type</em> level, and constructors like <code>TermE</code>, <code>FactorT</code>, and <code>ParenF</code> whose only purpose is to allow embedding of these types within each other.</p>\n\n<p>In more complex scenarios, the CST and AST parsers might exhibit bigger differences.  (For example, in a grammar that allowed <code>1 + 2 + 3</code>, this might be represented as a single constructor <code>data Expr = ... | PlusE [Term] | ...</code> in the CST but with a nested series of binary <code>PlusA</code> constructors in the same <code>AExpr</code> AST type as above.)</p>\n\n<p>After redefining <code>parseExpr</code> to return an <code>AExpr</code> and dropping the <code>aexpr</code> step from <code>calc</code>, everything else stays the same, and we still have:</p>\n\n<pre><code>&gt; calc \"1 + 2 * (6 + 3)\"\n19\n&gt;\n</code></pre>\n\n<h2>Programs for Reference</h2>\n\n<p>Here's the full program using an intermediate CST:</p>\n\n<pre><code>-- Calc1.hs, using a CST\n\n{-# OPTIONS_GHC -Wall #-}\n\nmodule Calc1 where\n\nimport Data.Char\nimport Text.Parsec\nimport Text.Parsec.String\n\ndata Expr = TermE Term | PlusE Term Term            deriving (Show)\ndata Term = FactorT Factor | TimesT Factor Factor   deriving (Show)\ndata Factor = NumberF Int | ParenF Expr             deriving (Show)\n\nlexeme :: Parser a -&gt; Parser a\nlexeme p = p &lt;* spaces\n\nsymbol :: String -&gt; Parser String\nsymbol = lexeme . string\n\nexpr :: Parser Expr\nexpr = do\n  t1 &lt;- term\n  (PlusE t1 &lt;$ symbol \"+\" &lt;*&gt; term)\n    &lt;|&gt; pure (TermE t1)\n\nterm :: Parser Term\nterm = do\n  f1 &lt;- factor\n  (TimesT f1 &lt;$ symbol \"*\" &lt;*&gt; factor)\n    &lt;|&gt; pure (FactorT f1)\n\nfactor :: Parser Factor\nfactor = NumberF . read &lt;$&gt; lexeme (many1 (satisfy isDigit))\n    &lt;|&gt; ParenF &lt;$&gt; between (symbol \"(\") (symbol \")\") expr\n\nparseExpr :: String -&gt; Expr\nparseExpr pgm = case parse (spaces *&gt; expr) \"(string)\" pgm of\n  Right e -&gt; e\n  Left err -&gt; error $ show err\n\ndata AExpr -- Abstract Expression\n  = NumberA Int\n  | PlusA AExpr AExpr\n  | TimesA AExpr AExpr\n\naexpr :: Expr -&gt; AExpr\naexpr (TermE t) = aterm t\naexpr (PlusE t1 t2) = PlusA (aterm t1) (aterm t2)\n\naterm :: Term -&gt; AExpr\naterm (FactorT f) = afactor f\naterm (TimesT f1 f2) = TimesA (afactor f1) (afactor f2)\n\nafactor :: Factor -&gt; AExpr\nafactor (NumberF n) = NumberA n\nafactor (ParenF e) = aexpr e\n\ninterp :: AExpr -&gt; Int\ninterp (NumberA n) = n\ninterp (PlusA e1 e2) = interp e1 + interp e2\ninterp (TimesA e1 e2) = interp e1 * interp e2\n\ncalc :: String -&gt; Int\ncalc = interp . aexpr . parseExpr\n</code></pre>\n\n<p>and here's the full program for the more traditional solution that skips an explicit CST representation:    </p>\n\n<pre><code>-- Calc2.hs, with direct parsing to AST\n\n{-# OPTIONS_GHC -Wall #-}\n\nmodule Calc where\n\nimport Data.Char\nimport Text.Parsec\nimport Text.Parsec.String\n\nlexeme :: Parser a -&gt; Parser a\nlexeme p = p &lt;* spaces\n\nsymbol :: String -&gt; Parser String\nsymbol = lexeme . string\n\nexpr :: Parser AExpr\nexpr = do\n  t1 &lt;- term\n  (PlusA t1 &lt;$ symbol \"+\" &lt;*&gt; term)\n    &lt;|&gt; pure t1\n\nterm :: Parser AExpr\nterm = do\n  f1 &lt;- factor\n  (TimesA f1 &lt;$ symbol \"*\" &lt;*&gt; factor)\n    &lt;|&gt; pure f1\n\nfactor :: Parser AExpr\nfactor = NumberA . read &lt;$&gt; lexeme (many1 (satisfy isDigit))\n    &lt;|&gt; between (symbol \"(\") (symbol \")\") expr\n\nparseExpr :: String -&gt; AExpr\nparseExpr pgm = case parse (spaces *&gt; expr) \"(string)\" pgm of\n  Right e -&gt; e\n  Left err -&gt; error $ show err\n\ndata AExpr -- Abstract Expression\n  = NumberA Int\n  | PlusA AExpr AExpr\n  | TimesA AExpr AExpr\n\ninterp :: AExpr -&gt; Int\ninterp (NumberA n) = n\ninterp (PlusA e1 e2) = interp e1 + interp e2\ninterp (TimesA e1 e2) = interp e1 * interp e2\n\ncalc :: String -&gt; Int\ncalc = interp . parseExpr\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "is_accepted": false, "score": 0, "last_activity_date": 1531861380, "last_edit_date": 1531861380, "creation_date": 1531860137, "answer_id": 51389892, "question_id": 51364089, "link": "https://stackoverflow.com/questions/51364089/best-adt-representation-of-ast/51389892#51389892", "title": "Best ADT representation of AST", "body": "<p>Okay so <a href=\"https://stackoverflow.com/a/51387047/2488240\">Buhr's answer</a> is quite nice. Here's how I did though (no CST) inspired by sepp2k's response:</p>\n\n<p>The AST:</p>\n\n<pre><code>data OP = OPplus | OPminus | OPstar | OPdiv \n    | OPidiv | OPmod |  OPand | OPeq | OPneq \n    | OPless | OPgreater | OPle | OPge \n    | OPin | OPor\n\ndata Expr = \n      Relation Expr OP Expr -- &gt; &lt; == &gt;= etc..\n    | Unary OP Expr  -- + -\n    | Mult Expr OP Expr  -- * / div mod and\n    | Add Expr OP Expr  -- + - or\n    | FactorInt Int | FactorReal Double \n    | FactorStr String \n    | FactorTrue | FactorFalse \n    | FactorNil \n    | FactorDesig Designator  -- identifiers\n    | FactorNot Expr\n    | FactorFuncCall FuncCall deriving (Show)\n</code></pre>\n\n<p>The parsers:</p>\n\n<pre><code>parseExpr :: Parser Expr\nparseExpr = (try $ Relation &lt;$&gt; \n        parseSimpleExpr &lt;*&gt; parseOPrelation &lt;*&gt; parseSimpleExpr)\n    &lt;|&gt; parseSimpleExpr\n\nparseSimpleExpr :: Parser Expr\nparseSimpleExpr = (try simpleAdd)\n    &lt;|&gt; (try $ Unary &lt;$&gt; parseOPunary &lt;*&gt; simpleAdd)\n    &lt;|&gt; (try $ Unary &lt;$&gt; parseOPunary &lt;*&gt; parseSimpleExpr)\n    &lt;|&gt; parseTerm\n    where simpleAdd = Add &lt;$&gt; parseTerm &lt;*&gt; parseOPadd &lt;*&gt; parseSimpleExpr\n\nparseTerm :: Parser Expr\nparseTerm = (try $ Mult &lt;$&gt; \n        parseFactor &lt;*&gt; parseOPmult &lt;*&gt; parseTerm)\n    &lt;|&gt; parseFactor\n\nparseFactor :: Parser Expr\nparseFactor = \n        (parseKWnot &gt;&gt; FactorNot &lt;$&gt; parseFactor)\n    &lt;|&gt; (exactTok \"true\"  &gt;&gt; return FactorTrue)\n    &lt;|&gt; (exactTok \"false\" &gt;&gt; return FactorFalse) \n    &lt;|&gt; (parseNumber)\n    &lt;|&gt; (FactorStr &lt;$&gt; parseString)\n    &lt;|&gt; (betweenCharTok '(' ')' parseExpr)\n    &lt;|&gt; (FactorDesig &lt;$&gt; parseDesignator)\n    &lt;|&gt; (FactorFuncCall &lt;$&gt; parseFuncCall)\n</code></pre>\n\n<p>I didn't include basic parsers like parseOPadd as those are what you'd expect and are easy to build.</p>\n\n<p>I still parsed according to the grammar but tweaked it slightly to match my AST.</p>\n\n<p>You could check out the full source which is a compiler for Pascal <a href=\"https://github.com/sam46/Paskell\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 1173, "user_id": 2488240, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01472f9a7eaf6e28276c535137c757a9?s=128&d=identicon&r=PG", "display_name": "sam46", "link": "https://stackoverflow.com/users/2488240/sam46"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 326, "favorite_count": 0, "accepted_answer_id": 51387047, "answer_count": 3, "score": 0, "last_activity_date": 1531861380, "creation_date": 1531751166, "question_id": 51364089, "link": "https://stackoverflow.com/questions/51364089/best-adt-representation-of-ast", "title": "Best ADT representation of AST", "body": "<p>I have the following grammar for expressions that I'm trying to represent as a Haskell ADT:</p>\n\n<pre><code>Expr = SimpleExpr [OPrelation SimpleExpr]  \nSimpleExpr = [OPunary] Term {OPadd Term}  \nTerm = Factor {OPmult Factor}  \n</code></pre>\n\n<p>where: </p>\n\n<blockquote>\n  <p>{} means 0 or more<br>\n    [] means 0 or 1<br>\n    OPmult, OPadd, OPrelation, OPunary are classes of operators  </p>\n</blockquote>\n\n<p><em>Note that this grammar does get precedence right.</em></p>\n\n<p>Here's something I tried:</p>\n\n<pre><code>data Expr  = Expr SimpleExpr (Maybe OPrelation) (Maybe SimpleExpr)\ndata SimpleExpr = SimpleExpr (Maybe OPunary) Term [OPadd] [Term]\ndata Term = Term Factor [OPmult] [Factor]\n</code></pre>\n\n<p>which in hindsight I think is awful, especially the <em>[OPadd] [Term]</em> and <em>[OPmult] [Factor]</em> parts. Because, for example, in the parse tree for <em>1+2+3</em> it would put <em>[+, +]</em> in one branch and <em>[2, 3]</em> in another, meaning they're decoupled. </p>\n\n<p>What would be a good representation that'll play nice later in the next stages of compilation?</p>\n\n<ul>\n<li>Decomposing  { } and [ ] into more data types seems like an overkill</li>\n<li>Using lists seems not quite right as it would no longer be a tree (Just a node that's a list)</li>\n<li><em>Maybe</em> for { }. A good idea ?</li>\n</ul>\n\n<p>And finally, I'm assuming after parsing I'll have to pass over the Parse Tree and reduce it to an AST? or should the whole grammar be modified to be less complex? or maybe it's abstract enough? </p>\n"}, {"tags": ["haskell", "type-parameter"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1531740919, "post_id": 51360842, "comment_id": 89693782, "body": "What happens if you write <code>getters :: Show a =&gt; [C a -&gt; String]</code>? Why are <code>A</code> and <code>B</code> relevant here? You here did <i>not</i> specify that the <code>a</code> in <code>C a</code> is per se <code>A</code> or <code>B</code>."}, {"owner": {"reputation": 231, "user_id": 10060260, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6a263d7dfcf997df2aeae96112cd050?s=128&d=identicon&r=PG&f=1", "display_name": "Kevin Li", "link": "https://stackoverflow.com/users/10060260/kevin-li"}, "edited": false, "score": 0, "creation_date": 1531741216, "post_id": 51360842, "comment_id": 89693972, "body": "If you capitalize <code>a</code> in the type of <code>var</code> this should typecheck."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531741360, "post_id": 51360842, "comment_id": 89694060, "body": "I wanted the getters to be just an expression not a method."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531741492, "post_id": 51360842, "comment_id": 89694139, "body": "I do not want to capitalize <code>a</code> i want the <code>var</code> to be polymorphic.I want  the freedom <code>var</code> to be a type that implements <code>Show</code>.Oh and now i realise you must specify what implementation it is between <code>A</code>-s and <code>B</code>-s."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531741648, "post_id": 51360842, "comment_id": 89694236, "body": "Note that <code>a</code> could not only be <code>A</code> or <code>B</code>, but also <code>String, Bool, [[(A, Char)]], ..</code>. There are infinitely many showable types that could be used in <code>C a</code>."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531743171, "post_id": 51360842, "comment_id": 89695188, "body": "Ok so i think what i wanted to know is the following: Can you impose a  constraint on a type parameter of a type? Something like: given a <code>class Myclass a</code> and a type <code>MyType</code> that implements it ,and a type <code>data C (a::Myclass)=C{ var::a}</code>.So can i impose a type parameter to implement a certain typeclass?"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1531745714, "post_id": 51362227, "comment_id": 89696800, "body": "GHC&#39;s type system is perfectly capable of doing this without help -- just use the <code>NoMonomorphismRestriction</code> extension."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531749687, "post_id": 51362227, "comment_id": 89699467, "body": "Thank you for your response.What i wanted to achieve was actually the following: Given a type with a type parameter i wanted to put a constraint on that type parameter. E.G: <code>data MyType (a::Mytypeclass)=M{var::a}</code> where <code>Mytypeclass</code> is implemented by some types.I  want a <code>type parameter</code> to implement a certain <code>typeclass</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531769096, "post_id": 51362227, "comment_id": 89709896, "body": "@BercoviciAdrian Generally: don&#39;t. Instead, annotate values whose type mentions <code>MyType</code> with the class constraint; e.g. <code>foo :: Mytypeclass a =&gt; MyType a -&gt; ...</code>."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531770215, "post_id": 51362227, "comment_id": 89710376, "body": "Yes but this is for <code>methods</code> and <code>typeclasses</code> ..so you say it is not recommended for <code>types.</code>."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1531792669, "last_edit_date": 1531792669, "creation_date": 1531745297, "answer_id": 51362227, "question_id": 51360842, "link": "https://stackoverflow.com/questions/51360842/type-deduction-in-function-composition/51362227#51362227", "title": "Type deduction in function composition", "body": "<p><em>Edit</em>: updated below to answer your follow-up question.</p>\n\n<p>To answer your original question, this is just a situation where the type checker needs a little help.  You can get your code to type check by adding an explicit signature for <code>getters</code>, as @WillemVanOnsem has suggested:</p>\n\n<pre><code>data A = A1 | A2 deriving (Show)\ndata B = B1 | B2 deriving (Show)\ndata C a = C { var :: a, var2 :: Int }\n\ngetters :: (Show a) =&gt; [C a -&gt; String]\ngetters = [show . var, show . var2]\n</code></pre>\n\n<p>or, alternatively, by turning on the <code>NoMonomorphismRestriction</code> GHC extension, as @DanielWagner points out.  After doing either of these, the following works fine:</p>\n\n<pre><code>&gt; map ($ C A1 10) getters\n[\"A1\",\"10\"]\n&gt; map ($ C B2 10) getters\n[\"B2\",\"10\"]\n&gt; \n</code></pre>\n\n<p>This signature doesn't make <code>getters</code> a \"method\", if your comment about methods was directed at Willem.  It's still a polymorphic expression with type <code>[C a -&gt; String]</code> (for any type <code>a</code> with a <code>Show a</code> constraint).</p>\n\n<p><strong>Update:</strong> As per your comments, you <em>think</em> you want to define a data type with a constraint on the type of one or more of its fields.  (You don't <em>actually</em> want to do this -- you just think you do -- but who am I to stop you?)</p>\n\n<p>So, to do this, you'll need to enable the <code>DatatypeContexts</code> extension and write:</p>\n\n<pre><code>{-# LANGUAGE DatatypeContexts #-}\n\nclass Mytypeclass a where\n  whatever :: a -&gt; String\n\ndata Mytypeclass a =&gt; MyType a = M { var :: a, var2 :: a }\n</code></pre>\n\n<p>The compiler will generate a warning that this extension was deprecated because it was widely considered a misfeature and removed from the language.</p>\n\n<p>Now, you can define:</p>\n\n<pre><code>getters = [whatever . var, whatever . var2]\n</code></pre>\n\n<p>This will give you an error, though a different error message than before, after which you can either add the signature:</p>\n\n<pre><code>getters :: (Mytypeclass a) =&gt; [MyType a -&gt; String]\ngetters = [whatever . var, whatever . var2]\n</code></pre>\n\n<p>or else enable the <code>NoMonomorphismRestriction</code> extension in order to get it to compile, just like before.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 51362227, "answer_count": 1, "score": 2, "last_activity_date": 1531792669, "creation_date": 1531740756, "last_edit_date": 1531749784, "question_id": 51360842, "link": "https://stackoverflow.com/questions/51360842/type-deduction-in-function-composition", "title": "Type deduction in function composition", "body": "<p>Hello i have a type with a type parameter:</p>\n\n<pre><code>data A=A1| A2 deriving (Show)\ndata B=B1| B2 deriving(Show)\ndata C a=C{var::a,var2::Int}\n\ngetters=[show . var,show .var2]\n</code></pre>\n\n<p>I get the following error in the <code>getters</code> at <code>show . var</code> :</p>\n\n<pre><code>Ambiguous type variable `a0' arising from a use of `show'\n      prevents the constraint `(Show a0)' from being solved.\n      Relevant bindings include\n        getters:: [Worker a0 -&gt; String]\n</code></pre>\n\n<p>Do i have to explicitly state the type ,something like :  <code>show. (var::B)</code>.I do not really understand the error since both types <code>A</code> and <code>B</code> are implementing <code>Show</code></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 4, "creation_date": 1531737027, "post_id": 51359696, "comment_id": 89691557, "body": "<code>succ</code> has type <code>Enum a =&gt; a -&gt; a</code>, so the type of <code>x</code> in your definition is <code>Odd</code>. <code>x + 2</code> is therefore a type error. It looks like you want to do something like <code>succ (Odd x) = Odd $ x + 2</code>?"}, {"owner": {"reputation": 484, "user_id": 5587299, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68b696bfe3bdb63c600cdf67bf2983e6?s=128&d=identicon&r=PG", "display_name": "aryndin", "link": "https://stackoverflow.com/users/5587299/aryndin"}, "reply_to_user": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1531737178, "post_id": 51359696, "comment_id": 89691642, "body": "@Lee <code>(Odd x)</code> actually works, but why? As you said <code>x + 2</code> gets me a type error."}, {"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 2, "creation_date": 1531737331, "post_id": 51359696, "comment_id": 89691737, "body": "The argument to your <code>succ</code> implementation has type <code>Odd</code>. <code>succ (Odd x)</code> matches on the only constructor of the <code>Odd</code> type (also called <code>Odd</code>). Now <code>x</code> has type <code>Integer</code> so <code>x + 2</code> is valid."}], "answers": [{"comments": [{"owner": {"reputation": 484, "user_id": 5587299, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68b696bfe3bdb63c600cdf67bf2983e6?s=128&d=identicon&r=PG", "display_name": "aryndin", "link": "https://stackoverflow.com/users/5587299/aryndin"}, "edited": false, "score": 0, "creation_date": 1531738366, "post_id": 51359980, "comment_id": 89692302, "body": "Thanks, much clearer now. How could I make to work smth like <code>succ x = x + (Odd 2)</code>? Is it possible?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 484, "user_id": 5587299, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68b696bfe3bdb63c600cdf67bf2983e6?s=128&d=identicon&r=PG", "display_name": "aryndin", "link": "https://stackoverflow.com/users/5587299/aryndin"}, "edited": false, "score": 1, "creation_date": 1531738512, "post_id": 51359980, "comment_id": 89692389, "body": "@aryndin: by making <code>Odd</code> an instance of <code>Num</code> (like you here did for <code>Enum</code>.  See here: <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Num\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.11.1.0/docs/&hellip;</a>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 484, "user_id": 5587299, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68b696bfe3bdb63c600cdf67bf2983e6?s=128&d=identicon&r=PG", "display_name": "aryndin", "link": "https://stackoverflow.com/users/5587299/aryndin"}, "edited": false, "score": 0, "creation_date": 1531745465, "post_id": 51359980, "comment_id": 89696645, "body": "@aryndin ...but you probably do not want to make <code>Odd</code> an instance of <code>Num</code>. I&#39;m guessing from the name and the <code>Enum</code> instance that you intend <code>Odd</code> to only contain odd numbers; but <code>Num</code> demands <code>fromInteger :: Integer -&gt; Odd</code>, which would let you inject even numbers as well."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1531737829, "creation_date": 1531737829, "answer_id": 51359980, "question_id": 51359696, "link": "https://stackoverflow.com/questions/51359696/couldnt-match-expected-type-when-defining-data-type/51359980#51359980", "title": "Couldn&#39;t match expected type when defining data type", "body": "<p>Syntactically what you here aim to do is <strong>add an <code>Integer</code> to an <code>Odd</code> object</strong>. Since the addition in Haskell requires the two operands to be of the same type, and the fact that <code>Odd</code> is not a <code>Num</code> type anyway, thus lets the compiler complain that this is not possible.</p>\n\n<p>You can however obtain the element that is wrapped in the <code>Odd</code> constructor, and then process that element. For example:</p>\n\n<pre><code>instance Enum Odd where\n  succ <b>(Odd x)</b> = Odd (x+2)\n  pred <b>(Odd x)</b> = Odd (x-2)</code></pre>\n\n<p>We thus here obtain the <code>Integer</code> <code>x</code> that is wrapped in the <code>Odd</code> constructor by pattern matching it with <code>Odd x</code>, and then we can process that integer <code>x</code> further. For example by adding two to it, and wrapping it in another <code>Odd</code> constructor.</p>\n"}], "owner": {"reputation": 484, "user_id": 5587299, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68b696bfe3bdb63c600cdf67bf2983e6?s=128&d=identicon&r=PG", "display_name": "aryndin", "link": "https://stackoverflow.com/users/5587299/aryndin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 51359980, "answer_count": 1, "score": 1, "last_activity_date": 1531737829, "creation_date": 1531736803, "question_id": 51359696, "link": "https://stackoverflow.com/questions/51359696/couldnt-match-expected-type-when-defining-data-type", "title": "Couldn&#39;t match expected type when defining data type", "body": "<p>I'm trying to define my own data type containing Odds:</p>\n\n<pre><code>data Odd = Odd Integer deriving (Eq, Show)\n\ninstance Enum Odd where\n  succ x = Odd $ x + 2\n  pred x = Odd $ x - 2\n</code></pre>\n\n<p>When I try to compile that, I get:</p>\n\n<pre><code>hello.hs:92:18: error:\n    \u2022 Couldn't match expected type \u2018Integer\u2019 with actual type \u2018Odd\u2019\n    \u2022 In the second argument of \u2018($)\u2019, namely \u2018x + 2\u2019\n      In the expression: Odd $ x + 2\n      In an equation for \u2018succ\u2019: succ x = Odd $ x + 2\n   |\n92 |   succ x = Odd $ x + 2\n   |                  ^^^^^\nFailed, no modu\n</code></pre>\n\n<p>I don't understand why haskell expect <code>Integer</code> on left hand, don't we define Enum instance called Odd, not Integer?</p>\n"}, {"tags": ["javascript", "haskell", "monads", "functor", "associative"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1531736274, "post_id": 51358949, "comment_id": 89691106, "body": "The problem you&#39;re asking about really has nothing to do with the associativity law."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1531736633, "post_id": 51358949, "comment_id": 89691337, "body": "Also a suggestion: to fully get into the functional thinking, better don&#39;t use <code>trace</code> but only display final values. (Not that Haskellers don&#39;t use <code>trace</code> for debugging, or rather <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Debug-Trace.html#v:traceShowId\" rel=\"nofollow noreferrer\"><code>traceShowId</code></a>, but only as a hack to find out about some value discrepancy detail. First comes always the typechecking stage.)"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "edited": false, "score": 0, "creation_date": 1531737643, "post_id": 51359517, "comment_id": 89691905, "body": "Thanks, but this is what I know of, and I thought I clarified in the Question. So far unfortunately, you don&#39;t answer anything in terms of this topic."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 3, "creation_date": 1531737980, "post_id": 51359517, "comment_id": 89692095, "body": "Well, it&#39;s not really clear what your question <i>is</i>."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1531736217, "creation_date": 1531736217, "answer_id": 51359517, "question_id": 51358949, "link": "https://stackoverflow.com/questions/51358949/functor-associative-law-confusion/51359517#51359517", "title": "Functor associative law confusion", "body": "<p>With <code>const r3 = v.map(take1)</code> you already go into one layer of map-yness, you <em>enter the functor</em>, if you will. Inside the functor, you have pure, unwrapped values. But <code>take1</code> itself tries to use <code>map</code> on those values again! That <em>can</em> work, but only if the values are themselves functor values \u2013 like, a nested <code>Identity</code>.</p>\n\n<p>To use a function that already uses <code>map</code> internally, simply <em>apply</em> it to the functor-value:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const f = n =&gt; n + 1;\r\nconst g = n =&gt; n * 2;\r\n\r\nconst Identity = value =&gt; ({\r\n  map: fn =&gt; Identity(fn(value)),\r\n  valueOf: () =&gt; value,\r\n});\r\n\r\nconst take1 = a =&gt; a //any\r\n  .map(g)\r\n  .map(f);\r\n\r\nconst v = Identity(100);\r\nconst r3 = take1(v);\r\n\r\nconsole.log(r3.valueOf());</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1531747469, "post_id": 51362439, "comment_id": 89697917, "body": "\u201cIn Javascript, the values form a category.\u201d That doesn&#39;t make sense, does it? What are the values supposed to be in the category? They certainly aren&#39;t objects of the category."}, {"owner": {"reputation": 403, "user_id": 3554119, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b79421d48f8e4e753ab9ec19b3a964b7?s=128&d=identicon&r=PG&f=1", "display_name": "dirkt", "link": "https://stackoverflow.com/users/3554119/dirkt"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1531748040, "post_id": 51362439, "comment_id": 89698290, "body": "@leftaroundabout: You are right, I got confused because there are no types. Edited."}], "tags": [], "owner": {"reputation": 403, "user_id": 3554119, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b79421d48f8e4e753ab9ec19b3a964b7?s=128&d=identicon&r=PG&f=1", "display_name": "dirkt", "link": "https://stackoverflow.com/users/3554119/dirkt"}, "is_accepted": false, "score": 2, "last_activity_date": 1531748972, "last_edit_date": 1531748972, "creation_date": 1531746017, "answer_id": 51362439, "question_id": 51358949, "link": "https://stackoverflow.com/questions/51358949/functor-associative-law-confusion/51362439#51362439", "title": "Functor associative law confusion", "body": "<p>Let's try to sort out terminology.</p>\n\n<p>In category theory, a category <em>C</em> consists of <em>objects</em> and <em>morphisms</em> (also called <em>arrows</em>). A functor <em>F</em> between two categories <em>C</em> and <em>D</em>, written <em>F: C -> D</em>, maps objects of <em>C</em> to objects of <em>D</em> and morphisms of <em>C</em> to morphisms of <em>D</em>.</p>\n\n<p>You can compose functors (in the obvious way).</p>\n\n<p>Composition of functors is associative: Given <em>F : C -> D</em>, <em>G : D -> E</em> and <em>H : E -> F</em>, their composition (which is a functor from <em>C</em> to <em>F</em>) doesn't need parenthesis.</p>\n\n<p>You can also compose morphisms (inside a category). Composition of morphisms is also associative.</p>\n\n<p>Moreover, a functor must respect composition of morphisms (that is, <em>F(g\u2218f) = F(g)\u2218F(f)</em>). This is completely different from associativity.</p>\n\n<p>An <em>endofunctor</em> is a functor from some category to the same category, <em>F : C -> C</em>.</p>\n\n<p>In Javascript, there a no types, so to make it into a category, imagine a single object (some universal type) as the only object. Morphisms are the functions with one arguments.</p>\n\n<p>Now this</p>\n\n<pre><code>const F = [1, 2, 3];\n</code></pre>\n\n<p>is not a functor: You didn't say how objects get mapped (though there's not much choice), you didn't say how morphisms (Javascript functions) get mapped.</p>\n\n<p>However, you can define a functor <em>Array</em> for Javascript like this:</p>\n\n<p>a) Our universal type gets mapped to itself. (If Javascript had types, we would map the type <em>t</em> to the type \"arrays of <em>t</em>\").</p>\n\n<p>b) A function <em>f</em> gets mapped to a function from an array to an array, by applying it \"pointwise\". This is <em>map</em> on arrays in Javascript: <em>Array(f) = (x => x.map(f))</em> (using <code>=&gt;</code> for functions).</p>\n\n<p>Note that <em>Array</em> isn't anything you can completely write down in Javascript.</p>\n\n<p>Now this functor respects composition of morphisms (Javascript functions) etc. etc., as one can easily work out. And one intermediate step in that would be that indeed <em>x.map(f).map(g) = x.map(y => g(f(y))</em> (informally, it doesn't matter if you first apply <em>f</em> to all elements of the array <em>x</em>, and after that, apply <em>g</em> to all of them, or if you immediately apply <em>g</em> after <em>f</em> to all elements of the array).</p>\n\n<p>It would also be associative if we compose it with other functors (though we don't have examples for other functors in Javascript yet).</p>\n\n<p>Let's leave monads out of the picture for now.</p>\n\n<p>Does that help?</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6440264"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1531748972, "creation_date": 1531734394, "last_edit_date": 1531735445, "question_id": 51358949, "link": "https://stackoverflow.com/questions/51358949/functor-associative-law-confusion", "title": "Functor associative law confusion", "body": "<p>I've been confused by associative law of functor(Endofunctor) for weeks.</p>\n\n<p>I know every endofunctor forms composition/associative feature.</p>\n\n<blockquote>\n  <p>Composition is associative. Basically that means that when you\u2019re composing multiple functions (morphisms if you\u2019re feeling fancy), you don\u2019t need parenthesis:</p>\n</blockquote>\n\n<pre><code>h\u2218(g\u2218f) = (h\u2218g)\u2218f = h\u2218g\u2218f\n</code></pre>\n\n<blockquote>\n  <p>Let\u2019s take another look at the composition law in JavaScript:</p>\n  \n  <p>Given a functor, F:</p>\n</blockquote>\n\n<pre><code>const F = [1, 2, 3];\n</code></pre>\n\n<blockquote>\n  <p>The following are equivalent:</p>\n</blockquote>\n\n<pre><code>F.map(x =&gt; f(g(x)));\n// is equivalent to...\nF.map(g).map(f);\n</code></pre>\n\n<p>However, as shown the code below, especially the later part:</p>\n\n<pre><code>console.log(\"===================\");\nconst take1 = a =&gt; a //any\n  .map(g)\n  .map(f)\n  .map(trace);\n</code></pre>\n\n<p>this will lead an type error:</p>\n\n<pre><code>//  const r3 = v.map(take1); //TypeError: a.map is not a function\n</code></pre>\n\n<p>, and surely:</p>\n\n<pre><code>const take2 = a =&gt; Identity(a) //Identity(any)\n  .map(trace)\n  .map(g)\n  .map(trace)\n  .map(f)\n  .map(trace);\nconst r4 = v.map(take2);\n</code></pre>\n\n<p>works.</p>\n\n<p>What I feel wrong with is in the <code>take2</code> function, the requirement to transform the type of the argument:<code>a</code> to <code>Identity(a)</code> is not really composing functions.</p>\n\n<p>I also understand that Monads are to avoid this composition problem, and I wonder if this issue is simply due to lack of \"left-right Identiy law of Monads\" and the functor associative law is still satisfied, or there may be different layers of associative laws, and in functor, a certain layer of associative law is obviously satisfied, but another layer of associative law is broken as seen the sample above.</p>\n\n<p>Can you clarify?</p>\n\n<p>The sample code is certainly in JavaScript, but I still tag Haskell, since the community is strong on the topic, so please excuse me.</p>\n\n<p>Thank you.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const trace = x =&gt; {\r\n  console.log(x);\r\n  return x;\r\n};\r\nconst Identity = value =&gt; ({\r\n  map: fn =&gt; Identity(fn(value)),\r\n  valueOf: () =&gt; value,\r\n});\r\nconst u = Identity(2);\r\nconst f = n =&gt; n + 1;\r\nconst g = n =&gt; n * 2;\r\n// Composition law\r\nconst r1 = u\r\n  .map(x =&gt; f(g(x)));\r\nconst r2 = u\r\n  .map(g)\r\n  .map(f);\r\nr1.map(trace); // 5\r\nr2.map(trace); // 5\r\nconsole.log(\"===================\");\r\nconst take1 = a =&gt; a //any\r\n  .map(g)\r\n  .map(f)\r\n  .map(trace);\r\nconst v = Identity(100);\r\n//  const r3 = v.map(take1); //TypeError: a.map is not a function\r\nconst take2 = a =&gt; Identity(a) //Identity(any)\r\n  .map(trace)\r\n  .map(g)\r\n  .map(trace)\r\n  .map(f)\r\n  .map(trace);\r\nconst r4 = v.map(take2);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>PS/EDIT: </p>\n\n<p>Another reason to ask this is if we simply view the function sequence f/g/h as data sequence and cut and paste like strings, the structure becomes:</p>\n\n<pre><code>h\u2218(g\u2218f) != (h\u2218g)\u2218f != h\u2218g\u2218f\n</code></pre>\n\n<p>without flatten procedures intentionally. This breaks associative, and if only the flatten process probably by the left/right identity law of Monoids/Monads make things associative, are those identity law and associative are somehow not isolated each other??</p>\n"}, {"tags": ["haskell", "multipart", "type-level-computation", "servant"], "comments": [{"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1531757260, "post_id": 51358311, "comment_id": 89704273, "body": "can&#39;t you just change your <code>defaultParseRequestBodyOptions</code> to not have a filename length limit? Like so: <code>defaultParseRequestBodyOptions {prboKeyLength=Nothing}</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1818, "user_id": 1955231, "user_type": "registered", "accept_rate": 22, "profile_image": "https://graph.facebook.com/100002848311925/picture?type=large", "display_name": "Agnishom Chattopadhyay", "link": "https://stackoverflow.com/users/1955231/agnishom-chattopadhyay"}, "edited": false, "score": 0, "creation_date": 1531797648, "post_id": 51366307, "comment_id": 89717263, "body": "This works perfectly, but I am still curious: Is it possible to actually define Mem&#39; which is almost the same as Mem, except for the file name limit, though?"}, {"owner": {"reputation": 1044, "user_id": 193424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11ba6dfa8271fb1cd0c475a2c0626853?s=128&d=identicon&r=PG", "display_name": "Alp Mestanogullari", "link": "https://stackoverflow.com/users/193424/alp-mestanogullari"}, "reply_to_user": {"reputation": 1818, "user_id": 1955231, "user_type": "registered", "accept_rate": 22, "profile_image": "https://graph.facebook.com/100002848311925/picture?type=large", "display_name": "Agnishom Chattopadhyay", "link": "https://stackoverflow.com/users/1955231/agnishom-chattopadhyay"}, "edited": false, "score": 0, "creation_date": 1531810637, "post_id": 51366307, "comment_id": 89721480, "body": "Not sure, as this is a non-backend specific type of option."}], "tags": [], "owner": {"reputation": 1044, "user_id": 193424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11ba6dfa8271fb1cd0c475a2c0626853?s=128&d=identicon&r=PG", "display_name": "Alp Mestanogullari", "link": "https://stackoverflow.com/users/193424/alp-mestanogullari"}, "is_accepted": false, "score": 3, "last_activity_date": 1531758452, "creation_date": 1531758452, "answer_id": 51366307, "question_id": 51358311, "link": "https://stackoverflow.com/questions/51358311/how-to-configure-servant-multipart-to-allow-longer-file-names/51366307#51366307", "title": "How to configure servant-multipart to allow longer file names?", "body": "<p>You don't need to define an alternative to <code>Mem</code>. Given the way servant-multipart is currently written, you do not by default have to specify any multipart options. However, you can specify them, using <code>serveWithContext</code> and a suitable <code>Context</code> that contains your options. Below is a complete example that just overrides the maximum filename length to be 512. Of particular interest is <code>ctxt</code>, which contains <code>multipartOpts</code>, our custom options.</p>\n\n<pre><code>{-# LANGUAGE DataKinds, TypeOperators #-}\nimport Data.Proxy\nimport Network.Wai.Handler.Warp\nimport Network.Wai.Parse\nimport Servant\nimport Servant.Multipart\n\ntype API = MultipartForm Tmp (MultipartData Tmp) :&gt; Post '[PlainText] String\n\napi :: Proxy API\napi = Proxy\n\nserver :: MultipartData Tmp -&gt; Handler String\nserver multipartData = return str\n\n  where str = \"The form was submitted with \"\n           ++ show nInputs ++ \" textual inputs and \"\n           ++ show nFiles  ++ \" files.\"\n        nInputs = length (inputs multipartData)\n        nFiles  = length (files multipartData)\n\nmain :: IO ()\nmain = run 8080 (serveWithContext api ctxt server)\n\n  where ctxt = multipartOpts :. EmptyContext\n        multipartOpts = (defaultMultipartOptions (Proxy :: Proxy Tmp))\n          { generalOptions = setMaxRequestKeyLength 512 defaultParseRequestBodyOptions\n          }\n</code></pre>\n\n<p>EDIT: If you're a Nix user, you can put the following at the top of the haskell file with this code, make it executable and then just launch it, letting Nix fetch all the deps etc.</p>\n\n<pre><code>#!/usr/bin/env nix-shell\n#!nix-shell -i runhaskell -p \"haskellPackages.ghcWithPackages (pkgs: with pkgs; [servant-server servant-multipart wai-extra warp ])\"\n</code></pre>\n"}], "owner": {"reputation": 1818, "user_id": 1955231, "user_type": "registered", "accept_rate": 22, "profile_image": "https://graph.facebook.com/100002848311925/picture?type=large", "display_name": "Agnishom Chattopadhyay", "link": "https://stackoverflow.com/users/1955231/agnishom-chattopadhyay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1531758452, "creation_date": 1531732279, "question_id": 51358311, "link": "https://stackoverflow.com/questions/51358311/how-to-configure-servant-multipart-to-allow-longer-file-names", "title": "How to configure servant-multipart to allow longer file names?", "body": "<p>I have some <code>servant-multipart</code> endpoint which is defined with something like <code>MultipartForm Mem (MultipartData Mem)</code>. However, this endpoint does not let me upload long-named files because of <a href=\"https://hackage.haskell.org/package/wai-extra-3.0.22.1/docs/Network-Wai-Parse.html#v:defaultParseRequestBodyOptions\" rel=\"nofollow noreferrer\"><code>defaultParseRequestBodyOptions</code></a>.</p>\n\n<p>Somehow, I want to replace <code>Mem</code> with some <code>Mem'</code> which is associated with <code>noLimitParseRequestBodyOptions</code>, but I am not able to figure out how to do this. How do I use servant-multipart endpoints with this option from <code>Network.Wai.Parse</code>?</p>\n\n<p>The <code>Multipart</code> type in the form is parametrised by <code>tag</code>, which has two implemented values in the <code>Servant.Multipart</code> module, <code>Tmp</code> and <code>Mem</code>. Now, <code>Mem</code> is an instance of <code>MultipartBackend</code> which has an associated type <code>MultipartBackendOptions</code>. I am guessing I have to modify something here to tweak the relevant <code>ParseRequestBodyOptions</code>. </p>\n"}, {"tags": ["haskell", "syntax", "let"], "comments": [{"owner": {"reputation": 6190, "user_id": 3523446, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/268d77718b0875284cdfff02b4ec54b5?s=128&d=identicon&r=PG&f=1", "display_name": "qxg", "link": "https://stackoverflow.com/users/3523446/qxg"}, "edited": false, "score": 4, "creation_date": 1531716121, "post_id": 51354665, "comment_id": 89681781, "body": "That&#39;s the syntax. Maybe you just want <code>[x * x | x &lt;- [5, 3, 2]]</code>."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1531748680, "post_id": 51354665, "comment_id": 89698712, "body": "Note that if you wanted a list with 3 elements (rather than a list containing a single 3-element tuple), you should&#39;ve written <code>let square x = x * x in [square 5, square 3, square 2]</code>"}], "answers": [{"tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": true, "score": 5, "last_activity_date": 1531716141, "creation_date": 1531716141, "answer_id": 51354699, "question_id": 51354665, "link": "https://stackoverflow.com/questions/51354665/why-do-we-need-to-put-let-in-front-of-a-function-in-a-list/51354699#51354699", "title": "Why do we need to put let in front of a function in a list", "body": "<p>List is created from <em>expressions</em>. Expression for introduction local variable name should start with <code>let</code> (or, more specifically, should use <code>let ... in</code> syntax). <code>square x = x * x</code> is a top-level function declaration.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 51354699, "answer_count": 1, "score": 0, "last_activity_date": 1531716141, "creation_date": 1531715858, "last_edit_date": 1531716050, "question_id": 51354665, "link": "https://stackoverflow.com/questions/51354665/why-do-we-need-to-put-let-in-front-of-a-function-in-a-list", "title": "Why do we need to put let in front of a function in a list", "body": "<p>This is the original function</p>\n\n<pre><code>[let square x = x * x in (square 5, square 3, square 2)]\n</code></pre>\n\n<p>I tried to remove let from the line above, but it doesn't work. </p>\n\n<pre><code>[square x = x * x in (square 5, square 3, square 2)]\n\n&lt;interactive&gt;:21:11: error:\n    parse error on input \u2018=\u2019\n    Perhaps you need a 'let' in a 'do' block?\n    e.g. 'let x = 5' instead of 'x = 5'\n</code></pre>\n\n<p>Why let is necessary to be there?</p>\n"}, {"tags": ["haskell", "lambda-calculus", "type-theory"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 3, "creation_date": 1531709391, "post_id": 51353207, "comment_id": 89680480, "body": "What does &quot;CC&quot; mean? Calculus of constructions?"}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 1, "last_activity_date": 1531709415, "creation_date": 1531709415, "answer_id": 51353966, "question_id": 51353207, "link": "https://stackoverflow.com/questions/51353207/what-is-a-clean-algorithm-to-recover-a-cc-term-from-an-untyped-one-and-its-cc-ty/51353966#51353966", "title": "What is a clean algorithm to recover a CC term from an untyped one and its CC type?", "body": "<p>It seems you are asking about type inference in a system more expressive than System F, which is <a href=\"https://en.wikipedia.org/wiki/System_F\" rel=\"nofollow noreferrer\">known to be undecidable</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 4, "last_activity_date": 1531732049, "last_edit_date": 1531732049, "creation_date": 1531730725, "answer_id": 51357858, "question_id": 51353207, "link": "https://stackoverflow.com/questions/51353207/what-is-a-clean-algorithm-to-recover-a-cc-term-from-an-untyped-one-and-its-cc-ty/51357858#51357858", "title": "What is a clean algorithm to recover a CC term from an untyped one and its CC type?", "body": "<p>You can't have beta redexes in the input, because you can't principally infer types for lambdas, but otherwise it's just standard bidirectional type checking. If it's known that the input is well-typed with the type, then you can skip conversion checking. Pseudocode:</p>\n\n<pre><code>check : Term \u2192 Type \u2192 Cxt \u2192 CCTerm\ncheck (\u03bb x. t) ((x : A) \u2192 B) \u0393 = \u03bb (x : A). check t B (\u0393, x : A)\ncheck t        A             \u0393 = fst (infer t \u0393) -- no conv check\n\ninfer : Term \u2192 Cxt \u2192 (CCTerm, Type)\ninfer (\u03bb x.t) \u0393 = undefined\ninfer x       \u0393 = (x, lookup x \u0393)\ninfer (t u)   \u0393 = (t' u', B[x \u21a6 u'])\n  where (t', ((x : A) \u2192 B)) = infer t \u0393\n        u' = check u A \u0393\n</code></pre>\n\n<p>(Convert this to de Bruijn indices and possiby faster <code>All</code> substitution). I find it a bit weird that <code>Star</code> and <code>All</code> are not in <code>Term</code>, but those could be trivially included in <code>infer</code> as well.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 51357858, "answer_count": 2, "score": 0, "last_activity_date": 1531732049, "creation_date": 1531700214, "question_id": 51353207, "link": "https://stackoverflow.com/questions/51353207/what-is-a-clean-algorithm-to-recover-a-cc-term-from-an-untyped-one-and-its-cc-ty", "title": "What is a clean algorithm to recover a CC term from an untyped one and its CC type?", "body": "<p>Suppose I have an untyped term, such as:</p>\n\n<pre><code>data Term = Lam Term | App Term Term | Var Int\n\n-- \u03bb succ . \u03bb zero . succ zero\nc1 = (Lam (Lam (App (Var 1) (Var 0)))\n\n-- \u03bb succ . \u03bb zero . succ (succ zero)\nc2 = (Lam (Lam (App (Var 1) (App (Var 1) (Var 0))))\n\n-- \u03bb succ . \u03bb zero . succ (succ (succ zero))\nc3 = (Lam (Lam (App (Var 1) (App (Var 1) (App (Var 1) (Var 0)))))\n\n-- \u03bb cons . \u03bb nil . cons 1 (cons 2 (cons 3 nil))\nterm_untyped = (Lam (Lam (App (App (Var 1) c1) (App (App (Var 1) c2 (App (App (Var 1) c3) Nil) \n</code></pre>\n\n<p>And its CC type:</p>\n\n<pre><code>data Type = Set | All Type Type | Var Int\n\n-- \u2200 (P : *) -&gt; \u2200 (Succ : P -&gt; P) -&gt; \u2200 (Zero : P) -&gt; P\nnat = All(Set, All(All(Var(0), Var(1)), All(Var(0), Var(1))))\n\n-- \u2200 (P : *) -&gt; \u2200 (Cons : x -&gt; P -&gt; P) -&gt; \u2200 (Nil : P) -&gt; P\nlist x = All(Set, All(All(x, All(Var(0), Var(1))), All(Var(0), Var(0))))\n\n-- term_type\nterm_type = list nat\n</code></pre>\n\n<p>Is there a clean algorithm that will recover the CC term corresponding to the untyped one? I.e.,</p>\n\n<pre><code>data CCTerm \n   = Lam CCTerm CCTerm \n   | All CCTerm CCTerm \n   | App CCTerm CCTerm \n   | Set \n   | Var Int\n\nterm_typed :: Term -&gt; CCTerm\nterm_typed = from_untyped term_type term_untyped\n\n-- As the result, typed_term would be:\n-- \u03bb (P : *) -&gt;\n-- \u03bb (Cons : \u2200 (x : (\u2200 (Q : *) -&gt; (Q -&gt; Q) -&gt; Q -&gt; Q)) -&gt; P -&gt; P) -&gt;\n-- \u03bb (Nil : P) -&gt;\n-- ( Cons (\u03bb (Q : *) -&gt; \u03bb (Succ : Q -&gt; Q) -&gt; (Zero : Q) -&gt; Succ Zero)\n-- ( Cons (\u03bb (Q : *) -&gt; \u03bb (Succ : Q -&gt; Q) -&gt; (Zero : Q) -&gt; Succ (Succ Zero))\n-- ( Cons (\u03bb (Q : *) -&gt; \u03bb (Succ : Q -&gt; Q) -&gt; (Zero : Q) -&gt; Succ (Succ (Succ Zero)))\n--   Nil)))\n</code></pre>\n\n<p>I tried some things, but soon noticed it is not obvious how to pass the type around. Specifically, the Lam case seems to <strong>require</strong> a forall type and append it to context, the function of the App case seems to <strong>produce</strong> a forall type which is used by the argument, and the Var case seems to <strong>query</strong> a type on context. That asymmetry made my code a little messy, so I wonder if there is an obvious way to implement this.</p>\n"}, {"tags": ["haskell", "build", "compilation", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": false, "score": 3, "last_activity_date": 1595272934, "last_edit_date": 1595272934, "creation_date": 1531706442, "answer_id": 51353687, "question_id": 51352885, "link": "https://stackoverflow.com/questions/51352885/how-do-you-set-the-executable-output-location-for-a-haskell-project-built-with-s/51353687#51353687", "title": "How do you set the executable output location for a Haskell project built with Stack?", "body": "<p><code>stack path --local-install-root</code> outputs path to build artifact. You just need to add <code>/bin/name-of-my-exe</code> to this path to get path of executable. And then you just run simple one-line bash script to copy executable to desired location.</p>\n<p>Full command for completeness:</p>\n<pre><code>cp &quot;$(stack path --local-install-root)/bin/name-of-my-exe&quot; ~/.local/bin/name-of-my-exe\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": true, "score": 10, "last_activity_date": 1531741379, "creation_date": 1531741379, "answer_id": 51361039, "question_id": 51352885, "link": "https://stackoverflow.com/questions/51352885/how-do-you-set-the-executable-output-location-for-a-haskell-project-built-with-s/51361039#51361039", "title": "How do you set the executable output location for a Haskell project built with Stack?", "body": "<p>You can use the <code>--copy-bins</code> flag (or the <code>install</code> command) to copy the executables to some output directory. That destination directory can be controlled with <code>--local-bin-path</code>, but defaults to <code>~/.local/bin</code> on POSIX systems.</p>\n"}], "owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1878, "favorite_count": 0, "accepted_answer_id": 51361039, "answer_count": 2, "score": 12, "last_activity_date": 1595272934, "creation_date": 1531696394, "last_edit_date": 1531751512, "question_id": 51352885, "link": "https://stackoverflow.com/questions/51352885/how-do-you-set-the-executable-output-location-for-a-haskell-project-built-with-s", "title": "How do you set the executable output location for a Haskell project built with Stack?", "body": "<p>While <code>build</code>ing my Haskell programs with Stack, I'm trying to get the executable to be written to <code>project/dist/</code> but no matter what command line arguments I use or config files I change, it always ends up in <code>project/.stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/project/</code>.</p>\n\n<p>After spending a decent amount of time looking at the command line arguments for the <code>stack</code> command, as well as options in <code>project.cabal</code>, <code>Setup.hs</code>, and <code>stack.yaml</code>, I can't seem to find how to configure the output location of <code>stack build</code>.</p>\n\n<p>How do you configure the executable output location for <code>stack build</code>?</p>\n"}, {"tags": ["haskell", "ghc", "type-families"], "answers": [{"comments": [{"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 1, "creation_date": 1532288491, "post_id": 51353189, "comment_id": 89905809, "body": "Btw., <code>unsafeCoerce Refl</code> seems to work as a proof that doesn&#39;t incur any overhead at run-time."}], "tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": true, "score": 3, "last_activity_date": 1531700841, "last_edit_date": 1531700841, "creation_date": 1531700057, "answer_id": 51353189, "question_id": 51352586, "link": "https://stackoverflow.com/questions/51352586/enrich-constraint-solver-with-own-proofs/51353189#51353189", "title": "Enrich constraint solver with own proofs", "body": "<p>Coincident type family overlap is indeed still present in GHC Haskell, as documented <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#compatibility-and-apartness-of-type-family-equations\" rel=\"nofollow noreferrer\">here</a>. The examples from the documentation, and the blog post you linked to, are still accepted by GHC 8.4.3.</p>\n\n<hr>\n\n<p>However, I don't think that coincident overlap is going to help you here, because the RHSs aren't (can't) be equal according to the syntactic equality check that GHC uses. Basically, for the coincident overlap type family idea would work, GHC would already have to know the property that you want to \"prove\".</p>\n\n<p>To actually prove it, you will need to introduce the type equality that you want into the typing environment whenever you need to use this fact. One way to do this is using <code>:~:</code> from <code>Data.Type.Equality</code>:</p>\n\n<pre><code>data a :~: b where  -- See Note [The equality types story] in TysPrim\n  Refl :: a :~: a\n</code></pre>\n\n<p>The basic idea here is that when you make a value of type <code>a :~: b</code> by using the <code>Refl</code> constructor, GHC must know that <code>a ~ b</code>. When you later pattern-match on this <code>Refl</code> constructor, you are re-introducing this equality into GHC's typing environment. You can use this to build up an inductive proof.</p>\n\n<p>In order to be able to build an inductive proof, however, you will need to be able to branch on the value of the <code>Nat</code>, which you can't do while it is entirely at the type level. To get around this, we can introduce a \"singleton\" GADT:</p>\n\n<pre><code>data SNat (n :: Nat) where\n  SZ :: SNat 'Z\n  SS :: SNat n -&gt; SNat ('S n)\n</code></pre>\n\n<p>When you pattern-match on a value of type <code>SNat</code>, you will introduce information into the typing environment about the value of the type-level natural, due to the GADT structure of the <code>n</code> type variable.</p>\n\n<p>This means that we can write a function with a type like this:</p>\n\n<pre><code>wrapMaybeComm' :: forall n a. SNat n\n               -&gt; WrapMaybes n (Maybe a) :~: Maybe (WrapMaybes n a)\n</code></pre>\n\n<p>The idea here is that if you give it a (value-level witness to) a type-level natural <code>n</code>, it will return a witness to the fact that <code>WrapMaybes n (Maybe a)</code> is the same thing as <code>Maybe (WrapMaybes n a)</code>.  When you pattern-match on that witness, GHC will be convinced that the fact is true, and be able to use it.</p>\n\n<p>We can now write a definition for <code>wrapMaybeComm'</code> that looks very much like an inductive proof of the necessary fact.  The base case is <code>0</code>:</p>\n\n<pre><code>wrapMaybeComm' SZ = Refl\n</code></pre>\n\n<p>When <code>n = 0</code>, GHC is immediately able to see that <code>Maybe a ~ Maybe a</code>.</p>\n\n<p>In the inductive case, we will need to make a call to <code>wrapMaybeComm'</code>:</p>\n\n<pre><code>wrapMaybeComm' (SS m) = case wrapMaybeComm' @_ @a m of Refl -&gt; Refl\n</code></pre>\n\n<p>Pattern matching on the <code>Refl</code> tells GHC that <code>WrapMaybes m (Maybe a) ~ Maybe (WrapMaybes m a)</code>, where <code>n ~ 'S m</code>.  With this, GHC can see that </p>\n\n<pre><code>  WrapMaybes n (Maybe a)\n~ WrapMaybes ('S m) (Maybe a)            {- defn. of m -}\n~ Maybe (WrapMaybes m (Maybe a))         {- defn. of WrapMaybes -}\n~ Maybe (Maybe (WrapMaybes m (Maybe a))) {- IH -}\n~ Maybe (WrapMaybes ('S m) (Maybe a))    {- defn. of WrapMaybes -}\n~ Maybe (WrapMaybes n (Maybe a))         {- defn of m -}\n</code></pre>\n\n<p>And so knows that the <code>Refl</code> on the right side typechecks.</p>\n\n<hr>\n\n<p>If you do not want to have to carry around <code>SNat</code>s all over the place, you can replace them with (sometimes quieter) typeclass dictionaries via the definition of a <code>KnownNat</code> class like this:</p>\n\n<pre><code>class KnownNat (n :: Nat) where\n  getSNat :: SNat n\ninstance KnownNat 'Z where\n  getSNat = SZ\ninstance KnownNat n =&gt; KnownNat ('S n) where\n  getSNat = SS getSNat\nwrapMaybeComm :: forall n a. (KnownNat n)\n              =&gt; WrapMaybes n (Maybe a) :~: Maybe (WrapMaybes n a)\nwrapMaybeComm = wrapMaybeComm' @n @a getSNat\n</code></pre>\n\n<p>To actually use this theorem, whenever you have an expression <code>e</code> that GHC refuses to typecheck because it doesn't know the desired equality with <code>n</code> and <code>a</code>, you can write instead <code>case wrapMaybeComm @n @a of Refl -&gt; e</code> and it should work.</p>\n\n<hr>\n\n<p>This approach can be used to teach GHC about all kinds of interesting inductive facts. In the general case, GHC of course cannot be aware of all types that are equal, as this would require it to be able to decide arbitrary theorems of a quite powerful logic system, which is impossible. However, many proofs of interesting inductive theorems can be readily converted into this style, a variant of which (without the extra singletons work) is quite common in dependently typed languages.</p>\n\n<hr>\n\n<p>Side note: to use the above, you will need a few extra GHC Haskell extensions.</p>\n\n<ul>\n<li><strong><code>-XGADTs</code></strong>: The SNat singleton has to be a GADT in order to ensure that one value inhabits every <code>SNat n</code> (specifically, the one with <code>n</code> <code>SS</code>s applied to an <code>SZ</code>).</li>\n<li><strong><code>-XScopedTypeVariables</code></strong>: This is necessary to ensure that calls to proof functions happen with the correct types.</li>\n<li><strong><code>-XTypeOperators</code></strong>: The given code uses <code>:~:</code> from <code>Data.Type.Equality</code>, which is a type operator. An equivalent definition that is not a type operator (e.g. <code>Equal a b</code> instead of <code>a :~: b</code>) could, however, have been used.</li>\n<li><strong><code>-XAllowAmbiguousTypes</code></strong>: The given definitions have what GHC calls ambiguous types (functions that need extra type signatures and/or visible type applications to disambiguate certain tyvars). This can be worked around by using more <code>Proxy</code> parameters.</li>\n<li><strong><code>-XTypeApplications</code></strong>: This (the <code>@tyvar</code> syntax) was used for convenience in specifying type variables. It should, however, be possible to replace with (somewhat more annoying/verbose) explicit type annotations.</li>\n</ul>\n"}], "owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 1, "accepted_answer_id": 51353189, "answer_count": 1, "score": 1, "last_activity_date": 1531700841, "creation_date": 1531692594, "last_edit_date": 1531693134, "question_id": 51352586, "link": "https://stackoverflow.com/questions/51352586/enrich-constraint-solver-with-own-proofs", "title": "Enrich constraint solver with own proofs", "body": "<p>I have the following type family:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE DataKinds #-}\n\ndata Nat = Z | S Nat\ntype family WrapMaybes (n :: Nat) (a :: *) :: *\ntype instance WrapMaybes Z a = a\ntype instance WrapMaybes (S n) a = Maybe (WrapMaybes n a)\n</code></pre>\n\n<p>This mostly works as expected, for example <code>WrapMaybes (S (S Z)) Int ~ Maybe (Maybe Int)</code>.</p>\n\n<p>Now, obviously (well, except maybe for reasons of termination?!) the following commuting identity holds: <code>WrapMaybes n (Maybe a) ~ Maybe (WrapMaybes n a)</code></p>\n\n<p>GHC by itself is not able to infer that property, so I'm looking for ways to add that axiom, ideally by some supplementary proof. The best I've come up with so far is <a href=\"https://typesandkinds.wordpress.com/2013/04/29/coincident-overlap-in-type-families/\" rel=\"nofollow noreferrer\">coincident overlap in type families</a>. But the proposed syntax doesn't seem to work anymore (<code>type instance where</code> triggers a syntax error), so I went with just this:</p>\n\n<pre><code>type instance WrapMaybes n (Maybe a) = Maybe (WrapMaybes n a)\n</code></pre>\n\n<p>But that makes GHC complain again:</p>\n\n<pre><code>Conflicting family instance declarations:\n  WrapMaybes 'Z a = a\n  WrapMaybes n (Maybe a) = Maybe (WrapMaybes n a)\n\nConflicting family instance declarations:\n  WrapMaybes ('S n) a = Maybe (WrapMaybes n a)\n  WrapMaybes n (Maybe a) = Maybe (WrapMaybes n a)\n</code></pre>\n\n<p>So:</p>\n\n<ol>\n<li>Is there a way to make the proposed mechanism work? E.g. How do I get rid of the syntax error?</li>\n<li>Is coincident overlap still a thing in GHC Haskell?</li>\n<li>What other mechanism is there to teach GHC the necessary axioms?</li>\n</ol>\n"}, {"tags": ["haskell", "parallel-processing", "cabal"], "comments": [{"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 1, "creation_date": 1531718341, "post_id": 51352517, "comment_id": 89682363, "body": "I believe you need to compile your program with the <code>-rtsopts</code> flag to enable the passing of RTS arguments on the command line. Reference: <a href=\"https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/runtime-control.html\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "is_accepted": true, "score": 4, "last_activity_date": 1531718677, "creation_date": 1531718677, "answer_id": 51355037, "question_id": 51352517, "link": "https://stackoverflow.com/questions/51352517/cabal-seems-unable-to-build-executable-that-runs-in-parallel/51355037#51355037", "title": "Cabal seems unable to build executable that runs in parallel", "body": "<p>Maybe try running:</p>\n\n<pre><code>time cabal new-run sudoku -- par 16000 +RTS -N2\n</code></pre>\n\n<p>The <code>--</code> usually says \"these flags belong to the executed program\".</p>\n"}], "owner": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 158, "favorite_count": 0, "accepted_answer_id": 51355037, "answer_count": 1, "score": 1, "last_activity_date": 1531718677, "creation_date": 1531691681, "last_edit_date": 1531692102, "question_id": 51352517, "link": "https://stackoverflow.com/questions/51352517/cabal-seems-unable-to-build-executable-that-runs-in-parallel", "title": "Cabal seems unable to build executable that runs in parallel", "body": "<p>I'm currently working through the book 'Parallel and Concurrent Programming in Haskell', and I'm trying to get one of the first examples to run on my machine, it is effectively some sudoku solver algorithm that the book shows how to use haskell to divide solving multiple iterations of the solver across two cores. Here is the code:</p>\n\n<pre><code>module Main where\n\nimport           Control.DeepSeq\nimport           Control.Monad\nimport           Control.Parallel.Strategies\nimport qualified Data.Maybe as M\nimport           Data.Monoid ((&lt;&gt;))\nimport           Sudoku\nimport           System.Environment\n\ndata ExecutionMode\n  = ExecPar\n  | ExecSeq\n\nmain :: IO ()\nmain = do\n  execMode &lt;- getExecMode\n  filepath &lt;- getFilepath\n  attemptRun execMode filepath\n  where\n    attemptRun execMode filepath =\n      case (execMode, filepath) of\n        (Just mode, Just file) -&gt; sudoku mode file\n        (Nothing, _) -&gt; putStrLn \"Please provide valid execution mode: 'par' / 'seq'\"\n        _ -&gt; putStrLn \"Please choose a file, 1000 / 16000 / 49151\"\n\n    getExecMode =\n      (parseExecMode &lt;=&lt; M.listToMaybe) &lt;$&gt; getArgs\n\n    getFilepath =\n      (parseFilepath &lt;=&lt; M.listToMaybe . drop 1) &lt;$&gt; getArgs\n\n    parseExecMode \"par\" = Just ExecPar\n    parseExecMode \"seq\" = Just ExecSeq\n    parseExecMode _ = Nothing\n\n    parseFilepath str =\n      (\\n -&gt; \"sudoku17.\" &lt;&gt; n &lt;&gt; \".txt\") &lt;$&gt; case str of\n        \"1000\" -&gt; Just \"1000\"\n        \"16000\" -&gt; Just \"16000\"\n        \"49151\" -&gt; Just \"49151\"\n        _ -&gt; Nothing\n\nsudoku :: ExecutionMode -&gt; String -&gt; IO ()\nsudoku execMode filepath = determineMode\n  where\n    determineMode =\n      case execMode of\n        ExecPar -&gt; runParallel\n        ExecSeq -&gt; runSequential\n\n    runParallel = do\n      (as, bs) &lt;- (\\p -&gt; splitAt (length p `div` 2) p) . lines &lt;$&gt; readFile (\"sudoku/data/\" &lt;&gt; filepath)\n      print . length . filter M.isJust . runEval $ do\n        as' &lt;- rpar (force (map solve as))\n        bs' &lt;- rpar (force (map solve bs))\n        _ &lt;- rseq as'\n        _ &lt;- rseq bs'\n        return (as' ++ bs')\n      return ()\n\n    runSequential = do\n      puzzles &lt;- lines &lt;$&gt; readFile (\"sudoku/data/\" &lt;&gt; filepath)\n      print . length . filter M.isJust $ solve &lt;$&gt; puzzles\n      return ()\n</code></pre>\n\n<p>The algorithm <code>solve</code> comes from <code>Sudoku</code>, which has been lifted from the book and I am pretty sure is immaterial to my issue here.</p>\n\n<p>So here is what happens when I try and run this code with cabal:</p>\n\n<pre><code>\u03bb time cabal new-run sudoku par 16000 +RTS -N2\nUp to date\n16000\ncabal new-run sudoku par 16000 +RTS -N2  17.82s user 0.15s system 100% cpu 17.954 total\n</code></pre>\n\n<p>And then in parallel:</p>\n\n<pre><code>\u03bb time cabal new-run sudoku seq 16000 +RTS -N2\nUp to date\n16000\ncabal new-run sudoku seq 16000 +RTS -N2  17.50s user 0.07s system 100% cpu 17.546 total\n</code></pre>\n\n<p>Note there is no difference in time. Here is what happens when I compile using <code>ghc</code>:</p>\n\n<pre><code>\u03bb ghc -O2 sudoku/Main.hs -threaded -v src/Sudoku.hs\n\u03bb time sudoku/Main par 16000 +RTS -N2\n16000\nsudoku/Main par 16000 +RTS -N2  19.59s user 0.28s system 198% cpu 10.034 total\n</code></pre>\n\n<p>And with the <code>seq</code> flag it takes longer, as you would expect:</p>\n\n<pre><code>\u03bb time sudoku/Main seq 16000 +RTS -N2\n16000\nsudoku/Main seq 16000 +RTS -N2  19.99s user 1.44s system 109% cpu 19.557 total\n</code></pre>\n\n<p>Here is my <code>.cabal</code> file:</p>\n\n<pre><code>build-type:          Simple\nextra-source-files:  ChangeLog.md\ncabal-version:       &gt;=1.10\n\nlibrary\n  build-depends:       base &gt;=4.8 &amp;&amp; &lt;4.9\n                     , array\n                     , time\n  hs-source-dirs:      src\n  exposed-modules:     Sudoku\n  default-language:    Haskell2010\n\nexecutable sudoku\n  main-is:             Main.hs\n  ghc-options:         -O2 -Wall -Werror -threaded\n  build-depends:       base &gt;=4.8 &amp;&amp; &lt;4.9\n                     , deepseq\n                     , parallel\n                     , parallel-and-concurrent-programming-in-haskell\n  hs-source-dirs:      sudoku\n  default-language:    Haskell2010\n</code></pre>\n\n<p>Am I missing something here? is this the correct behaviour for cabal? Or has something gone wrong between <code>ghc-options</code> and <code>ghc</code> perhaps?</p>\n"}, {"tags": ["haskell", "neural-network", "feed-forward"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531673560, "post_id": 51350281, "comment_id": 89673191, "body": "For lists <code>fmap = map</code>. <code>fmap</code> is a generalization of <code>map</code>."}, {"owner": {"reputation": 3885, "user_id": 652528, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a580420b66f89e76e1fb9a368f785b3f?s=128&d=identicon&r=PG", "display_name": "geckos", "link": "https://stackoverflow.com/users/652528/geckos"}, "edited": false, "score": 0, "creation_date": 1531673720, "post_id": 51350281, "comment_id": 89673220, "body": "<code>fmap</code> is equal to <code>map</code> for List, see <a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses#the-functor-typeclass\" rel=\"nofollow noreferrer\">learnyouahaskell.com/&hellip;</a>, look for <code>fmap = map</code>"}, {"owner": {"reputation": 3885, "user_id": 652528, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a580420b66f89e76e1fb9a368f785b3f?s=128&d=identicon&r=PG", "display_name": "geckos", "link": "https://stackoverflow.com/users/652528/geckos"}, "edited": false, "score": 0, "creation_date": 1531674004, "post_id": 51350281, "comment_id": 89673264, "body": "<code>(fmap tanh .)</code> gives you <code>(Floating b, Functor f) =&gt; (a -&gt; f b) -&gt; a -&gt; f b</code> if you restrict it to lists by using map you get <code>(map tanh .) :: Floating b =&gt; (a -&gt; [b]) -&gt; a -&gt; [b]</code>"}, {"owner": {"reputation": 2570, "user_id": 4142266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rMCN5.png?s=128&g=1", "display_name": "mschmidt", "link": "https://stackoverflow.com/users/4142266/mschmidt"}, "edited": false, "score": 3, "creation_date": 1531676538, "post_id": 51350281, "comment_id": 89673833, "body": "For the <code>(.) .</code> have a look at <a href=\"https://stackoverflow.com/questions/20279306/what-does-f-g-mean-in-haskell\">this question</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1531679333, "post_id": 51350281, "comment_id": 89674606, "body": "<code>(fmap tanh . ) . previousWeights</code> is a complicated way to write <code>\\x y -&gt; map tanh (previousWeights x y)</code>. Hence, it generates the previous weights and then takes the tanh of each of them."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1532437117, "post_id": 51350281, "comment_id": 89966420, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/20279306/what-does-f-g-mean-in-haskell\">What does (f .) . g mean in Haskell?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1894, "user_id": 412417, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/880a205c1958574d83803d5e30da95ca?s=128&d=identicon&r=PG&f=1", "display_name": "MCH", "link": "https://stackoverflow.com/users/412417/mch"}, "is_accepted": true, "score": 2, "last_activity_date": 1574181567, "creation_date": 1574181567, "answer_id": 58938937, "question_id": 51350281, "link": "https://stackoverflow.com/questions/51350281/fmap-with-two-functions/58938937#58938937", "title": "fmap with two functions", "body": "<p>It is much easier to read if we give the parameters names and remove the consecutive <code>.</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>feedForward :: [Float] -&gt; [([Float], [[Float]])] -&gt; [Float]\nfeedForward actual_value bias_and_weights =\n  foldl\n  (\\accumulator -- the accumulator, it is initialized as actual_value\n    bias_and_weight -&gt; -- a single value from bias_and_weights\n     map tanh $ previousWeights accumulator bias_and_weight)\n  actual_value -- initialization value\n  bias_and_weights -- list we are folding over\n</code></pre>\n\n<p>It might also help to know that type signature of <code>foldl</code> in this case will be <code>([Float] -&gt; ([Float], [[Float]])-&gt; [Float]) -&gt; [Float] -&gt; [([Float], [[Float]])] -&gt; [Float]</code>.</p>\n\n<p>Note: This style of code you have found, while fun to write, can be a challenge for others to read and I generally do not recommend you write this way if for other than fun.</p>\n"}], "owner": {"reputation": 73, "user_id": 5368620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71cd5c45fc1ae2daf61dc8d6496b36d3?s=128&d=identicon&r=PG&f=1", "display_name": "nat", "link": "https://stackoverflow.com/users/5368620/nat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 58938937, "answer_count": 1, "score": 1, "last_activity_date": 1574181567, "creation_date": 1531673286, "last_edit_date": 1532436906, "question_id": 51350281, "link": "https://stackoverflow.com/questions/51350281/fmap-with-two-functions", "title": "fmap with two functions", "body": "<p>Im writing a neural network using haskell. Im basing my code on this <a href=\"http://www-cs-students.stanford.edu/~blynn/haskell/brain.html\" rel=\"nofollow noreferrer\">http://www-cs-students.stanford.edu/~blynn/haskell/brain.html</a> .\nI adapted the feedforward method in the following way:</p>\n\n<pre><code>feedForward :: [Float] -&gt; [([Float], [[Float]])] -&gt; [Float]\nfeedForward = foldl ((fmap tanh . ) . previousWeights)\n</code></pre>\n\n<p>Where previousWeights is:</p>\n\n<pre><code>previousWeights :: [Float] -&gt; ([Float], [[Float]]) -&gt; [Float]\npreviousWeights actual_value (bias, weights) = zipWith (+) bias (map (sum.(zipWith (*) actual_value)) weights)\n</code></pre>\n\n<p>I don't really understand what <code>fmap tanh .</code> From what I read fmap applied to two functions is like a composition. If i change the <code>fmap</code> for <code>map</code> I get the same result.</p>\n"}, {"tags": ["parsing", "haskell", "binary", "bit"], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 2, "last_activity_date": 1531670186, "creation_date": 1531670186, "answer_id": 51349952, "question_id": 51349811, "link": "https://stackoverflow.com/questions/51349811/haskell-parse-binary-stream/51349952#51349952", "title": "Haskell - Parse binary stream", "body": "<p><code>header = parse_header</code> is only giving a new name to the parser. You need a function to <em>run</em> the parser, <a href=\"https://hackage.haskell.org/package/binary-0.8.5.1/docs/Data-Binary-Get.html#v:runGet\" rel=\"nofollow noreferrer\">there's one here</a> (here choosing <code>runGet</code> for simplicity, but you should prefer the other one, to handle the error case more easily):</p>\n\n<pre><code>runGet :: Get a -&gt; ByteString -&gt; a\n</code></pre>\n\n<p>Note that it takes a <em>lazy</em> <code>ByteString</code> (<code>Data.ByteString.Lazy</code>) instead of a <em>strict</em> one (<code>Data.ByteString</code>).</p>\n\n<pre><code>...\nimport Data.ByteString.Lazy (toLazy)\n\n...\n\nmain = do\n  fstr &lt;- BS.readFile \"data/hbin.bin\"\n  let header = runGet parse_header (fromStrict fstr)\n  print header\n  putStrLn \"End\"\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user1242770"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1531670186, "creation_date": 1531668983, "question_id": 51349811, "link": "https://stackoverflow.com/questions/51349811/haskell-parse-binary-stream", "title": "Haskell - Parse binary stream", "body": "<p>I'm new to Haskell, so I'm probably missing something very simple.</p>\n\n<p>I'm having a supprisingly hard time trying to parse a structured binary stream.\nThe binary stream has varying and conditional parts (like a field which determines how many items follow it (<code>ncount</code>), or what type of message follows it (<code>type</code>)).</p>\n\n<p>To get a simple working example, I'm trying to parse this hypothetical binary structure:</p>\n\n<pre><code>+----------------+---------------+--------------\n| Magic (8 bits) | type (3 bits) | type message...\n+----------------+---------------+--------------\nType 1:\n+----------------+-------------+-------------+-----------------+\n|ncount (3 bits) | n1 (3 bits) | n1 (3 bits) | nN (3 bits)...  |\n+----------------+-------------+-------------+-----------------+\nType 2:\n+----------------+---------------+\n|  num1 (7 bits) | num2 (7 bits) |\n+----------------+---------------+\n...\n</code></pre>\n\n<p>My code so far:</p>\n\n<pre><code>{-# LANGUAGE RecordWildCards #-}\n\nmodule Main where\n\nimport Data.Bits\nimport Data.Binary                      as B\nimport qualified Data.Binary.Bits.Get   as BG\nimport qualified Data.ByteString        as BS\n\ndata Header = Header {\n     magic  :: Word8\n    ,mtype  :: Word8\n    ,num1   :: Word8\n    ,num2   :: Word8\n} deriving (Show)\n\n--instance Show (Get Header) where\n--    show (Header {..}) = show . magic\n\nparse_header :: B.Get Header\nparse_header = BG.runBitGet parse_header'\n\n-- Example, assume type 2 for now\nparse_header' :: BG.BitGet Header\nparse_header' = do\n    magic   &lt;- BG.getWord8 8\n    mtype   &lt;- BG.getWord8 3\n    num1    &lt;- BG.getWord8 7\n    num2    &lt;- BG.getWord8 7\n    return $ Header magic mtype num1 num2\n\nmain :: IO ()\nmain = do\n    putStrLn \"Start\"\n\n    -- File containing binary stream\n    fstr &lt;- BS.readFile \"data/hbin.bin\"\n\n    let header = parse_header\n        in \n            -- How do I print out Header?\n            print header\n            -- * No instance for (Show (Get Header)) \n            -- arising from a use of `print'\n            -- * In the expression: print header\n\n    putStrLn \"\\nEnd\"\n</code></pre>\n\n<p>In which I get the error:</p>\n\n<pre><code>* No instance for (Show (Get Header)) arising from a use of `print'\n* In the expression: print header\n</code></pre>\n\n<p>Obviously, I plan to parse this recursively, but for now I can't even see a value I've read.</p>\n\n<p>I've followed <a href=\"https://wiki.haskell.org/Dealing_with_binary_data\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Dealing_with_binary_data</a> but this uses Data.Binary.Strict (binary-strict) which doesn't compile on Windows (atleast on mine). </p>\n\n<p>I've also followed <a href=\"https://hackage.haskell.org/package/binary-bits-0.5/docs/Data-Binary-Bits-Get.html\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/binary-bits-0.5/docs/Data-Binary-Bits-Get.html</a> but it doesn't show how to use values you have gotten with <code>getWord8</code> (Do I need to <code>put</code> them into an Int to read them as decimal?)</p>\n\n<p>Again, I'm new to Haskell and not familiar with Monads (which I believe Get is).</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "edited": false, "score": 0, "creation_date": 1531650443, "post_id": 51347460, "comment_id": 89667596, "body": "Can you confirm that <code>&#47;Users&#47;me&#47;.local&#47;bin&#47;stack --version</code> gives the incorrect version?"}, {"owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "reply_to_user": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "edited": false, "score": 0, "creation_date": 1531651203, "post_id": 51347460, "comment_id": 89667731, "body": "@Probie Updated above, which is even more confusing"}], "answers": [{"comments": [{"owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531651962, "post_id": 51347629, "comment_id": 89667911, "body": "No dice, neither <code>hash stack</code> nor <code>hash -r</code> nor <code>hash -r stack</code> changed the output of <code>stack --version</code>"}, {"owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531652078, "post_id": 51347629, "comment_id": 89667942, "body": "Also worth nothing that I&#39;ve closed and reopened bash any number of times since I first tried this upgrade, and it had been quite a while since I first encountered this issue that I decided to post about it here"}, {"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "reply_to_user": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531652080, "post_id": 51347629, "comment_id": 89667943, "body": "What does <code>type stack</code> give you?"}, {"owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531652184, "post_id": 51347629, "comment_id": 89667977, "body": "Now we&#39;re onto something. <code>stack is hashed (&#47;Users&#47;me&#47;&lt;path-that-isn&#39;t-in-.local&gt;&#47;stack)</code>"}, {"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "reply_to_user": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531652324, "post_id": 51347629, "comment_id": 89668006, "body": "<code>which</code> ignores the shell&#39;s hash table. Are you running some sort of strange shell, or just bash?"}, {"owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531652394, "post_id": 51347629, "comment_id": 89668024, "body": "I&#39;m running iTerm 2"}, {"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "reply_to_user": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531652474, "post_id": 51347629, "comment_id": 89668051, "body": "What does <code>echo $0</code> say?"}, {"owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531652535, "post_id": 51347629, "comment_id": 89668068, "body": "It says <code>-bash</code>"}, {"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "reply_to_user": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "edited": false, "score": 0, "creation_date": 1531652646, "post_id": 51347629, "comment_id": 89668099, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/176004/discussion-between-probie-and-theenvironmentalist\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "is_accepted": false, "score": 2, "last_activity_date": 1531653711, "last_edit_date": 1531653711, "creation_date": 1531651598, "answer_id": 51347629, "question_id": 51347460, "link": "https://stackoverflow.com/questions/51347460/haskell-stack-wont-upgrade/51347629#51347629", "title": "Haskell stack won&#39;t upgrade", "body": "<p>Edit:</p>\n\n<p>It turns out it's just that <code>which</code> isn't returning the correct result as far as bash is concerned. <a href=\"https://stackoverflow.com/questions/37579921/bash-which-adb-returns-nothing-but-command-v-adb-returns-what-id-expect\">It might be related to this</a></p>\n\n<hr>\n\n<p>In all likelihood it's just that bash has cached the location of stack, and isn't using the new one.</p>\n\n<p>Try running <code>hash stack</code> and then trying it again. (Or if that fails <code>hash -r</code> to empty the cache)</p>\n"}], "owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1531653711, "creation_date": 1531650305, "last_edit_date": 1531651183, "question_id": 51347460, "link": "https://stackoverflow.com/questions/51347460/haskell-stack-wont-upgrade", "title": "Haskell stack won&#39;t upgrade", "body": "<p>I'm trying to upgrade my copy of Haskell's stack, as shown below:</p>\n\n<pre><code>mac:~ me$ stack --version\nVersion 1.4.0, Git revision e714f1dd3fade19496d91bd6a017e435a96a6bcd (4640 commits) x86_64 hpack-0.17.0\nmac:~ me$ stack upgrade\nCurrent Stack version: 1.4.0, available download version: 1.7.1\nNewer version detected, downloading\nQuerying for archive location for platform: osx-x86_64-static\nQuerying for archive location for platform: osx-x86_64\nDownloading from: https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-osx-x86_64.tar.gz\nDownload complete, testing executable\nVersion 1.7.1, Git revision 681c800873816c022739ca7ed14755e85a579565 (5807 commits) x86_64 hpack-0.28.2\nNew stack executable available at /Users/me/.local/bin/stack\nmac:~ me$ stack --version\nVersion 1.4.0, Git revision e714f1dd3fade19496d91bd6a017e435a96a6bcd (4640 commits) x86_64 hpack-0.17.0\nmac:~ me$ which stack\n/Users/me/.local/bin/stack\n</code></pre>\n\n<p>Why does <code>stack upgrade</code> seem to correctly upgrade stack, claiming to install a new version, and then even say <code>New stack executable available at /Users/me/.local/bin/stack</code>, but not actually upgrade the stack version when tested, the <code>which</code> command confirming that it is indeed the location of the new stack executable that is run?</p>\n\n<h3>Update:</h3>\n\n<p>Thanks to a suggestion from Probie, I checked whether <code>/Users/me/.local/bin/stack --version</code> reports the updated version, and <strong>it does</strong>:</p>\n\n<pre><code>mac:~ me$ /Users/me/.local/bin/stack --version\nVersion 1.7.1, Git revision 681c800873816c022739ca7ed14755e85a579565 (5807 commits) x86_64 hpack-0.28.2\n</code></pre>\n\n<p>This has me thoroughly confused, for this reason:</p>\n\n<pre><code>mac:~ me$ /Users/me/.local/bin/stack --version\nVersion 1.7.1, Git revision 681c800873816c022739ca7ed14755e85a579565 (5807 commits) x86_64 hpack-0.28.2\nmac:~ me$ which stack\n/Users/me/.local/bin/stack\nmac:~ me$ stack --version\nVersion 1.4.0, Git revision e714f1dd3fade19496d91bd6a017e435a96a6bcd (4640 commits) x86_64 hpack-0.17.0\n</code></pre>\n\n<p>Why does the version of stack run with the <code>stack</code> command show a different version from the one at the location shown by the <code>which stack</code> command?</p>\n"}, {"tags": ["haskell", "cygwin", "cabal", "wreq"], "comments": [{"owner": {"reputation": 6281, "user_id": 5105383, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/2YCB5.jpg?s=128&g=1", "display_name": "matzeri", "link": "https://stackoverflow.com/users/5105383/matzeri"}, "edited": false, "score": 0, "creation_date": 1531669000, "post_id": 51347227, "comment_id": 89672155, "body": "&#39;C:\\Users\\Roman..&#39; says that is not a Cywin build. &#39;unable to load package `network-2.7.0.2&#39; says where is the error you need to work on"}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 1, "creation_date": 1531742292, "post_id": 51347227, "comment_id": 89694652, "body": "How did you install GHC and <code>cabal.exe</code>? If possible, could you try <a href=\"https://haskell-lang.org/get-started/windows\" rel=\"nofollow noreferrer\">installing Stack</a> and running <code>stack build wreq</code> from a normal command prompt?"}, {"owner": {"reputation": 98, "user_id": 2223555, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/03b0bb24397abcfefb27a656330f044a?s=128&d=identicon&r=PG", "display_name": "nzaroma", "link": "https://stackoverflow.com/users/2223555/nzaroma"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1531759458, "post_id": 51347227, "comment_id": 89705349, "body": "@MichaelSnoyman they were installed automatically when i downloaded haskell platform <a href=\"https://www.haskell.org/downloads#platform\" rel=\"nofollow noreferrer\">link</a> , i will try to install stack and let you know the result"}, {"owner": {"reputation": 98, "user_id": 2223555, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/03b0bb24397abcfefb27a656330f044a?s=128&d=identicon&r=PG", "display_name": "nzaroma", "link": "https://stackoverflow.com/users/2223555/nzaroma"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 1, "creation_date": 1532167652, "post_id": 51347227, "comment_id": 89879293, "body": "@MichaelSnoyman i tried to install stack and do all steps (though i did it via cygwin, not cmd) and it all went fine and no compile errors. strange that it did not work for cabal, but.. thanks :)"}], "answers": [{"comments": [{"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "reply_to_user": {"reputation": 98, "user_id": 2223555, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/03b0bb24397abcfefb27a656330f044a?s=128&d=identicon&r=PG", "display_name": "nzaroma", "link": "https://stackoverflow.com/users/2223555/nzaroma"}, "edited": false, "score": 0, "creation_date": 1532123004, "post_id": 51434314, "comment_id": 89871812, "body": "the one other thought is if you might try building using a cmd.exe instead of cygwin?"}, {"owner": {"reputation": 98, "user_id": 2223555, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/03b0bb24397abcfefb27a656330f044a?s=128&d=identicon&r=PG", "display_name": "nzaroma", "link": "https://stackoverflow.com/users/2223555/nzaroma"}, "edited": false, "score": 0, "creation_date": 1532167690, "post_id": 51434314, "comment_id": 89879301, "body": "i tried to use cmd also, but there was the same error"}], "tags": [], "owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "is_accepted": false, "score": 0, "last_activity_date": 1532054693, "creation_date": 1532054693, "answer_id": 51434314, "question_id": 51347227, "link": "https://stackoverflow.com/questions/51347227/error-installing-package-wreq-in-cygwin/51434314#51434314", "title": "error installing package wreq in cygwin", "body": "<p>You should modify the cabal config file (you can find it by calling <code>cabal user-config init</code>) to contain the three lines below (altered to point to the right version of the platform)</p>\n\n<pre><code>extra-prog-path: C:\\Program Files\\Haskell Platform\\8.2.2\\msys\\usr\\bin\nextra-lib-dirs: C:\\Program Files\\Haskell Platform\\8.2.2\\mingw\\lib\nextra-include-dirs: C:\\Program Files\\Haskell Platform\\8.2.2\\mingw\\include\n</code></pre>\n"}], "owner": {"reputation": 98, "user_id": 2223555, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/03b0bb24397abcfefb27a656330f044a?s=128&d=identicon&r=PG", "display_name": "nzaroma", "link": "https://stackoverflow.com/users/2223555/nzaroma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 227, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1532054693, "creation_date": 1531648243, "last_edit_date": 1531683538, "question_id": 51347227, "link": "https://stackoverflow.com/questions/51347227/error-installing-package-wreq-in-cygwin", "title": "error installing package wreq in cygwin", "body": "<p>im trying to install wreq package in cygwin and getting following error:</p>\n\n<pre><code>$ cabal install wreq\nResolving dependencies...\nConfiguring wreq-0.5.2.1...\nBuilding wreq-0.5.2.1...\nFailed to install wreq-0.5.2.1\nBuild log ( C:\\Users\\Roman\\AppData\\Roaming\\cabal\\logs\\ghc-8.4.3\\wreq-0.5.2.1-6ipbKJAZXTn5wJPWmA5RGW.log ):\nPreprocessing library for wreq-0.5.2.1..\nBuilding library for wreq-0.5.2.1..\n[ 1 of 15] Compiling Network.Wreq.Cache.Store ( Network\\Wreq\\Cache\\Store.hs, dist\\build\\Network\\Wreq\\Cache\\Store.o )\n[ 2 of 15] Compiling Network.Wreq.Internal.OAuth1 ( Network\\Wreq\\Internal\\OAuth1.hs, dist\\build\\Network\\Wreq\\Internal\\OAuth1.o )\n[ 3 of 15] Compiling Network.Wreq.Internal.Types ( Network\\Wreq\\Internal\\Types.hs, dist\\build\\Network\\Wreq\\Internal\\Types.o )\n[ 4 of 15] Compiling Network.Wreq.Lens.Machinery ( Network\\Wreq\\Lens\\Machinery.hs, dist\\build\\Network\\Wreq\\Lens\\Machinery.o )\n[ 5 of 15] Compiling Network.Wreq.Internal.Lens ( Network\\Wreq\\Internal\\Lens.hs, dist\\build\\Network\\Wreq\\Internal\\Lens.o )\nghc.exe: unable to load package `network-2.7.0.2'\nghc.exe:  | C:\\Users\\Roman\\AppData\\Roaming\\cabal\\x86_64-windows-ghc-8.4.3\\network-2.7.0.2-HRKpEmrZF0Z7oBCs9x5PCR\\HSnetwork-2.7.0.2-HRKpEmrZF0Z7oBCs9x5PCR.o: unknown symbol `acceptNewSock'\ncabal: Leaving directory 'E:\\cygwin64\\tmp\\cabal-tmp-13148\\wreq-0.5.2.1'\ncabal.exe: Error: some packages failed to install:\nwreq-0.5.2.1-6ipbKJAZXTn5wJPWmA5RGW failed during the building phase. The\nexception was:\nExitFailure 1\n</code></pre>\n\n<p>I tried also do it in powershell, but same result. can you please suggest how to solve it?</p>\n"}, {"tags": ["sockets", "haskell", "networking"], "comments": [{"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 1, "creation_date": 1531648105, "post_id": 51346598, "comment_id": 89667082, "body": "I have exactly zero clue about Hashell but it is evident that it is buffering socket output, and that you need to flush it before trying to read the response."}, {"owner": {"reputation": 1487, "user_id": 3668541, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/ba66d28285a3e98b836178617d096b75?s=128&d=identicon&r=PG&f=1", "display_name": "haz", "link": "https://stackoverflow.com/users/3668541/haz"}, "reply_to_user": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1531651307, "post_id": 51346598, "comment_id": 89667760, "body": "I thought it might be something like that, but I can&#39;t find anything in the docs: <a href=\"http://hackage.haskell.org/package/network-2.7.0.2/docs/Network-Socket-ByteString.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/network-2.7.0.2/docs/&hellip;</a> <a href=\"http://hackage.haskell.org/package/network-2.7.0.2/docs/Network-Socket.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/network-2.7.0.2/docs/&hellip;</a>"}, {"owner": {"reputation": 6426, "user_id": 3946931, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/a45b621c0a6b96ea0996dfd51867c541?s=128&d=identicon&r=PG&f=1", "display_name": "therewillbecode", "link": "https://stackoverflow.com/users/3946931/therewillbecode"}, "edited": false, "score": 0, "creation_date": 1531653903, "post_id": 51346598, "comment_id": 89668400, "body": "Can you include the code for the Request import or let us know the name of the package?"}, {"owner": {"reputation": 1487, "user_id": 3668541, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/ba66d28285a3e98b836178617d096b75?s=128&d=identicon&r=PG&f=1", "display_name": "haz", "link": "https://stackoverflow.com/users/3668541/haz"}, "reply_to_user": {"reputation": 6426, "user_id": 3946931, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/a45b621c0a6b96ea0996dfd51867c541?s=128&d=identicon&r=PG&f=1", "display_name": "therewillbecode", "link": "https://stackoverflow.com/users/3946931/therewillbecode"}, "edited": false, "score": 0, "creation_date": 1531654319, "post_id": 51346598, "comment_id": 89668501, "body": "@therewillbecode done, although I&#39;d be surprised if that&#39;s where the issue is coming from, but who knows!"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1531663793, "post_id": 51346598, "comment_id": 89670836, "body": "@haz Including all the code isn&#39;t only about where the bug is, it&#39;s about letting the people who are trying to help run the test and experiment without having to re-create your code."}, {"owner": {"reputation": 1487, "user_id": 3668541, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/ba66d28285a3e98b836178617d096b75?s=128&d=identicon&r=PG&f=1", "display_name": "haz", "link": "https://stackoverflow.com/users/3668541/haz"}, "edited": false, "score": 0, "creation_date": 1531695878, "post_id": 51346598, "comment_id": 89678255, "body": "Ah didn&#39;t think about that - cheers"}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 3, "last_activity_date": 1531663550, "creation_date": 1531663550, "answer_id": 51349172, "question_id": 51346598, "link": "https://stackoverflow.com/questions/51346598/sending-data-to-socket-after-reading-only-occurs-when-the-socket-connection-en/51349172#51349172", "title": "Sending data to socket (after reading) only occurs when the socket connection ends", "body": "<p>I have one answer and one suggestion.</p>\n\n<p>The suggestion is for you to turn off the naggle algorithm after accept:</p>\n\n<pre><code>setSocketOption conn NoDelay 1\n</code></pre>\n\n<p>The answer is that your <code>sendAll</code> <em>is</em> sending data but curl is not printing it.  You can confirm this with netcat, for example.  I commented out your <code>Nothing</code> case so that no matter what I typed in netcat I was sure to get the <code>\"In handleRequest!\"</code> message back:</p>\n\n<p>server:</p>\n\n<pre><code>% ghc so.hs &amp;&amp; ./so\nListening on port 3000...\nConnected!\nNothing\n</code></pre>\n\n<p>client:</p>\n\n<pre><code>% nc localhost 3000\ntest                  ; My input, with a newline\nIn handleRequest!     ; Printed out, no newline\n</code></pre>\n\n<p>Alternatively, you can use curl's <code>-N</code> option to disable buffering.</p>\n\n<pre><code>%  curl -N localhost:3000\nIn handleRequest!\n</code></pre>\n"}], "owner": {"reputation": 1487, "user_id": 3668541, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/ba66d28285a3e98b836178617d096b75?s=128&d=identicon&r=PG&f=1", "display_name": "haz", "link": "https://stackoverflow.com/users/3668541/haz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 0, "accepted_answer_id": 51349172, "answer_count": 1, "score": 0, "last_activity_date": 1531663550, "creation_date": 1531642834, "last_edit_date": 1531654281, "question_id": 51346598, "link": "https://stackoverflow.com/questions/51346598/sending-data-to-socket-after-reading-only-occurs-when-the-socket-connection-en", "title": "Sending data to socket (after reading) only occurs when the socket connection ends", "body": "<p>I'm trying to write a very basic webserver in Haskell. This is my code:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nimport Network (withSocketsDo, listenOn, PortID(..))\nimport Network.Socket (Socket, accept, close, setSocketOption, SocketOption(..))\nimport Network.Socket.ByteString (send, sendAll, recv) \nimport Control.Concurrent.Async (async)\nimport Control.Monad (forever)\nimport Data.ByteString.Char8 (unpack)\nimport Request\n\nmain = withSocketsDo $ do\n  sock &lt;- listenOn $ PortNumber 3000\n  putStrLn \"Listening on port 3000...\"\n  forever $ do\n    (conn, _) &lt;- accept sock\n    async $ handleAccept conn\n\nhandleAccept :: Socket -&gt; IO ()\nhandleAccept sock = do\n  putStrLn $ \"Connected!\"\n  rawReq &lt;- recv sock 4096\n  let req = parseRawRequest $ unpack rawReq -- returns Maybe Request\n  putStrLn $ show req\n  handleRequest sock req\n\nhandleRequest :: Socket -&gt; Maybe Request -&gt; IO ()\nhandleRequest sock Nothing = do\n  putStrLn \"Closing...\"\nhandleRequest sock req = do\n    sendAll sock \"In handleRequest!\" -- Doesn't appear until server is killed.\n</code></pre>\n\n<p>This is what I <strong>expected</strong> to happen:</p>\n\n<ol>\n<li>Start server.</li>\n<li><code>\"Listening on port 3000...\"</code> is printed on server-side.</li>\n<li>Do <code>curl localhost:3000</code></li>\n<li><code>\"Connected!\"</code> is printed server-side.</li>\n<li>The request is printed server-side.</li>\n<li><code>\"In handleRequest!\"</code> is printed.</li>\n</ol>\n\n<p>What <strong>actually</strong> happens:</p>\n\n<ol>\n<li>Start server.</li>\n<li><code>\"Listening on port 3000...\"</code> is printed on server-side.</li>\n<li>Do <code>curl localhost:3000</code></li>\n<li><code>\"Connected!\"</code> is printed server-side.</li>\n<li>The request is printed server-side.</li>\n<li>I wait patiently</li>\n<li>I kill the server with <code>CTRL+C</code></li>\n<li><code>\"In handleRequest!\"</code> prints client-side.</li>\n</ol>\n\n<p>I suspect this has something to do with possible laziness in <code>recv</code>, although I use the value immediately afterwards (I parse the raw request into a <code>Request</code> type), so theoretically it should be evaluated.</p>\n\n<p>If I put <code>sendAll sock \"Yadda yadda</code> at the end of <code>handleAccept</code>, everything works fine. It's when I move this behaviour into a new function, <code>handleRequest</code>, that things go wonky.</p>\n\n<p>Any thoughts? I'm new-ish to Haskell, so I'd appreciate any comments on the issue, or my code generally.</p>\n\n<p>Cheers.</p>\n\n<p>EDIT:</p>\n\n<p>This is super weird! I \"fixed\" it, but I have no idea why this occurs.</p>\n\n<p>This is the line that only appeared after I killed the server:</p>\n\n<pre><code>handleRequest sock req = do\n    sendAll sock \"In handleRequest!\" -- Doesn't appear until server is killed.\n</code></pre>\n\n<p>If I intentionally close the socket <em>after</em> sending, it works:</p>\n\n<pre><code>handleRequest sock req = do\n    sendAll sock \"In handleRequest!\" -- Now appears without killing the server\n    close sock\n</code></pre>\n\n<p>So it sends when the connection is closed. This is consistent with previous behaviour, since the connection automatically closes when the server is killed.</p>\n\n<p>Now for the confusing bit. If I replace it with:</p>\n\n<pre><code>handleRequest sock req = do\n    sendAll sock \"In handleRequest!\\n\" -- Works perfect\n</code></pre>\n\n<p><em>This works without closing the connection!</em> It does what I expected, <em>just by adding a newline</em>. Why does this occur?</p>\n\n<p>What on earth? Is it a printing problem with my terminal, not the code? (OSX iTerm2)</p>\n\n<p>EDIT 2:</p>\n\n<p>Was asked to provide the code for my <code>Request</code> module:</p>\n\n<pre><code>import Data.List (isInfixOf)\nimport Data.List.Split (splitOn)\n\ndata RequestType = GET | PUT\n  deriving Show\n\ndata Request =\n    Request {\n    reqType :: RequestType,\n        path    :: String,\n        options :: [(String, String)]\n  } deriving Show\n\n-- Turn a raw HTTP request into a request\n-- object.\nparseRawRequest :: String -&gt; Maybe Request\nparseRawRequest rawReq =\n  Request &lt;$&gt; parseRawRequestType rawReq\n            &lt;*&gt; parseRawRequestPath rawReq\n                    &lt;*&gt; parseRawRequestOps  rawReq\n\n-- Turn an (entire) raw HTTP request into just\n-- the request type.\nparseRawRequestType :: String -&gt; Maybe RequestType\nparseRawRequestType rawReq = \n    case typ of\n    \"GET\" -&gt; Just GET\n    \"PUT\" -&gt; Just PUT\n    _     -&gt; Nothing\n  where typ = (head . words . head . lines) rawReq\n\n-- Turn an (entire) raw HTTP request into just\n-- the path.\nparseRawRequestPath :: String -&gt; Maybe String\nparseRawRequestPath = Just . (!! 1) . words . head . lines\n\n-- Turn an (entire) raw HTTP request into just\n-- a lookup table of their options.\nparseRawRequestOps :: String -&gt; Maybe [(String, String)]\nparseRawRequestOps rawReq = Just [(\"One\", \"Two\")] -- Test impl\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1531618653, "post_id": 51344580, "comment_id": 89662480, "body": "I think you didn\u2019t used to be able to do that, but if you can now that\u2019s nice. Maybe it\u2019s only there for backwards compatibility?"}], "answers": [{"tags": [], "owner": {"reputation": 1914, "user_id": 1511037, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/3P5Qq.png?s=128&g=1", "display_name": "Penguino", "link": "https://stackoverflow.com/users/1511037/penguino"}, "is_accepted": false, "score": 5, "last_activity_date": 1531618693, "creation_date": 1531618693, "answer_id": 51344619, "question_id": 51344580, "link": "https://stackoverflow.com/questions/51344580/still-confused-by-let-in-ghci/51344619#51344619", "title": "Still confused by &#39;let&#39; in GHCi", "body": "<p>In answer to my own question. I have just read the footnote </p>\n\n<blockquote>\n  <p>This has changed as of the release of GHC 8.0.1; using let in declarations in GHCi\n  is no longer necessary. As we assume most readers of this edition will be using an\n  earlier version of GHC, we have kept the let notation throughout the book, and this\n  shouldn\u2019t cause any errors or breakage.</p>\n</blockquote>\n\n<p>in <em>Haskell Programming From First Principles</em>, which confirms that <strong>let</strong> is no longer necessary.</p>\n"}], "owner": {"reputation": 1914, "user_id": 1511037, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/3P5Qq.png?s=128&g=1", "display_name": "Penguino", "link": "https://stackoverflow.com/users/1511037/penguino"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1531618693, "creation_date": 1531618076, "last_edit_date": 1531618421, "question_id": 51344580, "link": "https://stackoverflow.com/questions/51344580/still-confused-by-let-in-ghci", "title": "Still confused by &#39;let&#39; in GHCi", "body": "<p>I have read the answers in <a href=\"https://stackoverflow.com/questions/14052093/ghci-let-what-does-it-do\">this question</a>, but I am still confused. In both GHCi (version 8.2.1) and WinGHCi (version 1.0.6), running in Windows 10, I appear to be able to bind a value to an expression, when typing at the prompt, both with and without using let (see below). And similarly I appear to be able to define identically performing functions by both <em>let f x = x</em>x* and <em>f x = x</em>x*</p>\n\n<pre><code>Prelude&gt; x = 3\nPrelude&gt; let y = 3\nPrelude&gt; x\n3\nPrelude&gt; y\n3\nPrelude&gt; x == y\nTrue\nPrelude&gt;\n</code></pre>\n\n<p>So when is the let actually <em>necessary</em> in GHCi?</p>\n\n<p>In case it is relevant, the language flags set for GHCi (which I presume are default values as I haven't messed whth them) are</p>\n\n<pre><code>base language is: Haskell2010\nwith the following modifiers:\n  -XNoDatatypeContexts\n  -XExtendedDefaultRules\n  -XNoMonomorphismRestriction\n  -XNondecreasingIndentation\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 0, "creation_date": 1531556547, "post_id": 51336660, "comment_id": 89648060, "body": "What do you mean by &quot;change&quot;? To design Haskell like that from the beginning?"}, {"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 4, "creation_date": 1531556687, "post_id": 51336660, "comment_id": 89648092, "body": "Related: <a href=\"https://mail.haskell.org/pipermail/haskell-cafe/2007-September/031563.html\" rel=\"nofollow noreferrer\">mail.haskell.org/pipermail/haskell-cafe/2007-September/&hellip;</a> <a href=\"https://wiki.haskell.org/Unary_operator\" rel=\"nofollow noreferrer\">wiki.haskell.org/Unary_operator</a>"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 3, "creation_date": 1531557152, "post_id": 51336660, "comment_id": 89648186, "body": "<code>!</code> is already used for array indexing. Like all symbolic operators, it is a binary infix operator: <code>arr ! i</code>."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1531558093, "post_id": 51336660, "comment_id": 89648351, "body": "@melpomene All symbolic operators <i>except</i> unary <code>-</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1531559513, "post_id": 51336660, "comment_id": 89648637, "body": "<code>not</code> is not a keyword in Haskell, indeed none of these are keywords: <code>==,&#47;=,&amp;&amp;,||,&lt;,&lt;=</code>. These are library functions. In Haskell, it was decided that all symbolic operators are binary infix ones (except unary <code>-</code>, which does cause some issues). Having (more) exceptions to this rule seems unhelpful. About <code>&#47;=</code>: I like it, but I would have preferred <code>!=</code> for the sake of consistency with other languages. Anyway, I think these are only minor syntactic aspects of the Haskell design, and their choice is not terribly important."}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 1, "creation_date": 1531569358, "post_id": 51336660, "comment_id": 89650943, "body": "We have both <a href=\"https://www.haskell.org/onlinereport/exps.html#sect3.4\" rel=\"nofollow noreferrer\">unary <code>-</code> and <code>negate</code></a>, and a way to mask or specify clashing names. So pretty much the only change would be another special case for a unary operator. We would still have <code>not</code>."}], "answers": [{"comments": [{"owner": {"reputation": 41, "user_id": 3242645, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l379w.png?s=128&g=1", "display_name": "AlohaWorld", "link": "https://stackoverflow.com/users/3242645/alohaworld"}, "edited": false, "score": 0, "creation_date": 1531577631, "post_id": 51337316, "comment_id": 89654120, "body": "I am new. (!) seems to be operator overloading? Then i tried: <code>\u03bb&gt; :t (!)   &lt;interactive&gt;:1:1-3: error: Variable not in scope: !</code> After loading your example codes:   <code>\u03bb&gt; :t (!) (!) :: Bool -&gt; Bool</code> Then I tried: <code>\u03bb&gt; print (True !)</code> Then i got some confusing error messages:  <code>&lt;interactive&gt;:72:8-13: error:    ? Couldn&#39;t match expected type \u2018t0 -&gt; t1\u2019 with actual type \u2018Bool\u2019    ? The operator \u2018(!)\u2019 takes two arguments,      but its type \u2018Bool -&gt; Bool\u2019 has only one      In the first argument of \u2018print\u2019, namely \u2018(True !)\u2019      In the expression: print (True !)</code>  Any idea?"}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 2, "creation_date": 1531577839, "post_id": 51337316, "comment_id": 89654162, "body": "Your <code>GHCi</code> interactive prompt doesn&#39;t have the <code>PostfixOperators</code> extension activated. Try <code>:set -XPostfixOperators</code>."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 8, "last_activity_date": 1531597312, "last_edit_date": 1531597312, "creation_date": 1531562002, "answer_id": 51337316, "question_id": 51336660, "link": "https://stackoverflow.com/questions/51336660/what-will-be-the-impacts-if-haskell-uses-instead-of-keyword-not-as-the-ope/51337316#51337316", "title": "What will be the impacts if Haskell uses &quot;!&quot; instead of keyword &quot;not&quot; as the operator of logical not?", "body": "<p>You can even try this if you are satisfied with a postfix operator, but this requires the use of the <code>PostfixOperators</code> language extension</p>\n\n<pre><code>{-# LANGUAGE PostfixOperators #-}\n\n(!) = not\n\nmain = print (True !)\n-- False\n</code></pre>\n\n<p>I find this to be quite reasonable, not.</p>\n"}, {"comments": [{"owner": {"reputation": 41, "user_id": 3242645, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l379w.png?s=128&g=1", "display_name": "AlohaWorld", "link": "https://stackoverflow.com/users/3242645/alohaworld"}, "edited": false, "score": 0, "creation_date": 1531578423, "post_id": 51338559, "comment_id": 89654313, "body": "So, it is impossible to replace &quot;not&quot; with &quot;!&quot; under current Haskell rules, just because there is only one unary prefix operator &quot;-&quot; in Haskell? This really breaks my head which is filled with imperative programming language. I learned that when overloading an operator, the precedence and the associativity cannot be changed. Is it true for Haskell?"}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1531581037, "post_id": 51338559, "comment_id": 89654945, "body": "Haskell doesn&#39;t do operator overloading in general (unary - is an exception), but does allow you to define all sorts of operators including their precedence and associativity. Type classes permit functions (including operators) to be distinct for different types. Contrast C++, where there&#39;s a predefined set of 38-39 operators that are overloadable."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 41, "user_id": 3242645, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l379w.png?s=128&g=1", "display_name": "AlohaWorld", "link": "https://stackoverflow.com/users/3242645/alohaworld"}, "edited": false, "score": 0, "creation_date": 1531591325, "post_id": 51338559, "comment_id": 89657479, "body": "@AlohaWorld, when you <i>define</i> an operator (note it&#39;s not <i>overload</i> ... in Haskell an operator is just a kind of function name), you can specify its precedence and associativity with a <a href=\"http://www.informatik.uni-bremen.de/~cxl/docs/ZVON/Outputsyntax/fixityQdeclaration_reference.html\" rel=\"nofollow noreferrer\">fixity declaration</a>, e.g. <code>infixl 5 *</code>. Also the set of operators is not fixed, you can define an operator named <code>(*$::$@@^)</code> if you like."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1531598943, "post_id": 51338559, "comment_id": 89659327, "body": "In Haskell you can define any sequence of symbol characters as an operator, in the same way that you can define any sequence of alphanumeric characters as a function name. There are also a few reserved operators (like &quot;=&quot;) just like there are reserved words. Any operator starting with &quot;:&quot; is a constructor. Precedence for operators is defined using the infix, infixl and infixr keywords and is completely flexible."}], "tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 4, "last_activity_date": 1531571863, "creation_date": 1531571863, "answer_id": 51338559, "question_id": 51336660, "link": "https://stackoverflow.com/questions/51336660/what-will-be-the-impacts-if-haskell-uses-instead-of-keyword-not-as-the-ope/51338559#51338559", "title": "What will be the impacts if Haskell uses &quot;!&quot; instead of keyword &quot;not&quot; as the operator of logical not?", "body": "<p>Haskell does not have unary prefix operators, so you cannot define it as a library function like all the other operators.</p>\n\n<p>The only exception to this is <a href=\"https://wiki.haskell.org/Unary_minus\" rel=\"nofollow noreferrer\">unary minus</a>, which is a specific lexical hack to get around the fact that people expect to be able to write e.g.</p>\n\n<pre><code>x = (-y) * 5\n</code></pre>\n\n<p>However this has the disadvantage that while <code>(*5)</code> is a \"section\" (i.e. a binary operator given one argument and returning a function that expects the other), <code>(-y)</code> is not a section, it is the negation of <code>y</code>.</p>\n\n<p>So if you want to multiply all the members of a list by 5, you can do it like this</p>\n\n<pre><code>xs = map (*5) ys\n</code></pre>\n\n<p>But if you want to subtract 5 from all the members of a list, this doesn't work:</p>\n\n<pre><code>xs = map (-5) ys\n</code></pre>\n\n<p>Instead you have to write</p>\n\n<pre><code>xs = map (subtract 5) ys\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 3242645, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l379w.png?s=128&g=1", "display_name": "AlohaWorld", "link": "https://stackoverflow.com/users/3242645/alohaworld"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1840, "favorite_count": 0, "closed_date": 1531597192, "answer_count": 2, "score": 0, "last_activity_date": 1531597312, "creation_date": 1531556452, "last_edit_date": 1531569056, "question_id": 51336660, "link": "https://stackoverflow.com/questions/51336660/what-will-be-the-impacts-if-haskell-uses-instead-of-keyword-not-as-the-ope", "closed_reason": "Opinion-based", "title": "What will be the impacts if Haskell uses &quot;!&quot; instead of keyword &quot;not&quot; as the operator of logical not?", "body": "<p>I'm a new Haskell learner. I do not know much about the syntax mechanism behind Haskell.</p>\n\n<p>In some imperative programming languages, such as C/Java, the exclamation point \"!\"  is used as logic not.  </p>\n\n<p>Meanwhile, Haskell use keyword \"not\" as \"logical not\". However, Haskell use \"&amp;&amp;\" and \"||\" as logical operators.</p>\n\n<p>Obviously, Haskell avoids using \"!\" to express concepts of \"not\",  e.g. \"not equal\" is \"/=\" but not \"!=\".</p>\n\n<p>In another point of view, I guess, if the keyword \"module\" is changed to \"package\", nothing serious will happen except altering all \"module\" with \"package\" in all existing codes.</p>\n\n<p>I wonder, if one changes the keyword \"not\" to \"!\" in Haskell, what will happen? </p>\n\n<p><em>Complements:</em>  </p>\n\n<ol>\n<li>As pointed by @chi, i made a mistake. \"not\" is not a keyword, it is a library function. </li>\n<li>As pointed by @user202729, i did not tell my question clearly. I am wondering what will happen when \"not\" is replaced by \"!\". That is to say, when the founders design Haskell and they use \"!\" to work as logical not, MAYBE \"!\" cannot be used as array indexing. Then the founders try another way to index an element in array (with []? i don't know). Then something like chain-reacting goes on. Does this change Haskell much?</li>\n</ol>\n"}, {"tags": ["haskell", "generics", "enumerable", "deriving", "representable"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 2, "creation_date": 1531540671, "post_id": 51334648, "comment_id": 89645385, "body": "Where is <code>Finite</code> defined? In your example, what does the definition of <code>MyType</code> look like and what would <code>tEnum</code> look like?"}], "answers": [{"comments": [{"owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "edited": false, "score": 0, "creation_date": 1531581416, "post_id": 51337169, "comment_id": 89655043, "body": "Thanks!  Is there a reason you chose to define your own <code>Finite</code>, as opposed to using <code>Data.Finite</code>?  Also, is it critical to the correct functioning of your code that the range of <code>Finite n</code> be [0,n], as opposed to [0,n) as is used in <code>Data.Finite</code>?"}, {"owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "reply_to_user": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "edited": false, "score": 0, "creation_date": 1531583180, "post_id": 51337169, "comment_id": 89655481, "body": "It seemed like there were a few different finite set implementations around, and I wasn&#39;t sure which one you were using, so it seemed easiest to write one quickly.  It shouldn&#39;t be too hard to move the idea over to <code>Data.Finite</code>, but you might need to use unsafe operations implementing <code>quotRemFin</code> and <code>splitFin</code>.  The <code>Finite</code> range made a couple of proofs go through more easily, but shouldn&#39;t be terribly important; I think that the main differences would be that <code>GSize (a :*: b)</code> would need to be <code>a*m+b</code> instead of <code>a*(m+1)+b</code>, and <code>GSize (a :+: b)</code> would need to be <code>a+b</code> instead of <code>a+b+1</code>."}], "tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": true, "score": 1, "last_activity_date": 1531561291, "last_edit_date": 1531561291, "creation_date": 1531560920, "answer_id": 51337169, "question_id": 51334648, "link": "https://stackoverflow.com/questions/51334648/how-to-go-from-a-value-of-a-finite-discrete-type-to-a-finite-n-and-back-using/51337169#51337169", "title": "How to go from a value of a finite discrete type to a (Finite n) and back, using the type&#39;s derived Generic instance, in Haskell?", "body": "<p>I have something working for at least the <code>tEnum</code> side of things. Since you did not specify your representation of <code>Finite</code> I used my own <code>Finite</code> and <code>Nat</code>.</p>\n\n<p>I have included a full code snippet with an example at the bottom of the post, but will only discuss the generic programming parts, leaving out the reasonably standard construction of Peano arithmetic and various useful theorems about it.</p>\n\n<p>A typeclass is used to keep track of things that can be converted into/out of these finite enums. The important bit here is the default type signatures and the default definitions: these mean that if someone derives <code>EnumFin</code> for a class deriving <code>Generic</code>, they don't have to actually write any code, as these defaults will be used.  The defaults use methods from another class, which is implemented for the various kinds of things that <code>GHC.Generics</code> can produce. Notice that both the normal and the default signatures use <code>(n ~ ...) =&gt; ... n</code> instead of writing the size of the <code>Finite</code> directly in the type signature; this is because GHC will otherwise detect that the default signatures don't have to match the regular signatures (in the case of a class implementation that defines <code>Size</code> but not <code>fromFin</code> or <code>toFin</code>):</p>\n\n<pre><code>class EnumFin a where\n  type Size a :: Nat\n  type Size a = GSize (Rep a)\n\n  toFin :: (n ~ Size a) =&gt; a -&gt; Finite n\n  default toFin :: (Generic a, GEnumFin (Rep a), n ~ GSize (Rep a))\n                =&gt; a -&gt; Finite n\n  toFin = gToFin . from\n\n  fromFin :: (n ~ Size a) =&gt; Finite n -&gt; a\n  default fromFin :: (Generic a, GEnumFin (Rep a), n ~ GSize (Rep a))\n                  =&gt; Finite n -&gt; a\n  fromFin = to . gFromFin\n</code></pre>\n\n<p>There are actually also a couple of other utility methods in the class. These are used by the actual generic implementation to get the minimum/maximum <code>Finite n</code> produced by an implementation (<code>0</code> and <code>n</code>) without having to use more typeclasses &amp; propagate <code>KnownNat</code>-style constraints:</p>\n\n<pre><code>  zero :: (n ~ Size a) =&gt; Finite n\n  default zero :: (Generic a, GEnumFin (Rep a), n ~ GSize (Rep a))\n               =&gt; Finite n\n  zero = gzero @(Rep a)\n  gt :: (n ~ Size a) =&gt; Finite n\n  default gt :: (Generic a, GEnumFin (Rep a), n ~ GSize (Rep a))\n               =&gt; Finite n\n  gt = ggt @(Rep a)\n</code></pre>\n\n<p>The class declaration for the generic class is fairly simple; note however that its parameter is kind <code>* -&gt; *</code>, not <code>*</code>:</p>\n\n<pre><code>class GEnumFin f where\n  type GSize f :: Nat\n  gToFin :: f a -&gt; Finite (GSize f)\n  gFromFin :: Finite (GSize f) -&gt; f a\n  gzero :: Finite (GSize f)\n  ggt :: Finite (GSize f)\n</code></pre>\n\n<p>This generics class now must be implemented for each of the relevant generic constructors. For example, <code>U1</code> is a very simple one, referring to a constructor without fields, which is just encoded as the <code>Finite</code> number <code>0</code>:</p>\n\n<pre><code>instance GEnumFin U1 where\n  type GSize U1 = 'Z\n  gToFin U1 = ZF ZS\n  gFromFin (ZF ZS) = U1\n  gzero = ZF ZS\n  ggt = ZF ZS\n</code></pre>\n\n<p><code>:*:</code> is used to combine individual fields, so both parts need to be encoded (it encodes <code>lhs*(m+1)+rhs</code> where <code>m</code> is the max value of the rhs):</p>\n\n<pre><code>instance forall a b. (GEnumFin a, GEnumFin b) =&gt; GEnumFin (a :*: b) where\n  type GSize (a :*: b) = Plus (Times (GSize a) ('S (GSize b))) (GSize b)\n  gToFin (a :*: b) = addFin (mulFin (gToFin a) (SF (ggt @b))) (gToFin b)\n  gFromFin x = (gFromFin a :*: gFromFin b)\n    where (a, b) = quotRemFin (toSN (ggt @a)) (toSN (ggt @b)) x\n  gzero = addFin (mulFin (gzero @a) (SF (ggt @b))) (gzero @b)\n  ggt = addFin (mulFin (ggt @a) (SF (ggt @b))) (ggt @b)\n</code></pre>\n\n<p><code>:+:</code> on the other hand is used when representing sums, and so must be able to encode either of its constituents (it encodes the left hand side as <code>0..n</code> and the right as <code>n+1...n+1+m</code>):</p>\n\n<pre><code>instance forall a b. (GEnumFin a, GEnumFin b) =&gt; GEnumFin (a :+: b) where\n  type GSize (a :+: b) = 'S (Plus (GSize a) (GSize b))\n  gToFin (L1 a) = case proofPlusComm (toSN (gzero @a)) (toSN (gzero @b)) of\n                    Refl -&gt; addFin (injFin (gzero @b)) (gToFin a)\n  gToFin (R1 b) = addFin (SF (ggt @a)) (gToFin b)\n  gFromFin x = case proofPlusComm (toSN (ggt @a)) (toSN (ggt @b)) of\n                 Refl -&gt; splitFin (toSN (ggt @b)) (toSN (ggt @a)) x\n                                  (R1 . gFromFin @b) (L1 . gFromFin @a)\n  gzero = addFin (injFin (gzero @a)) (gzero @b)\n  ggt = addFin (SF (ggt @a)) (ggt @b)\n</code></pre>\n\n<p>There is also an important instance for a single constructor field, which requires that the contained type also implement <code>EnumFin</code>:</p>\n\n<pre><code>instance (EnumFin a) =&gt; GEnumFin (K1 i a) where\n  type GSize (K1 i a) = Size a\n  gToFin (K1 a) = toFin a\n  gFromFin = K1 . fromFin\n  gzero = zero @a\n  ggt = gt @a\n</code></pre>\n\n<p>Finally, it is necessary to implement the <code>M1</code> constructor, which is used to attach metadata to the generic tree, and which we don't care about at all here:</p>\n\n<pre><code>instance forall i c a. (GEnumFin a) =&gt; GEnumFin (M1 i c a) where\n  type GSize (M1 i c a) = GSize a\n  gToFin (M1 a) = gToFin a\n  gFromFin = M1 . gFromFin\n  gzero = gzero @a\n  ggt = ggt @a\n</code></pre>\n\n<hr>\n\n<p>For completeness, here is a complete file that defines all of the <code>Nat</code>/<code>Finite</code> infrastructure used above and exhibits using the <code>Generic</code> implementation:</p>\n\n<pre><code>{-# LANGUAGE TypeInType #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE UndecidableInstances #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE StandaloneDeriving #-}\n{-# LANGUAGE DefaultSignatures #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE AllowAmbiguousTypes #-}\n{-# LANGUAGE DeriveGeneric #-}\nimport GHC.Generics\nimport Data.Type.Equality\n\n-- Fairly standard Peano naturals &amp; various useful theorems about them:\ndata Nat = Z | S Nat\ndata SNat (n :: Nat) where\n  ZS :: SNat 'Z\n  SS :: SNat n -&gt; SNat ('S n)\nderiving instance Show (SNat n)\n\ntype family Plus (n :: Nat) (m :: Nat) where\n  Plus 'Z m = m\n  Plus ('S n) m = 'S (Plus n m)\n\nplus :: SNat n -&gt; SNat m -&gt; SNat (Plus n m)\nplus ZS m = m\nplus (SS n) m = SS (plus n m)\n\nproofPlusNZ :: SNat n -&gt; Plus n 'Z :~: n\nproofPlusNZ ZS = Refl\nproofPlusNZ (SS n) = case proofPlusNZ n of Refl -&gt; Refl\n\nproofPlusNS :: SNat n -&gt; SNat m -&gt; Plus n ('S m) :~: 'S (Plus n m)\nproofPlusNS ZS _ = Refl\nproofPlusNS (SS n) m = case proofPlusNS n m of Refl -&gt; Refl\n\nproofPlusAssoc :: SNat n -&gt; SNat m -&gt; SNat o\n               -&gt; Plus n (Plus m o) :~: Plus (Plus n m) o\nproofPlusAssoc ZS _ _ = Refl\nproofPlusAssoc (SS n) ZS _ = case proofPlusNZ n of Refl -&gt; Refl\nproofPlusAssoc (SS n) (SS m) ZS =\n  case proofPlusNZ m of\n    Refl -&gt; case proofPlusNZ (plus n (SS m)) of\n      Refl -&gt; Refl\nproofPlusAssoc (SS n) (SS m) (SS o) =\n  case proofPlusAssoc n (SS m) (SS o) of Refl -&gt; Refl\n\nproofPlusComm :: SNat n -&gt; SNat m -&gt; Plus n m :~: Plus m n\nproofPlusComm ZS ZS = Refl\nproofPlusComm ZS (SS m) = case proofPlusNZ m of Refl -&gt; Refl\nproofPlusComm (SS n) ZS = case proofPlusNZ n of Refl -&gt; Refl\nproofPlusComm (SS n) (SS m) =\n  case proofPlusComm (SS n) m of\n    Refl -&gt; case proofPlusComm n (SS m) of\n      Refl -&gt; case proofPlusComm n m of\n        Refl -&gt; Refl\n\ntype family Times (n :: Nat) (m :: Nat) where\n  Times 'Z m = 'Z\n  Times ('S n) m = Plus m (Times n m)\n\ntimes :: SNat n -&gt; SNat m -&gt; SNat (Times n m)\ntimes ZS _ = ZS\ntimes (SS n) m = plus m (times n m)\n\nproofMultNZ :: SNat n -&gt; Times n 'Z :~: 'Z\nproofMultNZ ZS = Refl\nproofMultNZ (SS n) = case proofMultNZ n of Refl -&gt; Refl\n\nproofMultNS :: SNat n -&gt; SNat m -&gt; Times n ('S m) :~: Plus n (Times n m)\nproofMultNS ZS ZS = Refl\nproofMultNS ZS (SS m) =\n  case proofMultNZ (SS m) of\n    Refl -&gt; case proofMultNZ m of\n      Refl -&gt; Refl\nproofMultNS (SS n) ZS =\n  case proofMultNS n ZS of Refl -&gt; Refl\nproofMultNS (SS n) (SS m) =\n  case proofMultNS (SS n) m of\n    Refl -&gt; case proofMultNS n (SS m) of\n      Refl -&gt; case proofMultNS n m of\n        Refl -&gt; case lemma1 n m (times n (SS m)) of\n          Refl -&gt; Refl\n  where lemma1 :: SNat n -&gt; SNat m -&gt; SNat o -&gt; Plus n ('S (Plus m o))\n                                                :~:\n                                                'S (Plus m (Plus n o))\n        lemma1 n' m' o' =\n          case proofPlusComm n' (SS (plus m' o')) of\n            Refl -&gt; case proofPlusComm m' (plus n' o') of\n              Refl -&gt; case proofPlusAssoc m' o' n' of\n                Refl -&gt; case proofPlusComm n' o' of\n                  Refl -&gt; Refl\n\nproofMultSN :: SNat n -&gt; SNat m -&gt; Times ('S n) m :~: Plus (Times n m) m\nproofMultSN ZS m = case proofPlusNZ m of Refl -&gt; Refl\nproofMultSN (SS n) m =\n  case proofPlusNZ (times n m) of\n    Refl -&gt; case proofPlusComm m (plus m (plus (times n m) ZS)) of\n      Refl -&gt; Refl\n\nproofMultComm :: SNat n -&gt; SNat m -&gt; Times n m :~: Times m n\nproofMultComm ZS ZS = Refl\nproofMultComm ZS (SS m) = case proofMultNZ (SS m) of\n                            Refl -&gt; case proofMultComm ZS m of\n                              Refl -&gt; Refl\nproofMultComm (SS n) ZS = case proofMultComm n ZS of Refl -&gt; Refl\nproofMultComm (SS n) (SS m) =\n  case proofMultNS n m of\n    Refl -&gt; case proofMultNS m n of\n      Refl -&gt; case proofPlusAssoc m n (times n m) of\n        Refl -&gt; case proofPlusAssoc n m (times m n) of\n          Refl -&gt; case proofPlusComm n m of\n            Refl -&gt; case proofMultComm n m of\n              Refl -&gt; Refl\n\n-- `Finite n` represents a number in 0..n (inclusive).\n--\n-- Notice that the \"zero\" branch includes an `SNat`; this is useful to be\n-- able to conveniently write `toSN` below (generally, to be able to\n-- reflect the `n` component to the value level) without needing to use a\n-- singleton typeclass &amp; pass constraitns around everywhere.\n--\n-- It should be possible to switch this out for other implementations of\n-- `Finite` with different choices, but may require rewriting many of\n-- the following functions.\ndata Finite (n :: Nat) where\n  ZF :: SNat n -&gt; Finite n\n  SF :: Finite n -&gt; Finite ('S n)\nderiving instance Show (Finite n)\n\ntoSN :: Finite n -&gt; SNat n\ntoSN (ZF sn) = sn\ntoSN (SF f) = SS (toSN f)\n\naddFin :: forall n m. Finite n -&gt; Finite m -&gt; Finite (Plus n m)\naddFin (ZF n) (ZF m) = ZF (plus n m)\naddFin (ZF n) (SF b) =\n  case proofPlusNS n (toSN b) of\n    Refl -&gt; SF (addFin (ZF n) b)\naddFin (SF a) b = SF (addFin a b)\n\nmulFin :: forall n m. Finite n -&gt; Finite m -&gt; Finite (Times n m)\nmulFin (ZF n) (ZF m) = ZF (times n m)\nmulFin (ZF n) (SF b) = case proofMultNS n (toSN b) of\n                         Refl -&gt; addFin (ZF n) (mulFin (ZF n) b)\nmulFin (SF a) b = addFin b (mulFin a b)\n\nquotRemFin :: SNat n -&gt; SNat m -&gt; Finite (Plus (Times n ('S m)) m)\n        -&gt; (Finite n, Finite m)\nquotRemFin nn mm xx = go mm xx nn mm (ZF ZS) (ZF ZS)\n  where go :: forall n m s p q r.\n            (  Plus q s ~ n, Plus r p ~ m)\n            =&gt; SNat m\n            -&gt; Finite (Plus (Times s ('S m)) p)\n            -&gt; SNat s\n            -&gt; SNat p\n            -&gt; Finite q\n            -&gt; Finite r\n            -&gt; (Finite n, Finite m)\n        go _ (ZF _) s p q r = (addFin q (ZF s), addFin r (ZF p))\n        go m (SF x) s (SS p) q r =\n          case proofPlusComm (SS p) (times s m) of\n            Refl -&gt; case proofPlusNS (times s (SS m)) p of\n              Refl -&gt; case proofPlusNS (toSN r) p of\n                Refl -&gt; go m x s p q (SF r)\n        go m (SF x) (SS s) ZS q _ =\n          case proofPlusNS (toSN q) s of\n            Refl -&gt; case proofMultSN s (SS m) of\n              Refl -&gt; case proofPlusNS (times s (SS m)) m of\n                Refl -&gt; case proofPlusComm (times s (SS m)) (SS m) of\n                  Refl -&gt; case proofPlusNZ (times (SS s) (SS m)) of\n                    Refl -&gt; go m x s m (SF q) (ZF ZS)\n\nsplitFin :: forall n m a. SNat n -&gt; SNat m -&gt; Finite ('S (Plus n m))\n         -&gt; (Finite n -&gt; a) -&gt; (Finite m -&gt; a) -&gt; a\nsplitFin nn mm xx f g = go nn mm xx mm (ZF ZS)\n  where go :: forall r s. (Plus r s ~ m)\n           =&gt; SNat n -&gt; SNat m -&gt; Finite ('S (Plus n s))\n           -&gt; SNat s -&gt; Finite r -&gt; a\n        go _ _ (ZF _) s r = g (addFin r (ZF s))\n        go n m (SF x) (SS s) r =\n          case proofPlusNS (toSN r) s of\n            Refl -&gt; case proofPlusNS n s of\n              Refl -&gt; go n m x s (SF r)\n        go n _ (SF x) ZS _ = case proofPlusNZ n of Refl -&gt; f x\n\ninjFin :: Finite n -&gt; Finite ('S n)\ninjFin (ZF n) = ZF (SS n)\ninjFin (SF a) = SF (injFin a)\n\ntoNum :: (Num a) =&gt; Finite n -&gt; a\ntoNum (ZF _) = 0\ntoNum (SF n) = 1 + toNum n\n\n-- The actual classes &amp; Generic stuff:\nclass EnumFin a where\n  type Size a :: Nat\n  type Size a = GSize (Rep a)\n\n  toFin :: (n ~ Size a) =&gt; a -&gt; Finite n\n  default toFin :: (Generic a, GEnumFin (Rep a), n ~ GSize (Rep a))\n                =&gt; a -&gt; Finite n\n  toFin = gToFin . from\n\n  fromFin :: (n ~ Size a) =&gt; Finite n -&gt; a\n  default fromFin :: (Generic a, GEnumFin (Rep a), n ~ GSize (Rep a))\n                  =&gt; Finite n -&gt; a\n  fromFin = to . gFromFin\n\n  zero :: (n ~ Size a) =&gt; Finite n\n  default zero :: (Generic a, GEnumFin (Rep a), n ~ GSize (Rep a))\n               =&gt; Finite n\n  zero = gzero @(Rep a)\n  gt :: (n ~ Size a) =&gt; Finite n\n  default gt :: (Generic a, GEnumFin (Rep a), n ~ GSize (Rep a))\n               =&gt; Finite n\n  gt = ggt @(Rep a)\nclass GEnumFin f where\n  type GSize f :: Nat\n  gToFin :: f a -&gt; Finite (GSize f)\n  gFromFin :: Finite (GSize f) -&gt; f a\n  gzero :: Finite (GSize f)\n  ggt :: Finite (GSize f)\n\ninstance GEnumFin U1 where\n  type GSize U1 = 'Z\n  gToFin U1 = ZF ZS\n  gFromFin (ZF ZS) = U1\n  gzero = ZF ZS\n  ggt = ZF ZS\n\ninstance forall a b. (GEnumFin a, GEnumFin b) =&gt; GEnumFin (a :*: b) where\n  type GSize (a :*: b) = Plus (Times (GSize a) ('S (GSize b))) (GSize b)\n  gToFin (a :*: b) = addFin (mulFin (gToFin a) (SF (ggt @b))) (gToFin b)\n  gFromFin x = (gFromFin a :*: gFromFin b)\n    where (a, b) = quotRemFin (toSN (ggt @a)) (toSN (ggt @b)) x\n  gzero = addFin (mulFin (gzero @a) (SF (ggt @b))) (gzero @b)\n  ggt = addFin (mulFin (ggt @a) (SF (ggt @b))) (ggt @b)\n\ninstance forall a b. (GEnumFin a, GEnumFin b) =&gt; GEnumFin (a :+: b) where\n  type GSize (a :+: b) = 'S (Plus (GSize a) (GSize b))\n  gToFin (L1 a) = case proofPlusComm (toSN (gzero @a)) (toSN (gzero @b)) of\n                    Refl -&gt; addFin (injFin (gzero @b)) (gToFin a)\n  gToFin (R1 b) = addFin (SF (ggt @a)) (gToFin b)\n  gFromFin x = case proofPlusComm (toSN (ggt @a)) (toSN (ggt @b)) of\n                 Refl -&gt; splitFin (toSN (ggt @b)) (toSN (ggt @a)) x\n                                  (R1 . gFromFin @b) (L1 . gFromFin @a)\n  gzero = addFin (injFin (gzero @a)) (gzero @b)\n  ggt = addFin (SF (ggt @a)) (ggt @b)\n\ninstance forall i c a. (GEnumFin a) =&gt; GEnumFin (M1 i c a) where\n  type GSize (M1 i c a) = GSize a\n  gToFin (M1 a) = gToFin a\n  gFromFin = M1 . gFromFin\n  gzero = gzero @a\n  ggt = ggt @a\n\ninstance (EnumFin a) =&gt; GEnumFin (K1 i a) where\n  type GSize (K1 i a) = Size a\n  gToFin (K1 a) = toFin a\n  gFromFin = K1 . fromFin\n  gzero = zero @a\n  ggt = gt @a\n\n-- Demo:\ndata Foo = A | B deriving (Show, Generic)\ndata Bar = C | D deriving (Show, Generic)\ndata Baz = E Foo | F Bar | G Foo Bar deriving (Show, Generic)\n\ninstance EnumFin Foo\ninstance EnumFin Bar\ninstance EnumFin Baz\n\nmain :: IO ()\nmain = do\n  putStrLn $ show $ toNum @Integer $ gt @Baz\n  putStrLn $ show $ toNum @Integer $ toFin $ E A\n  putStrLn $ show $ toNum @Integer $ toFin $ E B\n  putStrLn $ show $ toNum @Integer $ toFin $ F C\n  putStrLn $ show $ toNum @Integer $ toFin $ F D\n  putStrLn $ show $ toNum @Integer $ toFin $ G A C\n  putStrLn $ show $ toNum @Integer $ toFin $ G A D\n  putStrLn $ show $ toNum @Integer $ toFin $ G B C\n  putStrLn $ show $ toNum @Integer $ toFin $ G B D\n  putStrLn $ show $ fromFin @Baz $ toFin $ E A\n  putStrLn $ show $ fromFin @Baz $ toFin $ E B\n  putStrLn $ show $ fromFin @Baz $ toFin $ F C\n  putStrLn $ show $ fromFin @Baz $ toFin $ F D\n  putStrLn $ show $ fromFin @Baz $ toFin $ G A C\n  putStrLn $ show $ fromFin @Baz $ toFin $ G A D\n  putStrLn $ show $ fromFin @Baz $ toFin $ G B C\n  putStrLn $ show $ fromFin @Baz $ toFin $ G B D\n</code></pre>\n"}], "owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 1, "accepted_answer_id": 51337169, "answer_count": 1, "score": 1, "last_activity_date": 1531561291, "creation_date": 1531534207, "question_id": 51334648, "link": "https://stackoverflow.com/questions/51334648/how-to-go-from-a-value-of-a-finite-discrete-type-to-a-finite-n-and-back-using", "title": "How to go from a value of a finite discrete type to a (Finite n) and back, using the type&#39;s derived Generic instance, in Haskell?", "body": "<p>I have a library that currently demands of users that they provide a helper function with type:</p>\n\n<pre><code>tEnum :: (KnownNat n) =&gt; MyType -&gt; Finite n\n</code></pre>\n\n<p>so that the library implementation can use a very efficient sized vector representation of a function with type:</p>\n\n<pre><code>foo :: MyType -&gt; a\n</code></pre>\n\n<p>(<code>MyType</code> is discrete and finite.)</p>\n\n<p>Assuming that deriving a <code>Generic</code> instance for <code>MyType</code> is possible, is there a way to generate <code>tEnum</code> automatically, thus lifting that burden from my library's users?</p>\n\n<p>I would also like to go the other way; that is, automatically derive:</p>\n\n<pre><code>tGen :: (KnownNat n) =&gt; Finite n -&gt; MyType\n</code></pre>\n"}, {"tags": ["haskell", "monads", "maybe"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1531611150, "post_id": 51334206, "comment_id": 89661600, "body": "The words &quot;sum type&quot; in the question title are a little confusing, since your <code>Request</code> type is a <i>product</i> of several Maybe fields, not a sum of them."}, {"owner": {"reputation": 1487, "user_id": 3668541, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/ba66d28285a3e98b836178617d096b75?s=128&d=identicon&r=PG&f=1", "display_name": "haz", "link": "https://stackoverflow.com/users/3668541/haz"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1531621157, "post_id": 51334206, "comment_id": 89662762, "body": "You&#39;re 100% correct. Edited."}], "answers": [{"tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": true, "score": 5, "last_activity_date": 1531531136, "creation_date": 1531531136, "answer_id": 51334427, "question_id": 51334206, "link": "https://stackoverflow.com/questions/51334206/best-way-to-create-maybe-type-as-the-result-of-maybe-parts/51334427#51334427", "title": "Best way to create Maybe type as the result of Maybe parts", "body": "<p>This is exactly the pattern that Applicative Functors (<code>Control.Applicative</code>) represent.  Applicatives are like regular Functors, but with two extra operations:</p>\n\n<pre><code>pure :: a -&gt; f a\n(&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p><code>pure</code> lets you put any value into an applicative, and means that for any applicative, you can write an <code>fmap</code> as <code>fmap f x = pure f &lt;*&gt; x</code>.</p>\n\n<p>The interesting operator in this case is <code>&lt;*&gt;</code>. The idea is that if you have a function \"inside\" the functor, you can apply it to another value in the functor.  If you do <code>Request &lt;$&gt; (_ :: Maybe RequestType)</code>, you will get something of type <code>Maybe (String -&gt; [(String, String)] -&gt; Request)</code>.  The <code>&lt;*&gt;</code> operator will then let you take this and apply it to something of type <code>Maybe String</code> to get <code>Maybe [(String, String)] -&gt; Request)</code> and so on.</p>\n\n<p>Example:</p>\n\n<pre><code>data RequestType\ndata Request =\n  Request { reqType :: RequestType, path :: String, options :: [(String, String)] }\n\nparseRawRequestType :: String -&gt; Maybe RequestType\nparseRawRequestType = undefined\nparseRawRequestPath :: String -&gt; Maybe String\nparseRawRequestPath = undefined\nparseRawRequestOps :: String -&gt; Maybe [(String, String)]\nparseRawRequestOps = undefined\nparseRawRequest :: String -&gt; Maybe Request\nparseRawRequest rawReq = Request &lt;$&gt; parseRawRequestType rawReq\n                                 &lt;*&gt; parseRawRequestPath rawReq\n                                 &lt;*&gt; parseRawRequestOps rawReq\n</code></pre>\n\n<p>Notice however that the function being applied must have type <code>f (a -&gt; b)</code> instead of the <code>a -&gt; m b</code> of the common monadic bind operator.  In the effectful context, you can think of this as <code>&lt;*&gt;</code> giving a way to sequence effects without inspecting intermediate results, whereas <code>&gt;&gt;=</code> gives you a little more power (note: the essential difference between the power of an Applicative Functor and a Monad is a function <code>join :: m (m a) -&gt; m a</code>. Can you think how to obtain <code>&gt;&gt;=</code> with <code>&lt;*&gt;</code> and <code>join</code>?). However, Applicatives are a more general interface, which means that you can use them in more cases, and they can sometimes have nice properties when it comes to analysis/optimization.  There seems to be a decent overview of Applicatives vs Monads and when you might want to use Applicatives <a href=\"https://stackoverflow.com/questions/23342184/difference-between-monad-and-applicative-in-haskell\">here</a>.</p>\n"}], "owner": {"reputation": 1487, "user_id": 3668541, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/ba66d28285a3e98b836178617d096b75?s=128&d=identicon&r=PG&f=1", "display_name": "haz", "link": "https://stackoverflow.com/users/3668541/haz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 51334427, "answer_count": 1, "score": 1, "last_activity_date": 1531621144, "creation_date": 1531527716, "last_edit_date": 1531621144, "question_id": 51334206, "link": "https://stackoverflow.com/questions/51334206/best-way-to-create-maybe-type-as-the-result-of-maybe-parts", "title": "Best way to create Maybe type as the result of Maybe parts", "body": "<p>I have a <code>Request</code> type:</p>\n\n<pre><code>data Request =\n  Request {\n     reqType :: RequestType,\n     path    :: String,\n     options :: [(String, String)]\n  } deriving Show\n</code></pre>\n\n<p>And I'm parsing it (from a raw <code>HTTP</code> request), as follows:</p>\n\n<pre><code>parseRawRequest :: String -&gt; Request\nparseRawRequest rawReq =\n    Request {\n        reqType = parseRawRequestType rawReq,\n        path    = parseRawRequestPath rawReq,\n        options = parseRawRequestOps  rawReq\n  }\n</code></pre>\n\n<p>Now, the calls to <code>parseRawRequestType</code>, <code>parseRawRequestPath</code> (etc) can fail. To make my code more resilient, I've changed their type signature from:</p>\n\n<pre><code>parseRawRequestType :: String -&gt; RequestType\n</code></pre>\n\n<p>to</p>\n\n<pre><code>parseRawRequestType :: String -&gt; Maybe RequestType\n</code></pre>\n\n<p>But what is the best way to turn <code>parseRawRequest</code> into a <code>Maybe Request</code> ? Do I have to manually check each component (<code>reqType</code>, <code>path</code>, <code>options</code>) for <code>Nothing</code>, or is there a different way that I'm missing?</p>\n\n<p>There must be a way to somehow compose the object creation and <code>Nothing</code>-checking!</p>\n\n<p>I wrote the following, but it feels messy and not ideal: (Untested)</p>\n\n<pre><code>parseRawRequest :: String -&gt; Maybe Request\nparseRawRequest rawReq\n  | Nothing `elem` [reqType, path, options] = Nothing\n  | otherwise                               =\n    Just Request { reqType=reqType, path=path, options=options }\n  where reqType = parseRawRequestType rawReq\n        path    = parseRawRequestPath rawReq\n        options = parseRawRequestOps  rawReq\n</code></pre>\n\n<p>Cheers.</p>\n"}, {"tags": ["haskell", "monads", "haskell-lens", "state-monad"], "answers": [{"tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": false, "score": 1, "last_activity_date": 1531530005, "creation_date": 1531530005, "answer_id": 51334359, "question_id": 51333775, "link": "https://stackoverflow.com/questions/51333775/how-to-update-parts-of-the-state-in-a-state-monad/51334359#51334359", "title": "How to update parts of the state in a State monad?", "body": "<p>I believe that you can do this with the <code>zoom</code> combinator from <code>Control.Lens.Zoom</code>:</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}\nimport Control.Lens\nimport Control.Monad.State\ndata SomeState = SomeState { _int :: Int, _string :: String } deriving (Show)\nmakeLenses ''SomeState\nupdateInt :: Int -&gt; State Int ()\nupdateInt x = id .= x\nupdateString :: String -&gt; State String ()\nupdateString x = id .= x\n\nupdateSomeState :: Int -&gt; State SomeState ()\nupdateSomeState x = zoom int (updateInt x)\n</code></pre>\n\n<p>GHCi:</p>\n\n<pre><code>*Main&gt; runStateT (updateSomeState 5) (SomeState 3 \"hi\")\n Identity ((),SomeState {_int = 5, _string = \"hi\"})\n</code></pre>\n"}], "owner": {"reputation": 1149, "user_id": 1570219, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/26bf6dcd3a00a8b83144efdfcdb3071c?s=128&d=identicon&r=PG", "display_name": "Julian Stecklina", "link": "https://stackoverflow.com/users/1570219/julian-stecklina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1531530366, "creation_date": 1531522735, "last_edit_date": 1531530366, "question_id": 51333775, "link": "https://stackoverflow.com/questions/51333775/how-to-update-parts-of-the-state-in-a-state-monad", "title": "How to update parts of the state in a State monad?", "body": "<p>I have a type that I'd like to use as part of a state monad:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE TemplateHaskell #-}\nimport Control.Lens\n\ndata SomeState = SomeState\n  { _int :: Int,\n    _string :: String }\nmakeLenses ''SomeState\n</code></pre>\n\n<p>I have functions that operate on parts of the state in <code>SomeState</code>. Let's say they also use a state monad:</p>\n\n<pre><code>updateInt :: Int -&gt; State Int ()\nupdateString :: String -&gt; State String ()\n</code></pre>\n\n<p>On the top-level I have a functions that deal with the whole <code>SomeState</code>.</p>\n\n<pre><code>updateSomeState :: Int -&gt; State SomeState ()\n</code></pre>\n\n<p>I would like to call <code>updateInt</code> and <code>updateString</code> as part of <code>updateSomeState</code>. I have the feeling it should be possible to \"convert\" the SomeState state monad into a state monad for one of its parts using lense, but I fail to see how.</p>\n\n<p>Any help is appreciated.</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1531523463, "creation_date": 1531523463, "answer_id": 51333848, "question_id": 51333709, "link": "https://stackoverflow.com/questions/51333709/cannot-understand-the-error-message-from-a-illegal-list-of-tuples/51333848#51333848", "title": "Cannot understand the error message from a illegal list of tuples", "body": "<p>Note that <code>[1, \"One\"]</code> already triggers the error.</p>\n\n<p>Let's dissecting he error: the key point is</p>\n\n<pre><code>   Could not deduce (Num [Char]) arising from the literal \u20181\u2019\n</code></pre>\n\n<p>This actually means \"I need to use <code>1 :: [Char]</code>, since that's the only way the list could type check. However, I don't know how to interpret the literal 1 as a <code>[Char]</code>\". (As a reminder, <code>[Char]</code> and <code>String</code> are exactly the same type, and both are the type of string literals such as <code>\"One\"</code>.)</p>\n\n<p>Haskell is a bit peculiar in its handling of numeric literals like <code>1</code>. There are roughly treated as if the were <code>Integer</code>s, the arbitrary-precision integer type, and then immediately transformed into the wanted type using the method <code>fromInteger</code> of typeclass <code>Num</code>.</p>\n\n<pre><code>class Num a where\n   fromInteger :: Integer -&gt; a\n   ...\n</code></pre>\n\n<p>In the standard libraries, this class has instances for all numeric types. The user can add others, e.g. for their user-defined numeric types.</p>\n\n<p>A silly programmer could even add an instance for strings!</p>\n\n<pre><code>instance Num [Char] where\n   fromInteger n = \"urk!\" ++ show n\n</code></pre>\n\n<p>This instance is bogus since it can't reasonably define the other methods, but in principle it could be used. With this instance in scope, the original code type checks!\nWe can test it in GHCi:</p>\n\n<pre><code>&gt; [(1,2),(\"One\",2)]\n[(\"urk!1\",2),(\"One\",2)]\n</code></pre>\n\n<p>Note how Haskell converted the literal as we told it to do.</p>\n\n<p>A a final warning: don't even think to add such an instance to a serious program :) The class <code>Num</code> should be used only for numeric types, and strings are not numeric.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1531523463, "creation_date": 1531522096, "question_id": 51333709, "link": "https://stackoverflow.com/questions/51333709/cannot-understand-the-error-message-from-a-illegal-list-of-tuples", "title": "Cannot understand the error message from a illegal list of tuples", "body": "<p>I know this list of tuples doesn't work because the elements of the tuples are not with the same type. But I couldn't understand the error message.</p>\n\n<pre><code>Prelude&gt; [(1,2),(\"One\",2)]\n\n&lt;interactive&gt;:1:3: error:\n    ? Could not deduce (Num [Char]) arising from the literal \u20181\u2019\n      from the context: Num b\n        bound by the inferred type of it :: Num b =&gt; [([Char], b)]\n        at &lt;interactive&gt;:1:1-17\n    ? In the expression: 1\n      In the expression: (1, 2)\n      In the expression: [(1, 2), (\"One\", 2)]\n</code></pre>\n\n<p>Here I think <code>Num[Char])</code> represents \"One\". Then what does it means \"arising from the literal \u20181\u2019? Does it mean the type of the respective element in the same place has to be integer? And then again, what does it mean from the context: Num b? This make me very confused.</p>\n"}, {"tags": ["haskell", "exception"], "comments": [{"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 0, "creation_date": 1531518112, "post_id": 51332928, "comment_id": 89641704, "body": "GHC 8.2.1 produces the same behavior"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1531518764, "post_id": 51332928, "comment_id": 89641898, "body": "It looks to me like the lambda in <code>f</code> is getting floated. Weird, but maybe somehow valid. Or maybe <code>seq</code> isn&#39;t respected when floating lambdas in some versions of ghc."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 1, "creation_date": 1531518957, "post_id": 51332928, "comment_id": 89641960, "body": "I could reproduce this surprising behavior on 8.0 and 8.4. It certainly looks wrong. A compiled program throws the exception."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1531521278, "post_id": 51332928, "comment_id": 89642536, "body": "This doesn&#39;t appear to happen in a compiled program, only in ghci."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1531522500, "post_id": 51332928, "comment_id": 89642793, "body": "8.4.2 also has the same behavior. This looks very wrong."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1531562790, "post_id": 51332928, "comment_id": 89649392, "body": "Simplified case: <code>f g = g `seq` \\x -&gt; x</code>."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1531593224, "post_id": 51341002, "comment_id": 89657982, "body": "Amazing, the bug even uses the same function as my example. =D"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 7, "last_activity_date": 1531583412, "creation_date": 1531583412, "answer_id": 51341002, "question_id": 51332928, "link": "https://stackoverflow.com/questions/51332928/why-does-this-function-seem-to-hide-its-embedded-exception/51341002#51341002", "title": "Why does this function seem to hide its embedded exception?", "body": "<p>Looks like this is <a href=\"https://ghc.haskell.org/trac/ghc/ticket/14002\" rel=\"noreferrer\">Trac #14002</a>.  If you do a:</p>\n\n<pre><code>&gt; :set -fpedantic-bottoms\n</code></pre>\n\n<p>or define <code>f</code> in a file and load it into GHCi, then both expressions cause an exception.</p>\n\n<p>The bug report claims it's difficult to fix without incurring a performance penalty.</p>\n"}], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 1, "accepted_answer_id": 51341002, "answer_count": 1, "score": 12, "last_activity_date": 1531583412, "creation_date": 1531516721, "last_edit_date": 1531517256, "question_id": 51332928, "link": "https://stackoverflow.com/questions/51332928/why-does-this-function-seem-to-hide-its-embedded-exception", "title": "Why does this function seem to hide its embedded exception?", "body": "<p>While commenting on <a href=\"https://stackoverflow.com/q/51331179/791604\">another question</a>, I discovered an apparent break in referential transparency. In ghci:</p>\n\n<pre><code>&gt; f g h = g `seq` h `seq` \\x -&gt; g (h x)\n&gt; seq (f undefined id) ()\n()\n&gt; seq (undefined `seq` id `seq` \\x -&gt; undefined (id x)) ()\n*** Exception: Prelude.undefined\nCallStack (from HasCallStack):\n  error, called at libraries/base/GHC/Err.hs:79:14 in base:GHC.Err\n  undefined, called at &lt;interactive&gt;:3:14 in interactive:Ghci9\n</code></pre>\n\n<p>Why isn't the first one bottom? (GHC 8.2.2 in case it matters -- I don't have any other versions installed on this machine at the moment.)</p>\n"}, {"tags": ["haskell", "category-theory"], "comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1531510451, "post_id": 51331179, "comment_id": 89639130, "body": "This is very nearly a duplicate of <a href=\"https://stackoverflow.com/questions/48485660/is-hask-even-a-category\" title=\"is hask even a category\">stackoverflow.com/questions/48485660/is-hask-even-a-category</a>&zwnj;&#8203;.  In short, <b>Hask</b> can&#39;t be a category if you use a concept of equality of morphisms (i.e., Haskell values of monomorphic function types) where <code>seq x () = _|_</code> and <code>seq y () = ()</code> implies that <code>x</code> and <code>y</code> aren&#39;t equal, thanks to exactly the contradiction you point out.  Under a weaker definition of equality that allows <code>x</code> and <code>y</code> to be equal morphisms <i>despite</i> this difference in behavior, <b>Hask</b> <i>might</i> be a category, but it&#39;s still an open question."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1531510503, "post_id": 51331179, "comment_id": 89639159, "body": "At least, I <i>think</i> it&#39;s still an open question..."}, {"owner": {"reputation": 2976, "user_id": 7493840, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/227486944377608/picture?type=large", "display_name": "Sereja Bogolubov", "link": "https://stackoverflow.com/users/7493840/sereja-bogolubov"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1531514951, "post_id": 51331179, "comment_id": 89640734, "body": "@K.A.Buhr, thanks for answer(s), both are great. However, considering two morphisms &quot;the same&quot; while they act differently seems to go well with category theory: it simply does not care that much about undergoing meaning/representation of morphism. Unless you take it down to some concrete category like SET is; then one can not ignore what stands behind them. Obviously, mathematical functions, especially viewed as subsets of a Cartesian product, are equal in one and only one case: when the same input produces the same output. And yet I personally regret that Haskell fails to delive abs. purity."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1531516405, "post_id": 51331179, "comment_id": 89641141, "body": "There is another potential resolution (besides equating non-co-terminating things): choose a different composition operation than <code>(.)</code>. (One needs to be a bit careful anyway: <code>(.)</code> is an <i>arrow</i> of <b>Hask</b>, not an operation on arrows of <b>Hask</b>, and there is an implicit reification, often omitted, needed to convert from the in-language construct to the out-of-language operation on arrows.)"}, {"owner": {"reputation": 2976, "user_id": 7493840, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/227486944377608/picture?type=large", "display_name": "Sereja Bogolubov", "link": "https://stackoverflow.com/users/7493840/sereja-bogolubov"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1531516672, "post_id": 51331179, "comment_id": 89641236, "body": "@DanielWagner, well, when it comes down to the SET, composition is always part of it? Am I wrong? It always acts on the set and thus belongs to it. However you point is definitely smart, thanks. Unfortunately, it gonna look really ugly if one solves theoretical issue in such a fashion. Damn reality!"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1531517317, "post_id": 51331179, "comment_id": 89641432, "body": "@SerejaBogolubov When you ask &quot;composition is always part of it&quot;, what is &quot;it&quot;? Certainly the next sentence (paraphrased) &quot;X always acts on set Y, therefore X belongs to Y&quot; doesn&#39;t sound right to me."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1531517637, "post_id": 51331179, "comment_id": 89641536, "body": "For a concrete proposal for an alternative composition operation, consider (the reification of) <code>f ... g = seq f (seq g (\\x -&gt; f (g x)))</code>. This does at least have the property that <code>undefined ... id = id ... undefined = undefined</code>... <a href=\"https://stackoverflow.com/q/51332928/791604\">or does it?</a>"}, {"owner": {"reputation": 1818, "user_id": 1955231, "user_type": "registered", "accept_rate": 22, "profile_image": "https://graph.facebook.com/100002848311925/picture?type=large", "display_name": "Agnishom Chattopadhyay", "link": "https://stackoverflow.com/users/1955231/agnishom-chattopadhyay"}, "edited": false, "score": 0, "creation_date": 1531541362, "post_id": 51331179, "comment_id": 89645492, "body": "<a href=\"http://www.cse.chalmers.se/~nad/publications/danielsson-et-al-popl2006.html\" rel=\"nofollow noreferrer\">Loose and Fast reasoning is morally correct</a>"}], "owner": {"reputation": 2976, "user_id": 7493840, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/227486944377608/picture?type=large", "display_name": "Sereja Bogolubov", "link": "https://stackoverflow.com/users/7493840/sereja-bogolubov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 188, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1531507531, "creation_date": 1531507531, "question_id": 51331179, "link": "https://stackoverflow.com/questions/51331179/does-hask-form-a-theoretically-valid-category-or-it-just-pretends-to-be-one", "title": "Does Hask form a theoretically valid category? Or it just pretends to be one?", "body": "<p><strong>Hask</strong> looks like a subcategory of the <strong>SET</strong> - category of all sets and single-argument functions between them. However, seems like it fails to preserve <code>id</code> when it comes down to the <code>undefined</code>: <code>seq undefined ()</code> fails with exception as it suppose to, however <code>seq (undefined . id) () = seq (id . undefined) () = ()</code>. Obviously, <code>id</code> acts wrongly. </p>\n\n<p>Is there a way to (theoretically at least) resolve this issue and make <strong>Hask</strong> a category indeed? Except throwing <code>undefined</code> away?</p>\n"}, {"tags": ["haskell", "filesystems", "ghci", "haskell-turtle"], "comments": [{"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 1, "creation_date": 1532555529, "post_id": 51330812, "comment_id": 90024941, "body": "I think this question is basically \u201cWhy does <code>Filesystem.setWorkingDirectory</code> not affect the module search path in ghci (like <code>:cd</code> does) and how can I change this?\u201d"}, {"owner": {"reputation": 693, "user_id": 1717607, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/645sy.png?s=128&g=1", "display_name": "Thomas Nelson", "link": "https://stackoverflow.com/users/1717607/thomas-nelson"}, "reply_to_user": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1532626832, "post_id": 51330812, "comment_id": 90057121, "body": "Well that&#39;s part of what I&#39;m confused about.  Filesystem.getWorkingDirectory (and Turtle.pwd, and System.Directory.getCurrentDirectory) all return different values in the ghci repl than they return &quot;inside&quot; ghci as exposed by <code>:set prompt-function</code> and I think by <code>:paths</code>, although it&#39;s not clear to me what value exactly <code>:paths</code> means when it reports &quot;working directory&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 642, "user_id": 569837, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cac121c2187f2076824419eed6f837d?s=128&d=identicon&r=PG", "display_name": "Alpaca", "link": "https://stackoverflow.com/users/569837/alpaca"}, "is_accepted": true, "score": 1, "last_activity_date": 1552015122, "creation_date": 1552015122, "answer_id": 55056240, "question_id": 51330812, "link": "https://stackoverflow.com/questions/51330812/how-can-i-make-ghci-recognize-working-directory-changes/55056240#55056240", "title": "How can I make GHCI recognize working directory changes?", "body": "<p>I had a similar issue while developing shh. I've worked around this by providing a <code>cd</code> function that sets <code>PWD</code> as well as changing the directory, and using a <code>prompt-function</code> which reads that variable.</p>\n\n<p>Minimal example..</p>\n\n<pre><code>:set prompt-function \\_ _ -&gt; getEnv \"PWD\"\n</code></pre>\n\n<pre><code>cd :: FilePath -&gt; IO ()\ncd p = do\n    setCurrentDirectory p\n    a &lt;- getCurrentDirectory\n    setEnv \"PWD\" a\n</code></pre>\n"}], "owner": {"reputation": 693, "user_id": 1717607, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/645sy.png?s=128&g=1", "display_name": "Thomas Nelson", "link": "https://stackoverflow.com/users/1717607/thomas-nelson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 224, "favorite_count": 1, "accepted_answer_id": 55056240, "answer_count": 1, "score": 2, "last_activity_date": 1552015122, "creation_date": 1531505728, "last_edit_date": 1532541890, "question_id": 51330812, "link": "https://stackoverflow.com/questions/51330812/how-can-i-make-ghci-recognize-working-directory-changes", "title": "How can I make GHCI recognize working directory changes?", "body": "<p>I am experimenting with using ghci+Turtle as my interactive shell instead of bash.  So far it's working pretty well!\nBut I'd really like Turtle's <code>cd</code> function to change ghci's working directory, the way ghci command <code>:cd</code> does.</p>\n\n<p>Let's say I load ghci and turtle in <code>/home</code></p>\n\n<pre><code>\u03bb&gt; pwd\nFilePath \"/home\"\n\u03bb&gt; :show paths\ncurrent working directory: \n  /home\nmodule import search paths:\n  .\n\u03bb&gt; :cd /tmp/\n\u03bb&gt; pwd\nFilePath \"/tmp\"\n\u03bb&gt; :show paths\ncurrent working directory: \n  /tmp\nmodule import search paths:\n  .\n\u03bb&gt; \n</code></pre>\n\n<p>So far so good: changing the directory with ghci's <code>:cd</code> also changes Turtle's working directory.\nBut the other way is not true:</p>\n\n<pre><code>\u03bb&gt; cd \"/home\"\n\u03bb&gt; pwd\nFilePath \"/home\"\n\u03bb&gt; :show paths\ncurrent working directory: \n  /tmp\nmodule import search paths:\n  .\n\u03bb&gt; \n</code></pre>\n\n<p>This means that if I change directories with Turtle, I can't use <code>:load</code> or <code>:script</code> or take advantage of ghci's tab completion.\nI can just always use <code>:cd</code> instead of <code>cd</code>, but because <code>:cd</code> is a ghci command, it can't be called from a function or composed in any way.</p>\n\n<p>What would it take to make a <code>cd</code> function that talks to ghci?  I think I need to do something like\nwrite my own wrapper <code>cd</code> that that somehow changes the environment.\nI'm not sure what that looks like, since I can't invoke <code>:cd</code> in my <code>cd</code> wrapper.\nI'm guessing I need to use the ghc API?  I can't find anything obvious.</p>\n\n<p>EDIT:  I found a similar problem exists when I try changing the ghci prompt with <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#ghci-cmd-:set%20prompt-function\" rel=\"nofollow noreferrer\">:set prompt-function</a>.  If you put the following in your ghci.conf:</p>\n\n<pre><code>:module + Turtle\n:set prompt-function \\libs n -&gt; (\\wd -&gt; encodeString wd ++ \"&gt; \") &lt;$&gt; pwd\n</code></pre>\n\n<p>The prompt won't change working directories with <code>cd</code>, but will with <code>:cd</code>.  Using something like <code>:set prompt \"%w &gt; \"</code> works the same way.\nMy best guess is that ghci keeps a completely separate filesystem module from the user-space module somehow.  I may have to dig into ghci source to figure out what's going on.  </p>\n\n<p>It's not limited to Turtle, <code>Filesystem.setWorkingDirectory</code> shows the same behavior as <code>Turtle.cd</code>.</p>\n"}, {"tags": ["haskell", "monads", "maybe", "halting-problem", "fixpoint-combinators"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1531482849, "post_id": 51324115, "comment_id": 89623992, "body": "You may also like <a href=\"https://stackoverflow.com/q/49613641/791604\">Why is <code>mfix</code> not total in <code>MaybeT</code></a>, though that question focuses on the (unreachable) error call rather than on infinite loops."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 8, "last_activity_date": 1531483164, "creation_date": 1531483164, "answer_id": 51324611, "question_id": 51324115, "link": "https://stackoverflow.com/questions/51324115/is-mfix-for-maybe-impossible-to-be-nontrivially-total/51324611#51324611", "title": "Is mfix for Maybe impossible to be nontrivially total?", "body": "<p>One of the <code>MonadFix</code> laws says that the monadic fixpoint must coincide with the pure fixpoint when the monadic action is pure:</p>\n\n<pre><code>mfix (return . f) = return (fix f)\n</code></pre>\n\n<p>Because of this, the following is required:</p>\n\n<pre><code>mfix (Just . (1+)) = mfix (return . (1+))\n                   = return (fix (1+))\n                   = Just (fix (1+))\n</code></pre>\n\n<p>And <code>fix (1+)</code> is indeed bottom. So for your proposed function, the laws specify exactly how <code>mfix</code> must behave (and it does behave this way).</p>\n\n<p>Independently of whether the instance is law-abiding, we can ask whether we like the laws, or perhaps whether it might be useful to have <em>another</em> function, with a different name and different laws, that behaves as you propose; e.g. in particular these two calls should behave like this:</p>\n\n<pre><code>mfix' (Just . (1+)) = Nothing\nmfix' (Just . const 1) = Just 1\n</code></pre>\n\n<p>This is impossible to implement for exactly the reason you say: the halting problem tells us that it's not possible to know for sure whether <code>fix f</code> will loop or finish for arbitrary <code>f</code>. We can approximate this function in a variety of ways, but all will eventually fall short of perfection in this regard.</p>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 1, "accepted_answer_id": 51324611, "answer_count": 1, "score": 7, "last_activity_date": 1562457074, "creation_date": 1531481374, "last_edit_date": 1562457074, "question_id": 51324115, "link": "https://stackoverflow.com/questions/51324115/is-mfix-for-maybe-impossible-to-be-nontrivially-total", "title": "Is mfix for Maybe impossible to be nontrivially total?", "body": "<p>Since <code>Nothing &gt;&gt;= f = Nothing</code> for every <code>f</code>, the following trivial definition is suitable for <code>mfix</code>:</p>\n\n<pre><code>mfix _ = Nothing\n</code></pre>\n\n<p>But this has no practical use, so we have the following nontotal definition:</p>\n\n<pre><code>mfix f = let a = f (unJust a) in a where\n    unJust (Just x) = x\n    unJust Nothing = errorWithoutStackTrace \"mfix Maybe: Nothing\" \n</code></pre>\n\n<p>It would be nice if <code>mfix f</code> returned <code>Nothing</code> if this <code>let</code>-clause wouldn't halt. (For example, <code>f = Just . (1+)</code>)<br>\nIs this impossible because the Halting Problem is unsolvable?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1531473973, "post_id": 51321893, "comment_id": 89619159, "body": "You write <code>a = floor (sqrt 5)</code>, which makes no sense since Haskell expects a guard."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1531474123, "post_id": 51321893, "comment_id": 89619261, "body": "Did you maybe mean to have a <code>where</code> block somewhere?"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1531474144, "post_id": 51321893, "comment_id": 89619275, "body": "The <code>| a = floor (sqrt x)</code> line is weird - what&#39;s a? I think you meant to write a <code>where</code> at the end of that line, but that won&#39;t fix the problem you&#39;re having here."}, {"owner": {"reputation": 15, "user_id": 10075141, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ek_KHRuu_g4/AAAAAAAAAAI/AAAAAAAAABI/X03f5QxM2Cw/photo.jpg?sz=128", "display_name": "jatin", "link": "https://stackoverflow.com/users/10075141/jatin"}, "edited": false, "score": 0, "creation_date": 1531482461, "post_id": 51321893, "comment_id": 89623771, "body": "Just using the common code of checking prime , creating a list of numbers from 2 to sqrt of the number and dividing by each of them"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531482760, "post_id": 51321893, "comment_id": 89623932, "body": "@jatin: but what you do is using <i>imperative style</i> code into a functional/declarative language. One of the ideas behind Haskell is to move away from that imperative approach."}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 10075141, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ek_KHRuu_g4/AAAAAAAAAAI/AAAAAAAAABI/X03f5QxM2Cw/photo.jpg?sz=128", "display_name": "jatin", "link": "https://stackoverflow.com/users/10075141/jatin"}, "edited": false, "score": 0, "creation_date": 1531482541, "post_id": 51323440, "comment_id": 89623814, "body": "Thanks,  headlis is just the first element of the list and taillis is the remaining list. My bad , it was my first question on stackoverflow and also thanks for your concerns"}], "tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 3, "last_activity_date": 1531479022, "creation_date": 1531479022, "answer_id": 51323440, "question_id": 51321893, "link": "https://stackoverflow.com/questions/51321893/haskell-parsing-error-on-input/51323440#51323440", "title": "Haskell - parsing error on input", "body": "<p>Here is some feedback:</p>\n\n<ul>\n<li><p>You posted some code and a syntax error, but you didn't ask a question. Presumably your question is <em>\"Why doesn't this code work?\"</em> but that's actually not a good question. <a href=\"https://stackoverflow.com/help/how-to-ask\">How do I ask a good question?</a></p></li>\n<li><p>Your function is a predicate, but it returns a String. Consider returning a Bool instead.</p></li>\n<li><p>Give your function a type signature:</p>\n\n<pre><code>isprime :: Int -&gt; Bool\nisprime ...\n</code></pre></li>\n<li><p>Your main syntax error is due to indentation; your guards are at the top-level. Write <em>at least</em> one space before the guards:</p>\n\n<pre><code>isprime :: Int -&gt; Bool\nisprime x\n  | x &lt;= 1 = False\n  | x == 2 = True\n  | ...\n</code></pre></li>\n<li><p>Use pattern matching when appropriate:</p>\n\n<pre><code>isprime :: Int -&gt; Bool\nisprime 1 = False\nisprime 2 = True\nisprime n = ...\n</code></pre></li>\n<li><p>I'm not <em>reaaally</em> sure what goes on at the \"<code>lis = [2..a]</code>\" and \"<code>divbylis (headlis:taillis)</code>\" part. It doesn't look like Haskell code. Is that supposed to be a helper function?</p></li>\n<li><p>If writing a prime function is too difficult, then try writing simpler numeric, recursive functions like <code>factorial</code>, <code>power</code>, <code>fibonacci</code>, <code>collatz</code>. If you want to see how others have done it, see: <a href=\"https://stackoverflow.com/questions/4690762/determining-if-a-given-number-is-a-prime-in-haskell\">Determining if a given number is a prime in haskell</a>, <a href=\"https://www.reddit.com/r/haskell/comments/2kg5br/is_there_a_better_way_to_write_the_isprime/\" rel=\"nofollow noreferrer\">Is there a better way to write the isPrime function?</a></p></li>\n</ul>\n"}], "owner": {"reputation": 15, "user_id": 10075141, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ek_KHRuu_g4/AAAAAAAAAAI/AAAAAAAAABI/X03f5QxM2Cw/photo.jpg?sz=128", "display_name": "jatin", "link": "https://stackoverflow.com/users/10075141/jatin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1531479022, "creation_date": 1531473906, "question_id": 51321893, "link": "https://stackoverflow.com/questions/51321893/haskell-parsing-error-on-input", "title": "Haskell - parsing error on input", "body": "<p>I am new to haskell and stuck with the input parse error on '='\nI was trying a function to check if a number is prime\nHere is the function - </p>\n\n<pre><code>isprime x\n| x&lt;=1 = \"not prime\"\n| x == 2 = \"yes\"\n| a = floor (sqrt x)\n  lis = [2..a]\n  divbylis (headlis:taillis)\n    | length taillis &lt;=0 = \"yes it is prime\"\n    | x 'mod' headlis == 0 = \"No not prime\"\n    | otherwise = divbylis taillis**\n</code></pre>\n\n<p>and it shows the error - </p>\n\n<pre><code>first.hs:58:15: error:\nparse error on input \u2018=\u2019\nPerhaps you need a 'let' in a 'do' block?\ne.g. 'let x = 5' instead of 'x = 5'\n</code></pre>\n\n<p>line 58 is the line with declaration of lis = [2..a]**</p>\n"}, {"tags": ["haskell", "nix"], "answers": [{"comments": [{"owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "edited": false, "score": 0, "creation_date": 1531491488, "post_id": 51326035, "comment_id": 89629608, "body": "If you want use overlays on <code>haskellPackages</code> - adding overrides in stages - you can use <code>haskellPackages.extend</code>, although at the time of writing, it is <a href=\"https://github.com/NixOS/nixpkgs/issues/26561\" rel=\"nofollow noreferrer\">incompatible</a> with <code>haskellPackages.override</code>."}, {"owner": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "reply_to_user": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "edited": false, "score": 0, "creation_date": 1531526966, "post_id": 51326035, "comment_id": 89643595, "body": "@RobertHensing Hi, thanks for the comment! I can&#39;t find any documentation about <code>.extend</code> can you tell me what it is?"}, {"owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "edited": false, "score": 0, "creation_date": 1531643666, "post_id": 51326035, "comment_id": 89666201, "body": "Sadly, it&#39;s not in the manual. Here&#39;s a usage example though: <a href=\"https://gist.github.com/srhb/9995a60cbec68fab2b87b078e26c5753#file-tensorflow-proto-shell-nix-L8-L11\" rel=\"nofollow noreferrer\">gist.github.com/srhb/&hellip;</a>"}], "tags": [], "owner": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "is_accepted": true, "score": 2, "last_activity_date": 1531487757, "creation_date": 1531487757, "answer_id": 51326035, "question_id": 51317604, "link": "https://stackoverflow.com/questions/51317604/applying-overlay-to-haskellpackages/51326035#51326035", "title": "Applying overlay to haskellPackages", "body": "<p>After more digging, this works for me:</p>\n\n<pre><code>self: super: {\n  haskellPackages = super.haskellPackages.override {\n    overrides = haskellSelf: haskellSuper: {\n      hasktags = self.haskell.lib.dontCheck haskellSuper.hasktags;\n    };\n  };\n}\n</code></pre>\n\n<p>and place it on <code>~/.config/nixpkgs/overlays.nix</code> or <code>~/.config/nixpkgs/overlays/</code> directory.</p>\n\n<p>The example above is when you want to disable testing on <code>hasktags</code>. The idea applies for every other packages.</p>\n"}], "owner": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 1, "accepted_answer_id": 51326035, "answer_count": 1, "score": 2, "last_activity_date": 1531487757, "creation_date": 1531455699, "question_id": 51317604, "link": "https://stackoverflow.com/questions/51317604/applying-overlay-to-haskellpackages", "title": "Applying overlay to haskellPackages", "body": "<p>I've seen that with overlay we can easily customize nixpkgs. A quick google search I get pretty nice result like this, take from  :</p>\n\n<pre><code># Creating an overlay\nlet overlay1 = self: super:\n{\n   google-chrome = super.google-chrome.override {\n   commandLineArgs =\n     \"--proxy-server='https=127.0.0.1:3128;http=127.0.0.1:3128'\";\n   };\n};\n\n# Actually using it\nimport &lt;nixpkgs&gt; { overlays = [ overlay1 ]; }\n</code></pre>\n\n<p>But I'm actually at lost on how to modify existing haskell packages using overlay. I want to disable testing on <code>hasktags</code> with overlay. Help!</p>\n"}, {"tags": ["haskell", "haskell-stack", "nix", "nixos"], "answers": [{"comments": [{"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531492521, "post_id": 51320307, "comment_id": 89630320, "body": "I successfully generated the <code>stack.nix</code>, but it&#39;s still opaque to me how to link to it in my <code>configuration.nix</code> via a package override (I read your link). Can you give me a hint?"}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531493611, "post_id": 51320307, "comment_id": 89631010, "body": "Here is the docs <a href=\"https://nixos.org/nixpkgs/manual/#sec-modify-via-packageOverrides\" rel=\"nofollow noreferrer\">nixos.org/nixpkgs/manual/#sec-modify-via-packageOverrides</a>. You need to override stack attribute: <code>stack = import &#47;path&#47;to&#47;stack.nix {};</code>. Relative path should also work"}, {"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531494328, "post_id": 51320307, "comment_id": 89631470, "body": "I&#39;m getting this error: <code>error: &#39;f&#39; at &#47;home&#47;george&#47;.dotfiles&#47;nixos&#47;stack.nix:7:7 called without required argument &#39;githash&#39;, at &#47;nix&#47;store&#47;a55hr4k99fdn5lxym8ba8545lndabwfk-nixos-18.03.1328&zwnj;&#8203;47.aec217852f2&#47;nixos&zwnj;&#8203;&#47;pkgs&#47;development&#47;ha&zwnj;&#8203;skell-modules&#47;make-p&zwnj;&#8203;ackage-set.nix:88:27 (use &#39;--show-trace&#39; to show detailed location information)</code>"}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531494695, "post_id": 51320307, "comment_id": 89631702, "body": "It is the issue with <code>cabal2nix</code>, I&#39;m getting the same error. I&#39;m looking into it"}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531495419, "post_id": 51320307, "comment_id": 89632133, "body": "Oh, there&#39;s no <code>githash</code> package in the <code>haskellPackages</code> of nixpkgs. So we have the problem with derivation. I&#39;ll see what I can do."}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531497660, "post_id": 51320307, "comment_id": 89633439, "body": "@George, I&#39;ve made a custom derivation for Stack, check the updated answer"}, {"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531505278, "post_id": 51320307, "comment_id": 89637064, "body": "@436: I now get &quot;error: attribute &#39;stackage&#39; missing&quot; on line 409."}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531509685, "post_id": 51320307, "comment_id": 89638841, "body": "Oh, it requires the stackage overlay installed. Sorry, completely forgot to mention. This one <a href=\"https://github.com/typeable/nixpkgs-stackage\" rel=\"nofollow noreferrer\">github.com/typeable/nixpkgs-stackage</a>"}, {"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531510216, "post_id": 51320307, "comment_id": 89639033, "body": "The installation instructions on <code>nixpkgs-stackage</code> are somewhat opaque. In this context, do you know how I would install it in my NixOS machine?"}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531510520, "post_id": 51320307, "comment_id": 89639165, "body": "I updated the gist. Now you don&#39;t need to install the overlay, derivation will do it for you."}, {"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531511293, "post_id": 51320307, "comment_id": 89639471, "body": "@436: Thanks for the updated gist. I now get error &quot;Could not find module \u2018Conduit\u2019&quot; after lots of compiling."}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1531514736, "post_id": 51320307, "comment_id": 89640675, "body": "Can you please provide the full error message, I need some context. We can also move this conversation to the GitHub. Gist comments should be a better place to post the code snippets."}, {"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1544979035, "post_id": 51320307, "comment_id": 94457131, "body": "I&#39;m in need of something like this again for Stack 1.10. Do you know how one can generalize your solution into a script or something that can make it reproducible for all new future stack builds?"}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "edited": false, "score": 0, "creation_date": 1545199394, "post_id": 51320307, "comment_id": 94538384, "body": "@George you can open an issue on typeable/stackage2nix repo, but I can&#39;t promise that I will have time to look into it soon."}], "tags": [], "owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "is_accepted": false, "score": 3, "last_activity_date": 1531497556, "last_edit_date": 1531497556, "creation_date": 1531468626, "answer_id": 51320307, "question_id": 51315498, "link": "https://stackoverflow.com/questions/51315498/using-stack-1-8-0-the-current-stack-upgrade-git-in-nixos/51320307#51320307", "title": "Using stack 1.8.0 (the current `stack upgrade --git`) in NixOS?", "body": "<p>In Nix, if you want to have a specific version of a package, you create a derivation for it.</p>\n\n<h2>Derivation</h2>\n\n<p>To create the derivation for Stack, you can get one of the pre-built <a href=\"https://github.com/commercialhaskell/stack/releases\" rel=\"nofollow noreferrer\">Stack releases</a> using the <code>nix-prefetch-scripts</code> package and <code>stdenv.mkDerivation</code> as it is shown <a href=\"https://nixos.org/nixpkgs/manual/#sec-using-stdenv\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Stack 1.8 seems not released yet, so you need to build it from sources. One way to do it is <code>cabal2nix</code>:</p>\n\n<pre><code>cabal2nix --shell 'https://github.com/commercialhaskell/stack.git' &gt; stack.nix\n</code></pre>\n\n<p>There are more examples in the <a href=\"https://nixos.org/nixpkgs/manual/#how-to-create-nix-builds-for-your-own-private-haskell-packages\" rel=\"nofollow noreferrer\">manual</a></p>\n\n<h1>nixpkgs</h1>\n\n<p>Now you have the derivation with the right version of the software. If you want it to be the system-default, you <a href=\"https://stackoverflow.com/questions/36000514/how-to-override-2-two-packages-in-nixos-configuration-nix\">override your Nixpkgs</a>.</p>\n\n<p>Here is the example from the <a href=\"https://nixos.org/nixpkgs/manual/#sec-modify-via-packageOverrides\" rel=\"nofollow noreferrer\">docs</a>:</p>\n\n<pre><code>{\n  packageOverrides = pkgs: rec {\n    stack = ./path/to/stack.nix {};\n  };\n}\n</code></pre>\n\n<h2>Update</h2>\n\n<p>We've found that the derivation produced by <code>cabal2nix</code> doesn't work in the case of stack because <code>haskellPackages</code> are missing some of the dependencies.</p>\n\n<p>Here I've created <a href=\"https://gist.github.com/4e6/fb9749f4cc439086da0667ec0a892f3d\" rel=\"nofollow noreferrer\">gist</a> with the (slightly adapted) result of running <code>stackage2nix</code> on the stack repo. The result of <code>default.nix</code> is not a single derivation but a set of packages required to build the stack. So the override for your system should look like:</p>\n\n<pre><code>{\n  packageOverrides = pkgs: rec {\n    stack = (import ./default.nix {}).stack;\n  };\n}\n</code></pre>\n"}], "owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 143, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1531497556, "creation_date": 1531435987, "question_id": 51315498, "link": "https://stackoverflow.com/questions/51315498/using-stack-1-8-0-the-current-stack-upgrade-git-in-nixos", "title": "Using stack 1.8.0 (the current `stack upgrade --git`) in NixOS?", "body": "<p>How does one obtain Stack <code>1.8.*</code> on NixOS? In general, how does one ensure that the version of <code>stack</code> running on NixOS is the equivalent of the version that would run with <code>stack update --git</code> on a non-NixOS machine?</p>\n"}, {"tags": ["haskell", "serialization", "bytestring"], "comments": [{"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 1, "creation_date": 1531429930, "post_id": 51313088, "comment_id": 89605692, "body": "The inverse of <code>show</code> is <code>read</code>."}, {"owner": {"reputation": 1421, "user_id": 814846, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/92d418d6934ed583bab89df95974b6bf?s=128&d=identicon&r=PG", "display_name": "haroldcarr", "link": "https://stackoverflow.com/users/814846/haroldcarr"}, "reply_to_user": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1531435116, "post_id": 51313088, "comment_id": 89607293, "body": "Of course!   I knew I was missing something simple!   Thanks."}], "answers": [{"comments": [{"owner": {"reputation": 1421, "user_id": 814846, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/92d418d6934ed583bab89df95974b6bf?s=128&d=identicon&r=PG", "display_name": "haroldcarr", "link": "https://stackoverflow.com/users/814846/haroldcarr"}, "edited": false, "score": 0, "creation_date": 1531524795, "post_id": 51315737, "comment_id": 89643250, "body": "Thanks.   I went down the wrong path thinking I had an encoding (e.g., latin1, utf8) problem."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 1, "last_activity_date": 1531437757, "creation_date": 1531437757, "answer_id": 51315737, "question_id": 51313088, "link": "https://stackoverflow.com/questions/51313088/how-to-read-string-from-file-and-convert-to-data-bytestring-for-use-in-data-seri/51315737#51315737", "title": "how to read String from file and convert to Data.ByteString for use in Data.Serialize.decode", "body": "<p>Perhaps:</p>\n\n<pre><code>Data.ByteString Text.Read&gt; readMaybe \"\\\"\\\\NUL\\\"\" :: Maybe ByteString\nJust \"\\NUL\"\n</code></pre>\n"}], "owner": {"reputation": 1421, "user_id": 814846, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/92d418d6934ed583bab89df95974b6bf?s=128&d=identicon&r=PG", "display_name": "haroldcarr", "link": "https://stackoverflow.com/users/814846/haroldcarr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 51315737, "answer_count": 1, "score": 0, "last_activity_date": 1531437757, "creation_date": 1531423565, "question_id": 51313088, "link": "https://stackoverflow.com/questions/51313088/how-to-read-string-from-file-and-convert-to-data-bytestring-for-use-in-data-seri", "title": "how to read String from file and convert to Data.ByteString for use in Data.Serialize.decode", "body": "<p>I need to analyze a log file that contains lines like:</p>\n\n<pre><code>2018-07-11T17:25:14.07565;  [ZMQ] info; Sending message to; ROne (Addr {_unAddr = \"tcp://127.0.0.1:10002\"}); ## MSG ##; \"\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\t127.0.0.1\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL'\\DC3\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NAKtcp://127.0.0.1:10003\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL@h_\\214\\169\\213n\\RS\\212o\\tu|\\191\\\"\\207GvP\\224\\167\\222V*n6\\140\\236q\\von0\\148\\240\\nV\\157\\206\\225\\251A\\240\\DC4\\US\\228\\140\\253\\255L\\242\\163\\&amp;0\\134\\\\\\241'\\r\\229W{WD\\218\\b\\143\\213go\\194\\161o\\STXM\\154X\\195R\\128\\134eN=\\144\\153\\129\\242\\133f\\149\\\\:A\\213\\158C\\DLE\\b\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NULG\\SOH\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\t127.0.0.1\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL'\\DLE\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NAKtcp://127.0.0.1:10000\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL\\NUL;\\154\\202\\NUL\"\n</code></pre>\n\n<p>The parts with <code>\\NUL</code> were written using</p>\n\n<pre><code>Prelude.putStr (show msg)\n</code></pre>\n\n<p>where <code>msg</code> is a <code>Data.ByteString</code> created by an instance of <code>Data.Serialize</code></p>\n\n<p>I need to </p>\n\n<ol>\n<li>read the entire <code>String</code> line</li>\n<li>select the <code>ByteString</code> portion</li>\n<li>turn that portion into a <code>ByteString</code></li>\n<li>then give it to <code>Data.Serialize.decode</code></li>\n</ol>\n\n<p>It is not clear to me how to do step 3 : turn a <code>String</code> representation of a <code>ByteString</code> into a real <code>ByteString</code>.</p>\n\n<p>My initial try was to give #2 to <code>Data.ByteString.Char8.pack</code>.   But, when trying to <code>decode</code></p>\n\n<pre><code>decode (BSC8.pack l) :: Either String SignedRPC\n</code></pre>\n\n<p>I get:</p>\n\n<pre><code>Left \"too few bytes\\nFrom:\\tdemandInput\\n\\n\"\n</code></pre>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1531402488, "post_id": 51307055, "comment_id": 89590786, "body": "but here there is only <i>one</i> type parameter for complex: an <code>a</code>. The number of parameters of the <i>data constructor</i> is three, but of the <i>type constructor</i> (<code>instance</code>s work on that meta-level), there is one parameter."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1531402534, "post_id": 51307055, "comment_id": 89590813, "body": "Furthermore this <code>a</code> has no use here, since you never specify a field with a type that is defined in terms of <code>a</code>."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531402607, "post_id": 51307055, "comment_id": 89590871, "body": "I am not sure i am following.I made some edits in the meantime."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531402714, "post_id": 51307055, "comment_id": 89590944, "body": "The field inside <code>Complex</code> that implements the <code>T</code> typeclass is <code>b</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1531402769, "post_id": 51307055, "comment_id": 89590999, "body": "No, the <code>b</code> parameter has type <code>A</code> which is a real type, not <code>a</code>..."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531403004, "post_id": 51307055, "comment_id": 89591178, "body": "Oh you are right i modified.After edit is what i wanted .The <code>b</code> parameter to be type constrained."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1531403180, "post_id": 51307055, "comment_id": 89591285, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/174888/discussion-between-bercovici-adrian-and-willem-van-onsem\">continue this discussion in chat</a>."}], "answers": [{"comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531403703, "post_id": 51307408, "comment_id": 89591672, "body": "I think i got confused with the type constructor.I do not know : in the instance declaration you must place the <code>type</code> or <code>data</code> constructor?.If it is the <code>type</code>  then i wanted to know how do you manage something  like <code>Complex a b c</code>=<code>Complex{ a::T,b,c }</code> (b and c would implement another typeclass)."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1531404391, "post_id": 51307408, "comment_id": 89592185, "body": "@BercoviciAdrian Instance heads mention a type constructor, possibly applied to some type variables. I will add a sentence or two about parameterized types."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531461723, "post_id": 51307408, "comment_id": 89612868, "body": "Ok so in the case where you wish to only apply constraint on one parameter <code>bTy</code> for example.Is there any way to omit all other type parameters in the <code>instance </code> decalaration? <code>instance T bTy =&gt;(Complex x0,x1....xN     bTy      y1,y2...yN )</code> ....can i say something like <code>instance T bTy=&gt;(Complex bTy _ ....)</code> ."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1531477502, "post_id": 51307408, "comment_id": 89621123, "body": "@BercoviciAdrian No."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1531477589, "post_id": 51307408, "comment_id": 89621152, "body": "Thank you for your comprehensive  answers.This is what i wanted to know,but i learned more thanks to you in the process :D"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 3, "last_activity_date": 1531404514, "last_edit_date": 1531404514, "creation_date": 1531403371, "answer_id": 51307408, "question_id": 51307055, "link": "https://stackoverflow.com/questions/51307055/mentioning-just-constrained-fields-inside-instance-of-typeclass/51307408#51307408", "title": "Mentioning just constrained fields inside instance of typeclass", "body": "<p>After fixing your implementation of <code>mymethod</code> for <code>A</code> (you need parentheses around the first argument to <code>&gt;</code>), the following works for me:</p>\n\n<pre><code>data Complex = Complex{\n                  a::Int,\n                  b::A,\n                  c::String\n                  }\n\ninstance T Complex where\n    mymethod c = mymethod (b c)\n</code></pre>\n\n<p>I have removed the type parameter to <code>Complex</code> -- I suspect you were getting confused and believing there was a connection between the type named <code>b</code> and the field named <code>b</code> when there wasn't. If you want, you could make that connection explicit (here I'll use different names to emphasize how the connection is made, but you could drop the <code>Ty</code>s and <code>Field</code>s below and still have valid code):</p>\n\n<pre><code>data Complex aTy bTy cTy = Complex\n    { aField :: aTy\n    , bField :: bTy\n    , cField :: cTy\n    }\n\ninstance T bTy =&gt; T (Complex aTy bTy cTy) where\n    mymethod val = mymethod (bField val)\n</code></pre>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 51307408, "answer_count": 1, "score": 0, "last_activity_date": 1531404514, "creation_date": 1531402373, "last_edit_date": 1531403017, "question_id": 51307055, "link": "https://stackoverflow.com/questions/51307055/mentioning-just-constrained-fields-inside-instance-of-typeclass", "title": "Mentioning just constrained fields inside instance of typeclass", "body": "<p>Hello i want to know is there any way having a <code>type</code> that implements a <code>typeclass</code> to put a constraint on a field without decomposing all the type?(or simply put without enumerating all its other fields in the instance declaration? )</p>\n\n<p>Example:</p>\n\n<pre><code>data A=A | BB | CCC deriving( Show)\n\nclass T a where\n  mymethod::a-&gt;Bool\n\ninstance T A where\n mymethod a = length . show $ a &gt;1\n\ndata Complex b = Complex{\n                  a::Int,\n                  b::A,\n                  c::String\n                  }\n\ninstance (T b) =&gt; T (Complex a b c)  \n</code></pre>\n\n<p>Looking above in the last line, is there any way to enumerate just the fields that we want to put constraints on? (in our case <code>b</code> which implements <code>T</code> typeclass).\n<br>Can we put <code>wildcards</code> or any other thing to not put all fields?<br><br>\n<strong>E.g</strong>:<br> <code>instance (T b) =&gt; T (Complex _ b _)</code><br>or even better </p>\n\n<pre><code> instance (T b) =&gt; T Complex {b ? } \n</code></pre>\n"}]