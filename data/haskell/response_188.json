[{"tags": ["haskell", "stack-overflow"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1534375683, "post_id": 51867677, "comment_id": 90687288, "body": "Your code as given works without problems for me (GHC 7.10.2 or 8.2.1, both in interpreted mode and when compiled with or without optimisations), printing <code>size mod2Map=2</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1534375738, "post_id": 51867677, "comment_id": 90687303, "body": "BTW, I appreciate the effort you put into writing the question but frankly it would be more useful to <i>get to the point</i> a bit quicker."}, {"owner": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534376012, "post_id": 51867677, "comment_id": 90687361, "body": "I&#39;m using &quot;The Glorious Glasgow Haskell Compilation System, version 7.6.3&quot; so maybe I need to upgrade. I&#39;ll let you know what happens when I do. Have you previously changed the stack space size as the compiler suggests &quot;Use `+RTS -Ksize -RTS&#39; to increase it.&quot;?"}, {"owner": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534376358, "post_id": 51867677, "comment_id": 90687431, "body": "PS regarding the BTW, do you mean all the stuff before &quot;My problem is that when using any...&quot;? If so, that study in passive aggression is just my latest attempt in trying to get a question answered! Thanks anyway."}, {"owner": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1534378710, "post_id": 51867677, "comment_id": 90687896, "body": "7.6.3 is the standard version available on my version of Linux Mint (with apt-get). Given that I should really be doing things the right way i.e. with the fromListWith option suggested by Daniel below, I&#39;m not going to bother with upgrading."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534389685, "post_id": 51867677, "comment_id": 90689950, "body": "7.6.3 is rather old, having been released in April of 2013. The way the stack is handled changed in 7.8, as I recall. You should probably install version 8.4. hvr&#39;s PPA has a very good reputation, or you can install it manually if you really want."}], "answers": [{"comments": [{"owner": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "edited": false, "score": 0, "creation_date": 1534378268, "post_id": 51867849, "comment_id": 90687802, "body": "Go raibh m&#237;le maith agat. Both of those suggestions worked a treat. I get the fromListWith concept. Obviously someone smart already thought you might want to do more than just replace the existing value in a map e.g. you might want to add another one to the existing value. And then they optimised it. The <code>seq</code> one seems a little bit like black magic and not really in the whole purist, functional programming, Haskell spirit but, hey, it works. So I&#39;m conflicted. Thanks again!"}, {"owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "reply_to_user": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "edited": false, "score": 1, "creation_date": 1534380166, "post_id": 51867849, "comment_id": 90688230, "body": "@MicMac <a href=\"https://wiki.haskell.org/Foldr_Foldl_Foldl&#39;\" rel=\"nofollow noreferrer\">foldl vs foldl&#39;</a> - a classic Haskell problem which newer GHC apparently solves better due to more advanced strictness analysis (you do realise that 7.6.3 was released in 2013?). By the way you can also achieve the same result by changing <code>m</code> to <code>m!</code> with <code>BangPatterns</code> pragma on."}, {"owner": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "edited": false, "score": 1, "creation_date": 1534383382, "post_id": 51867849, "comment_id": 90688836, "body": "I had not realised that the version of GHC I am using is from 2013. apt-get on the version of linux mint I&#39;m using insists that it&#39;s the latest version. I have just downloaded and installed 8.4.3 from haskell.org. Everything suggested above runs at the same speed as in 7.6.3 (a bit worrying?) with the only difference being that my crappy makeMap doesn&#39;t have a stack overflow anymore. It just takes twice as long as the suggestions above. So without resorting to seq or m! which seem a bit like my old C/C++ days, I&#39;m going to go with the fromListWith."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "edited": false, "score": 2, "creation_date": 1534387023, "post_id": 51867849, "comment_id": 90689460, "body": "@Ed&#39;ka I doubt modern GHC actually does a better job of avoiding deeply-nested thunks or a better job of strictness analysis here. I place the blame on GHC&#39;s new ability to dynamically grow its stack -- in other words, I suspect the space leak is still there in modern GHCs, but instead of manifesting as a stack overflow it manifests as silently using more memory than necessary."}, {"owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "reply_to_user": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "edited": false, "score": 0, "creation_date": 1534387474, "post_id": 51867849, "comment_id": 90689548, "body": "@MicMac Try this: <code>!bs = findWithDefault [] a m</code> it reduced memory use in my experiments from 300Mb to 150MB. And just try running your program with <code>+RTS -s</code> option to get quick insight of memory use. Also make sure it isn&#39;t compiled with <code>-threaded</code> option (which did increase running time by the factor of two - see if there is any <code>SPARKS</code> in your <code>+RTS -s</code> output). I doubt that newer GHC can make your program run slower :)"}, {"owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "edited": false, "score": 0, "creation_date": 1534389689, "post_id": 51867849, "comment_id": 90689951, "body": "@DanielWagner I still think that <a href=\"https://wiki.haskell.org/Performance/Strictness#Strictness_analysis\" rel=\"nofollow noreferrer\">Strictness analysis</a> matters here: try compiling the original program with <code>ghc -O0 -rtsopts</code> and then running it with <code>+RTS -K1m</code> (to limit the stack growth) - it stack overflows. Recompile it with <code>ghc -O2 -rtsopts</code> and it doesn&#39;t. Or could be something else which <code>-O2</code> adds to the picture?"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "edited": false, "score": 2, "creation_date": 1534395369, "post_id": 51867849, "comment_id": 90691137, "body": "@MicMac: <code>seq</code> seems like black magic until it seems obvious\u2014<code>a `seq` b</code> just makes it explicit to the runtime that the evaluation of <code>b</code> depends on the evaluation of <code>a</code>, even though there\u2019s no other connection between them such as a data dependency or <code>case</code> expression."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "edited": false, "score": 0, "creation_date": 1534425306, "post_id": 51867849, "comment_id": 90707202, "body": "@Ed&#39;ka Right, but I don&#39;t think this situation has <i>improved</i> since 7.6, or at least not significantly. I expect even with 7.6, turning on <code>-O2</code> would have solved the problem entirely."}, {"owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "reply_to_user": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "edited": false, "score": 1, "creation_date": 1534464879, "post_id": 51867849, "comment_id": 90725069, "body": "@DanielWagner You are right, I tested and it indeed does not stack overflow with <code>-O2</code> on 7.6.3. Which means @MicMac was running unoptimised version all along (not recommended). Usually this kind of questions are immediately met with <i>Did you compile it with optimisation turned on?</i> comment. Unfortunately this one wasn&#39;t :)"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 6, "last_activity_date": 1534376688, "creation_date": 1534376688, "answer_id": 51867849, "question_id": 51867677, "link": "https://stackoverflow.com/questions/51867677/haskell-should-i-get-stack-space-overflow-when-constructing-an-intmap-from-a/51867849#51867849", "title": "Haskell: Should I get &quot;Stack space overflow&quot; when constructing an IntMap from a list with a million values?", "body": "<p>I don't have an old enough GHC to check (this works just fine for me, and I don't have 7.6.3 as you do), but my guess would be that your <code>makeMap'</code> is too lazy. Probably this will fix it:</p>\n\n<pre><code>makeMap' m ((a, b):cs) = m `seq` makeMap' m' cs\n</code></pre>\n\n<p>Without it, you are building up a million-deep nested thunk, and deeply-nested thunks is the traditional way to cause stack overflows in Haskell.</p>\n\n<p>Alternately, I would try just replacing the whole <code>makeMap</code> implementation with <code>fromListWith</code>:</p>\n\n<pre><code>makeMap pairs = fromListWith (++) [(k, [v]) | (k, v) &lt;- pairs]\n</code></pre>\n"}], "owner": {"reputation": 273, "user_id": 7299644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/219916893d193f2204ac06b14cca0b01?s=128&d=identicon&r=PG&f=1", "display_name": "MicMac", "link": "https://stackoverflow.com/users/7299644/micmac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "accepted_answer_id": 51867849, "answer_count": 1, "score": 5, "last_activity_date": 1535413275, "creation_date": 1534375117, "last_edit_date": 1535413275, "question_id": 51867677, "link": "https://stackoverflow.com/questions/51867677/haskell-should-i-get-stack-space-overflow-when-constructing-an-intmap-from-a", "title": "Haskell: Should I get &quot;Stack space overflow&quot; when constructing an IntMap from a list with a million values?", "body": "<p>My problem is that when using any of the Map implementations in Haskell that I always get a \"Stack space overflow\" when working with a million values.</p>\n\n<p>What I'm trying to do is process a list of pairs. Each pair contains two Ints (not Integers, I failed miserably with them so I tried Ints instead). I want to go through each pair in the list and use the first Int as a key. For each unique key I want to build up a list of second elements where each of the second elements are in a pair that have the same first element. So what I want at the end is a \"Map\" from an Int to a list of Ints. Here's an example.</p>\n\n<p>Given a list of pairs like this:</p>\n\n<pre><code>[(1,10),(2,11),(1,79),(3,99),(1,42),(3,18)]\n</code></pre>\n\n<p>I would like to end up with a \"Map\" like this:</p>\n\n<pre><code>{1 : [42,79,10], 2 : [11], 3 : [18,99]}\n</code></pre>\n\n<p>(I'm using a Python-like notation above to illustrate a \"Map\". I know it ain't Haskell. It's just there for illustrative purposes.)</p>\n\n<p>So the first thing I tried was my own hand built version where I sorted the list of pairs of Ints and then went through the list building up a new list of pairs but this time the second element was a list. The first element is the key i.e. the unique Int values of the first element of each pair and the second element is a list of the second values of each original pair which have the key as the first element.</p>\n\n<p>So given a list of pairs like this:</p>\n\n<pre><code>[(1,10),(2,11),(1,79),(3,99),(1,42),(3,18)]\n</code></pre>\n\n<p>I end up with a list of pairs like this:</p>\n\n<pre><code>[(1, [42,79,10], (2, [11]), (3, [18,99])]\n</code></pre>\n\n<p>This is easy to do. But there is one problem. The performance of the \"sort\" function on the original list (of 10 million pairs) is shockingly bad. I can generate the original list of pairs in less than a second. I can process the sorted list into my hand built map in less than a second. However, sorting the original list of pairs takes 40 seconds.</p>\n\n<p>So I thought about using one of the built-in \"Map\" data structures in Haskell to do the job. The idea being I build my original list of pairs and then using standard Map functions to build a standard Map.</p>\n\n<p>And that's where it all went pear-shaped. It works well on a list of 100,000 values but when I move to 1 million values, I get a \"Stack space overflow\" error.</p>\n\n<p>So here's some example code that suffers from the problem. Please, please note that is not the actual code that I want to implement. It is just a very simplified version of code for which the same problem exists. I don't really want to separate a million consecutive numbers into odd and even partitions!!</p>\n\n<pre><code>import Data.IntMap.Strict(IntMap, empty, findWithDefault, insert, size)\n\npower = 6\n\nns :: [Int]\nns = [1..10^power-1]\n\nmod2 n = if odd n then 1 else 0\n\nmod2Pairs = zip (map mod2 ns) ns\n\n-- Takes a list of pairs and returns a Map where the key is the unique Int values\n-- of the first element of each pair and the value is a list of the second values\n-- of each pair which have the key as the first element.\n-- e.g. makeMap [(1,10),(2,11),(1,79),(3,99),(1,42),(3,18)] = \n--      1 -&gt; [42,79,10], 2 -&gt; [11], 3 -&gt; [18,99]\nmakeMap :: [(Int,a)] -&gt; IntMap [a]\nmakeMap pairs = makeMap' empty pairs\n  where\n    makeMap' m [] = m\n    makeMap' m ((a, b):cs) = makeMap' m' cs\n      where\n        bs = findWithDefault [] a m\n        m' = insert a (b:bs) m\n\nmod2Map = makeMap mod2Pairs\n\nmain = do\n  print $ \"Yowzah\"\n  print $ \"length mod2Pairs=\"++ (show $ length mod2Pairs)\n  print $ \"size mod2Map=\" ++ (show $ size mod2Map)\n</code></pre>\n\n<p>When I run this, I get:</p>\n\n<pre><code>\"Yowzah\"\n\"length mod2Pairs=999999\"\nStack space overflow: current size 8388608 bytes.\nUse `+RTS -Ksize -RTS' to increase it.\n</code></pre>\n\n<p>From the above output, it should be clear that the stack space overflow happens when I try to do \"makeMap mod2Pairs\".</p>\n\n<p>But to my naive eye all this seems to do is go through a list of pairs and for each pair lookup a key (the first element of each pair) and A) if it doesn't find a match return an empty list or B) if it does find a match, return the list that has previously been inserted. In either case it \"cons\"'s the second element of the pair to the \"found\" list and inserts that back into the Map with the same key.</p>\n\n<p><em>(PS instead of findWithDefault, I've also tried lookup and handled the Just and Nothing using case but to no avail.)</em></p>\n\n<p>I've had a look through the Haskell documentation on the various Map implementations and from the point of view of performance in terms of CPU and memory (especially stack memory), it seems that A) a strict implementation and B) one where the keys are Ints would be the best. I have also tried Data.Map and Data.Strict.Map and they also suffer from the same problem.</p>\n\n<p>I am convinced the problem is with the \"Map\" implementation. Am I right? Why would I get a stack overflow error i.e. what is the Map implementation doing in the background that is causing a stack overflow? Is it making lots and lots of recursive calls behind the scenes?</p>\n\n<p>Can anyone help explain what is going on and how to get around the problem?</p>\n"}, {"tags": ["haskell", "garbage-collection", "ghc"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 8, "creation_date": 1534368206, "post_id": 51866287, "comment_id": 90685378, "body": "I believe the only honest answer is <i>no</i>, you can&#39;t write anything nontrivial in Haskell without incuring some GC. You can have <a href=\"https://hackage.haskell.org/package/compact-0.1.0.1/docs/Data-Compact.html\" rel=\"nofollow noreferrer\">compact regions</a> now, though, i.e. regions in memory within there will be no GC."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 7, "last_activity_date": 1534370592, "creation_date": 1534370592, "answer_id": 51867068, "question_id": 51866287, "link": "https://stackoverflow.com/questions/51866287/does-ghc-support-gc-less-programming/51867068#51867068", "title": "Does GHC support GC-less programming?", "body": "<p>You can very occasionally produce small programs that perform little-to-no garbage collection.  For example, the following program:</p>\n\n<pre><code>main = print $ sum [(1::Int)..1000000000]\n</code></pre>\n\n<p>if compiled with <code>-O2</code> should run without allocating much or performing any GC worth mentioning.</p>\n\n<p>However, this is generally restricted to programs that can be compiled into tight loops with \"unboxed\" data types (in this case, unboxed <code>Int#</code> values) without algebraic data structures (in this case, the list is fused out of existence).   There is a limited set of more complex data structures (e.g., unboxed <code>Vector</code>s) that can also be manipulated without allocation, and if you are very careful, you might be able to write algorithms that operate on such structures without allocating much.</p>\n\n<p>For example, the following program:</p>\n\n<pre><code>import Control.Monad\nimport qualified Data.Vector.Unboxed.Mutable as V\n\nmain :: IO ()\nmain = do\n  v &lt;- V.new 1000000\n  forM_ [0..999999] $ \\i -&gt; do\n    V.write v i i\n  replicateM_ 999 $\n    forM_ [0..499999] $ \\i -&gt; do\n      V.swap v i (999999 - i)\n  print =&lt;&lt; V.read v 123\n</code></pre>\n\n<p>allocates a million-integer array and then runs through it 999 times reversing all the elements.</p>\n\n<p>Compiled with GHC version 8.4.3 and <code>-O2</code> it allocates about 8 gigs at the beginning but doesn't do any additional allocation while running the list reversals.  My guess is that you could implement something useful, like an in-place quicksort, using similar techniques without doing any allocations and so skipping any GC.</p>\n\n<p>As a general rule, though, allocation is such a fundamental part of the way Haskell code compiled by GHC actually runs, that there's no reasonable subset of libraries or programming techniques that can guarantee GC-free programming.</p>\n"}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "accepted_answer_id": 51867068, "answer_count": 1, "score": 2, "last_activity_date": 1534551147, "creation_date": 1534366448, "last_edit_date": 1534551147, "question_id": 51866287, "link": "https://stackoverflow.com/questions/51866287/does-ghc-support-gc-less-programming", "title": "Does GHC support GC-less programming?", "body": "<p>With <code>-S</code> option and a simple program:</p>\n\n<pre><code>main = do\n   print \"Hello\"\n   main\n</code></pre>\n\n<p>I can see that it produces some garbage:</p>\n\n<pre><code>[...]\n  1024232      4904     45992  0.000  0.000    0.428    0.530    0    0  (Gen:  1)\n        0                      0.000  0.000\n\n   1,242,080,056 bytes allocated in the heap\n         271,656 bytes copied during GC\n[...] \n</code></pre>\n\n<p>But after removing <code>print</code> it apparently doesn't. Is there a alloc-free subset of core libraries that could be used to write GC-less programs?</p>\n\n<p>EDIT: There is also recent work regarding linear-types which seems to have potential to enable such feature.</p>\n"}, {"tags": ["haskell", "scotty"], "answers": [{"tags": [], "owner": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "is_accepted": true, "score": 2, "last_activity_date": 1534363008, "creation_date": 1534363008, "answer_id": 51865577, "question_id": 51865453, "link": "https://stackoverflow.com/questions/51865453/add-print-in-scotty-do-block/51865577#51865577", "title": "Add print in Scotty do block", "body": "<p>I'm going to guess that <code>ActionM</code> is from <a href=\"http://hackage.haskell.org/package/scotty-0.11.2/docs/Web-Scotty.html#t:ActionM\" rel=\"nofollow noreferrer\">Scotty</a>. In that case, you can simply lift IO actions with <code>liftIO</code>, like you already do with <code>liftAndCatchIO</code>:</p>\n\n<pre><code>responseUserByName :: ActionM ()\nresponseUserByName =\n    do name &lt;- param \"name\"\n       user &lt;- liftAndCatchIO $ getUserByUserName name\n       liftIO $ putStrLn \"this is a log message\"\n       json user\n</code></pre>\n"}], "owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 51865577, "answer_count": 1, "score": 1, "last_activity_date": 1534419148, "creation_date": 1534362470, "last_edit_date": 1534419148, "question_id": 51865453, "link": "https://stackoverflow.com/questions/51865453/add-print-in-scotty-do-block", "title": "Add print in Scotty do block", "body": "<p>I'm very new to Haskell so sorry in advance if the question is silly, but I was not able to find the solution in google.</p>\n\n<p>Let's say that I have this program using the <a href=\"https://hackage.haskell.org/package/scotty\" rel=\"nofollow noreferrer\">Scotty</a> web framework: </p>\n\n<pre><code>responseUserByName :: ActionM ()\nresponseUserByName = do name &lt;- param \"name\"\n                        user &lt;- liftAndCatchIO $ getUserByUserName name\n                        json user\n</code></pre>\n\n<p>I would like to add a log since it is failing at runtime and I cannot tell why. So my idea was to add some print in the do block to check values.</p>\n\n<p>But since the <code>do</code> block has to return a <code>ActionM</code> I cannot print and return an <code>IO</code>. Well or at least I don't know how.</p>\n\n<p>Regards</p>\n"}, {"tags": ["haskell", "huffman-code"], "answers": [{"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": false, "score": 0, "last_activity_date": 1534372885, "creation_date": 1534372885, "answer_id": 51867419, "question_id": 51865369, "link": "https://stackoverflow.com/questions/51865369/code-decode-huffman-tree-haskell/51867419#51867419", "title": "code / decode Huffman Tree Haskell", "body": "<p>Well you know how to make a tree when you know occurrences so I suppose you should work out how to make occurrences out of a string.</p>\n\n<pre><code>import Data.Map as M\nfrequencyTable :: String -&gt; Occurrences\nfrequencyTable = sort . map (uncurry flip) . M.toList . M.fromListWith (+) . map (\\x -&gt; (x,1))\n</code></pre>\n\n<p>And so now you can make the Huffman codes for a string:</p>\n\n<pre><code>codeTable : String -&gt; CodeTable\ncodeTable = constructTable . makeTree . frequencyTable\n</code></pre>\n\n<p>And you know how to encode a string when you have the Huffman codes:</p>\n\n<pre><code>code1 [] char = error \u201cnot in code table\u201d\ncode1 ((c1,code)::table) char\n  | c1 == char = code\n  | otherwise = code1 table char\ncode s = (s &gt;&gt;= code1 table, table) where\n  table = codeTable s\n</code></pre>\n\n<p>Decoding is a bit more fiddly and you probably want to convert from the code table into a tree so that you can decide in a straightforward way.</p>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 747, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1534372885, "creation_date": 1534362126, "question_id": 51865369, "link": "https://stackoverflow.com/questions/51865369/code-decode-huffman-tree-haskell", "title": "code / decode Huffman Tree Haskell", "body": "<p>I asked a questions earlier on how to make a tree, but now I am stuck again. \nI want to code and decode my Huffmann Tree </p>\n\n<p>So these are my types: </p>\n\n<pre><code>module Types where\n\n\ntype Occurence  = (Number, Value)\ntype Occurences = [Occurence]\ntype Number     = Int\ntype Value      = Char\ntype Code       = [Directions]\ntype CodeTable  = [(Value, Code)]\n\n\ndata Directions = L | R deriving (Eq, Ord, Show)\n\n\ndata HTree      = Leaf {frequency :: Number, character:: Value} |\n                  Node {frequency:: Number, \n                        leftChild:: HTree,\n                        rightChild:: HTree} deriving Show\n\nmakeLeaf :: Occurence -&gt; HTree\nmakeLeaf (n, c) = Leaf n c\n</code></pre>\n\n<p>These are the functions that I have already written and those are actually working: </p>\n\n<pre><code>makeTree :: Occurences -&gt; HTree\nmakeTree = makeCodes . toTreeList\n\ntoTreeList :: Occurences -&gt; [HTree]\ntoTreeList = map (uncurry Leaf)\n\nh :: [HTree] -&gt; [HTree]\nh (t1:t2:ts) = insertTree (join t1 t2) ts\n\nmakeCodes :: [HTree] -&gt; HTree\nmakeCodes [t] = t\nmakeCodes ts = makeCodes (h ts)\n\njoin :: HTree -&gt; HTree -&gt; HTree\njoin t1 t2 = Node (freq1+freq2) t1 t2\n    where\n      freq1 = v t1\n      freq2 = v t2\n\nv :: HTree -&gt; Int\nv (Leaf n _ ) = n\nv (Node n _ _) = n\n\ninsertTree :: HTree -&gt; [HTree] -&gt; [HTree]\ninsertTree t [] = [t]\ninsertTree t (t1:ts) \n     | v t &lt; v t1 = t:t1:ts\n     | otherwise = t1 : insertTree t ts\n\n\n\n\nconstructTable :: HTree -&gt; CodeTable\nconstructTable = convert []\n      where\n      convert :: Code -&gt; HTree -&gt; CodeTable\n      convert hc (Leaf n c) = [(c, hc)]\n      convert hc (Node n tl tr) = (convert (hc++[L]) tl) ++ (convert (hc++[R]) tr)\n</code></pre>\n\n<p>Now I want to code an decode...</p>\n\n<pre><code>code :: String -&gt; (Code, CodeTable)\n\ndecode :: Code -&gt; CodeTable -&gt; String\ndecode code table = undefined\n</code></pre>\n\n<p>I usually would approach this kinda this way </p>\n\n<pre><code>code :: HTree -&gt; Char -&gt; String\ncode (Leaf c n) x\n| c==x = []\n| otherwise = error \"!!\"\ncode (Node li n re) x\n| member x li = \u2019L\u2019:code li x\n| otherwise = \u2019R\u2019:code re x\nwhere member a (Leaf c n) = (a==c)\nmember a (Node li c re) = (member a li) || (member a re)\n</code></pre>\n\n<p>But how do I do this using CodeTable?</p>\n"}, {"tags": ["haskell", "monad-transformers"], "comments": [{"owner": {"reputation": 6415, "user_id": 1416525, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6f23f148b7241e345a61d193ed205685?s=128&d=identicon&r=PG", "display_name": "cdk", "link": "https://stackoverflow.com/users/1416525/cdk"}, "edited": false, "score": 5, "creation_date": 1534359036, "post_id": 51864209, "comment_id": 90681553, "body": "Have you tried writing the monad instance for the <code>m (r -&gt; a)</code> version?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1534362848, "post_id": 51864209, "comment_id": 90683219, "body": "Any operations that desires the reader monad information (type variable <code>r</code>) is unable to interleave monadic actions of type <code>m</code> and instead only able to return a value of type <code>a</code>.  So imagine I was a reader monad with <code>r ~ FilePath</code> (ReaderT IO FilePath).  The reader monad can obtain the path but can&#39;t actually read the file."}], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1534382203, "post_id": 51866616, "comment_id": 90688614, "body": "If I&#39;m not mistaken, <code>(m a, w)</code> is not actually a valid monad transformer."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1534434441, "post_id": 51866616, "comment_id": 90713259, "body": "@luqui: Yup, you&#39;re right.  I tried to update the answer to address your comment."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 4, "last_activity_date": 1534434349, "last_edit_date": 1534434349, "creation_date": 1534368102, "answer_id": 51866616, "question_id": 51864209, "link": "https://stackoverflow.com/questions/51864209/confused-about-haskell-monad-transformers/51866616#51866616", "title": "Confused about Haskell Monad Transformers", "body": "<p>The placement of the monad <code>m</code> will depend on the function and operation of the monad transformer that's being applied to the underlying monad <code>m</code>, so it's determined by what functionality the reader and writer are supposed to be adding to the monad.</p>\n\n<p>It helps to remember that <code>runReaderT</code> and <code>runWriterT</code> aren't really <em>doing</em> anything, despite their suggestive names.  They're just unwrapping a newtype, and it's the things they wrap that are transforming the monad <code>m</code>.</p>\n\n<p>What I mean by this is, given a monad <code>m</code>, you can add a reader to it by considering monadic actions of type:</p>\n\n<pre><code>r -&gt; m a\n</code></pre>\n\n<p>and you can add a writer to it by considering monadic actions of type:</p>\n\n<pre><code>m (a, w)\n</code></pre>\n\n<p>and you can add a reader, writer, and state to it by considering monadic actions of type:</p>\n\n<pre><code>r -&gt; s -&gt; m (a, s, w)\n</code></pre>\n\n<p>(That is, you don't need any of the transformer wrappers to do this, though they can make it more convenient, particularly since you can use existing operators like <code>&gt;&gt;=</code> and <code>&lt;*&gt;</code> instead of having to define your own.)</p>\n\n<p>So, when you add a reader to a monad <code>m</code>, why don't you instead place the <code>m</code> at the beginning and consider monadic actions of following type?</p>\n\n<pre><code>m (r -&gt; a)\n</code></pre>\n\n<p>You could, in fact, do this, but you'd quickly discover that this method of adding a reader doesn't actually add very much functionality to the monad <code>m</code>.</p>\n\n<p>For example, suppose you're writing a function that should look up a key in a table of values, and you want to carry the table in a reader.  Since the lookup can fail, you'd like to do this in the <code>Maybe</code> monad.  So, you'd like to write something like:</p>\n\n<pre><code>myLookup :: Key -&gt; Maybe Value\nmyLookup key = ...\n</code></pre>\n\n<p>However, you want to enhance the <code>Maybe</code> monad with a reader that provides the table of keys and values.  If we do this using the <code>m (r -&gt; a)</code> pattern, we get:</p>\n\n<pre><code>myLookup :: Key -&gt; Maybe ([(Key,Value)] -&gt; Value)\n</code></pre>\n\n<p>Now, let's try to implement it:</p>\n\n<pre><code>myLookup k = Just (\\tbl -&gt; ...)\n</code></pre>\n\n<p>Already, we see a problem.  We have to provide a <code>Just</code> (indicating that the lookup has succeeded) before we're allowed to write code to access the <code>\\tbl</code>.  That is, the monadic action (failure or success with return value) cannot depend on information in the <code>r</code> which should have been obvious from the signature <code>m (r -&gt; a)</code>.  Using the alternate <code>r -&gt; m a</code> pattern is more powerful:</p>\n\n<pre><code>type M a = ([Key,Value]) -&gt; Maybe a\nmyLookup :: Key -&gt; M Value\nmyLookup key tbl = Prelude.lookup key tbl\n</code></pre>\n\n<p>@Thomas_M_DuBuisson gave another example.  If we're trying to read an input file, we might write:</p>\n\n<pre><code>readInput :: FilePath -&gt; IO DataToProcess\nreadInput fp = withFile fp ReadMode $ \\h -&gt; ...\n</code></pre>\n\n<p>It would be nice to carry around configuration information like file paths in a reader, so let's transform it using the pattern <code>m (r -&gt; a)</code> to:</p>\n\n<pre><code>data Config = Config { inputFile :: FilePath }\nreadConfig :: IO (Config -&gt; DataToProcess)\nreadConfig = ...um...\n</code></pre>\n\n<p>and we're stuck because we can't write an IO action that depends on the configuration information.  If we'd used the alternate pattern <code>r -&gt; m a</code>, we'd be set:</p>\n\n<pre><code>type M a = Config -&gt; IO a\nreadConfig :: M DataToProcess\nreadConfig cfg = withFile (inputFile cfg) ReadMode $ ...\n</code></pre>\n\n<p>Another issue, raised by @cdk, is that this new \"monadic\" action type:</p>\n\n<pre><code>m (r -&gt; a)\n</code></pre>\n\n<p>isn't even a monad.  It's weaker (just an applicative).</p>\n\n<p>Note that adding a merely applicative reader to a monad could <em>still</em> be useful.  It just needs to be used in computations where the computational structure does not depend on the information in <code>r</code>. (So, if the underlying monad is <code>Maybe</code> to allow a computation to signal an error, the values from <code>r</code> can be used in the computation but the determination of whether or not the computation succeeds must be independent of <code>r</code>.)</p>\n\n<p>However, the <code>r -&gt; m a</code> version is strictly more powerful and can be used as both a monadic and applicative reader.</p>\n\n<p>Note that some monadic transformations are useful in multiple forms.  For example, you can (but only sometimes, as @luqui pointed out in a comment) add a writer to an <code>m</code> monad in two ways:</p>\n\n<pre><code>m (a, w)  -- if m is a monad this is always a monad\n(m a, w)  -- this is a monad for some, but not all, monads m\n</code></pre>\n\n<p>If <code>m</code> is <code>IO</code>, then <code>IO (a,w)</code> is way more useful than <code>(IO a, w)</code> -- with the latter, the written <code>w</code> (e.g., an error log) can't depend on the result of executing the <code>IO</code> action!  Also, again <code>(IO a, w)</code> isn't actually a monad; it's just an applicative.</p>\n\n<p>On the other hand, if <code>m</code> is <code>Maybe</code>, then <code>(Maybe a, w)</code> writes something whether the computation succeeds or fails, while <code>Maybe (a, w)</code> loses all the log entries if it returns <code>Nothing</code>.  Both forms are monads and can be useful in different situations, and they correspond to stacking the transformers in different orders:</p>\n\n<pre><code>MaybeT (Writer w)  -- acts like  (Maybe a, w)\nWriterT w Maybe    -- acts like  Maybe (a, w)\n</code></pre>\n\n<p>The same is <strong>not</strong> true for stacking <code>Maybe</code> and <code>Reader</code> in different orders.  Both of these are isomorphic to the \"good\" reader <code>r -&gt; Maybe a</code>:</p>\n\n<pre><code>MaybeT (Reader r)\nReaderT r Maybe\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 10152450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77d1a84cd5f2feec7295025ccdc7fe68?s=128&d=identicon&r=PG&f=1", "display_name": "irmarix", "link": "https://stackoverflow.com/users/10152450/irmarix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1534434349, "creation_date": 1534356822, "last_edit_date": 1534400037, "question_id": 51864209, "link": "https://stackoverflow.com/questions/51864209/confused-about-haskell-monad-transformers", "title": "Confused about Haskell Monad Transformers", "body": "<p>I am confused about where <code>m</code> should be placed on the right side of the Monad transformers?</p>\n\n<p>For example:</p>\n\n<p><code>WriterT</code> is defined as</p>\n\n<pre><code>newtype WriterT w m a = WriterT { runWriterT :: m (a, w) }\n</code></pre>\n\n<p>while <code>ReaderT</code> is defined as</p>\n\n<pre><code>newtype ReaderT r m a = ReaderT { runReaderT :: r -&gt; m a }\n</code></pre>\n\n<p>but NOT</p>\n\n<pre><code>newtype ReaderT r m a = ReaderT { runReaderT :: m (r -&gt; a) }\n</code></pre>\n"}, {"tags": ["haskell", "huffman-code"], "answers": [{"comments": [{"owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1534358682, "post_id": 51864548, "comment_id": 90681397, "body": "Thank you so much! I still get an error for make Tree MakeTree.hs:16:14: error:     \u2022 Couldn&#39;t match type \u2018Char\u2019 with \u2018Int\u2019       Expected type: Occurences -&gt; [HTree]         Actual type: [(Number, Value)] -&gt; [HTree]     \u2022 In the expression: map (uncurry Leaf)       In an equation for \u2018toTreeList\u2019: toTreeList = map (uncurry Leaf)    | 16 | toTreeList = map (uncurry Leaf)"}, {"owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "reply_to_user": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1534358779, "post_id": 51864548, "comment_id": 90681450, "body": "Have you changed the definition of <code>type Occurence</code> to <code>type Occurence  = (Number, Value)</code>?"}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 2, "last_activity_date": 1534358268, "creation_date": 1534358268, "answer_id": 51864548, "question_id": 51864076, "link": "https://stackoverflow.com/questions/51864076/huffman-code-in-haskell-make-tree/51864548#51864548", "title": "Huffman code in Haskell (Make Tree)", "body": "<pre><code>Expected type: Value\nActual type: Number\n</code></pre>\n\n<p>It's quite clear from the error message, what's wrong with the following expression:</p>\n\n<pre><code>convert hc (Leaf c n) = [(c, hc)]\n</code></pre>\n\n<p>Since <code>HTree</code> defined as:</p>\n\n<pre><code>data HTree      = Leaf {frequency :: Number, character:: Value} |\n                  Node {frequency:: Number, \n                        leftChild:: HTree,\n                        rightChild:: HTree} deriving Show\n</code></pre>\n\n<p><code>Leaf</code> accepts <code>frequency</code> (Number) as the first argument and <code>character</code> (Value) as the second. Thus, we need to just swap the arguments in the expression:</p>\n\n<pre><code>convert hc (Leaf n c) = [(c, hc)]\n</code></pre>\n\n<p>Also in the definition of <code>v</code> function:</p>\n\n<pre><code>v (Leaf n _ ) = n\n</code></pre>\n\n<p>In the definition of <code>type Occurence</code>:</p>\n\n<pre><code>type Occurence  = (Number, Value)\n</code></pre>\n\n<p>and in the <code>makeLeaf</code> as well:</p>\n\n<pre><code>makeLeaf (n, c) = Leaf n c\n</code></pre>\n\n<p>After these steps your code should compile successfully</p>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 233, "favorite_count": 0, "accepted_answer_id": 51864548, "answer_count": 1, "score": 0, "last_activity_date": 1534358268, "creation_date": 1534356243, "question_id": 51864076, "link": "https://stackoverflow.com/questions/51864076/huffman-code-in-haskell-make-tree", "title": "Huffman code in Haskell (Make Tree)", "body": "<p>so this is kinda a long question about Huffman Tress. I am trying to make a Tree and a code Table. </p>\n\n<p>Here are my Types </p>\n\n<pre><code>module Types where\n\ntype Occurence  = (Value, Number)\ntype Occurences = [Occurence]\ntype Number     = Int\ntype Value      = Char\ntype Code       = [Directions]\ntype CodeTable  = [(Value, Code)]\n\n\ndata Directions = L | R deriving (Eq, Ord, Show)\n\n\ndata HTree      = Leaf {frequency :: Number, character:: Value} |\n                  Node {frequency:: Number, \n                        leftChild:: HTree,\n                        rightChild:: HTree} deriving Show\n\n\nmakeLeaf :: Occurence -&gt; HTree\nmakeLeaf (c,n) = Leaf n c\n</code></pre>\n\n<p>Here is my attempt to an Make a Tree function </p>\n\n<pre><code>module MakeTree(makeTree, treeFromTable) where\nimport Types\n\nmakeTree :: Occurences -&gt; HTree\nmakeTree = makeCodes . toTreeList\n\ntoTreeList :: Occurences -&gt; [HTree]\ntoTreeList = map (uncurry Leaf)\n\nh :: [HTree] -&gt; [HTree]\nh (t1:t2:ts) = insertTree (join t1 t2) ts\n\nmakeCodes :: [HTree] -&gt; HTree\nmakeCodes [t] = t\nmakeCodes ts = makeCodes (h ts)\n\njoin :: HTree -&gt; HTree -&gt; HTree\njoin t1 t2 = Node (freq1+freq2) t1 t2\n    where\n      freq1 = v t1\n      freq2 = v t2\n\nv :: HTree -&gt; Int\nv (Leaf _ n ) = n\nv (Node n _ _) = n\n\ninsertTree :: HTree -&gt; [HTree] -&gt; [HTree]\ninsertTree t [] = [t]\ninsertTree t (t1:ts) \n     | v t &lt; v t1 = t:t1:ts\n     | otherwise = t1 : insertTree t ts\n</code></pre>\n\n<p>And here is my attempt to make a CodeTable </p>\n\n<pre><code>constructTable :: HTree -&gt; CodeTable\nconstructTable = convert []\n      where\n      convert :: Code -&gt; HTree -&gt; CodeTable\n      convert hc (Leaf c n) = [(c, hc)]\n      convert hc (Node n tl tr) = (convert (hc++[L]) tl) ++ (convert (hc++[R]) tr)\n</code></pre>\n\n<p>Error for Code Table </p>\n\n<pre><code>CodeTable.hs:14:33: error:\n    \u2022 Couldn't match type \u2018Int\u2019 with \u2018Char\u2019\n      Expected type: Value\n        Actual type: Number\n    \u2022 In the expression: c\n      In the expression: (c, hc)\n      In the expression: [(c, hc)]\n   |\n14 |       convert hc (Leaf c n) = [(c, hc)]\n</code></pre>\n\n<p>Do you spot any mistakes or could you tell me why neither of this codes is working for me?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1534353612, "post_id": 51863338, "comment_id": 90679052, "body": "In theory, it only needs to be evaluated once. In practice, it&#39;s an implementation detail."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1534353817, "post_id": 51863338, "comment_id": 90679135, "body": "By default Haskell has no <i>tabulation</i>, so it will usually end up evaluate the function twice. Although it is possible that it can get optimized."}], "answers": [{"comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534362991, "post_id": 51863603, "comment_id": 90683279, "body": "In OP&#39;s case f1 and f2 are not only doing the same thing, they are doing the same thing the same way. It is trivial for the compiler to merge identically implemented functions. GHC does this. Of course in this particular case they are simple enough to be completely inlined in main too."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534364355, "post_id": 51863603, "comment_id": 90683858, "body": "@n.m. <i>does</i> GHC merge them? Sure, eliminating <i>identically implemented</i> functions is trivial, but it also seems patently useless for non-trivial code. If anything, I&#39;d say it would make sense to use this for triggering a warning. Interesting would be to eliminate stuff that&#39;s merely equivalent, but that really isn&#39;t feasible."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534388466, "post_id": 51863603, "comment_id": 90689734, "body": "I think it just happens in a CSE pass."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 1, "last_activity_date": 1534355033, "last_edit_date": 1534355033, "creation_date": 1534354221, "answer_id": 51863603, "question_id": 51863338, "link": "https://stackoverflow.com/questions/51863338/evaluation-of-a-function-in-other-functions-with-same-parameters-in-haskell/51863603#51863603", "title": "Evaluation of a function in other functions with same parameters in Haskell", "body": "<p>The language does, strictly speaking, not define whether it's evaluated once, twice, or 37 times, or what it even means to evaluate something a particular number of times. All it does guarantee is that the strictness rules are obeyed, i.e. with</p>\n\n<pre><code>f1, f2 :: [Int]\nf1 = repeat 1\nf2 = error \"evil\"\n\nmain = do\n  print f1\n  print f2\n</code></pre>\n\n<p>you could be sure that the error isn't triggered because printing <code>f1</code> will actually just forever spit out <code>1</code> digits and thus <code>f2</code> is evaluated exactly zero times.</p>\n\n<p>For some particular situations, the compiler could actually do all the computations for <code>f1</code> and <code>f2</code> at compile-time and neither of them would be \u201cevaluated\u201d at runtime at all.</p>\n\n<p><strong>In practice, you should expect two evaluations to happen</strong>. Confirming that two functions do the same thing is a hard problem, so the compiler generally won't bother.</p>\n"}], "owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 51863603, "answer_count": 1, "score": 0, "last_activity_date": 1534355033, "creation_date": 1534353164, "question_id": 51863338, "link": "https://stackoverflow.com/questions/51863338/evaluation-of-a-function-in-other-functions-with-same-parameters-in-haskell", "title": "Evaluation of a function in other functions with same parameters in Haskell", "body": "<p>Consider the toy example below:</p>\n\n<pre><code>someNum :: Int\nsomeNum = 42\n\nfuncCommon :: Int -&gt; Int\nfuncCommon x = x + 1\n\nfunc1 :: Int -&gt; (Int -&gt; Int) -&gt; Int\nfunc1 x f = f x\n\nfunc2 :: Int -&gt; (Int -&gt; Int) -&gt; Int\nfunc2 x f = f x\n\nf1 = func1 someNum funcCommon \nf2 = func2 someNum funcCommon \n\nmain = do\n  print f1\n  print f2\n</code></pre>\n\n<p>The same arguments <strong>funcCommon</strong> and <strong>someNum</strong> get applied as a parameters to both func1 and func2 so we get a situation where func1 and func2 are declared separately (are different functions) but both end up calling the same function with the same argument. How many times then does <strong>funcCommon someNum</strong> get actually evaluated? Does the result get reused and there is only one evaluation of <strong>funcCommon someNum</strong>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 3, "creation_date": 1534346317, "post_id": 51860904, "comment_id": 90675350, "body": "(1) &quot;I can imagine the use of it, but i want something more... academic&quot; -- Don&#39;t fall into the trap of expecting everything in Haskell must have a sophisticated mathematical explanation behind it. Sometimes an arrow is just an arrow. (2) &quot;like the word &#39;map&#39; who at first looks like the function but it&#39;s only a variable name&quot; -- <code>map</code> is a function, <i>and</i> a variable name."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1534346886, "post_id": 51860904, "comment_id": 90675681, "body": "you could try reading the book anew from the start, see if things become clearer."}, {"owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "edited": false, "score": 0, "creation_date": 1534347241, "post_id": 51860904, "comment_id": 90675897, "body": "I did it, but I need some better explanation to certain parts"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1534349467, "post_id": 51860904, "comment_id": 90677081, "body": "see also <a href=\"https://wiki.haskell.org/Keywords#-.3E\" rel=\"nofollow noreferrer\">this</a>. also, while you&#39;re learning, it might be helpful to use explicit parens instead of <code>$</code>. Also, using more white space and putting less stuff on each line might clear up the code, too."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1534350039, "post_id": 51860904, "comment_id": 90677374, "body": "(as something <a href=\"https://lpaste.net/5242398113259323392\" rel=\"nofollow noreferrer\">like this</a>, say)."}, {"owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "edited": false, "score": 0, "creation_date": 1534433113, "post_id": 51860904, "comment_id": 90712513, "body": "Thanks, more clear"}], "answers": [{"comments": [{"owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "edited": false, "score": 0, "creation_date": 1534346792, "post_id": 51861005, "comment_id": 90675622, "body": "yes, I thought I understood &#39;Either&#39;, but I don&#39;t know how they work in the example"}, {"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1534352076, "post_id": 51861005, "comment_id": 90678356, "body": "<code>Either t u</code> is either something of the shape <code>Left t</code> or <code>Right u</code>. So <code>Left</code> is a constructor or a function, in that case , with type <code>t -&gt; Either t u</code> and <code>Right</code> is a function <code>u -&gt; Either t u</code>."}], "tags": [], "owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "is_accepted": false, "score": 3, "last_activity_date": 1534344409, "creation_date": 1534344409, "answer_id": 51861005, "question_id": 51860904, "link": "https://stackoverflow.com/questions/51860904/understanding-an-example-involving-left-right-and-case-statements/51861005#51861005", "title": "Understanding an example involving Left, Right and case statements", "body": "<p><code>-&gt;</code> merely denotes correspondence between an alternative and the consequent value returned in a single <code>case</code> clause.</p>\n\n<pre><code>x = 2\ny = case x of\n    2 -&gt; 4\n    5 -&gt; 42\n    _ -&gt; 0\n</code></pre>\n\n<p>sets <code>y</code> to 4.</p>\n\n<p><code>Left</code> and <code>Right</code> are data constructors for <code>Either</code>:</p>\n\n<pre><code>data Either t u = Left t | Right u\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "edited": false, "score": 0, "creation_date": 1534347385, "post_id": 51861008, "comment_id": 90675987, "body": "and &#39;Left&#39;? how it works in the example?, I know it become from &#39;Either&#39; but, it&#39;s not clear for me their adaptation to the code"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "edited": false, "score": 0, "creation_date": 1534350154, "post_id": 51861008, "comment_id": 90677428, "body": "Look at the definition for <code>Either</code>, it\u2019s basically the same."}, {"owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "edited": false, "score": 0, "creation_date": 1534433309, "post_id": 51861008, "comment_id": 90712626, "body": "So, It&#39;s just like say, &quot;it&#39;s an error, put in left, it&#39;s the correct answer put it on Right&quot;, it&#39;s they only use"}], "tags": [], "owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "is_accepted": true, "score": 4, "last_activity_date": 1534344424, "creation_date": 1534344424, "answer_id": 51861008, "question_id": 51860904, "link": "https://stackoverflow.com/questions/51860904/understanding-an-example-involving-left-right-and-case-statements/51861008#51861008", "title": "Understanding an example involving Left, Right and case statements", "body": "<p>The identifiers <code>Nothing</code> and <code>Just</code> are data constructors for the <code>Maybe</code> type, which is given as:</p>\n\n<pre><code>data Maybe a = Nothing | Just a  \n</code></pre>\n\n<p>Data constructors let you work in two directions. You can use them both as values, where you put values into a data constructor:</p>\n\n<pre><code>let x = Just 3\nlet y = Nothing\n</code></pre>\n\n<p>You can also use pattern matching to move values out of a value which has a data constructor:</p>\n\n<pre><code>case x of\n    Just y -&gt; putStr y\n    Nothing -&gt; putStr \"Nothing here to see\"\n</code></pre>\n\n<p>The arrow itself does not have any particular meaning. It just separates the pattern (like <code>Just y</code> or <code>Nothing</code>) from the value of the <code>case</code> expression when the pattern matches <code>putStr y</code> or <code>putStr \"Nothing here to see\"</code>. It is just syntax.</p>\n"}], "owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 541, "favorite_count": 0, "accepted_answer_id": 51861008, "answer_count": 2, "score": 2, "last_activity_date": 1536587029, "creation_date": 1534344060, "last_edit_date": 1536587029, "question_id": 51860904, "link": "https://stackoverflow.com/questions/51860904/understanding-an-example-involving-left-right-and-case-statements", "title": "Understanding an example involving Left, Right and case statements", "body": "<p>I'm reading the book \"learn you haskell for great good\", and one of the examples there confuses me, you can see the example <a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses\" rel=\"nofollow noreferrer\">here</a></p>\n\n<pre><code>import qualified Data.Map as Map\n\ndata LockerState = Taken | Free deriving (Show, Eq)\n\ntype Code = String\n\ntype LockerMap = Map.Map Int (LockerState, Code)\n\nlockerLookup :: Int -&gt; LockerMap -&gt; Either String Code\nlockerLookup lockerNumber map = case Map.lookup lockerNumber map of\n    Nothing -&gt; Left $ \"Locker\" ++ show lockerNumber ++ \"doesn't exist\"\n    Just (state, code) -&gt; if state /= Taken\n        then Right code\n        else Left $ \"Locker\" ++ show lockerNumber ++ \"is already taken\"\n{-\nlookup :: Ord k =&gt; k -&gt; Map k a -&gt; Maybe a\nLookup the value at a key in the map.\nThe function will return the corresponding value as (Just value), or Nothing if the key isn't in the map.\n-}\n\n-- The \"::\" can be read \"has type.\"\nlockers :: LockerMap\nlockers = Map.fromList\n    [(100,(Taken, \"ZD39I\"))\n    ,(101,(Free, \"JAH3I\"))\n    ,(103,(Free, \"IQSA9\"))\n    ,(105,(Free, \"QOTSA\"))\n    ,(109,(Taken, \"893JJ\"))\n    ,(110,(Taken, \"99292\"))\n    ]\n</code></pre>\n\n<p>But the specific line with <code>Nothing -&gt; Left</code> is the one that confuses me. First, I want to know the exactly meaning of the arrow (I can imagine the meaning of it, but I want something more 'academic')</p>\n\n<p>The other part are the words <code>Left</code> and <code>Right</code>, I don't know if they are using it like <code>map</code> which at first looks like a function but it's only a variable name, or if work as code. In that case what do they really do?</p>\n\n<p>UPDATE</p>\n\n<p>I have find <a href=\"https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell/10_Error_Handling\" rel=\"nofollow noreferrer\">here</a> a great explanation about \"Either\". I put it here as reference for anyone with the same doubts I had (go to \"Either May Be Better than Maybe\"). I'm going to put an extract of the text that gave me the final clue I needed, just in case the page dissappear in the future.</p>\n\n<p>\"Talking about error handling 'Maybe' is a bit limited. All we know about the failure is that it occurred. In practice, we'd like to know more. So the next step in error handling is to use the 'Either'.</p>\n\n<p>Either is parameterized by two types, not one. A value of the Either type either contains a value of type a or of type b. We can discriminate between the two possibilities by pattern matching on either constructor. Either is mostly used as a generalization of Maybe in which Left not only encodes failure but is accompanied by an error message. Right encodes success and the accompanying value.\"</p>\n"}, {"tags": ["haskell", "static-linking", "nix"], "comments": [{"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1535048734, "post_id": 51860190, "comment_id": 90933791, "body": "Have you tried compiling a small C program with the static ICU?  That might halve the places the problem is.  Are you passing <code>-DU_STATIC_IMPLEMENTATION</code> somewhere?"}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1535117565, "post_id": 51860190, "comment_id": 90960898, "body": "I tried passing <code>-DU_STATIC_IMPLEMENTATION</code> when compiling <code>text-icu</code> and test example, but it had no effect. AFAIK it should only matters when you include <code>icu</code> header files (I might be wrong here). I will try to build a static C program, it&#39;s a good idea, thanks for the suggestion."}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1535119685, "post_id": 51860190, "comment_id": 90962304, "body": "Maybe the Haskell <code>text-icu</code> package needs <code>-DU_STATIC_IMPLEMENTATION</code>?  I think something must include the <code>icu</code> headers.  <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/phases.html#options-affecting-the-c-pre-processor\" rel=\"nofollow noreferrer\">GHC docs on passing arguments to CPP</a>"}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1535120962, "post_id": 51860190, "comment_id": 90963180, "body": "Thank you for the link, I missed this piece somehow. I think I tried every option except <code>-optc-Dfoo</code> GHC flag. I feel this might be the case. I&#39;ll try it again this weekend"}, {"owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "reply_to_user": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1535308519, "post_id": 51860190, "comment_id": 91008654, "body": "@bergey I was able to link a static C executable and then a Haskell one, but manually, using only GHC (Cabal still fails). TLDR, <code>-lstdc++</code> runtime required, and the order of libraries passed to linker matters. I described the whole process in the <code>4e6&#47;text-icu-static-example</code> readme."}], "owner": {"reputation": 10368, "user_id": 435904, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/ce3dbd2b9c6693c6472c947e758a0e24?s=128&d=identicon&r=PG", "display_name": "4e6", "link": "https://stackoverflow.com/users/435904/4e6"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 173, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1534341614, "creation_date": 1534341614, "question_id": 51860190, "link": "https://stackoverflow.com/questions/51860190/static-executable-in-haskell-depending-on-text-icu", "title": "Static executable in Haskell depending on text-icu", "body": "<p>I'm trying to create a static executable which depends on <a href=\"https://hackage.haskell.org/package/text-icu\" rel=\"nofollow noreferrer\">text-icu</a>.</p>\n\n<p>Here is the minified example <a href=\"https://github.com/4e6/text-icu-static-example\" rel=\"nofollow noreferrer\">https://github.com/4e6/text-icu-static-example</a></p>\n\n<p>To enable static linking, I build <code>icu</code> with <code>--enable-static</code> flag <a href=\"https://github.com/4e6/text-icu-static-example/blob/a1b5fb33fb508855617727375d82864819f42863/default.nix#L8-L16\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre><code>  # http://userguide.icu-project.org/packaging#TOC-Link-to-ICU-statically\n  icu-static = pkgs.icu.overrideAttrs (attrs: {\n    dontDisableStatic = true;\n    configureFlags = (attrs.configureFlags or \"\") + \" --enable-static\";\n    outputs = attrs.outputs ++ [ \"static\" ];\n    postInstall = ''\n      mkdir -p $static/lib\n      mv -v lib/*.a $static/lib\n    '' + (attrs.postInstall or \"\");\n  });\n</code></pre>\n\n<p>And add following ghc options <a href=\"https://github.com/4e6/text-icu-static-example/blob/a1b5fb33fb508855617727375d82864819f42863/default.nix#L27-L33\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre><code>    configureFlags = [\n      \"--ghc-option=-optl=-static\"\n      \"--ghc-option=-optl=-pthread\"\n      \"--ghc-option=-optl=-L${pkgs.glibc.static}/lib\"\n      \"--ghc-option=-optl=-L${pkgs.gmp6.override { withStatic = true; }}/lib\"\n      \"--ghc-option=-optl=-L${icu-static.static}/lib\"\n    ];\n</code></pre>\n\n<p>As a result of <code>nix-build .</code>, I'm getting a lot of errors about undefined references, see <a href=\"https://github.com/4e6/text-icu-static-example/blob/a1b5fb33fb508855617727375d82864819f42863/nix-build.log\" rel=\"nofollow noreferrer\">nix-build.log</a>:</p>\n\n<pre><code>/nix/store/2h1il2pyfh20kc5rh7vnp5a564alxr21-icu4c-59.1-static/lib/libicui18n.a(regexcmp.ao):(.text+0x7805): more undefined references to `icu_59::UVector64::setElementAt(long, int)' follow\n/nix/store/2h1il2pyfh20kc5rh7vnp5a564alxr21-icu4c-59.1-static/lib/libicui18n.a(regexcmp.ao): In function `icu_59::RegexCompile::compile(UText*, UParseError&amp;, UErrorCode&amp;)':\n(.text+0x8355): undefined reference to `__cxa_throw_bad_array_new_length'\n/nix/store/2h1il2pyfh20kc5rh7vnp5a564alxr21-icu4c-59.1-static/lib/libicui18n.a(regexcmp.ao):(.data.rel.ro._ZTIN6icu_5912RegexCompileE[_ZTIN6icu_5912RegexCompileE]+0x0): undefined reference to `vtable for __cxxabiv1::__si_class_type_info'\ncollect2: error: ld returned 1 exit status\n`cc' failed in phase `Linker'. (Exit code: 1)\n</code></pre>\n\n<p>This setup works with other libraries but fails with <code>text-icu</code>. Any ideas on what I'm doing wrong?</p>\n\n<p>link to <a href=\"https://github.com/bos/text-icu/issues/39\" rel=\"nofollow noreferrer\">github issue</a></p>\n"}, {"tags": ["haskell", "newtype", "union-types"], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 1, "last_activity_date": 1534332469, "creation_date": 1534332469, "answer_id": 51857823, "question_id": 51856734, "link": "https://stackoverflow.com/questions/51856734/unable-to-generalise-data-operations-in-haskell-ambiguous-return-type/51857823#51857823", "title": "Unable to generalise data operations in Haskell, ambiguous return type", "body": "<p>The instances of <code>Calendar</code> seem to be essentially various <em>time intervals</em>. Then why don't you make the methods</p>\n\n<pre><code>  asInterval :: c -&gt; (UTCTime, UTCTime)\n  -- e.g. asInterval (Day 2018-8-15) \u2261 (2018-8-15_0:0:0, 2018-8-16_0:0:0)\n  containingInterval :: (UTCTime, UTCTime) -&gt; Maybe c\n  -- e.g. containingInterval (2018-8-5_0:0:0, 2018-8-22_0:0:0) :: Maybe Month\n  --            \u2261 Just (Month 2018-8)\n  --      containingInterval (2018-8-5_0:0:0, 2018-8-22_0:0:0) :: Maybe Week\n  --            \u2261 Nothing\n</code></pre>\n\n<p>That would allow</p>\n\n<pre><code>containing :: (Calendar c, Calendar c') =&gt; c -&gt; Maybe c'\ncontaining = containingInterval . asInterval\n</code></pre>\n\n<p>and that could be used</p>\n\n<pre><code>extractCalendar :: (Calendar c, ToJSON c) =&gt; DateField -&gt; Maybe c\nextractCalendar = \\case\n  DateFieldDay calendar -&gt; containing calendar\n  DateFieldWeek calendar -&gt; containing calendar\n  DateFieldMonth calendar -&gt; containing calendar\n  DateFieldQuarter calendar -&gt; containing calendar\n  DateFieldYear calendar -&gt; containing calendar\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 0, "last_activity_date": 1534341668, "creation_date": 1534341668, "answer_id": 51860207, "question_id": 51856734, "link": "https://stackoverflow.com/questions/51856734/unable-to-generalise-data-operations-in-haskell-ambiguous-return-type/51860207#51860207", "title": "Unable to generalise data operations in Haskell, ambiguous return type", "body": "<p>Your <code>instance ToJSON DateField</code> is problematic because it doesn't distinguish between types of DateField. You should add a type tag to the JSON, like this:</p>\n\n<pre><code>instance ToJSON DateField where\n  toJSON (DateFieldDay calendar) = object [\n       \"type\" .= \"DateFieldDay\",\n       \"calendar\" .= calendar ]\n  -- etc\n</code></pre>\n\n<p>Then in the FromJSON instance you can use a case statement to discriminate on the <code>\"type\"</code> field.</p>\n"}], "owner": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1534341668, "creation_date": 1534327520, "question_id": 51856734, "link": "https://stackoverflow.com/questions/51856734/unable-to-generalise-data-operations-in-haskell-ambiguous-return-type", "title": "Unable to generalise data operations in Haskell, ambiguous return type", "body": "<p>I'm trying to generalise some code I have around generating a report around various views of a range of dates, for example the view could be like this:</p>\n\n<pre><code>      | Signups | Active users \n------|---------|--------------\n 2018 | 155     | 3241         \n 2017 | 139     | 3083         \n 2016 | 125     | 2543         \n</code></pre>\n\n<p>Or it could be switched to a month view like this:</p>\n\n<pre><code>         | Signups | Active users \n---------|---------|--------------\n 08/2018 | 15      | 324            \n 07/2018 | 13      | 308          \n 06/2018 | 12      | 254          \n</code></pre>\n\n<p>You get the idea... So I thought it would make sense to generalise each 'mode' you can set this data to render in, it supports days / weeks / months / quarters / years.</p>\n\n<pre><code>data DateField\n  = DateFieldDay CalendarDay\n  | DateFieldWeek CalendarWeek\n  | DateFieldMonth CalendarMonth\n  | DateFieldQuarter CalendarQuarter\n  | DateFieldYear CalendarYear\n\ninstance Calendar DateField where\n  fromDay = DateFieldDay . fromDay\n  fallsWithin = \\case\n    DateFieldDay calendar -&gt; fallsWithin calendar\n    DateFieldWeek calendar -&gt; fallsWithin calendar\n    DateFieldMonth calendar -&gt; fallsWithin calendar\n    DateFieldQuarter calendar -&gt; fallsWithin calendar\n    DateFieldYear calendar -&gt; fallsWithin calendar\n\ninstance ToJSON DateField where\n  toJSON = \\case\n    DateFieldDay calendar -&gt; toJSON calendar\n    DateFieldWeek calendar -&gt; toJSON calendar\n    DateFieldMonth calendar -&gt; toJSON calendar\n    DateFieldQuarter calendar -&gt; toJSON calendar\n    DateFieldYear calendar -&gt; toJSON calendar\n\nclass Calendar c where\n  fromDay :: Day -&gt; c\n  fallsWithin :: c -&gt; Day -&gt; Bool\n\nnewtype CalendarDay = CalendarDay Day   \n\ninstance Calendar CalendarDay where\n  fromDay = CalendarDay\n  fallsWithin (Calendar dayField) day = day == dayField \n\ninstance ToJSON CalendarDay where\n  toJSON (CalendarDay day) = toJSON day\n\n-- instances for CalendarWeek, CalendarMonth etc etc\n</code></pre>\n\n<p>So my issue arises with the fact that instances from my sum type <code>DateField</code> have to implement the same function twice <code>extractCalendar</code>... But I am unable to generalise this, and have to effectively leave it defined twice, I cannot define something like this:</p>\n\n<pre><code>extractCalendar :: (Calendar c, ToJSON c) =&gt; DateField -&gt; c\nextractCalendar = \\case\n  DateFieldDay calendar -&gt; calendar\n  DateFieldWeek calendar -&gt; calendar\n  DateFieldMonth calendar -&gt; calendar\n  DateFieldQuarter calendar -&gt; calendar\n  DateFieldYear calendar -&gt; calendar\n</code></pre>\n\n<p>Because the inner types are all <code>newtypes</code> and the type signature for <code>extractCalendar</code> is somewhat non-sensical.</p>\n\n<p>I'm not sure if this is actually making the code worse by trying to generalise like this, and can't really work out where to take the code from here.</p>\n\n<p>The other portion of this code I would like to share is as follows:</p>\n\n<pre><code>generateRange :: MonadIO m =&gt; DateView -&gt; m [DateField]\ngenerateRange view = rangeToFields . takeWhile includeDate &lt;$&gt; dateStream\n  where\n    rangeToFields dates =\n      case view of\n        DateViewDay -&gt; DateFieldDay &lt;$&gt; foldr calendarDays [] dates\n        DateViewWeek -&gt; DateFieldWeek &lt;$&gt; foldr calendarWeeks [] dates\n        DateViewMonth -&gt; DateFieldMonth &lt;$&gt; foldr calendarMonths [] dates\n        DateViewQuarter -&gt; DateFieldQuarter &lt;$&gt; foldr calendarQuarters [] dates\n        DateViewYear -&gt; DateFieldYear &lt;$&gt; foldr calendarYears [] dates\n\n    calendarDays day acc =\n      if True\n         then fromDay day : acc\n         else acc\n\n    calendarWeeks day acc =\n      if True\n         then fromDay day : acc\n         else acc\n\n    calendarMonths day acc =\n      if dayDate day == 1\n         then fromDay day : acc\n         else acc\n\n    calendarQuarters day acc =\n      if dayDate day == 1 &amp;&amp; (dayMonth day `mod` 3 == 0)\n         then fromDay day : acc\n         else acc\n\n    calendarYears day acc =\n      if dayDate day == 1 &amp;&amp; dayMonth day == 1\n         then fromDay day : acc\n         else acc\n\n    includeDate day =\n      dayYear day &gt;= 2014\n</code></pre>\n\n<p>It takes a stream of days, from today back into the past one day after the next, and then folds over these generating the relevant <code>DateField</code> depending on which <code>DateView</code> is provided.</p>\n\n<p>I feel like I am misusing the <code>typeclass</code> construct here... but I am unsure how to achieve the generalisation I want in Haskell with any other structure...</p>\n"}, {"tags": ["haskell", "haskell-lens", "type-families"], "answers": [{"tags": [], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "is_accepted": true, "score": 4, "last_activity_date": 1534323888, "creation_date": 1534323888, "answer_id": 51855855, "question_id": 51855651, "link": "https://stackoverflow.com/questions/51855651/writing-classy-lenses-for-records-with-type-families/51855855#51855855", "title": "Writing classy lenses for records with type families?", "body": "<p>Finally figured it out...</p>\n\n<pre><code>instance (fa ~ DBField f Int PGInt) =&gt; HasFieldA (RecordPoly f) fa where\n  fieldA fctor (RecordPoly fa fb) = fmap (\\x -&gt; RecordPoly x fb) (fctor fa)\n</code></pre>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 51855855, "answer_count": 1, "score": 2, "last_activity_date": 1534323888, "creation_date": 1534323057, "question_id": 51855651, "link": "https://stackoverflow.com/questions/51855651/writing-classy-lenses-for-records-with-type-families", "title": "Writing classy lenses for records with type families?", "body": "<p>Related to <a href=\"https://stackoverflow.com/questions/47946585/lenses-and-typefamilies\">Lenses and TypeFamilies</a> and <a href=\"https://stackoverflow.com/questions/41456841/how-to-derive-instances-for-records-with-type-families\">How to derive instances for records with type-families</a> and <a href=\"https://stackoverflow.com/questions/41456869/how-to-make-lenses-for-records-with-type-families\">How to make lenses for records with type-families</a></p>\n\n<p>Every time I've tried using type-families enthusiastically to reduce some boilerplate code, I've programmed myself into a corner. Here's the latest one -- how do I define a lens for <code>RecordPoly f</code> in the code snippet given below?</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell, DeriveGeneric, MultiParamTypeClasses, FunctionalDependencies, UndecidableInstances, DataKinds #-}\nmodule Try where\n\nimport Control.Lens\n\ndata PGInt\ndata PGText\n\ndata Selector = Haskell | DB\n\n\ntype family DBField (f :: Selector) hask db where\n  DBField 'Haskell hask _ = hask\n  DBField 'DB _ db = db\n\ndata RecordPoly f = RecordPoly\n  { recFieldA :: !(DBField f Int PGInt)\n  , recFieldB :: !(DBField f String PGText)\n  }\n\nclass HasFieldA s a | s -&gt; a where fieldA :: Lens' s a\n\ninstance HasFieldA (RecordPoly 'Haskell) Int where\n  fieldA fctor (RecordPoly fa fb) = fmap (\\x -&gt; RecordPoly x fb) (fctor fa)\n</code></pre>\n\n<p>It's failing with the following error:</p>\n\n<pre><code>\u2022 Illegal instance declaration for \u2018HasFieldA (RecordPoly f) a\u2019\n    The liberal coverage condition fails in class \u2018HasFieldA\u2019\n      for functional dependency: \u2018s -&gt; a\u2019\n    Reason: lhs type \u2018RecordPoly f\u2019 does not determine rhs type \u2018a\u2019\n    Un-determined variable: a\n\u2022 In the instance declaration for \u2018HasFieldA (RecordPoly f) a\u2019\n</code></pre>\n\n<p>The only thing that seems to work is the following:</p>\n\n<pre><code>instance HasFieldA (RecordPoly 'Haskell) Int where\n  fieldA fctor (RecordPoly fa fb) = fmap (\\x -&gt; RecordPoly x fb) (fctor fa)\n</code></pre>\n\n<p>Is this the only way to make it work (thus resulting in a new kind of boilerplate explosion)? How come a similarly polymorphic version of this code works, but not when it is with type-families:</p>\n\n<pre><code>data RecordPoly fa fb = RecordPoly\n  { recFieldA :: fa\n  , recFieldB :: fb\n  }\n\nclass HasFieldA s a | s -&gt; a where fieldA :: Lens' s a\n\ninstance HasFieldA (RecordPoly fa fb) fa where\n  fieldA fctor (RecordPoly fa fb) = fmap (\\x -&gt; RecordPoly x fb) (fctor fa)\n</code></pre>\n"}, {"tags": ["haskell", "binary-tree", "applicative"], "answers": [{"comments": [{"owner": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "edited": false, "score": 0, "creation_date": 1534326899, "post_id": 51855798, "comment_id": 90665309, "body": "Thank you for your answer!  What does ($ a) mean ?"}, {"owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "reply_to_user": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "edited": false, "score": 1, "creation_date": 1534327201, "post_id": 51855798, "comment_id": 90665479, "body": "The link I&#39;ve provided (about laws) contains this information: ($ y) is the function that supplies y as argument to another function. <a href=\"https://en.wikibooks.org/wiki/Haskell/Higher-order_functions#Application\" rel=\"nofollow noreferrer\">en.wikibooks.org/wiki/Haskell/&hellip;</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "edited": false, "score": 3, "creation_date": 1534327848, "post_id": 51855798, "comment_id": 90665816, "body": "@MMacphail <code>($ a)</code> is the same as <code>(\\f -&gt; f a)</code> the function which takes a function <code>f</code> and applies it to <code>a</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "edited": false, "score": 0, "creation_date": 1534347554, "post_id": 51855798, "comment_id": 90676079, "body": "@MMacphail, more generally, if <code>*&amp;*</code> is an operator, <code>(*&amp;* y)</code> (called an <i>operator section</i>) is the same as <code>\\x -&gt; x *&amp;* y</code>. In this case, the operator is <code>$</code>, defined <code>f $ a = f a</code>. You can use an operator on the other side, too: <code>(x *&amp;*) = \\y -&gt; x *&amp;* y</code>"}, {"owner": {"reputation": 607, "user_id": 7723714, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e0832d8187c62349d3a8aac8bb77ddaf?s=128&d=identicon&r=PG&f=1", "display_name": "micsza", "link": "https://stackoverflow.com/users/7723714/micsza"}, "edited": false, "score": 0, "creation_date": 1560284080, "post_id": 51855798, "comment_id": 99683875, "body": "@IgorDrozdov Is the last equation in author&#39;s code correct? Namely, <code>Branch t1 t2 &lt;*&gt; Branch t3 t4 = Branch (t1 &lt;*&gt; t3) (t2 &lt;*&gt; t4)</code> ... Intuitively it doesn&#39;t feel right  and  <code>Branch t1 t2 &lt;*&gt; t = Branch (t1 &lt;*&gt; t) (t2 &lt;*&gt; t)</code> feels better but I cannot come up with any example or proof that would support this feeling."}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 6, "last_activity_date": 1534323664, "creation_date": 1534323664, "answer_id": 51855798, "question_id": 51854757, "link": "https://stackoverflow.com/questions/51854757/applicative-instance-for-non-empty-leafy-tree-in-haskell/51855798#51855798", "title": "Applicative instance for non-empty leafy tree in Haskell", "body": "<blockquote>\n  <p>Even if it compiles, I'm very suspicious about this implementation. I don't know if this Branch (Leaf (+1)) (Leaf (+2)) &lt;*> Leaf 7 should return Leaf 8 (find the closest function to apply) or duplicate and return Branch (Leaf 8) (Leaf 9)</p>\n</blockquote>\n\n<p>Reasonable instances should follow <a href=\"https://en.wikibooks.org/wiki/Haskell/Applicative_functors#Applicative_functor_laws\" rel=\"noreferrer\">Applicative functor laws</a> and one of them is:</p>\n\n<pre><code>u &lt;*&gt; pure y = pure ($ y) &lt;*&gt; u -- Interchange\n</code></pre>\n\n<p>i.e.</p>\n\n<pre><code>Branch t1 t2 &lt;*&gt; Leaf a\n</code></pre>\n\n<p>should be the same as:</p>\n\n<pre><code>pure ($ a) &lt;*&gt; Branch t1 t2\n</code></pre>\n\n<p>But according to this implementation:</p>\n\n<pre><code>Leaf f &lt;*&gt; t = f &lt;$&gt; t\n</code></pre>\n\n<p>It should be equal to:</p>\n\n<pre><code>($ a) &lt;$&gt; Branch t1 t2\n</code></pre>\n\n<p>i. e</p>\n\n<pre><code>Branch (fmap ($ a) t1) (fmap ($ a) t2)\n</code></pre>\n\n<p>Hence, in the particular case of <code>Branch (Leaf (+1)) (Leaf (+2)) &lt;*&gt; Leaf 7</code>, it should return:</p>\n\n<pre><code>Branch (Leaf 8) (Leaf 9)\n</code></pre>\n"}], "owner": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1246, "favorite_count": 0, "accepted_answer_id": 51855798, "answer_count": 1, "score": 5, "last_activity_date": 1534323664, "creation_date": 1534318973, "question_id": 51854757, "link": "https://stackoverflow.com/questions/51854757/applicative-instance-for-non-empty-leafy-tree-in-haskell", "title": "Applicative instance for non-empty leafy tree in Haskell", "body": "<p>Given the following data type:</p>\n\n<pre><code>data Tree a =\n    Branch (Tree a) (Tree a)\n  | Leaf a deriving (Eq, Show)\n</code></pre>\n\n<p>And the following Functor instance :</p>\n\n<pre><code>instance Functor Tree where\n  fmap f (Leaf a)       = Leaf $ f a\n  fmap f (Branch t1 t2) = Branch (fmap f t1) (fmap f t2)\n</code></pre>\n\n<p>How to implement best the Applicative instance for this tree?\nI came up with:</p>\n\n<pre><code>instance Applicative Tree where\n  pure = Leaf\n\n  Leaf f       &lt;*&gt; t            = f &lt;$&gt; t\n  Branch t1 t2 &lt;*&gt; Leaf a       = t1 &lt;*&gt; Leaf a\n  Branch t1 t2 &lt;*&gt; Branch t3 t4 = Branch (t1 &lt;*&gt; t3) (t2 &lt;*&gt; t4)\n</code></pre>\n\n<p>Even if it compiles, I'm very suspicious about this implementation.\nI don't know if this <code>Branch (Leaf (+1)) (Leaf (+2)) &lt;*&gt; Leaf 7</code> should return <code>Leaf 8</code> (find the closest function to apply) or duplicate and return <code>Branch (Leaf 8) (Leaf 9)</code>.</p>\n"}, {"tags": ["haskell", "types", "data-kinds"], "answers": [{"comments": [{"owner": {"reputation": 4008, "user_id": 81557, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c89ce60c117454b3476c382d0439c4c1?s=128&d=identicon&r=PG", "display_name": "Scott", "link": "https://stackoverflow.com/users/81557/scott"}, "edited": false, "score": 0, "creation_date": 1534300994, "post_id": 51852175, "comment_id": 90657153, "body": "Perfect! Thanks!"}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 4, "last_activity_date": 1534300770, "last_edit_date": 1534300770, "creation_date": 1534300385, "answer_id": 51852175, "question_id": 51852127, "link": "https://stackoverflow.com/questions/51852127/construct-value-from-kind-in-haskell/51852175#51852175", "title": "Construct value from Kind in Haskell", "body": "<p>You just need a better way to constrain the kind of <code>MagicN</code>'s first parameter. <code>{-# LANGUAGE KindSignatures #-}</code> will give you just what you need.</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE KindSignatures #-}\n\nimport Data.Proxy\nimport GHC.TypeLits\n\ndata MagicN (n :: Nat) a = MagicN a\n  deriving (Show)\n</code></pre>\n\n<p>All the rest is the same.</p>\n\n<p>Note: <code>KindSignatures</code> is implied by <code>PolyKinds</code> and by <code>TypeFamilies</code>, so if you're using either of the latter you won't need to add it explicitly.</p>\n"}], "owner": {"reputation": 4008, "user_id": 81557, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c89ce60c117454b3476c382d0439c4c1?s=128&d=identicon&r=PG", "display_name": "Scott", "link": "https://stackoverflow.com/users/81557/scott"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 1, "accepted_answer_id": 51852175, "answer_count": 1, "score": 2, "last_activity_date": 1534300770, "creation_date": 1534299962, "question_id": 51852127, "link": "https://stackoverflow.com/questions/51852127/construct-value-from-kind-in-haskell", "title": "Construct value from Kind in Haskell", "body": "<p>I'd like to go from a type to value as follows, but without using the depreciated DatatypeContexts:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE DataKinds #-}          \n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE DatatypeContexts #-}   \n\nimport Data.Proxy\nimport GHC.TypeLits\n\ndata (KnownNat n) =&gt; MagicN n a = MagicN a             \n  deriving (Show)                                      \n\ngetMagicN :: forall n. (KnownNat n) =&gt; MagicN n Integer\ngetMagicN = MagicN $ natVal (Proxy :: Proxy n)         \n\nMagicN five = getMagicN :: MagicN 5 Integer                     \n</code></pre>\n\n<p>I'm not too concerned if this or another method (Peano numbers etc) is used; the requirement is to be able to construct the value from the type information alone.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "websocket", "functional-programming"], "answers": [{"comments": [{"owner": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534366716, "post_id": 51859399, "comment_id": 90684835, "body": "I made the changes but then GHC spat out this: <code>*** Exception: HandshakeFailed (Error_Packet_Parsing &quot;Failed reading: invalid header type: 72\\nFrom:\\theader\\n\\n&quot;)</code>"}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534369581, "post_id": 51859399, "comment_id": 90685823, "body": "@Jimbo I could reproduce the issue. Try the following (it worked for me): <code>main = withSocketsDo $ WSS.runSecureClient &quot;api2.poloniex.com&quot; 443 &quot;&#47;&quot; app</code>. LMK if it worked and I&#39;ll edit my answer."}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534372604, "post_id": 51859399, "comment_id": 90686607, "body": "@Jimbo and you didn&#39;t forget to add the path &quot;/&quot;, right? If so, can you tell me the version Network.Socket, Network.WebSockets and Wuss that you use?"}, {"owner": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534375189, "post_id": 51859399, "comment_id": 90687176, "body": "the path is &quot;/&quot; and these are my versions: network 2.6.3.6, wuss 1.1.10 @KyloRAM <a href=\"https://pastebin.com/iaTT8qL9\" rel=\"nofollow noreferrer\">pastebin.com/iaTT8qL9</a>"}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534376483, "post_id": 51859399, "comment_id": 90687460, "body": "I&#39;ll try to reproduce the problem but before I do that: how do you build your program?"}, {"owner": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534379652, "post_id": 51859399, "comment_id": 90688121, "body": "I use stack. Thanks for taking the time to help me btw!"}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534419323, "post_id": 51859399, "comment_id": 90703411, "body": "Sure, no worries! Can you try loading your Main.hs into ghci (<code>ghci Main.hs</code>)? This way, we will have a more or less clean build and can go from there."}, {"owner": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534423485, "post_id": 51859399, "comment_id": 90706002, "body": "Yep I can load Main.hs via <code>ghci Main.hs</code>. I still get the same error if I run <code>main</code>"}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "edited": false, "score": 0, "creation_date": 1534425387, "post_id": 51859399, "comment_id": 90707259, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/178141/discussion-between-kyloram-and-jimbo\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "is_accepted": false, "score": 2, "last_activity_date": 1534498467, "last_edit_date": 1534498467, "creation_date": 1534338649, "answer_id": 51859399, "question_id": 51851698, "link": "https://stackoverflow.com/questions/51851698/haskell-websockets-library-not-working/51859399#51859399", "title": "Haskell websockets library not working", "body": "<p>It seems like that the Poloniex WebSocket API requires a secure connection, see: <a href=\"https://poloniex.com/support/api/\" rel=\"nofollow noreferrer\">https://poloniex.com/support/api/</a> (I know this from the WS endpoint URL, it uses <code>wss://</code> instead of <code>ws://</code>). <code>WS.runClient</code> uses the unsecure <code>ws://</code> protocol instead of the secure <code>wss://</code> one and thus it won't be able to connect. Try using the wuss library: <a href=\"http://hackage.haskell.org/package/wuss\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/wuss</a>\nand rewrite your main function to:</p>\n\n<pre><code>import qualified Wuss as WSS (runSecureClient)\n-- ...\nmain :: IO ()\nmain = withSocketsDo $ WSS.runSecureClient \"api2.poloniex.com\" 443 \"/\" app\n</code></pre>\n\n<p>Hope this helps!</p>\n"}, {"tags": [], "owner": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "is_accepted": false, "score": 2, "last_activity_date": 1534633190, "creation_date": 1534633190, "answer_id": 51913133, "question_id": 51851698, "link": "https://stackoverflow.com/questions/51851698/haskell-websockets-library-not-working/51913133#51913133", "title": "Haskell websockets library not working", "body": "<p>The issue was for whatever reason my public IP was being blocked. I got around this by using a VPN.</p>\n"}], "owner": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1534633190, "creation_date": 1534295945, "question_id": 51851698, "link": "https://stackoverflow.com/questions/51851698/haskell-websockets-library-not-working", "title": "Haskell websockets library not working", "body": "<p>I was able to successfully use the <code>websockets</code> library with <a href=\"https://www.websocket.org/echo.html\" rel=\"nofollow noreferrer\">https://www.websocket.org/echo.html</a>. I can also connect to api2.poloniex.com via <a href=\"https://www.websocket.org\" rel=\"nofollow noreferrer\">https://www.websocket.org</a> and successfully query the websocket.</p>\n\n<p>However when I try to connect to api2.poloniex.com with <code>websockets</code> I get the following error:</p>\n\n<pre><code>Exception: MalformedResponse (ResponseHead {responseCode = 403, responseMessage = \"Forbidden\", responseHeaders = [(\"Date\",\"Wed, 15 Aug 2018 00:27:10 GMT\"),(\"Content-Type\",\"text/html; charset=UTF-8\"),(\"Transfer-Encoding\",\"chunked\"),(\"Connection\",\"close\"),(\"CF-Chl-Bypass\",\"1\"),(\"Set-Cookie\",\"__cfduid=de2aa54a27d656c35f2c3b90f60cc72461534292830; expires=Thu, 15-Aug-19 00:27:10 GMT; path=/; domain=.poloniex.com; HttpOnly\"),(\"Cache-Control\",\"max-age=2\"),(\"Expires\",\"Wed, 15 Aug 2018 00:27:12 GMT\"),(\"X-Frame-Options\",\"SAMEORIGIN\"),(\"Server\",\"cloudflare\"),(\"CF-RAY\",\"44a788b174052eb7-MIA\")]}) \"Wrong response status or message.\"\n</code></pre>\n\n<p>My code is as follows:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nmodule Main\n    ( main\n    ) where\n\nimport           Control.Concurrent  (forkIO)\nimport           Control.Monad       (forever, unless)\nimport           Control.Monad.Trans (liftIO)\nimport           Data.Aeson\nimport           Data.Text           (Text)\nimport qualified Data.Text           as T\nimport qualified Data.Text.IO        as T\nimport           Network.Socket      (withSocketsDo)\nimport qualified Network.WebSockets  as WS\n\n\n--------------------------------------------------------------------------------\napp :: WS.ClientApp ()\napp conn = do\n    putStrLn \"Connected!\"\n\n    -- Fork a thread that writes WS data to stdout\n    _ &lt;- forkIO $ forever $ do\n        msg &lt;- WS.receiveData conn\n        liftIO $ T.putStrLn msg\n\n    -- Read from stdin and write to WS\n    let loop = do\n            line &lt;- T.getLine\n            unless (T.null line) $ WS.sendTextData conn line &gt;&gt; loop\n\n    loop\n    WS.sendClose conn (\"Bye!\" :: Text)\n\n\n--------------------------------------------------------------------------------\nmain :: IO ()\nmain = withSocketsDo $ WS.runClient \"api2.poloniex.com\" 80 \"\"  app\n</code></pre>\n"}, {"tags": ["scala", "haskell", "types"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1534279262, "post_id": 51849405, "comment_id": 90652116, "body": "AFAIK there&#39;s no obvious standard distinguishing term for <code>F[A]</code> because it&#39;s not a particularly useful distinction. <code>A</code> and <code>F[A]</code> are types, <code>F</code> is a type constructor."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1534279616, "post_id": 51849405, "comment_id": 90652285, "body": "I would borrow the terminology from functions.  In <code>F[A]</code>, <code>A</code> is the argument, <code>F[A]</code> is perhaps the result, <code>F</code> is the type constructor.  Sometimes it&#39;s contextual though, if you give an example sentence or two I might be more helpful."}, {"owner": {"reputation": 8891, "user_id": 40725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/cb48da108d7680b059e92141759b46fa?s=128&d=identicon&r=PG", "display_name": "Mark Canlas", "link": "https://stackoverflow.com/users/40725/mark-canlas"}, "edited": false, "score": 0, "creation_date": 1534279951, "post_id": 51849405, "comment_id": 90652427, "body": "No specific context, really. To me, there seems to be something lacking that <code>A</code> and <code>F[A]</code> are reduced to the word <code>type</code>. There&#39;s something more complex about <code>F[A]</code> that I feel isn&#39;t being articulated. If I had to venture a guess I would go with &quot;constructed type or compound type vs primitive type or base type&quot; but I wanted to check if this was already solved for in the wild."}, {"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1534280964, "post_id": 51849405, "comment_id": 90652861, "body": "<code>F</code> is often called a <code>Functor</code>. In haskell, the class type <code>Functor</code> is used to categorize such types."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 5, "creation_date": 1534280998, "post_id": 51849405, "comment_id": 90652879, "body": "@BobDalgleish Not all type constructors are functors."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 0, "creation_date": 1534281243, "post_id": 51849405, "comment_id": 90652958, "body": "@MarkCanlas We don\u2019t normally call tuples and lists \u201ccompound values\u201d to contrast them with \u201catomic values\u201d like numbers or booleans. Why do you feel such nomenclature must exist for types? Indeed, I think the fact that such terminology doesn\u2019t exist hints at a broader point, which is that a type is a type, and rarely is it meaningful to distinguish types built out of other types from \u201catomic\u201d types."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1534281854, "post_id": 51849405, "comment_id": 90653187, "body": "Consider two type constructors <code>newtype F f = F (f (F f))</code> and <code>data NF a  = Z | S a</code>. Which would you consider more complex: the type <code>F NF</code> or the type <code>Integer</code>? (The two types, of course, aren&#39;t equivalent, but it goes to show that the complexity you are talking about is more related to implementation than any fundamental property of the resulting types.)"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 3, "creation_date": 1534289256, "post_id": 51849405, "comment_id": 90655145, "body": "@MarkCanlas <code>5</code> is an expression with a value, and <code>5 + 2</code> is also an expression with a value; likewise <code>f(x)</code>, for some appropriate function <code>f</code>. They don&#39;t need special names to indicate that one is the result of a function call and one is a literal; they are just values. Likewise at the type level, a standalone type and a type produced by applying a type constructor to some type parameters are the same thing, regardless of how you produced them."}], "answers": [{"comments": [{"owner": {"reputation": 8891, "user_id": 40725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/cb48da108d7680b059e92141759b46fa?s=128&d=identicon&r=PG", "display_name": "Mark Canlas", "link": "https://stackoverflow.com/users/40725/mark-canlas"}, "edited": false, "score": 0, "creation_date": 1534282819, "post_id": 51849808, "comment_id": 90653489, "body": "What is &quot;the Report&quot;?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 8891, "user_id": 40725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/cb48da108d7680b059e92141759b46fa?s=128&d=identicon&r=PG", "display_name": "Mark Canlas", "link": "https://stackoverflow.com/users/40725/mark-canlas"}, "edited": false, "score": 0, "creation_date": 1534283437, "post_id": 51849808, "comment_id": 90653679, "body": "@MarkCanlas The Haskell Language Report, very easily googled: <a href=\"https://www.haskell.org/onlinereport/haskell2010/\" rel=\"nofollow noreferrer\">haskell.org/onlinereport/haskell2010</a>"}, {"owner": {"reputation": 8891, "user_id": 40725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/cb48da108d7680b059e92141759b46fa?s=128&d=identicon&r=PG", "display_name": "Mark Canlas", "link": "https://stackoverflow.com/users/40725/mark-canlas"}, "edited": false, "score": 0, "creation_date": 1534283914, "post_id": 51849808, "comment_id": 90653822, "body": "Could you expand on what you mean when you say <code>Char</code> is a constructor and <code>Int</code> is a constructor? That sounds counter-intuitive."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 8891, "user_id": 40725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/cb48da108d7680b059e92141759b46fa?s=128&d=identicon&r=PG", "display_name": "Mark Canlas", "link": "https://stackoverflow.com/users/40725/mark-canlas"}, "edited": false, "score": 0, "creation_date": 1534284086, "post_id": 51849808, "comment_id": 90653874, "body": "@MarkCanlas <code>Char</code> and <code>Int</code> are <a href=\"https://en.wikipedia.org/wiki/Arity#Nullary\" rel=\"nofollow noreferrer\"><i>nullary</i></a> type constructors? Once you have the whole machinery, there is just no good reason to treat parameterless types any different from all the other type constructors, I guess..."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 8891, "user_id": 40725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/cb48da108d7680b059e92141759b46fa?s=128&d=identicon&r=PG", "display_name": "Mark Canlas", "link": "https://stackoverflow.com/users/40725/mark-canlas"}, "edited": false, "score": 2, "creation_date": 1534286588, "post_id": 51849808, "comment_id": 90654560, "body": "@MarkCanlas I&#39;m not sure what more I can say about that than what I put in my answer. They tick all the boxes: <code>Char</code> is a single lexical atom, starts with an upper case letter, and was notionally created by a <code>data</code> declaration. (Okay, so it is actually built into the compiler and not created by a <code>data</code> declaration. But in principle it&#39;s just a big enumeration, something you could make yourself if you had the patience to type out 1114111 unique data constructor names.) You are probably falling into the trap I mentioned in paragraph two. &quot;Constructor&quot; doesn&#39;t necessarily mean &quot;parameterized&quot;."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 4, "last_activity_date": 1534281086, "creation_date": 1534281086, "answer_id": 51849808, "question_id": 51849405, "link": "https://stackoverflow.com/questions/51849405/what-is-the-difference-between-fa-and-a/51849808#51849808", "title": "What is the difference between F[A] and A?", "body": "<p>Dunno about in Scala, but in Haskell, the Report does distinguish between two syntactic categories: \"types\" and \"constructors\". Constructors are just those types which are single atoms, beginning with an upper case letter, and created by <code>data</code> and <code>newtype</code> declarations. e.g.</p>\n\n<pre><code>data Foo a = Bar\n</code></pre>\n\n<p>creates a new type constructor <code>Foo</code> (and a new data constructor <code>Bar</code>), and types can be formed by applying <code>Foo</code> to another type. Of course, constructors need not be of higher kind; <code>data Baz = Quux</code> also declares a type constructor named <code>Baz</code> which is not permitted to be applied to any other types.</p>\n\n<p>(But beware: it is common to use \"type constructor\" to mean \"any type-level expression with an arrow kind\", so if you are doing some technical writing, you should include some text in your introduction clarifying which of these two meanings you intend to use in the rest of the document.)</p>\n\n<p>So, in your example, we could say <code>Map</code> is a constructor, <code>Char</code> is a constructor, <code>Int</code> is a constructor, <code>Map Char</code> is a type, and <code>Map Char Int</code> is a type.</p>\n\n<p>As far as I know, there is no common shorthand term for any of these categories: \"a type which is definitely not a constructor\", \"a type of kind <code>*</code>\", \"a type which is definitely not of kind <code>*</code>\". For types which are allowed to be applied to another type, there is the term \"higher-kinded type\" -- e.g. <code>Map</code> and <code>Map Char</code> are both higher-kinded types.</p>\n"}, {"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 4, "last_activity_date": 1534286170, "last_edit_date": 1534286170, "creation_date": 1534281095, "answer_id": 51849810, "question_id": 51849405, "link": "https://stackoverflow.com/questions/51849405/what-is-the-difference-between-fa-and-a/51849810#51849810", "title": "What is the difference between F[A] and A?", "body": "<p>The technical terms, as mentioned in the comments, are 'type', 'some other type', and a 'type constructor'.</p>\n\n<p>Consider:</p>\n\n<pre><code> data A = A\n  --  ^   ^--- The Data Constructor\n  --  -- The type\n\ndata F   x = SomeDataConstructorForF x\n --  ^   ^     ^-- Data Constr       ^-- Field\n --  |   --- Type Variable\n --  - Type Constructor\n\nval :: A\nval = A\n-- A value of type 'A'\n\nval2 :: F [A]\nval2 = SomeDataConstructorForF []\n-- A value of some other type, F [A].\n-- No special term exists for types built through application\n-- of one or more type constructor afaik\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 1, "creation_date": 1534347438, "post_id": 51850026, "comment_id": 90676018, "body": "The Scala spec uses both &quot;Parameterized Types&quot; (<a href=\"https://www.scala-lang.org/files/archive/spec/2.12/03-types.html#parameterized-types\" rel=\"nofollow noreferrer\">scala-lang.org/files/archive/spec/2.12/&hellip;</a>) and &quot;application&quot;."}], "tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": false, "score": 4, "last_activity_date": 1534282931, "last_edit_date": 1534282931, "creation_date": 1534282183, "answer_id": 51850026, "question_id": 51849405, "link": "https://stackoverflow.com/questions/51849405/what-is-the-difference-between-fa-and-a/51850026#51850026", "title": "What is the difference between F[A] and A?", "body": "<p>I would propose to just call <code>F[A]</code> <strong>application</strong> of a <strong>type constructor</strong> <code>F</code> of kind <code>* -&gt; *</code> to the argument <code>A</code> of kind <code>*</code>. <a href=\"https://scala-lang.org/files/archive/spec/2.12/03-types.html#type-constructors\" rel=\"nofollow noreferrer\">\"Type constructor\"</a> comes from the specification, whereas \"application\" comes from the basic lambda calculus, as explained below.</p>\n\n<p>Recall that the formalism of <a href=\"https://en.wikipedia.org/wiki/Kind_(type_theory)\" rel=\"nofollow noreferrer\">higher-kinded types with all the type constructors is essentially just an extension of a simply typed lambda calculus over a single type <code>*</code></a>.</p>\n\n<p>That means that you have the following rules for forming kinds:</p>\n\n<ol>\n<li><code>*</code> is a kind</li>\n<li>if <code>a</code>, <code>b</code> are kinds, then <code>a -&gt; b</code> is a kind</li>\n</ol>\n\n<p>You can form terms as follows:</p>\n\n<ol>\n<li>Predefined constants with fixed kind are terms</li>\n<li>Variables are terms</li>\n<li>If <code>f</code> and <code>a</code> are terms, then the <strong>application</strong> <code>f a</code> is a term</li>\n<li>If <code>x</code> is a variable name, and <code>y</code> is a term, then the <em>abstraction</em> <code>\\x.y</code> is a term</li>\n</ol>\n\n<p>You can check whether a (type-valued) term is well-kinded with rules that look somewhat like this:</p>\n\n<ol>\n<li>Predefined constant <code>c</code> of kind <code>k</code> (vacuously) has kind <code>k</code>, regardless of context</li>\n<li>If context <code>Gamma</code> contains mapping of a variable <code>v</code> to kind <code>k</code>, then in <code>Gamma</code> we can infer that <code>v</code> is a well-kinded expression of kind <code>k</code>.</li>\n<li>If in context <code>Gamma</code> we can infer that <code>f</code> has kind <code>a -&gt; b</code> and <code>x</code> has kind <code>a</code>, then the <strong>application</strong> <code>f x</code> has kind <code>b</code>.</li>\n<li>If in context <code>Gamma, x: a</code> we can infer that <code>y</code> has kind <code>b</code>, then in <code>Gamma</code> we can infer that <code>\\x.y</code> has kind <code>a -&gt; b</code>.</li>\n</ol>\n\n<p>I don't see any reason to invent any new vocabulary, so I would just use \"application\".</p>\n\n<hr>\n\n<p>An aside: you can actually write down the above basic kind-inference algorithm really quickly.</p>\n\n<pre><code>sealed trait Term\ncase class Apply(func: Term, arg: Term) extends Term\ncase class Lam(preferred: String, dom: Type, body: Term) extends Term\n\ncase class BoundVar(deBruijnIdx: Int) extends Term\ncase class FreeVar(name: String) extends Term\n\nsealed trait Type\ncase object * extends Type\ncase class Func(dom: Type, cod: Type) extends Type {\n  override def toString = s\"($dom -&gt; $cod)\"\n}\n\nimport util.{Either, Left, Right}\n\ncase class Ctx(globalConstants: Map[String, Type], stack: List[Type]) {\n  def push(tp: Type): Ctx = Ctx(globalConstants, tp :: stack)\n  def pop: Ctx = Ctx(globalConstants, stack.tail)\n}\n\nobject Ctx {\n  def empty = Ctx(Map.empty, List.empty)\n  def emptyWithGlobals(keys: (String, Type)*) = Ctx(keys.toMap, Nil)\n}\n\ndef tinf(t: Term, ctx: Ctx = Ctx.empty): Either[String, Type] = t match {\n  case FreeVar(v) =&gt; \n    ctx.globalConstants.get(v).map(Right(_)).getOrElse(Left(\"Undefined: \" + v))\n  case BoundVar(d) =&gt; Right(ctx.stack(d))\n  case Apply(f, x) =&gt; \n    for {\n      tf &lt;- tinf(f, ctx)\n      tx &lt;- tinf(x, ctx)\n      res &lt;- tf match {\n        case Func(a, b) =&gt;\n          if (tx == a) Right(b)\n          else Left(s\"Type mismatch: cannot apply `$a` to `$b`\")\n        case sthElse =&gt; Left(s\"Not applicable: $sthElse\")\n      }\n    } yield res\n  case Lam(_, tp, b) =&gt; \n    for {\n      tb &lt;- tinf(b, ctx.push(tp))\n    } yield Func(tp, tb)\n}\n\nfor {\n  example &lt;- List(\n    Lam(\"x\", *, BoundVar(0)),\n    Lam(\"x\", *, Lam(\"y\", Func(*, *), Apply(BoundVar(0), BoundVar(1))))\n  )\n} println(example + \" : \" + tinf(example))\n</code></pre>\n\n<p>and it will happily infer that type-lambdas</p>\n\n<pre><code>\\(x:*).x\n\\(x:*).\\y(* -&gt; *). y x\n</code></pre>\n\n<p>have the kinds</p>\n\n<pre><code>(* -&gt; *)\n(* -&gt; ((* -&gt; *) -&gt; *))\n</code></pre>\n\n<p>respectively.</p>\n"}], "owner": {"reputation": 8891, "user_id": 40725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/cb48da108d7680b059e92141759b46fa?s=128&d=identicon&r=PG", "display_name": "Mark Canlas", "link": "https://stackoverflow.com/users/40725/mark-canlas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1534286170, "creation_date": 1534278943, "question_id": 51849405, "link": "https://stackoverflow.com/questions/51849405/what-is-the-difference-between-fa-and-a", "title": "What is the difference between F[A] and A?", "body": "<p>For languages like Scala and Haskell, you can construct types using type constructors. What is the right vocabulary for differentiating between all of these parts?</p>\n\n<p><code>A</code> is a type. <code>F[A]</code> is also a type. Is there language that exists to differentiate the two?</p>\n\n<p>What is <code>A</code>?</p>\n\n<p>What is <code>F[A]</code>?</p>\n\n<p>What is <code>F</code>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1534278056, "post_id": 51848747, "comment_id": 90651620, "body": "Why not move that block in a separate file?"}, {"owner": {"reputation": 1441, "user_id": 937726, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9265206dc27d0527691c49bbc63d9cfe?s=128&d=identicon&r=PG", "display_name": "smaccoun", "link": "https://stackoverflow.com/users/937726/smaccoun"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1534347103, "post_id": 51848747, "comment_id": 90675816, "body": "Tbh, it&#39;s quite silly, it&#39;s just a very small function and I was hesitant to create an entire file/module for it. Not a good reason, I know, but it also just spurred my curiosity in general about it, so thought I&#39;d ask to see if it was possible."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 3, "last_activity_date": 1534278451, "creation_date": 1534278451, "answer_id": 51849297, "question_id": 51848747, "link": "https://stackoverflow.com/questions/51848747/apply-haskell-language-pragma-to-block-of-code-rather-than-entire-module/51849297#51849297", "title": "Apply Haskell Language Pragma to Block of Code (rather than entire module)", "body": "<p>In general there is no way to do this, no.</p>\n\n<p>For this particular pragma, you can disable the monomorphism restriction for a single declaration by giving it a type signature. Although I strongly recommend giving a full signature, there may be some situation where that is undesirable for some reason; in such a case even a signature full of holes is sufficient, e.g.</p>\n\n<pre><code>{-# LANGUAGE PartialTypeSignatures #-}\n\nx :: _ =&gt; _\nx = (+)\n</code></pre>\n\n<p>will be inferred to have type <code>Num a =&gt; a -&gt; a -&gt; a</code> instead of <code>Integer -&gt; Integer -&gt; Integer</code>.</p>\n"}], "owner": {"reputation": 1441, "user_id": 937726, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9265206dc27d0527691c49bbc63d9cfe?s=128&d=identicon&r=PG", "display_name": "smaccoun", "link": "https://stackoverflow.com/users/937726/smaccoun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 1, "accepted_answer_id": 51849297, "answer_count": 1, "score": 5, "last_activity_date": 1534278451, "creation_date": 1534275827, "question_id": 51848747, "link": "https://stackoverflow.com/questions/51848747/apply-haskell-language-pragma-to-block-of-code-rather-than-entire-module", "title": "Apply Haskell Language Pragma to Block of Code (rather than entire module)", "body": "<p>Is it possible in Haskell to apply a language pragma to a block of code, rather than the entire file itself?</p>\n\n<p>For example, I enable the <code>-fwarn-monomorphism-restriction</code> flag, but I have a couple of files where I'd really like to disable this flag, so I use <code>{-# LANGUAGE NoMonomorphismRestriction #-}</code> at the top of the file. </p>\n\n<p>However, instead of applying this pragma to the entire module, I'd like to apply it only to the block of code where I don't think this warning is helpful. Only solution I can think of right now is move this block of code to its own file and then import it</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "is_accepted": false, "score": 2, "last_activity_date": 1534288395, "creation_date": 1534288395, "answer_id": 51850903, "question_id": 51848587, "link": "https://stackoverflow.com/questions/51848587/list-constructor-names-using-generics-in-haskell/51850903#51850903", "title": "List constructor names using generics in haskell", "body": "<p>You can use <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Data.html\" rel=\"nofollow noreferrer\">Data.Data</a>.</p>\n\n<pre><code>{-# language DerivingDataTypeable #-}\nimport Data.Data\nimport Data.Typeable\ndata Test = ... deriving (Data, Typeable)\n</code></pre>\n\n<p>Now you can use <code>dataTypeOf</code> to get a value of type <code>DataType</code> representing your ADT (E.g. <code>dataTypeOf (undefined :: Test)</code>).</p>\n\n<p>Then <code>dataTypeConstrs</code> will give you a list of <code>Constr</code> (constructors).</p>\n\n<p>Then <code>showConstr</code> on each to print the name.</p>\n"}, {"comments": [{"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 0, "creation_date": 1534319980, "post_id": 51851888, "comment_id": 90662261, "body": "Thank you! That&#39;s exactly what I wanted."}, {"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 0, "creation_date": 1534321093, "post_id": 51851888, "comment_id": 90662748, "body": "One more question. Is it possible to &quot;extract&quot; a <code>Proxy</code> within the function declaration? Such as      <code>names_ :: (Generic t, Names&#39; (Rep t)) =&gt; Maybe t -&gt; [String]</code> Or I have to pass the value or <code>Proxy</code>? Currently GHC complains that can&#39;t deduce type when I write something like <code>names (Proxy :: Proxy t)</code>"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 1, "creation_date": 1534335702, "post_id": 51851888, "comment_id": 90669226, "body": "You already have <code>ScopedTypeVariables</code> on (or else <code>Names&#39;</code> wouldn&#39;t compile). This is what lets me make a <code>Proxy</code> out of a type variable. However, you need to use a <code>forall</code> like <code>forall t. (Generic t, Names&#39; (Rep t)) =&gt; Proxy t -&gt; [String]</code> to actually get <code>t</code> in scope. Otherwise, <code>t</code> is not in scope, and GHC thinks <code>Proxy :: Proxy t</code> means <code>Proxy :: forall t. Proxy t</code>, which has no free type variables."}, {"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 0, "creation_date": 1534336882, "post_id": 51851888, "comment_id": 90669831, "body": "Ah, got it. Thank you again."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 2, "last_activity_date": 1534337875, "last_edit_date": 1534337875, "creation_date": 1534297835, "answer_id": 51851888, "question_id": 51848587, "link": "https://stackoverflow.com/questions/51848587/list-constructor-names-using-generics-in-haskell/51851888#51851888", "title": "List constructor names using generics in haskell", "body": "<p>Easy:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables, FlexibleContexts #-}\nnames :: forall t. (Generic t, Names' (Rep t)) =&gt; Proxy t -&gt; [String]\nnames _ = names' (Proxy :: Proxy (Rep t))\n</code></pre>\n\n<p>Which works because <code>Proxy</code>s are immaterial: as long as you can name the type you can build a <code>Proxy</code> for it. (Side note: Unless you are using GHC &lt;8, you should probably use the <code>AllowAmbiguousTypes</code> and <code>TypeApplications</code> extensions over <code>Proxy</code>. On GHC >=8, the only time you ever need <code>Proxy</code>-like things is in higher-rank contexts.)</p>\n\n<p>You may also say</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables, FlexibleContexts, UndecidableInstances #-}\nclass (Generic t, Names' (Rep t)) =&gt; Names t where\n  names :: Proxy t -&gt; [String]\ninstance (Generic t, Names' (Rep t)) =&gt; Names t where\n  names _ = names' (Proxy :: Proxy (Rep t))\n</code></pre>\n\n<p>To get a nice constraint synonym <code>Names t</code> for <code>(Generic t, Names' (Rep t))</code>.</p>\n"}], "owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 342, "favorite_count": 0, "accepted_answer_id": 51851888, "answer_count": 2, "score": 3, "last_activity_date": 1534338709, "creation_date": 1534275162, "last_edit_date": 1534338709, "question_id": 51848587, "link": "https://stackoverflow.com/questions/51848587/list-constructor-names-using-generics-in-haskell", "title": "List constructor names using generics in haskell", "body": "<p>I know how to list constructor names in the following way:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric        #-}\n{-# LANGUAGE FlexibleContexts     #-}\n{-# LANGUAGE FlexibleInstances    #-}\n{-# LANGUAGE PolyKinds            #-}\n{-# LANGUAGE ScopedTypeVariables  #-}\n{-# LANGUAGE TypeApplications     #-}\n{-# LANGUAGE TypeOperators        #-}\n\nmodule Generics where     \n\nimport           Data.Proxy          \nimport           GHC.Generics        \n\nclass Names' f where\n  names' :: Proxy f -&gt; [String]\ninstance (Names' f) =&gt; Names' (M1 D t f) where\n  names' _ = names' (Proxy :: Proxy f)\ninstance (Names' f, Names' g) =&gt; Names' (f :+: g) where\n  names' _ = (names' (Proxy :: Proxy f) ++ (names' (Proxy :: Proxy g)))\ninstance (Constructor c) =&gt; Names' (C1 c f) where\n  names' _ = [conName (undefined :: C1 c f g)]\n\ndata Test = Foo | Bar Int | Baz { x :: Int } deriving (Generic)\n\nmain :: IO ()\nmain = do\n  print $ names' (Proxy :: Proxy (Rep Test))\n--&gt; [\"Foo\", \"Bar\", \"Baz\"]\n</code></pre>\n\n<p>But in that case we need a <code>Proxy (Rep Test)</code>. How to do same thing with a given <code>Proxy Test</code>?</p>\n\n<p>I found an <a href=\"https://stackoverflow.com/a/24474958/1722399\">example</a> how to get first selector of the record, but can't figure out how to solve my problem. Please help.</p>\n"}, {"tags": ["haskell", "functional-programming", "coq", "agda", "lambda-calculus"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1534263952, "post_id": 51845828, "comment_id": 90645062, "body": "Presumably yes.  Translate your argument for why the language is &quot;obviously total&quot; into Agda and you will have your function."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1534264676, "post_id": 51845828, "comment_id": 90645449, "body": "@luqui but how? I honestly have no idea. I know how to write <code>subst</code> for that type from the paper; <a href=\"https://lpaste.net/3842453789416095744\" rel=\"nofollow noreferrer\">here</a> is an example of applying <code>id</code> to a constant. But writing a <code>eval : \u2200 {V} \u2192 Term V \u2192 Term V</code> looks impossible. Note <code>apply : Term V -&gt; V -&gt; Term V</code>, so, <code>eval (app f x) = subst (apply f x)</code> would not be typeable because <code>x : V</code> instead of <code>Term V</code>. I guess I&#39;d need a whole new way to write <code>eval</code>, but I&#39;m not sure what that&#39;d be like."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 1, "creation_date": 1534264818, "post_id": 51845828, "comment_id": 90645520, "body": "@MaiaVictor I would first just consider normalization for the first-order syntax, you can always go to and from PHOAS (although this may require to postulate some parametricity theorems)."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1534264972, "post_id": 51845828, "comment_id": 90645614, "body": "@Andr&#225;sKov&#225;cs normalization for the first-order syntax is itself something I didn&#39;t manage to do, but since I&#39;m more interested in PHOAS I decided to keep the question smaller by just asking about it. Is there any obvious way to normalize the first-order syntax? My idea was to write <code>eval : Nat -&gt; Term -&gt; Term</code> where the <code>Nat</code> is the size of the term; like <a href=\"https://lpaste.net/989790593641086976\" rel=\"nofollow noreferrer\">this</a>. But I&#39;m not sure (haven&#39;t actually thought yet) how to prove that it actually returns the normal form. That&#39;s probably silly anyway so I wonder if you know / could link a better way to do it?"}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 5, "creation_date": 1534267033, "post_id": 51845828, "comment_id": 90646649, "body": "I&#39;m not sure PHOAS is ideal for this job. I&#39;d want a representation that more explicitly witnesses affinity. Nice problem."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1534329160, "post_id": 51845828, "comment_id": 90666367, "body": "You might try first converting the lambda expression to a combinator expression with an \u201cabstraction algorithm\u201d using only Bxyz=x(yz), Cxyz=xzy, Kxy=x, Ix=x\u2014the result is guaranteed by construction to be affine, so it might be easier to formulate the proof that evaluation is terminating"}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 1, "creation_date": 1534358804, "post_id": 51845828, "comment_id": 90681459, "body": "At least two strategies occur to me. One is to exploit the fact that every beta reduction guarantees a net loss of at least one lambda. The other (which I think I prefer) is to show that every affine lambda term has a simple type."}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 301, "favorite_count": 3, "answer_count": 0, "score": 8, "last_activity_date": 1534264720, "creation_date": 1534263606, "last_edit_date": 1534264720, "question_id": 51845828, "link": "https://stackoverflow.com/questions/51845828/is-it-possible-to-normalize-affine-%ce%bb-calculus-terms-using-phoas-in-agda", "title": "Is it possible to normalize affine \u03bb-calculus terms using PHOAS in Agda?", "body": "<p>In Agda, one can conveniently represent \u03bb-terms using PHOAS:</p>\n\n<pre><code>data Term (V : Set) : Set where\n  var : V \u2192 Term V\n  abs : (V \u2192 Term V) \u2192 Term V\n  app : Term V \u2192 Term V \u2192 Term V\n</code></pre>\n\n<p>That approach has several benefits over Bruijn indices, as explained in <a href=\"http://adam.chlipala.net/papers/PhoasICFP08/PhoasICFP08.pdf\" rel=\"noreferrer\">\"Parametric Higher-Order Abstract Syntax for Mechanized\nSemantics\"</a>. As far as I know, though, there can't be a <code>eval : \u2200 {V} -&gt; Term V -&gt; Term V</code> function that, given a \u03bb-term, returns its normal form - after all, Agda is total and the \u03bb-calculus is not. But I wonder if it would be possible to write such <code>eval</code> function for affine \u03bb-terms; i.e., those where bound variables occur at most once. That language is obviously total.</p>\n"}, {"tags": ["haskell", "yesod"], "comments": [{"owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "edited": false, "score": 0, "creation_date": 1534259938, "post_id": 51844688, "comment_id": 90642882, "body": "sending delete request to <code>http:&#47;&#47;localhost:3000&#47;login</code> doesn&#39;t seem reasonable. Are you sure you have this route defined? Probably you meant to send delete to something like <code>http:&#47;&#47;localhost:3000&#47;logout</code>?"}, {"owner": {"reputation": 427, "user_id": 2137161, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f07b4f848472c3c0859900f576b3a27a?s=128&d=identicon&r=PG", "display_name": "James Hamilton", "link": "https://stackoverflow.com/users/2137161/james-hamilton"}, "reply_to_user": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "edited": false, "score": 0, "creation_date": 1534260039, "post_id": 51844688, "comment_id": 90642942, "body": "Maybe you&#39;re right about the semantics, but the route definitely exists."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1534260070, "post_id": 51844688, "comment_id": 90642960, "body": "You&#39;ll most likely need to provide source code for anyone to find the root of the problem."}], "answers": [{"tags": [], "owner": {"reputation": 427, "user_id": 2137161, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f07b4f848472c3c0859900f576b3a27a?s=128&d=identicon&r=PG", "display_name": "James Hamilton", "link": "https://stackoverflow.com/users/2137161/james-hamilton"}, "is_accepted": false, "score": 0, "last_activity_date": 1534260903, "creation_date": 1534260903, "answer_id": 51845067, "question_id": 51844688, "link": "https://stackoverflow.com/questions/51844688/how-to-curl-a-delete-request-to-yesod/51845067#51845067", "title": "How to cUrl a DELETE request to Yesod?", "body": "<p>Fixed it! It was some kind of caching issue in stack, where it had cached an old version of the routes file. Killing <code>yesod devel</code> and running <code>stack build --force-dirty</code> fixed it.</p>\n"}], "owner": {"reputation": 427, "user_id": 2137161, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f07b4f848472c3c0859900f576b3a27a?s=128&d=identicon&r=PG", "display_name": "James Hamilton", "link": "https://stackoverflow.com/users/2137161/james-hamilton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1534260903, "creation_date": 1534259634, "last_edit_date": 1534260655, "question_id": 51844688, "link": "https://stackoverflow.com/questions/51844688/how-to-curl-a-delete-request-to-yesod", "title": "How to cUrl a DELETE request to Yesod?", "body": "<p>I have a small JSON api which I'm building in Yesod. In order to test the API I am using cUrl. However, the following request returns <code>405 method not allowed</code>:</p>\n\n<p><code>curl -X DELETE -H \"X-User-Name: $name\" -H \"X-User-Token: $token\" -H \"accept:application/json\" http://localhost:3000/login</code></p>\n\n<p>The routes file definitely contains <code>DELETE</code> as a method on the login route. I am using <code>defaultYesodMiddleware</code>. </p>\n\n<p>Here is the handler:</p>\n\n<pre><code>-- ^ Invalidate the user token\ndeleteLoginR :: Handler Aeson.Value\ndeleteLoginR = authenticateUser &gt;&gt;= \\u -&gt;\n               let newU = u { DS.token = \"\" } in\n               DS.saveEntity newU &gt;&gt;= \\case\n                Left e -&gt; sendResponseStatus status500 (cs e :: Text)\n                Right _ -&gt; sendResponseStatus status200 (\"Logged out\" :: Text)\n</code></pre>\n\n<p>here is the <code>authenticateUser</code> function:</p>\n\n<pre><code>{-| Check that a user is properly logged in using the authentication headers -}\nauthenticateUser :: Handler User\nauthenticateUser = lookupHeader \"X-User-Name\" &gt;&gt;= \\case \n                    Nothing -&gt;\n                      sendResponseStatus status406 (\"X-User-Name not set\" :: Text)\n                    Just name -&gt;\n                      lookupHeader \"X-User-Token\" &gt;&gt;= \\case\n                        Nothing -&gt;\n                          sendResponseStatus status406 (\"X-User-Token not set\" :: Text)\n                        Just token -&gt;\n                          (DS.loadEntities [\"User\"] constraints Nothing :: Handler (Either Text [User])) \n                          &gt;&gt;= \\case \n                            Left e -&gt; sendResponseStatus status500 (cs e :: Text)\n                            Right records -&gt; pure $ List.head records\n                          where constraints = [ Where (\"name\", Equals, cs name)\n                                              , Where (\"token\", Equals, cs token)\n                                              ]\n</code></pre>\n\n<p>and the route declaration:</p>\n\n<p><code>/login LoginR GET POST PATCH DELETE</code></p>\n\n<p>Can anyone enlighten me? </p>\n"}, {"tags": ["haskell", "vector"], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 3, "last_activity_date": 1534256433, "creation_date": 1534256433, "answer_id": 51843682, "question_id": 51843493, "link": "https://stackoverflow.com/questions/51843493/cant-implement-matrices-and-vectors-using-gadts-in-haskell/51843682#51843682", "title": "can&#39;t implement matrices and vectors using GADTs in haskell", "body": "<p>I think you intended to write:</p>\n\n<pre><code>data Vector a where\n    Vector :: (Num a) =&gt; [a] -&gt; Vector a\n</code></pre>\n\n<p>\"A Vector or a's can be constructed from a list of a's\"</p>\n\n<p>The version in your question takes a single <code>a</code>, and the errors you are getting are about GHC trying to map over that single value.</p>\n\n<p>More broadly, I would recommend moving the <code>Num</code> constraint from the constructor to the instances and functions that use <code>Vector</code>.  Code written this way seems to get better error messages from GHC, and is easier to work with.  I'm not sure if there's a deep reason for this, or if it's just a question of where GHC devs have spent time.</p>\n\n<p>So the instance declaration might become:</p>\n\n<pre><code>instance Num a =&gt; LStruct (Vector a) where\n</code></pre>\n\n<p>and the instance body can stay the same.</p>\n"}], "owner": {"reputation": 3, "user_id": 5834004, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d15d3dc6b2624dbd87a40e5afc36f7d?s=128&d=identicon&r=PG&f=1", "display_name": "adenizgelir", "link": "https://stackoverflow.com/users/5834004/adenizgelir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 51843682, "answer_count": 1, "score": 0, "last_activity_date": 1534256433, "creation_date": 1534255827, "question_id": 51843493, "link": "https://stackoverflow.com/questions/51843493/cant-implement-matrices-and-vectors-using-gadts-in-haskell", "title": "can&#39;t implement matrices and vectors using GADTs in haskell", "body": "<p>I am a beginner to Haskell.\nI was trying to implement Matrices and Vectors in haskell. I wanted these to support all types in Num typeclass, but not others so i tried using GADTs but i am getting errors can you explain why i am getting errors. Or can i get the same functionality without this way.</p>\n\n<p>My code:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\nclass LStruct s where\n  scale :: (Num a) =&gt; a -&gt; s -&gt; s\n  add :: s -&gt; s -&gt; s\n\n\ndata Vector a where\n  Vector :: (Num a) =&gt; a -&gt; Vector [a]\n\ndata Matrix a where\n  Matrix :: (Num a) =&gt; a -&gt; Matrix [a]\n\n\ninstance LStruct (Vector a) where\n  scale a (Vector xs) = Vector (map (*a) xs)\n  add (Vector xs) (Vector ys) = Vector (zipWith (+) xs ys)\n</code></pre>\n\n<p>error:</p>\n\n<pre><code>[-Wdeferred-type-errors]\n\u2022 Could not deduce: a2 ~ [a1]\n  from the context: (a ~ [a2], Num a2)\n    bound by a pattern with constructor:\n               Vector :: forall a. Num a =&gt; a -&gt; Vector [a],\n             in an equation for \u2018scale\u2019\n    at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-TEMP.hs:20:12-20\n  \u2018a2\u2019 is a rigid type variable bound by\n    a pattern with constructor:\n      Vector :: forall a. Num a =&gt; a -&gt; Vector [a],\n    in an equation for \u2018scale\u2019\n    at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-TEMP.hs:20:12-20\n\u2022 In the second argument of \u2018map\u2019, namely \u2018xs\u2019\n  In the first argument of \u2018Vector\u2019, namely \u2018(map (* a) xs)\u2019\n  In the expression: Vector (map (* a) xs)\n\u2022 Relevant bindings include\n    xs :: a2\n      (bound at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-TEMP.hs:20:19)\n    a :: a1\n      (bound at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-TEMP.hs:20:9)\n    scale :: a1 -&gt; Vector a -&gt; Vector a\n      (bound at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-TEMP.hs:20:3)\n\n[-Wdeferred-type-errors]\n\u2022 Could not deduce: a2 ~ [c0]\n  from the context: (a ~ [a1], Num a1)\n    bound by a pattern with constructor:\n               Vector :: forall a. Num a =&gt; a -&gt; Vector [a],\n             in an equation for \u2018add\u2019\n    at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-TEMP.hs:21:8-16\n  or from: (a ~ [a2], Num a2)\n    bound by a pattern with constructor:\n               Vector :: forall a. Num a =&gt; a -&gt; Vector [a],\n             in an equation for \u2018add\u2019\n    at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-       TEMP.hs:21:20-28\n  \u2018a2\u2019 is a rigid type variable bound by\n    a pattern with constructor:\n      Vector :: forall a. Num a =&gt; a -&gt; Vector [a],\n    in an equation for \u2018add\u2019\n    at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-TEMP.hs:21:20-28\n  Expected type: [c0]\n    Actual type: a1\n\u2022 In the second argument of \u2018zipWith\u2019, namely \u2018xs\u2019\n  In the first argument of \u2018Vector\u2019, namely \u2018(zipWith (+) xs ys)\u2019\n  In the expression: Vector (zipWith (+) xs ys)\n\u2022 Relevant bindings include\n    ys :: a2\n      (bound at /home/d4rk0wl/Playground/hs/Mask/.stack-work/intero/intero10129CJD-TEMP.hs:21:27)\n</code></pre>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 2, "creation_date": 1534206578, "post_id": 51832179, "comment_id": 90618410, "body": "Define &quot;fails&quot;. Examining the error message is part of the learning process."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1534244400, "post_id": 51832179, "comment_id": 90632586, "body": "<code>IntVal</code>/<code>FloatVal</code>/<code>StringVal</code> are not types!"}], "answers": [{"comments": [{"owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "edited": false, "score": 0, "creation_date": 1534210638, "post_id": 51832443, "comment_id": 90619165, "body": "Is there a way to do this without using GADTs? probably a compromise solution"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "edited": false, "score": 0, "creation_date": 1534213026, "post_id": 51832443, "comment_id": 90619621, "body": "@Ngm Sure: <code>data List = IntList [Int] | FloatList [Float] | StringList [String]</code>."}, {"owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "edited": false, "score": 1, "creation_date": 1534213116, "post_id": 51832443, "comment_id": 90619640, "body": "If you don&#39;t mind being a little more polymorphic, there&#39;s <code>data Val a = Val a</code>, in which case <code>IntVal</code>, <code>FloatVal</code>, etc. are all just spelled <code>Val</code>.  But that doesn&#39;t prevent having a <code>Val Bool</code>, or <code>Val [(String -&gt; Double, IO ())]</code>, or whatever.  If you want the element type to be reflected in the choice of constructor, chosen from a finite set of choices as in your question, then GADTs are the feature that does that."}, {"owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534216321, "post_id": 51832443, "comment_id": 90620277, "body": "@DanielWagner I did try that, the problem then is that is not really a List of Vals and you need a way to translate into Vals, but yes its a good compromise solution"}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 6, "last_activity_date": 1534209057, "creation_date": 1534209057, "answer_id": 51832443, "question_id": 51832179, "link": "https://stackoverflow.com/questions/51832179/haskell-using-one-data-type-kind-in-another/51832443#51832443", "title": "Haskell - Using one data type kind in another", "body": "<p>There is a solution using GADTs.  The problem is that <code>IntVal</code> etc are not actually types, they are just constructors (basically functions that also support pattern matching) for the single type <code>Val</code>. So once you have made a <code>Val</code>, the information about which kind of value it is is completely lost at the type level (that is, compile time).</p>\n\n<p>The trick is to tag <code>Val</code> with the type it contains.</p>\n\n<pre><code>data Val a where\n    IntVal :: Int -&gt; Val Int\n    FloatVal :: Float -&gt; Val Float\n    StringVal :: String -&gt; Val String\n</code></pre>\n\n<p>Then if you have a plain list <code>[Val a]</code> it will already be homogeneous.  If you must:</p>\n\n<pre><code>data List = IntList [Val Int]\n          | FloatList [Val Float]\n          ...\n</code></pre>\n\n<p>which is slightly different in that it \"erases\" the type of list, and it can distinguish between an empty list of ints and an empty list of floats, for example.  You could also use the same GADT trick with List</p>\n\n<pre><code>data List a where\n    IntList :: [Val Int] -&gt; List Int\n    FloatList :: [Val Float] -&gt; List Float\n    ...\n</code></pre>\n\n<p>but in that case I think a better design is probably the simpler</p>\n\n<pre><code>newtype List a = List [Val a]\n</code></pre>\n\n<p>The trade-offs between all these different designs really depends on what you are planning to do with them.</p>\n"}], "owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "accepted_answer_id": 51832443, "answer_count": 1, "score": 0, "last_activity_date": 1534209057, "creation_date": 1534206369, "last_edit_date": 1534207319, "question_id": 51832179, "link": "https://stackoverflow.com/questions/51832179/haskell-using-one-data-type-kind-in-another", "title": "Haskell - Using one data type kind in another", "body": "<p>Haskell newbie; I want to be able to declare <code>Val</code> which can be either <code>IntVal, StringVal FloatVal</code> and a <code>List</code> which can be either <code>StringList, IntList, FloatList</code>, whose elements are (correspondingly): <code>StringVal, IntVal and FloatVal</code>.\nMy attempt so far:</p>\n\n<pre><code>data Val = IntVal Int\n         | FloatVal Float\n         | StringVal String deriving Show\n\ndata List = IntList [(IntVal Int)]\n          | FloatList [(FloatVal Float)]\n          | StringList [(StringVal String)] deriving Show\n</code></pre>\n\n<p>fails with the error:</p>\n\n<pre><code>    Not in scope: type constructor or class \u2018IntVal\u2019\n    A data constructor of that name is in scope; did you mean DataKinds?\n\n   data List = IntList [(IntVal Int)]\n\n... (similarly for StringVal, FloatVal..)\n</code></pre>\n\n<p>what is the right way to achieve this?</p>\n\n<p>PS:\ndeclaring List as <code>data List = List [Val]</code> ends up allowing Lists as follows:\nl = [(IntVal 10),(StringVal \"Hello\")], which I do not want to allow.</p>\n\n<p>I want each element of list to be a <code>Value</code> of same kind</p>\n"}, {"tags": ["haskell", "parametric-polymorphism"], "answers": [{"comments": [{"owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 0, "creation_date": 1534208093, "post_id": 51832110, "comment_id": 90618680, "body": "Ok, but now I have just pushed my problem from <code>Asset</code> to <code>Reference</code>? I now need to create a <code>Reference a</code> where I don&#39;t know what <code>a</code> is until I read data from the WebSocket or disk.  I think given the choice, I&#39;d prefer to keep this problem isolated to the Asset class which, outside of the IO portion of the code, is much less common."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 0, "creation_date": 1534211250, "post_id": 51832110, "comment_id": 90619271, "body": "@JohnF.Miller You said in your question, &quot;I can determine at run time what the concrete type of <code>a</code> is. This information is encoded in the <code>Reference</code> type.&quot;. So you just need to modify <code>Reference</code> to carry this information in a way the compiler can see. Of course I can&#39;t give advice on how to do that completely blind -- you&#39;ll have to include details about <i>how</i> <code>Reference</code> carries this information to get anything more targeted than what I&#39;ve written so far. edit: I see that you&#39;ve edited the question to include some of this now. I&#39;ll update my answer to discuss this."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 0, "creation_date": 1534211555, "post_id": 51832110, "comment_id": 90619336, "body": "@JohnF.Miller I&#39;ve included some further details that model your updated information."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 5, "last_activity_date": 1534211964, "last_edit_date": 1534211964, "creation_date": 1534205608, "answer_id": 51832110, "question_id": 51831989, "link": "https://stackoverflow.com/questions/51831989/resolving-an-ambiguous-type-variable/51832110#51832110", "title": "Resolving an ambiguous type variable", "body": "<p>Sure, make <code>Reference</code> store the type.</p>\n\n<pre><code>data Reference a where\n    UserRef :: Int -&gt; Reference User\n    PortRef :: Int -&gt; Reference Port\n    ModelRef :: Int -&gt; Reference Model\n\nload :: Asset a =&gt; Reference a -&gt; IO (Maybe a)\nsend :: Asset a =&gt; a -&gt; IO ()\n</code></pre>\n\n<p>If necessary, you can still recover the strong points of your original <code>Reference</code> type by existentially boxing it.</p>\n\n<pre><code>data SomeAsset f where SomeAsset :: Asset a =&gt; f a -&gt; SomeAsset f\n\nreference :: Parser (SomeAsset Reference)\nreference = asum\n    [ string \"User\" *&gt; go UserRef\n    , string \"Port\" *&gt; go PortRef\n    , string \"Model\" *&gt; go ModelRef\n    ]\n    where\n    go :: Asset a =&gt; (Int -&gt; Parser (Reference a)) -&gt; Parser (SomeAsset Reference)\n    go constructor = constructor &lt;$ char '-' &lt;*&gt; int\n\nloadAndSend :: SomeAsset Reference -&gt; IO ()\nloadAndSend (SomeAsset reference) = load reference &gt;&gt;= traverse_ send\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": true, "score": 6, "last_activity_date": 1534213222, "creation_date": 1534213222, "answer_id": 51832855, "question_id": 51831989, "link": "https://stackoverflow.com/questions/51831989/resolving-an-ambiguous-type-variable/51832855#51832855", "title": "Resolving an ambiguous type variable", "body": "<p>You can't make a function that turns string data into values of different types depending on what is in the string. That's simply impossible. You need to rearrange things so that your return-type doesn't depend on the string contents.</p>\n\n<p>Your type for <code>load</code>, <code>Asset a =&gt; Reference -&gt; IO (Maybe  a)</code> says \"pick any <code>a</code> (where <code>Asset a</code>) you like and give me a <code>Reference</code>, and I'll give you back an <code>IO</code> action that produces <code>Maybe a</code>\". The caller picks the type they expect to be loaded by the reference; the contents of the file do not influence which type is loaded. But you don't want it to be chosen by the caller, you want it to be chosen by what's stored on disk, so the type signature simply doesn't express the operation you actually want. That's your real problem; the ambiguous type variable when combining <code>load</code> and <code>send</code> would be easily resolved (with a type signature or <code>TypeApplications</code>) if <code>load</code> and <code>send</code> were individually correct and combining them was the only problem.</p>\n\n<p>Basically you can't just have <code>load</code> return a polymorphic type, because if it does then the caller gets to (must) decide what type it returns. There's two ways to avoid this that are more-or-less equivalent: return an existential wrapper, or use rank 2 types and add a polymorphic handler function (continuation) as a parameter.</p>\n\n<p>Using an existential wrapper (requires <code>GADTs</code> extension), it looks something like this:</p>\n\n<pre><code>data SomeAsset\n  where Some :: Asset a =&gt; a -&gt; SomeAsset\n\nload :: Reference -&gt; IO (Maybe SomeAsset)\n</code></pre>\n\n<p>Notice <code>load</code> is no longer polymorphic. You get a <code>SomeAsset</code> that (as far as the type checker is concerned) could contain any type that has an <code>Asset</code> instance. <code>load</code> can internally use whatever logic it wants split into multiple branches and come up with values of different types of asset on different branches; provided each branch ends with wrapping up the asset value with the <code>SomeAsset</code> constructor all of the branches will return the same type.</p>\n\n<p>To <code>send</code> it, you would use something like (ignoring that I'm not handling <code>Nothing</code>):</p>\n\n<pre><code>loadAndSend :: Reference -&gt; IO ()\nloadAndSend ref\n  = do Just someAsset &lt;- load ref\n       case someAsset\n         of SomeAsset asset -&gt; send asset\n</code></pre>\n\n<p>The <code>SomeAsset</code> wrapper guarantees that <code>Asset</code> holds for its wrapped value, so you can unwrap them and call any <code>Asset</code>-polymorphic function on the result. However you can never do anything with the value that depends on the specific type in any other way<sup>1</sup>, which is why you have to keep it wrapped up and <code>case</code> match on it all the time; if the <code>case</code> expression results in a type that depends on the contained type (such as <code>case someAsset of SomeAsset a -&gt; a</code>) the compiler will not accept your code.</p>\n\n<p>The other way is to instead use <code>RankNTypes</code> and give <code>load</code> a type like this:</p>\n\n<pre><code>load :: (forall a. Asset a =&gt; a -&gt; r) -&gt; Reference -&gt; IO (Maybe r)\n</code></pre>\n\n<p>Here <code>load</code> doesn't return a value representing the loaded asset at all. What it does instead is take a polymorphic function as an argument; the function works on any <code>Asset</code> and returns a type <code>r</code> (that was chosen by <code>load</code>'s caller), so again <code>load</code> can internally branch however it wants and construct differently-typed assets in the different branches. The different asset types can all be passed to the handler, so the handler can be called in every branch.</p>\n\n<p>My preference is often to use the <code>SomeAsset</code> approach, but then to also use <code>RankNTypes</code> and define a helper function like:</p>\n\n<pre><code>withSomeAsset :: (forall a. Asset a =&gt; a -&gt; r) -&gt; (SomeAsset -&gt; r)\nwithSomeAsset f (SomeAsset a) = f a\n</code></pre>\n\n<p>This avoids having to restructure your code into continuation passing style, but takes away the heave <code>case</code> syntax everywhere you need to use a <code>SomeAsset</code>:</p>\n\n<pre><code>loadAndSend :: Reference -&gt; IO ()\nloadAndSend ref\n  = do Just asset &lt;- load ref\n       withSomeAsset send asset\n</code></pre>\n\n<p>Or even add:</p>\n\n<pre><code>sendSome = withSomeAsset send\n</code></pre>\n\n<hr>\n\n<p>Daniel Wagner suggested adding the type parameter to <code>Reference</code>, which the OP objected to by stating that simply moves the same problem to when the references are constructed. If the references contain data representing which type of asset they refer to, then I would <em>strongly</em> recommend taking Daniel's advice, and using the concepts described in this answer to address that problem at the reference-constructing level. <code>Reference</code> having a type parameter prevents mixing up references to the wrong types of assets where you do know the type.</p>\n\n<p>And if you do significant processing with references and assets of the same type, then having the type parameter in your workhorse code can catch easy mistakes mixing them up <em>even if</em> you usually existential the type away at the outer levels of code.</p>\n\n<hr>\n\n<p><sup>1</sup> Technically your <code>Asset</code> implies <code>Typeable</code>, so you can test it for specific types and then return those.</p>\n"}, {"tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": false, "score": 0, "last_activity_date": 1534451096, "creation_date": 1534451096, "answer_id": 51884828, "question_id": 51831989, "link": "https://stackoverflow.com/questions/51831989/resolving-an-ambiguous-type-variable/51884828#51884828", "title": "Resolving an ambiguous type variable", "body": "<p>After reviewing the answers from <a href=\"https://stackoverflow.com/a/51832110/163177\">Daniel Wagner</a> and <a href=\"https://stackoverflow.com/a/51832855/163177\">Ben</a>, I ultimately resolved my issue using a combination of the two which I place here in hopes it will aid others.</p>\n\n<p>First, per Daniel Wagner's answer, I added a phantom type to <code>Reference</code>:</p>\n\n<pre><code>data Reference a = Ref {\n    assetType:: String\n  , assetIndex :: Int\n  } deriving (Eq, Ord, Show, Generic)\n</code></pre>\n\n<p>I chose not to use a GADT constructors and leave the string reference to <code>assetType</code> as I frequently send references over the wire and/or parse them from incoming text. I felt there were too many code points where I needed a generic reference. For those cases, I fill in the phantom type with <code>Void</code>:</p>\n\n<pre><code>{-# LANGUAGE EmptyDataDecls #-}\ndata Void\n-- make this reference Generic\nvoidRef :: Reference a -&gt; Reference Void\ncastRef :: a -&gt; Reference b -&gt; Reference a\n--        ^^^ Note this can be undefined used only for its type\n</code></pre>\n\n<p>With this the <code>load</code> type signature becomes <code>load :: Asset a =&gt; Reference a -&gt; IO (Maybe  a)</code>  So the Asset is always matches the type of the Reference.  (Yay type safety!)</p>\n\n<p>That still doesn't address how to load a generic reference.  For those cases, I wrote some new code using the second half of Ben's answer.  By wrapping the asset in <code>SomeAsset</code>, I can return a Type which is making the type checker happy.</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\nimport Data.Aeson (encode)\n\nloadGenericAsset :: Reference Void -&gt; IO SomeAsset\nloadGenericAsset ref =\n  case assetType ref of\n    \"User\" -&gt; Some &lt;$&gt; load (castRef (undefined :: User) ref)\n    \"Port\" -&gt; Some &lt;$&gt; load (castRef (undefined :: Port) ref)\n     [etc...]\n\nsend :: SomeAsset -&gt; IO ()\nsend (Some a) = writeToUser (encode a)\n\ndata SomeAsset where \n  Some :: Asset a =&gt; a -&gt; SomeAsset\n</code></pre>\n"}], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 250, "favorite_count": 0, "accepted_answer_id": 51832855, "answer_count": 3, "score": 2, "last_activity_date": 1534451096, "creation_date": 1534204439, "last_edit_date": 1534208506, "question_id": 51831989, "link": "https://stackoverflow.com/questions/51831989/resolving-an-ambiguous-type-variable", "title": "Resolving an ambiguous type variable", "body": "<p>I have these two functions:</p>\n\n<pre><code>load :: Asset a =&gt; Reference -&gt; IO (Maybe  a)\nsend :: Asset a =&gt; a -&gt; IO ()\n</code></pre>\n\n<p>The Asset class look like this:</p>\n\n<pre><code>class (Typeable a,ToJSON a, FromJSON a) =&gt; Asset a where\n  ref :: a -&gt; Reference\n  ...\n</code></pre>\n\n<p>The first reads an asset from disk, and the second transmits a JSON representation to a WebSocket.  In isolation they work fine, but when I combine them the compiler cannot deduce what concrete type <code>a</code> should be. (<code>Could not deduce (Asset a0) arising from a use of 'load'</code>)</p>\n\n<p>This makes sense, I have not given a concrete type and both <code>load</code> and <code>send</code> are polymorphic.  Somehow the compiler has to decide which version of <code>send</code> (and by extension what version of <code>toJSON</code>) to use.</p>\n\n<p>I can determine at run time what the concrete type of <code>a</code> is.  This information is actually encoded both in the data on the disk and the <code>Reference</code> type, but I do not know for sure at compile time as the type checker is being run.</p>\n\n<p>Is there a way to pass the correct type at run time an still keep the type checker happy?</p>\n\n<hr>\n\n<p><strong>Additional Information</strong></p>\n\n<p>The definition of Reference</p>\n\n<pre><code>data Reference = Ref {\n    assetType:: String\n  , assetIndex :: Int\n  } deriving (Eq, Ord, Show, Generic)\n</code></pre>\n\n<p>References are derived by parsing a request from a WebSocket as follows where Parser comes from the Parsec library.</p>\n\n<pre><code>reference :: Parser Reference\nreference = do \n  t &lt;-    string \"User\" \n       &lt;|&gt; string \"Port\" \n       &lt;|&gt; string \"Model\"\n       &lt;|&gt; ...\n  char '-'\n  i &lt;- int\n  return Ref {assetType = t, assetIndex =i}\n</code></pre>\n\n<p>If I added a type parameter to <code>Reference</code> I simply push my problem back into the parser.  I still need to turn a string that I do not know at compile time into a type to make this work.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534201726, "post_id": 51830730, "comment_id": 90617501, "body": "I don&#39;t think this is possible to achieve, with the current GHC."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1534202957, "post_id": 51830730, "comment_id": 90617768, "body": "I&#39;m interested as to why you&#39;d want the second to fail?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 4, "creation_date": 1534214657, "post_id": 51830730, "comment_id": 90619946, "body": "@AJFarmar I could see it being useful to avoid confusing errors when you have <code>ScopedTypeVariables</code> turned on but forgot to bring a variable into scope with a <code>forall</code>."}, {"owner": {"reputation": 5900, "user_id": 931154, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/bTrZd.jpg?s=128&g=1", "display_name": "Gregory Nisbet", "link": "https://stackoverflow.com/users/931154/gregory-nisbet"}, "edited": false, "score": 0, "creation_date": 1534537649, "post_id": 51830730, "comment_id": 90756011, "body": "Daniel&#39;s rationale is much better. I&#39;m writing a generator for some Haskell code and want to the output to be processed with options that are as strict as possible."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1534256885, "creation_date": 1534256885, "answer_id": 51843817, "question_id": 51830730, "link": "https://stackoverflow.com/questions/51830730/ghc-make-explicit-forall-mandatory/51843817#51843817", "title": "GHC make explicit forall mandatory", "body": "<p>No, GHC currently does not have tooling for that.</p>\n"}], "owner": {"reputation": 5900, "user_id": 931154, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/bTrZd.jpg?s=128&g=1", "display_name": "Gregory Nisbet", "link": "https://stackoverflow.com/users/931154/gregory-nisbet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 51843817, "answer_count": 1, "score": 2, "last_activity_date": 1534256885, "creation_date": 1534195221, "last_edit_date": 1534201320, "question_id": 51830730, "link": "https://stackoverflow.com/questions/51830730/ghc-make-explicit-forall-mandatory", "title": "GHC make explicit forall mandatory", "body": "<p>The language extension <code>ExplicitForall</code> makes it possible but not required to bind type variables with <code>forall</code>.</p>\n\n<p>For example, the following program compiles</p>\n\n<pre><code>{-# LANGUAGE ExplicitForAll #-}\n\n-- cps1.hs\n\n-- non-cps definition of add\nadd :: Int -&gt; Int -&gt; Int\nadd x y = x + y\n\n-- cps definition of add\nadd_cps :: forall r . Int -&gt; Int -&gt; (Int -&gt; r) -&gt; r\nadd_cps x y k = k (add x y)\n</code></pre>\n\n<p>However, the following program without an explicit quantifier for <code>r</code> also compiles.</p>\n\n<pre><code>{-# LANGUAGE ExplicitForAll #-}\n\n-- cps2.hs\n\n-- non-cps definition of add\nadd :: Int -&gt; Int -&gt; Int\nadd x y = x + y\n\n-- cps definition of add\nadd_cps :: Int -&gt; Int -&gt; (Int -&gt; r) -&gt; r\nadd_cps x y k = k (add x y)\n</code></pre>\n\n<p>Is there some combination of language extensions or compiler flags that can make the second program fail to compile?</p>\n"}, {"tags": ["performance", "haskell", "polymorphism", "rank-n-types"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534193988, "post_id": 51829788, "comment_id": 90615300, "body": "I&#39;d guess that in (1) <code>vs</code> gets a monomorphic type thanks to the Monomorphism Restriction. To confirm this, try to annotate <code>vs</code> as in <code>let vs :: Double ; vs = ...</code> and <code>let vs :: forall a. Fractional a =&gt; a ; vs = ...</code>. My guess is that the former is as fast as the program above (with variant (1) uncommented), while the latter is slow."}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1534194315, "post_id": 51829788, "comment_id": 90615432, "body": "Are you sure this example is reproducing the real performance issue you&#39;re seeing? e.g. if I remove the <code>trace</code> calls, <code>c</code> and <code>d</code> both seem fast. You might have better luck doing a gvimdiff on the core output from a fast and slow version of your real code (compiled with optimizations, etc)"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1534204150, "post_id": 51829788, "comment_id": 90618012, "body": "I doubt this is the problem, but <code>State</code> can be a <code>newtype</code>, which makes the wrapper free. You cannot, however, make do <i>without</i> a wrapper."}], "answers": [{"tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 4, "last_activity_date": 1534231577, "last_edit_date": 1534231577, "creation_date": 1534197217, "answer_id": 51831104, "question_id": 51829788, "link": "https://stackoverflow.com/questions/51829788/puzzling-performance-output-behavior-with-rank-2-polymorphism-in-haskell/51831104#51831104", "title": "Puzzling performance/output behavior with rank-2 polymorphism in Haskell", "body": "<p><strong><code>forall a . (Fractional a) =&gt; a</code> is a function type.</strong></p>\n\n<p>It has two arguments, a type <code>(a :: *)</code> and an instance with type <code>Fractional a</code>. Whenever you see <code>=&gt;</code>, it's a function operationally, and compiles to a function in GHC's core representation, and sometimes stays a function in machine code as well. The main difference between <code>-&gt;</code> and <code>=&gt;</code> is that arguments for the latter cannot be explicitly given by programmers, and they are always filled in implicitly by instance resolution. </p>\n\n<p>Let's see the fast <code>step</code> first:</p>\n\n<pre><code>step :: State -&gt; State\nstep (State f) =\n    let vs = trace \"hello\" f\n    in State (vs `seq` f)\n</code></pre>\n\n<p>Here, <code>vs</code> has an undetermined <code>Fractional</code> type which defaults to <code>Double</code>. If you turn on <code>-Wtype-defaults</code> warning, GHC will point this out to you. Since <code>vs :: Double</code>, it's just a numeric value, which is captured by the returned <em>closure</em>. Right, <code>vs `seq` f</code> is a function, since it has a functional type <code>forall a . (Fractional a) =&gt; a</code>, and it's desugared to an actual lambda expression by GHC. This lambda abstracts over the two arguments, captures <code>vs</code> as free variable, and passes along both arguments to <code>f</code>.</p>\n\n<p>So, each <code>step</code> creates a new function closure which captures a <code>vs :: Double</code>. If we call <code>step</code> three times, we get three closures with three <code>Double</code>s inside, each closure referring to the previous one. Then, when we write <code>vstate (step $ step $ step initState)</code>, we again default to <code>Double</code>, and GHC calls this closure with the <code>Fractional Double</code> instance. All the <code>vs</code>-es call previous closures with <code>Fractional Double</code>, but every <code>vs</code> is evaluated only once, because they are regular lazy <code>Double</code> values which are not recomputed.</p>\n\n<p>However, if we enable <code>NoMonomorphismRestriction</code>, <code>vs</code> is generalized to <code>forall a. Fractional a =&gt; a</code>, so it becomes a function as well, and its calls are not memoized anymore. Hence, in this case the fast version behaves the same as the slow version.</p>\n\n<p>Now, the slow <code>step</code>:</p>\n\n<pre><code>step :: State -&gt; State\nstep (State f) = State ((trace \"hello\" f) `seq` f)\n</code></pre>\n\n<p>This has <em>exponential</em> number of calls in the number of steps, because <code>step f</code> calls <code>f</code> twice, and without optimizations no computation is shared, because both calls occur under a lambda. In <code>(trace \"hello\" f) `seq` f</code>, the first call to <code>f</code> defaults to <code>Fractional Double</code>, and the second call just passes along the implicit <code>Fractional a</code> instance as before.</p>\n\n<p>If we switch on optimization, GHC observes that the first <code>f</code> call does not depend on the function parameters, and floats out <code>trace \"hello\" f</code> to a let-binding, resulting in pretty much the same code as in the fast version.</p>\n"}], "owner": {"reputation": 463, "user_id": 7342065, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a47003905491d69d47a261235044a44?s=128&d=identicon&r=PG&f=1", "display_name": "kye", "link": "https://stackoverflow.com/users/7342065/kye"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 51831104, "answer_count": 1, "score": 7, "last_activity_date": 1534231577, "creation_date": 1534190560, "last_edit_date": 1534190918, "question_id": 51829788, "link": "https://stackoverflow.com/questions/51829788/puzzling-performance-output-behavior-with-rank-2-polymorphism-in-haskell", "title": "Puzzling performance/output behavior with rank-2 polymorphism in Haskell", "body": "<p>The below code (annotated inline with locations) gives a minimal example of the puzzling behavior I'm experiencing. </p>\n\n<p>Essentially, why does (2) result in terrible space/time performance while (1) does not? </p>\n\n<p>The below code is compiled and run as follows on ghc version 8.4.3:\n<code>ghc -prof -fprof-auto -rtsopts test.hs; ./test +RTS -p</code></p>\n\n<pre><code>{-# LANGUAGE Rank2Types #-}\n\nimport Debug.Trace\n\n-- Not sure how to get rid of the record\ndata State = State {\n    -- (0) If vstate :: Float, the extra \"hello\"s go away\n    vstate :: forall a . (Fractional a) =&gt; a\n}\n\nstep :: State -&gt; State\nstep s =\n    -- (1) one \"hello\" per step\n    -- let vs = trace \"hello\" (vstate s) in\n    -- s { vstate = vs `seq` vstate s }\n\n    -- (2) increasing \"hello\"s per step\n    s { vstate = (trace \"hello\" (vstate s)) `seq` vstate s }\n\nmain :: IO ()\nmain = do\n    let initState = State { vstate = 0 }\n\n    -- (3) step 3 times\n    -- let res = step $ step $ step initState\n    -- print $ vstate res\n\n    -- (4) step 20 times to profile time/space performance\n    let res = iterate step initState\n    print $ vstate $ last $ take 20 res\n\n    print \"done\"\n</code></pre>\n\n<p>a. With (1) and (3) commented in, compiled without <code>-O2</code>, the code only outputs \"hello\" three times, as I expect it to.</p>\n\n<p>b. With (2) and (3) commented in, compiled without <code>-O2</code>, the code outputs \"hello\" eight times. It seems to output one additional \"hello\" per step. <strong>I don't understand why this is happening.</strong></p>\n\n<p>c. With (1) and (4) commented in, compiled without <code>-O2</code>, the code runs extremely fast.</p>\n\n<p>d. With (2) and (4) commented in, compiled without <code>-O2</code>, the code runs very slowly, and the performance report (included below) shows that makes many more calls to <code>vstate</code> and uses much more memory than variant <code>c</code>. <strong>I also don't understand why this is happening.</strong></p>\n\n<p>e. With (2) and (4) commented in, compiled <strong>with</strong> <code>-O2</code>, the code behaves the same as variant <code>c</code>. So clearly ghc is able to optimize away whatever pathological behavior is happening in variant <code>d</code>.</p>\n\n<p>Here is the profiling report for variant <code>c</code> (fast):</p>\n\n<pre><code>    Mon Aug 13 15:48 2018 Time and Allocation Profiling Report  (Final)\n\n       partial +RTS -p -RTS\n\n    total time  =        0.00 secs   (0 ticks @ 1000 us, 1 processor)\n    total alloc =     107,560 bytes  (excludes profiling overheads)\n\nCOST CENTRE MODULE           SRC                        %time %alloc\n\nCAF         GHC.IO.Handle.FD &lt;entire-module&gt;              0.0   32.3\nCAF         GHC.IO.Encoding  &lt;entire-module&gt;              0.0    3.1\nmain        Main             partial.hs:(24,1)-(35,16)    0.0   13.4\nmain.res    Main             partial.hs:32:9-36           0.0    1.6\nstep        Main             partial.hs:(15,1)-(18,36)    0.0    1.1\nstep.vs     Main             partial.hs:17:9-37           0.0   46.1\n\n\n                                                                                         individual      inherited\nCOST CENTRE           MODULE                SRC                       no.     entries  %time %alloc   %time %alloc\n\nMAIN                  MAIN                  &lt;built-in&gt;                114          0    0.0    0.6     0.0  100.0\n CAF                  Main                  &lt;entire-module&gt;           227          0    0.0    0.1     0.0   52.2\n  main                Main                  partial.hs:(24,1)-(35,16) 228          1    0.0    2.7     0.0   52.1\n   vstate             Main                  partial.hs:11:5-10        230         20    0.0    0.0     0.0    0.0\n    main.initState    Main                  partial.hs:25:9-40        239          0    0.0    0.0     0.0    0.0\n    main.res          Main                  partial.hs:32:9-36        234          0    0.0    0.0     0.0    0.0\n     step             Main                  partial.hs:(15,1)-(18,36) 235          0    0.0    0.0     0.0    0.0\n   main.initState     Main                  partial.hs:25:9-40        233          1    0.0    0.0     0.0    0.0\n   main.res           Main                  partial.hs:32:9-36        231          1    0.0    1.6     0.0   49.4\n    step              Main                  partial.hs:(15,1)-(18,36) 232         19    0.0    1.1     0.0   47.8\n     step.vs          Main                  partial.hs:17:9-37        236         19    0.0   46.1     0.0   46.7\n      vstate          Main                  partial.hs:11:5-10        237        190    0.0    0.0     0.0    0.6\n       main.initState Main                  partial.hs:25:9-40        238          0    0.0    0.6     0.0    0.6\n CAF                  Debug.Trace           &lt;entire-module&gt;           217          0    0.0    0.2     0.0    0.2\n CAF                  GHC.Conc.Signal       &lt;entire-module&gt;           206          0    0.0    0.6     0.0    0.6\n CAF                  GHC.IO.Encoding       &lt;entire-module&gt;           189          0    0.0    3.1     0.0    3.1\n CAF                  GHC.IO.Encoding.Iconv &lt;entire-module&gt;           187          0    0.0    0.2     0.0    0.2\n CAF                  GHC.IO.Handle.FD      &lt;entire-module&gt;           178          0    0.0   32.3     0.0   32.3\n CAF                  GHC.IO.Handle.Text    &lt;entire-module&gt;           176          0    0.0    0.1     0.0    0.1\n main                 Main                  partial.hs:(24,1)-(35,16) 229          0    0.0   10.7     0.0   10.7 \n</code></pre>\n\n<p>Here is the profiling report for variant <code>d</code> (slow; without <code>-O2</code>):</p>\n\n<pre><code>    Mon Aug 13 15:25 2018 Time and Allocation Profiling Report  (Final)\n\n       partial +RTS -p -RTS\n\n    total time  =        1.48 secs   (1480 ticks @ 1000 us, 1 processor)\n    total alloc = 1,384,174,472 bytes  (excludes profiling overheads)\n\nCOST CENTRE    MODULE    SRC                        %time %alloc\n\nstep           Main      partial.hs:(15,1)-(21,60)   95.7   98.8\nmain.initState Main      partial.hs:25:9-40           3.0    1.2\nvstate         Main      partial.hs:11:5-10           1.4    0.0\n\n\n                                                                                      individual      inherited\nCOST CENTRE        MODULE                SRC                       no.     entries  %time %alloc   %time %alloc\n\nMAIN               MAIN                  &lt;built-in&gt;                114          0    0.0    0.0   100.0  100.0\n CAF               Main                  &lt;entire-module&gt;           227          0    0.0    0.0   100.0  100.0\n  main             Main                  partial.hs:(24,1)-(35,16) 228          1    0.0    0.0   100.0  100.0\n   vstate          Main                  partial.hs:11:5-10        230    1048575    1.4    0.0   100.0  100.0\n    main.initState Main                  partial.hs:25:9-40        236          0    3.0    1.2     3.0    1.2\n    main.res       Main                  partial.hs:32:9-36        234          0    0.0    0.0    95.7   98.8\n     step          Main                  partial.hs:(15,1)-(21,60) 235          0   95.7   98.8    95.7   98.8\n   main.initState  Main                  partial.hs:25:9-40        233          1    0.0    0.0     0.0    0.0\n   main.res        Main                  partial.hs:32:9-36        231          1    0.0    0.0     0.0    0.0\n    step           Main                  partial.hs:(15,1)-(21,60) 232         19    0.0    0.0     0.0    0.0\n CAF               Debug.Trace           &lt;entire-module&gt;           217          0    0.0    0.0     0.0    0.0\n CAF               GHC.Conc.Signal       &lt;entire-module&gt;           206          0    0.0    0.0     0.0    0.0\n CAF               GHC.IO.Encoding       &lt;entire-module&gt;           189          0    0.0    0.0     0.0    0.0\n CAF               GHC.IO.Encoding.Iconv &lt;entire-module&gt;           187          0    0.0    0.0     0.0    0.0\n CAF               GHC.IO.Handle.FD      &lt;entire-module&gt;           178          0    0.0    0.0     0.0    0.0\n CAF               GHC.IO.Handle.Text    &lt;entire-module&gt;           176          0    0.0    0.0     0.0    0.0\n main              Main                  partial.hs:(24,1)-(35,16) 229          0    0.0    0.0     0.0    0.0\n</code></pre>\n\n<p>Here are some notes/guesses/questions on why this is happening:</p>\n\n<ul>\n<li>What's the relationship of the degrading performance to the increasing \"hello\" count? The pathological version seems to output one more \"hello\" with each additional step. Why?</li>\n<li>I'm aware that polymorphism in Haskell is slow, as detailed in <a href=\"https://stackoverflow.com/questions/11145503/why-does-adding-a-polymorphic-type-signature-degrade-performance\">this StackOverflow question</a>. That might be part of the problem, since the pathological behavior goes away when <code>vstate</code> is monomorphized as <code>vstate :: Float</code>. But I don't see why the lack of a let-binding, as in location (2), would cause such bad time/space performance.</li>\n<li>This is the minimal version of a performance bug in a larger codebase, which we fixed by \"monomorphizing\" floating-type numbers using <code>realToFrac</code> (the commit is <a href=\"https://github.com/penrose/penrose/commit/eaa08fde6f1f61a71eac24d840f7a94a1815273c\" rel=\"noreferrer\">here</a> in case anyone is curious). I know that compiling with <code>-O2</code> fixes the behavior in the minimal example, but I tried it in the larger codebase and it does not fix the performance issues. (The reason we need rank-2 polymorphism in the larger codebase is to use the <code>ad</code> library for autodiff.) Is there a more principled fix than using <code>realToFrac</code>, such as an inline specialization that can be applied?</li>\n</ul>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534185404, "post_id": 51828538, "comment_id": 90611571, "body": "Assuming you could build such a mixed-type value, what would you do with it? Please show intended usage."}, {"owner": {"reputation": 3706, "user_id": 2018455, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e75a41fc224930ef1fa9ddcc9c714174?s=128&d=identicon&r=PG", "display_name": "Neil Locketz", "link": "https://stackoverflow.com/users/2018455/neil-locketz"}, "edited": false, "score": 0, "creation_date": 1534185650, "post_id": 51828538, "comment_id": 90611697, "body": "You may be able to get away with <a href=\"https://downloads.haskell.org/~ghc/5.00/docs/set/universal-quantification.html\" rel=\"nofollow noreferrer\">universal quantification</a> not sure though..."}, {"owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534186398, "post_id": 51828538, "comment_id": 90612083, "body": "@n.m. I have added an intended use case"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1534214220, "post_id": 51828538, "comment_id": 90619860, "body": "Your use case description is too general to be useful. Please show some specific (non-working) (pseudo) code that uses your data type."}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534194192, "post_id": 51829290, "comment_id": 90615376, "body": "The latter is isomorphic to <code>data DataType = DataType String</code>. It is sometimes considered to be an <a href=\"https://lukepalmer.wordpress.com/2010/01/24/haskell-antipattern-existential-typeclass/\" rel=\"nofollow noreferrer\">antipattern</a>."}], "tags": [], "owner": {"reputation": 1159, "user_id": 3953988, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/803352198cc6f048e409a07eefa19d7b?s=128&d=identicon&r=PG", "display_name": "Rahul Manne", "link": "https://stackoverflow.com/users/3953988/rahul-manne"}, "is_accepted": false, "score": 5, "last_activity_date": 1534188417, "creation_date": 1534188417, "answer_id": 51829290, "question_id": 51828538, "link": "https://stackoverflow.com/questions/51828538/haskell-tuples-of-custom-types/51829290#51829290", "title": "Haskell - Tuples of custom types", "body": "<p>Mixed type lists aren't really supported in Haskell, but <a href=\"https://stackoverflow.com/a/7787429/3953988\">https://stackoverflow.com/a/7787429/3953988</a> has some good solutions.</p>\n\n<p>From that answer, either:</p>\n\n<ul>\n<li>create a new container type that is a sum (eg: <code>data DataType = X Int | Y String...</code>)</li>\n<li>use existential types (eg: <code>data DataType = forall a. Show a =&gt; Datatype a</code>) (Show being an optional constraint, which I think you want given you want DataType to be showable)</li>\n</ul>\n"}], "owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 338, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1534202100, "creation_date": 1534185141, "last_edit_date": 1534202100, "question_id": 51828538, "link": "https://stackoverflow.com/questions/51828538/haskell-tuples-of-custom-types", "title": "Haskell - Tuples of custom types", "body": "<p>I want to be able to represent tuples of custom types. What I cam up with is as follows:</p>\n\n<pre><code>type Name = String\n\ndata DataType a  = DataType a deriving Show\n\ndata Val a = Single (DataType a) | List [(DataType a)] deriving Show\n\ndata State a = State [(Name,(Val a))] deriving Show\n\nappend :: (Name, (Val a)) -&gt; State a -&gt; State a\nappend nv (State st) = State (st ++ [nv])\n</code></pre>\n\n<p>Now the problem is that State cannot be [(\"NUM1\",Single (DataType 1)), (\"STR1\",Single (DataType \"Hello\"))]. I want to be able to perform the following:</p>\n\n<pre><code>*Main&gt; num1 = Single (DataType 1)\n*Main&gt; num1\nSingle (DataType 1)\n*Main&gt; str1 = Single (DataType \"str1\")\n*Main&gt; str1\nSingle (DataType \"str1\")\n*Main&gt; st1 = append (\"NUM1\",num1) (State [])\n*Main&gt; st1\nState [(\"NUM1\",Single (DataType 1))]\n*Main&gt; st2 = append (\"STR1\",str1) st1\n\n&lt;interactive&gt;:8:28: error:\n    \u2022 No instance for (Num [Char]) arising from a use of \u2018st1\u2019\n    \u2022 In the second argument of \u2018append\u2019, namely \u2018st1\u2019\n      In the expression: append (\"STR1\", str1) st1\n      In an equation for \u2018st2\u2019: st2 = append (\"STR1\", str1) st1\n</code></pre>\n\n<p>Haskell complains when I try to append a <code>(Name, Val String)</code> because it has already interpreted <code>State</code> as <code>State [(Name, (Val Int)]</code>, which is not really my intention.</p>\n\n<p>How do I achieve the <code>State</code> to act as dictionary for the DataType Int or DataType String? </p>\n\n<p>PS:\nOne possible use of such a functionality is in generated code, where the more than one types are generated as code and it also uses the functionality above to represent state.\nFor example the user could define some types using a UI, then a system generates Haskell code for those types along with the <code>state</code> defined above.</p>\n"}, {"tags": ["haskell", "io-monad"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534258349, "post_id": 51826623, "comment_id": 90641862, "body": "Re: (3): no, <code>length</code> does not implicitly print its result. If that&#39;s what you want, you must ask for it: <code>listAction &gt;&gt;= print . length</code>, for example. Likely this confusion has arisen because, to be user-friendly, ghci <i>usually</i> wraps pure things with an implicit call to <code>print</code> for you without you noticing. It will wrap a <code>print</code> around the entire expression you entered (e.g. it would be okay inserting <code>print (listAction &gt;&gt;= length)</code> if that type-checked) but won&#39;t reach deep inside your expression to try to guess where a <code>print</code> should go."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1534184679, "post_id": 51826769, "comment_id": 90611216, "body": "<code>liftM</code> is typically used only to define <code>fmap</code>. Other uses come off as a bit old-fashioned."}], "tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": false, "score": 5, "last_activity_date": 1534177720, "creation_date": 1534177720, "answer_id": 51826769, "question_id": 51826623, "link": "https://stackoverflow.com/questions/51826623/purpose-of-re-boxing-pure-value-for-ghci/51826769#51826769", "title": "Purpose of re-boxing pure value for GHCI", "body": "<p>This just a type error.</p>\n\n<p>The type of <code>&gt;&gt;=</code> (when used with <code>IO</code>) is</p>\n\n<pre><code>(&gt;&gt;=) :: IO a -&gt; (a -&gt; IO b) -&gt; IO b\n</code></pre>\n\n<p>That is, the second argument must be a function that returns a value of type <code>IO something</code>. <code>length</code> doesn't have such a type, so the type checker complains.</p>\n\n<p>As you show, <code>return :: a -&gt; IO a</code> can be used to lift a value into <code>IO</code>. That is one way to solve the problem.</p>\n\n<p>Another way is to use <code>fmap</code>:</p>\n\n<pre><code>fmap length listAction\n</code></pre>\n\n<p>This works because <code>fmap</code> (when used with <code>IO</code>) is</p>\n\n<pre><code>fmap :: (a -&gt; b) -&gt; IO a -&gt; IO b\n</code></pre>\n\n<p>(Other ways of doing the same thing include <code>liftM length listAction</code> and <code>length &lt;$&gt; listAction</code>.)</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1534177992, "creation_date": 1534177057, "last_edit_date": 1534177992, "question_id": 51826623, "link": "https://stackoverflow.com/questions/51826623/purpose-of-re-boxing-pure-value-for-ghci", "title": "Purpose of re-boxing pure value for GHCI", "body": "<p>Can someone explain to me why when using <code>ghci</code> I have to \"re-box\" the value returned by a monad? </p>\n\n<pre><code> listAction=listDirectory \"D:\\\\\"\n lenAction=listAction&gt;&gt;=length \n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>Couldn't match type `Int' with `IO b0'\n      Expected type: [FilePath] -&gt; IO b0\n        Actual type: [FilePath] -&gt; Int\n</code></pre>\n\n<p>I do not understand where my logic is flawed:</p>\n\n<ol>\n<li>Using <code>listAction</code> gives me a <code>IO [FilePath]</code></li>\n<li>I unbox the value of <code>listAction</code> to <code>[FilePath]</code> and i give it to <code>length</code></li>\n<li>Now shouldn't <code>length</code> just print the result to the console being a pure function? Isn't it the same if i would say <code>length [1,2,3]</code>?</li>\n</ol>\n\n<p>Why do i have to box it again? Isn't the result of the monad of type: <code>[FilePath]</code> and if so why can it not print the result? </p>\n\n<pre><code>lenAction=list&gt;&gt;=return . length\n</code></pre>\n"}, {"tags": ["haskell", "ghc", "primitive", "memory-alignment"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1534174558, "post_id": 51822946, "comment_id": 90606005, "body": "Some other misc info here: <a href=\"https://ghc.haskell.org/trac/ghc/ticket/14731\" rel=\"nofollow noreferrer\">ghc.haskell.org/trac/ghc/ticket/14731</a>"}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 3, "last_activity_date": 1534172664, "creation_date": 1534172664, "answer_id": 51825330, "question_id": 51822946, "link": "https://stackoverflow.com/questions/51822946/how-to-align-in-memory-the-array-payload-of-a-bytearray-with-ghc-haskell/51825330#51825330", "title": "How to align in memory the array payload of a ByteArray# with GHC Haskell", "body": "<p>From the GHC source code in <code>PrimOps.cmm</code> where the alignment is performed:</p>\n\n<pre><code>/* Now we need to move p forward so that the payload is aligned\n   to &lt;alignment&gt; bytes. Note that we are assuming that\n   &lt;alignment&gt; is a power of 2, which is technically not guaranteed */\np = p + ((-p - SIZEOF_StgArrBytes) &amp; (alignment - 1));\n</code></pre>\n\n<p>So, it is the <strong>payload</strong> that is aligned, not the header.</p>\n"}], "owner": {"reputation": 2638, "user_id": 7208029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QxbAJ.png?s=128&g=1", "display_name": "Chai T. Rex", "link": "https://stackoverflow.com/users/7208029/chai-t-rex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 51825330, "answer_count": 1, "score": 2, "last_activity_date": 1534172664, "creation_date": 1534165015, "last_edit_date": 1592644375, "question_id": 51822946, "link": "https://stackoverflow.com/questions/51822946/how-to-align-in-memory-the-array-payload-of-a-bytearray-with-ghc-haskell", "title": "How to align in memory the array payload of a ByteArray# with GHC Haskell", "body": "<p>I have a few questions about how to align not a <code>ByteArray#</code> but a <code>ByteArray#</code>'s <em>array payload</em> (the actual bytes of nonmetadata data stored in the array), which might be complicated by the fact that the RTS stores array metadata in the memory <em>right before</em> the array payload:</p>\n<blockquote>\n<p><a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Storage/HeapObjects\" rel=\"nofollow noreferrer\">If you have a value of type <code>ByteArray#</code>, it definitely points to a heap object with type <code>ARR_WORDS</code> (see below)\u2026</a></p>\n<p><a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Storage/HeapObjects\" rel=\"nofollow noreferrer\">\u22ee</a></p>\n<p><a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Storage/HeapObjects\" rel=\"nofollow noreferrer\"><code>ARR_WORDS</code>, <code>MUT_ARR_PTRS_CLEAN</code>, <code>MUT_ARR_PTRS_DIRTY</code>, <code>MUT_ARR_PTRS_FROZEN0</code>, <code>MUT_ARR_PTRS_FROZEN</code></a></p>\n<p><a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Storage/HeapObjects\" rel=\"nofollow noreferrer\">Non-pointer arrays are straightforward:</a></p>\n<p><a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Storage/HeapObjects\" rel=\"nofollow noreferrer\"><code>| Header | Bytes | Array payload |</code></a></p>\n</blockquote>\n<ul>\n<li>Does <code>newAlignedPinnedByteArray#</code> already work around this by specifically aligning the array payload rather than aligning everything including the metadata?</li>\n<li>Assuming that it doesn't, the number of bytes the metadata takes up can presumably change with new GHC versions. How can I determine how many bytes that takes up at my module's compiletime (I'm perfectly happy to use Template Haskell or some sort of Cabal trickery)?</li>\n<li>How can I use that information to figure out how much larger I should make the array to accomodate padding to get alignment of the array payload?</li>\n<li>How can I use that information to get an <code>Addr#</code> to the padded start of the array payload?</li>\n</ul>\n<p>Please ensure that your suggestions for getting the proper alignment cannot be undone even if the copying garbage collector doesn't care about alignment.</p>\n"}, {"tags": ["scala", "haskell", "functional-programming", "monads", "monoids"], "comments": [{"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 9, "creation_date": 1534154400, "post_id": 51818846, "comment_id": 90593196, "body": "<code>Data.List.NonEmpty</code> are <code>foldable</code> but not a <code>monoid</code> since you have drop the zero element. Btw, <code>Alternative</code> is a <code>monoid</code> but not <code>foldable</code>"}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 1, "creation_date": 1534179562, "post_id": 51818846, "comment_id": 90608715, "body": "A foldable data structure is generally a container, such as list or set. Saying this is foldable means that you can accumulate all its contents into a single value by providing some function to add one of the values to the accumulator. If the value type is a monoid then this function can be <code>mappend</code>. Is that what you mean?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user10180218"}, "reply_to_user": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 0, "creation_date": 1534207972, "post_id": 51818846, "comment_id": 90618655, "body": "@LuisMorillo Thanks but, I thought every List is a monoid."}, {"owner": {"user_type": "does_not_exist", "display_name": "user10180218"}, "reply_to_user": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1534208249, "post_id": 51818846, "comment_id": 90618707, "body": "@PaulJohnson <code>mappend </code> as the binary operator? and yes. Monoids = binary operator(including the specific identity element such as Zero for addition)  + flat structure(associative). That&#39;s what  I meant."}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 2, "creation_date": 1534227202, "post_id": 51818846, "comment_id": 90623212, "body": "@bayesian-study A monoid is a data structure which have a binary (associative) operation <i>and</i> a neutral element (a.k.a. zero element). So every list can be concatenated, giving you the binary operation. But <code>List.NonEmpty</code> has no zero element therefore it can&#39;t be a monoid. The proper TypeClass for <code>List.NonEmpty</code> is <code>Semigroup</code> ;)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1534256071, "post_id": 51818846, "comment_id": 90640204, "body": "What does &quot;if a data structure is a monoid, it&#39;s foldable&quot; even mean? For example, <code>()</code> is a pretty trivial monoid, but I can&#39;t think of a sensible interpretation of &quot;<code>()</code> is foldable&quot; -- it doesn&#39;t even have the right kind. (Going the other way, with a bit of work I think I could interpret things; e.g. &quot;<code>Foldable f</code> implies <code>Monoid (f a)</code>&quot; is a sensible (but wrong) claim that bridges the kind mismatch.)"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user10180218"}, "edited": false, "score": 0, "creation_date": 1534155393, "post_id": 51819705, "comment_id": 90593800, "body": "Thanks, &gt;because all of its values are under IO, you can&#39;t observe any of them from Foldable&lt; but there is IO monoid,  amd I thought IO monoid is definitely foldable <a href=\"http://www.haskellforall.com/2018/02/the-wizard-monoid.html\" rel=\"nofollow noreferrer\">haskellforall.com/2018/02/the-wizard-monoid.html</a> isn&#39;t it."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534162623, "post_id": 51819705, "comment_id": 90598145, "body": "@bayesian-study Why do you think <code>IO</code> is a foldable? If it were a foldable, we would have <code>toList (getChar) :: [Char]</code> -- what would be the resulting list? Note that this not an IO value, so evaluating that performs no IO, and always produces the same constant string. That string would be a completely arbitrary string."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 9, "creation_date": 1534165371, "post_id": 51819705, "comment_id": 90600042, "body": "@bayesian-study You don&#39;t even need <code>IO</code> to not be <code>Foldable</code>.  Functions suffice. There exists <code>instance (Monoid b) =&gt; Monoid (a -&gt; b)</code>, but you cannot usefully implement <code>instance Foldable ((-&gt;) a)</code>."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 20, "last_activity_date": 1534232833, "last_edit_date": 1534232833, "creation_date": 1534154248, "answer_id": 51819705, "question_id": 51818846, "link": "https://stackoverflow.com/questions/51818846/if-a-data-structure-is-foldable-is-it-a-monoid/51819705#51819705", "title": "If a data structure is foldable, is it a monoid?", "body": "\n\n<p>Your claim \"if a data structure is a <code>Monoid</code> then it is <code>Foldable</code>\" is not reasonably true.  For example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>newtype ActionList a = ActionList (IO [a])\n\ninstance Monoid (ActionList a) where\n    mempty = ActionList (return [])\n    ActionList a `mappend` ActionList b = ActionList (liftA2 (++) a b)\n</code></pre>\n\n<p>This is a perfectly good monoid.  But because all of its values are under <code>IO</code>, you can't observe any of them from <code>Foldable</code>.  The only <code>Foldable</code> instance would be the one that always returns empty (technically this would be valid because <code>foldMap</code> doesn't really have any laws about its validity, but it would hard to say that this is a good instance with a straight face).</p>\n\n<p>The converse, which you are asking about, is also not true.  For example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data TwoThings a = TwoThings a a\n</code></pre>\n\n<p>This is foldable:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>instance Foldable TwoThings where\n    foldMap f (TwoThings x y) = f x &lt;&gt; f y\n</code></pre>\n\n<p>However, if something is both a <code>Foldable</code> and a <code>Monoid</code> in any related way, I would expect the following homomorphism laws to hold:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foldMap f mempty = mempty\nfoldMap f (a &lt;&gt; b) = foldMap f a &lt;&gt; foldMap f b\n</code></pre>\n\n<p>And we can't get these laws to hold for <code>TwoThings</code>.  Notice that <code>foldMap (:[]) a</code> for <code>TwoThings</code> always has two elements.  But then the second law has two elements on the left and four on the right.  But the laws are not required to find a counterexample, as <a href=\"https://stackoverflow.com/a/51828757/33796\">dfeuer's answer</a> shows.</p>\n"}, {"comments": [{"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 1, "creation_date": 1540116957, "post_id": 51828757, "comment_id": 92738566, "body": "Lol, It&#39;s the <code>V1</code> type!"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1540183886, "post_id": 51828757, "comment_id": 92754365, "body": "@DannyuNDos, indeed."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 6, "last_activity_date": 1540069163, "last_edit_date": 1540069163, "creation_date": 1534186088, "answer_id": 51828757, "question_id": 51818846, "link": "https://stackoverflow.com/questions/51818846/if-a-data-structure-is-foldable-is-it-a-monoid/51828757#51828757", "title": "If a data structure is foldable, is it a monoid?", "body": "<p>Here's something <code>Foldable</code> (even <code>Traversable</code>) that has no hope of being a <code>Monoid</code>:</p>\n\n <pre class=\"lang-hs prettyprint-override\"><code>{-# language EmptyCase #-}\n\ndata F a\n\ninstance Foldable F where\n  foldMap _ t = case t of\n  -- or, = mempty\ninstance Traversable F where\n  traverse _ t = case t of\n  -- or, = pure $ case t of\n\ninstance Semigroup (F a) where\n  -- the only option\n  x &lt;&gt; _ = x\n\ninstance Monoid (F a) where\n  mempty = ????\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10180218"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 459, "favorite_count": 1, "answer_count": 2, "score": 8, "last_activity_date": 1540069163, "creation_date": 1534151304, "question_id": 51818846, "link": "https://stackoverflow.com/questions/51818846/if-a-data-structure-is-foldable-is-it-a-monoid", "title": "If a data structure is foldable, is it a monoid?", "body": "<p>Obviously, if a data structure is a monoid, it's foldable, but is it safe to say if a data structure is foldable, it's a monoid?</p>\n\n<p><a href=\"https://en.wikibooks.org/wiki/Haskell/Foldable\" rel=\"noreferrer\">https://en.wikibooks.org/wiki/Haskell/Foldable</a></p>\n\n<p>If a data structure is foldable, is it a monoid?</p>\n"}, {"tags": ["haskell", "types", "applicative"], "answers": [{"comments": [{"owner": {"reputation": 183, "user_id": 9528586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qdnxs.jpg?s=128&g=1", "display_name": "Namudon&#39;tdie", "link": "https://stackoverflow.com/users/9528586/namudontdie"}, "edited": false, "score": 0, "creation_date": 1534133753, "post_id": 51815069, "comment_id": 90584592, "body": "Thank you for your answer. Small follow-up question here: should I read x ~ (a -&gt; b) as &quot;the variable x is associated with type (a -&gt; b)&quot;?"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 183, "user_id": 9528586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qdnxs.jpg?s=128&g=1", "display_name": "Namudon&#39;tdie", "link": "https://stackoverflow.com/users/9528586/namudontdie"}, "edited": false, "score": 0, "creation_date": 1534140279, "post_id": 51815069, "comment_id": 90586218, "body": "@Namudon&#39;tdie: <code>x ~ y</code> is a <a href=\"https://blog.infinitenegativeutility.com/2017/1/haskell-type-equality-constraints\" rel=\"nofollow noreferrer\">type equality constraint</a>. Informally, people use it to mean \u201cthe type <code>x</code> is equal to the type <code>y</code>\u201d; in Haskell, you can use this syntax as a typeclass constraint when certain extensions are enabled (e.g. <code>GADTs</code> or <code>TypeFamilies</code>). It\u2019s mainly useful for controlling typeclass instance resolution and aiding type-level programming."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 4, "last_activity_date": 1534133243, "creation_date": 1534133243, "answer_id": 51815069, "question_id": 51815025, "link": "https://stackoverflow.com/questions/51815025/i-think-there-is-a-type-mismatch-in-default-definition-in-instance-applicative-m/51815069#51815069", "title": "I think there is a type mismatch in default definition in instance Applicative Maybe in Haskell", "body": "<p>Let's make things clearer by relabeling a type variable:</p>\n\n<pre><code>Nothing :: Maybe x\n</code></pre>\n\n<p>The type <code>Maybe x</code> unifies with <code>Maybe (a -&gt; b)</code>, with <code>x ~ (a -&gt; b)</code>. That is, <code>Nothing</code> is a value that can used as <code>Maybe a</code> for <em>any</em> <code>a</code>, including a function type. Thus it is a legal left-hand argument for <code>&lt;*&gt;</code> here.</p>\n"}, {"comments": [{"owner": {"reputation": 183, "user_id": 9528586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qdnxs.jpg?s=128&g=1", "display_name": "Namudon&#39;tdie", "link": "https://stackoverflow.com/users/9528586/namudontdie"}, "edited": false, "score": 0, "creation_date": 1534133608, "post_id": 51815071, "comment_id": 90584552, "body": "Oh, I get it! So, &#39;a&#39; in &quot;Maybe a&quot; is a very broad generalization of any type that can be given to the constructor function &quot;Maybe&quot;. Thanks a lot!"}], "tags": [], "owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "is_accepted": true, "score": 11, "last_activity_date": 1534133246, "creation_date": 1534133246, "answer_id": 51815071, "question_id": 51815025, "link": "https://stackoverflow.com/questions/51815025/i-think-there-is-a-type-mismatch-in-default-definition-in-instance-applicative-m/51815071#51815071", "title": "I think there is a type mismatch in default definition in instance Applicative Maybe in Haskell", "body": "<p>The <code>a</code> in <code>Maybe a</code> is a type variable, and can be any type at all!  So <code>Nothing</code> can have the type <code>Maybe Int</code>, or <code>Maybe [x]</code>, or <code>Maybe (p -&gt; q)</code>, for example. \n Don't get confused by the fact that the variable name <code>a</code> is used in two places.  The <code>a</code> in the type of <code>Nothing</code> is a completely different variable from the <code>a</code> in the type of <code>&lt;*&gt;</code>, and just happens to have the same name!</p>\n\n<p>(That's exactly the same as if you wrote <code>f x = x + 5</code> and then elsewhere, <code>g x = \"Hello, \" ++ x</code>.  The use of <code>x</code> in both places doesn't matter, because they are in different scopes.  Same with the <code>a</code> in this types.  Different scopes, so they are different variables.)</p>\n"}], "owner": {"reputation": 183, "user_id": 9528586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qdnxs.jpg?s=128&g=1", "display_name": "Namudon&#39;tdie", "link": "https://stackoverflow.com/users/9528586/namudontdie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 0, "accepted_answer_id": 51815071, "answer_count": 2, "score": 6, "last_activity_date": 1534184893, "creation_date": 1534132799, "last_edit_date": 1534184893, "question_id": 51815025, "link": "https://stackoverflow.com/questions/51815025/i-think-there-is-a-type-mismatch-in-default-definition-in-instance-applicative-m", "title": "I think there is a type mismatch in default definition in instance Applicative Maybe in Haskell", "body": "<p>I am currently studying Haskell with Prof. Hutton's \"Programming in Haskell\", and I found something strange regarding the definition of Maybe as an instance of the class Applicative. </p>\n\n<p>In <code>GHC.Base</code>, the instance <code>Applicative Maybe</code> is defined as follows:</p>\n\n<pre><code>instance Applicative Maybe where\n  pure = Just\n\n  Just f  &lt;*&gt; m       = fmap f m\n  Nothing &lt;*&gt; _m      = Nothing\n</code></pre>\n\n<p>It is the line which defines the value of <code>Nothing &lt;\\*&gt; _</code> as <code>Nothing</code> that bothers me. <code>Nothing</code> is of type <code>Maybe a</code>, where the operator <code>&lt;*&gt;</code> actually requires <code>f (a -&gt; b)</code> (in this case, <code>Maybe (a -&gt; b)</code>) as its first argument's type. Therefore, this is a type mismatch, which Haskell should complain about. However, this is accepted as a default definition, and therefore Haskell does not complain about it where I think it should.</p>\n\n<p>What am I missing?</p>\n"}, {"tags": ["haskell", "networking", "websocket", "algorithmic-trading", "low-latency"], "comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 1, "creation_date": 1534189424, "post_id": 51813696, "comment_id": 90613367, "body": "Could the delay be caused by garbage collection?"}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1534243131, "post_id": 51813696, "comment_id": 90631800, "body": "Thanks for the response @danidiaz. Unfortunately, I doubt that this is caused by GC (this was my initial guess as well). If I run the program without threading, I get: <code>%GC     time       6.4%  (0.1% elapsed)</code>. With threading enabled, GC is still less than 15% and less than 1% of elapsed time. Also, I observe the same behaviour in the Chrome browser when examining the WS traffic at websocket.org, or at bitmex.com. I get latency spikes when the server is under heavy load (presumably) and hence my question whether I can do anything about this when the server is not under my control. Thanks!"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1534273177, "post_id": 51813696, "comment_id": 90649576, "body": "@KylorRAM Have you tried to test the servers with another websocket library, or perhaps a command-line tool? Just to discard non-Haskell causes."}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1534278366, "post_id": 51813696, "comment_id": 90651755, "body": "@danidiaz, that&#39;s what I did, see the reproduction step in my question. I used the WS client provided by the <a href=\"https://websocket.org/echo.html\" rel=\"nofollow noreferrer\">websocket.org/echo.html</a> site to check the connectivity from there. My reasoning was the same as yours: get rid of the Haskell specific things to see if it&#39;s a Haskell problem or something else. Sorry if that was not clear from my post."}, {"owner": {"reputation": 242, "user_id": 5053102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cFAxZ.jpg?s=128&g=1", "display_name": "Marcel Boldt", "link": "https://stackoverflow.com/users/5053102/marcel-boldt"}, "edited": false, "score": 1, "creation_date": 1534280393, "post_id": 51813696, "comment_id": 90652620, "body": "Perhaps tcpdumping / profiling on the server side could narrow down the problem space - e.g. is it the arriving or outgoing message that is delayed. However it seems that c5 / ENA have|had some driver issues, there might be optimisations in Amazon Linux (see <a href=\"https://www.reddit.com/r/aws/comments/7whfhn/new_nitro_based_m5c5_instances_seem_unstable/\" rel=\"nofollow noreferrer\">reddit.com/r/aws/comments/7whfhn/&hellip;</a>)."}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 242, "user_id": 5053102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cFAxZ.jpg?s=128&g=1", "display_name": "Marcel Boldt", "link": "https://stackoverflow.com/users/5053102/marcel-boldt"}, "edited": false, "score": 0, "creation_date": 1534339028, "post_id": 51813696, "comment_id": 90671055, "body": "Great, thank you @MarcelBoldt! I&#39;ll look into these and post the results here."}, {"owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "reply_to_user": {"reputation": 242, "user_id": 5053102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cFAxZ.jpg?s=128&g=1", "display_name": "Marcel Boldt", "link": "https://stackoverflow.com/users/5053102/marcel-boldt"}, "edited": false, "score": 0, "creation_date": 1534689602, "post_id": 51813696, "comment_id": 90787296, "body": "@MarcelBoldt although the server is not under my control (it&#39;s under the exchange&#39;s control), I measured the RTT, avg throughput and segment length from both my local machine and my c5d.xlarge instance. Results: <a href=\"https://ibb.co/ifeTYK\" rel=\"nofollow noreferrer\">ibb.co/ifeTYK</a> <a href=\"https://ibb.co/ghNRLz\" rel=\"nofollow noreferrer\">ibb.co/ghNRLz</a> <a href=\"https://ibb.co/gf8Bne\" rel=\"nofollow noreferrer\">ibb.co/gf8Bne</a> <a href=\"https://ibb.co/g9X47e\" rel=\"nofollow noreferrer\">ibb.co/g9X47e</a>  Sorry for the different X-axis in one of the graphs! Let me know if you want to have a look at the .pcap file (I only have it for the c5d instance though)."}], "owner": {"reputation": 81, "user_id": 4678973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pQZUt.png?s=128&g=1", "display_name": "Lucsanszky", "link": "https://stackoverflow.com/users/4678973/lucsanszky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 991, "favorite_count": 3, "answer_count": 0, "score": 6, "last_activity_date": 1534165367, "creation_date": 1534117028, "last_edit_date": 1534165367, "question_id": 51813696, "link": "https://stackoverflow.com/questions/51813696/what-are-some-rules-of-thumb-for-minimising-websocket-client-latency", "title": "What are some rules of thumb for minimising WebSocket client latency?", "body": "<p>I'm currently working on a latency critical application. After profiling my code, I concluded that the bottleneck might be related to my WebSocket client. I don't control the server, only the client. </p>\n\n<h3>Context</h3>\n\n<p>I'm running a c5d.xlarge Ubuntu instance with ENA (Elastic Network Adapter) in the same availability zone as the server. If I ping the server from my instance, the latency is below 1 ms (usually between 0.2 and 0.5 ms). My code is written in Haskell and this is the WebSocket library I use: <a href=\"http://hackage.haskell.org/package/websockets\" rel=\"noreferrer\">http://hackage.haskell.org/package/websockets</a>\nThe difference between the message timestamp sent by the server and the timestamp I create upon receiving the message is usually below 10 ms which is good enough for me. However, sometimes this time difference increases to 4-500 ms or even worse (above 1-1.5s). I suspect this happens when the server has to deal with increased activity, thus when the server is under heavy load. Despite the fact that I didn't find any indication that it might be my code, my instance setup or the combination of both that causes this latency spike, I was still skeptical and so I headed to <a href=\"https://websocket.org/echo.html\" rel=\"noreferrer\">https://websocket.org/echo.html</a> from my local machine (a Mac) in order to check the latencies from there (using Chrome as my browser). Since this is farther from the server than my instance, I get slightly higher latencies but usually below 50 ms. The 4-500 ms latency spikes are happening here as well. </p>\n\n<h3>Reproduction</h3>\n\n<p>In Chrome, head over to <a href=\"https://websocket.org/echo.html\" rel=\"noreferrer\">https://websocket.org/echo.html</a> and connect to: <code>wss://www.bitmex.com/realtime</code>\nFinally, send the following message to the server and inspect the WebSocket frames under the Network tab in Chrome Developer Tools: </p>\n\n<p><code>{\"op\": \"subscribe\", \"args\": [\"orderBook10:XBTUSD\"]}</code></p>\n\n<h3>Question</h3>\n\n<p>Is there any way to further minimise latency in such situation? Are there any rules of thumb when configuring my WebSocket client connection that I might be missing? I tried using the WebSocket compression extensions but that didn't seem to help. I feel like that there isn't much I can do about this, since the server is not under my control. Thanks!</p>\n"}, {"tags": ["haskell", "monads", "text-parsing", "lexer", "megaparsec"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user246672"}, "edited": false, "score": 0, "creation_date": 1534114417, "post_id": 51813490, "comment_id": 90581745, "body": "<code>charToStr = fmap (: [])</code> seems like a nasty hack to upgrade a <code>Parser Char</code> to <code>Parser String</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1534115333, "post_id": 51813490, "comment_id": 90581858, "body": "What is a &quot;nonterminal expectation&quot;?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user246672"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1534117765, "post_id": 51813490, "comment_id": 90582241, "body": "Nonterminal is a rule which is contains possibly nonterminals or terminals (tokens). <code>parserTest foo &quot;some interesting input&quot;</code> then <code>foo</code> is both a nonterminal (parser) and expectation placed on the input. Expectation maybe used as a synonym for parse rule in this Q."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user246672"}, "edited": false, "score": 0, "creation_date": 1534117245, "post_id": 51813680, "comment_id": 90582159, "body": "Primary objective: Haskell semantically-readable/clean EDSL-style without clunky hacks all over. <code>sequence</code> LGTM. Been using combinator ops <code>&lt;&gt;</code>, <code>&lt;*</code>, <code>*&gt;</code>, <code>&lt;|&gt;</code> I&#39;m sure some of these type impedance mismatches will go away with parse tree or AST parser return types. Been doing <code>(:) something &lt;$&gt; whatever</code> here and there, but it seems to make the intention less clear."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 2, "last_activity_date": 1534116715, "creation_date": 1534116715, "answer_id": 51813680, "question_id": 51813490, "link": "https://stackoverflow.com/questions/51813490/mixing-parser-char-lexer-vs-parser-string/51813680#51813680", "title": "Mixing Parser Char (lexer?) vs. Parser String", "body": "<p>There's nothing nasty or hackish about <code>fmap (: [])</code> (or <code>fmap pure</code> or <code>pure &lt;$&gt;</code>) \u2013 it's the natural thing to do, performing a conversion that's concise, safe, expressive and transparent all at the same time.</p>\n\n<p>An alternative that I wouldn't really recommend, but for some situations it might express the intent best: <code>sequence [<em>charParser</em>]</code>. This makes it clear that you're executing \u201call\u201d of the parsers in a list of character-parsers, and gathering the result\u201cs\u201d as a list of character\u201cs\u201d.</p>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user246672"}, "edited": false, "score": 0, "creation_date": 1534117910, "post_id": 51813720, "comment_id": 90582266, "body": "Thanks for answering. Custom operators seem the best way to get a cleaner EDSL."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 3, "last_activity_date": 1534117348, "creation_date": 1534117348, "answer_id": 51813720, "question_id": 51813490, "link": "https://stackoverflow.com/questions/51813490/mixing-parser-char-lexer-vs-parser-string/51813720#51813720", "title": "Mixing Parser Char (lexer?) vs. Parser String", "body": "<p>Typically, one uses applicative operations to directly combine <code>Parser Char</code> and <code>Parser String</code>s, rather than \"upgrading\" the former.  For example, a parser for alphanumeric identifiers that must start with a letter would probably look like:</p>\n\n<pre><code>ident :: Parser String\nident = (:) &lt;$&gt; letterChar &lt;*&gt; alphaNumChar\n</code></pre>\n\n<p>If you were doing something more complicated, like parsing dollar amounts with optional cents, for example, you might write:</p>\n\n<pre><code>dollars :: Parser String\ndollars = (:) &lt;$&gt; char '$' &lt;*&gt; some digitChar\n          &lt;**&gt; pure (++)\n          &lt;*&gt; option \"\" ((:) &lt;$&gt; char '.' &lt;*&gt; replicateM 2 digitChar)\n</code></pre>\n\n<p>If you find yourself trying to build a <code>Parser String</code> out of a complicated sequence of <code>Parser Char</code> and <code>Parser String</code> parsers in a lot of situations, then you could define a few helper operators.  If you find the variety of operators annoying, you could just define <code>(&lt;++&gt;)</code> and a short-form for <code>charToStr</code> like <code>c :: Parser Char -&gt; Parser String</code>.</p>\n\n<pre><code>(&lt;.+&gt;) :: Parser Char -&gt; Parser String -&gt; Parser String\np &lt;.+&gt; q = (:) &lt;$&gt; p &lt;*&gt; q\ninfixr 5 &lt;.+&gt;\n\n(&lt;++&gt;) :: Parser String -&gt; Parser String -&gt; Parser String\np &lt;++&gt; q = (++) &lt;$&gt; p &lt;*&gt; q\ninfixr 5 &lt;++&gt;\n\n(&lt;..&gt;) :: Parser Char -&gt; Parser Char -&gt; Parser String\np &lt;..&gt; q = p &lt;.+&gt; fmap (:[]) q\ninfixr 5 &lt;..&gt;\n</code></pre>\n\n<p>so you can write something like:</p>\n\n<pre><code>dollars' :: Parser String\ndollars' = char '$' &lt;.+&gt; some digitChar \n           &lt;++&gt; option \"\" (char '.' &lt;.+&gt; digitChar &lt;..&gt; digitChar)\n</code></pre>\n\n<p>As @leftroundabout says, there's nothing hackish about <code>fmap (:[])</code>.  If you prefer, write <code>fmap (\\c -&gt; [c])</code> if you think it looks clearer.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user246672"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 229, "favorite_count": 1, "accepted_answer_id": 51813720, "answer_count": 2, "score": 2, "last_activity_date": 1536771419, "creation_date": 1534114299, "last_edit_date": 1536771419, "question_id": 51813490, "link": "https://stackoverflow.com/questions/51813490/mixing-parser-char-lexer-vs-parser-string", "title": "Mixing Parser Char (lexer?) vs. Parser String", "body": "<p>I've written several compilers and am familiar with lexers, regexs/NFAs/DFAs, parsers and semantic rules in flex/bison, JavaCC, JavaCup, antlr4 and so on.</p>\n\n<p>Is there some sort of magical monadic operator that seamlessly grows/combines a token with a mix of <code>Parser Char</code> (ie <code>Text.Megaparsec.Char</code>) vs. <code>Parser String</code>?</p>\n\n<p>Is there a way / best practices to represent a clean separation of lexing tokens and nonterminal expectations?</p>\n"}, {"tags": ["haskell", "reverse", "foldable", "representable"], "comments": [{"owner": {"reputation": 3603, "user_id": 165806, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/c889e0a95a3bb07f90ab28ad442f1127?s=128&d=identicon&r=PG", "display_name": "Iceland_jack", "link": "https://stackoverflow.com/users/165806/iceland-jack"}, "edited": false, "score": 0, "creation_date": 1534109936, "post_id": 51812947, "comment_id": 90580961, "body": "With <a href=\"https://hackage.haskell.org/package/lens-4.17/docs/Control-Lens-Traversal.html#v:partsOf\" rel=\"nofollow noreferrer\"><code>partsOf</code></a> you can get <code>over (partsOf traverse) reverse :: Traversable t =&gt; t ~&gt; t</code> for any <code>Traversable t</code>. The <code>Traversable</code> constraint also ensures that we preserve the shape of <code>t</code>."}], "answers": [{"tags": [], "owner": {"reputation": 18156, "user_id": 127335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/765a0d6880973a0e95e2700e11786c3a?s=128&d=identicon&r=PG", "display_name": "Conal", "link": "https://stackoverflow.com/users/127335/conal"}, "is_accepted": true, "score": 1, "last_activity_date": 1534109527, "creation_date": 1534109527, "answer_id": 51813039, "question_id": 51812947, "link": "https://stackoverflow.com/questions/51812947/how-to-write-reverset-without-using-list/51813039#51813039", "title": "How to write reverseT without using List?", "body": "<p>You could assume and use <code>Bounded (Rep f)</code> and <code>Enum (Rep f)</code>, i.e., convert <code>Rep f</code> to <code>Int</code> with <code>toEnum</code>, change indices by some <code>Int</code> arithmetic that uses <code>Int</code> counterparts of <code>minBound</code> and <code>maxBound</code> on <code>Rep f</code> (or assume <code>fromEnum minBound == 0</code>), and finally from <code>Int</code> back to <code>Rep f</code> with <code>fromEnum</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1534116456, "post_id": 51813403, "comment_id": 90582031, "body": "Extra challenge: do without partial functions by using a different functor."}, {"owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "edited": false, "score": 0, "creation_date": 1534170451, "post_id": 51813403, "comment_id": 90603404, "body": "Thanks! Your solution looks like it goes through List as an intermediate state. Is that not the case?"}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "edited": false, "score": 0, "creation_date": 1534172397, "post_id": 51813403, "comment_id": 90604692, "body": "@dbanas yes. With the <code>Traversable</code> solution, you can&#39;t do significantly better."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1534173293, "post_id": 51813403, "comment_id": 90605257, "body": "@dfeuer Solution to extra challenge <a href=\"https://gist.github.com/AndrasKovacs/cfc22a19c91100f4c7c350833dd86434\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534184030, "post_id": 51813403, "comment_id": 90610874, "body": "Nice! I suspect you really do need such mild shenanigans (plugins or <code>unsafeCoerce</code>) for efficiency, but it would be double-extra cool to avoid them somehow."}, {"owner": {"reputation": 18156, "user_id": 127335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/765a0d6880973a0e95e2700e11786c3a?s=128&d=identicon&r=PG", "display_name": "Conal", "link": "https://stackoverflow.com/users/127335/conal"}, "edited": false, "score": 0, "creation_date": 1536167474, "post_id": 51813403, "comment_id": 91330404, "body": "One advantage of using <code>Representable</code> over <code>State</code> is amenability to massively parallel evaluation."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": false, "score": 3, "last_activity_date": 1534113268, "creation_date": 1534113268, "answer_id": 51813403, "question_id": 51812947, "link": "https://stackoverflow.com/questions/51812947/how-to-write-reverset-without-using-list/51813403#51813403", "title": "How to write reverseT without using List?", "body": "<p><code>Representable</code> does not support <code>reverse</code> in general, because infinite fixed-shape structures are representable but not reversible, e. g. streams:</p>\n\n<pre><code>{-# language DeriveFunctor, TypeFamilies #-}\n\nimport Data.Distributive\nimport Data.Functor.Rep\n\ndata Stream a = Cons {hd :: a, tl :: Stream a} deriving Functor\n\ninstance Distributive Stream where\n  distribute fa = Cons (hd &lt;$&gt; fa) (distribute (tl &lt;$&gt; fa))\n\ndata Nat = Z | S Nat\n\ninstance Representable Stream where\n  type Rep Stream = Nat\n  tabulate f      = Cons (f Z) (tabulate (f . S))\n  index as Z      = hd as\n  index as (S n)  = index (tl as) n\n</code></pre>\n\n<p>For generic reversal you need finite <code>Rep</code> as in Conal's answer, but I think requiring <code>Traversable</code> by itself would be acceptable and probably more efficient than <code>index</code> and <code>tabulate</code> in most cases. You can reverse using the <code>State</code> applicative:</p>\n\n<pre><code>import Control.Monad.State.Strict\n\nreverseT :: Traversable t =&gt; t a -&gt; t a\nreverseT ta =\n  evalState (traverse (\\_ -&gt; gets head &lt;* modify tail) ta)\n            (foldl (flip (:)) [] ta)\n</code></pre>\n"}], "owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 51813039, "answer_count": 2, "score": 3, "last_activity_date": 1534113268, "creation_date": 1534108775, "question_id": 51812947, "link": "https://stackoverflow.com/questions/51812947/how-to-write-reverset-without-using-list", "title": "How to write reverseT without using List?", "body": "<p>I need an alternative to <code>reverseT</code> that doesn't use <code>toList</code>.\nObviously, this code is incorrect, but demonstrates the idea I was pursuing:</p>\n\n<pre><code>reverseF\n  :: (Foldable f, Representable f, Num (Rep f))\n  =&gt; f a -&gt; f a\nreverseF f = tabulate $ \\ix -&gt; index f $ last - ix\n  where last = length f - 1  -- Incorrect; length -&gt; ?\n</code></pre>\n\n<p>Does anyone know what I can replace <code>length</code> with, so as to get the last index element offered by <code>tabulate</code> when building an <code>f</code>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1534103061, "post_id": 51812255, "comment_id": 90579428, "body": "Well you specify that the output list is a <code>NilS</code>, but <code>NilS</code> is <i>not</i> an <code>a, but a </code>ListS b` (with <code>a</code> possibly different than <code>b</code>) type."}, {"owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1534103764, "post_id": 51812255, "comment_id": 90579596, "body": "Much appreciated. It makes sense now. :)"}], "answers": [{"comments": [{"owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "edited": false, "score": 1, "creation_date": 1534103708, "post_id": 51812300, "comment_id": 90579582, "body": "Thank you so much for your detailed answer Willem! I totally missed that last part of the constructor. Truly appreciate your help and the insights offered. I just realized it is possible to expand the warnings we get while trying to compile the code by using additional commands.   Again, thank you and hope you have a great weekend."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1534103393, "creation_date": 1534103393, "answer_id": 51812300, "question_id": 51812255, "link": "https://stackoverflow.com/questions/51812255/haskell-newbie-return-type-mismatch/51812300#51812300", "title": "Haskell newbie: Return type mismatch", "body": "<p>Well the compiler is correct. The type signature of your function is:</p>\n\n<pre><code>tailS :: ListS a -&gt; <b>a</b></code></pre>\n\n<p>So the output type should be an <code>a</code>. But here you write as return value <code>NilS</code>. Now <code>NilS</code> is a data constructor of the <code>ListS a</code> type. So the two do not match: your signature says that you will return an <em>element</em> of your \"list\" type, but in the function definition, you return a list (that might actually wrap elements of another type).</p>\n\n<p>What you probably want is to return the <code>a</code> element, and not an <code>NilS</code>, so:</p>\n\n<pre><code>tailS :: ListS a -&gt; a\ntailS NilS = error \"Empty List\"\ntailS (Snoc NilS a) = <b>a</b></code></pre>\n\n<p>But there is still another problem. If we compile it with <code>-Wincomplete-patterns</code>, then the compiler will tell that there is a pattern that is <em>not</em> covered: the <code>Snoc (Snoc _ _) _</code> pattern. In your last line you write <code>tailS (Snoc NilS a)</code>, so you restrict it to the first item of the <code>Snoc</code> being a <code>NilS</code>. This is not necessary, regardless of what the \"prefix list\" is, the tail is always the second parameter, so we can fix this with:</p>\n\n<pre><code>tailS :: ListS a -&gt; a\ntailS NilS = error \"Empty List\"\ntailS (Snoc <b>_</b> a) = a</code></pre>\n"}], "owner": {"reputation": 77, "user_id": 7342409, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1e8a6e80f994773663f4efba4c2b9?s=128&d=identicon&r=PG&f=1", "display_name": "Arthur Champs", "link": "https://stackoverflow.com/users/7342409/arthur-champs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 51812300, "answer_count": 1, "score": 0, "last_activity_date": 1534103393, "creation_date": 1534102953, "question_id": 51812255, "link": "https://stackoverflow.com/questions/51812255/haskell-newbie-return-type-mismatch", "title": "Haskell newbie: Return type mismatch", "body": "<p>I ran into a roadblock trying to figure out why I can't compile the following code. I'm defining several functions to work with a \"snoc\" list. the headS works properly but in the tailS function, I cannot return a NilS and I was wondering why. I know this might be a very basic issue but I have already tried googling yet I got more confused. Hope you can help me understand what am I missing. Here's my code:</p>\n\n<pre><code>data ListS a = NilS\n          |Snoc (ListS a) a deriving Show\n\nheadS :: ListS a -&gt; a\nheadS NilS          = error \"Empty List\"\nheadS (Snoc NilS a) = a\nheadS (Snoc a b)    = headS a\n\ntailS :: ListS a -&gt; a\ntailS NilS          = error \"Empty List\"\ntailS (Snoc NilS a) = NilS\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>* Couldn't match expected type `a' with actual type `ListS a0'\n  `a' is a rigid type variable bound by\n    the type signature for:\n      tailS :: forall a. ListS a -&gt; a\n    at Ejercicio01.hs:9:1-21\n* In the expression: NilS\n  In an equation for `tailS': tailS (Snoc NilS a) = NilS\n* Relevant bindings include\n    a :: a (bound at Ejercicio01.hs:11:18)\n    tailS :: ListS a -&gt; a (bound at Ejercicio01.hs:10:1)\n   |\n11 | tailS (Snoc NilS a) = NilS\n   |                       ^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>Thanks in advance for your time, </p>\n"}, {"tags": ["haskell", "enums", "typeclass", "deriving"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1534103038, "post_id": 51811805, "comment_id": 90579424, "body": "Please note <code>instance (Bounded a, Enum a) =&gt; Random a</code> is not a valid instance declaration. See: <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-630004.1\" rel=\"nofollow noreferrer\">the specification</a>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534110763, "post_id": 51811805, "comment_id": 90581107, "body": "That would overlap with any other instance, since Haskell does not check the context when considering overlaps (IIRC that would require an exptime blowup). Further, what if I wanted to use a different distribution for my custom enumerated type? One would need a sort-of priority between multiple overlapping instances. GHC has some of that, but it can be quite fragile. Overlapping (and incoherent) instances can be too unpredictable -- I&#39;d avoid them as much as possible."}, {"owner": {"reputation": 51, "user_id": 10216117, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b929dfa0418341fcfd0b5f13a6d6986f?s=128&d=identicon&r=PG&f=1", "display_name": "hipogumafe", "link": "https://stackoverflow.com/users/10216117/hipogumafe"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534142960, "post_id": 51811805, "comment_id": 90587349, "body": "@chi &quot;Haskell does not check the context when considering overlaps&quot; Isn&#39;t that check done for normal functions? Doesn&#39;t the algorithm &quot;sort by increasing generality and choose the 1st that matches&quot; work? That seems: nlogn sort + n checks."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534148394, "post_id": 51811805, "comment_id": 90589901, "body": "If, on a context failure, you need to check the next one in the list, you need backtracking, roughly as you would when running a Prolog program. Each of your &quot;n checks&quot; can trigger other &quot;m checks&quot;, which can trigger ... etc. Haskell checks the instance head of all instances, but the instance context of only one, so that recursively we get n+m+... instead of n<i>m</i>.... The actual algorithm is complex, I think you can find it in the GHC manual looking for overlapping instances."}], "answers": [{"comments": [{"owner": {"reputation": 51, "user_id": 10216117, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b929dfa0418341fcfd0b5f13a6d6986f?s=128&d=identicon&r=PG&f=1", "display_name": "hipogumafe", "link": "https://stackoverflow.com/users/10216117/hipogumafe"}, "edited": false, "score": 0, "creation_date": 1534142227, "post_id": 51812559, "comment_id": 90587014, "body": "Isn&#39;t it obvious that it should only match an instance decl if constraints match? In case of overlap the more spacialized (concrete type, instead of type-variable) wins. Isn&#39;t that obvious?"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 51, "user_id": 10216117, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b929dfa0418341fcfd0b5f13a6d6986f?s=128&d=identicon&r=PG&f=1", "display_name": "hipogumafe", "link": "https://stackoverflow.com/users/10216117/hipogumafe"}, "edited": false, "score": 0, "creation_date": 1534168728, "post_id": 51812559, "comment_id": 90602279, "body": "With respect to point #1, obvious to you, maybe, but not to GHC&#39;s type checker.  The issue has to do with the fact that, internally, the type checker can&#39;t represent &quot;a type that isn&#39;t fully specified yet satisfies the following constraints&quot;.   With respect to point #2, yes, with overlapping/overlappable instance enabled, though the overlap rules are somewhat complicated."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 6, "last_activity_date": 1534105555, "creation_date": 1534105555, "answer_id": 51812559, "question_id": 51811805, "link": "https://stackoverflow.com/questions/51811805/why-cant-we-have-random-class-instances-derived-for-enumerations-in-haskell/51812559#51812559", "title": "Why can&#39;t we have Random class instances derived for enumerations in Haskell?", "body": "<p>The comments are referring to the fact that in Haskell (actually in Haskell with the <code>FlexibleInstances</code> extension), instance matching is done by matching the type without considering the constraints.  <strong>After</strong> the type match succeeds, the constraints are then checked and will generate errors if they aren't satisfied.  So, if you define:</p>\n\n<pre><code>instance (Bounded a, Enum a) =&gt; Random a where ...\n</code></pre>\n\n<p>you are actually defining an instance for every type <code>a</code>, not just types <code>a</code> that have <code>Bounded</code> and <code>Enum</code> instances.  It's as if you had written:</p>\n\n<pre><code>instance Random a where ...\n</code></pre>\n\n<p>This will then potentially conflict with any other library-defined or user-defined instances, such as:</p>\n\n<pre><code>newtype Gaussian = Gaussian Double\ninstance Random Gaussian where ...\n</code></pre>\n\n<p>There are ways to get around this, but the whole thing ends up getting pretty messy.  Also, it can lead to some mysterious compile-type error messages, as noted below.</p>\n\n<p>Specifically, if you put the following in a module:</p>\n\n<pre><code>module RandomEnum where\n\nimport System.Random\n\ninstance (Bounded a, Enum a) =&gt; Random a where\n   randomR (lo,hi) g = (toEnum i, g')\n       where (i,g') = randomR (fromEnum lo, fromEnum hi) g\n   random = randomR (minBound,maxBound)\n</code></pre>\n\n<p>you'll find that you need the <code>FlexibleInstances</code> extension to allow constraints on instances.  That's fine, but if you add that, you'll then see that you need the <code>UndecidableInstances</code> extension.  That's maybe less fine, but if you add that, you'll find that you then get an error on the <code>randomR</code> call on the RHS of your <code>randomR</code> definition.  GHC has determined that the instance you have defined now overlaps with the built-in instance for <code>Int</code>.  (It's actually a coincidence that <code>Int</code> is both <code>Bounded</code> and <code>Enum</code> -- it would have also overlapped with the built-in instance for <code>Double</code>, which is neither.)</p>\n\n<p>Anyway, you can get around this by making your instance overlappable, so that the following:</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances, UndecidableInstances #-}\n\nmodule RandomEnum where\n\nimport System.Random\n\ninstance {-# OVERLAPPABLE #-} (Bounded a, Enum a) =&gt; Random a where\n   randomR (lo,hi) g = (toEnum i, g')\n       where (i,g') = randomR (fromEnum lo, fromEnum hi) g\n   random = randomR (minBound,maxBound)\n</code></pre>\n\n<p>will actually compile.</p>\n\n<p>This is mostly fine, but you may end up with some bizarre error messages.  Normally, the following program:</p>\n\n<pre><code>main = putStrLn =&lt;&lt; randomIO\n</code></pre>\n\n<p>would generate the sensible error message:</p>\n\n<pre><code>No instance for (Random String) arising from a use of `randomIO'\n</code></pre>\n\n<p>But with the above instance in place, it becomes:</p>\n\n<pre><code>No instance for (Bounded [Char]) arising from a use of \u2018randomIO\u2019\n</code></pre>\n\n<p>because your instance matches <code>String</code> but GHC fails to find a <code>Bounded String</code> constraint.</p>\n\n<p>Anyway, in general, the Haskell community has avoided putting these sorts of catch-all instances into the standard library.  The fact that they need the <code>UndeciableInstances</code> extension and <code>OVERLAPPABLE</code> pragmas and potentially introduce a bunch of undesirable instances into a program all leave a bad taste in people's mouths.</p>\n\n<p>So, while it might be technically possible to add such an instance to <code>System.Random</code>, it will never happen.</p>\n\n<p>Likewise, it would be <em>possible</em> to allow <code>Random</code> to be automatically derived for any types that are <code>Enum</code> and <code>Bounded</code>, but the community is reluctant to add additional automatic deriving mechanisms, particularly for type classes like <code>Random</code> that just aren't that often used (compared to say <code>Show</code> or <code>Eq</code>).  So, again, it will never happen.</p>\n\n<p>Instead, the standard way of allowing convenient default instances is to define some helper functions that can be used in an explicit instance definition, and that's what's being suggested in the bottom of the proposal you linked.  For example, the following functions could be defined in <code>System.Random</code>:</p>\n\n<pre><code>defaultEnumRandomR :: (Enum a, RandomGen g) =&gt; (a, a) -&gt; g -&gt; (a, g)\ndefaultEnumRandomR (lo,hi) g = (toEnum i, g')\n       where (i,g') = randomR (fromEnum lo, fromEnum hi) g\n\ndefaultBoundedRandom :: (Random a, Bounded a, RandomGen g) =&gt; g -&gt; (a, g)\ndefaultBoundedRandom = randomR (minBound, maxBound)\n</code></pre>\n\n<p>and people would write:</p>\n\n<pre><code>instance Random Door where\n    randomR = defaultEnumRandomR\n    random = defaultBoundedRandom\n</code></pre>\n\n<p>This is the only solution that has a chance of making it into <code>System.Random</code>.</p>\n\n<p>If it does and you dislike having to define explicit instances, you'll be free to stick:</p>\n\n<pre><code>instance {-# OVERLAPPABLE #-} (Bounded a, Enum a) =&gt; Random a where\n    randomR = defaultEnumRandomR\n    random = defaultBoundedRandom\n</code></pre>\n\n<p>in your own code.</p>\n"}], "owner": {"reputation": 51, "user_id": 10216117, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b929dfa0418341fcfd0b5f13a6d6986f?s=128&d=identicon&r=PG&f=1", "display_name": "hipogumafe", "link": "https://stackoverflow.com/users/10216117/hipogumafe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 51812559, "answer_count": 1, "score": 4, "last_activity_date": 1534105555, "creation_date": 1534099348, "last_edit_date": 1534100830, "question_id": 51811805, "link": "https://stackoverflow.com/questions/51811805/why-cant-we-have-random-class-instances-derived-for-enumerations-in-haskell", "title": "Why can&#39;t we have Random class instances derived for enumerations in Haskell?", "body": "<p>I wrote this today:</p>\n\n<pre><code>data Door = A | B | C\n deriving (Eq,Bounded,Enum)\n\ninstance Random Door where\n randomR (lo,hi) g = (toEnum i, g')\n  where (i,g') = randomR (fromEnum lo, fromEnum hi) g\n random = randomR (minBound,maxBound)\n</code></pre>\n\n<p>And I figured this is roughly copy-pastable for any enumeration.\nI tried putting Random into the deriving clause, but that failed.</p>\n\n<p>Then I searched the web and found this:</p>\n\n<p><a href=\"https://github.com/haskell/random/issues/21\" rel=\"nofollow noreferrer\">Please provide instance for (Enum a, Bounded a) for Random #21</a></p>\n\n<p>A few quotes that seem to answer my question, except I don't quite understand them:</p>\n\n<blockquote>\n  <p>What instance do you have in mind, instance (Bounded a, Enum a) =>\n  Random a where ...? There can't be such an instance, since it would\n  overlap with every other instance.</p>\n  \n  <p>This would prevent any user derived instances. ...</p>\n</blockquote>\n\n<p>Why can't this be automated, by either the deriving clause or with a default implementation at least.</p>\n\n<p>Why wouldn't this work?</p>\n\n<pre><code>instance (Bounded a, Enum a) =&gt; Random a where\n   randomR (lo,hi) g = (toEnum i, g')\n       where (i,g') = randomR (fromEnum lo, fromEnum hi) g\n   random = randomR (minBound,maxBound)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 1, "creation_date": 1534098135, "post_id": 51811617, "comment_id": 90578254, "body": "Do you want to automatically generate something like <code>getIndex (Foo _) = 0; getIndex Bar = 1</code>?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1534099995, "post_id": 51811617, "comment_id": 90578720, "body": "So you&#39;re saying when you <code>derive Binary</code> it works, but you want to understand how?"}, {"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 0, "creation_date": 1534100282, "post_id": 51811617, "comment_id": 90578787, "body": "Not quite. I want to send arbitrary data from the browser encoded in binary format and deserialize it to the user defined data structure. In other words, I need to construct binary stream on the client side."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1534101556, "post_id": 51811617, "comment_id": 90579087, "body": "<code>ghc-prim</code> <i>does</i> have a <code>dataToTag# :: a -&gt; Int#</code>... 3:)"}, {"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 0, "creation_date": 1534102525, "post_id": 51811617, "comment_id": 90579311, "body": "<code>ghc-prim</code> is too &quot;low level&quot;. It is possible to achieve what I want with <code>Data.Data</code> module, but generics seem more &quot;elegant&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "edited": false, "score": 0, "creation_date": 1534115789, "post_id": 51813396, "comment_id": 90581920, "body": "Thank you. Especially for <code>Data.Proxy</code> :)"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 3, "last_activity_date": 1564976034, "last_edit_date": 1564976034, "creation_date": 1534113175, "answer_id": 51813396, "question_id": 51811617, "link": "https://stackoverflow.com/questions/51811617/get-constructor-index-using-generics-in-haskell/51813396#51813396", "title": "Get constructor index using generics in Haskell", "body": "<p>Note that there's no real problem with using both <code>Data</code> and <code>Generic</code> generics in the same program, and sometimes -- as here -- <code>Data</code> is more convenient.</p>\n\n<p>Anyway, here's the idea for a pure <code>Generic</code> solution.  The general approach, as described in GHC.Generics, is to define a generic function:</p>\n\n<pre><code>getIndex :: (Generic a, GetIndex' (Rep a)) =&gt; a -&gt; Int\ngetIndex = getIndex' . from\n</code></pre>\n\n<p>that dispatches to the appropriate <code>GetIndex'</code> instance on the representation and then define <code>GetIndex'</code> instances for all of the generics constructors.</p>\n\n<p>Suppose we start with a class like:</p>\n\n<pre><code>class GetIndex' f where\n  getIndex' :: f p -&gt; Int\n</code></pre>\n\n<p>and try to define the <code>(:+:)</code> instance.  This is easy if the provided value is on the left-hand side because the index within <code>f :+: g</code> will just be the index within <code>f</code>, so we have:</p>\n\n<pre><code>instance (GetIndex' f, GetIndex' g) =&gt; GetIndex' (f :+: g) where\n  getIndex' (L1 x) = getIndex' x\n</code></pre>\n\n<p>When we try to define it for the right-hand side, though, we run into a problem:</p>\n\n<pre><code>  getIndex' (R1 x) = &lt;&lt;size f&gt;&gt; + getIndex' x\n</code></pre>\n\n<p>We need to calculate the size of the left-hand side from its representation <code>f</code>.  The standard way of doing this is to define a <code>size</code> method that takes a proxy argument, so we'll modify our class to look like:</p>\n\n<pre><code>class GetIndex' f where\n  getIndex' :: f p -&gt; Int\n  size :: Proxy f -&gt; Int\n</code></pre>\n\n<p>Now, we can write:</p>\n\n<pre><code>instance (GetIndex' f, GetIndex' g) =&gt; GetIndex' (f :+: g) where\n  getIndex' (L1 x) = getIndex' x\n  getIndex' (R1 x) = size (Proxy @f) + getIndex' x\n  size _ = size (Proxy @f) + size (Proxy @g)\n</code></pre>\n\n<p>Product terms <code>(:*:)</code> and the unit terms <code>U1</code> and <code>K1</code> will all represent the single-constructor case, so they will all have similar instances:</p>\n\n<pre><code>instance GetIndex' U1 where\n  getIndex' _ = 0\n  size _ = 1\n</code></pre>\n\n<p>The complete program will look something like:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE EmptyCase #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE TypeOperators #-}\n\nimport GHC.Generics\nimport Data.Proxy\n\nclass GetIndex' f where\n  getIndex' :: f p -&gt; Int\n  size :: Proxy f -&gt; Int\ninstance (GetIndex' f) =&gt; GetIndex' (M1 i t f) where\n  getIndex' (M1 x) = getIndex' x\n  size _ = size (Proxy @f)\ninstance GetIndex' V1 where\n  getIndex' v = case v of\n  -- Unused, but consistent\n  size _ = 0\ninstance (GetIndex' f, GetIndex' g) =&gt; GetIndex' (f :+: g) where\n  getIndex' (L1 x) = getIndex' x\n  getIndex' (R1 x) = size (Proxy @f) + getIndex' x\n  size _ = size (Proxy @f) + size (Proxy @g)\ninstance GetIndex' (f :*: g) where\n  getIndex' _ = 0\n  size _ = 1\ninstance GetIndex' (K1 i c) where\n  getIndex' _ = 0\n  size _ = 1\ninstance GetIndex' U1 where\n  getIndex' _ = 0\n  size _ = 1\n\ngetIndex :: (Generic a, GetIndex' (Rep a)) =&gt; a -&gt; Int\ngetIndex = getIndex' . from\n\ndata Test = Foo Int | Bar deriving (Generic)\n\nmain = do\n  print $ getIndex (Foo 999)\n  print $ getIndex Bar\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "is_accepted": false, "score": 0, "last_activity_date": 1534115824, "last_edit_date": 1534115824, "creation_date": 1534115231, "answer_id": 51813574, "question_id": 51811617, "link": "https://stackoverflow.com/questions/51811617/get-constructor-index-using-generics-in-haskell/51813574#51813574", "title": "Get constructor index using generics in Haskell", "body": "<p>Ended up with this:</p>\n\n<pre><code>instance ConsIndex Int where\n  getIndex _ = undefined\n\nclass ConsIndex c where\n  getIndex :: c -&gt; Int\n  default getIndex :: (Generic c, GConsIndex (Rep c)) =&gt; c -&gt; Int\n  getIndex = ggetIndex . from\n\nclass GConsIndex f where\n  ggetIndex :: f t -&gt; Int\n\ninstance GConsIndex U1 where\n  ggetIndex _ = undefined\n\ninstance GConsIndex a =&gt; GConsIndex (M1 D c a) where\n  ggetIndex = ggetIndex . unM1\n\ninstance GConsIndex a =&gt; GConsIndex (M1 C c a) where\n  ggetIndex = ggetIndex . unM1\n\ninstance (GConsIndex a, GSum a) =&gt; GConsIndex (M1 S c a) where\n  ggetIndex = ggetIndex . unM1\n\ninstance ConsIndex a =&gt; GConsIndex (K1 c a) where\n  ggetIndex = getIndex . unK1\n\ninstance (GConsIndex a, GConsIndex b,\n         GSum a, GSum b) =&gt; GConsIndex (a :+: b) where\n  ggetIndex = gsum 0\n\ninstance (GConsIndex a, GConsIndex b, GSum a) =&gt; GConsIndex (a :*: b) where\n  ggetIndex (a :*: _) = ggetIndex a\n\nclass GSum f where\n  gsum :: Int -&gt; f t -&gt; Int\n\ninstance (GSum a, GSum b) =&gt; GSum (a :+: b) where\n  gsum acc (L1 l) = acc\n  gsum acc (R1 r) = gsum (acc + 1) r\n\ninstance (GSum a) =&gt; GSum (M1 C c a) where\n  gsum x = (gsum x) . unM1\n\ninstance (GSum a) =&gt; GSum (M1 S c a) where\n  gsum x = (gsum x) . unM1\n\ninstance GSum (K1 c a) where\n  gsum x _ = x\n\ninstance GSum U1 where\n  gsum acc _ = acc\n\ninstance (GSum a, GSum b) =&gt; GSum (a :*: b) where\n  gsum x _ = x\n\ndata Test = Foo | Bar Int | Baz Int Int deriving (Show, Generic)\ninstance ConsIndex Test\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 381, "user_id": 4779636, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-XfZbZzafRNw/AAAAAAAAAAI/AAAAAAAADqc/jZKyixgEiK4/photo.jpg?sz=128", "display_name": "David Fox", "link": "https://stackoverflow.com/users/4779636/david-fox"}, "is_accepted": false, "score": 1, "last_activity_date": 1559491551, "last_edit_date": 1559491551, "creation_date": 1559490333, "answer_id": 56416558, "question_id": 51811617, "link": "https://stackoverflow.com/questions/51811617/get-constructor-index-using-generics-in-haskell/56416558#56416558", "title": "Get constructor index using generics in Haskell", "body": "<p>The package generic-data has this function:</p>\n\n<pre><code>&gt; gconIndex Nothing\n0\n&gt; gconIndex (Just 'x')\n1\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1564974097, "post_id": 57351193, "comment_id": 101191283, "body": "You can use <code>:kind!</code> (note the bang) instead of using <code>:type</code> with a proxy."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1564974398, "post_id": 57351193, "comment_id": 101191327, "body": "With <code>AllowAmbiguousTypes</code>, you don&#39;t need <code>CHop</code>. But if you prefer that style, it&#39;s probably more idiomatic to use <code>Data.Tagged</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1564985441, "post_id": 57351193, "comment_id": 101193494, "body": "Very clever idea of distinguishing <code>D1</code> from <code>C1</code>. I&#39;ve adapted that to K. A. Buhr&#39;s approach in my own answer."}, {"owner": {"reputation": 381, "user_id": 4779636, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-XfZbZzafRNw/AAAAAAAAAAI/AAAAAAAADqc/jZKyixgEiK4/photo.jpg?sz=128", "display_name": "David Fox", "link": "https://stackoverflow.com/users/4779636/david-fox"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565044955, "post_id": 57351193, "comment_id": 101219825, "body": "It doesn&#39;t exactly answer the original question, but in a project I&#39;m doing I started out needing the answer to the original question and this ended up being a better answer to a better question."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565049502, "post_id": 57351193, "comment_id": 101220588, "body": "It&#39;s always nice when more experience leads you to better questions."}], "tags": [], "owner": {"reputation": 381, "user_id": 4779636, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-XfZbZzafRNw/AAAAAAAAAAI/AAAAAAAADqc/jZKyixgEiK4/photo.jpg?sz=128", "display_name": "David Fox", "link": "https://stackoverflow.com/users/4779636/david-fox"}, "is_accepted": false, "score": 2, "last_activity_date": 1564985913, "last_edit_date": 1564985913, "creation_date": 1564966786, "answer_id": 57351193, "question_id": 51811617, "link": "https://stackoverflow.com/questions/51811617/get-constructor-index-using-generics-in-haskell/57351193#57351193", "title": "Get constructor index using generics in Haskell", "body": "<p>I've gotten a lot better at this in five years:</p>\n\n<pre><code>{-# LANGUAGE PolyKinds #-}\n{-# LANGUAGE TypeApplications #-}\n\nimport Data.Proxy\nimport GHC.Generics\nimport GHC.Types\nimport GHC.TypeLits\n\ntype family CPos (cname :: Symbol) f :: Maybe Nat where\n  CPos cname (D1 m f) = CPos cname f\n  CPos cname (f :+: g) = Alt (CPos cname f) (FSum (CtorCount f) (CPos cname g))\n  CPos cname (C1 ('MetaCons cname _ _) _) = 'Just 1\n  CPos cname _ = 'Nothing\n\ntype family CtorCount f :: Nat where\n  CtorCount (D1 m f) = CtorCount f\n  CtorCount (f :+: g) = CtorCount f + CtorCount g\n  CtorCount (C1 _ _) = 1\n\ntype family FSum (lhs :: Nat) (rhs :: Maybe Nat) :: Maybe Nat where\n  FSum m ('Just n) = 'Just (m + n)\n  FSum m 'Nothing = 'Nothing\n\ntype family Alt (m1 :: Maybe a) (m2 :: Maybe a) :: Maybe a where\n  Alt ('Just a) _ = 'Just a \n  Alt _ b = b\n</code></pre>\n\n<p>Now we can obtain the constructor index as a type:</p>\n\n<pre><code>&gt; :type Proxy :: Proxy (CPos \"Foo\" (Rep Test))\nProxy :: Proxy (CPos \"Foo\" (Rep Test)) :: Proxy ('Just 1)\n&gt; :type Proxy :: Proxy (CPos \"Bar\" (Rep Test))\nProxy :: Proxy (CPos \"Bar\" (Rep Test)) :: Proxy ('Just 2)\n</code></pre>\n\n<p>If we create a type to hold an index, we can write a getIndex function that takes no arguments, only type applications.  Thus, its value is computed at compile time rather than run time:</p>\n\n<pre><code>data CHop a = CHop {constrPos :: Int} deriving (Generic, Show)\n\ngetIndex ::\n  forall (cname :: Symbol) (a :: *) (cpos :: Nat). (KnownNat cpos, CPos cname (Rep a) ~ 'Just cpos)\n  =&gt; CHop a\ngetIndex = CHop (fromIntegral (natVal (Proxy :: Proxy cpos)))\n\n&gt; getIndex @\"Just\" @(Maybe Int)\nCHop {constrPos = 2}\n&gt; getIndex @\"Nothing\" @(Maybe Int)\nCHop {constrPos = 1}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1565022676, "last_edit_date": 1565022676, "creation_date": 1564985365, "answer_id": 57352994, "question_id": 51811617, "link": "https://stackoverflow.com/questions/51811617/get-constructor-index-using-generics-in-haskell/57352994#57352994", "title": "Get constructor index using generics in Haskell", "body": "<p>Here's a somewhat abbreviated version of the implementation by K. A. Buhr, taking advantage of the idea in David Fox's latest answer of distinguishing <code>D1</code> (that is, <code>M1 D</code>) from <code>C1</code> (that is, <code>M1 C</code>). This obviates the need to worry about <code>(:*:)</code>, <code>U1</code>, or <code>K1</code>. I also drop the proxies in favor of <code>AllowAmbiguousTypes</code>.</p>\n\n<pre><code>{-# LANGUAGE EmptyCase #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE AllowAmbiguousTypes #-}\n\nimport GHC.Generics\n\nclass GetIndex' f where\n  getIndex' :: f p -&gt; Int\n  size :: Int\n\ninstance GetIndex' f =&gt; GetIndex' (D1 t f) where\n  getIndex' (M1 x) = getIndex' x\n  size = size @f\n\n-- We've reached a constructor. It doesn't matter what it\n-- looks like; the results will be the same regardless.\ninstance GetIndex' (C1 t f) where\n  getIndex' _ = 0\n  size = 1\n\ninstance GetIndex' V1 where\n  getIndex' v = case v of\n  size = 0\n\ninstance (GetIndex' f, GetIndex' g) =&gt; GetIndex' (f :+: g) where\n  getIndex' (L1 x) = getIndex' x\n  getIndex' (R1 x) = size @f + getIndex' x\n  size = size @f + size @g\n\ngetIndex :: (Generic a, GetIndex' (Rep a)) =&gt; a -&gt; Int\ngetIndex = getIndex' . from\n</code></pre>\n"}], "owner": {"reputation": 249, "user_id": 1722399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1e98942645afd09fdd8e00853bff4f2?s=128&d=identicon&r=PG", "display_name": "xafizoff", "link": "https://stackoverflow.com/users/1722399/xafizoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 51813396, "answer_count": 5, "score": 2, "last_activity_date": 1565022676, "creation_date": 1534097990, "last_edit_date": 1534175836, "question_id": 51811617, "link": "https://stackoverflow.com/questions/51811617/get-constructor-index-using-generics-in-haskell", "title": "Get constructor index using generics in Haskell", "body": "<p>I want to implement the following typeclass with the generics:</p>\n\n<pre><code>class HasIndex a where\n   getIndex :: a -&gt; Int\n</code></pre>\n\n<p>So, for the given data type</p>\n\n<pre><code>{-# LANGUAGE DeriveGenerics #-}\n\nimport GHC.Generics\nimport Data.Binary    \n\ndata Test = Foo Int | Bar deriving (Generic)\ninstance Binary Test\ninstance HasIndex Test\n</code></pre>\n\n<p>the call</p>\n\n<pre><code>getIndex $ Foo 1\n</code></pre>\n\n<p>should return 0. And</p>\n\n<pre><code>getIndex Bar\n</code></pre>\n\n<p>should return 1. Is it possible?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "edited": false, "score": 1, "creation_date": 1534086913, "post_id": 51810107, "comment_id": 90575128, "body": "What is supposed to happen if you get <code>Nothing</code>?"}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "reply_to_user": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "edited": false, "score": 0, "creation_date": 1534087119, "post_id": 51810107, "comment_id": 90575186, "body": "I did a piece of code about that"}], "answers": [{"comments": [{"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1534089034, "post_id": 51810289, "comment_id": 90575690, "body": "I will check later, but I tried your solution before but without the parentheses, which in Haskell as usual always makes the difference \ud83e\udd23"}, {"owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "reply_to_user": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 1, "creation_date": 1534089273, "post_id": 51810289, "comment_id": 90575753, "body": "@paul yea, without parentheses it behaves differently. If you have the expression <code>f g 2</code> and want to apply the result of <code>g 2</code> to <code>f</code>, then you need to write it as <code>f (g 2)</code> or <code>f $ g 2</code>"}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1534089375, "post_id": 51810289, "comment_id": 90575779, "body": "I learn the $ recently and is quite handy. Thanks for your help!"}, {"owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "edited": false, "score": 1, "creation_date": 1534094009, "post_id": 51810289, "comment_id": 90577128, "body": "Another way to put this same answer is this: Writing <code>user &lt;- extractMaybeUser ...</code> implies that <code>extractMaybeUser ...</code> is an <code>IO</code> action that produces a user.  Instead, <code>extractMaybeUser</code> is just a function, so the right statement to bind its result in a <code>do</code> block is <code>let user = extractMaybeUser ...</code>"}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 2, "last_activity_date": 1534088049, "creation_date": 1534088049, "answer_id": 51810289, "question_id": 51810107, "link": "https://stackoverflow.com/questions/51810107/extract-value-from-maybe-in-do-block/51810289#51810289", "title": "Extract value from Maybe in do block", "body": "<pre><code>user &lt;- extractMaybeUser (transformToUser &lt;$&gt; maybeMySQLValue)\n</code></pre>\n\n<p>The reason why this code might not work is that <code>extractMaybeUser</code> has return type of <code>User</code>:</p>\n\n<pre><code>extractMaybeUser :: Maybe User -&gt; User\n</code></pre>\n\n<p>There is no monadic value to extract from using <code>&lt;-</code>, so what about just wrapping in <code>IO</code> the user we get from <code>extractMaybeUser</code>?</p>\n\n<pre><code>return (extractMaybeUser (transformToUser &lt;$&gt; maybeMySQLValue))\n</code></pre>\n\n<p>It will at least have <code>IO User</code> type</p>\n"}], "owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 0, "accepted_answer_id": 51810289, "answer_count": 1, "score": 0, "last_activity_date": 1534088049, "creation_date": 1534086727, "last_edit_date": 1534087007, "question_id": 51810107, "link": "https://stackoverflow.com/questions/51810107/extract-value-from-maybe-in-do-block", "title": "Extract value from Maybe in do block", "body": "<p>Hi I have a piece of code where I retrieving a <code>Maybe User</code> where <code>User</code> is my own type.</p>\n\n<pre><code>getUserById :: Int -&gt; IO (Maybe User)\ngetUserById id = let userId = id in do\n            conn &lt;- createConnection\n            (columnDef, inputStream) &lt;- query conn selectByIdQuery [One $ MySQLInt32 (intToInt32 userId)]\n            maybeMySQLValue &lt;- Streams.read inputStream\n            return (transformToUser &lt;$&gt; maybeMySQLValue)\n</code></pre>\n\n<p>But the key is that the function that call this functions expect a <code>IO User</code> and not a <code>IO Maybe User</code></p>\n\n<blockquote>\n  <p>getUserById :: Int -> IO  User</p>\n</blockquote>\n\n<p>Any advice about how to extract in the do block the value from the Maybe?\nI\u00b4m trying this but still does not work</p>\n\n<pre><code> user &lt;- extractMaybeUser (transformToUser &lt;$&gt; maybeMySQLValue)\n            return user\n\nextractMaybeUser :: Maybe User -&gt; User\nextractMaybeUser maybeUser = case maybeUser of\n     Just value -&gt; value\n     Nothing -&gt; User 1 \"default User\"\n</code></pre>\n\n<p>Regards</p>\n"}, {"tags": ["haskell", "binary-tree"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1534090373, "post_id": 51809962, "comment_id": 90576094, "body": "The <code>isPerfect</code> does not check if all leaves ar at the same level."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534092476, "post_id": 51809962, "comment_id": 90576706, "body": "Duplicate of a <a href=\"https://stackoverflow.com/questions/51800519/how-to-check-if-my-binary-search-tree-is-complete-haskell\">question</a> which at the moment has no correct answer."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534100659, "post_id": 51809962, "comment_id": 90578878, "body": "@chi, not a full duplicate, I don&#39;t think."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534110168, "post_id": 51809962, "comment_id": 90581005, "body": "The only difference I see is that here we use general trees -- perhaps that&#39;s enough to make it different. (This question also starts from a wrong implementation of <code>isPerfect</code> and <code>isComplete</code>.)"}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 1, "last_activity_date": 1534096560, "creation_date": 1534096560, "answer_id": 51811441, "question_id": 51809962, "link": "https://stackoverflow.com/questions/51809962/perfect-and-complete-trees-for-a-general-tree-haskell/51811441#51811441", "title": "Perfect and Complete trees for a general tree. (Haskell)", "body": "<p>First, let's stick with binary trees.  Consider the following binary tree:</p>\n\n<pre><code>  1\n / \\\n2   3\n   / \\\n  4   5\n</code></pre>\n\n<p>It can be represented as:</p>\n\n<pre><code>badTree = Node 1 (Node 2 Nil Nil) (Node 3 (Node 4 Nil Nil) (Node 5 Nil Nil))\n</code></pre>\n\n<p>This tree is neither perfect nor complete, but your functions say that it is:</p>\n\n<pre><code>&gt; isPerfect badTree\nTrue\n&gt; isComplete badTree\nTrue\n&gt; \n</code></pre>\n\n<p>So, it looks like you still have some work to do.</p>\n\n<p>Second, to generalize this to \"general trees\", yes, you will need to modify the definitions.  It would be reasonable to consider the subset of general trees where all leaves are at the same level (with no requirement on the number of children per node) or where all leaves are at the same level <em>and</em> each interior node has the same number of children (e.g., 2, or 3, or 4) or has at <em>least</em> two children or something else.  However, I'm not aware of a generally accepted definition for \"perfect\" or \"complete\" general trees, so you'd be making it up as you go along.</p>\n\n<p>Third, it's maybe worth pointing out that your <code>GTree</code> implementation might not be ideal.  Usually a \"leaf\" is a node without children, but you have two ways of representing a node without children:</p>\n\n<pre><code>Leaf 10\nBranch 10 []\n</code></pre>\n\n<p>Should these be the same tree?  If so, there ideally shouldn't be two different representations.</p>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 389, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1534096560, "creation_date": 1534085672, "question_id": 51809962, "link": "https://stackoverflow.com/questions/51809962/perfect-and-complete-trees-for-a-general-tree-haskell", "title": "Perfect and Complete trees for a general tree. (Haskell)", "body": "<pre><code>data BTree a = Nil | Node a (BTree a) (BTree a) deriving Show\n</code></pre>\n\n<p>I learned about two binary search trees. One is perfect the other one is complete.</p>\n\n<p>A Binary tree is Perfect Binary Tree in which all internal nodes have two children and all leaves are at same level.</p>\n\n<p>A Binary Tree is complete Binary Tree if all levels are completely filled except possibly the last level and the last level has all keys as left as possible</p>\n\n<pre><code>isPerfect :: BTree a -&gt; Bool\nisPerfect Nil = True\nisPerfect (Node x Nil Nil) = True\nisPerfect (Node x lt Nil ) = False\nisPerfect (Node x Nil rt ) = False\nisPerfect (Node x lt  rt ) = (&amp;&amp;) (isPerfect lt) (isPerfect rt)\n\n\nisComplete :: BTree a -&gt; Bool\nisComplete Nil = True\nisComplete (Node x Nil Nil) = True\nisComplete (Node _ lt Nil ) = False\nisComplete (Node x Nil rt ) = False\nisComplete (Node _ (Node _ Nil Nil) Nil) = True\nisComplete (Node x lt  rt ) = (&amp;&amp;) (isComplete lt) (isComplete rt)\n</code></pre>\n\n<p>Now I had to implement a data type for a general tree</p>\n\n<pre><code>data GTree a = Leaf a | Branch a [GTree a] deriving (Show)\n</code></pre>\n\n<p>How would I check if this tree is complete or perfect and would I have to change the definition?</p>\n\n<p>Thanks in advance</p>\n"}, {"tags": ["haskell", "f#", "bind", "monads", "pipeline"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1534082414, "post_id": 51809502, "comment_id": 90574106, "body": "No. <code>|&gt;</code> is like <code>$</code>. <code>&gt;&gt;=</code> is like <code>*.collect</code>, but generalised."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 5, "creation_date": 1534094835, "post_id": 51809502, "comment_id": 90577385, "body": "Potential close voters: this is definitely not opinion-based. It is possible to answer it objectively by considering the involved types and the differences between the languages (cf. the existing answers)."}], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1534096437, "post_id": 51809861, "comment_id": 90577836, "body": "1) The <code>Key</code> thing doesn\u2019t work out: a) We need <code>f :: Key -&gt; String</code> and b) <code>Key</code> should be the second argument to the other two (or <code>(&lt;*&gt;)</code> should be used). 2) <code>(&gt;&gt;=)</code> (really <code>(=&lt;&lt;)</code>) is a form of application. There\u2019s a tower of power: <code>($)</code>/<code>(&amp;)</code> for pure functions; <code>(&lt;$&gt;)</code> for <code>Functor</code>; <code>(&lt;*&gt;)</code>/<code>(&lt;**&gt;)</code> for <code>Applicative</code>; <code>(=&lt;&lt;)</code>/<code>(&gt;&gt;=)</code> for <code>Monad</code>."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1534096801, "post_id": 51809861, "comment_id": 90577923, "body": "@HTNW For your first point: yes, you\u2019re right, I have no idea what I was thinking. I\u2019ve updated the example to be what I imagine I originally had in mind. As for your second point, I agree, but I think it\u2019s outside the scope of this answer."}], "tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": true, "score": 9, "last_activity_date": 1534096710, "last_edit_date": 1534096710, "creation_date": 1534084975, "answer_id": 51809861, "question_id": 51809502, "link": "https://stackoverflow.com/questions/51809502/is-haskells-bind-operator-equivalent-to-fs-forward-pipe-operator/51809861#51809861", "title": "Is Haskell&#39;s bind operator (&gt;&gt;=) equivalent to F#&#39;s forward pipe operator (|&gt;)?", "body": "<p>Not really. If you specialize <code>m</code> to <code>IO</code>, then there are some superficial similarities, so maybe it\u2019s true that <code>(&gt;&gt;=) @IO</code> <em>is</em> sort of like F#\u2019s <code>|&gt;</code>, but in general, the similarity does not hold.</p>\n\n<p>If we specialize <code>m</code> to <code>Maybe</code>, then <code>&gt;&gt;=</code> is like <code>Option.bind</code>, just with the arguments flipped (which makes sense, since <code>&gt;&gt;=</code> is pronounced \u201cbind\u201d).</p>\n\n<pre><code>ghci&gt; Just [1, 2, 3] &gt;&gt;= headMay\nJust 1\nghci&gt; Just [] &gt;&gt;= headMay\nNothing\nghci&gt; Nothing &gt;&gt;= headMay\nNothing\n</code></pre>\n\n<p>If we specialize <code>m</code> to <code>Either e</code>, then <code>&gt;&gt;=</code> does something similar to what it does for <code>Maybe</code>, short-circuiting on <code>Left</code> values instead of <code>Nothing</code>. These examples are sort of similar to using <code>|&gt;</code> with functions that raise exceptions, but they aren\u2019t quite the same.</p>\n\n<p>If we specialize <code>m</code> to <code>Parser</code> (from, say, the <code>megaparsec</code> package), then <code>&gt;&gt;=</code> produces a new parser that runs a first parser, then uses its result to determine which parser to run next. For example, this defines a parser that produces a parser that parses two digits or a non-digit followed by an arbitrary character:</p>\n\n<pre><code>p :: Parser Char\np = anyChar &gt;&gt;= \\c -&gt; if isDigit c then digit else anyChar\n</code></pre>\n\n<p>This is rather different from <code>|&gt;</code>, since we\u2019re not running anything, merely building up a structure (a parser) that will be applied to a value later, yet the code still talks about the value that will eventually be provided (in the <code>c</code> binding).</p>\n\n<p>If we specialize <code>m</code> to <code>(-&gt;) r</code>, then <code>&gt;&gt;=</code> implements a kind of implicit argument passing. For example, if we have a set of functions that all accept a common argument:</p>\n\n<pre><code>f :: Key -&gt; String\ng :: String -&gt; Key -&gt; Char\nh :: Char -&gt; Key -&gt; Bool\n</code></pre>\n\n<p>\u2026then we can use <code>&gt;&gt;=</code> to compose them together, passing the same first argument to all of them:</p>\n\n<pre><code>ghci&gt; :t f &gt;&gt;= g &gt;&gt;= h\nf &gt;&gt;= g &gt;&gt;= h :: Key -&gt; Bool\n</code></pre>\n\n<p>This is <em>clearly</em> different from <code>|&gt;</code>, since we\u2019re performing a sort of function composition, not function application.</p>\n\n<p>I could go on, but listing dozens of examples probably isn\u2019t any more helpful than just listing a few. The takeaway is that <code>&gt;&gt;=</code> is not just for sequencing effectful things, it is a much more general abstraction of which sequencing <code>IO</code> actions is a special case. The <code>IO</code> case is pragmatically useful, of course, but it\u2019s also probably the least theoretically interesting, since it\u2019s a little bit magical (<code>IO</code> is baked into the runtime). These other uses of <code>&gt;&gt;=</code> are not magical in the slightest; they are defined entirely using ordinary, pure Haskell code, but they\u2019re still very useful, so they\u2019re much more relevant to understanding the essence of <code>&gt;&gt;=</code> and <code>Monad</code> than <code>IO</code> is.</p>\n\n<hr>\n\n<p>As a final aside, Haskell <em>does</em> have a function just like F#\u2019s <code>|&gt;</code>. It is called <code>&amp;</code>, and it comes from the <code>Data.Function</code> module. It has the same type that it does in F#:</p>\n\n<pre><code>(&amp;) :: a -&gt; (a -&gt; b) -&gt; b\n</code></pre>\n\n<p>This function is quite useful in its own right, but it has nothing to do with monads.</p>\n"}, {"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 8, "last_activity_date": 1534086166, "last_edit_date": 1534086166, "creation_date": 1534085424, "answer_id": 51809933, "question_id": 51809502, "link": "https://stackoverflow.com/questions/51809502/is-haskells-bind-operator-equivalent-to-fs-forward-pipe-operator/51809933#51809933", "title": "Is Haskell&#39;s bind operator (&gt;&gt;=) equivalent to F#&#39;s forward pipe operator (|&gt;)?", "body": "<p>While F# doesn't distinguish between pure and impure operations, it does have the notion of monads. This is most observable when you work with <a href=\"https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/computation-expressions\" rel=\"noreferrer\">computation expressions</a>. In order to implement a computation expression, you must implement <em>monadic bind</em>. In the F# documentation, this must have the type <code>M&lt;'T&gt; * ('T -&gt; M&lt;'U&gt;) -&gt; M&lt;'U&gt;</code>, although this is pseudo-code, since a type like <code>M&lt;'T&gt;</code> isn't proper F# syntax.</p>\n\n<p>F# comes with some built-in monads, such as <code>Async&lt;'a&gt;</code>, <code>'a list</code>, <code>'a seq</code>. You can also trivially create computation expression for <code>'a option</code> and <code>Result</code>, although I don't think any of those are built in.</p>\n\n<p>You can peruse the source code for the various computation expression builders to identify how monadic bind is implemented for each, but <code>AJFarmar</code> is right that they're often called <code>collect</code>:</p>\n\n<pre><code>&gt; List.collect;;\nval it : (('a -&gt; 'b list) -&gt; 'a list -&gt; 'b list)\n\n&gt; Array.collect;;\nval it : (('a -&gt; 'b []) -&gt; 'a [] -&gt; 'b [])\n\n&gt; Seq.collect;;\nval it : (('a -&gt; #seq&lt;'c&gt;) -&gt; seq&lt;'a&gt; -&gt; seq&lt;'c&gt;)\n</code></pre>\n\n<p>Not always, though. Sometimes the operation is called <code>bind</code>:</p>\n\n<pre><code>&gt; Option.bind;;\nval it : (('a -&gt; 'b option) -&gt; 'a option -&gt; 'b option)\n</code></pre>\n\n<p>To illustrate, consider this little F# helper function to parse a string into an integer:</p>\n\n<pre><code>open System\n\nlet tryParse s =\n    match Int32.TryParse s with\n    | true, i -&gt; Some i\n    | _ -&gt; None\n</code></pre>\n\n<p>You can use the forward pipe if you have a string:</p>\n\n<pre><code>&gt; \"42\" |&gt; tryParse;;\nval it : int option = Some 42\n</code></pre>\n\n<p>On the other hand, if your string is already is in an <code>option</code> value, you'd have to use monadic bind:</p>\n\n<pre><code>&gt; Some \"42\" |&gt; Option.bind tryParse;;\nval it : int option = Some 42\n</code></pre>\n\n<p>The <code>|&gt;</code> operator also exists in Haskell, but you have to import <code>Data.Function</code>:</p>\n\n<pre><code>Prelude Data.Function&gt; :t (&amp;)\n(&amp;) :: a -&gt; (a -&gt; b) -&gt; b\n</code></pre>\n"}], "owner": {"reputation": 23476, "user_id": 222893, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/255b0472c4482c3ea433ab84b4e742e8?s=128&d=identicon&r=PG", "display_name": "weakish", "link": "https://stackoverflow.com/users/222893/weakish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1050, "favorite_count": 0, "accepted_answer_id": 51809861, "answer_count": 2, "score": 5, "last_activity_date": 1534096710, "creation_date": 1534082293, "last_edit_date": 1534086311, "question_id": 51809502, "link": "https://stackoverflow.com/questions/51809502/is-haskells-bind-operator-equivalent-to-fs-forward-pipe-operator", "title": "Is Haskell&#39;s bind operator (&gt;&gt;=) equivalent to F#&#39;s forward pipe operator (|&gt;)?", "body": "<p>Type signature of Haskell's bind operator (>>=):</p>\n\n<pre><code>m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>Type signature of F#'s forward pipe operator (|>):</p>\n\n<pre><code>'a -&gt; ('a -&gt; 'b) -&gt; 'b\n</code></pre>\n\n<p>They look similar.\nAnd considering the impure nature of F#,\nthe equivalent operator of <code>|&gt;</code> in Haskell is <code>&gt;&gt;=</code>?</p>\n\n<p>For example:</p>\n\n<p>Haskell:</p>\n\n<pre><code>getLine &gt;&gt;= putStrLn\n</code></pre>\n\n<p>F#:</p>\n\n<pre><code>stdin.ReadLine() |&gt; stdout.Write\n</code></pre>\n"}, {"tags": ["haskell", "gadt"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1534078773, "creation_date": 1534078773, "answer_id": 51809070, "question_id": 51808983, "link": "https://stackoverflow.com/questions/51808983/rewriting-gadt-code-in-terms-of-standard-haskell/51809070#51809070", "title": "Rewriting GADT code in terms of standard Haskell?", "body": "<p>Without GADTs we need a <code>Value</code> sum type, encompassing all possible results. We also need to make our evaluation function partial or return something like a <code>Maybe Value</code>.</p>\n\n<pre><code>data Value = VI Int | VB Bool\n\neval :: Expr -&gt; Value\neval (I i) = VI i\neval (B b) = VB b\neval (Add e1 e2) = case (eval e1, eval e2) of\n   (VI i1, VI i2) -&gt; VI (i1+i2)\n   _              -&gt; error \"runtime type error\"\n...\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 7, "last_activity_date": 1534078790, "creation_date": 1534078790, "answer_id": 51809072, "question_id": 51808983, "link": "https://stackoverflow.com/questions/51808983/rewriting-gadt-code-in-terms-of-standard-haskell/51809072#51809072", "title": "Rewriting GADT code in terms of standard Haskell?", "body": "<p>Without GADTs, you don't know whether <code>Expr</code> is well-typed, so you can only implement an <code>eval</code> which possibly throws errors. </p>\n\n<pre><code>eval :: Expr -&gt; Maybe (Either Int Bool)\neval (I n) = pure (Left n)\neval (B b) = pure (Right b)\neval (Add e1 e2) = do\n  x1 &lt;- eval e1\n  x2 &lt;- eval e2\n  case (x1, x2) of\n    (Left n1, Left n2) -&gt; pure (Left (n1 + n2))\n    _                  -&gt; Nothing\neval (Eq e1 e2) = do\n  x1 &lt;- eval e1\n  x2 &lt;- eval e2\n  case (x1, x2) of\n    (Left  n1, Left n2)  -&gt; pure (Right (n1 == n2))\n    (Right b1, Right b2) -&gt; pure (Right (b1 == b2))\n    _                    -&gt; Nothing\n</code></pre>\n"}], "owner": {"reputation": 4761, "user_id": 2277395, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/09841ca82e49f998ea0b8f159dea87c1?s=128&d=identicon&r=PG", "display_name": "Martin Drautzburg", "link": "https://stackoverflow.com/users/2277395/martin-drautzburg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 51809072, "answer_count": 2, "score": 2, "last_activity_date": 1534078790, "creation_date": 1534078078, "last_edit_date": 1534078442, "question_id": 51808983, "link": "https://stackoverflow.com/questions/51808983/rewriting-gadt-code-in-terms-of-standard-haskell", "title": "Rewriting GADT code in terms of standard Haskell?", "body": "<p>I was trying to understand the Article <em><a href=\"https://apfelmus.nfshost.com/articles/operational-monad.html\" rel=\"nofollow noreferrer\">The Operational Monad Tutorial</a></em> by Heinrich Apfelmus, where he uses <a href=\"https://en.wikibooks.org/wiki/Haskell/GADT\" rel=\"nofollow noreferrer\">GADTs</a> a lot. As a mental exercise, I tried to rewrite his code-examples so they no longer use GADTs. I couldn't do it, and now I am usure whether this is because of my limited skills, or if there is a fundamental issue.</p>\n\n<p>On <a href=\"https://www.reddit.com/r/haskell/comments/md7e8/gadts_question/\" rel=\"nofollow noreferrer\">r/haskell</a> Edward Kmett states that \"<em>You can always transform a GADT into a finally [sic] tagless representation through a class if you have Rank N types.</em>\"</p>\n\n<p>But what if I don't want to use Rank N types either? I suppose, I'd have to sacrifice <em>something</em>, but I should still be able to do it. </p>\n\n<p>So, if I'm willing to sacrifice some type safety, use phantom types, typeclasses and whatnot, can I then write an <em>eval</em> function for expressions (somewhat) like the ones below, without using <code>LANGUAGE</code> extensions?</p>\n\n<pre><code>                           -- using GADTs :\ndata Expr = I Int  |       -- Int  -&gt; Expr Int\n            B Bool |       -- Bool -&gt; Expr Bool\n            Add Expr Expr  -- Expr Int -&gt; Expr Int -&gt; Expr Int\n            Eq  Expr Expr  -- Expr 1   -&gt; Expr a   -&gt; Expr Bool\n</code></pre>\n"}, {"tags": ["haskell", "types", "data-kinds"], "owner": {"reputation": 371, "user_id": 5589037, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a8e0afcaf170b7c13a53093cf2f5f84c?s=128&d=identicon&r=PG&f=1", "display_name": "John Walker", "link": "https://stackoverflow.com/users/5589037/john-walker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 85, "favorite_count": 0, "closed_date": 1534034683, "answer_count": 0, "score": 1, "last_activity_date": 1534194088, "creation_date": 1534031030, "last_edit_date": 1534194088, "question_id": 51804607, "link": "https://stackoverflow.com/questions/51804607/where-does-come-from-and-where-is-it-declared", "closed_reason": "Duplicate", "title": "Where does &#39;[] come from and where is it declared?", "body": "<p>Looking at the example code from <a href=\"https://github.com/lexi-lambda/freer-simple#readme%22freer-simple%22http://\" rel=\"nofollow noreferrer\">freer-simple</a></p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE LambdaCase #-}\nmodule Console where\n\nimport Control.Monad.Freer\nimport Control.Monad.Freer.Error\nimport Control.Monad.Freer.State\nimport Control.Monad.Freer.Writer\nimport System.Exit hiding (ExitCode(ExitSuccess))\n\n--------------------------------------------------------------------------------\n                                                             -- Effect Model --\n--------------------------------------------------------------------------------\ndata Console r where\n    PutStrLn    :: String -&gt; Console ()\n    GetLine     :: Console String\n    ExitSuccess :: Console ()\n\nputStrLn' :: Member Console effs =&gt; String -&gt; Eff effs ()\nputStrLn' = send . PutStrLn\n\ngetLine' :: Member Console effs =&gt; Eff effs String\ngetLine' = send GetLine\n\nexitSuccess' :: Member Console effs =&gt; Eff effs ()\nexitSuccess' = send ExitSuccess\n\n--------------------------------------------------------------------------------\n                                                    -- Effectful Interpreter --\n--------------------------------------------------------------------------------\nrunConsole :: Eff '[Console, IO] a -&gt; IO a\nrunConsole = runM . interpretM (\\case\n    PutStrLn msg -&gt; putStrLn msg\n    GetLine -&gt; getLine\n    ExitSuccess -&gt; exitSuccess)\n</code></pre>\n\n<p>I don't get where the curious looking '[...] comes from in Eff '[Console, IO] a. </p>\n\n<p>I get that it declares a list of Effects for the interpreter but where is it declared?</p>\n\n<p>I poked around the source code of the library but couldn't see anything I recognised as a \"constructor\".</p>\n\n<p>Is it a Haskell feature for does it come from a low level type-fu library?</p>\n\n<p>What is a more rigorous description of it's purpose?</p>\n"}, {"tags": ["haskell", "applicative"], "comments": [{"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1534028331, "post_id": 51804380, "comment_id": 90564665, "body": "<code>pure (f &lt;*&gt; xs)</code> would be an odd expression to see, as it would imply adding a new minimal applicative layer on top of an existing applicative functor. What are you thinking it means?"}, {"owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1534028439, "post_id": 51804380, "comment_id": 90564681, "body": "I think <code>(f &lt;*&gt; xs)</code> will apply <code>f</code> to each element in <code>xs</code>, then <code>pure</code> will take it as a whole and then return <code>f a</code>."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1534028733, "post_id": 51804380, "comment_id": 90564724, "body": "Applying <code>f</code> to each element in <code>xs</code> is what <code>fmap</code> does. <code>&lt;*&gt;</code> is for combining the contexts of a stateful value and a function which is <i>also</i> stateful. Carrying the <code>fmap</code> analogy for lists specifically, <code>&lt;*&gt;</code> would apply every function in a list to every element of <code>xs</code>, where <code>fmap</code> applies a single function to every element of a list."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1534029961, "creation_date": 1534029961, "answer_id": 51804540, "question_id": 51804380, "link": "https://stackoverflow.com/questions/51804380/why-fmap-f-xs-pure-f-xs/51804540#51804540", "title": "Why fmap f xs = pure f &lt;*&gt; xs?", "body": "<blockquote>\n  <p>But what does <code>pure f</code> do?</p>\n</blockquote>\n\n<p>Given, <code>f :: a -&gt; b</code>, we obtain <code>pure f :: f (a -&gt; b)</code> the last <code>f</code> being any applicative functor. This creates a value of the right type to pass as the first argument to</p>\n\n<pre><code>(&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<blockquote>\n  <p>I mean <code>pure</code> should take any <code>a</code> and return <code>f a</code></p>\n</blockquote>\n\n<p>Exactly -- in this case the <code>a</code> you mention is the function type <code>a -&gt; b</code> I mentioned above.</p>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 8, "last_activity_date": 1534037947, "creation_date": 1534037947, "answer_id": 51805046, "question_id": 51804380, "link": "https://stackoverflow.com/questions/51804380/why-fmap-f-xs-pure-f-xs/51805046#51805046", "title": "Why fmap f xs = pure f &lt;*&gt; xs?", "body": "<p>Maybe a concrete example would be illustrative. Take the list applicative. <code>&lt;*&gt;</code> applies <em>each</em> function from its left operand to <em>each</em> value from its right:</p>\n\n<pre><code>fs &lt;*&gt; xs = [f x | f &lt;- fs, x &lt;- xs]\n</code></pre>\n\n<p>And <code>pure</code> wraps a value in a singleton list:</p>\n\n<pre><code>pure (+ 1) = [(+ 1)]\n</code></pre>\n\n<p>So <code>pure f &lt;*&gt; xs</code> = <code>fmap f xs</code>, because <code>&lt;*&gt;</code> applies each function\u2014<strong>of which there happens to be only one</strong>\u2014to each value, while <code>fmap</code> applies one function to each value:</p>\n\n<pre><code>pure (+ 1) &lt;*&gt; [1, 2, 3]\n=\n[(+ 1)] &lt;*&gt; [1, 2, 3]\n=\n[f x | f &lt;- [(+ 1)], x &lt;- [1, 2, 3]]\n=\n[(+ 1) x | x &lt;- 1, 2, 3]\n=\n[x + 1 | x &lt;- 1, 2, 3]\n=\n[2, 3, 4]\n\n\nfmap (+ 1) [1, 2, 3]\n=\n[(+ 1) x | x &lt;- [1, 2, 3]]\n=\n[x + 1 | x &lt;- [1, 2, 3]]\n=\n[2, 3, 4]\n</code></pre>\n\n<p>This is also how the <code>&lt;$&gt;</code> and <code>&lt;*&gt;</code> operators work together to apply a multi-argument function over the results of multiple actions, e.g.:</p>\n\n<pre><code>(*) &lt;$&gt; [1..5] &lt;*&gt; [1..5]\n=\n((*) &lt;$&gt; [1..5]) &lt;*&gt; [1..5]\n=\n[(1 *), (2 *), (3 *), (4 *), (5 *)] &lt;*&gt; [1..5]\n=\n[ (1 *) 1, (2 *) 1, (3 *) 1, (4 *) 1, (5 *) 1\n, (1 *) 2, (2 *) 2, (3 *) 2, (4 *) 2, (5 *) 2\n, (1 *) 3, (2 *) 3, (3 *) 3, (4 *) 3, (5 *) 3\n, (1 *) 4, (2 *) 4, (3 *) 4, (4 *) 4, (5 *) 4\n, (1 *) 5, (2 *) 5, (3 *) 5, (4 *) 5, (5 *) 5\n]\n=\n[ 1,  2,  3,  4,  5\n, 2,  4,  6,  8, 10\n, 3,  6,  9, 12, 15\n, 4,  8, 12, 16, 20\n, 5, 10, 15, 20, 25\n]\n</code></pre>\n\n<p>This could also have been written <code>pure (*) &lt;*&gt; [1..5] &lt;*&gt; [1..5]</code>.</p>\n\n<p><code>&lt;$&gt;</code> builds an action (in this case a list) returning (containing) partially applied functions, and <code>&lt;*&gt;</code> takes those functions and applies them to arguments. (And if the function takes more than two arguments, then this may also result in partially applied functions, which can be applied to more arguments with another application of <code>&lt;*&gt;</code>.)</p>\n\n<p>The same laws hold in other \u201ccontainer-like\u201d applicatives such as <code>Maybe</code> or <code>Either e</code> (for some <code>e</code>), as well as \u201caction-like\u201d applicatives such as <code>IO</code>, <code>Cont r</code>, or <code>Async</code>.</p>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 51805046, "answer_count": 2, "score": 1, "last_activity_date": 1534037947, "creation_date": 1534027992, "question_id": 51804380, "link": "https://stackoverflow.com/questions/51804380/why-fmap-f-xs-pure-f-xs", "title": "Why fmap f xs = pure f &lt;*&gt; xs?", "body": "<pre><code>class Functor f =&gt; Applicative f where\n       pure :: a -&gt; f a\n       (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<blockquote>\n  <p>\"pure\" plays two roles:<br>\n  * The degenerate case when you have a\n  0-ary function, kind of.<br>\n  * fmap f xs = pure f &lt;*> xs</p>\n</blockquote>\n\n<p>I don't understand why </p>\n\n<pre><code>fmap f xs = pure f &lt;*&gt; xs\n</code></pre>\n\n<p>I mean <code>pure</code> should take any <code>a</code> and return <code>f a</code>. But what does <code>pure f</code> do? Even <code>pure (f &lt;*&gt; xs)</code> makes sense to me.</p>\n"}, {"tags": ["haskell", "type-families"], "answers": [{"comments": [{"owner": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "edited": false, "score": 0, "creation_date": 1534010657, "post_id": 51802319, "comment_id": 90561110, "body": "Oh yes, nice! It seems like I forgot to post the actual problem when shrinking my real world example to an MWE... how about the updated question now?"}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": false, "score": 1, "last_activity_date": 1534009959, "creation_date": 1534009959, "answer_id": 51802319, "question_id": 51802228, "link": "https://stackoverflow.com/questions/51802228/pattern-match-and-recurse-on-types-in-closed-type-family-for-type-equality-pro/51802319#51802319", "title": "&quot;Pattern match&quot; and recurse on types in closed type family for type equality proof", "body": "<p><code>:~:</code> is <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/src/Data.Type.Equality.html#%3A~%3A\" rel=\"nofollow noreferrer\">defined as</a> a GADT which is inhabited when <code>a</code> is equal to <code>b</code>. When that is the case, the inhabitant is called <code>Refl</code>. GHC is smart enough to understand that the two types are equal in this case. This compiles</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies, TypeOperators #-}\n\nimport Data.Type.Equality\n\ndata Foo = Foo\n\ntype family AlwaysInt a\n  AlwaysInt Foo = Int\n  AlwaysInt _   = Int\n\nlemma :: AlwaysInt a :~: Int\nlemma = Refl\n</code></pre>\n\n<p>If we change one of the <code>Int</code> to some other type, we'll get a type error since <code>Refl</code> is not a member of <code>(something strange) :~: Int</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "edited": false, "score": 0, "creation_date": 1534012250, "post_id": 51802581, "comment_id": 90561536, "body": "Yes, but neither of these types is ever inhabited. Since I need to write <code>lemma :: a -&gt; AlwaysInt a :~: Int</code> already to get rid of ambiguous types, can I prove that?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "edited": false, "score": 0, "creation_date": 1534014795, "post_id": 51802581, "comment_id": 90562109, "body": "@Turion, you don&#39;t need an <code>a</code> to avoid ambiguous types; you just need a <code>Proxy a</code>. <code>ManyFoo</code> is not <i>obviously</i> uninhabited. If you add a <code>Typeable</code> constraint and determine that you definitely don&#39;t have an application of <code>Foo</code> (using <code>Type.Reflection</code>) then you can safely <code>unsafeCoerce</code> your way to an answer."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 4, "last_activity_date": 1534011937, "creation_date": 1534011937, "answer_id": 51802581, "question_id": 51802228, "link": "https://stackoverflow.com/questions/51802228/pattern-match-and-recurse-on-types-in-closed-type-family-for-type-equality-pro/51802581#51802581", "title": "&quot;Pattern match&quot; and recurse on types in closed type family for type equality proof", "body": "<p>You can't prove that.</p>\n\n<pre><code>type family Any where {}\ntype family ManyFoo where\n  ManyFoo = Foo ManyFoo\n</code></pre>\n\n<p>What is <code>AlwaysInt Any</code>? <code>Any</code> is a <em>stuck type</em>, so GHC won't be able to reduce the type family application.</p>\n\n<p>What is <code>AlwaysInt ManyFoo</code>? Well, <code>ManyFoo</code> is an infinite type,</p>\n\n<pre><code>ManyFoo = Foo (Foo (Foo ...))\n</code></pre>\n\n<p>so GHC will go into an infinite loop trying to calculate it or trying to calculate <code>AlwaysInt ManyFoo</code>.</p>\n"}], "owner": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1534011937, "creation_date": 1534009255, "last_edit_date": 1534010453, "question_id": 51802228, "link": "https://stackoverflow.com/questions/51802228/pattern-match-and-recurse-on-types-in-closed-type-family-for-type-equality-pro", "title": "&quot;Pattern match&quot; and recurse on types in closed type family for type equality proof", "body": "<p>Assume a situation like this:</p>\n\n<pre><code>data Foo a = Foo\n\ntype family AlwaysInt a where\n  AlwaysInt (Foo a) = AlwaysInt a\n  AlwaysInt _       = Int\n</code></pre>\n\n<p>I'd like to prove that <code>AlwaysInt a</code> is always <code>Int</code>.</p>\n\n<pre><code>import Data.Type.Equality\n\nlemma :: AlwaysInt a :~: Int\nlemma = undefined\n</code></pre>\n\n<p>How do I prove this? I'd like to \"pattern match\" on each type in the type family definition since I can prove the lemma for each case, but how do I do such a pattern match?</p>\n\n<p>The ugly workaround is adding an <code>a</code> argument to <code>lemma</code> and leaving <code>undefined</code> there or putting an <code>error</code> message, but that's not great in real life situations.</p>\n\n<p>EDIT: Forgot actual problem</p>\n"}, {"tags": ["haskell", "binary-search-tree"], "comments": [{"owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1534009815, "post_id": 51801299, "comment_id": 90560883, "body": "Is this a general Tree data Tree a = Empty | Node a [Tree a]"}, {"owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1534009850, "post_id": 51801299, "comment_id": 90560890, "body": "or this                                                                                                                     data GTree a = Leaf a | Branch [GTree a]"}], "answers": [{"comments": [{"owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1534008161, "post_id": 51801368, "comment_id": 90560395, "body": "Thank you! How would I do it with explicit recursion?"}, {"owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1534008810, "post_id": 51801368, "comment_id": 90560596, "body": "preorderTree ::GTree a -&gt; [a] preorderTree (Leaf children) = a : concatMap preorderTree children               why is this not working?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1534009604, "post_id": 51801368, "comment_id": 90560818, "body": "@Gloria95 You mean aside from it not defining how it works on a <code>Branch</code> value?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1534009721, "post_id": 51801368, "comment_id": 90560853, "body": "For this tree there&#39;s no value to visit at the current node anyway, so the concept of preorder vs postorder is meaningless."}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1534023359, "post_id": 51801368, "comment_id": 90563848, "body": "@amalloy Good point. Since <code>Branch</code> does not require an <code>a</code> like <code>Node</code> does, it holds no data."}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "reply_to_user": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1534023483, "post_id": 51801368, "comment_id": 90563870, "body": "@Gloria95 I suggest using <code>map</code> on the list of trees in the branch rather than trying to do it with explicit recursion."}], "tags": [], "owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "is_accepted": false, "score": 2, "last_activity_date": 1534002741, "creation_date": 1534002741, "answer_id": 51801368, "question_id": 51801299, "link": "https://stackoverflow.com/questions/51801299/post-order-for-a-general-tree-haskell/51801368#51801368", "title": "Post order for a general tree? (Haskell)", "body": "<p>A <code>GTree</code> just has as many branches as you wish, not just two. The concept for post order traversal is still the same: visit <strong>all</strong> branches before visiting the current node. You can do this either with explicit recursion on the list of branches or with <code>map</code> or <code>reduce</code>.</p>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 310, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1534002741, "creation_date": 1534002288, "question_id": 51801299, "link": "https://stackoverflow.com/questions/51801299/post-order-for-a-general-tree-haskell", "title": "Post order for a general tree? (Haskell)", "body": "<p>I asked this question earlier, but I did not know the difference between a rose tree and general tree. Now I know that the data structure is slightly different.</p>\n\n<pre><code>data GTree a = Leaf a | Branch [GTree a]\n</code></pre>\n\n<p>I would like to write a postorderG function that would give me a list with all the elements of Gtree in postorder. </p>\n\n<p>I know how to do it for a binary tree. </p>\n\n<pre><code>data BTree a = Nil | Node a (BTree a) (BTree a) \n\npostOrder :: BTree a -&gt; [a]\npostOrder Nil = []\npostOrder (Node x lt rt) = (postOrder lt) ++ (postOrder rt) ++ [x] \n</code></pre>\n"}, {"tags": ["haskell", "metaprogramming", "generic-programming", "higher-kinded-types"], "answers": [{"comments": [{"owner": {"reputation": 2183, "user_id": 52310, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8729b9952488497d0343e8bd86afe8cb?s=128&d=identicon&r=PG", "display_name": "Alex R", "link": "https://stackoverflow.com/users/52310/alex-r"}, "edited": false, "score": 0, "creation_date": 1534213322, "post_id": 51801055, "comment_id": 90619682, "body": "It turns out this didn&#39;t work in my actual use case because <code>rank2classes</code> doesn&#39;t support polykinded parameters, but your answer is still a good answer to the question as I asked it."}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 4, "last_activity_date": 1534000459, "creation_date": 1534000459, "answer_id": 51801055, "question_id": 51800866, "link": "https://stackoverflow.com/questions/51800866/automatically-generate-mapping-function-for-data-with-higher-kinded-parameter/51801055#51801055", "title": "Automatically generate mapping function for data with higher-kinded parameter", "body": "<p><a href=\"http://hackage.haskell.org/package/rank2classes\" rel=\"nofollow noreferrer\">The <code>rank2classes</code> package</a> <a href=\"http://hackage.haskell.org/package/rank2classes-1.1.0.1/docs/Rank2-TH.html#v:deriveFunctor\" rel=\"nofollow noreferrer\">can derive this</a> for you.</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}\n\nimport Rank2.TH (deriveFunctor)\n\ndata Foo f = Foo {fooInt :: f Int, fooBool :: f Bool}\n\n$(deriveFunctor ''Foo)\n</code></pre>\n\n<p>Now you can write <code>mapFoo = Rank2.(&lt;$&gt;)</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 1, "last_activity_date": 1534021943, "last_edit_date": 1534021943, "creation_date": 1534021559, "answer_id": 51803751, "question_id": 51800866, "link": "https://stackoverflow.com/questions/51800866/automatically-generate-mapping-function-for-data-with-higher-kinded-parameter/51803751#51803751", "title": "Automatically generate mapping function for data with higher-kinded parameter", "body": "<p>EDIT: Oh, I should be explicit that this is a <em>manual</em> method - it's a pointer to a package that has lots of useful functions and type classes but afaik no TH to generate what you want.  Pull requests welcome, I'm sure.</p>\n\n<p>The <a href=\"http://hackage.haskell.org/package/parameterized-utils-1.0.0\" rel=\"nofollow noreferrer\">parameterized-utils package</a> provides a rich set of higher rank classes.  For your needs there's <a href=\"http://hackage.haskell.org/package/parameterized-utils-1.0.0/docs/Data-Parameterized-TraversableF.html#t:FunctorF\" rel=\"nofollow noreferrer\">FunctorF</a>:</p>\n\n<pre><code>-- | A parameterized type that is a function on all instances.\nclass FunctorF m where\n  fmapF :: (forall x . f x -&gt; g x) -&gt; m f -&gt; m g\n</code></pre>\n\n<p>And the instances are what you probably expect:</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\nimport Data.Parameterized.TraversableF\n\ndata Foo f = Foo {fooInt :: f Int, fooBool :: f Bool}\n\ninstance FunctorF Foo where\n  fmapF op (Foo a b) = Foo (op a) (op b)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "is_accepted": false, "score": 1, "last_activity_date": 1534306363, "last_edit_date": 1534306363, "creation_date": 1534306016, "answer_id": 51852805, "question_id": 51800866, "link": "https://stackoverflow.com/questions/51800866/automatically-generate-mapping-function-for-data-with-higher-kinded-parameter/51852805#51852805", "title": "Automatically generate mapping function for data with higher-kinded parameter", "body": "<p>Here is <code>GHC.Generics</code>-based implementation if you still prefer not to use <code>TemplateHaskell</code>:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE UndecidableInstances #-}\n\nimport GHC.Generics\n\ndata Foo f = Foo {\n    fooInt :: f Int,\n    fooBool :: f Bool,\n    fooString :: f String\n    } deriving (Generic)\n\n\nclass Functor2 p q f where\n    fmap2 :: (forall a. p a -&gt; q a) -&gt; f p -&gt; f q\n\ninstance (Generic (f p), Generic (f q), GFunctor2 p q (Rep (f p)) (Rep (f q))) =&gt; Functor2 p q f where\n    fmap2 f = to . (gfmap2 f) . from \n\nclass GFunctor2 p q f g where\n    gfmap2 :: (forall a. p a -&gt; q a) -&gt; f x -&gt; g x\n\ninstance (GFunctor2 p q a b) =&gt; GFunctor2 p q (D1 m1 (C1 m2 a)) (D1 m1 (C1 m2 b)) where\n    gfmap2 f (M1 (M1 a)) = M1 (M1 (gfmap2 f a))\n\ninstance (GFunctor2 p q a c, GFunctor2 p q b d) =&gt; GFunctor2 p q (a :*: b) (c :*: d) where\n    gfmap2 f (a :*: b) = gfmap2 f a :*: gfmap2 f b\n\ninstance GFunctor2 p q (S1 m1 (Rec0 (p a))) (S1 m1 (Rec0 (q a))) where\n   gfmap2 f (M1 (K1 g)) = M1 (K1 (f g))   \n\n\n-- Tests\nfoo = Foo (Just 1) (Just True) (Just \"foo\")\n\ntest1 = fmap2 (\\(Just a) -&gt; [a]) foo   \n\ntest2 = fmap2 (\\[a] -&gt; Left \"Oops\") test1\n</code></pre>\n\n<p>I'm not sure though if it is possible to avoid <code>MultiParamTypeClasses</code> to make <code>class Functor2</code> identical to the one defined <code>rank2classes</code>.</p>\n"}], "owner": {"reputation": 2183, "user_id": 52310, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8729b9952488497d0343e8bd86afe8cb?s=128&d=identicon&r=PG", "display_name": "Alex R", "link": "https://stackoverflow.com/users/52310/alex-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 1, "accepted_answer_id": 51801055, "answer_count": 3, "score": 0, "last_activity_date": 1534306363, "creation_date": 1533999195, "question_id": 51800866, "link": "https://stackoverflow.com/questions/51800866/automatically-generate-mapping-function-for-data-with-higher-kinded-parameter", "title": "Automatically generate mapping function for data with higher-kinded parameter", "body": "<p>Consider the data type</p>\n\n<pre><code>data Foo f = Foo {fooInt :: f Int, fooBool :: f Bool}\n</code></pre>\n\n<p>I would like a function <code>mapFoo :: (forall a. f a -&gt; g a) -&gt; Foo f -&gt; Foo g</code>. My options:</p>\n\n<ul>\n<li>I could write it manually. This is mildly annoying, but the killer objection is that I expect <code>Foo</code> to gain fields over time and I want that to be as frictionless as possible, so having to add a case to this function is annoying.</li>\n<li>I could write Template Haskell. I'm pretty sure this isn't too hard, but I tend to view TH as a last resort, so I'm hoping for something better.</li>\n<li>Could I use generics? I derived <code>Generic</code>, but when I tried to implement the <code>K1</code> case (specifically to handle <code>Rec0</code>) I couldn't figure out how to do it; I needed it to change the type.</li>\n<li>Is there a fourth option that I just missed?</li>\n</ul>\n\n<p>If there is a generic way to write <code>mapFoo</code> without reaching for Template Haskell, I'd love to know about it! Thanks.</p>\n"}, {"tags": ["haskell", "binary-search-tree"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1534000557, "post_id": 51800519, "comment_id": 90558445, "body": "Your <code>isPerfect</code> function looks wrong to me. If <code>t</code> is a perfect tree of depth 1 and <code>u</code> is a perfect tree of depth 2, what should <code>isPerfect (Node x t u)</code> be?"}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1534065336, "post_id": 51800519, "comment_id": 90570040, "body": "The <a href=\"http://hackage.haskell.org/package/containers-0.6.0.1/docs/src/Data.Set.Internal.html#valid\" rel=\"nofollow noreferrer\"><code>valid</code> function</a> for <code>container</code>&#39;s <code>Set</code> type should be interesting to you."}], "answers": [{"tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": false, "score": -1, "last_activity_date": 1534001618, "creation_date": 1534001618, "answer_id": 51801204, "question_id": 51800519, "link": "https://stackoverflow.com/questions/51800519/how-to-check-if-my-binary-search-tree-is-complete-haskell/51801204#51801204", "title": "How to check if my binary search Tree is complete? (Haskell)", "body": "<p>You only need to add one case:</p>\n\n<pre><code>isPerfect (Node _ lt Nil ) = False\n</code></pre>\n\n<p>could still be valid in <code>isComplete</code>, but only if <code>lt</code> has no children.</p>\n\n<pre><code>isComplete (Node _ (Node _ Nil Nil) Nil) = True\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534100600, "post_id": 51811248, "comment_id": 90578860, "body": "I don&#39;t believe there is any one perfect implementation. You can shortcut in certain ways, but that will prevent other shortcuts. In particular, you can work depth-first or breadth-first."}, {"owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534104387, "post_id": 51811248, "comment_id": 90579743, "body": "Sounds right.  But sticking with depth-first, you could do strictly better by adding a second function <code>hasPerfectDepth :: Int -&gt; BTree a -&gt; Bool</code> to check for a known depth.  Then the second equation in <code>perfectDepth</code> becomes <code>case perfectDepth a of Just d | hasPerfectDepth d b -&gt; Just d; _ -&gt; Nothing</code>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1534115374, "post_id": 51811248, "comment_id": 90581867, "body": "Indeed, that is so."}], "tags": [], "owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "is_accepted": false, "score": 1, "last_activity_date": 1534095215, "creation_date": 1534095215, "answer_id": 51811248, "question_id": 51800519, "link": "https://stackoverflow.com/questions/51800519/how-to-check-if-my-binary-search-tree-is-complete-haskell/51811248#51811248", "title": "How to check if my binary search Tree is complete? (Haskell)", "body": "<p>I believe you are trying to make this problem just a little bit simpler than possible.  To check whether a binary tree is perfect, you need to know not just that both children are perfect, but that they have the same depth.  So knowing the  result of <code>isPerfect</code> recursively on the children still isn't enough to answer the question.</p>\n\n<p>This comes up a lot when writing recursive functions.  You need to write a recursive function to do something a little bit <em>more</em> powerful than you want, and then extract the info you want from that.  You could start with this, for example:</p>\n\n<pre><code>-- | Gives the depth of a tree if it's perfect;\n-- or otherwise, Nothing\nperfectDepth :: BTree a -&gt; Maybe Int\nperfectDepth Nil = Just 0\nperfectDepth (Node x a b) =\n    case (perfectDepth a, perfectDepth b) of\n        (Just da, Just db) | da == db -&gt; Just (da + 1)\n        _ -&gt; Nothing\n</code></pre>\n\n<p>(This isn't an ideal implementation, either.  You will potentially do a bunch of work on the <code>b</code> side verifying perfectness when you already knew the depth was wrong.  But it works, and I chose simplicity over efficiency here.)</p>\n\n<p>Now that your recursion is giving you the right information, you should be able to write <code>isPerfect</code> in terms of this.  <code>isComplete</code> would use a similar strategy.</p>\n"}], "owner": {"reputation": 91, "user_id": 9225974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c64efccc21c8c7b16c70047cc213a93?s=128&d=identicon&r=PG&f=1", "display_name": "Bronia Berlin", "link": "https://stackoverflow.com/users/9225974/bronia-berlin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 982, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1534095215, "creation_date": 1533997027, "last_edit_date": 1534001308, "question_id": 51800519, "link": "https://stackoverflow.com/questions/51800519/how-to-check-if-my-binary-search-tree-is-complete-haskell", "title": "How to check if my binary search Tree is complete? (Haskell)", "body": "<pre><code>data BTree a = Nil | Node a (BTree a) (BTree a) deriving Show\n</code></pre>\n\n<p>I learned about two binary search trees. One is perfect the other one is \ncomplete.</p>\n\n<p>A Binary tree is Perfect Binary Tree in which all internal nodes have two children and all leaves are at same level.</p>\n\n<p>A Binary Tree is complete Binary Tree if all levels are completely filled except possibly the last level and the last level has all keys as left as possible</p>\n\n<p>The code to check if a binary tree is perfect is pretty easy </p>\n\n<pre><code>isPerfect :: BTree a -&gt; Bool\nisPerfect Nil = True\nisPerfect (Node x Nil Nil) = True\nisPerfect (Node x lt Nil ) = False\nisPerfect (Node x Nil rt ) = False\nisPerfect (Node x lt  rt ) = (&amp;&amp;) (isPerfect lt) (isPerfect rt)\n</code></pre>\n\n<p>How can I check if the tree is complete?</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 13, "creation_date": 1533998326, "post_id": 51800389, "comment_id": 90557784, "body": "Your characterization of Coq&#39;s termination checker as &quot;simple&quot; sounds like the optimistic dreams of somebody who&#39;s never actually had to use it on a complicated function. Whether a function uses structural recursion may be easy to check; but that doesn&#39;t mean it&#39;s easy to massage the computation you care about into a structurally recursive form. It frequently requires significant creativity to come up with a suitable termination metric -- and that&#39;s for functions that you know do indeed terminate on all inputs."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 7, "creation_date": 1533999426, "post_id": 51800389, "comment_id": 90558126, "body": "You can&#39;t write a Coq interpreter in Coq, even if you know that Coq programs temrinate. You can write a Coq interpreter in Haskell. You can also write a Haskell/Java/etc. interpreter in Haskell. That&#39;s one of the limitations of total programming."}, {"owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1534010062, "post_id": 51800389, "comment_id": 90560940, "body": "@chi I was aware of the problem concerning the Coq interpreter, and I agree it is a useful function :) And since we do have this interpreter now (thanks OCaml), do you have examples of other useful functions that we cannot write in Coq ?"}, {"owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1534024747, "post_id": 51800389, "comment_id": 90564124, "body": "@DanielWagner You extrapolate my question. I did say that the checking of structural recursion is simple for Coq&#39;s compiler, but I didn&#39;t say that programming in Coq is simple. If you are interested, the difficulties of recursive programs in Coq are acknowledged <a href=\"http://adam.chlipala.net/cpdt/html/Cpdt.GeneralRec.html\" rel=\"nofollow noreferrer\">here</a>. This chapter even proposes monads for non-termination. Why not implement those monads in Haskell ?"}, {"owner": {"reputation": 44043, "user_id": 1565698, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/7dace33805b9dcdec5aa63308daf88dc?s=128&d=identicon&r=PG", "display_name": "Sylwester", "link": "https://stackoverflow.com/users/1565698/sylwester"}, "edited": false, "score": 1, "creation_date": 1534033941, "post_id": 51800389, "comment_id": 90565363, "body": "You need to be able to shoot yourself in the leg to have turing completeness and with that you get the halting problem for free."}, {"owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1534084498, "post_id": 51800389, "comment_id": 90574559, "body": "@chi Conor McBride wrote a Coq interpreter in Coq this morning, so maybe it can be done: <a href=\"https://github.com/pigworker/Samizdat/blob/master/CoqInterpreter.v\" rel=\"nofollow noreferrer\">github.com/pigworker/Samizdat/blob/master/CoqInterpreter.v</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "edited": false, "score": 4, "creation_date": 1534088214, "post_id": 51800389, "comment_id": 90575458, "body": "@Madgen Not even McBride can violate computability constraints :) As far as I can see, that interpreter requires (roughly) a &quot;number of steps&quot; natural argument, which significantly changes the rule of the game. Indeed, if that number is too low, the result of the interpreter is &quot;None&quot; (I guess). That interpreter looks quite interesting, but for other reasons."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 2, "creation_date": 1534099919, "post_id": 51800389, "comment_id": 90578702, "body": "Meh. Ultimately the only thing that you need is some magic at the UI so that people can keep waiting for a <code>Delay</code>-ed result, pressing <code>Ctrl-c</code> to abort the computation when they get bored. Exactly like in Haskell / Ocaml. Except that here the type is being honest about the fact that you may have to wait forever for an answer that may never come."}], "answers": [{"comments": [{"owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "edited": false, "score": 0, "creation_date": 1534069186, "post_id": 51807451, "comment_id": 90570863, "body": "Yes, I ran into the same kinds of difficulties with Coq. Don&#39;t you think that the drawbacks are actually necessities ? If you sell your software, you do not want it to crash or freeze. Especially if it is installed on multiple machines and hard to debug remotely. Your clients will appreciate the extra efforts you put in proving those things won&#39;t happen."}, {"owner": {"reputation": 3214, "user_id": 559931, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b75be6c373229af33f769c0a7e79f8d3?s=128&d=identicon&r=PG", "display_name": "Anton Golov", "link": "https://stackoverflow.com/users/559931/anton-golov"}, "reply_to_user": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "edited": false, "score": 0, "creation_date": 1534071403, "post_id": 51807451, "comment_id": 90571342, "body": "No, I don&#39;t think so: even setting aside the question of whether <i>every</i> program needs that level of validity, a total language is not the only way to attain it.  For example, proving correctness using an external tool may turn out to be a better approach."}, {"owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "edited": false, "score": 0, "creation_date": 1534074643, "post_id": 51807451, "comment_id": 90572078, "body": "What&#39;s the difference between writing the proof in an external tool or in the program itself ? What tools are you thinking of ? If the proof can be automated, then in Coq it will simply invoke the <code>auto</code> tactic. The only other way I know of detecting crashes without writing proofs is <a href=\"https://en.wikipedia.org/wiki/Abstract_interpretation\" rel=\"nofollow noreferrer\">abstract interpretation</a>. But it is not a silver bullet either."}, {"owner": {"reputation": 3214, "user_id": 559931, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b75be6c373229af33f769c0a7e79f8d3?s=128&d=identicon&r=PG", "display_name": "Anton Golov", "link": "https://stackoverflow.com/users/559931/anton-golov"}, "reply_to_user": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "edited": false, "score": 0, "creation_date": 1534074750, "post_id": 51807451, "comment_id": 90572106, "body": "I think that&#39;s a pretty big question in its own right\u2014why not ask it on the site? :)"}], "tags": [], "owner": {"reputation": 3214, "user_id": 559931, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b75be6c373229af33f769c0a7e79f8d3?s=128&d=identicon&r=PG", "display_name": "Anton Golov", "link": "https://stackoverflow.com/users/559931/anton-golov"}, "is_accepted": false, "score": 3, "last_activity_date": 1534065563, "creation_date": 1534065563, "answer_id": 51807451, "question_id": 51800389, "link": "https://stackoverflow.com/questions/51800389/why-does-haskell-have-bottom-infinite-recursions/51807451#51807451", "title": "Why does Haskell have bottom (infinite recursions)?", "body": "<p>I can't give you a comprehensive answer, but I've spent some time working in Agda over the past year, and here are some drawbacks of totality that I've seen.</p>\n\n<p>Basically, when writing a program in Haskell, there are some bits of information that I have, but that I do not explicitly share with the compiler.  If this information is necessary for the program to terminate without errors, then Agda forces me to make this information explicit.</p>\n\n<p>Consider Haskell's <code>Data.Map.!</code> operator that lets you lookup an element in a map by its key.  If you pass a key that is not in the map, it will throw an exception.  The Agda counterpart of this operator would need to take not only the key, but also a proof that the key is in the map.  This has some drawbacks:</p>\n\n<ol>\n<li>Someone would have to come up with a type that lets us express \"map <code>m</code> contains key <code>k</code>\", and prove lemmas about how this type interacts with insertion and deletion.</li>\n<li>Any changes to the definitions of <code>insert</code> and <code>delete</code> will likely invalidate the proofs of these lemmas.</li>\n<li>When I use this map, I have to keep track of all the membership proofs explicitly, passing them around and keeping them up to date.  This is both a syntactic and a mental burden.</li>\n<li>If I care about performance, I need to make sure that all these proofs are erased at runtime.</li>\n</ol>\n\n<p>Alternatively, I could use <code>Maybe</code> or <code>Either</code> to explicitly pass these errors around.  Often this is the right thing to do, but it makes it less clear when I anticipate an error happening, and when I've simply not gone through the trouble of showing that an error is impossible.  This approach also doesn't work as well with interactive debuggers: I can easily break on an exception, but not so easily on the construction of a <code>Nothing</code>.</p>\n\n<p>I've been focusing on errors in the above, but the same things hold for non-termination.</p>\n\n<p>This isn't to say that total languages are useless\u2014as you say, they have many benefits.  So far, I just wouldn't say that those benefits obviously outweigh these drawbacks for all applications.</p>\n"}], "owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 967, "favorite_count": 3, "answer_count": 1, "score": 6, "last_activity_date": 1534083686, "creation_date": 1533996025, "last_edit_date": 1534083686, "question_id": 51800389, "link": "https://stackoverflow.com/questions/51800389/why-does-haskell-have-bottom-infinite-recursions", "title": "Why does Haskell have bottom (infinite recursions)?", "body": "<p>There are languages other than Haskell, such as <a href=\"https://coq.inria.fr/\" rel=\"nofollow noreferrer\">Coq</a>, which banned bottom, or <code>undefined</code>, or infinite recursive definitions like</p>\n\n<pre><code>bot :: forall a. a\nbot = bot\n</code></pre>\n\n<p>The benefit of not having bottom is simple : all programs terminate. The compiler guarantees that there are no infinite loops, no infinite recursions.</p>\n\n<p>There is also a less obvious benefit : the logic of the language (given by the <a href=\"https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\" rel=\"nofollow noreferrer\">Curry-Howard correspondence</a>) is consistent, it cannot prove a contradiction. So the same language can write both programs and proofs that the programs are correct. But that's maybe off-topic here.</p>\n\n<p>The protection against infinite recursions is also simple : force each recursive definition to have arguments (here <code>bot</code> has none) and force recursive calls to be decreasing on one of those arguments. Here decreasing is in the sense of algebraic data types, seen as finite trees of contructors and values. Coq's compiler checks that the decreasing argument is an ADT (<code>data</code> in Haskell) and that the recursive calls are done on subtrees of the argument, typically via a <code>case of</code>, not on other trees coming from somewhere else.</p>\n\n<p>Now the cost of this language constraint : we lose Turing-completeness (because we cannot solve the <a href=\"https://en.wikipedia.org/wiki/Halting_problem\" rel=\"nofollow noreferrer\">halting problem</a>). That means there are terminating functions, possible to code in Haskell using general recursions, that would become refused by the compiler. In practice however, the magnitude of Coq's library shows that those exotic functions are rarely needed. Does someone even know one of them ?</p>\n\n<p>There are cases where infinite loops make sense :</p>\n\n<ul>\n<li>Interactive programs, where the user issues commands by clicking or typing on the keyboard, usually run forever. They wait for a command, process it and then wait for the next command. Until the end of time, or more seriously until the user issues the quit command.</li>\n<li>Likewise, instead of processing an infinite stream of user commands, process an infinite stream of data. Such as continuous queries on a database.</li>\n</ul>\n\n<p>Those cases are rather specific and might be treated by new language primitives. Haskell introduced <code>IO</code> to trace unsafe interactions. Why not declare the possibility of infinite loops in the signature of functions ? Or split a complex program into a <a href=\"https://en.wikipedia.org/wiki/Data_stream_management_system\" rel=\"nofollow noreferrer\">DSMS</a> that calls Haskell functions for pure computations ?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Here is an algorithm example, that might clarify what changes if we switch to total programming. Euclid's algorithm for computing the GCD of 2 numbers, first in plain recursive Haskell</p>\n\n<pre><code>euclid_gcd :: Int -&gt; Int -&gt; Int\neuclid_gcd m n = if n &lt;= 0 then m else euclid_gcd n (m `mod` n)\n</code></pre>\n\n<p>Two things can be proven concerning this function : that it terminates, and that it does compute the GCD of m and n. In a language accepting proof scripts, we would give the compiler a proof that <code>(m mod n) &lt; n</code>, so that it concludes the recursion is decreasing on its second argument, and therefore terminates.</p>\n\n<p>In Haskell I doubt we can do that, so we can try to rewrite this algorithm in a structural recursive form, that the compiler can easily check. That means a recursive call must be done on the predecessor of some argument. Here <code>m mod n</code> won't do, so it looks like we are stuck. But as with tail recursion, we can add new arguments. If we find a bound on the number of recursive calls, we are done. The bound does not have to be precise, it just needs to be above the actual number of recursive calls. Such a bound argument is usually called <code>variant</code> in the literature, I personally call it <code>fuel</code>. We force the recursion to stop with an error value when it runs out of fuel. Here we can take the successor of any of the 2 numbers :</p>\n\n<pre><code>euclid_gcd_term :: Int -&gt; Int -&gt; Int\neuclid_gcd_term m n = euclid_gcd_rec m n (n+1)\n  where\n    euclid_gcd_rec :: Int -&gt; Int -&gt; Int -&gt; Int\n    euclid_gcd_rec m n fuel =\n      if fuel &lt;= 0 then 0\n      else if n &lt;= 0 then m else euclid_gcd_rec n (m `mod` n) (fuel-1)\n</code></pre>\n\n<p>Here the termination proof somewhat leaks into the implementation, making it slightly harder too read. And the implementation makes useless computations on the fuel argument, which could slow down a bit, though in this case I hope Haskell's compiler will make it negligible. Coq has an extraction mechanism, that erases the proof part of such mixes of proofs and program, to produce OCaml or Haskell code.</p>\n\n<p>As for <code>euclid_gcd</code> we would then need to prove that <code>euclid_gcd_term</code> does compute the GCD of n and m. That includes proving Euclid's algorithm terminates in less than n+1 steps.</p>\n\n<p><code>euclid_gcd_term</code> is obviously more work than <code>euclid_gcd</code> and arguably less fun. On the other hand, once the habit is taken, I find it rewarding intellectually to know bounds for my algorithms. And when I cannot find such bounds, it usually means I don't understand my algorithms. Which also usually means they are bugged. We cannot force all developers to use total programming for all programs, but wouldn't a compiling option in Haskell to do it on demand be nice?</p>\n"}, {"tags": ["haskell", "tree", "postorder"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 2, "creation_date": 1533992839, "post_id": 51799903, "comment_id": 90556315, "body": "The <code>Node</code> constructor only has two arguments so your destructuring will look like <code>postorderG (Node x children)</code>. I suggest you look at <code>concatMap</code> and note that <code>postorderG</code> has the required type for the first argument."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 0, "last_activity_date": 1534097659, "last_edit_date": 1534097659, "creation_date": 1534096860, "answer_id": 51811483, "question_id": 51799903, "link": "https://stackoverflow.com/questions/51799903/general-tree-in-haskell-rose-tree-postoder-for-a-rose-tree/51811483#51811483", "title": "General Tree in Haskell = Rose Tree? Postoder for a rose tree?", "body": "<p><code>GTree</code> is a <em>type</em> constructor, not a data constructor; a tree would be created with <code>Node x []</code>, not <code>GTree x</code>.</p>\n\n<p><em>However</em>, you don't need to create a tree at all here. You just need a the <em>value</em> stored at the root of the input tree for the final list in the return value.</p>\n\n<pre><code>postorderG :: GTree a -&gt; [a]\npostorderG (Node x ch) =  concatMap postorderG ch -- [a]\n                          ++ [x]         -- [a], not [GTree a]\n</code></pre>\n\n<p>If you wanted to, you could create a singleton tree to append to <code>ch</code>, the apply <code>postOrderG</code> to each child and the new singleton in order.</p>\n\n<pre><code>postorderG (Node x ch) = concatMap postorderG (ch ++ [Node x []])\n</code></pre>\n\n<p>Taking advantage of the <code>[]</code> monad instead of using <code>concatMap</code>, the RHS would look like either</p>\n\n<pre><code>(ch &gt;&gt;= postorderG) ++ [x]\n</code></pre>\n\n<p>or</p>\n\n<pre><code>(ch ++ [Node x []]) &gt;&gt;= postorderG\n</code></pre>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 313, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1534097659, "creation_date": 1533992079, "question_id": 51799903, "link": "https://stackoverflow.com/questions/51799903/general-tree-in-haskell-rose-tree-postoder-for-a-rose-tree", "title": "General Tree in Haskell = Rose Tree? Postoder for a rose tree?", "body": "<p>I was supposed to create a data structure for a Tree, where every Node has an undefined amount of branches. I am guessing this will be a rose tree. </p>\n\n<pre><code>data GTree a = Node a [GTree a] \n</code></pre>\n\n<p>Now I am supposed to write a postorderG function that will give me a list of all my elements in my general in a postorder sequence\nI wrote this but it does not seem right... Could someone help me?</p>\n\n<pre><code>postorderG :: GTree a -&gt; [a]\npostorderG (Node x l r) = postorder l ++ postorder r ++ [GTree x]\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1533979483, "post_id": 51798202, "comment_id": 90553445, "body": "Great explanation!! I did not realize that ActionT was a monad transformer. I familiarized but just in Scala. Now has complete sense."}], "tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": true, "score": 6, "last_activity_date": 1533979046, "last_edit_date": 1533979046, "creation_date": 1533978736, "answer_id": 51798202, "question_id": 51797955, "link": "https://stackoverflow.com/questions/51797955/return-multiple-monads/51798202#51798202", "title": "Return multiple monads", "body": "<p>Type constructors in Haskell have their own \"kind\" system, which you can think of as a kind of type-system-for-types. The kinds themselves don't have names; instead they are represented as just stars. So:</p>\n\n<pre><code>Integer :: *\nIO :: * -&gt; *\n</code></pre>\n\n<p>(Actually kinds can have names, but that is a more advanced extension; never mind for now)</p>\n\n<p>The <a href=\"http://hackage.haskell.org/package/scotty-0.11.2/docs/Web-Scotty-Trans.html#t:ActionT\" rel=\"noreferrer\"><code>ActionT</code> type constructor</a> in Scotty takes 3 arguments and has kind</p>\n\n<pre><code>ActionT :: * -&gt; (* -&gt; *) -&gt; * -&gt; *\n</code></pre>\n\n<p>The types are:</p>\n\n<ul>\n<li><p>An error type, in this case <code>Text</code>.</p></li>\n<li><p>An \"inner\" monad, which must of course be a type constructor itself taking one argument. If you try passing a <code>Text</code> as this parameter GHC will report a \"kind error\". In this case the inner monad is <code>IO</code>.</p></li>\n<li><p>A return type. <code>ActionT</code> is a monad, so in this case the function you are talking about returns a <code>Maybe User</code> in exactly the same way as your first example does.</p></li>\n</ul>\n\n<p><code>ActionT</code> is a monad transformer: this means it takes an existing monad and layers more functionality on top. This allows the programmer to separate the new functionality from the monad being modified, increasing modularity.</p>\n\n<p>For more insight, study the instances for <code>ActionT</code>. For instance, one of them is</p>\n\n<pre><code> (Monad m, ScottyError e) =&gt; Monad (ActionT e m)\n</code></pre>\n\n<p>This says that if <code>m</code> is an instance of monad and <code>e</code> is an instance of <code>ScottyError</code> then <code>ActionT e m</code> is also an instance of monad. The kind system allows for currying in much the same way as the type system does for function application, so the <code>Monad</code> typeclass knows that it's argument must be of kind <code>* -&gt; *</code>, and behold, <code>ActionT e m</code> does indeed have kind <code>* -&gt; *</code>.</p>\n"}], "owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 51798202, "answer_count": 1, "score": 1, "last_activity_date": 1533979046, "creation_date": 1533976569, "question_id": 51797955, "link": "https://stackoverflow.com/questions/51797955/return-multiple-monads", "title": "Return multiple monads", "body": "<p>I\u00b4m reading some code in Haskell and I cannot understand and found an explanation of how if a function return a IO (whatever) it can have other types before that.</p>\n\n<p>This function it would be clear a Maybe that return a IO Maybe</p>\n\n<blockquote>\n  <p>Maybe User -> IO (Maybe User)</p>\n</blockquote>\n\n<p>But the next one from the scotty library return a monad ActionT of Text of IO Maybe??? My mind is about to explode!</p>\n\n<blockquote>\n  <p>Maybe User -> ActionT Text IO (Maybe User)</p>\n</blockquote>\n"}, {"tags": ["haskell", "scotty"], "answers": [{"comments": [{"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1533990094, "post_id": 51798457, "comment_id": 90555594, "body": "Thanks great explanation and implementation"}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 2, "last_activity_date": 1534006301, "last_edit_date": 1534006301, "creation_date": 1533981007, "answer_id": 51798457, "question_id": 51797793, "link": "https://stackoverflow.com/questions/51797793/do-block-resolve-types/51798457#51798457", "title": "Do block resolve types", "body": "<p>Let's consider the following function:</p>\n\n<pre><code>persistUser :: Maybe User -&gt; ActionT Text IO (Maybe User)\n</code></pre>\n\n<p>A value of type <code>Maybe User</code> is passed as an argument, and we need this user to be inserted into database. In order to do that, we can use <a href=\"https://www.haskell.org/hoogle/?hoogle=%3C%24%3E\" rel=\"nofollow noreferrer\"><code>(&lt;$&gt;)</code></a> (or <code>fmap</code>) function as:</p>\n\n<pre><code>insertUser &lt;$&gt; maybeUser\n</code></pre>\n\n<p>The resulting type is: <code>Maybe (IO User)</code>. Now we need to <a href=\"https://en.wikibooks.org/wiki/Haskell/Monad_transformers#Lifting\" rel=\"nofollow noreferrer\">lift</a> this type to <code>ActionT Text IO (Maybe User)</code> somehow.</p>\n\n<p><code>Web.Scotty.Trans</code> has a <a href=\"http://hackage.haskell.org/package/scotty-0.11.2/docs/Web-Scotty-Trans.html#v:liftAndCatchIO\" rel=\"nofollow noreferrer\">liftAndCatchIO</a> function (also available in <code>Web.Scotty</code> module), which mostly does what we need, but it accepts <code>IO a</code> as an argument, so we need to \"swap\" <code>Maybe</code> and <code>IO</code>. Let's <a href=\"https://www.haskell.org/hoogle/?hoogle=Maybe%20%28IO%20a%29%20-%3E%20IO%20%28Maybe%20a%29\" rel=\"nofollow noreferrer\">find</a> a function for this. So <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Traversable.html#v:sequence\" rel=\"nofollow noreferrer\">sequence</a> does what we need.</p>\n\n<p>As a result, we have the following implementation of <code>persistUser</code> function:</p>\n\n<pre><code>persistUser maybeUser =\n    liftAndCatchIO $ sequence $ insertUser &lt;$&gt; maybeUser\n</code></pre>\n"}], "owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 51798457, "answer_count": 1, "score": 0, "last_activity_date": 1534006301, "creation_date": 1533974995, "question_id": 51797793, "link": "https://stackoverflow.com/questions/51797793/do-block-resolve-types", "title": "Do block resolve types", "body": "<p>I just start coding in Haskell recently and I start getting use of <strong>do block</strong>. I'm coming from Scala world, and after read a book and some blogs I see that <strong>do block</strong> was the inspiration of our from comprehension. But still I\u00b4m struggling with the arguments that pass in every function as input -> output</p>\n\n<p>Here in my code I'm using scotty http server library to get a request and I'm trying to persist that request in mySQL.</p>\n\n<p>But in this line where I try top get the value from the Maybe to send to the another function to be persisted</p>\n\n<blockquote>\n<pre><code>user &lt;- (fmap (\\user -&gt; insertUser user) maybeUser)\n</code></pre>\n</blockquote>\n\n<p>It never compile since the function does not return the expected type</p>\n\n<blockquote>\n  <p>ActionT Text IO (Maybe User)</p>\n</blockquote>\n\n<p>but</p>\n\n<blockquote>\n  <p>IO User</p>\n</blockquote>\n\n<p>Here my hole program</p>\n\n<pre><code>createUser :: ActionM ()\ncreateUser =  do maybeUser &lt;- getUserParam\n                          -- Persist the user\n                          _ &lt;- persistUser\n                          json maybeUser\n\ngetUserParam :: ActionT Text IO (Maybe User)\ngetUserParam = do requestBody &lt;- body\n                  return (decode requestBody)\n\npersistUser :: Maybe User -&gt; ActionT Text IO (Maybe User)\npersistUser _maybeUser = let maybeUser = _maybeUser in do\n                           user &lt;- maybeUser\n                           user &lt;- (fmap (\\user -&gt; insertUser user) maybeUser)\n                           return maybeUser\n\ninsertUser :: User -&gt; IO User\ninsertUser _user = let user = _user in do\n    conn &lt;- createConnection\n    status &lt;- execute conn insertUserQuery [MySQLInt32 (intToInt32 $ getUserId user), MySQLText \"hello_haskell_world\"]\n    return user\n</code></pre>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 3, "creation_date": 1533977474, "post_id": 51797775, "comment_id": 90553008, "body": "What is an object with a single method in Java would be just a function in Haskell."}, {"owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1533980726, "post_id": 51797775, "comment_id": 90553661, "body": "@n.m. What about the state it might carry? What about objects with more than one methods?"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1533980972, "post_id": 51797775, "comment_id": 90553711, "body": "Haskell has partial function application, so e.g. <code>f = (+) 5</code> defines a function <code>f</code> of one argument that carries a state inside (a single value of 5). When applied to an argument, say <code>f x</code>, it returns <code>5 + x</code>. (<code>(+)</code> is a function of <i>two</i> arguments)."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1533981204, "post_id": 51797775, "comment_id": 90553760, "body": "As for several methods, the easiest way to represent such an object is just a record of functions."}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1534038808, "post_id": 51798630, "comment_id": 90565943, "body": "Furthermore, closures and objects are both <i>already</i> examples of existential types, just baked into the language. With a closure, you\u2019re hiding the captured values (like a <code>Button</code>) and presenting an interface that has a function type like <code>MetricQuery -&gt; Int</code>; with an object, you\u2019re hiding the object\u2019s fields (and concrete type) and presenting an interface that has some method signatures like <code>computeValue(q: MetricQuery): Int</code>. That is, a closure is isomorphic to an object with one method, so you can represent an object of one method quite straightforwardly with a closure, like this."}], "tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": true, "score": 4, "last_activity_date": 1533982399, "creation_date": 1533982399, "answer_id": 51798630, "question_id": 51797775, "link": "https://stackoverflow.com/questions/51797775/haskell-counterpart-of-list-of-abstract-class-objects-in-oop/51798630#51798630", "title": "Haskell counterpart of list of abstract class objects in OOP", "body": "<p>Your <code>Metric</code> data type would probably be better as just a type synonym.</p>\n\n<pre><code>Metric a = MetricQuery -&gt; a\n</code></pre>\n\n<p>If your specific metrics carry other information then one way you can get this is by partial application:</p>\n\n<pre><code>buttonClicksMetric :: Button -&gt; Metric Int\nbuttonClicksMetric button query = ....\n</code></pre>\n\n<p>This works because by substitution of the type synonym you can read the type as</p>\n\n<pre><code>buttonClicksMetric :: Button -&gt; MetricQuery -&gt; Int\n</code></pre>\n\n<p>So now you can create a <code>Metric Int</code>  by passing a <code>Button</code> to <code>buttonClicksMetric</code>. Likewise you could create another <code>Metric Int</code> with <code>linkClicksMetric</code> and put them both in a list.</p>\n\n<p>But what if you want to do other things with a <code>buttonClicksMetric</code> which need access to the button, such as showing it. Then you need a data type instead (this design pattern is often called \"reification\" of the function:</p>\n\n<pre><code>newtype ButtonClicksMetric = ButtonClicksMetric {getButton :: Button}\n</code></pre>\n\n<p>(Aside: <code>newtype</code> works almost exactly like <code>data</code>, except that you can only have one field and one constructor, and it has zero runtime cost. There are some subtle differences in the semantics for bottom values that you don't need to worry about here. If you needed more fields in ButtonClicksMetric then you would use <code>data</code>.)</p>\n\n<p>The type of <code>buttonClicksMetric</code> now becomes</p>\n\n<pre><code>buttonClicksMetric :: ButtonClicksMetric -&gt; Metric Int\n</code></pre>\n\n<p>Everything else works just the same.</p>\n"}], "owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 1, "accepted_answer_id": 51798630, "answer_count": 1, "score": 0, "last_activity_date": 1533982399, "creation_date": 1533974815, "last_edit_date": 1533976452, "question_id": 51797775, "link": "https://stackoverflow.com/questions/51797775/haskell-counterpart-of-list-of-abstract-class-objects-in-oop", "title": "Haskell counterpart of list of abstract class objects in OOP", "body": "<p>I'm learning Haskell and come across this question. <strong>Without using existential types</strong>, how do we translate the following OOP pseudocode into Haskell? Not the way to simluate the OOP concept in Haskell, but the proper Haskell way to do it.</p>\n\n<pre><code>class MetricQuery { ... }\n\nabstract class Metric[T] {\n  def computeValue(q: MetricQuery): T\n}\n\nclass LinkClicksMetric extends Metric[Int] { ... }\nclass ButtonClicksMetric extends Metric[Int] { ... }\nclass PostCommentsMetric extends Metric[Int] { ... }\n...\n\nquery: MetricQuery = ...\nmetrics: List[Metric[Int]] = ...\nresults: List[Int] = metrics.map(\\x -&gt; x.computeValue(query))\n</code></pre>\n\n<p>One of my idea is that instead of using a typeclass, we simply make the <code>computeValue</code> function a field of the Haskell datatype:</p>\n\n<pre><code>data MetricQuery = ...\n\ndata Metric a = Metric {\n  computeValue :: MetricQuery -&gt; a\n}\n\nlinkClicksMetric :: Metric Int\nlinkClicksMetric = Metric { computeValue = \\q -&gt; ... }\n\nbuttonClicksMetric :: Metric Int\nbuttonClicksMetric = Metric { computeValue = \\q -&gt; ... }\n\nresults =\n  let query = ...\n      metrics = ...\n   in fmap (\\x -&gt; computeValue x query) metrics\n</code></pre>\n\n<p>I think this could work, just not sure whether this is a \"proper\" Haskell way to do it.</p>\n\n<p>Also, I don't know how I can store additional data (i.e. member variables in OO terms) with a specific metric. I tried to parameterize the metric type constructor with a state type, but that leads to different specific metric types (e.g. <code>Metric Int State1</code> vs. <code>Metric Int State1</code>). One idea is to make a <code>data MetricState = ... | ... | ...</code> and make <code>state :: MetricState</code> a field of <code>Metric</code> so every specific metric can define its own state type.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533974343, "post_id": 51797640, "comment_id": 90552369, "body": "<code>shuffle :: Deck -&gt; Deck</code> states that <code>shuffle</code> is a function from decks to decks, so it will produce the same output deck when given the same input deck. You want <code>shuffle :: Deck -&gt; IO Deck</code> and then probably use <code>do</code> (or <code>&gt;&gt;=</code>, but it could be less convenient) to sequence the side effects. I&#39;d recommend a monad tutorial."}, {"owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533974425, "post_id": 51797640, "comment_id": 90552391, "body": "recommending a tutorial isnt really helpful. also, i need to return a deck from the function, not an <code>IO Deck</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533977446, "post_id": 51797640, "comment_id": 90553000, "body": "You can&#39;t return a deck in Haskell and have it random. Haskell functions are functions -- same input, same output. If you want to use <code>randomIO</code> there&#39;s no way but to return <code>IO Deck</code>. This is a main design feature of Haskell, forcing the programmer to mark &quot;impure&quot; functions as such, by wrapping the result in the <code>IO</code> monad. To use randomness, one either works with <code>IO</code>, or passes around the RNG seed (being very careful not to reuse it twice, otherwise the same &quot;random&quot; numbers will be used twice)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1534026312, "post_id": 51797640, "comment_id": 90564390, "body": "@chi, I would recommend using a <a href=\"http://hackage.haskell.org/package/MonadRandom-0.5.1.1/docs/Control-Monad-Random-Class.html\" rel=\"nofollow noreferrer\"><code>MonadRandom</code></a> constraint or similar. That&#39;ll work with <code>IO</code> and also with <code>RandT</code>."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1534184273, "post_id": 51797640, "comment_id": 90611005, "body": "@dopatraman &quot;recommending a tutorial isnt really helpful. also, i need to return a deck from the function, not an IO Deck&quot; A tutorial would explain why this is impossible without returning an <code>IO Deck</code> (or at least, without taking a random seed/sequence as a parameter)."}, {"owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "edited": false, "score": 0, "creation_date": 1534266105, "post_id": 51797640, "comment_id": 90646217, "body": "Fair, what i meant to say was &quot;recommending a tutorial without a link&quot; isnt helpful. Which tutorial should i read / watch?"}], "answers": [{"tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 2, "last_activity_date": 1534052421, "last_edit_date": 1534052421, "creation_date": 1533977197, "answer_id": 51798029, "question_id": 51797640, "link": "https://stackoverflow.com/questions/51797640/how-can-i-shuffle-a-list-using-a-monad/51798029#51798029", "title": "how can I shuffle a list using a monad?", "body": "<p>Compiler said, that the problem is in <code>(randomN 1)</code>. <code>randomN</code> function is called with an argument, but it doesn't accept one.</p>\n\n<p>Then it couldn't figure out, which type of random number is expected, so we need to provide one here:</p>\n\n<pre><code>randomIO &gt;&gt;= (\\x -&gt; return (x `mod` 52)) :: IO Int\n</code></pre>\n\n<p>Then <code>No instance for (Eq (IO Int))</code> error is received, which actually means, that <code>Int</code> is expected, but <code>IO Int</code> is provided. For convenience, we can swap the arguments of <code>shuffleOnce n c</code> and call this function as:</p>\n\n<pre><code>shuffleOnce c &lt;$&gt; randomN\n</code></pre>\n\n<p>After that, the error says:</p>\n\n<pre><code>Expected type: [Card]\nActual type: IO [Card]\n</code></pre>\n\n<p>We need to use <code>&lt;$&gt;</code> again instead of <code>$</code>, just to get \"inside\" <code>IO</code>:</p>\n\n<pre><code>Deck &lt;$&gt; shuffleOnce c &lt;$&gt; randomN\n</code></pre>\n\n<p>As a result, we receive:</p>\n\n<pre><code>Couldn't match expected type \u2018Deck\u2019 with actual type \u2018IO Deck\u2019\n</code></pre>\n\n<p>We can't do anything about it, but change the type of <code>shuffle</code> function:</p>\n\n<pre><code>shuffle :: Deck -&gt; IO Deck\nshuffle (Deck c) = Deck &lt;$&gt; shuffleOnce c &lt;$&gt; randomN\n    where   randomN = randomIO &gt;&gt;= (\\x -&gt; return (x `mod` 52)) :: IO Int\n            shuffleOnce c n = (findNth n c : deleteNth n c)\n            findNth 0 (x:_) = x\n            findNth n (_:xs) = findNth (n-1) xs\n            deleteNth 0 (_:xs) = xs\n            deleteNth n (x:xs) = x : (deleteNth (n-1) xs)\n</code></pre>\n\n<p>Then we realise, that <code>shuffle</code> is a function with side effects, because it contains random numbers, which are \"received from outside world\". And actually having this information in the type definition seems logical.</p>\n"}], "owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "accepted_answer_id": 51798029, "answer_count": 1, "score": 0, "last_activity_date": 1534052421, "creation_date": 1533973812, "last_edit_date": 1534009352, "question_id": 51797640, "link": "https://stackoverflow.com/questions/51797640/how-can-i-shuffle-a-list-using-a-monad", "title": "how can I shuffle a list using a monad?", "body": "<p>I have these data types:</p>\n\n<pre><code>data Card = Card One | Card Two | ...\ndata Deck = Deck [Card]\n</code></pre>\n\n<p>I want to shuffle the list cards in a deck</p>\n\n<p>Here's where I am so far:</p>\n\n<pre><code>import System.Random\n\nshuffle :: Deck -&gt; Deck\nshuffle (Deck c) = Deck $ shuffleOnce randomN c\n    where   randomN = randomIO &gt;&gt;= (\\x -&gt; return (x `mod` 52))\n            shuffleOnce n c = (findNth n c : deleteNth n c)\n            findNth 0 (x:_) = x\n            findNth n (_:xs) = findNth (n-1) xs\n            deleteNth 0 (_:xs) = xs\n            deleteNth n (x:xs) = x : (deleteNth (n-1) xs)\n</code></pre>\n\n<p>The problem (obviously) is here:</p>\n\n<pre><code>        where   randomN = randomIO &gt;&gt;= (\\x -&gt; return (x `mod` 52))\n</code></pre>\n\n<p>I have no idea how to use the <code>IO</code> monad to generate a random number. Once I wrap the random number from ` to 52 in the monadic context, how do I get it out?</p>\n\n<p>Or better question, how do I actually shuffle the deck?</p>\n\n<p>Please help. full code <a href=\"https://www.reddit.com/r/haskell/comments/94w46f/wrote_a_poker_solver_in_haskell/\" rel=\"nofollow noreferrer\">here</a></p>\n"}, {"tags": ["haskell", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1533929104, "creation_date": 1533929104, "answer_id": 51792935, "question_id": 51792841, "link": "https://stackoverflow.com/questions/51792841/pattern-matching-for-a-new-data/51792935#51792935", "title": "Pattern Matching for a new data", "body": "<p><code>MakeGate</code> does not wrap a Boolean value; it wraps a <em>function</em>. I'm not sure how you would define an <code>Eq</code> instance for <code>Gate</code>, because you can't compare functions for equality. The <em>syntax</em>, though, would be</p>\n\n<pre><code>instance Eq Gate where\n    (MakeGate f) == (MakeGate g) = ???\n</code></pre>\n\n<p>The <code>???</code> would be the actual equality test, but like I said, it's not clear what you would put here, because you can't use, for instance, <code>f == g</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "edited": false, "score": 0, "creation_date": 1533929751, "post_id": 51792936, "comment_id": 90543640, "body": "I try to define the operator &quot;==&quot; by using all the outputs from the possibly inputs"}], "tags": [], "owner": {"reputation": 1159, "user_id": 3953988, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/803352198cc6f048e409a07eefa19d7b?s=128&d=identicon&r=PG", "display_name": "Rahul Manne", "link": "https://stackoverflow.com/users/3953988/rahul-manne"}, "is_accepted": false, "score": 3, "last_activity_date": 1533929104, "creation_date": 1533929104, "answer_id": 51792936, "question_id": 51792841, "link": "https://stackoverflow.com/questions/51792841/pattern-matching-for-a-new-data/51792936#51792936", "title": "Pattern Matching for a new data", "body": "<p>You can't really pattern match functions in Haskell.</p>\n\n<p>MakeGate is a constructor that has the type: (Bool -> Bool -> Bool) -> Gate\nBut you're giving it a Bool (True). MakeGate True doesn't typecheck.</p>\n\n<p>Maybe you meant <code>MakeGate f == MakeGate g = f == g</code> or something like that?</p>\n\n<p>I'm not sure what you're trying to do, but function equivalence isn't trivial and pattern matching is for constructors, not functions.</p>\n\n<p>I think what you really want is\n    data Gate = AndGate | OrGate | ...</p>\n"}, {"tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": false, "score": 1, "last_activity_date": 1533929169, "creation_date": 1533929169, "answer_id": 51792949, "question_id": 51792841, "link": "https://stackoverflow.com/questions/51792841/pattern-matching-for-a-new-data/51792949#51792949", "title": "Pattern Matching for a new data", "body": "<p>You cannot define a meaningful <code>Eq</code> instance on your <code>Gate</code> type, since it contains a function, and <a href=\"https://stackoverflow.com/a/17046172/465378\">functions cannot be compared for equality</a>.</p>\n\n<p>More to the point, though, your question seems confused about a variety of different things about Haskell specifically and higher-order functional programming in general. Consider finding a course, book, or other resource to help you learn in a structured, principled way. (Asking for such resources is off-topic on Stack Overflow, so I will refrain from making specific suggestions here.)</p>\n"}, {"comments": [{"owner": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "edited": false, "score": 0, "creation_date": 1533929894, "post_id": 51793028, "comment_id": 90543691, "body": "seems pretty good. But is it possibly to put the eqGate function into the instace function?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "edited": false, "score": 0, "creation_date": 1533929930, "post_id": 51793028, "comment_id": 90543708, "body": "Yes, by using a <code>where</code> clause."}, {"owner": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "edited": false, "score": 0, "creation_date": 1533930052, "post_id": 51793028, "comment_id": 90543759, "body": "I mean not defining a new function. Just putting the methode of the eqGate function into the instance function instead of defining it seperatly?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "edited": false, "score": 0, "creation_date": 1533930164, "post_id": 51793028, "comment_id": 90543799, "body": "Well you can inline it as well. By writing <code>(MakeGate f) == (MakeGate g) = on (==) ((&lt;*&gt; ft) . (&lt;$&gt; ft)) f g where ft = [False, True]</code>."}, {"owner": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "edited": false, "score": 0, "creation_date": 1533931060, "post_id": 51793028, "comment_id": 90544181, "body": "Thanks! How can I test it?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1533958102, "post_id": 51793028, "comment_id": 90549638, "body": "In addition to a finite input space the functions also need to have an output type with an Eq instance."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1533967796, "last_edit_date": 1533967796, "creation_date": 1533929523, "answer_id": 51793028, "question_id": 51792841, "link": "https://stackoverflow.com/questions/51792841/pattern-matching-for-a-new-data/51793028#51793028", "title": "Pattern Matching for a new data", "body": "<p>You probably want to find out if the two <em>functions</em> that the <code>MakeGate</code> data constructors wrap always produce the same result of the same input.</p>\n\n<p>We can only find this out by performing an exhaustive search: for both functions calculate the result for all possible inputs, and each time comparing the output. We thus could write it like:</p>\n\n<pre><code>type GateFunc = Bool -&gt; Bool -&gt; Bool\n\neqGate :: GateFunc -&gt; GateFunc -&gt; Bool\neqGate f g = f False False == g False False\n          &amp;&amp; f False True == g False True\n          &amp;&amp; f True False == g True False\n          &amp;&amp; f True True == g True True\n</code></pre>\n\n<p>and then write it as:</p>\n\n<pre><code>instance Eq Gate where\n    MakeGate f == MakeGate g = eqGate f g\n</code></pre>\n\n<p>The above is however not very elegant: we can do better by generating lists:</p>\n\n<pre><code>eqGate :: GateFunc -&gt; GateFunc -&gt; Bool\neqGate f g = (f &lt;$&gt; ft &lt;*&gt; ft) == (g &lt;$&gt; ft &lt;*&gt; ft)\n    where ft = [False, True]\n</code></pre>\n\n<p>Or even less code:</p>\n\n<pre><code>import Data.Function(on)\n\neqGate = on (==) ((&lt;*&gt; ft) . (&lt;$&gt; ft))\n    where ft = [False, True]\n</code></pre>\n\n<p>Note that for functions with a small (at least finite!) input space, and an output type that is an instance of <code>Eq</code>, this can be done, but in general one can not compare two functions. Furthermore even if the two functions have a finite input space, it can go wrong (since the functions could get stuck into an infinite loop). Determining whether two functions are equal is an <em>undecidable</em> problem.</p>\n"}], "owner": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 51793028, "answer_count": 4, "score": 1, "last_activity_date": 1595426375, "creation_date": 1533928625, "question_id": 51792841, "link": "https://stackoverflow.com/questions/51792841/pattern-matching-for-a-new-data", "title": "Pattern Matching for a new data", "body": "<p>I created a new type with some functions</p>\n\n<pre><code>data Gate = MakeGate (Bool -&gt; Bool -&gt; Bool)\nandGate = MakeGate (&amp;&amp;)\norGate = MakeGate (||)\n</code></pre>\n\n<p>Now I want to add this type to a new instance of Eq with pattern matching, but I actually get alot of error messages. What I tried so far is</p>\n\n<pre><code>instace Eq Gate where\n    MakeGate True == MakeGate True = True\n</code></pre>\n\n<p>The Error Message is: \"Couldn't match expected type 'Bool -> Bool -> Bool' with actual type 'Bool'\"\nI was thinking that Bool -> Bool -> Bool means something similar to the (&amp;&amp;) or (||) functions. But it doesn't work that way. </p>\n\n<p>What am I missing?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1533933348, "post_id": 51791639, "comment_id": 90545111, "body": "Assuming you are doing this under Linux, you may find <a href=\"https://stackoverflow.com/a/43837250/7203016\">this answer</a> helpful.  In a nutshell, you can use the timezone database in <code>&#47;usr&#47;share&#47;zoneinfo</code> to perform accurate local time conversions.."}, {"owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 0, "creation_date": 1533937176, "post_id": 51791639, "comment_id": 90546282, "body": "You should watch this video on time zones if you have not already: <a href=\"https://www.youtube.com/watch?v=-5wpm-gesOY\" rel=\"nofollow noreferrer\">youtube.com/watch?v=-5wpm-gesOY</a>"}, {"owner": {"reputation": 4588, "user_id": 4126843, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/4r8yp.png?s=128&g=1", "display_name": "PHPirate", "link": "https://stackoverflow.com/users/4126843/phpirate"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1533980295, "post_id": 51791639, "comment_id": 90553586, "body": "@K.A.Buhr Thanks, unfortunately I happen to only have Windows in reach at the moment, but I didn&#39;t know about it - thanks for providing the link for linux users. Will maybe try when I&#39;m at home at linux again ;)"}, {"owner": {"reputation": 4588, "user_id": 4126843, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/4r8yp.png?s=128&g=1", "display_name": "PHPirate", "link": "https://stackoverflow.com/users/4126843/phpirate"}, "reply_to_user": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 0, "creation_date": 1533980780, "post_id": 51791639, "comment_id": 90553672, "body": "@JohnF.Miller Indeed, I&#39;m still hoping that the DST will be removed in Europe, there&#39;s some rumours so who knows..."}], "answers": [{"tags": [], "owner": {"reputation": 4588, "user_id": 4126843, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/4r8yp.png?s=128&g=1", "display_name": "PHPirate", "link": "https://stackoverflow.com/users/4126843/phpirate"}, "is_accepted": true, "score": 3, "last_activity_date": 1533923189, "creation_date": 1533923189, "answer_id": 51791640, "question_id": 51791639, "link": "https://stackoverflow.com/questions/51791639/how-to-find-out-if-its-summer-or-winter-time/51791640#51791640", "title": "How to find out if it&#39;s summer or winter time?", "body": "<p>Because the exact dates on which the timezone changes differ per place, I think you have to write your own function which check this.</p>\n\n<p>I happen to know in Europe summer time starts on the last Sunday of March, and ends at the last Sunday of October. I used this in the function below, it's easy to change for other locations.</p>\n\n<pre><code>import Data.Time.Calendar\nimport Data.Time.Calendar.WeekDate\nimport Data.Tuple.Select\n\n-- | Uses only days, it does not take the exact hour into account at which summer time starts and ends.\nisSummerTime :: Day -- ^ Date to check if summer time is active\n            -&gt; Bool -- ^ Whether summer time is active\nisSummerTime date = date &gt; lastSundayMarch &amp;&amp; date &lt; lastSundayOctober\n    where\n        year = sel1 $ toGregorian date\n        -- Find last Sunday in March\n        aprilOne = fromGregorian year 4 1\n        -- 1 is Monday, ..., 7 is Sunday\n        aprilOneWeekDay = sel3 $ toWeekDate aprilOne\n        -- Use the day number to find Sunday of the previous week: the last Sunday in March\n        lastSundayMarch = addDays (-(toInteger aprilOneWeekDay)) aprilOne\n        -- Same for end of summer time in October\n        novemberOne = fromGregorian year 11 1\n        novemberOneWeekDay = sel3 $ toWeekDate novemberOne\n        lastSundayOctober = addDays (-(toInteger novemberOneWeekDay)) novemberOne\n\nisSummerTime $ fromGregorian 2018 3 25 -- False\nisSummerTime $ fromGregorian 2018 3 26 -- True\nisSummerTime $ fromGregorian 2018 10 27 -- True\nisSummerTime $ fromGregorian 2018 10 28 -- False\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 11631276, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc498583acdf4f6ee147c9e8dd74db56?s=128&d=identicon&r=PG&f=1", "display_name": "lbseale", "link": "https://stackoverflow.com/users/11631276/lbseale"}, "is_accepted": false, "score": 1, "last_activity_date": 1615943164, "creation_date": 1615943164, "answer_id": 66665621, "question_id": 51791639, "link": "https://stackoverflow.com/questions/51791639/how-to-find-out-if-its-summer-or-winter-time/66665621#66665621", "title": "How to find out if it&#39;s summer or winter time?", "body": "<p>I'm writing a program that needs to run on a cloud server on UTC, but care about times in the USA Pacific time zone. I adapted @PHPirate's answer to follow the rules in the USA:</p>\n<ul>\n<li><strong>Start</strong> on the 2nd Sunday of March at 2 AM PST (1000 UTC)</li>\n<li><strong>End</strong> on the 1st Sunday of November at 2 AM PDT (0900 UTC)</li>\n</ul>\n<p>I'm leaving this here for any future Haskellers looking for code to be smart about Daylight Savings</p>\n<pre><code>import Data.Time\nimport Data.Time.Calendar.WeekDate\n\n-- | Get the current time in the Pacific time zone, accounting for Daylight\n-- Savings Time\ngetCurrentTimePacific :: IO ZonedTime \ngetCurrentTimePacific = do\n    rightNow &lt;- getCurrentTime\n    let timeZoneStr = if isDaylightSavings rightNow then &quot;PDT&quot; else &quot;PST&quot;\n        pacificTimeZone = read timeZoneStr\n    return $ utcToZonedTime pacificTimeZone rightNow\n\n-- | Determine whether the USA Pacific time zone is in Daylight Savings time\nisDaylightSavings :: UTCTime -&gt; Bool\nisDaylightSavings utcIn = utcIn &gt;= dstStart &amp;&amp; utcIn &lt; dstEnd\n  where\n    (year, _, _) = toGregorian (utctDay utcIn)\n    (dstStart, dstEnd) = pacificDSTBoundsInUTC year\n\n-- | Start and end boundaries of daylight savings time for Pacific zone, in UTC\npacificDSTBoundsInUTC :: \n       Integer            -- ^ Year for Daylight Savings calculation\n    -&gt; (UTCTime, UTCTime) -- ^ (start, end) of Pacific daylight savings in UTC\npacificDSTBoundsInUTC year = let\n    secondSundayMarch = getNthSundayOfMonth year 3 2\n    firstSundayNovember = getNthSundayOfMonth year 11 1\n    dstChangeTime = TimeOfDay 2 0 0 -- 2 AM\n    toDaylightSavingsPoint = ZonedTime \n        (LocalTime secondSundayMarch dstChangeTime) (read &quot;PST&quot;)\n    fromDaylightSavingsPoint = ZonedTime \n        (LocalTime firstSundayNovember dstChangeTime) (read &quot;PDT&quot;)\n    in\n    (  zonedTimeToUTC toDaylightSavingsPoint\n     , zonedTimeToUTC fromDaylightSavingsPoint) \n\n-- | Get the nth Sunday of a month\ngetNthSundayOfMonth :: \n       Integer -- ^ Year\n    -&gt; Int     -- ^ Month\n    -&gt; Int     -- ^ nth Sunday to get\n    -&gt; Day     -- Day object for nth Sunday\ngetNthSundayOfMonth year month sundayN = let\n    sundayDay = 7\n    firstOfMonth = fromGregorian year month 1\n    (_, _, firstOfMonthWeekDay) = toWeekDate firstOfMonth\n    daysDiffToFirstSunday = sundayDay - firstOfMonthWeekDay\n    daysToAddToFirst = daysDiffToFirstSunday + (sundayN - 1) * sundayDay\n    in\n    addDays (toInteger daysToAddToFirst) firstOfMonth\n</code></pre>\n<p>The core function, which computes the DST bounds, gives these results</p>\n<pre><code>pacificDSTBoundsInUTC 2021 == (2021-03-14 10:00:00 UTC,2021-11-07 09:00:00 UTC)\npacificDSTBoundsInUTC 2020 == (2020-03-08 10:00:00 UTC,2020-11-01 09:00:00 UTC)\npacificDSTBoundsInUTC 2019 == (2019-03-10 10:00:00 UTC,2019-11-03 09:00:00 UTC)\n</code></pre>\n"}], "owner": {"reputation": 4588, "user_id": 4126843, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/4r8yp.png?s=128&g=1", "display_name": "PHPirate", "link": "https://stackoverflow.com/users/4126843/phpirate"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 51791640, "answer_count": 2, "score": 3, "last_activity_date": 1615943164, "creation_date": 1533923189, "question_id": 51791639, "link": "https://stackoverflow.com/questions/51791639/how-to-find-out-if-its-summer-or-winter-time", "title": "How to find out if it&#39;s summer or winter time?", "body": "<p>I want to find out if on a certain <a href=\"https://downloads.haskell.org/~ghc/8.2.1/docs/html/libraries/time-1.8.0.2/Data-Time-Calendar.html#t:Day\" rel=\"nofollow noreferrer\"><code>Day</code></a> (package <code>time</code>) it's summer time or winter time. </p>\n\n<p>I am especially interested in central Europe, where in summer the timezone is CEST = GMT+2 and in winter CEST = GMT+1.</p>\n\n<p>I need it because I need to convert <a href=\"https://aligusnet.github.io/astro-docs/doc/astro-0.4.2.1/Data-Astro-Time-JulianDate.html\" rel=\"nofollow noreferrer\"><code>JulianDate</code></a> (package <code>astro</code>) to local time and back.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533923107, "post_id": 51791582, "comment_id": 90540627, "body": "Are you talking about the <code>Gate</code> or <code>a</code>?"}, {"owner": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533923202, "post_id": 51791582, "comment_id": 90540665, "body": "I am talking about the data Gate"}], "answers": [{"comments": [{"owner": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "edited": false, "score": 0, "creation_date": 1533924124, "post_id": 51791663, "comment_id": 90541049, "body": "Thanks, now I know what a constructor is. But what does &quot;MakeGate :: (Bool-&gt;Bool-&gt;Bool) -&gt; Gate mean? Specially the Gate at the end."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "reply_to_user": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "edited": false, "score": 0, "creation_date": 1533924988, "post_id": 51791663, "comment_id": 90541427, "body": "@Peek It means <code>MakeGate</code> returns a value of type <code>Gate</code>."}], "tags": [], "owner": {"reputation": 4050, "user_id": 3926, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/70ae6f8633cafd248c868d5602084743?s=128&d=identicon&r=PG", "display_name": "nimish", "link": "https://stackoverflow.com/users/3926/nimish"}, "is_accepted": false, "score": 4, "last_activity_date": 1533923275, "creation_date": 1533923275, "answer_id": 51791663, "question_id": 51791582, "link": "https://stackoverflow.com/questions/51791582/new-data-type-but-what-does-it-mean/51791663#51791663", "title": "New Data Type but what does it mean?", "body": "<p><code>data Gate = Gate (Bool-&gt;Bool-&gt;Bool)</code> defines both a type <code>Gate</code> and a constructor of that type, also named <code>Gate</code>.</p>\n\n<p>When you do <code>let a = Gate</code>, Haskell assumes you mean the <code>Gate</code> constructor as that's what <code>let</code> allows you to bind as a value.</p>\n\n<p>The type of the <code>Gate</code> constructor is that of a function that will take a value of type <code>Bool-&gt;Bool-&gt;Bool</code> and return a value of <em>type</em> <code>Gate</code>.</p>\n\n<p>You could do something like <code>data Gate = MakeGate (Bool -&gt; Bool -&gt; Bool)</code> to highlight the difference</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 4, "last_activity_date": 1533927983, "creation_date": 1533927983, "answer_id": 51792711, "question_id": 51791582, "link": "https://stackoverflow.com/questions/51791582/new-data-type-but-what-does-it-mean/51792711#51792711", "title": "New Data Type but what does it mean?", "body": "<p><code>Gate</code> is two things: a type, and a constructor that creates a value of that type. The purpose of the type is to wrap functions of type <code>Bool -&gt; Bool -&gt; Bool</code>. For example:</p>\n\n<pre><code>&gt; data Gate = Gate (Bool-&gt;Bool-&gt;Bool)\n&gt; andGate = Gate (&amp;&amp;)\n&gt; orGate = Gate (||)\n</code></pre>\n\n<p>The <code>Gate</code> data constructor doesn't take <code>Bool</code> values; it takes a single <em>function</em> of type <code>Bool -&gt; Bool -&gt; Bool</code> and \"lifts\" it into the <code>Gate</code> type.</p>\n\n<p>In order to <em>do</em> anything with such a function, you need some way to extract the function from its wrapper.</p>\n\n<pre><code>&gt; getFunc (Gate f) = f\n&gt; (getFunc andGate) True False\nFalse\n</code></pre>\n\n<p>Normally, for performance reasons, you would define a type like this using <code>newtype</code>, not <code>data</code>:</p>\n\n<pre><code>newtype Gate = Gate (Bool -&gt; Bool -&gt; Bool)\n</code></pre>\n\n<p>Practically speaking, the types are the same, but the <code>newtype</code> is more efficient because internally the wrapper will be stripped for you. In either case, you would only define a new type if you wanted to create some specific typeclass instances for <code>Gate</code>; otherwise, you could just define a type alias such as</p>\n\n<pre><code>type Gate = Bool -&gt; Bool -&gt; Bool\n</code></pre>\n"}], "owner": {"reputation": 69, "user_id": 7186295, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/1fb613f488041e7eb30895528221d5c0?s=128&d=identicon&r=PG&f=1", "display_name": "Peek", "link": "https://stackoverflow.com/users/7186295/peek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 51792711, "answer_count": 2, "score": 0, "last_activity_date": 1533927983, "creation_date": 1533922963, "question_id": 51791582, "link": "https://stackoverflow.com/questions/51791582/new-data-type-but-what-does-it-mean", "title": "New Data Type but what does it mean?", "body": "<p>just found a new datatype, but I absolutly don't get what it actually means.</p>\n\n<pre><code>data Gate = Gate (Bool-&gt;Bool-&gt;Bool)\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre><code>let a = Gate\na :: (Bool-&gt;Bool-&gt;Bool)-&gt;Gate\n</code></pre>\n\n<p>First I thought it says that I need two Bools to get a new one, but the :t a says that I need three, doens't it?</p>\n"}, {"tags": ["string", "list", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1533910809, "post_id": 51788472, "comment_id": 90534286, "body": "This looks a rather ugly way to solve it: using negative logic, <code>error</code>s, ... :("}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 2, "creation_date": 1533910863, "post_id": 51788472, "comment_id": 90534323, "body": "Please ask a specific question. If every single part of this code makes no sense to you, this question is probably too broad for StackOverflow."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1533910879, "post_id": 51788472, "comment_id": 90534330, "body": "Would you understand better if it had been written as <code>lookup (x:xs) s = if x == s then 0 else (1 + lookup xs s)</code>?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533911048, "post_id": 51788472, "comment_id": 90534432, "body": "Can you specify what you do not understand about it? The syntax, the types, the recursion, the pattern matching?"}, {"owner": {"reputation": 121, "user_id": 2912069, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/db4c9a583b506ceb7dfaa727ca55e6a6?s=128&d=identicon&r=PG&f=1", "display_name": "Javier Coronel", "link": "https://stackoverflow.com/users/2912069/javier-coronel"}, "edited": false, "score": 0, "creation_date": 1533922945, "post_id": 51788472, "comment_id": 90540564, "body": "I&#39;m sorry if I didn&#39;t elaborate further, as it was did below I was looking for someone to detail every part of the code."}, {"owner": {"reputation": 121, "user_id": 2912069, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/db4c9a583b506ceb7dfaa727ca55e6a6?s=128&d=identicon&r=PG&f=1", "display_name": "Javier Coronel", "link": "https://stackoverflow.com/users/2912069/javier-coronel"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1533924989, "post_id": 51788472, "comment_id": 90541428, "body": "@chepner i was trying your way, it gives me an error in &quot;then 0&quot;. What is wrong?"}], "answers": [{"comments": [{"owner": {"reputation": 121, "user_id": 2912069, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/db4c9a583b506ceb7dfaa727ca55e6a6?s=128&d=identicon&r=PG&f=1", "display_name": "Javier Coronel", "link": "https://stackoverflow.com/users/2912069/javier-coronel"}, "edited": false, "score": 0, "creation_date": 1533922771, "post_id": 51789596, "comment_id": 90540492, "body": "Thank you very much for the answer, it was very helpful, I will make the suggested modifications."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 7, "last_activity_date": 1533914701, "last_edit_date": 1533914701, "creation_date": 1533914333, "answer_id": 51789596, "question_id": 51788472, "link": "https://stackoverflow.com/questions/51788472/haskell-get-the-position-of-an-item-in-a-list/51789596#51789596", "title": "Haskell get the position of an item in a list", "body": "<pre><code>lookUp :: [String] -&gt; String -&gt; Int\nlookUp [] s = error \"...\"  -- An empty list does not contain _anything_, in\n                           -- particular not the string you're looking for.\nlookUp (x:xs) s     -- We've eliminated the empty case, which guarantees there's\n                    -- at least one (head) element in the list if we get here.\n                    -- Let's examine it!\n   | not (x == s) -- If the element isn't the one we were looking for...\n       = 1 + (lookUp xs s)   -- then we need to continue the search, i.e. search\n                             -- through the _remaining_ elements `xs` and, if `s` is\n                             -- found there, report a one higher position (because\n                             -- we've already skipped one element).\n   | otherwise  -- Else, the element _is_ the one we were looking for...\n       = 0   -- IOW, it occurs at position 0 of the (part of) the list we're\n             -- currently examining.\n</code></pre>\n\n<p>Couple more remarks:</p>\n\n<ul>\n<li><p>As Willem Van Onsem commented, the <code>error</code> is a bad idea here: it is a realistic scenario that the list won't contain the element you're looking for, i.e. this is not just an \u201coops, a meteor strike broke the bank tresor\u201d thing but an actual risk you should expect. But <code>error</code> will by default crash the entire program. You should instead return a <code>Maybe Int</code>, which allows you to signal a failure in a way that can easily be handled by the caller.</p>\n\n<pre><code>lookUp :: [String] -&gt; String -&gt; Maybe Int\nlookUp [] _ = Nothing\nlookUp (x:xs) s | not(x == s)  = fmap (1 +) (lookUp xs s)\n                | otherwise    = Just 0\n</code></pre></li>\n<li><p>Nothing in this function actually requires that it's strings that are in the list. It would work just as well with integers, single characters, booleans etc.. Anything that allows equality comparison. Thus, you might as well make the signature</p>\n\n<pre><code>lookUp :: Eq a =&gt; [a] -&gt; a -&gt; Maybe Int\n</code></pre></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 121, "user_id": 2912069, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/db4c9a583b506ceb7dfaa727ca55e6a6?s=128&d=identicon&r=PG&f=1", "display_name": "Javier Coronel", "link": "https://stackoverflow.com/users/2912069/javier-coronel"}, "edited": false, "score": 0, "creation_date": 1533922775, "post_id": 51789670, "comment_id": 90540494, "body": "Thank you very much for the answer, it was very helpful, I really needed everything detailed."}], "tags": [], "owner": {"reputation": 183, "user_id": 1190069, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f6fbc374057ef3b4dc6f80f02442680?s=128&d=identicon&r=PG", "display_name": "mimi.vx", "link": "https://stackoverflow.com/users/1190069/mimi-vx"}, "is_accepted": false, "score": 1, "last_activity_date": 1533914632, "creation_date": 1533914632, "answer_id": 51789670, "question_id": 51788472, "link": "https://stackoverflow.com/questions/51788472/haskell-get-the-position-of-an-item-in-a-list/51789670#51789670", "title": "Haskell get the position of an item in a list", "body": "<pre><code>lookUp :: [String] -&gt; String -&gt; Int\n</code></pre>\n\n<p>function lookUp accepting list of String's and String returning Int</p>\n\n<pre><code>lookUp [] s = error \"String no encontrado\"\n</code></pre>\n\n<p>if first argument is empty string return <code>error ...</code></p>\n\n<pre><code>lookUp (x:xs) s | not(x == s) = 1 + (lookUp xs s)\n                | otherwise = 0\n</code></pre>\n\n<p>interesting part <code>(x:xs)</code> get first string from list, and string \n<code>|</code> is guard, so if string in <code>x</code> isnt equal with <code>s</code> string <code>return 1 + ( lookup xs s)</code> .. ==> recursive call <code>lookUp</code> with <code>xs</code> - list of strings without compared string <code>x</code> and string <code>s</code> as parameter</p>\n\n<p>in the end <code>othervise</code> returns 0</p>\n\n<p>manually:</p>\n\n<p><code>lookUp [] \"foo\"</code> ==> first pattern [] so returns error</p>\n\n<p><code>lookUp [\"foo\"] \"foo\"</code> ==> second pattern and runs guard ==> <code>not( \"foo\" == \"foo\") = 1 + ( lookUp [] \"foo\")</code> , this ends in second line <code>othervise 0</code> so it return correct location <code>0</code></p>\n\n<p><code>lookUp [ \"bar\", \"foa\", \"foo\", \"fao\" ] \"foo\"</code> ==> second pattern and expands to: <code>not ( \"bar\" == \"foo\") return 1 + (lookUp [\"foa\", \"foo\", \"fao\"] \"foo\")</code> then <code>not( \"bar\" == \"foo\") return 1 + (not (\"foa\" == \"foo\") = return 1 + (lookUp [\"foo\", \"fao\"] \"foo\"))</code> then not( \"bar\" == \"foo\") return 1 + (not (\"foa\" == \"foo\") = return 1 + (not(\"foo\" == \"foo\") = return 1 )<code>.. but because now test is *True* uses</code>othervise = 0<code>so</code>1+1 = 2<code>and</code>2` is correct string location in list.</p>\n\n<p>and last possibility:</p>\n\n<p><code>lookUp [\"bar\"] \"foo\"</code> ==>  <code>not(\"bar\" == \"foo\") = return 1 + (lookUp [] \"foo\")</code> and <code>lookUp</code> with empty list throws error</p>\n"}], "owner": {"reputation": 121, "user_id": 2912069, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/db4c9a583b506ceb7dfaa727ca55e6a6?s=128&d=identicon&r=PG&f=1", "display_name": "Javier Coronel", "link": "https://stackoverflow.com/users/2912069/javier-coronel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1298, "favorite_count": 0, "accepted_answer_id": 51789596, "answer_count": 2, "score": 0, "last_activity_date": 1533914701, "creation_date": 1533910568, "last_edit_date": 1533910806, "question_id": 51788472, "link": "https://stackoverflow.com/questions/51788472/haskell-get-the-position-of-an-item-in-a-list", "title": "Haskell get the position of an item in a list", "body": "<p>I'm just starting to learn Haskell and I really have a lot of questions about it. In a tutorial I'm doing I'd need to develop a functionality, in which from a list and a certain String, you will find the String's position in the list. Searching online I found this code but I really don't understand it, someone could explain it to me.</p>\n\n<pre><code>lookUp :: [String] -&gt; String -&gt; Int\nlookUp [] s = error \"String no encontrado\"\nlookUp (x:xs) s | not(x == s) = 1 + (lookUp xs s)\n                | otherwise = 0\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1533903898, "post_id": 51786387, "comment_id": 90529964, "body": "Did you define <code>data Person</code> inside <code>mysteryDude.hs</code>?"}, {"owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "reply_to_user": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1533903982, "post_id": 51786387, "comment_id": 90530020, "body": "No, it&#39;s in another file, in person.hs"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1533904026, "post_id": 51786387, "comment_id": 90530051, "body": "Does <code>mysteryDude.hs</code> import it?"}, {"owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "reply_to_user": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1533904098, "post_id": 51786387, "comment_id": 90530100, "body": "no... I starting to see the problem"}], "answers": [{"tags": [], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "is_accepted": false, "score": 2, "last_activity_date": 1552333845, "last_edit_date": 1552333845, "creation_date": 1533904519, "answer_id": 51786685, "question_id": 51786387, "link": "https://stackoverflow.com/questions/51786387/haskell-load-data-from-script-file/51786685#51786685", "title": "haskell load data from &#39;script&#39; file", "body": "<p>From comments I deduced the problem. <code>:l</code> in ghci forgets all previous <code>:l</code>s and all definitions that you made in REPL. You should either:</p>\n\n<ul>\n<li>Make files import each other (avoiding import cycles). Filenames and module names must match.</li>\n<li><code>import</code> both files in ghci. Again, module names should match the names of files.</li>\n<li>Make all your definitions in REPL's toplevel. You may use multiline snippets surrounding them by <code>:{ :}</code>. Not recommended tho</li>\n</ul>\n"}], "owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 158, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1552333845, "creation_date": 1533903556, "question_id": 51786387, "link": "https://stackoverflow.com/questions/51786387/haskell-load-data-from-script-file", "title": "haskell load data from &#39;script&#39; file", "body": "<p>I have been reading \"learn you haskell for great good\", and in this part:</p>\n\n<p>\"let\u2019s put a string that represents a person in a script and then load that script in GHCi:</p>\n\n<pre><code>mysteryDude = \"Person { firstName =\\\"Michael\\\"\" ++\n                      \", lastName =\\\"Diamond\\\"\" ++ \n                      \", age = 43}\"\n</code></pre>\n\n<p>We wrote our string across several lines like this for increased readability. If we want to read that string, we need to tell Haskell which type we expect in return:</p>\n\n<pre><code>ghci&gt; read mysteryDude :: Person\n</code></pre>\n\n<p>But I don't know how to create the 'script', it's in mysteryDude.hs file, and then I need to load it with <code>&gt;:l mysteryDude.hs</code> \nOr what. But I tried it and I got this error:</p>\n\n<pre><code>*Main&gt; read mysteryDude.hs :: Person\n\n&lt;interactive&gt;:50:23: error:\n    Not in scope: type constructor or class \u2018Person\u2019\n*Main&gt; read mysterDude.hs :: Person\n</code></pre>\n\n<p>I see that in the web <a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses#type-parameters\" rel=\"nofollow noreferrer\">here</a>, they change it, and don't do it in the same way, so, maybe it's an error. </p>\n\n<p>But even if in this example is an error I would like to know how to write a 'script' and load data from it.</p>\n"}, {"tags": ["haskell", "indentation"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 3, "creation_date": 1533900574, "post_id": 51785362, "comment_id": 90527971, "body": "<b>1.</b> Never use tabs, ever. <b>2.</b> Use indentation to group stuff together that belongs together. <b>3.</b> Don&#39;t indent top-level stuff like <code>import</code> and global definitions. (Also don&#39;t use <code>let</code> for these, that&#39;s only needed for <i>local</i> definitions.)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1533902606, "post_id": 51785362, "comment_id": 90529173, "body": "Modern GHC should already warn about tabs. You should avoid them, or be quite disciplined in how tabs are used. Also note that indentation matters only after <code>let, do, where, case of</code>. Inside <code>[ ]</code> there are no rules. Ensure the last <code>]</code> above is indented more than the <code>db</code> after <code>let</code>. (And <code>let</code> is also wrong there...)"}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1533904253, "post_id": 51785362, "comment_id": 90530208, "body": "Oh it was actually because <code>let</code>.I thought you can use it ouside a method.I am sorry for the goose hunt.It can be closed !"}], "answers": [{"tags": [], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "is_accepted": true, "score": 1, "last_activity_date": 1533904276, "creation_date": 1533904276, "answer_id": 51786614, "question_id": 51785362, "link": "https://stackoverflow.com/questions/51785362/how-to-solve-incorrect-indentation-in-haskell/51786614#51786614", "title": "How to solve incorrect Indentation in Haskell", "body": "<p>The problem was using the <code>let</code> keyword outside a method.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 273, "favorite_count": 0, "accepted_answer_id": 51786614, "answer_count": 1, "score": 0, "last_activity_date": 1533904276, "creation_date": 1533899965, "question_id": 51785362, "link": "https://stackoverflow.com/questions/51785362/how-to-solve-incorrect-indentation-in-haskell", "title": "How to solve incorrect Indentation in Haskell", "body": "<p>Hello is there any way to solve this recurrent problem of incorrect indentation in Haskell ? I am using VSCode and many times i just have to put an extra space to be able to compile the module.Is there any way (extension) which can show me how to manage tabs/spaces...etc ?    </p>\n\n<pre><code>module DB where\n        import Company\n        let db= [\n                Company{\n                    compName=\"Siemens\",\n                    year=1912,\n                    employees=[\n                        Employee{age=25,name=\"Stew\",job=Worker},\n                        Employee{age=25,name=\"Michael\",job=Manager,wage=66},\n                        Employee{age=22,name=\"Stew\",job=Worker,wage=33.0},\n                        Employee{age=32,name=\"Dew\",job=Unemployed,wage=0.5},\n                        Employee{age=44,name=\"Drey\",job=Worker,wage=30.0}]\n                },\n                Company{\n                    compName=\"ABB\",\n                    year=1925,\n                    employees=[\n                        Employee{age=18,name=\"Michael\",job=Manager,wage=21},\n                        Employee{age=23,name=\"Rey\",job=Worker,wage=18.5},\n                        Employee{age=55,name=\"Barry\",job=Unemployed,wage=0.7},\n                        Employee{age=64,name=\"Dean\",job=Worker,wage=30.0}]\n                },\n                Company{\n                     compName=\"EATON\",\n                     year=1977,\n                     employees=[\n                        Employee{age=18,name=\"Raynald\",job=Manager,wage=21},\n                        Employee{age=23,name=\"Fitz\",job=Worker,wage=18.5},\n                        Employee{age=55,name=\"Alex\",job=Worker,wage=0.7},\n                        Employee{age=34,name=\"Bob\",job=Worker,wage=23.0},\n                        Employee{age=33,name=\"Odo\",job=Unemployed,wage=24.0}]\n                      }\n             ]\n</code></pre>\n"}, {"tags": ["haskell", "hindley-milner"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1533902865, "post_id": 51785306, "comment_id": 90529323, "body": "That&#39;s a great question. Note that your function <code>f</code> which behaves on <code>[Bool]</code> differently from on other list types <code>[a]</code> can not exist (i.e. can not be written in Haskell) because of <i>parametricity</i>. In Haskell there is no way to write <code>if a==Bool then ...</code> and have an unaltered signature <code>forall a. [a] -&gt; Int</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533903765, "post_id": 51785306, "comment_id": 90529869, "body": "See my answer below. Parametricity can be a bit overwhelming at first, but you can start from the classical &quot;theorems for free&quot; paper by Wadler, which shows nice examples."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533936387, "post_id": 51785306, "comment_id": 90546073, "body": "I don&#39;t have a perfect reference. Parametricity is sometimes affected by bottoms (<code>seq</code>, infinite recursion) but I recall that assuming functions strict one can still have a weaker form of parametricity. (Again, I can&#39;t provide a reference). To completely &quot;break&quot; parametricity, one can use <code>forall a. Typeable a =&gt; [a] -&gt; Int</code> which allows <code>if a==Bool then ...</code> -- but here the type changes, so it is not really broken: we have a type for parametric polymorphism and another one for ad-hoc (non-parametric) polymorphism."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533976881, "post_id": 51785306, "comment_id": 90552873, "body": "No, the extra <code>a</code> argument is not needed at all in Haskell. And even in Coq, you can&#39;t eliminate <code>(a : Type)</code> so there is no &quot;if&quot;. In Coq you would need some argument to eliminate such as <code>forall (a : Type), typeable a -&gt; list a -&gt; int</code> where <code>typeable a</code> is suitably defined, e.g. with an inductive definition."}, {"owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533977361, "post_id": 51785306, "comment_id": 90552976, "body": "@chi Without the extra <code>a</code> the best I found is <code>f l = if typeOf l == typeOf ([True]) then 18 else length l</code>. But then <code>f []</code> crashes with a type error. Do you see an other way ?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533977523, "post_id": 51785306, "comment_id": 90553019, "body": "<code>f []</code> becomes ambiguous since now <code>a</code> matters. Try <code>f ([] :: [Bool])</code> or <code>f ([] :: [Int])</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533982922, "post_id": 51785306, "comment_id": 90554129, "body": "You can also use <code>if typeOf (undefined :: a) == typeOf (undefined :: Bool)</code>. Personally, I often prefer <code>eqT</code> since it triggers GADT refinement, but that&#39;s another issue."}, {"owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533984203, "post_id": 51785306, "comment_id": 90554340, "body": "@chi I couldn&#39;t compile with <code>undefined :: a</code>, it says the famous <code>a</code> is unknown. Can you give the full implementation of <code>f</code> with it ?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1533993506, "post_id": 51785306, "comment_id": 90556483, "body": "Turn on <code>ScopedTypeVariables</code> and then <code>foo :: forall a. Typeable a =&gt; [a]-&gt;Int ; foo xs = if typeOf (undefined :: a) == ...</code>"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1533903667, "creation_date": 1533903667, "answer_id": 51786426, "question_id": 51785306, "link": "https://stackoverflow.com/questions/51785306/haskell-type-checking-and-determinism/51786426#51786426", "title": "Haskell type checking and determinism", "body": "<p>During type inference, such type variables can indeed instantiated to any type. This may be seen as a highly non deterministic step.</p>\n\n<p>GHC, for what it is worth, uses the internal <code>Any</code> type in such cases. For instance, compiling</p>\n\n<pre><code>{-# NOINLINE myLength #-}\nmyLength :: [a] -&gt; Int\nmyLength = length\n\ntest :: Int\ntest = myLength []\n</code></pre>\n\n<p>results in the following Core:</p>\n\n<pre><code>-- RHS size: {terms: 3, types: 4, coercions: 0}\nmyLength [InlPrag=NOINLINE] :: forall a_aw2. [a_aw2] -&gt; Int\n[GblId, Str=DmdType]\nmyLength =\n  \\ (@ a_aP5) -&gt; length @ [] Data.Foldable.$fFoldable[] @ a_aP5\n\n-- RHS size: {terms: 2, types: 6, coercions: 0}\ntest :: Int\n[GblId, Str=DmdType]\ntest = myLength @ GHC.Prim.Any (GHC.Types.[] @ GHC.Prim.Any)\n</code></pre>\n\n<p>where <code>GHC.Prim.Any</code> occurs in the last line.</p>\n\n<p>Now, is that really not deterministic? Well, it does involve a kind of non deterministic step \"in the middle\" of the algorithm, but the final resulting (most general) type is <code>Int</code>, and deterministically so. It does not matter what type we choose for <code>a</code>, we always get type <code>Int</code> at the end.</p>\n\n<p>Of course, getting the same type is not enough: we also want to get the same <code>Int</code> value. I conjecture that it can be proven that, given</p>\n\n<pre><code>f :: forall a. T a\ng :: forall a. T a -&gt; U\n</code></pre>\n\n<p>then</p>\n\n<pre><code>g @ V (f @ V) :: U\n</code></pre>\n\n<p>is the same value whatever type <code>V</code> is. This should be a consequence of <a href=\"http://homepages.inf.ed.ac.uk/wadler/topics/parametricity.html\" rel=\"nofollow noreferrer\">parametricity</a> applied to those polymorphic types.</p>\n"}, {"comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1533927527, "post_id": 51789222, "comment_id": 90542620, "body": "You can do ad-hoc polymorphism (and therefore write your type-dependent function) in Haskell, using a typeclass. If you do this, the type checker will force you to explicitly specify which type you&#39;re using for <code>a</code>."}, {"owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "reply_to_user": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1533929468, "post_id": 51789222, "comment_id": 90543508, "body": "@DarthFennec hum... That seems to contradict the parametricity equation above. Or the type of the function is not <code>forall a. [a] -&gt; Int</code>. Can you give the exact example you&#39;re thinking of?"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1533930782, "post_id": 51789222, "comment_id": 90544067, "body": "You&#39;re correct, sorry I wasn&#39;t clear; if you use a typeclass (let&#39;s call it <code>Foo</code>) to make a type-dependent function, then the type of the function must be <code>forall a. Foo a =&gt; [a] -&gt; Int</code>. If we don&#39;t add the class constraint to <code>a</code>, then yes, parametricity dictates the function cannot be type-dependent."}], "tags": [], "owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "is_accepted": false, "score": 3, "last_activity_date": 1533914262, "last_edit_date": 1533914262, "creation_date": 1533913103, "answer_id": 51789222, "question_id": 51785306, "link": "https://stackoverflow.com/questions/51785306/haskell-type-checking-and-determinism/51789222#51789222", "title": "Haskell type checking and determinism", "body": "<p>To follow-up on Chi's answer, here is the proof that <code>f []</code> cannot depend on the type instances of <code>f</code> and <code>[]</code>. According to Theorems for free (the last article <a href=\"http://homepages.inf.ed.ac.uk/wadler/topics/parametricity.html\" rel=\"nofollow noreferrer\">here</a>),\nfor any types <code>a,a'</code> and any function <code>g :: a -&gt; a'</code>, then</p>\n\n<pre><code>f_a = f_a' . map g\n</code></pre>\n\n<p>where <code>f_a</code> is the instantiation of <code>f</code> on type <code>a</code>, for example in Haskell</p>\n\n<pre><code>f_Bool :: [Bool] -&gt; Int\nf_Bool = f\n</code></pre>\n\n<p>Then if you evaluate the previous equality on <code>[]_a</code>, it yields <code>f_a []_a = f_a' []_a'</code>. In the case of the original question, <code>f_Int []_Int = f_Bool []_Bool</code>.</p>\n\n<p>Some references for parametricity in Haskell would be useful too, because Haskell looks stronger than the polymorphic lambda calculus described in Walder's paper. In particular, this <a href=\"https://en.wikipedia.org/wiki/Parametricity\" rel=\"nofollow noreferrer\">wiki page</a> says parametricity can be broken in Haskell by using the <code>seq</code> function.</p>\n\n<p>The wiki page also says that my type-depending function exists (in other languages than Haskell), it is called <a href=\"https://en.wikipedia.org/wiki/Ad_hoc_polymorphism\" rel=\"nofollow noreferrer\">ad-hoc polymorphism</a>.</p>\n"}], "owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 260, "favorite_count": 2, "accepted_answer_id": 51786426, "answer_count": 2, "score": 7, "last_activity_date": 1533914262, "creation_date": 1533899741, "question_id": 51785306, "link": "https://stackoverflow.com/questions/51785306/haskell-type-checking-and-determinism", "title": "Haskell type checking and determinism", "body": "<p>According to the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch1.html#x6-120001.3\" rel=\"noreferrer\">Haskell 2010 language report</a>, its type checker is based on <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system\" rel=\"noreferrer\">Hindley-Milner</a>. So consider a function <code>f</code> of this type,</p>\n\n<pre><code>f :: forall a. [a] -&gt; Int\n</code></pre>\n\n<p>It could be the length function for instance. According to Hindley-Milner, <code>f []</code> type checks to <code>Int</code>. We can prove this by instantiating the type of <code>f</code> to <code>[Int] -&gt; Int</code>, and the type of <code>[]</code> to <code>[Int]</code>, then conclude that the application <code>([Int] -&gt; Int) [Int]</code> is of type <code>Int</code>.</p>\n\n<p>In this proof, I chose to instantiate types <code>forall a. [a] -&gt; Int</code> and <code>forall a. [a]</code> by substituting <code>Int</code> to <code>a</code>. I can substitute <code>Bool</code> instead, the proof works too. Isn't it strange in Hindley-Milner that we can apply a polymorphic type to another, without specifying which instances we use ?</p>\n\n<p>More specifically, what in Haskell prevents me from using the type <code>a</code> in the implementation of <code>f</code> ? I could imagine that <code>f</code> is a function that equals <code>18</code> on any <code>[Bool]</code>, and equals the usual length function on all other types of lists. In this case, would <code>f []</code> be <code>18</code> or <code>0</code> ? The Haskell report says \"the kernel is not formally specified\", so it's hard to tell.</p>\n"}, {"tags": ["haskell", "instance"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1533890395, "post_id": 51782384, "comment_id": 90522187, "body": "Please post the error message you get or otherwise how the behavior is not what you expect  (it&#39;s an error message though ;-)  This is to help others find your question if they run into a similar problem"}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1533890484, "post_id": 51782384, "comment_id": 90522230, "body": "<b>1.</b> The first line must not be indented. <b>2.</b> Data types&#39; and its constructors&#39; name must have its first letter capitalized."}, {"owner": {"reputation": 670, "user_id": 7781818, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/13f5392f913a0f47fab3e6719bda4b08?s=128&d=identicon&r=PG&f=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/7781818/chris"}, "edited": false, "score": 0, "creation_date": 1533890784, "post_id": 51782384, "comment_id": 90522418, "body": "If I understand this correctly your <code>Eq</code> never returns <code>True</code> because in order to be <code>True</code> the entire list <code>xs</code> would have to be an element of <code>ys</code>  and vice versa which can not happen... maybe implementing it with a fold would work better"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1533890938, "post_id": 51782384, "comment_id": 90522496, "body": "But <code>element xs ys</code> seems to suggest that <code>xs</code> is a list, and <code>ys</code> an element."}, {"owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "edited": false, "score": 0, "creation_date": 1533891171, "post_id": 51782384, "comment_id": 90522612, "body": "Okay that makes sense? How would I change it?"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 4, "last_activity_date": 1533891566, "creation_date": 1533891566, "answer_id": 51782729, "question_id": 51782384, "link": "https://stackoverflow.com/questions/51782384/instance-eq-is-not-working-in-haskell/51782729#51782729", "title": "Instance Eq is not working in Haskell", "body": "<p>Let us first analyze the type of <code>element</code>:</p>\n\n<pre><code>element [] _ = False\nelement (x:xs) y = ( x==y) || element xs y\n</code></pre>\n\n<p>We see that the first item is a list <code>[a]</code> (based on the <code>[]</code> and <code>(:)</code> data constructors). Furthermore we know that the second item has as type the type of the elements of the list, so <code>a</code>, and since we call <code>x == y</code>, there must be an <code>Eq a</code> constraint. So we derive:</p>\n\n<pre><code>element :: Eq a =&gt; [a] -&gt; a -&gt; Bool\n</code></pre>\n\n<p>A very similar builtin function already exists for this: <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:elem\" rel=\"nofollow noreferrer\"><strong><code>elem :: Eq a =&gt; a -&gt; [a] -&gt; Bool</code></strong></a>, so it is probably better to use this one instead.</p>\n\n<p>But let us now look at the instance declaration:</p>\n\n<pre><code>instance Eq (Amount a) where \n    Amount xs == Amount ys = element xs ys && element ys xs</code></pre>\n\n<p>There are two problems here:</p>\n\n<ol>\n<li>we need <code>a</code> to have an <code>Eq</code> type constraint as well, since we need to check if the <em>elements</em> of the list are the same; and</li>\n<li>we call <code>element</code> with <code>xs</code> and <code>ys</code>, but both <code>xs</code> and <code>ys</code> have type <code>[a]</code>, so this will not work.</li>\n</ol>\n\n<p>We thus first need a mechanism to check that <em>all</em> elements of one list occur in the other list. We can check this with the <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:all\" rel=\"nofollow noreferrer\"><strong><code>all :: (a -&gt; Bool) -&gt; [a] -&gt; Bool</code></strong></a> function:</p>\n\n<pre><code>allElem :: Eq a =&gt; [a] -&gt; [a] -&gt; Bool\nallElem xs = all (flip elem xs)\n</code></pre>\n\n<p>So now we can write it like:</p>\n\n<pre><code>instance <b>Eq a =&gt;</b> Eq (Amount a) where \n    Amount xs == Amount ys = <b>allElem xs ys && allElem ys xs</b></code></pre>\n\n<p>Note that the above might still not be exactly what you want for two reasons:</p>\n\n<ol>\n<li>the <em>order</em> of the two lists is not checked, I assume that this is intentional;</li>\n<li>if an element occurs <em>multiple</em> times in the first list, then it does <em>not</em> have to occur that many times in the second list, as long as it occurs at least once we are fine. The length of the two lists can thus be different, and still the two <code>Amount</code>s are considered equal.</li>\n</ol>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 326, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1533891566, "creation_date": 1533890346, "last_edit_date": 1533891220, "question_id": 51782384, "link": "https://stackoverflow.com/questions/51782384/instance-eq-is-not-working-in-haskell", "title": "Instance Eq is not working in Haskell", "body": "<p>So I was given the following data type and I had to write a code that checks if an element is in the list (I think I did this one right).\nAfter this I had to declare instance Eq where it would be True if both of my amount lists would be equal. I was supposed to use the element code I wrote earlier. \nCould someone tell me what I am doing wrong?</p>\n\n<pre><code>   data Amount a = Amount [a] \n\nelement [] _ = False\nelement (x:xs) y = ( x==y) || element xs y\n\ninstance Eq (Amount a) where \n      Amount xs == Amount ys = element xs ys &amp;&amp; element ys xs\n</code></pre>\n\n<p>This is the error message I am receiving</p>\n\n<pre><code> \u2022 Couldn't match expected type \u2018a\u2019 with actual type \u2018[a]\u2019\n      \u2018a\u2019 is a rigid type variable bound by\n        the instance declaration at Probeklausur1.hs:43:10-22\n    \u2022 In the second argument of \u2018element\u2019, namely \u2018ys\u2019\n      In the first argument of \u2018(&amp;&amp;)\u2019, namely \u2018element xs ys\u2019\n      In the expression: element xs ys &amp;&amp; elementS ys xs\n    \u2022 Relevant bindings include\n        ys :: [a] (bound at Probeklausur1.hs:44:27)\n        xs :: [a] (bound at Probeklausur1.hs:44:14)\n        (==) :: Amount a -&gt; Amount a -&gt; Bool\n          (bound at Probeklausur1.hs:44:17)\n   |\n44 |       Amount xs == Amount ys = element xs ys &amp;&amp; elementS ys xs     |                                           ^^\n\nProbeklausur1.hs:44:49: error:\n    \u2022 Variable not in scope: elementS :: [a] -&gt; [a] -&gt; Bool\n    \u2022 Perhaps you meant \u2018element\u2019 (line 40)\n   |\n44 |       Amount xs == Amount ys = element xs ys &amp;&amp; elementS ys xs     |                                                 ^^^^^^^^\n</code></pre>\n"}, {"tags": ["haskell", "functor", "applicative"], "comments": [{"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 2, "creation_date": 1533903347, "post_id": 51777647, "comment_id": 90529614, "body": "Shouldn&#39;t it be &quot;...do in <i>Applicative</i> class&quot;?"}], "answers": [{"comments": [{"owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "edited": false, "score": 0, "creation_date": 1533866593, "post_id": 51777785, "comment_id": 90514011, "body": "The operator x &lt;$&gt; y is the same as pure x &lt;*&gt; y. Is it a typo or exactly what you mean? I think it might be x&lt;*&gt;y, isn&#39;t it?"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "edited": false, "score": 2, "creation_date": 1533866780, "post_id": 51777785, "comment_id": 90514053, "body": "No, there&#39;s no typo. <code>x &lt;$&gt; y</code> is the same as <code>pure x &lt;*&gt; y</code>."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1533879616, "post_id": 51777785, "comment_id": 90517021, "body": "Worth mentioning is this; <code>fmap :: a-&gt;b</code>, while <code>&lt;*&gt; :: f (a -&gt; b)</code>. A nice result of the Applicative typeclass is that you can have a function taking multiple arguments and apply them by using repeated <code>&lt;*&gt;</code>, e.g <code>pure f &lt;*&gt; a &lt;*&gt; b &lt;*&gt; c &lt;*&gt; d .. </code>. Since fmap accepts a pure function, you can not apply multiple <code>fmap</code>s and get it working."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533897871, "post_id": 51777785, "comment_id": 90526454, "body": "\u201cIn this case, <code>f</code> is a type, not a function\u201d \u2013 I&#39;d say it&#39;s closer to being a function than a type. An <i>injective type-level function</i> it is, aka type constructor."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533910621, "post_id": 51777785, "comment_id": 90534183, "body": "@leftaroundabout: That is incorrect, in this case <code>f</code> is actually a type, and it is not a function. There is no logical way that <code>f</code> can be &quot;closer&quot; to being a function. It is not necessary that <code>f</code> be a type constructor\u2026 in fact, there are many functors which are not type constructors, such as <code>Either String</code>. In this case, <code>f</code> is a <i>type variable</i> with kind <code>* -&gt; *</code>. It is incorrect to equate type constructors with &quot;type-level functions&quot;, and recall that while functions in Haskell are values, likewise higher-kinded types are types."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533913036, "post_id": 51777785, "comment_id": 90535659, "body": "@DietrichEpp it can&#39;t be a type since it doesn&#39;t classify a family of (runtime) values. It <i>is</i> a function (though not a Haskell function) because you can apply it to something (a type) and get something well-defined back (another type). You might call it a type-level value (in the same way a Haskell function is a Haskell value), but not a type. A type is something that has kind <code>Type</code> (formerly known as <code>*</code>)."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533915050, "post_id": 51777785, "comment_id": 90536822, "body": "@leftaroundabout: That definition of &quot;type&quot; is the problem then, in Haskell types are not limited to the types of runtime values but include types of other kinds. Please refer to the Haskell report, this usage appears throughout, especially chapter 4."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533915331, "post_id": 51777785, "comment_id": 90536993, "body": "Yes, but that definition is the correct one, whereas the Haskell report is being sloppy with terminology. (And yes, the <code>type</code> keyword is sloppy too.)"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533915984, "post_id": 51777785, "comment_id": 90537359, "body": "@leftaroundabout: In mathematics and computer science you will have to get used to the fact that the same word can mean different things in different contexts and fields, and different groups of people may have their own standard terminology which conflicts with the terminology you learned somewhere else. The idea that there is a single correct definition for &quot;type&quot; is unfounded. Please leave your personal preferences out of this, if you want to change community standards for terminology this is not the place for it."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533916092, "post_id": 51777785, "comment_id": 90537423, "body": "@leftaroundabout: If you find the terminology in the Haskell report sloppy or inconsistent you may wish to write up a defect report about it."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533917393, "post_id": 51777785, "comment_id": 90538070, "body": "Maybe that should be done. The thing is, originally the Haskell report seems to have envisioned kinds to be more a compiler implementation detail that shouldn&#39;t bother the programmer much. You&#39;d basically just distinct \u201cvalue level\u201d and \u201ctype level\u201d and not worry too much that some of the things in type-level land wouldn&#39;t actually be types. But then things turned out different, Haskell went towards dependent typing, and that makes it necessary to be a bit more precise and actually mean <i>type</i> when you say \u201ctype\u201d."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1533919176, "post_id": 51777785, "comment_id": 90538928, "body": "@leftaroundabout: Haskell does not have dependent typing, and I&#39;m not aware of any language extension that adds dependent typing. The reason why &quot;type&quot; seems imprecise is because the phrase &quot;actually mean type when you say &#39;type&#39;&quot; contains an equivocation, and there&#39;s an easy way to avoid equivocation here--you can avoid equivocation by using standard terminology. It seems like you are deliberately avoiding standard terminology and purposefully using non-standard definitions for your terms... using non-standard terminology will naturally make statements seem ambiguous."}], "tags": [], "owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "is_accepted": true, "score": 8, "last_activity_date": 1533865750, "last_edit_date": 1533865750, "creation_date": 1533865436, "answer_id": 51777785, "question_id": 51777647, "link": "https://stackoverflow.com/questions/51777647/what-does-f-a-b-f-a-f-b-exactly-do-in-the-functor-class/51777785#51777785", "title": "what does (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b exactly do in the Functor class", "body": "<blockquote>\n  <p>From my understanding, it takes a function f...</p>\n</blockquote>\n\n<p>Unfortunately this is incorrect. In this case, <code>f</code> is a type, not a function. Specifically, <code>f</code> is a \"higher-kinded type\" with kind <code>* -&gt; *</code>. The type <code>f</code> is the functor.</p>\n\n<p>In this case, <code>f</code> is <code>Maybe</code>. So we can rewrite the function types, specializing them for <code>Maybe</code>:</p>\n\n<pre><code>pure :: a -&gt; Maybe a\n(&lt;*&gt;) :: Maybe (a -&gt; b) -&gt; Maybe a -&gt; Maybe b\n</code></pre>\n\n<p>It starts to become a bit clearer once you get this far. There are a couple different possible definitions for <code>pure</code>, but only one that makes sense:</p>\n\n<pre><code>pure = Just\n</code></pre>\n\n<p>The operator <code>x &lt;$&gt; y</code> is the same as <code>pure x &lt;*&gt; y</code>, so if you write out:</p>\n\n<pre><code>(+) &lt;$&gt; Just 2 &lt;*&gt; Just 3\n</code></pre>\n\n<p>Then we can rewrite it as:</p>\n\n<pre><code>pure (+) &lt;*&gt; pure 2 &lt;*&gt; pure 3\n</code></pre>\n\n<p>Although this technically has a more general type. Working with the functor laws, we know that <code>pure x &lt;*&gt; pure y</code> is the same as <code>pure (x y)</code>, so we get</p>\n\n<pre><code>pure ((+) 2) &lt;*&gt; pure 3\npure ((+) 2 3)\npure (2 + 3)\n</code></pre>\n\n<p>In this case, we <code>a</code> and <code>b</code> are the <em>types</em> but since <code>&lt;*&gt;</code> appears twice they actually have different types in each case.</p>\n\n<p>In the first <code>&lt;*&gt;</code>, <code>a</code> is <code>Int</code> and <code>b</code> is <code>Int -&gt; Int</code>.\nIn the second <code>&lt;*&gt;</code>, both <code>a</code> and <code>b</code> are <code>Int</code>. (Technically you get generic versions of <code>Int</code> but that's not really important to the question.)</p>\n"}, {"tags": [], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "is_accepted": false, "score": 1, "last_activity_date": 1533907763, "creation_date": 1533907763, "answer_id": 51787671, "question_id": 51777647, "link": "https://stackoverflow.com/questions/51777647/what-does-f-a-b-f-a-f-b-exactly-do-in-the-functor-class/51787671#51787671", "title": "what does (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b exactly do in the Functor class", "body": "<p>Applicative functors were introduced to Haskell <em>as applicative style programming <a href=\"http://strictlypositive.org/Idiom.pdf\" rel=\"nofollow noreferrer\">\"Idioms\"</a></em>. Unpacking this phrase, we have \"applicative style programming\"; which is just application of functions to arguments. We also have \"idioms\", or phrases in a language which have a special meaning. For example \"raining cats and dogs\" is an idiom for raining very heavily. Putting them together, applicative functors are function applications with special meaning.</p>\n\n<p>Take for example, following Dietrich Epp's lead, <code>anApplication</code> defined by a function,</p>\n\n<pre><code>anApplication = f a\n  where\n    f = (+2)\n    a = 3\n</code></pre>\n\n<p>and, <code>anIdiomaticApplication</code>, defined with idiomatic application,</p>\n\n<pre><code>anIdiomaticApplication = f &lt;*&gt; a\n   where \n     f = Just (+2)\n     a = Just 3\n</code></pre>\n\n<p>The top level structure of these definitions are similar. The difference? The first has a space--normal function application--and the second has <code>&lt;*&gt;</code>--idiomatic function application. This illustrates how <code>&lt;*&gt;</code> facilitates applicative style: just use <code>&lt;*&gt;</code> in place of a space.</p>\n\n<p>The application, <code>&lt;*&gt;</code>, is idiomatic because it carries a meaning other than just pure function application. By way of exposition, in <code>anIdiomaticApplication</code> we have something like this:</p>\n\n<pre><code> f &lt;*&gt; a :: Maybe (Int -&gt; Int) &lt;*&gt; Maybe Int\n</code></pre>\n\n<p>Here, the <code>&lt;*&gt;</code> in the type is used to represent a type level function* that corresponds to the signature of the real <code>&lt;*&gt;</code>. To the type-<code>&lt;*&gt;</code> we apply the type arguments for <code>f</code> and <code>a</code> (respectively <code>Maybe (Int -&gt; Int)</code> and <code>Maybe Int</code>). After application we have</p>\n\n<pre><code> f &lt;*&gt; a :: Maybe Int\n</code></pre>\n\n<p>As an intermediate step, we can imagine something like</p>\n\n<pre><code> f &lt;*&gt; a :: Maybe ((Int -&gt; Int) _ Int)\n</code></pre>\n\n<p>With <code>_</code> being the type level stand-in for regular function application. </p>\n\n<p>At this point we can finally see the <em>idiom-ness</em> called out. <code>f &lt;*&gt; a</code> is like a normal function application, <code>(Int -&gt; Int) _ Int</code>, in the <code>Maybe</code> context/idiom. So, <code>&lt;*&gt;</code> is just function application that happens within a certain context. </p>\n\n<p>In parting, I'll emphasize that understanding <code>&lt;*&gt;</code> is only partially understanding its use. We can understand that <code>f &lt;*&gt; a</code> is just function application which some extra idiomatic meaning. Due to the Applicative laws, we can also assume that idiomatic application will be somehow sensible.</p>\n\n<p>Don't be surprised, however, if you look at <code>&lt;*&gt;</code> and get confused since there is so little there. We must also be versed in the various Haskell Idioms. For instance, in the <code>Maybe</code> idiom either the function or value may not be present, in which case the output will be <code>Nothing</code>. There are of course, many others, but getting familiar with just <code>Either a</code> and <code>State s</code> should model a wide variety of the different kinds. </p>\n\n<p>*Something like this could actually be made with a closed type family (untested)</p>\n\n<pre><code>type family IdmApp f a where\n   IdmApp (f (a-&gt;b)) a = f b\n</code></pre>\n"}], "owner": {"reputation": 1377, "user_id": 8314628, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0eefa2c64f533d21e1d8f58e4252a1e9?s=128&d=identicon&r=PG&f=1", "display_name": "user8314628", "link": "https://stackoverflow.com/users/8314628/user8314628"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 401, "favorite_count": 0, "accepted_answer_id": 51777785, "answer_count": 2, "score": 1, "last_activity_date": 1533907763, "creation_date": 1533863549, "question_id": 51777647, "link": "https://stackoverflow.com/questions/51777647/what-does-f-a-b-f-a-f-b-exactly-do-in-the-functor-class", "title": "what does (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b exactly do in the Functor class", "body": "<pre><code>class Functor f =&gt; Applicative f where\n       pure :: a -&gt; f a\n       (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>From my understanding, it takes a function f, where another function <code>(a -&gt; b)</code> as its argument, returns a function <code>f</code>. Applying <code>f</code> to <code>a</code> then returns a function <code>f</code> and apply <code>f</code> to <code>b</code>.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>Prelude&gt; (+) &lt;$&gt; Just 2 &lt;*&gt; Just 3\nJust 5\n</code></pre>\n\n<p>But I don't quite understand how it works.</p>\n\n<p>I guess <code>(+)</code> should be <code>f</code>, <code>Just 2</code> and <code>Just 3</code> should be <code>a</code> and <code>b</code> respectively. Then what is <code>(a -&gt; b)</code>? </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1533851271, "post_id": 51775968, "comment_id": 90510869, "body": "<a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/jfp06.pdf\" rel=\"nofollow noreferrer\">Here is a paper</a> that claims to describe the coverage condition and other details about fundeps.  Your question is making me read it :-p"}, {"owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1533851920, "post_id": 51775968, "comment_id": 90511030, "body": "Thank you! I&#39;ll have a read"}, {"owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1537454577, "post_id": 51775968, "comment_id": 91798801, "body": "For future readers seeing this, type families are a much better way of getting similar results."}], "answers": [{"comments": [{"owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "edited": false, "score": 0, "creation_date": 1533853887, "post_id": 51776441, "comment_id": 90511609, "body": "I see! Thank you very much."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1533852814, "creation_date": 1533852814, "answer_id": 51776441, "question_id": 51775968, "link": "https://stackoverflow.com/questions/51775968/undecidable-functional-dependencies/51776441#51776441", "title": "Undecidable functional dependencies", "body": "<p>The <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#instance-termination-rules\" rel=\"nofollow noreferrer\">GHC documentation</a> has this to say about a similar scenario:</p>\n\n<blockquote>\n<pre><code>class Mul a b c | a b -&gt; c where\n  (.*.) :: a -&gt; b -&gt; c\n\ninstance Mul Int Int Int where (.*.) = (*)\ninstance Mul Int Float Float where x .*. y = fromIntegral x * y\ninstance Mul a b c =&gt; Mul a [b] [c] where x .*. v = map (x.*.) v\n</code></pre>\n</blockquote>\n\n<p>(Answerer's note: as with your example, you might think here that in the <code>Mul a b c =&gt; Mul a [b] [c]</code> instance, since <code>a b</code> determines <code>c</code>, it ought to also be the case that <code>a [b]</code> clearly determines <code>[c]</code>.)</p>\n\n<blockquote>\n  <p>The third instance declaration does not obey the coverage condition; and indeed the (somewhat strange) definition:</p>\n\n<pre><code>f = \\ b x y -&gt; if b then x .*. [y] else y\n</code></pre>\n  \n  <p>makes instance inference go into a loop, because it requires the constraint <code>Mul a [b] b</code>.</p>\n</blockquote>\n\n<p>So the coverage condition is explicitly about ruling out cases like yours that <em>look</em> benign but may potentially not be.</p>\n"}], "owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 51776441, "answer_count": 1, "score": 3, "last_activity_date": 1533852814, "creation_date": 1533849808, "question_id": 51775968, "link": "https://stackoverflow.com/questions/51775968/undecidable-functional-dependencies", "title": "Undecidable functional dependencies", "body": "<p>I'm reading through <a href=\"http://strictlypositive.org/CJ.pdf\" rel=\"nofollow noreferrer\">Clowns to the left of me, Jokers to the right</a> and playing around with the Dissection class, and I came across a coverage condition error. Code:</p>\n\n<pre><code>{-# LANGUAGE TypeOperators, MultiParamTypeClasses, FunctionalDependencies #-}\nimport Data.Bifunctor\nimport GHC.Generics\n\ndata Add2 p q x y = L2 (p x y) | R2 (q x y)\n\ninstance (Bifunctor p, Bifunctor q) =&gt; Bifunctor (Add2 p q) where\n  bimap f g (L2 p) = L2 (bimap f g p)\n  bimap f g (R2 q) = R2 (bimap f g q)\n\nclass (Functor p, Bifunctor p') =&gt; Diss p p' | p -&gt; p' where\n\ninstance (Diss p p', Diss q q') =&gt; Diss (p :+: q) (Add2 p' q')\n</code></pre>\n\n<p>GHC error message:</p>\n\n<pre><code>cj.hs:13:10: error:\n    \u2022 Illegal instance declaration for \u2018Diss (p :+: q) (Add2 p' q')\u2019\n        The coverage condition fails in class \u2018Diss\u2019\n          for functional dependency: \u2018p -&gt; p'\u2019\n        Reason: lhs type \u2018p :+: q\u2019 does not determine rhs type \u2018Add2 p' q'\u2019\n        Un-determined variables: p', q'\n        Using UndecidableInstances might help\n    \u2022 In the instance declaration for \u2018Diss (p :+: q) (Add2 p' q')\u2019\n   |\n13 | instance (Diss p p', Diss q q') =&gt; Diss (p :+: q) (Add2 p' q')\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I'm struggling to understand the reason given: I feel that the type <code>p :+: q</code> should determine the rhs type because of the dependencies <code>p -&gt; p'</code> and <code>q -&gt; q'</code> implied by the constraints <code>Diss p p'</code> and <code>Diss q q'</code>. Enabling UndecidableInstances does remove the error, but I'd like to understand why it's necessary in this case.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1533851445, "post_id": 51775829, "comment_id": 90510917, "body": "Your first implementation of <code>potenzsum</code> looks quite odd to me. You really want to add the squares of the last two elements to the sum of all the preceding elements, without squaring them? If so the list-comprehension approach will have to be a bit more complicated."}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1533852164, "post_id": 51775829, "comment_id": 90511108, "body": "After the last xs of power1, add the condition after a comma `odd x&#39;"}, {"owner": {"reputation": 451, "user_id": 6503034, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d905b86d8e26779f9f0feda1510c6b0?s=128&d=identicon&r=PG&f=1", "display_name": "Jordi Jordi", "link": "https://stackoverflow.com/users/6503034/jordi-jordi"}, "edited": false, "score": 0, "creation_date": 1533888468, "post_id": 51775829, "comment_id": 90521265, "body": "into list compreshion at right u put the condition and left what u want to do with the result [x*x | x &lt;- xs, (condition to check (in your case get odds))] example [x^2 | x &lt;- [1..n], odd x]"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1533921530, "post_id": 51775829, "comment_id": 90539979, "body": "You don&#39;t need a base case for <code>ones</code>; <code>[1..0]</code> evaluates to an empty list. Also, <code>ones</code> is a really bad name for this function, as it suggests a (possibly infinite) series of 1s (<code>[1,..]</code>), not an increasing sequence of numbers."}], "answers": [{"tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 4, "last_activity_date": 1533849646, "creation_date": 1533849646, "answer_id": 51775937, "question_id": 51775829, "link": "https://stackoverflow.com/questions/51775829/how-to-use-list-comprehension-in-haskell/51775937#51775937", "title": "How to use list comprehension in Haskell?", "body": "<p>Actually, you did half the job by <code>[x * x | x &lt;- xs]</code>, just replace <code>xs</code> by odd numbers from the previous example:</p>\n\n<pre><code>[x * x | x &lt;- filter odd (ones 6))]\n</code></pre>\n\n<p>And you'll receive a list of squares: <code>[1, 9, 25]</code>, which can be summed by function <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:sum\" rel=\"nofollow noreferrer\">sum</a>:</p>\n\n<pre><code>f n = sum [x * x | x &lt;- filter odd (ones n))]\n</code></pre>\n\n<p>it evaluates to <code>35</code></p>\n\n<p>One more note regarding list comprehension: the iterated elements can be filtered out by specifying conditions, which are called guards. Thus, the code above can be refactored into:</p>\n\n<pre><code>f n = sum [x * x | x &lt;- [1..n], odd x]\n</code></pre>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1355, "favorite_count": 0, "accepted_answer_id": 51775937, "answer_count": 1, "score": 2, "last_activity_date": 1533849646, "creation_date": 1533849054, "question_id": 51775829, "link": "https://stackoverflow.com/questions/51775829/how-to-use-list-comprehension-in-haskell", "title": "How to use list comprehension in Haskell?", "body": "<p>I am trying to teach myself Haskell and I am doing random exercises. \nI was supposed to write a code that will do this 6 = [1*1 + 3*3 + 5*5]= 35\nSo  I had to filter out all odd numbers and then calculate the sum if I multiply every single one with itself. </p>\n\n<pre><code> sumquad n = (potenzsum(filter odd (ones n)))\n     where\n     potenzsum [x] = x*x\n     potenzsum [x,y] = x*x + y*y\n     potenzsum (x:xs) = x + potenzsum xs\n\nones 0 = []\nones x = [ 1 .. x] \n</code></pre>\n\n<p>This code works ;) \nNow I am supposed to do the same thing but with list comprehension (I am allowed to use this list [1...n]</p>\n\n<p>I could only think of this... Could someone help me?</p>\n\n<pre><code>power1 xs = [x*x | x &lt;- xs]\n</code></pre>\n"}, {"tags": ["haskell", "quickcheck"], "answers": [{"comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1533846664, "post_id": 51774110, "comment_id": 90509218, "body": "Or, for a similarly inscrutable implementation using an import of <code>Data.Function.on</code> instead of enabling view patterns: <code>propCheck ns = ((==) `on` ($ coerce ns)) cogsRpm go</code>"}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 7, "last_activity_date": 1533841311, "creation_date": 1533841311, "answer_id": 51774110, "question_id": 51773993, "link": "https://stackoverflow.com/questions/51773993/how-do-i-write-a-quickcheck-property-which-expects-a-non-empty-list-of-non-zero/51774110#51774110", "title": "How do I write a QuickCheck property which expects a non-empty list of non-zero numbers?", "body": "<p>QuickCheck comes bundled with a <a href=\"http://hackage.haskell.org/package/QuickCheck-2.11.3/docs/Test-QuickCheck.html#t:NonEmptyList\" rel=\"noreferrer\"><code>NonEmptyList</code></a> newtype, whose <code>Arbitrary</code> instance only generates non-empty lists. You can combine this with <a href=\"http://hackage.haskell.org/package/QuickCheck-2.11.3/docs/Test-QuickCheck.html#t:NonZero\" rel=\"noreferrer\"><code>NonZero</code></a> to get a non-empty list of non-zero integers:</p>\n\n<pre><code>propCheck :: NonEmptyList (NonZero Int) -&gt; Bool\npropCheck (coerce -&gt; ns) = cogsRpm ns == go ns\n</code></pre>\n\n<p>I'm using <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Coerce.html#v:coerce\" rel=\"noreferrer\"><code>coerce</code></a> in a <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#view-patterns\" rel=\"noreferrer\"><em>view pattern</em></a> to tersely and efficiently turn the <code>NonEmptyList (NonZero Int)</code> back into a regular list of <code>Int</code>s.</p>\n"}], "owner": {"reputation": 479, "user_id": 4496701, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh5.googleusercontent.com/-SST61v329Q0/AAAAAAAAAAI/AAAAAAAAAFM/ihwdZ1nZE7Q/photo.jpg?sz=128", "display_name": "Cliff Stamp", "link": "https://stackoverflow.com/users/4496701/cliff-stamp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 1, "accepted_answer_id": 51774110, "answer_count": 1, "score": 3, "last_activity_date": 1533841556, "creation_date": 1533840797, "last_edit_date": 1533841556, "question_id": 51773993, "link": "https://stackoverflow.com/questions/51773993/how-do-i-write-a-quickcheck-property-which-expects-a-non-empty-list-of-non-zero", "title": "How do I write a QuickCheck property which expects a non-empty list of non-zero numbers?", "body": "<p>This is a hack (<code>cogsRpm</code> is a user supplied function which is supposed to match the output of go):</p>\n\n<pre><code>propCheck ns = cogsRpm (ns ++ [42])  == go (ns ++ [42])\n</code></pre>\n\n<p>I added the 42 to stop quickcheck from generating zero length lists. It also could fail still though because it isn't supposed to have zeroes in there either. </p>\n\n<p>I read the docs, but there are not enough examples for me to parse out how to actually use them. I did manage to get this on another case:</p>\n\n<pre><code>prop_check (Positive x) (Positive y)  = updateHealth x y == if y &gt; x then 0 else x-y\n</code></pre>\n\n<p>Which forces positives, and I tried combining a bunch of things to get <code>listOf1</code> and <code>NonZero</code>, but I could not figure out the syntax, hence the hack to add an element to the list. How can I avoid this hack?</p>\n"}, {"tags": ["haskell", "io", "monads"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1533828833, "post_id": 51770808, "comment_id": 90500613, "body": "You can&#39;t implement <code>IO</code> on your own using only operations guaranteed by the Haskell Report (except, of course, <code>andThen = (&gt;&gt;=)</code>, which doesn&#39;t really address the pedagogical goals). You have to think of <code>IO</code> as built-into-the-compiler magic... because it is. Even the &quot;code&quot; you see when you click source links on Hackage which appears to implement IO eventually bottoms out at calls to things that are even more primitive magic, and which require the existence of the GHC runtime (written in C)."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1533828949, "post_id": 51770808, "comment_id": 90500700, "body": "The IO implementation in base isn&#39;t the real implementation of <code>IO</code>; That all happens through compiler magic. You <i>can</i> implement a sort of fake IO with simulated files and in/outputs and basically make a <code>State</code> using these though."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1533829123, "post_id": 51770808, "comment_id": 90500809, "body": "GHC&#39;s under-the-hood implementation is based on the <i>totally bogus</i> idea that <code>IO</code> is just like a state transformer where the state being transformed is the state of the real world (which has type <code>State# RealWorld</code>). The implementation of <code>ST</code> is similar, but requires the actions run to be polymorphic in the <code>State# s</code>. As it turns out, the fiction works out much less badly for <code>ST</code> than for <code>IO</code> (although we&#39;d need linear types to make it bulletproof). If you seek nice <code>Monad</code> examples that can express <code>IO</code>-like things, I suggest you look at &quot;operational monads&quot;."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 4, "creation_date": 1533829249, "post_id": 51770808, "comment_id": 90500885, "body": "Your <code>andThenIO</code> is too lazy. Consider <code>andThenIO (putStrLn &quot;Hello&quot;) (\\_ -&gt; putStrLn &quot;Goodbye&quot;)</code>: this will just print &quot;Goodbye&quot; and ignore the first <code>putStrLn</code> altogether. That&#39;s usually the danger of <code>unsafePerformIO</code>. You&#39;ll need <code>seq</code> in there to make it work."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1533845429, "post_id": 51770808, "comment_id": 90508710, "body": "@sepp2k Or, more pedantically, we need <code>pseq</code> since we care about evaluation order, which <code>seq</code> does not guarantee (IIRC)."}, {"owner": {"reputation": 243, "user_id": 13679816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b02acae66c6a347786eb93e8cbead85?s=128&d=identicon&r=PG", "display_name": "atravers", "link": "https://stackoverflow.com/users/13679816/atravers"}, "edited": false, "score": 0, "creation_date": 1602158187, "post_id": 51770808, "comment_id": 113635148, "body": "Related: <a href=\"https://stackoverflow.com/questions/10447914/io-implementation-inside-haskell\" title=\"io implementation inside haskell\">stackoverflow.com/questions/10447914/&hellip;</a> ."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1533839034, "post_id": 51772273, "comment_id": 90505934, "body": "I thoroughly approve of <code>IO</code> as a datatype, but I think using existential quantification (with GADT syntax for clarity) is an important enough optimization to be worth introducing even for a beginner. That allows a <code>:&gt;&gt;=</code> or <code>:=&lt;&lt;</code> constructor so <code>&gt;&gt;=</code> takes constant time. Since the <code>IO</code> interface doesn&#39;t allow inspection, that&#39;s sufficient to give good performance up to a constant factor. <code>data IO :: Type -&gt; Type where {Pure :: a -&gt; IO a; (:=&lt;&lt;) :: (a -&gt; IO b) -&gt; IO a -&gt; IO b; PutStr :: String -&gt; IO (); GetLine :: IO String; ...}</code>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1533845333, "post_id": 51772273, "comment_id": 90508675, "body": "@dfeuer I&#39;d tend to agree. Depending on how much FP the beginner has seen so far, that GADT could be a better choice."}, {"owner": {"reputation": 243, "user_id": 13679816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b02acae66c6a347786eb93e8cbead85?s=128&d=identicon&r=PG", "display_name": "atravers", "link": "https://stackoverflow.com/users/13679816/atravers"}, "edited": false, "score": 1, "creation_date": 1596622339, "post_id": 51772273, "comment_id": 111868379, "body": "Ah, the classics live on - this observation is mentioned by <a href=\"https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.91.3579&amp;rep=rep1&amp;type=pdf\" rel=\"nofollow noreferrer\">Wadler</a> and here on SO; see <a href=\"https://stackoverflow.com/questions/6647852/haskell-actual-io-monad-implementation-in-different-language/6706442#6706442\" title=\"haskell actual io monad implementation in different language\">stackoverflow.com/questions/6647852/&hellip;</a>"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 13, "last_activity_date": 1600500806, "last_edit_date": 1600500806, "creation_date": 1533833447, "answer_id": 51772273, "question_id": 51770808, "link": "https://stackoverflow.com/questions/51770808/how-exactly-does-ios-work-under-the-hood/51772273#51772273", "title": "How exactly does `IO`&#39;s &gt;&gt;= work under the hood?", "body": "<p>(Note: this answers to the <em>&quot;how to explain how <code>IO</code> works to a beginner&quot;</em> part. It does NOT attempt to explain the <code>RealWorld#</code> hack GHC uses. Indeed, the latter is not a good way to introduce <code>IO</code>.)</p>\n<p>There are many ways to explain the IO monad to beginners. It is hard because different people mentally associate monads to different ideas. You can use category theory, or describe them as programmable semicolons, or even as <a href=\"https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/\" rel=\"nofollow noreferrer\">burritos</a>.</p>\n<p>Because of this, when I tried to do that in the past, I generally tried many approaches until one of them &quot;clicks&quot; into the mental pattern of the learner. Knowing their background helps a lot.</p>\n<h1>Imperative closures</h1>\n<p>For instance, when the learner is already familiar with some imperative language with closures, e.g. JavaScript, I tend to tell them they can pretend that the whole point of a Haskell program is to generate a JavaScript closure, which is then run using a JavaScript implementation. In this make-believe explanation, a <code>IO T</code> type stands for an opaque type encapsulating a JavaScript closure, which, when run, will produce a value of type <code>T</code>, possibly after causing some side effects -- as JavaScript can do.</p>\n<p>So, a value <code>f :: IO String</code> could be implemented as</p>\n<pre><code>let f = () =&gt; {\n    print(&quot;side effect&quot;);\n    return &quot;result&quot;;\n    };\n</code></pre>\n<p>and <code>g :: IO ()</code> could be implemented as</p>\n<pre><code>let g = () =&gt; {\n    print(&quot;g here&quot;);\n    return {};\n    };\n</code></pre>\n<p>Now, assuming to have such <code>f</code> closure, how to invoke it from Haskell? Well, one can not directly do that, since Haskell wants to keep side effects under control. That is, we can not do <code>f ++ &quot;hi&quot;</code> or <code>f() ++ &quot;hi&quot;</code>.</p>\n<p>Instead, to &quot;invoke a closure&quot; we can bind it to <code>main</code></p>\n<pre><code>main :: IO ()\nmain = g\n</code></pre>\n<p>Indeed, <code>main</code> is the JavaScript closure which is generated by the whole Haskell program, and this will be invoked by the Haskell implementation.</p>\n<p>OK, now the question becomes: &quot;how to invoke more than one closure?&quot;. For that, one can introduce <code>&gt;&gt;</code> and pretend that it is implemented as</p>\n<pre><code>function andThenSimple(f, g) {\n   return () =&gt; {\n      f();\n      return g();\n      };\n}\n</code></pre>\n<p>or, for <code>&gt;&gt;=</code>:</p>\n<pre><code>function andThen(f, g) {\n   return () =&gt; {\n      let x = f();\n      return g(x)();  // pass x, and then invoke the resulting closure\n      };\n}\n</code></pre>\n<p><code>return</code> is easier</p>\n<pre><code>function ret(x) {\n   return () =&gt; x;\n}\n</code></pre>\n<p>These function take a while to explain, but it is not that hard to grasp them if one understands closures.</p>\n<h1>Pure functional (AKA stay free)</h1>\n<p>Another option is to keep everything pure. Or at least as pure as possible. One can pretend that <code>IO a</code> is an opaque type defined as</p>\n<pre><code>data IO a\n   = Return a\n   | Output String (IO a)\n   | Input (String -&gt; IO a)\n   -- ... other IO operations here\n</code></pre>\n<p>and then pretend that the value <code>main :: IO ()</code> is then &quot;run&quot; by some imperative engine later on. A program like</p>\n<pre><code>foo :: IO Int\nfoo = do\n  l &lt;- getLine\n  putStrLn l\n  putStrLn l\n  return (length l)\n</code></pre>\n<p>actually means, according to this interpretation,</p>\n<pre><code>foo :: IO Int\nfoo = Input (\\l -&gt; Output l (Output l (Return (length l))))\n</code></pre>\n<p>Of course here <code>return = Return</code>, and defining <code>&gt;&gt;=</code> is a nice exercise.</p>\n<h1>Currying impurity</h1>\n<p>Forget IO, monads, and all that stuff. One could understand better two simple concepts</p>\n<pre><code>a -&gt; b   -- pure function type\na ~&gt; b   -- impure function type\n</code></pre>\n<p>the latter being a make-believe Haskell type. Most programmers should be able to have a strong intuition about what these types represent.</p>\n<p>Now, in functional programming, we have currying, which is an isomorphism between</p>\n<pre><code>(a, b) -&gt; c\n</code></pre>\n<p>and</p>\n<pre><code>a -&gt; (b -&gt; c)\n</code></pre>\n<p>After some thinking, one can see that impure functions should admit some currying as well. One can indeed be convinced that there should be some isomorphism similar to</p>\n<pre><code>(a, b) ~&gt; c\n   &lt;===&gt;\na ~&gt; (b ~&gt; c)\n</code></pre>\n<p>With some more thought, one can even understand that the first <code>~&gt;</code> in <code>a ~&gt; (b ~&gt; c)</code> is actually inaccurate. The curried function above does not really perform side effects when <code>a</code> alone is being passed -- it is the passing of <code>b</code> which triggers the execution of the original uncurried function, causing side effects.</p>\n<p>So, with this in mind, we can think of the impure currying as</p>\n<pre><code>(a, b) ~&gt; c\n   &lt;===&gt;\na -&gt; (b ~&gt; c)\n--^^-- pure!\n</code></pre>\n<p>As a particular case, we get the isomorphism</p>\n<pre><code>(a, ()) ~&gt; c\n   &lt;===&gt;\na -&gt; (() ~&gt; c)\n</code></pre>\n<p>Further, since <code>(a, ())</code> is isomorphic to <code>a</code> (some more convincing is required here), we can interpret currying as</p>\n<pre><code>a ~&gt; c\n  &lt;===&gt;\na -&gt; (() ~&gt; c)\n</code></pre>\n<p>Now, if we baptize <code>() ~&gt; c</code> as <code>IO c</code>, we get</p>\n<pre><code>a ~&gt; c\n  &lt;===&gt;\na -&gt; IO c\n</code></pre>\n<p>Ah-ha! This tells us that we do not really need the general impure function type <code>a ~&gt; c</code>. As long as we have its special case <code>IO c = () ~&gt; c</code>, we can represent (up to isomorphism) any <code>a ~&gt; c</code> function.</p>\n<p>From here, one can start to draw a mental picture about how <code>IO c</code> should work, and eventually realize its monadic structure. Essentially, this interpretation of <code>IO c</code> is now very similar to the one exploiting closures given above.</p>\n"}], "owner": {"reputation": 2447, "user_id": 2061783, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5fc1d7081d9f24bd0307795baea57d56?s=128&d=identicon&r=PG", "display_name": "danbroooks", "link": "https://stackoverflow.com/users/2061783/danbroooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 296, "favorite_count": 1, "accepted_answer_id": 51772273, "answer_count": 1, "score": 5, "last_activity_date": 1600500806, "creation_date": 1533828327, "question_id": 51770808, "link": "https://stackoverflow.com/questions/51770808/how-exactly-does-ios-work-under-the-hood", "title": "How exactly does `IO`&#39;s &gt;&gt;= work under the hood?", "body": "<p>When explaining a concept like <code>Monad</code>s to a beginner, I think it is helpful to avoid any complicated Haskell terminology, or anything category theory-like. I think a nice way to explain it is to build up a motivation for the function <code>a -&gt; m b</code> with a straightforward type like <code>Maybe</code>:</p>\n\n<pre><code>data Maybe = Just a | Nothing\n</code></pre>\n\n<p>It's all or nothing. But what if we have some functions <code>f :: a -&gt; Maybe b</code> and <code>g :: b -&gt; Maybe c</code> and we want a nice way to combine them?</p>\n\n<pre><code>andThen :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b\nandThen Nothing _ = Nothing\nandThen (Just a) f = f a\n\ncomp :: Maybe Text\ncomp = f a `andThen` g\n  where f g a = etc...\n</code></pre>\n\n<p>You can then move into saying <code>andThen</code> could be defined for a variety of types (eventually forming the monad typeclass)... a compelling next example to me would be <code>IO</code>. But how would you define <code>andThen</code> for <code>IO</code> yourself? This has lead me to a question of my own... my naive implementation of <code>andThenIO</code> would be like so:</p>\n\n<pre><code>andThenIO :: IO a -&gt; (a -&gt; IO b) -&gt; IO b\nandThenIO io f = f (unsafePerformIO io) \n</code></pre>\n\n<p>But I know this isn't what is actually going on when you <code>&gt;&gt;=</code> using <code>IO</code>. Looking at the implementation of <code>bindIO</code> in <code>GHC.Base</code> I see this:</p>\n\n<pre><code>bindIO :: IO a -&gt; (a -&gt; IO b) -&gt; IO b\nbindIO (IO m) k = IO (\\ s -&gt; case m s of (# new_s, a #) -&gt; unIO (k a) new_s)\n</code></pre>\n\n<p>And for <code>unIO</code> this:</p>\n\n<pre><code>unIO :: IO a -&gt; (State# RealWorld -&gt; (# State# RealWorld, a #))\nunIO (IO a) = a\n</code></pre>\n\n<p>Which seems to relate to the <code>ST</code> monad somehow, though my knowledge of <code>ST</code> is next to nothing... I suppose my question is, what exactly is the difference between my naive implementation, and an implementation that uses <code>ST</code>? Is my naive implementation useful given the example or not given it isn't actually going on under the hood (and could be a misleading explanation)</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 4, "creation_date": 1533805991, "post_id": 51762890, "comment_id": 90484924, "body": "<code>ones n = [1..n]</code>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1533819779, "post_id": 51762890, "comment_id": 90494191, "body": "Why would you call this function <code>ones</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533837310, "post_id": 51763331, "comment_id": 90505160, "body": "I think <code>unfoldr</code> is worth mentioning. Also, <code>Num</code> isn&#39;t strictly more general than <code>Enum</code>, as things like <code>Ordering</code> and <code>Bool</code> show."}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1533847983, "post_id": 51763331, "comment_id": 90509723, "body": "<code>scanl</code> is <code>f n = scanl (\\b a -&gt; b+a) 1 $ replicate (n-1) 1</code>"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1533839388, "last_edit_date": 1533839388, "creation_date": 1533806614, "answer_id": 51763331, "question_id": 51762890, "link": "https://stackoverflow.com/questions/51762890/how-can-i-create-my-own-list-in-haskell/51763331#51763331", "title": "How can I create my own list in Haskell?", "body": "<p>There are many ways to do this. Below a non-exhaustive list.</p>\n\n<p>You can use Haskells list ranges:</p>\n\n<pre><code>ones :: (Enum n, Num n) -&gt; n -&gt; [n]\nones n = [1 .. n]\n</code></pre>\n\n<p>You can use the <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:enumFromTo\" rel=\"nofollow noreferrer\"><strong><code>enumFromTo :: Enum a =&gt; a -&gt; a -&gt; [a]</code></strong></a> function:</p>\n\n<pre><code>ones :: (Enum n, Num n) -&gt; n -&gt; [n]\nones = enumFromTo 1\n</code></pre>\n\n<p>Or we can use explicit recursion:</p>\n\n<pre><code>ones :: (Ord n, Num n) =&gt; n -&gt; [n]\nones n = go 1\n    where go i | i &lt;= n = i : go (i+1)\n               | otherwise = []\n</code></pre>\n\n<p>Or by using <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:iterate\" rel=\"nofollow noreferrer\"><strong><code>iterate :: (a -&gt; a) -&gt; a -&gt; [a]</code></strong></a> and <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:take\" rel=\"nofollow noreferrer\"><strong><code>take :: Int -&gt; [a] -&gt; [a]</code></strong></a>:</p>\n\n<pre><code>ones :: Num n =&gt; Int -&gt; [n]\nones n = take n (iterate (1+) 1)\n</code></pre>\n\n<p>Note that not all approaches have the same signature. Some implementations do not require the numerical type to be an instance of the <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Enum\" rel=\"nofollow noreferrer\"><strong><code>Enum</code></strong></a> type class, which can make the function more flexible in the sense that numerical types that can not be enumerated, can still get processed.</p>\n"}], "owner": {"reputation": 119, "user_id": 10162403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf85a35bc01ab9cfd3a3e6bc6c4df7ed?s=128&d=identicon&r=PG&f=1", "display_name": "Gloria95", "link": "https://stackoverflow.com/users/10162403/gloria95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "accepted_answer_id": 51763331, "answer_count": 1, "score": -1, "last_activity_date": 1533839388, "creation_date": 1533805316, "question_id": 51762890, "link": "https://stackoverflow.com/questions/51762890/how-can-i-create-my-own-list-in-haskell", "title": "How can I create my own list in Haskell?", "body": "<p>I would like to create my own list in Haskell where I could put in the number 6 and get the result [1,2,3,4,5,6]</p>\n\n<p>I thought I could write something like</p>\n\n<pre><code>ones :: Int -&gt;  [a]\nones 0 = []\nones n = [n, n-1 ... n==0]\n</code></pre>\n\n<p>Could someone help me?</p>\n"}, {"tags": ["haskell", "time", "dependencies", "hackage", "haskell-time"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533804707, "post_id": 51762596, "comment_id": 90484125, "body": "What are the installed packages, what does it print for <code>cabal freeze</code>?"}, {"owner": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533805764, "post_id": 51762596, "comment_id": 90484786, "body": "Using cabal freeze returns no dependencies... I guess <code>my-project.cabal</code> file is not correctly configured? I put the time library under the : <code>executable my-project-exe</code> part in the <code>build-depends</code> section."}, {"owner": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1533813945, "post_id": 51762596, "comment_id": 90489982, "body": "Just to be clear running <code>cabal freeze</code> only prints <code>Resolving dependencies...</code> and nothing else"}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "edited": false, "score": 1, "creation_date": 1533814957, "post_id": 51762596, "comment_id": 90490634, "body": "time includes ISO8601 at version 1.9., so you need to figure out if your version number."}], "answers": [{"comments": [{"owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "edited": false, "score": 3, "creation_date": 1533818579, "post_id": 51766800, "comment_id": 90493306, "body": "<i>stack</i> pulls dependencies from Stackage by default"}], "tags": [], "owner": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "is_accepted": true, "score": 2, "last_activity_date": 1533895055, "last_edit_date": 1533895055, "creation_date": 1533816970, "answer_id": 51766800, "question_id": 51762596, "link": "https://stackoverflow.com/questions/51762596/using-haskell-time-library-iso8601-format/51766800#51766800", "title": "Using Haskell Time library ISO8601 format", "body": "<p>I finally manage to understand what was going on thanks to Trevor Cook's comment.</p>\n\n<p>Stack pulls dependencies from Stackage by default, which did not contain the latest time package version. So I needed to specify the version to force stack to use Hackage instead of Stackage for my time package resolution by adding an extra-dep in my <code>stack.yaml</code> file:</p>\n\n<pre><code>extra-deps:\n- time-1.9.2\n</code></pre>\n\n<p>After running <code>stack build</code> the compiler was able to find the ISO 8601 Date Format module.</p>\n"}], "owner": {"reputation": 473, "user_id": 2642172, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/bLVR0.jpg?s=128&g=1", "display_name": "MMacphail", "link": "https://stackoverflow.com/users/2642172/mmacphail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 197, "favorite_count": 0, "accepted_answer_id": 51766800, "answer_count": 1, "score": 1, "last_activity_date": 1540633397, "creation_date": 1533804521, "last_edit_date": 1540633397, "question_id": 51762596, "link": "https://stackoverflow.com/questions/51762596/using-haskell-time-library-iso8601-format", "title": "Using Haskell Time library ISO8601 format", "body": "<p>I'm using the Haskell Time Library. I'm trying to use the ISO-8601 <a href=\"https://hackage.haskell.org/package/time-1.9.2/docs/Data-Time-Format-ISO8601.html\" rel=\"nofollow noreferrer\">date formatters</a>.</p>\n\n<p>In my code, I can import the <code>Data.Time</code> module and use it without any problems.\nHowever, when I import the <code>Data.Time.Format.ISO8601</code> functions and definitions I get the following error: <code>Could not find module</code>. </p>\n\n<p>I'm new to Haskell and I'm not confident in my ability to understand dependencies in the package manager yet. I have a Java oriented background.</p>\n"}, {"tags": ["loops", "haskell", "arrows", "fixpoint-combinators"], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533825597, "post_id": 51759186, "comment_id": 90498302, "body": "In the case of something like <code>Kleisli IO</code>, isn&#39;t <code>mfix</code> enough?"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533829595, "post_id": 51759186, "comment_id": 90501151, "body": "@dfeuer Yes, but there are arrows that are not based on monads (which is kind of the point of arrows) that can\u2019t make do with <code>fix</code>. Further, as I was playing around writing this answer, I tried to implement <code>loop</code>y things in terms of <code>fix</code>y things and kept hitting vaguely <code>ArrowApply</code>-shaped roadblocks (and those are related to monads). So, I think that &quot;a <code>fix</code>y thing is enough for arrow <code>a</code>&quot; might even be equivalent to &quot;<code>a</code> is a <code>Kleisli</code> arrow&quot;. We don\u2019t <i>want</i> to be restricted to <code>Kleisli</code> arrows, so we need <code>loop</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533829711, "post_id": 51759186, "comment_id": 90501237, "body": "I just meant that your comment about purity being required was too strong."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533829844, "post_id": 51759186, "comment_id": 90501330, "body": "@dfeuer I meant &quot;pure&quot; in the general sense of &quot;without any context&quot;, not in the more specific sense of &quot;not <code>IO</code>&quot;. I\u2019ll see if I can reword it."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533831541, "post_id": 51759186, "comment_id": 90502281, "body": "You say the process <code>a b b</code> can&#39;t perform <code>IO</code>, but that doesn&#39;t seem right."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533839764, "post_id": 51759186, "comment_id": 90506271, "body": "@dfeuer I said the argument of the hypothetical <code>fix</code>, an <code>a b b</code>, would not be able to perform <code>IO</code>. This is true. In general, it isn\u2019t. We\u2019d like to keep it false even if <code>ArrowLoop a</code>, so <code>ArrowLoop</code> can\u2019t be based on <code>fix</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1533843598, "post_id": 51759186, "comment_id": 90507966, "body": "Oh, sorry, I mixed up <code>fix</code> with <code>fix&#39;</code>."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 8, "last_activity_date": 1533830190, "last_edit_date": 1533830190, "creation_date": 1533791082, "answer_id": 51759186, "question_id": 51758376, "link": "https://stackoverflow.com/questions/51758376/fix-vs-arrowloop/51759186#51759186", "title": "fix vs. ArrowLoop", "body": "<ol>\n<li><p>Well, of course. Every recursive definition can be written with <code>fix</code>:</p>\n\n<pre><code>loop f b = let (c, d) = f (b, d) in c\nloop f b = fst $ let (c, d) = f (b, d) in (c, d)\nloop f b = fst $ let x = f (b, d) in x\nloop f b = fst $ let x = f' x in x\n  where f' (_, d) = f (b, d)\nloop f b = fst $ fix $ f . (b,) . snd\n</code></pre>\n\n<p>And it works the other way around:</p>\n\n<pre><code>fix f = loop (join (,) . f . snd) ()\n</code></pre></li>\n<li><p>The above should convince you that <code>loop</code> and <code>fix</code> are equivalently powerful when talking about <code>(-&gt;)</code>. Why, then, if arrows are meant to generalize functions, is <code>ArrowLoop</code> not defined like so?</p>\n\n<pre><code>class Arrow a =&gt; ArrowLoop a where\n  fix :: a b b -&gt; b\n</code></pre>\n\n<p>Arrows also generalize the notion of \"process\": when <code>Arrow a</code>, <code>a b c</code> is a way to calculate a <code>c</code> from a <code>b</code>. If <code>ArrowLoop</code> was defined to directly generalize <code>fix</code>, then it would be severely crippled. <code>fix</code> would have to \"execute\" the process without any context and directly produce a value of type <code>b</code>, which means the \"process\" <code>a b b</code> cannot e.g. perform <code>IO</code>. Or, consider the arrow</p>\n\n<pre><code>newtype LT i o = LT { runLT :: [i] -&gt; [o] }\n</code></pre>\n\n<p>You\u2019d like it if <code>fix</code> would produce a <code>[b]</code> from a <code>LT b b</code>, but it doesn\u2019t.</p>\n\n<p><code>loop</code> is a way around these restrictions. It takes a process as argument and produces a process as result. In a sense, all the context associated with the first process can be survived in the second, which would not be possible if <code>loop</code> were more like <code>fix</code>.</p>\n\n<p>Note that I can implement an analogue of <code>fix</code> for <code>ArrowLoop</code>s:</p>\n\n<pre><code>-- resulting process ignores its input\nfix' :: ArrowLoop a -- taking an impl of loop as argument\n     =&gt; a b b -&gt; a u b\nfix' f = loop ((id &amp;&amp;&amp; id) . f . arr snd)\n-- take off the outer application to () (application means (-&gt;), after all)\n-- and arrowify: join (,) = id &amp;&amp;&amp; id; snd = arr snd; (Prelude..) = (Control.Category..)\n-- but the RHSs are more general\n</code></pre>\n\n<p>But I don't believe</p>\n\n<pre><code>loop' :: Arrow a =&gt; (forall x u. a x x -&gt; a u x) -- taking an impl of fix' as argument\n      -&gt; a (b, d) (c, d) -&gt; a b c\n</code></pre>\n\n<p>is implementable, so we can\u2019t base <code>ArrowLoop</code> on <code>fix'</code> either.</p></li>\n</ol>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 2, "accepted_answer_id": 51759186, "answer_count": 1, "score": 8, "last_activity_date": 1562456992, "creation_date": 1533785240, "last_edit_date": 1562456992, "question_id": 51758376, "link": "https://stackoverflow.com/questions/51758376/fix-vs-arrowloop", "title": "fix vs. ArrowLoop", "body": "<p>Description of <code>loop</code> from <code>Control.Arrow</code>:</p>\n\n<blockquote>\n  <p>The loop operator expresses computations in which an output value is fed back as input, although the computation occurs only once. It underlies the rec value recursion construct in arrow notation.</p>\n</blockquote>\n\n<p>Its source code, and its instantiation for <code>(-&gt;)</code>:</p>\n\n<pre><code>class Arrow a =&gt; ArrowLoop a where\n    loop :: a (b,d) (c,d) -&gt; a b c\n\ninstance ArrowLoop (-&gt;) where\n    loop f b = let (c,d) = f (b,d) in c\n</code></pre>\n\n<p>This immediately reminds me of <code>fix</code>, the fixpoint combinator:</p>\n\n<pre><code>fix :: (a -&gt; a) -&gt; a\nfix f = let x = f x in x\n</code></pre>\n\n<p>So my question is:</p>\n\n<ol>\n<li>Is it possible to implement that particular <code>loop</code> via <code>fix</code>?</li>\n<li>How are their functionalities different?</li>\n</ol>\n"}]