[{"tags": ["dictionary", "haskell"], "comments": [{"owner": {"reputation": 6008, "user_id": 1983772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2f429722c8167802b89cbe4d324aa1e?s=128&d=identicon&r=PG", "display_name": "Norrius", "link": "https://stackoverflow.com/users/1983772/norrius"}, "edited": false, "score": 3, "creation_date": 1530732882, "post_id": 51179828, "comment_id": 89342233, "body": "Variables are immutable, you can&#39;t really \u201cupdate\u201d them. Once assigned, they do not change. What you have right now can be replaced with: <code>smap = Map.fromList [(&quot;cocoa&quot;, 23), (&quot;pennywise&quot;, 16), (&quot;krusty&quot;, 18)]</code> Can you illustrate why this is not enough?"}, {"owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "reply_to_user": {"reputation": 6008, "user_id": 1983772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2f429722c8167802b89cbe4d324aa1e?s=128&d=identicon&r=PG", "display_name": "Norrius", "link": "https://stackoverflow.com/users/1983772/norrius"}, "edited": false, "score": 0, "creation_date": 1530733099, "post_id": 51179828, "comment_id": 89342299, "body": "Hi Norrius, Later on I want to count how many ways a right angle triangle is equal to a perimeter. So I thought a Map would be a good way to store the distribution counts e.g. p10 -&gt; 5 ways, p15 -&gt; 6 ways etc. So as the program runs, it would increment already discovered perimeters values."}, {"owner": {"reputation": 6008, "user_id": 1983772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2f429722c8167802b89cbe4d324aa1e?s=128&d=identicon&r=PG", "display_name": "Norrius", "link": "https://stackoverflow.com/users/1983772/norrius"}, "edited": false, "score": 0, "creation_date": 1530733523, "post_id": 51179828, "comment_id": 89342437, "body": "You can always create a new map with <code>Map.insert</code> and use it instead."}, {"owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "reply_to_user": {"reputation": 6008, "user_id": 1983772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2f429722c8167802b89cbe4d324aa1e?s=128&d=identicon&r=PG", "display_name": "Norrius", "link": "https://stackoverflow.com/users/1983772/norrius"}, "edited": false, "score": 0, "creation_date": 1530733643, "post_id": 51179828, "comment_id": 89342473, "body": "I thought I was doing that by assigning the Map.insert to cpy. Is there something I am missing."}, {"owner": {"reputation": 6008, "user_id": 1983772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2f429722c8167802b89cbe4d324aa1e?s=128&d=identicon&r=PG", "display_name": "Norrius", "link": "https://stackoverflow.com/users/1983772/norrius"}, "edited": false, "score": 0, "creation_date": 1530734023, "post_id": 51179828, "comment_id": 89342584, "body": "Don&#39;t try to reassign it, just use it, e.g. in recursion do the next function call with it. You can try writing the actual code that does the count first to see where you need it."}, {"owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "reply_to_user": {"reputation": 6008, "user_id": 1983772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2f429722c8167802b89cbe4d324aa1e?s=128&d=identicon&r=PG", "display_name": "Norrius", "link": "https://stackoverflow.com/users/1983772/norrius"}, "edited": false, "score": 0, "creation_date": 1530734102, "post_id": 51179828, "comment_id": 89342600, "body": "Thanks Norrius, I&#39;ll give that a try...!"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1530799298, "post_id": 51179828, "comment_id": 89368028, "body": "Also, a <code>do</code> expression is not simply a trapdoor into some mutable version of Haskell. It&#39;s syntactic sugar for monadic expressions, which simply doesn&#39;t apply here."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1530806885, "post_id": 51179828, "comment_id": 89373133, "body": "It looks like you are trying to use <code>do</code> in <code>newdata</code> for some reason, may I ask you what the reason is?"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1530809712, "post_id": 51180404, "comment_id": 89374664, "body": "I don&#39;t much care for <code>insertWith</code>: it&#39;s too hard to remember the order the arguments get passed to the combining function. If you need a bit more than <code>insert</code>, I think <code>alter</code> offers a nicer API."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 7, "last_activity_date": 1530736121, "creation_date": 1530736121, "answer_id": 51180404, "question_id": 51179828, "link": "https://stackoverflow.com/questions/51179828/updating-items-in-a-haskell-map-how/51180404#51180404", "title": "Updating items in a Haskell Map, how?", "body": "<p>You can not modify a <code>Map</code> in place (since Haskell is a purely functional language) but you can create a new one which is almost equal to the old map, except for a few entries that have been modified.</p>\n\n<p>(Don't worry too much about efficiency: counter-intuitively, the new <code>Map</code> does not require a full copy of the old one.)</p>\n\n<p>For instance, suppose we want to count the frequencies of each character in a string. Let's write a function which, given a char <code>c</code>, increments its count stored inside the <code>Map</code></p>\n\n<pre><code>import qualified Data.Map.Strict as M\n\ncountChar :: Char -&gt; M.Map Char Int -&gt; M.Map Char Int\ncountChar c oldMap = newMap\n   where\n   newMap = M.insertWith (+) c 1 oldMap\n</code></pre>\n\n<p>The <code>newMap</code> variable is not needed, it is shown above for clarity.</p>\n\n<p>The function <code>insertWith</code> makes the new map so that at index <code>c</code> it stores 1, if there is no value in the old map, or <code>1 + x</code> if there is a previous value <code>x</code> in the old map.</p>\n\n<p>To handle a full string, we use recursion:</p>\n\n<pre><code>countString :: String -&gt; M.Map Char Int\ncountString \"\"     = M.empty\ncountString (c:cs) = countChar c (countString cs)\n</code></pre>\n\n<p>Small test in GHCi:</p>\n\n<pre><code>&gt; countString \"here's an example\"\nfromList [(' ',2),('\\'',1),('a',2),('e',4),('h',1),('l',1),('m',1)\n         ,('n',1),('p',1),('r',1),('s',1),('x',1)]\n</code></pre>\n\n<p>For a more advanced solution, <code>countString</code> could also be rewritten as a fold, if wanted. Using a left strict fold would also improve efficiency.</p>\n\n<pre><code>countString = foldl' (flip countChar) M.empty\n</code></pre>\n\n<p>One could even use a state monad to avoid passing around the <code>Map</code>. If you are learning Haskell, don't worry about this, and start by learning how to solve these kinds of tasks using recursion, pattern matching, and a few library functions for <code>Map</code>s.</p>\n"}, {"tags": [], "owner": {"reputation": 49, "user_id": 8032145, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZhdmO.jpg?s=128&g=1", "display_name": "wul", "link": "https://stackoverflow.com/users/8032145/wul"}, "is_accepted": false, "score": 2, "last_activity_date": 1531066372, "last_edit_date": 1531066372, "creation_date": 1531044766, "answer_id": 51230944, "question_id": 51179828, "link": "https://stackoverflow.com/questions/51179828/updating-items-in-a-haskell-map-how/51230944#51230944", "title": "Updating items in a Haskell Map, how?", "body": "<p>Haskell is a pure functional language. You can not modify a variable in place. But with state monad and lens, Haskell can be the best imperative language. Here is an example.</p>\n\n<pre><code>import Control.Lens\nimport Data.Map\nimport Control.Monad.State\n\nexample :: State (Map String Int) Int\nexample = do\n    -- set value\n    at \"pennywise\" ?= 16\n    at \"krusty\" ?= 18\n    -- get value\n    Just krusty &lt;- use $ at \"krusty\"\n    pure krusty\n\nmain :: IO ()\nmain = do\n    let r = evalState example empty\n    print r\n</code></pre>\n\n<p>Lens provides a common interface to operate with data structures like Map, that's why I love it.</p>\n\n<p>Another example:</p>\n\n<pre><code>countString :: String -&gt; Map Char Int\ncountString str = flip execState empty $\n    forM_ str $ \\c -&gt; \n        at c %= Just . maybe 1 (+1)\n\n-- countString \"asasdsas\"\n-- fromList [('a',3),('d',1),('s',4)]\n</code></pre>\n"}], "owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2645, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1531066372, "creation_date": 1530732214, "last_edit_date": 1530806050, "question_id": 51179828, "link": "https://stackoverflow.com/questions/51179828/updating-items-in-a-haskell-map-how", "title": "Updating items in a Haskell Map, how?", "body": "<p>I am new to Haskell and am trying to figure out a sensible\nway to write to Maps (in preparation for solving a particular\nEuler project problem)</p>\n\n<p>I hope to write a function that would populate\na Map with a record. But I can't get it to work.</p>\n\n<p><code>let</code> seems to create local variables instead of<br>\ntreating <code>smap</code> as a global.</p>\n\n<p>There must be a some way to do this.</p>\n\n<p>My code:</p>\n\n<pre><code>import Data.Map (Map)\nimport qualified Data.Map as Map \n\nsmap = Map.fromList [(\"cocoa\",23)]\n\n\nnewdata str n = do  \n   let cpy  = Map.insert str n  smap\n   cpy \n\nmain = do\n     let smap = newdata \"pennywise\" 16  \n     let smap = newdata \"krusty\" 18  \n</code></pre>\n\n<p><em>update from comments:</em> Later on I want to count how many ways a right angle triangle is equal to a perimeter. So I thought a Map would be a good way to store the distribution counts e.g. p10 -> 5 ways, p15 -> 6 ways etc. So as the program runs, it would increment already discovered perimeters values.</p>\n"}, {"tags": ["haskell", "haskell-platform"], "comments": [{"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 0, "creation_date": 1530739425, "post_id": 51177745, "comment_id": 89344203, "body": "this seems to be a similar issue (there are hints at how to fix it in the link): <a href=\"https://github.com/commercialhaskell/stack/issues/1012\" rel=\"nofollow noreferrer\">github.com/commercialhaskell/stack/issues/1012</a> ... but maybe you already read this, because I just googled the error message :)"}], "answers": [{"tags": [], "owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "is_accepted": false, "score": 0, "last_activity_date": 1532054278, "creation_date": 1532054278, "answer_id": 51434280, "question_id": 51177745, "link": "https://stackoverflow.com/questions/51177745/not-loading-shared-libraries-error-when-trying-to-run-ghc-after-installing-haske/51434280#51434280", "title": "Not loading shared libraries error when trying to run ghc after installing Haskell Platform", "body": "<p>The ghc distributed with the platform links against libtinfo.so.5 and apparently your system doesn't have it. Depending on the details of your distro, you might be able to install the compat package for this, or use the advice in <a href=\"https://forums.opensuse.org/showthread.php/446927-missing-library-libtinfo-so-5\" rel=\"nofollow noreferrer\">https://forums.opensuse.org/showthread.php/446927-missing-library-libtinfo-so-5</a> or <a href=\"https://github.com/Valloric/YouCompleteMe/issues/778\" rel=\"nofollow noreferrer\">https://github.com/Valloric/YouCompleteMe/issues/778</a></p>\n"}], "owner": {"reputation": 51, "user_id": 5588079, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a9476fd0e5f27fe95e8d84bb200f4c9?s=128&d=identicon&r=PG&f=1", "display_name": "ajnieset", "link": "https://stackoverflow.com/users/5588079/ajnieset"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 501, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1532054278, "creation_date": 1530721177, "question_id": 51177745, "link": "https://stackoverflow.com/questions/51177745/not-loading-shared-libraries-error-when-trying-to-run-ghc-after-installing-haske", "title": "Not loading shared libraries error when trying to run ghc after installing Haskell Platform", "body": "<p>I just installed Haskell platform core from the tar ball on my Antergos install and when i try to run ghc i get an error </p>\n\n<pre><code>`/usr/local/haskell/ghc-8.4.3-x86_64/lib/ghc-8.4.3/bin/ghc: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory`\n</code></pre>\n\n<p>not sure if this is something i can resolve or something that is an issue with haskell platform.</p>\n"}, {"tags": ["haskell", "typeclass"], "answers": [{"comments": [{"owner": {"reputation": 83, "user_id": 4606672, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/448748565273403/picture?type=large", "display_name": "shegeley", "link": "https://stackoverflow.com/users/4606672/shegeley"}, "edited": false, "score": 0, "creation_date": 1530710834, "post_id": 51174748, "comment_id": 89332397, "body": "&#171;Ambiguous type variable \u2018s0\u2019 arising from a use of \u2018proxyMain\u2019 prevents the constraint \u2018(HStream s0)\u2019 from being solved. Probable fix: use a type annotation to specify what \u2018s0\u2019 should be. These potential instances exist: instance HStream String -- Defined in \u2018Network.TCP\u2019 &#187;  Problem with proxyMain def"}, {"owner": {"reputation": 83, "user_id": 4606672, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/448748565273403/picture?type=large", "display_name": "shegeley", "link": "https://stackoverflow.com/users/4606672/shegeley"}, "edited": false, "score": 0, "creation_date": 1530712008, "post_id": 51174748, "comment_id": 89333130, "body": "Is it a package problem?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 83, "user_id": 4606672, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/448748565273403/picture?type=large", "display_name": "shegeley", "link": "https://stackoverflow.com/users/4606672/shegeley"}, "edited": false, "score": 3, "creation_date": 1530712198, "post_id": 51174748, "comment_id": 89333272, "body": "@GrigoryShepelev It is not a package problem. You just need to choose an instance of <code>HStream</code> and tell the compiler about your choice. For example, you could write <code>proxyMain (def :: Settings String)</code>. Or the more modern way: turn on <code>TypeApplications</code> and write <code>proxyMain @String def</code>."}, {"owner": {"reputation": 83, "user_id": 4606672, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/448748565273403/picture?type=large", "display_name": "shegeley", "link": "https://stackoverflow.com/users/4606672/shegeley"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1530712363, "post_id": 51174748, "comment_id": 89333383, "body": "@DanielWagner thank you. I&#39;ve been trying to cast like this: <code>proxyMain (def :: HStream)</code> unsuccessfully"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 2, "last_activity_date": 1530712809, "last_edit_date": 1530712809, "creation_date": 1530710481, "answer_id": 51174748, "question_id": 51173907, "link": "https://stackoverflow.com/questions/51173907/using-haskell-class-default-from-external-packages-example-request/51174748#51174748", "title": "Using haskell class &#171;Default&#187; from external packages: example request", "body": "<p><code>def</code> is just a predefined <code>Settings s</code> object (its definition doesn't care about which type <code>s</code> might be needed), not a function. Just pass it like you would any other value (but, as Daniel Wagner points out, with a concrete type, as <code>def</code> is a <em>polymorphic constant</em>).</p>\n\n<pre><code>proxyMain (def :: Settings Foo)\n-- Or, using the TypeApplication extension\n-- proxyMain @Foo def\n</code></pre>\n\n<p>(where <code>Foo</code> is whatever type with an <code>HStream</code> instance you are using).</p>\n\n<p><code>forall s . HStream s</code> is a constraint (the <code>forall s</code> is optional; it could have been written <code>proxyMain :: HStream s =&gt; Settings s -&gt; IO ()</code>). In theory, once could create a value of type <code>Settings Int</code>. Without the constraint, <code>proxyMain</code> would accept that as its argument. Assuming that <code>Int</code> is not an instance of <code>HStream</code>, the constraint would prevent <code>proxyMain</code> from accepting it.</p>\n"}], "owner": {"reputation": 83, "user_id": 4606672, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/448748565273403/picture?type=large", "display_name": "shegeley", "link": "https://stackoverflow.com/users/4606672/shegeley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "accepted_answer_id": 51174748, "answer_count": 1, "score": -1, "last_activity_date": 1530712809, "creation_date": 1530707856, "question_id": 51173907, "link": "https://stackoverflow.com/questions/51173907/using-haskell-class-default-from-external-packages-example-request", "title": "Using haskell class &#171;Default&#187; from external packages: example request", "body": "<p>Trying to start haskell proxy server <a href=\"http://hackage.haskell.org/package/haxy-1.0.1/docs/Network-HTTP-Proxy-Server.html\" rel=\"nofollow noreferrer\">\u00abhaxy\u00bb</a>. With</p>\n\n<pre><code>proxyMain :: forall s. HStream s =&gt; Settings s -&gt; IO ()\n</code></pre>\n\n<p>and</p>\n\n<pre><code>class Default a where\n    A class for types with a default value.\n    Methods\n        def :: a\n            The default value for this type.\n    Instances\n        Default (Cache s), Default (Settings s) \n</code></pre>\n\n<p>Main question is: how do I pass the default settings to <code>proxyMain</code>?</p>\n\n<p>And the minor one: what is <code>:: forall s. HStream s =&gt;</code> as part of function?</p>\n"}, {"tags": ["list", "haskell", "monads"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1530705731, "post_id": 51172904, "comment_id": 89329132, "body": "You wrote it yourself. <code>(&gt;&gt;|) xs f = [ y | x &lt;-xs, y &lt;- f x]</code>. This is <b>not</b> &quot;application ... to each element&quot; of the original list, this is something else. Application to each element would be <code>map f xs = [f x |  x &lt;- xs]</code>."}, {"owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1530705874, "post_id": 51172904, "comment_id": 89329208, "body": "Yes, looks like I have not understood how <code>[ y | x &lt;-xs, y &lt;- f x]</code> works"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1530706000, "post_id": 51172904, "comment_id": 89329304, "body": "It should be helpful to write down the types of x, xs, y and f x in that expression."}], "answers": [{"comments": [{"owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "edited": false, "score": 0, "creation_date": 1530705732, "post_id": 51173179, "comment_id": 89329133, "body": "But how does it work in terms of the <code>Applicative</code> and <code>Monadd</code> instances that I have defined? Or rather how is <code>join</code> implemented in terms of <code>purea</code> <code>app</code> and <code>(&gt;&gt;|)</code>?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "edited": false, "score": 0, "creation_date": 1530706192, "post_id": 51173179, "comment_id": 89329424, "body": "Well, by joining the elementwise-apply result. I think you didn&#39;t realise that the list comprehension does that (see edit, I showed how <code>join</code> can be implemented with a comprehension)."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1530706040, "last_edit_date": 1530706040, "creation_date": 1530705586, "answer_id": 51173179, "question_id": 51172904, "link": "https://stackoverflow.com/questions/51172904/haskell-monad-how-does-monad-on-list-work/51173179#51173179", "title": "Haskell Monad - How does Monad on list work?", "body": "<p>Monads are often easier understood with the \u201cmathematical definition\u201d, than with the methods of the Haskell standard class. Namely,</p>\n\n<pre><code>class Applicative' m =&gt; Monadd m where\n  join :: m (m a) -&gt; m a\n</code></pre>\n\n<p>Note that you can implement the standard version in terms of this, vice versa:</p>\n\n<pre><code>join mma = mma &gt;&gt;= id\n\nma &gt;&gt;= f = join (fmap f ma)\n</code></pre>\n\n<p>For lists, <code>join</code> (aka <code>concat</code>) is particularly simple:</p>\n\n<pre><code>join :: [[a]] -&gt; [a]\njoin xss = [x | xs &lt;- xss, x &lt;- xs]  -- xss::[[a]], xs::[a]\n-- join [[1],[2]] \u2261 [1,2]\n</code></pre>\n\n<p>For the example you find confusing, you'd have</p>\n\n<pre><code>[1,2,3,4] &gt;&gt;= \\x-&gt;[(x+1)]\n  \u2261   join $ fmap (\\x-&gt;[(x+1)]) [1,2,3,4]\n  \u2261   join [[1+1], [2+1], [3+1], [4+1]]\n  \u2261   join [[2],[3],[4],[5]]\n  \u2261   [2,3,4,5]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1612544046, "post_id": 51176886, "comment_id": 116808726, "body": "there is no cheating though. LCs happen to be equivalent to the monadic code, but <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-420003.11\" rel=\"nofollow noreferrer\">are defined separately</a>."}], "tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": true, "score": 3, "last_activity_date": 1530773847, "last_edit_date": 1530773847, "creation_date": 1530717667, "answer_id": 51176886, "question_id": 51172904, "link": "https://stackoverflow.com/questions/51172904/haskell-monad-how-does-monad-on-list-work/51176886#51176886", "title": "Haskell Monad - How does Monad on list work?", "body": "<p><a href=\"http://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf\" rel=\"nofollow noreferrer\">Wadler</a>, <a href=\"https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell/13-the-list-monad\" rel=\"nofollow noreferrer\">School of Haskell</a>, <a href=\"http://learnyouahaskell.com/a-fistful-of-monads\" rel=\"nofollow noreferrer\">LYAH</a>, <a href=\"https://wiki.haskell.org/Monads_as_containers\" rel=\"nofollow noreferrer\">HaskellWiki</a>, <a href=\"https://www.quora.com/Why-is-list-a-monad-in-Haskell-and-how-does-one-understand-it-as-a-monad\" rel=\"nofollow noreferrer\">Quora</a> and many more describe the list monad.</p>\n\n<p>Compare:</p>\n\n<ul>\n<li><code>(=&lt;&lt;) :: Monad m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b</code> for lists with</li>\n<li><a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:concatMap\" rel=\"nofollow noreferrer\"><code>concatMap :: (a -&gt; [b]) -&gt; [a] -&gt; [b]</code></a> for <code>m = []</code>.</li>\n</ul>\n\n<p>The regular <code>(&gt;&gt;=)</code> bind operator has the arguments flipped, but is otherwise just an infix <code>concatMap</code>.</p>\n\n<blockquote>\n  <p>Or quite simply my confusion seems to stem from not understanding how this statement actually works:</p>\n\n<pre><code>(&gt;&gt;|) xs f = [ y | x &lt;- xs, y &lt;- f x ]\n</code></pre>\n</blockquote>\n\n<p>Since list comprehensions are equivalent to the Monad instance for lists, this definition is kind of cheating. You're basically saying that something is a Monadd in the way that it's a Monad, so you're left with two problems: Understanding list comprehensions, and still understanding Monad.</p>\n\n<p>List comprehensions can be de-sugared for a better understanding:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/8029046/removing-syntactic-sugar-list-comprehension-in-haskell\">Removing syntactic sugar: List comprehension in Haskell</a></li>\n</ul>\n\n<p>In your case, the statement could be written in a number of other ways:</p>\n\n<ul>\n<li><p>Using do-notation:</p>\n\n<pre><code>(&gt;&gt;|) xs f = do x &lt;- xs\n                y &lt;- f x\n                return y\n</code></pre></li>\n<li><p>De-sugared into using the <code>(&gt;&gt;=)</code> operator:</p>\n\n<pre><code>(&gt;&gt;|) xs f = xs &gt;&gt;= \\x -&gt;\n             f x &gt;&gt;= \\y -&gt;\n             return y\n</code></pre></li>\n<li><p>This can be shortened (one rewrite per line):</p>\n\n<pre><code>  (&gt;&gt;|) xs f = xs &gt;&gt;= \\x -&gt; f x &gt;&gt;= \\y -&gt; return y -- eta-reduction\n\u2261 (&gt;&gt;|) xs f = xs &gt;&gt;= \\x -&gt; f x &gt;&gt;= return         -- monad identity\n\u2261 (&gt;&gt;|) xs f = xs &gt;&gt;= \\x -&gt; f x                    -- eta-reduction\n\u2261 (&gt;&gt;|) xs f = xs &gt;&gt;= f                            -- prefix operator\n\u2261 (&gt;&gt;|) xs f = (&gt;&gt;=) xs f                          -- point-free\n\u2261 (&gt;&gt;|) = (&gt;&gt;=)\n</code></pre></li>\n</ul>\n\n<p>So from using list comprehensions, you haven't really declared a new definition, you're just relying on the existing one. If you wanted, you could instead define your <code>instance Monadd []</code> without relying on existing Monad instances or list comprehensions:</p>\n\n<ul>\n<li><p>Using <code>concatMap</code>:</p>\n\n<pre><code>instance Monadd [] where\n  (&gt;&gt;|) xs f = concatMap f xs\n</code></pre></li>\n<li><p>Spelling that out a little more:</p>\n\n<pre><code>instance Monadd [] where\n  (&gt;&gt;|) xs f = concat (map f xs)\n</code></pre></li>\n<li><p>Spelling that out even more:</p>\n\n<pre><code>instance Monadd [] where\n  (&gt;&gt;|) [] f = []\n  (&gt;&gt;|) (x:xs) f = let ys = f x in ys ++ ((&gt;&gt;|) xs f)\n</code></pre></li>\n</ul>\n\n<p>The Monadd type class should have something similar to <code>return</code>. I'm not sure why it's missing.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1559163261, "last_edit_date": 1559163261, "creation_date": 1530725467, "answer_id": 51178620, "question_id": 51172904, "link": "https://stackoverflow.com/questions/51172904/haskell-monad-how-does-monad-on-list-work/51178620#51178620", "title": "Haskell Monad - How does Monad on list work?", "body": "<p><a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-420003.11\" rel=\"nofollow noreferrer\">List comprehensions</a> are just like nested loops:</p>\n\n<pre><code>   xs &gt;&gt;| foo = [ y | x &lt;- xs, y &lt;- foo x]\n\n--            =   for x in xs:\n--                         for y in (foo x):\n--                               yield y\n</code></pre>\n\n<p>Thus we have</p>\n\n<pre><code>[1,2,3,4] &gt;&gt;| (\\x -&gt; [x, x+10])\n=\n[ y | x &lt;- [1,2,3,4], y &lt;- (\\x -&gt; [x, x+10]) x]\n=\n[ y | x &lt;- [1] ++ [2,3,4], y &lt;- [x, x+10]]\n=\n[ y | x &lt;- [1], y &lt;- [x, x+10]] ++ [ y | x &lt;- [2,3,4], y &lt;- [x, x+10]]  -- (*)\n=\n[ y |           y &lt;- [1, 1+10]]   ++ [ y | x &lt;- [2,3,4], y &lt;- [x, x+10]]\n=\n[ y | y &lt;- [1]] ++ [ y | y &lt;- [11]] ++ [ y | x &lt;- [2,3,4], y &lt;- [x, x+10]]\n=\n[1] ++ [11] ++ [ y | x &lt;- [2,3,4], y &lt;- [x, x+10]]\n=\n[1, 11] ++ [2, 12] ++ [ y | x &lt;- [3,4], y &lt;- [x, x+10]]\n=\n[1, 11] ++ [2, 12] ++ [3, 13] ++ [ y | x &lt;- [4], y &lt;- [x, x+10]]\n=\n[1, 11] ++ [2, 12] ++ [3, 13] ++ [4, 14]\n</code></pre>\n\n<p>The crucial step is marked <code>(*)</code>. You can take it as the definition of what list comprehensions <em>are</em>.</p>\n\n<p>A special case is when the <code>foo</code> function returns a singleton list, like in your question. Then it is indeed tantamount to <em>mapping</em>, as each element in the input list is turned into <em>one</em> (transformed) element in the output list.</p>\n\n<p>But list comprehensions are more powerful. An input element can also be turned conditionally into no elements (working as a <em>filter</em>), or several elements:</p>\n\n<pre><code>  [ a,          [a1, a2] ++        concat [ [a1, a2],         [  a1, a2,\n    b,    ==&gt;   [b1]     ++    ==           [b1],        ==      b1,\n    c,          []       ++                 [],\n    d ]         [d1, d2]                    [d1, d2] ]           d1, d2  ]\n</code></pre>\n\n<p>The above is equivalent to </p>\n\n<pre><code>    concat (map foo [a,b,c,d]) \n    =  \n    foo a ++ foo b ++ foo c ++ foo d\n</code></pre>\n\n<p>for some appropriate <code>foo</code>. </p>\n\n<p><code>concat</code> is list monad's <code>join</code>, and <code>map</code> is list monad's <code>fmap</code>. In general, for any monad,</p>\n\n<pre><code>    m &gt;&gt;= foo  =  join (fmap foo m)\n</code></pre>\n\n<p>The essence of Monad is: from each entity \"in\" a \"structure\", conditionally producing new elements in the same kind of structure, and splicing them in-place:</p>\n\n<pre><code>[     a     ,  b   ,  c  ,    d      ]\n    /   \\      |      |     /   \\\n[  [a1, a2] , [b1] ,  [] , [d1, d2]  ]  -- fmap foo    = [foo x | x &lt;- xs]\n                                        --             =     [y | x &lt;- xs, y &lt;- [foo x]]\n[   a1, a2  ,  b1  ,        d1, d2   ]  -- join (fmap foo) = [y | x &lt;- xs, y &lt;-  foo x ]\n</code></pre>\n\n\n"}], "owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "accepted_answer_id": 51176886, "answer_count": 3, "score": 2, "last_activity_date": 1564991092, "creation_date": 1530704716, "last_edit_date": 1564991092, "question_id": 51172904, "link": "https://stackoverflow.com/questions/51172904/haskell-monad-how-does-monad-on-list-work", "title": "Haskell Monad - How does Monad on list work?", "body": "<p>In order to understand Monad, I came up with the following definitions:</p>\n\n<pre><code>class Applicative' f where\n purea :: a -&gt; f a\n app :: f (a-&gt;b) -&gt; f a -&gt; f b\n\nclass Applicative' m =&gt;  Monadd m where\n (&gt;&gt;|) :: m a -&gt; (a -&gt; m b) -&gt; m b\n\ninstance Applicative' [] where\n purea x = [x]\n app gs xs = [g x | g &lt;- gs, x &lt;- xs]\n\ninstance Monadd [] where\n (&gt;&gt;|) xs f = [ y | x &lt;-xs, y &lt;- f x]\n</code></pre>\n\n<p>It works as expected:</p>\n\n<pre><code>(&gt;&gt;|) [1,2,3,4] (\\x-&gt;[(x+1)])\n[2,3,4,5]\n</code></pre>\n\n<p>I am not sure how it is working though. \nFor example: </p>\n\n<pre><code>[ y | y &lt;- [[1],[2]]]\n[[1],[2]]\n</code></pre>\n\n<p>How does application <code>(\\x-&gt;([x+1])</code> to each list element of <code>[1,2,3]</code> result in <code>[2,3,4]</code> and not <code>[[2],[3],[4]]</code></p>\n\n<p>Or quite simply my confusion seems to stem from not understanding how this statement <code>[ y | x &lt;-xs, y &lt;- f x]</code> actually works</p>\n"}, {"tags": ["haskell", "variadic-functions"], "comments": [{"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "edited": false, "score": 0, "creation_date": 1530694585, "post_id": 51168945, "comment_id": 89321944, "body": "What behaviour do you want on <code>run</code> being given the wrong number of arguments for a function? Some sort of run-time error?"}, {"owner": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "reply_to_user": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "edited": false, "score": 0, "creation_date": 1530695367, "post_id": 51168945, "comment_id": 89322462, "body": "Yes, a run-time error would be fine.  In practice, I&#39;ll use a recursive type class (i.e. with a base and a recursive definition) to feed it with the number of arguments it needs, e.g. from a random source."}, {"owner": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "reply_to_user": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "edited": false, "score": 0, "creation_date": 1530696908, "post_id": 51168945, "comment_id": 89323487, "body": "I suspect <a href=\"https://stackoverflow.com/a/48544124/474491\">this answer</a> could lead to the solution..."}], "answers": [{"comments": [{"owner": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "edited": false, "score": 0, "creation_date": 1530694312, "post_id": 51169467, "comment_id": 89321777, "body": "I&#39;m trying to realize the 3 print statements stated in the question...  Do you think you can do it with your suggestion ?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "edited": false, "score": 0, "creation_date": 1530696877, "post_id": 51169467, "comment_id": 89323467, "body": "@user474491 it should work verbatim.  Give it a try!"}, {"owner": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "edited": false, "score": 0, "creation_date": 1530697302, "post_id": 51169467, "comment_id": 89323718, "body": "Hey, you are right !  It&#39;s much simpler than I thought !  Many thanks."}, {"owner": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "edited": false, "score": 0, "creation_date": 1530699656, "post_id": 51169467, "comment_id": 89325229, "body": "However, I lose some flexibility in using Run.  For example, I cannot have a heterogeneous  list of Run, i.e. containing functions having different numbers of parameters."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "edited": false, "score": 0, "creation_date": 1530706160, "post_id": 51169467, "comment_id": 89329401, "body": "@user474491 Correct. The problem is that a list is homogeneous, so in order to put all those functions in the list you need to lose the information about the arity.  Then, when you extract an element from the list, this is a &quot;function with unknown arity&quot; so <code>run (head list)</code> can not have a precise type. At best, we can have something like <code>run n (head list)</code> which will attempt to extract an n-ary function from the list, or fail at runtime if the length is not <code>n</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1530722008, "post_id": 51169467, "comment_id": 89338378, "body": "<code>data Run a b = Run { run :: a -&gt; b }</code> might be better, as it at least requires the wrapped value to be a function instead of any arbitrary type."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1530694011, "creation_date": 1530694011, "answer_id": 51169467, "question_id": 51168945, "link": "https://stackoverflow.com/questions/51168945/how-to-create-a-haskell-data-structure-containing-polyvariadic-functions/51169467#51169467", "title": "How to create a Haskell data structure containing polyvariadic functions?", "body": "<p>Since both <code>f1</code> and <code>f2</code> in your code have the same type <code>Run</code>, the type checker can not distinguish between <code>run f1</code> and <code>run f2</code> which must have the same type.</p>\n\n<p>This makes it hard to implement variadic functions properly.</p>\n\n<p>It's much easier to use instead</p>\n\n<pre><code>data Run a = Run { run :: a }\n</code></pre>\n\n<p>so that <code>f1</code> and <code>f2</code> no longer share the same type.</p>\n\n<p>If you only care about functions <code>Int -&gt; ... -&gt; Int</code> there might be some solutions using type families, GADTs, DataKinds, and the like. This may be overkill, though, depending on what you are trying to realize.</p>\n"}], "owner": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 51169467, "answer_count": 1, "score": 1, "last_activity_date": 1530695877, "creation_date": 1530692298, "last_edit_date": 1530695877, "question_id": 51168945, "link": "https://stackoverflow.com/questions/51168945/how-to-create-a-haskell-data-structure-containing-polyvariadic-functions", "title": "How to create a Haskell data structure containing polyvariadic functions?", "body": "<p>How should I type and implement <code>run</code>, so that the following statements work ?</p>\n\n<pre><code>data Run = Run {run :: ??}\n\nf1 = Run (\\x -&gt; x)\nf2 = Run (\\x y-&gt; x+y)\nf3 = Run (\\x y z -&gt; x*(y+z))\n\nprint $ run f1 1 :: Int --&gt; 1\nprint $ run f2 1 2 :: Int --&gt; 3\nprint $ run f3 1 2 3 :: Int -&gt; 5\n</code></pre>\n\n<p>All the <a href=\"https://stackoverflow.com/a/3467806/474491\">polyvariadic functions</a> in Run are of type Int -> ... -> Int: they take a variable number of Int arguments and yield a Int.</p>\n\n<p>If it's any easier, I could live with a solution having a maximum number of arguments, e.g. 3:</p>\n\n<pre><code>data Run\n  = Run1 (Int -&gt; Int)\n  | Run2 (Int -&gt; Int -&gt; Int)\n  | Run3 (Int -&gt; Int -&gt; Int -&gt; Int)\n\nf1 = Run1 (\\x -&gt; x)\nf2 = Run2 (\\x y-&gt; x+y)\nf3 = Run3 (\\x y z -&gt; x*(y+z))\n</code></pre>\n\n<p>How would you implement <code>run</code> ?</p>\n"}, {"tags": ["string", "haskell", "tail"], "answers": [{"comments": [{"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1530692406, "post_id": 51168314, "comment_id": 89320741, "body": "<a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/src/GHC.Show.html#line-179\" rel=\"nofollow noreferrer\">Something similar.</a>"}], "tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 0, "last_activity_date": 1530690068, "creation_date": 1530690068, "answer_id": 51168314, "question_id": 51168097, "link": "https://stackoverflow.com/questions/51168097/haskell-tail-of-a-string-a/51168314#51168314", "title": "Haskell: Tail of a String &quot;a&quot;", "body": "<p>When you define an instance of the Show type class you can implement the method showList, which is the way list of that type are display. So:</p>\n\n<pre><code>showList [] = \"\" -- I guess this is not the actual implementation, but something similar\n</code></pre>\n\n<p>Regards,</p>\n"}, {"tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": true, "score": 9, "last_activity_date": 1530691679, "creation_date": 1530691679, "answer_id": 51168754, "question_id": 51168097, "link": "https://stackoverflow.com/questions/51168097/haskell-tail-of-a-string-a/51168754#51168754", "title": "Haskell: Tail of a String &quot;a&quot;", "body": "<p>Because the empty string <em>is</em> the empty list of <code>Char</code>s, it's just <code>show</code>n differently:</p>\n\n<pre><code>Prelude&gt; [] :: String\n\"\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 1, "last_activity_date": 1530693610, "creation_date": 1530693610, "answer_id": 51169338, "question_id": 51168097, "link": "https://stackoverflow.com/questions/51168097/haskell-tail-of-a-string-a/51169338#51169338", "title": "Haskell: Tail of a String &quot;a&quot;", "body": "<p>It's because the empty <code>String</code> and empty list of <code>Char</code> are the exact same thing (<a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#t:String\" rel=\"nofollow noreferrer\"><code>type String = [Char]</code></a>). The <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/src/GHC.Show.html#line-179\" rel=\"nofollow noreferrer\"><code>Show</code> instance for <code>Char</code></a> takes this into account and overrides the list rendering (using <code>showList</code>) to render as strings. This is why there's no <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#t:Show\" rel=\"nofollow noreferrer\"><code>Show</code></a> instance for <code>String</code>; <code>Show a =&gt; Show [a]</code> handles all lists and uses <code>showList [Char]</code>. </p>\n\n<p>As an aside, text is a lot more complex than just a string of characters. That approximation was chosen early on in C and Haskell, but other implementations like <a href=\"http://file:///C:/Program%20Files/Haskell%20Platform/8.2.2/lib/extralibs/doc/text-1.2.2.2/html/Data-Text.html\" rel=\"nofollow noreferrer\"><code>Data.Text</code></a> may have better approaches. </p>\n"}], "owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 696, "favorite_count": 0, "accepted_answer_id": 51168754, "answer_count": 3, "score": 1, "last_activity_date": 1530693610, "creation_date": 1530689308, "question_id": 51168097, "link": "https://stackoverflow.com/questions/51168097/haskell-tail-of-a-string-a", "title": "Haskell: Tail of a String &quot;a&quot;", "body": "<p>Why is the tail of a String with only one letter the empty String and not the empty List?</p>\n\n<p>Example:</p>\n\n<pre><code>tail \"a\"\n= \"\"\n</code></pre>\n\n<p>But you can create a String as:</p>\n\n<pre><code>'a' : []\n= \"a\"\n</code></pre>\n\n<p>So I thought the tail should be the empty List <code>[]</code>.</p>\n\n<p>And if you do for example</p>\n\n<pre><code>tail [\"x\"]\n</code></pre>\n\n<p>then you get the empty List <code>[]</code>.</p>\n\n<p>This is a bit confusing.</p>\n"}, {"tags": ["dictionary", "haskell"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1530688840, "creation_date": 1530688840, "answer_id": 51167955, "question_id": 51167568, "link": "https://stackoverflow.com/questions/51167568/problems-implementing-toenum-in-haskell/51167955#51167955", "title": "Problems implementing &quot;toEnum&quot; in Haskell", "body": "<p>The <code>(-1)</code> in your code should be the function \"subtract one\", but is actually interpreted as the \"negative one\" constant. Since \"-1\" is a number it is not a function, and errors will arise.</p>\n\n<p>You can use <code>pred</code> for the predecessor function, or <code>subtract 1</code>, or the explicit <code>(\\x -&gt; x-1)</code>.</p>\n\n<p>Also note that, after you have applied <code>toEnum</code>, the type is no longer necessarily numeric. <code>pred</code> will still work, but other alternatives may fail. You should decrement the numbers before applying <code>toEnum</code>.</p>\n\n<p>Minor point: <code>map f (map g list)</code> is equivalent to <code>map (f . g) list</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "edited": false, "score": 0, "creation_date": 1530691163, "post_id": 51168115, "comment_id": 89320073, "body": "Perfect explanation! Many thanks for that. This makes it totally clear to me. So: problem solved for me."}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "reply_to_user": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "edited": false, "score": 0, "creation_date": 1530894475, "post_id": 51168115, "comment_id": 89409791, "body": "Nice!, Don&#39;t forget to mark question as answered ;)"}], "tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 1, "last_activity_date": 1530689364, "creation_date": 1530689364, "answer_id": 51168115, "question_id": 51167568, "link": "https://stackoverflow.com/questions/51167568/problems-implementing-toenum-in-haskell/51168115#51168115", "title": "Problems implementing &quot;toEnum&quot; in Haskell", "body": "<p>So I guess you want to convert <code>[74,33,105,57,33,117,112,70,111,118,110]</code> to String by translating it one position, so It becomes <code>\"I h8 toEnum\"</code> isn't it?</p>\n\n<p>So:</p>\n\n<ul>\n<li><p><code>map toEnum [74,33,105,57,33,117,112,70,111,118,110]</code> is type String, so when you apply <code>map (-1)</code> to it, you are actually trying to subtract a Int to a Char, and that is wrong!</p></li>\n<li><p>Secondly, <code>map (-1)</code> is a bad expression since haskell understand -1 as the actual number <em>minus one</em> rather than the substract function </p></li>\n</ul>\n\n<p>Taking this to consider, your code should be:</p>\n\n<pre><code>decodeROT = map toEnum (map ((+) (-1)) [74,33,105,57,33,117,112,70,111,118,110])\n</code></pre>\n\n<p>Which can be written briefly as </p>\n\n<pre><code>decodeROT :: String\ndecodeROT = map (toEnum . (+) (-1)) [74,33,105,57,33,117,112,70,111,118,110])\n</code></pre>\n\n<p>Regards</p>\n"}], "owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 278, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1530689364, "creation_date": 1530687480, "question_id": 51167568, "link": "https://stackoverflow.com/questions/51167568/problems-implementing-toenum-in-haskell", "title": "Problems implementing &quot;toEnum&quot; in Haskell", "body": "<p>haven't got implementation problems with fromEnum, keep running into them using toEnum. Tried different type sigs, but keep getting it all wrong. </p>\n\n<pre><code>decodeROT = map (-1) (map toEnum [74,33,105,57,33,117,112,70,111,118,110])\n</code></pre>\n\n<p>Please help!</p>\n"}, {"tags": ["haskell", "types", "constraints", "type-families"], "comments": [{"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1530677423, "post_id": 51165245, "comment_id": 89314404, "body": "Consider checking out <a href=\"https://stackoverflow.com/a/35790024/2288659\">this answer</a>. It&#39;s not a full answer to your question (it answers how to hack together this type information at runtime via TH, whereas you want it as a compile-time type), but it may point you in the right direction."}], "answers": [{"tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": true, "score": 4, "last_activity_date": 1530688516, "last_edit_date": 1530688516, "creation_date": 1530684230, "answer_id": 51166755, "question_id": 51165245, "link": "https://stackoverflow.com/questions/51165245/can-i-filter-a-type-level-list-based-on-availability-of-a-certain-class/51166755#51166755", "title": "Can I filter a type level list based on availability of a certain class?", "body": "<p>I don't believe that it is possible to do this easily (without TH) because of the open-world assumption: GHC basically will never resolve the negative of a class constraint, because there might be more instances somewhere that make it true (and don't play nicely with the separate compilation strategy that GHC/Haskell uses). So, it is not generally possible to---from pure \"regular\" Haskell code---decide whether or not a type has a class instance, and so whether or not to include it in the list.</p>\n\n<p>If you are willing to slightly break separate compilation, by only considering instances that are in scope when the module that you are working on is <em>compiled</em> (i.e. that are in scope in that module's source file), you can use Template Haskell or GHC typechecker plugins to get something very much like this behavior. I know of a couple of implementations doing something similar at the value level, including <a href=\"https://hackage.haskell.org/package/ifcxt\" rel=\"nofollow noreferrer\">ifcxt</a> and <a href=\"https://hackage.haskell.org/package/constraints-emerge\" rel=\"nofollow noreferrer\">constraints-emerge</a>. I believe that these libraries, especially ifcxt (which I am slightly more familiar with) are quite simple: you can use the TH function <code>reify</code> to get a <code>ClassI</code> <code>Info</code> for a particular typeclass, and use its <code>[InstanceDec]</code> field to get a list of all instances that are in scope during compilation. Then you can basically make one branch for each concrete type instance that adds the instance head to the list, and follow it up with one catch-all branch that will not. You may also need to do this recursively to deal with instances that have constraints themselves.</p>\n\n<p>Notice that if you choose to use this approach, this will break the open-world assumption in potentially confusing ways: if a module imports the type-level filter module, and then defines a datatype/instance, the type-level filter will not be aware of the new instance, and will continue to treat the type as if it does not have an instance. You will need to make sure that all instances that you care about are in scope when you use TH to generate the filter type family.</p>\n\n<p>If you want to improve this somewhat, you can use an approach even more like <code>IfCxt</code> where instead of creating the type family instances directly, you might be able to do something like this:</p>\n\n<pre><code>class IsShow (a :: Type) (b :: Bool) where\ninstance {-# OVERLAPPABLE #-} (b ~ 'False) =&gt; IsShow a b where\n</code></pre>\n\n<p>And you have your TH generate instances like:</p>\n\n<pre><code>instance IsShow Int 'True where\n</code></pre>\n\n<p>This has the advantage that if another module defines important types/instances, you should be able to use (roughly) the same TH to extend the instances of <code>IsShow</code> with these new instances, and your type families that use <code>IsShow</code> should be fine. The ifcxt package linked above does basically the same thing, but instead of doing the necessary trickery to get the information at the type level, it just generates functions to get it at the value level.</p>\n\n<p>This solution uses a class with functional dependencies instead of a type family because <code>OverlappingInstances</code> makes it possible to give the class-based solution a \"default case\". I'm not sure whether there's any reasonable way to give an <em>open</em> type family a default case, so you might not be able to get this \"extensibility\" while using type families everywhere (instead of fundep'd instances).</p>\n\n<p>Richard Eisenberg <a href=\"https://typesandkinds.wordpress.com/2012/12/22/ordered-overlapping-type-family-instances/\" rel=\"nofollow noreferrer\">says</a></p>\n\n<blockquote>\n  <p>With separate compilation, the lack of ordering and the overlap check are necessary for type soundness.</p>\n</blockquote>\n\n<p>So I think it may be impossible. There are also some interesting discussions around type families vs. fundeps here: <a href=\"https://typesandkinds.wordpress.com/2015/09/09/what-are-type-families/\" rel=\"nofollow noreferrer\">https://typesandkinds.wordpress.com/2015/09/09/what-are-type-families/</a></p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 51166755, "answer_count": 1, "score": 3, "last_activity_date": 1530688516, "creation_date": 1530673922, "question_id": 51165245, "link": "https://stackoverflow.com/questions/51165245/can-i-filter-a-type-level-list-based-on-availability-of-a-certain-class", "title": "Can I filter a type level list based on availability of a certain class?", "body": "<p>I can separate functions from nullary values with a type family like this:</p>\n\n<pre><code>type family Funs (ts :: [*]) :: [*]\n  where\n    Funs '[ ] = '[ ]\n    Funs ((a -&gt; b): ts) = (a -&gt; b): Funs ts\n    Funs (k: ts) = Funs ts\n</code></pre>\n\n<p>What I would like is to separate types that satisfy a constraint, for instance <code>Show</code>. An attempt by analogy:</p>\n\n<pre><code>type family Showable (ts :: [*]) :: [*]\n  where\n    Showable '[ ] = '[ ]\n    Showable ((Show a =&gt; a): ts) = a: Showable ts\n    Showable (k: ts) = Showable ts\n</code></pre>\n\n<p>\u2014 Leads to an error:</p>\n\n<pre><code>    \u2022 Illegal qualified type: Show a =&gt; a\n    \u2022 In the equations for closed type family \u2018Showable\u2019\n      In the type family declaration for \u2018Showable\u2019\n   |\n35 |     Showable ((Show a =&gt; a): ts) = a: Showable ts\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What can be done? I am fine with a solution that uses Template Haskell, or lowly hackery of any sort.</p>\n"}, {"tags": ["sorting", "haskell"], "comments": [{"owner": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 2, "creation_date": 1530662705, "post_id": 51164202, "comment_id": 89311696, "body": "Your <code>sort&#39;</code> is doing a single iteration of a bubblesort. You can indeed iterate your function multiple times to get a fully sorted list. Here&#39;s how that looks when done manually: <code>sort&#39; (sort&#39; (sort&#39; (sort&#39; (sort&#39; [4,2,1,3,5]))))</code>, and it does result in <code>[1,2,3,4,5]</code>"}, {"owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "reply_to_user": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 0, "creation_date": 1530662808, "post_id": 51164202, "comment_id": 89311721, "body": "I tried reading the documentation on <code>iterate</code> but it didn&#39;t really make much sense. How could I use it in this context, using the length of the input list as the number of times to reapply <code>sort&#39;</code>?"}, {"owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "edited": false, "score": 1, "creation_date": 1530663133, "post_id": 51164202, "comment_id": 89311795, "body": "<code>iterate f x = [x, f x, f (f x), ...]</code>, so <code>iterate f x !! n</code> is <code>f</code> applied <code>n</code> times to <code>x</code>. So if you want to apply <code>sort&#39; (sort&#39; (sort&#39; ... xs))</code> with <code>(length xs)</code> <code>sort&#39;</code>s, you should be able to just write <code>sort xs = iterate sort&#39; xs !! length xs</code>"}, {"owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "edited": false, "score": 3, "creation_date": 1530663242, "post_id": 51164202, "comment_id": 89311826, "body": "Another option, which might be a bit slower, but very clear would be something like <code>until isSorted sort&#39; xs</code>, with an appropriate definition of <code>isSorted</code>. You might also be interested in some other sorting algorithms in Haskell; both top-down and (especially) bottom-up mergesorts are very nice."}], "answers": [{"tags": [], "owner": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "is_accepted": true, "score": 2, "last_activity_date": 1530663240, "creation_date": 1530663240, "answer_id": 51164280, "question_id": 51164202, "link": "https://stackoverflow.com/questions/51164202/haskell-simple-beginner-sorting-program/51164280#51164280", "title": "Haskell simple beginner sorting program", "body": "<p>Your <code>sort'</code> implements an iteration of bubble sort, and it follows that applying it over and over will result in a completely sorted list. There are <a href=\"https://stackoverflow.com/questions/7423123/how-to-call-the-same-function-n-times\">many ways of doing that</a>, with one being to use <code>iterate</code> to repeatedly apply it, and picking the N'th application using <code>!!</code>:</p>\n\n<pre><code>completeSort list = iterate sort' list !! length list\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": false, "score": 0, "last_activity_date": 1530664129, "last_edit_date": 1530664129, "creation_date": 1530663337, "answer_id": 51164289, "question_id": 51164202, "link": "https://stackoverflow.com/questions/51164202/haskell-simple-beginner-sorting-program/51164289#51164289", "title": "Haskell simple beginner sorting program", "body": "<p>As @that other guy points out, you can use <code>iterate</code> to apply <code>sort'</code> to a list <code>n</code> times, which is a wonderful example of using higher-level combinators in Haskell (as opposed to primitive recursion). Another nice combinator that is useful for this sort of thing is <code>until</code>: <code>until</code> will take a predicate <code>:: a -&gt; Bool</code>, a function <code>:: a -&gt; a</code>, and a value <code>:: a</code>, and will apply the function to the value until the predicate remains true. So when you have a similar situation but don't know exactly how many passes you want to make over the input, you can do something like <code>until isSorted sort' xs</code>, which can be quite nice.</p>\n\n<p>A lot of other one-pass sorting algorithms are quite nice in Haskell as well, including top-down and (especially) bottom-up mergesorts.</p>\n\n<p>At the risk of throwing you into the theory deep end, I wanted to mention another quite nice high-level combinatorial way of thinking about iterating <code>n</code> times.  This is based on the idea of \"recursion schemes\", where the basic idea is that the structure of a recursive datatype informs useful patterns for processing/transforming it. As it happens, Haskell is powerful enough to express a lot of these ideas. One of the simplest examples of the recursion scheme is based on the natural numbers:</p>\n\n<pre><code>data Nat = Zero | Succ Nat\n</code></pre>\n\n<p>This is a recursive datatype because the second data constructor refers back to <code>Nat</code> itself. There's a really natural way of processing <code>Nat</code>s, which is to say: when I have <code>Zero</code>, I should return some value; otherwise I should recursively process the <code>Nat</code> and then use those values to come up with a new value.  As it happens, we can write <code>Nat</code> in a different way, which makes this very easy to do generally:</p>\n\n<pre><code>data NatF a = Zero | Succ a\ntype Nat = Mu NatF\n</code></pre>\n\n<p>Now, the <code>NatF</code> data type can hold a value of any type inside its \"recursive\" component, instead of only another <code>Nat</code>.  The <code>Mu</code> type constructor in the second line is basically like the <code>fix</code> function but for types: it instantiates <code>NatF (NatF (NatF (NatF ...)))</code> so that <code>Nat = NatF Nat</code>, which is the same as our earlier definition.</p>\n\n<p>Because of the increased genericity, though, we can now write down the a type that describes functions that process <code>Nat</code>s as described above: <code>NatF a -&gt; a</code>. When given a <code>Zero</code>, a function of this type just returns some <code>a</code>; when given a <code>Succ</code>, it has access to the <code>a</code> that it returned when it was recursively called on the \"inside\" <code>Nat</code>.  It turns out that it's possible to generalize the infrastructure needed to do this, so that it can work on any type written in the style above (i.e. as a fixed point of a type generalized over the recursive component). This means that you can just write down the equations for your function given the results from recursive calls and then call <code>cata</code> on this datastructure, without ever having to be bothered to write down the repetitive boring recursive calls!</p>\n\n<p>It also means that another way to write your \"apply sort' (length xs) times to  xs` is:</p>\n\n<pre><code>sort xs = cata phi (toNat $ length xs)\n  where phi Zero = xs\n        phi (Succ xs) = sort' xs\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "accepted_answer_id": 51164280, "answer_count": 2, "score": 0, "last_activity_date": 1530664129, "creation_date": 1530662438, "question_id": 51164202, "link": "https://stackoverflow.com/questions/51164202/haskell-simple-beginner-sorting-program", "title": "Haskell simple beginner sorting program", "body": "<p>Still pretty new to Haskell. I'm trying to write a sort function using recursion, and this is what I have so far:</p>\n\n<pre><code>sort' :: [Int] -&gt; [Int]\nsort' [] = []\nsort' [x] = [x]\nsort' (x:y:xs) = \n  if x &gt; y\n    then y:sort' (x:xs)\n    else x:sort' (y:xs)\n</code></pre>\n\n<p>From what I can tell it works fine when there are fewer than 2 elements to be sorted. But if I enter [3,2,1], I get [2,1,3]. I've tried following the path of the inputs manually, but I can't figure out how to sort more than the 2 initial elements. I've done a bit of reading, and was thinking about something involving <code>iterate</code> and use the length of the list (<code>length</code>), but I'm not sure how to implement it if it does work.</p>\n"}, {"tags": ["haskell", "blaze-html"], "comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1530659703, "post_id": 51163372, "comment_id": 89311123, "body": "<a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#overloaded-string-literals\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/users_guide/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": true, "score": 1, "last_activity_date": 1530660072, "creation_date": 1530660072, "answer_id": 51163950, "question_id": 51163372, "link": "https://stackoverflow.com/questions/51163372/blaze-html-haskell-correct-tohtml-usage/51163950#51163950", "title": "blaze-html, Haskell, correct toHtml usage?", "body": "<ol>\n<li><p>In standard Haskell, a string literal like <code>\"foo\"</code> is always parsed into a value of type <code>String =  [Char]</code>. Blaze doesn't use actual <code>String</code> values in most places, instead using its own types like <code>AttributeValue</code> for each semantically different thing. This means that in standard Haskell, without <code>OverloadedStrings</code>, it is impossible to pass string literals to many Blaze functions which expect <code>AttributeValue</code>s, <code>Tag</code>s, etc.  When you set <code>-XOverloadedStrings</code>, GHC will allow a string literal to have type <code>Data.String.IsString p =&gt; p</code> instead of <code>String</code>, so you can use a string literal anywhere that some type which has an instance of <code>IsString</code> is expected. This is used by all the \"standard\" Blaze code.  <code>OverloadedStrings</code> is a fairly simple extension---it is basically doing for string literals what <code>Num</code> does for integer literals---and I'm not aware of any large amount of controversy around it. I think that it should be safe for use in production code, and several production codebases use it.</p></li>\n<li><p>This error message is due to the fact that <code>toHtml</code> is universally quantified over the type of its first argument, with some constraints: <code>toHtml :: ToMarkup a =&gt; a -&gt; Html</code>, and---with <code>OverloadedStrings</code>---the type of a string is also a type variable. Basically, GHC knows that the type of the string literal, which will be passed into <code>toHtml</code> needs to be some type, and that type needs to have instances for <code>ToMarkup</code> and <code>IsString</code>, but it doesn't have any way to be sure what that type should be!  In this case, it looks like you are probably looking for the string literal to actually have type <code>String</code> here, which you can get by manually annotating the literal: <code>toHtml (\"foo\" :: String)</code>, or by using <code>-XTypeApplications</code>: <code>toHtml @String \"foo\"</code>.</p></li>\n</ol>\n"}], "owner": {"reputation": 2976, "user_id": 7493840, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/227486944377608/picture?type=large", "display_name": "Sereja Bogolubov", "link": "https://stackoverflow.com/users/7493840/sereja-bogolubov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 0, "accepted_answer_id": 51163950, "answer_count": 1, "score": -1, "last_activity_date": 1530660072, "creation_date": 1530655517, "last_edit_date": 1530655819, "question_id": 51163372, "link": "https://stackoverflow.com/questions/51163372/blaze-html-haskell-correct-tohtml-usage", "title": "blaze-html, Haskell, correct toHtml usage?", "body": "<p>Two things I can't figure out:\n1) Without <code>{-# LANGUAGE OverloadedStrings #-}</code> none of the typical code, where pure strings are passed as an arguments for attributes, works; however everything fine as long as that instruction is there. What does it do in this particular case and how safe is it to use in a production code?</p>\n\n<p>2) Following piece of code: <code>(toHtml $ \"&lt;script ... &gt;&lt;/script&gt;\")</code> fails with something I don't quite understand: </p>\n\n<blockquote>\n  <p>Ambiguous type variable \u2018a0\u2019 arising from the literal ... \n  prevents the constraint \u2018(Data.String.IsString a0)\u2019 from being solved.\n  Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.\n  These potential instances exist:\n  instance Data.String.IsString H.AttributeValue -- Defined in \u2018blaze-markup-0.8.2.1:Text.Blaze.Internal\u2019\n  instance Data.String.IsString H.Tag -- Defined in \u2018blaze-markup-0.8.2.1:Text.Blaze.Internal\u2019\n  instance a ~ Char => Data.String.IsString [a] -- Defined in \u2018Data.String\u2019\n  ...plus 10 instances involving out-of-scope types</p>\n</blockquote>\n"}, {"tags": ["haskell", "dependent-type", "type-level-computation", "type-kinds"], "answers": [{"comments": [{"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "edited": false, "score": 0, "creation_date": 1530650270, "post_id": 51162451, "comment_id": 89308347, "body": "What does the <code>@</code> symbol do?  I&#39;ve only ever seen it used for pattern matching before."}, {"owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "reply_to_user": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "edited": false, "score": 1, "creation_date": 1530650339, "post_id": 51162451, "comment_id": 89308368, "body": "@WheatWizard The <code>@</code> symbol here is a use of the very nice recent feature <code>TypeApplications</code> <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-TypeApplications\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/users_guide/&hellip;</a>"}], "tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": true, "score": 3, "last_activity_date": 1530650293, "last_edit_date": 1530650293, "creation_date": 1530649912, "answer_id": 51162451, "question_id": 51162041, "link": "https://stackoverflow.com/questions/51162041/replacing-self-built-naturals-with-ghc-type-level-literals/51162451#51162451", "title": "Replacing self built Naturals with GHC type level literals", "body": "<p>How about this?</p>\n\n<pre><code>class IndexType (n :: Nat) (a :: [Type]) (c :: Type) | n a -&gt; c where           \n  index ::  (Proxy n) -&gt; (HList a) -&gt; c                                         \ninstance IndexType 0  (a ': b) a where                                          \n  index _ (Cons a _) = a                                                        \ninstance {-# OVERLAPS #-} (IndexType (a-1) b c) =&gt; IndexType a (d ': b) c where \n  index _ (Cons _ b) = index (Proxy @(a-1)) b                                   \n</code></pre>\n\n<p>This will use some extra extensions including <code>ScopedTypeVariables</code> and <code>TypeApplications</code>. PoC (tested on GHC 8.2.2):</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE UndecidableInstances #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeApplications #-}\n\nmodule Foo where\nimport Data.Kind\nimport GHC.TypeLits\nimport Data.Proxy\n\ndata HList a where\n  EmptyList :: HList '[]\n  Cons :: a -&gt; HList b -&gt; HList (a ': b)\n\nclass IndexType (n :: Nat) (a :: [Type]) (c :: Type) | n a -&gt; c where\n  index ::  (Proxy n) -&gt; (HList a) -&gt; c\ninstance IndexType 0  (a ': b) a where\n  index _ (Cons a _) = a\ninstance {-# OVERLAPS #-} (IndexType (a-1) b c) =&gt; IndexType a (d ': b) c where\n  index _ (Cons _ b) = index (Proxy @(a-1)) b\n\nlist :: HList '[Int, Bool]\nlist = Cons (5 :: Int) (Cons True EmptyList)\nint :: Int\nint = index (Proxy @0) list\nbool :: Bool\nbool = index (Proxy @1) list\n</code></pre>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 1, "accepted_answer_id": 51162451, "answer_count": 1, "score": 4, "last_activity_date": 1530650293, "creation_date": 1530647822, "question_id": 51162041, "link": "https://stackoverflow.com/questions/51162041/replacing-self-built-naturals-with-ghc-type-level-literals", "title": "Replacing self built Naturals with GHC type level literals", "body": "<p>I wrote some code that takes a Heterogeneous List and indexes it.</p>\n\n<pre><code>{-# Language GADTs, FunctionalDependencies, MultiParamTypeClasses, KindSignatures, DataKinds, TypeOperators, FlexibleInstances, UndecidableInstances #-}\n\nimport Data.Kind\n\ndata Nat = Z | S Nat\n\ndata Natural a where\n  Zero :: Natural 'Z\n  Succ :: Natural a -&gt; Natural ('S a)\n\ndata HList a where\n  EmptyList :: HList '[]\n  Cons :: a -&gt; HList b -&gt; HList (a ': b)\n\nclass IndexType (n :: Nat) (a :: [Type]) (b :: Type) | n a -&gt; b where\n  index :: (Natural n) -&gt; (HList a) -&gt; b\n\ninstance IndexType 'Z (a ': b) a where\n  index _ (Cons a _) = a\n\ninstance IndexType a b c =&gt; IndexType ('S a) (d ': b) c where\n  index (Succ a) (Cons _ b) = index a b\n</code></pre>\n\n<p>To do this I implemented my own <code>Nat</code> and <code>Natural</code> types.  The <code>Nat</code> exists solely to elevate to the Kind level and <code>Natural</code> exists to fulfill the kind <code>Nat -&gt; Type</code>.</p>\n\n<p>Now I would prefer to use <code>GHC.TypeLits</code>' <code>Nat</code> kind rather than my own however when I try to translate my code over I start to hit a wall in terms of understanding.</p>\n\n<p>I want to build my <code>IndexType</code> class and the declaration line doesn't change any</p>\n\n<pre><code>class IndexType (n :: Nat) (a :: [Type]) (b :: Type) | n a -&gt; b where\n</code></pre>\n\n<p>Since <code>GHC.TypeLits</code> also has its own <code>Nat</code> kind.  However <code>GHC.TypeLits</code> doesn't have a replacement for <code>Natural</code> that I see, namely I lack something of the kind <code>Nat -&gt; Type</code>.  Now I could build an equivalent </p>\n\n<pre><code>data Natural a = Natural\n</code></pre>\n\n<p>But this is essentially equivalent the <code>Proxy</code> type so I could just use that instead.</p>\n\n<pre><code>{-# Language GADTs, FunctionalDependencies, MultiParamTypeClasses, KindSignatures, DataKinds, TypeOperators, FlexibleInstances, UndecidableInstances #-}\n\nimport Data.Kind\nimport GHC.TypeLits\nimport Data.Proxy\n\ndata HList a where\n  EmptyList :: HList '[]\n  Cons :: a -&gt; HList b -&gt; HList (a ': b)\n\nclass IndexType (n :: Nat) (a :: [Type]) (b :: Type) | n a -&gt; b where\n  index :: (Proxy n) -&gt; (HList a) -&gt; b\n</code></pre>\n\n<p>Now the first instance of the <code>IndexType</code> class is easy enough:</p>\n\n<pre><code>instance IndexType 0 (a ': b) a where\n  index _ (Cons a _) = a\n</code></pre>\n\n<p>However the second one starts to puzzle me.  The first line seems as if it would be</p>\n\n<pre><code>instance IndexType a b c =&gt; IndexType (1 + a) (d ': b) c where\n</code></pre>\n\n<p>However on the second line I don't know how to replace the <code>Succ</code> in the original code.  The data constructor for <code>Proxy</code> is <code>Proxy</code> so I suppose it must use that constructor so I must write something like:</p>\n\n<pre><code>  index Proxy (Cons _ b) = index a b\n</code></pre>\n\n<p>But now I'm pulling the definition of <code>a</code> out of thin air.  I suppose it has to be another <code>Proxy</code> since index takes a <code>Proxy</code>, but I don't know how to force it to be the correct type.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1530670367, "post_id": 51161748, "comment_id": 89313072, "body": "Literals are syntactic sugar in the following sense: 10 is converted to <code>fromInteger (10 :: Integer)</code> and 10.5 is converted to <code>fromRational ((21 :% 2) :: Rational)</code>. Look at what the types of <code>fromInteger</code> and <code>fromRational</code> are"}], "answers": [{"comments": [{"owner": {"reputation": 309, "user_id": 7571000, "user_type": "registered", "profile_image": "https://graph.facebook.com/10155043356444224/picture?type=large", "display_name": "Shane Unger", "link": "https://stackoverflow.com/users/7571000/shane-unger"}, "edited": false, "score": 0, "creation_date": 1530663976, "post_id": 51161912, "comment_id": 89311959, "body": "I think I understand. So by saying something has <code>Num a =&gt; a</code>, it has to take a fairly polymorphic type, like <code>1</code> which could be an <code>Int</code>, could be an <code>Integer</code>. But by giving it the value <code>1.0</code>, that&#39;s obviously a concrete type, a <code>Fractional</code> and that violates the agreement of the type signature <code>Num a =&gt; a</code> which is saying &#39;whatever type you give me can&#39;t be more specific than a <code>Num a =&gt; a</code> type; if it&#39;s more specific you need to define a more specific type&#39;"}, {"owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "reply_to_user": {"reputation": 309, "user_id": 7571000, "user_type": "registered", "profile_image": "https://graph.facebook.com/10155043356444224/picture?type=large", "display_name": "Shane Unger", "link": "https://stackoverflow.com/users/7571000/shane-unger"}, "edited": false, "score": 0, "creation_date": 1530664294, "post_id": 51161912, "comment_id": 89312003, "body": "Yes, basically! The <code>Num a =&gt; a</code> signature is saying that the definition has to work for any <code>Num a</code>, but you only defined how it works for a <code>Fractional a</code>. This particular example is slightly more complicated since <code>Fractional</code> is also a type class, but since there are some <code>Num</code> instances which aren&#39;t <code>Fractional</code> instances, it still violates the agreement with the &quot;outside&quot; that <code>f</code> should work for any <code>a</code> such that <code>Num a</code>."}], "tags": [], "owner": {"reputation": 1435, "user_id": 6676199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21f60cb3880bf43a7c74ffeecbf996e1?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Amidon", "link": "https://stackoverflow.com/users/6676199/peter-amidon"}, "is_accepted": false, "score": 5, "last_activity_date": 1530648060, "last_edit_date": 1530648060, "creation_date": 1530647215, "answer_id": 51161912, "question_id": 51161748, "link": "https://stackoverflow.com/questions/51161748/typeclass-behavior-in-haskell/51161912#51161912", "title": "Typeclass behavior in Haskell", "body": "<p>The issue here is that when you write <code>f :: Num a =&gt; a</code>, this means that <code>f</code> must work for <em>all</em> possible instantiations of <code>a</code> such that a <code>Num a</code> instance exists. In particular, this means that writing <code>(f :: Int)</code> somewhere else should work fine, since <code>instance Num Int</code> certainly exists. However, the value that you wrote for <code>f</code> to return is <code>1.0</code>, which is not an integer: <code>1.0 :: Fractional p =&gt; p</code>. The error message is basically saying that \"Knowing that <code>a</code> is a <code>Num</code> doesn't tell us that <code>a</code> is a <code>Fractional</code>, so there's no way for the fractional literal  1.0 to have type <code>a</code>\".</p>\n\n<p>One way to think about it is that the <em>caller</em> gets to choose what <code>a</code> should be: this is why type signatures of this form are called <em>universally quantified</em>.</p>\n\n<p>You may be thinking of <em>existential</em> quantification: <code>f</code> returns some kind of <code>Num</code>, but the \"caller\" doesn't know what <code>Num</code> was returned.  This is often not as useful as universal quantification, and is a little clunky in Haskell, but can be done like this:</p>\n\n<pre><code>{-# LANGUAGE ExistentialQuantification #-} -- This is a GHC extension\n-- A SomeNum value contains some kind of Num. Can't see what kind from the \"outside\".\ndata SomeNum = forall a. Num a =&gt; SomeNum a\nf :: SomeNum\nf = SomeNum 5.0\n</code></pre>\n\n<p>In Haskell, a signature like <code>f :: a</code> is syntax for the (conceptually clearer) <code>f :: forall a. a</code>, where the <code>forall</code> is a lot like a \"type-level lambda\" (and not the <code>f :: exists a. a</code> which you may have been thinking of). In fact, if you look at GHC Core, you will see that all these type applications are explicit: whenever you use a universally quantified function, the \"caller\" explicitly passes in the types to use for each of the type variables.</p>\n\n<p>However, I would advise that you not try to use existential quantification at this stage: there are often better/easier alternatives. I just wanted to explain it to help show the difference between existentials and universals.</p>\n"}, {"comments": [{"owner": {"reputation": 5911, "user_id": 1688785, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/07b2da937aa23792045dff6ff19556eb?s=128&d=identicon&r=PG", "display_name": "Caramiriel", "link": "https://stackoverflow.com/users/1688785/caramiriel"}, "edited": false, "score": 0, "creation_date": 1530648336, "post_id": 51161939, "comment_id": 89307617, "body": "As a beginner of Haskell as well, makes me wonder: isn&#39;t the result of <code>f</code> covariant, like in C-like languages (returning <code>1.0</code> from a function/method that has an <code>object</code> return type)?"}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "reply_to_user": {"reputation": 5911, "user_id": 1688785, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/07b2da937aa23792045dff6ff19556eb?s=128&d=identicon&r=PG", "display_name": "Caramiriel", "link": "https://stackoverflow.com/users/1688785/caramiriel"}, "edited": false, "score": 2, "creation_date": 1530649544, "post_id": 51161939, "comment_id": 89308086, "body": "C will insert type conversions pretty much anywhere based on type coercion; it&#39;s not a property of the function, only something the compiler can do with the value that was returned. Haskell doesn&#39;t do implicit type conversions; if you want to add a <code>Float</code> and a <code>Double</code>, you have to convert one or the other, for instance through <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:realToFrac\" rel=\"nofollow noreferrer\"><code>realToFrac</code></a>."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 5911, "user_id": 1688785, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/07b2da937aa23792045dff6ff19556eb?s=128&d=identicon&r=PG", "display_name": "Caramiriel", "link": "https://stackoverflow.com/users/1688785/caramiriel"}, "edited": false, "score": 0, "creation_date": 1530688660, "post_id": 51161939, "comment_id": 89318772, "body": "@Caramiriel There&#39;s no subtyping, so the question of covariance doesn&#39;t arise."}], "tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 0, "last_activity_date": 1530647310, "creation_date": 1530647310, "answer_id": 51161939, "question_id": 51161748, "link": "https://stackoverflow.com/questions/51161748/typeclass-behavior-in-haskell/51161939#51161939", "title": "Typeclass behavior in Haskell", "body": "<p>When you give the compiler a type declaration like <code>f :: Num a =&gt; a</code>, you're not just saying <code>f</code> has the typeclass <code>Num</code> but that that's <em>all</em> you know about it here. Since you've entered <code>1.0</code>, not <code>1</code>, the compiler concludes that you also need <code>Fractional</code>. Your declaration said that you don't, and so this can't compile. It does compile if you say it's <code>Fractional a =&gt; a</code>, and <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Fractional\" rel=\"nofollow noreferrer\"><code>Fractional</code></a> implies <code>Num</code>. </p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1530649712, "last_edit_date": 1592644375, "creation_date": 1530649712, "answer_id": 51162406, "question_id": 51161748, "link": "https://stackoverflow.com/questions/51161748/typeclass-behavior-in-haskell/51162406#51162406", "title": "Typeclass behavior in Haskell", "body": "<blockquote>\n<p>why can't I stuff any numerical value in <code>f</code>?</p>\n<p>For example, negate which has a signature <code>negate :: Num a =&gt; a -&gt; a</code> will work with <code>Int</code>'s <code>Float</code>'s <code>Double</code>s, etc.</p>\n</blockquote>\n<p>Precisely because of that!</p>\n<p>You can't stuff any numerical value in the <em>definition</em> of <code>f</code>, as you can't stuff any numerical value in the <em>definition</em> of <code>negate</code>.</p>\n<p>Suppose we tried to define <code>negate</code> as follows</p>\n<pre><code>negate :: Num a =&gt; a -&gt; a\nnegate x = 10.5 - 10.5 - x\n</code></pre>\n<p>Would that work on an <code>Int</code>? That is, on <code>negate 42 :: Int</code>? No, since <code>10.5</code> is not an <code>Int</code>.</p>\n<p>Since the type of <code>negate</code> promises that it works on any numeric type, including <code>Int</code>, but it does not actually work on <code>Int</code>, then the promise is broken. Static type checking rejects that code because of this.</p>\n<p>Similarly, if type checking accepted</p>\n<pre><code>f :: Num a =&gt; a\nf = 10.5\n</code></pre>\n<p>then all of these should work: <code>f + 8 :: Int</code>, <code>f / 2 :: Double</code>, <code>f - 4 :: Integer</code>.\nBut <code>10.5</code> does not fit into <code>Int</code> (nor into <code>Integer</code>).</p>\n<p>The issue here is that <code>f :: Num a =&gt; a</code> allows the <em>caller</em> to choose any numeric type <code>a</code>. Since the type allows the caller to choose, <code>f</code> can not choose itself, but must adapt to any choice made by the caller. So, <code>f</code> can not use code which only works at some numeric types, but not others.</p>\n<p>If <code>f</code> only works at <code>Fractional</code> types, a subset of <code>Num</code> types, then the type of <code>f</code> must advertise to the caller that its choice is limited to fractional types. This is done by using <code>f :: Fractional a =&gt; a</code> instead.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1530695255, "last_edit_date": 1530695255, "creation_date": 1530663766, "answer_id": 51164336, "question_id": 51161748, "link": "https://stackoverflow.com/questions/51161748/typeclass-behavior-in-haskell/51164336#51164336", "title": "Typeclass behavior in Haskell", "body": "<p>If you simply write</p>\n\n<pre><code>f = 10.5\n</code></pre>\n\n<p>you get back <code>f :: Fractional a =&gt; a</code> without a problem. </p>\n\n<p>It is when you explicitly claim its type to be <code>Num a =&gt; a</code>, Haskell must unify the proclaimed and the actual types, and it can't, since <code>Fractional</code> is <code>Num</code>'s <strong><em>subclass</em></strong>:</p>\n\n<pre><code>&gt;&gt; :i Fractional\nclass Num a =&gt; Fractional a where\n  --  ^^^                              -- Fractional is Num's subclass\n  ...........\n  fromRational :: Rational -&gt; a\n  ...........\n</code></pre>\n\n<p><strong>Every <code>Fractional</code> is a <code>Num</code>, but not every <code>Num</code> is a <code>Fractional</code>.</strong></p>\n\n<hr>\n\n<p>The type of <code>fromRational</code> is <code>fromRational :: Fractional a =&gt; Rational -&gt; a</code>.</p>\n\n<p>This  suggests that floating point literals like <code>10.5</code> are actually read as <code>fromRational (10.5 :: Rational)</code>, just like whole number literals like <code>10</code> are read as <code>fromInteger (10 :: Integer)</code>. </p>\n\n<p>Indeed, section 10.3 in the <a href=\"https://www.haskell.org/tutorial/numbers.html\" rel=\"nofollow noreferrer\">Haskell tutorial</a> reads:</p>\n\n<blockquote>\n  <p>An integer numeral (without a decimal point) is actually equivalent to an application of <code>fromInteger</code> to the value of the numeral as an <code>Integer</code>. Similarly, a floating numeral (with a decimal point) is regarded as an application of <code>fromRational</code> to the value of the numeral as a <code>Rational</code>. Thus, <code>7</code> has the type <code>(Num a) =&gt; a</code>, and <code>7.3</code> has the type <code>(Fractional a) =&gt; a</code>.</p>\n</blockquote>\n"}], "owner": {"reputation": 309, "user_id": 7571000, "user_type": "registered", "profile_image": "https://graph.facebook.com/10155043356444224/picture?type=large", "display_name": "Shane Unger", "link": "https://stackoverflow.com/users/7571000/shane-unger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 51162406, "answer_count": 4, "score": 3, "last_activity_date": 1530695255, "creation_date": 1530646380, "last_edit_date": 1530646728, "question_id": 51161748, "link": "https://stackoverflow.com/questions/51161748/typeclass-behavior-in-haskell", "title": "Typeclass behavior in Haskell", "body": "<p>As a beginner to Haskell I'm having a hard time understanding why this is failing</p>\n\n<pre><code>-- this works fine of course\nf :: Float\nf = 1.0\n\nf :: Num a =&gt; a\nf = 1.0\n-- Could not deduce (Fractional a) arising from the literal \u20181.0\u2019\n--      from the context: Num a\n--        bound by the type signature for:\n--                   f :: forall a. Num a =&gt; a\n</code></pre>\n\n<p>My confusion stems from them both having instances of Num. So since Int's, Integers, Doubles, etc all have an instance of the Num typeclass, why can't I stuff any numerical value in <code>f</code>?</p>\n\n<p>For example, <code>negate</code> which has a signature\n<code>negate :: Num a =&gt; a -&gt; a</code> will work with Int's Float's Doubles, etc.</p>\n\n<p>Any insight would be greatly appreciated.</p>\n"}, {"tags": ["haskell", "algebraic-data-types"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1530628368, "post_id": 51157066, "comment_id": 89297706, "body": "This sounds like an <a href=\"http://xyproblem.info/\" rel=\"nofollow noreferrer\">XY problem</a> to me. <a href=\"https://meta.stackexchange.com/a/66378\">More examples and discussion here</a>."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1530629113, "post_id": 51157066, "comment_id": 89298138, "body": "Well i am asking if there is a better way."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1530629607, "post_id": 51157066, "comment_id": 89298454, "body": "You ask, &quot;What&#39;s a better way to do Y?&quot;. I ask, &quot;If you could do Y, what X does that help you achieve? Perhaps instead of doing Y at all, there is a better way to do X in the first place that doesn&#39;t involve Y.&quot;."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1530629988, "post_id": 51157066, "comment_id": 89298696, "body": "Don&#39;t use <code>Show</code> to generate a JSON object; use an actual JSON library."}, {"owner": {"reputation": 20350, "user_id": 411944, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/7bf057b98d0652db34842d1817234853?s=128&d=identicon&r=PG", "display_name": "Reactormonk", "link": "https://stackoverflow.com/users/411944/reactormonk"}, "edited": false, "score": 0, "creation_date": 1530630289, "post_id": 51157066, "comment_id": 89298915, "body": "Use this library: <a href=\"https://www.stackage.org/haddock/lts-11.16/aeson-1.2.4.0/Data-Aeson.html\" rel=\"nofollow noreferrer\">stackage.org/haddock/lts-11.16/aeson-1.2.4.0/Data-Aeson.html</a>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1530638758, "post_id": 51157066, "comment_id": 89303422, "body": "Apologies: I completely missed the <code>instance Show Worker</code> code block. That is presumably the answer to my objection about XY problems. Great!"}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1530686170, "post_id": 51157066, "comment_id": 89317506, "body": "No need ,  but i was really banging by head with  what was wrong with my question :D"}], "answers": [{"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 1, "last_activity_date": 1530633540, "creation_date": 1530633540, "answer_id": 51158805, "question_id": 51157066, "link": "https://stackoverflow.com/questions/51157066/storing-type-fields-in-a-list/51158805#51158805", "title": "Storing type fields in a list", "body": "<p>You can get sort of close to the thing you're looking for, but it's not going to be pretty.</p>\n\n<p>We can use <code>RecordWildCards</code> to bring all of the accessor names into scope as though they were ordinary variables, but that still introduces a new problem.</p>\n\n<pre><code>-- Not runnable Haskell code\nfoo Worker {..} = let names = [\"age\", \"name\", \"title\", \"income\"]\n                      props = [age, name, title, income]\n                  in ...\n</code></pre>\n\n<p>We're pattern matching on <code>Worker {..}</code>, which introduces a bunch of accessor names into the local scope. However, <code>props</code> is trying to be a heterogeneous list, which Haskell does not allow. It contains two integers, a string, and a title, whereas Haskell lists are only supposed to contain one type.</p>\n\n<p>Since you're trying to show each field, you're going to have to apply <code>show</code> to <em>each</em> element by hand. Like I said, this is going to be a bit ugly.</p>\n\n<pre><code>foo Worker {..} = let names = [\"age\", \"name\", \"title\", \"income\"]\n                      props = [show age, show name, show title, show income]\n                  in ...\n</code></pre>\n\n<p>It may look like we can do <code>map show [age, name, title, income]</code>, but we can't. That list still wouldn't be valid, and we're applying three different <code>show</code> functions here (they just happen to share a name), so we can't meaningfully map the <em>same</em> <code>show</code> over each element.</p>\n\n<p>However, as the comments say, your best bet is to familiarize yourself with a proper JSON library, and Aeson is easily the best choice in Haskell for that sort of thing.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 51158805, "answer_count": 1, "score": 2, "last_activity_date": 1530633540, "creation_date": 1530628013, "last_edit_date": 1530629093, "question_id": 51157066, "link": "https://stackoverflow.com/questions/51157066/storing-type-fields-in-a-list", "title": "Storing type fields in a list", "body": "<p>Hello i am faced with the following problem. I have a data type with multiple fields.I need to enumerate them and store them in a collection for further mapping.</p>\n\n<pre><code>data Worker=Worker{\n        age::Int,\n        name::String,\n        title::Title,\n        income::Int\n    }\n\n\n    data Title=Manager | Dev | Tester deriving (Show)\n\n\n\n    instance Show Worker where \n        show w=let !names=[\"age\",\"name\", \"title\",\"income\"] \n                   !props= [age,name,title,income]  in   -- Do i need to define another new type to be able to flat them down to a list?\n            \"{\"++intercalate \",\" (zipWith (\\x y-&gt; x++\":\"++ y w) names props)++\"}\"\n</code></pre>\n\n<p>Where can i store all all properties (methods)to be able to further use them as a parameter in a higher order function on a given variable of type <code>Worker</code> in our case.</p>\n"}, {"tags": ["haskell", "servant"], "comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1530591564, "post_id": 51146315, "comment_id": 89277238, "body": "If you want to return custom error, you can pass <code>Text</code> instead of <code>Int</code>, parse it manually in your handler and throw your custom error."}], "answers": [{"comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1573872440, "post_id": 51150064, "comment_id": 104041035, "body": "Thank you, the Servant documentation doesn&#39;t seem to mention this anywhere, and I certainly couldn&#39;t find it in digging through the individual module docs. It hardly seems like a rare thing that you&#39;d want to, for example, tell your users their error in a JSON response if they give an incorrect query parameter, rather than simply fail."}, {"owner": {"reputation": 1044, "user_id": 193424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11ba6dfa8271fb1cd0c475a2c0626853?s=128&d=identicon&r=PG", "display_name": "Alp Mestanogullari", "link": "https://stackoverflow.com/users/193424/alp-mestanogullari"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1574180795, "post_id": 51150064, "comment_id": 104135795, "body": "If you sese a good place where this can be mentionned, we&#39;d be happy to take the patch! :-)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1574197617, "post_id": 51150064, "comment_id": 104144045, "body": "Unfortunately I&#39;m very new to Servant, and pretty new to Haskell, I definitely don&#39;t feel I have the knowledge or experience to contribute, even if only to the documentation. But thank you for the offer nonetheless. (I&#39;ll mention in passing that there isn&#39;t any similar solution to the above for <code>QueryParams</code>, which returns a list. I got round it by using the <a href=\"https://hackage.haskell.org/package/http-api-data-0.4.1.1/docs/Web-HttpApiData.html#t:LenientData\" rel=\"nofollow noreferrer\">LenientData</a> type, but unfortunately this has not only added boilerplate to my handlers, it&#39;s made writing tests a lot more annoying.)"}], "tags": [], "owner": {"reputation": 1044, "user_id": 193424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11ba6dfa8271fb1cd0c475a2c0626853?s=128&d=identicon&r=PG", "display_name": "Alp Mestanogullari", "link": "https://stackoverflow.com/users/193424/alp-mestanogullari"}, "is_accepted": true, "score": 6, "last_activity_date": 1530611587, "last_edit_date": 1530611587, "creation_date": 1530606979, "answer_id": 51150064, "question_id": 51146315, "link": "https://stackoverflow.com/questions/51146315/servant-queryparams-parse-error/51150064#51150064", "title": "Servant QueryParams parse error", "body": "<p>The default behaviour of <code>QueryParam</code> is to behave like this: error out if you can't decode, but return Nothing when not specified.</p>\n\n<p>Since servant 0.13, you can however override this. </p>\n\n<p>If you look at <a href=\"https://hackage.haskell.org/package/servant-0.13/docs/Servant-API-QueryParam.html#t:QueryParam\" rel=\"nofollow noreferrer\">the definition of <code>QueryParam</code></a>, you can see that it is in fact just a special case of a more general <code>QueryParam'</code> type:</p>\n\n<pre><code>type QueryParam = QueryParam' '[Optional, Strict]\n</code></pre>\n\n<p><code>QueryParam'</code> takes what we call \"modifiers\", which affect two things:</p>\n\n<ul>\n<li>whether you can survive without a value for this parameter: if you can, your handler gets a <code>Maybe a</code>, if not you directly get an <code>a</code> but it errors out when no value is given. This is <code>Required</code> vs <code>Optional</code>.</li>\n<li>whether you want decoding failures to be fatal or not: if you do, then when decoding fails servant errors out for you otherwise your handler gets an <code>a</code>. If you don't, then your handler gets an <code>Either Text a</code> and you're then free to do whatever you want in case of a decoding error (it's the <code>Left</code> case of the <code>Either</code>, with a textual error message). This is <code>Strict</code> vs <code>Lenient</code>.</li>\n</ul>\n\n<p>So you probably want to define something like <code>type MyQueryParam name a = QueryParam' '[Optional, Lenient]</code> and use this whenever appropriate.</p>\n\n<p>Does that solve your problem?</p>\n"}], "owner": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 324, "favorite_count": 1, "accepted_answer_id": 51150064, "answer_count": 1, "score": 3, "last_activity_date": 1530612636, "creation_date": 1530588929, "last_edit_date": 1530612636, "question_id": 51146315, "link": "https://stackoverflow.com/questions/51146315/servant-queryparams-parse-error", "title": "Servant QueryParams parse error", "body": "<p>Given the following code:</p>\n\n<pre><code>newtype HelloMessage = HelloMessage { msg :: String }\n  deriving (Generic)\n\ninstance ToJSON HelloMessage\n\ntype API2 = \"hello\"\n            :&gt; QueryParam \"age\" Int\n            :&gt; Get '[JSON] HelloMessage\n\nappAPI2 :: Proxy API2\nappAPI2 = Proxy\n\nmyHandler :: Server API2\nmyHandler = helloHandler\n  where\n    helloHandler :: Maybe Int -&gt; Handler HelloMessage\n    helloHandler mAge =\n      let\n        sAge = case mAge of\n                 Nothing -&gt; \"0\"\n                 Just ag -&gt; show ag\n      in\n        return . HelloMessage $ sAge\n\napp2 :: Application\napp2 = serve appAPI2 myHandler\n\nmain :: IO ()\nmain = run 8080 app2\n</code></pre>\n\n<p>I can access <code>/hello</code> which returns <code>{ \"msg\" : 0}</code> or <code>/hello?age=20</code> which returns <code>{ \"msg\" : 20}</code>. But if I set the age to be a non-integer parseable e.g. <code>\"foobar\"</code> which makes the url to be <code>/hello?age=foobar</code> and access it, it returns an error message about parsing error on <code>\"foobar\"</code>.</p>\n\n<p>This behave differently with <code>Capture</code> where if I give the same treatment it'll just return a http 400. </p>\n\n<p>What is wrong my code?</p>\n\n<p>Edit: After further exploration, it does return http 400 on parse error. Now I'm changing the question. How to return custom error message if \n that happens?</p>\n"}, {"tags": ["haskell", "aeson"], "answers": [{"comments": [{"owner": {"reputation": 12035, "user_id": 603094, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/325af9a946cb4337c6640f0e95044be1?s=128&d=identicon&r=PG", "display_name": "kirelagin", "link": "https://stackoverflow.com/users/603094/kirelagin"}, "edited": false, "score": 0, "creation_date": 1530576918, "post_id": 51145110, "comment_id": 89274510, "body": "Oh and you might want to consider using <a href=\"http://hackage.haskell.org/package/aeson-better-errors\" rel=\"nofollow noreferrer\"><code>aeson-better-errors</code></a> to build your JSON parsers."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1530576932, "post_id": 51145110, "comment_id": 89274514, "body": "&quot;Out of bounds&quot; is the wrong error message: the test is just making sure that the number is an integer, not whether it&#39;s in bounds. Further, this will cause a runtime <code>error</code> if the number is an integer that&#39;s actually out of bounds instead of just failing the parse."}, {"owner": {"reputation": 12035, "user_id": 603094, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/325af9a946cb4337c6640f0e95044be1?s=128&d=identicon&r=PG", "display_name": "kirelagin", "link": "https://stackoverflow.com/users/603094/kirelagin"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1530577302, "post_id": 51145110, "comment_id": 89274578, "body": "The function is literally called \u201cto bounded integer\u201d, so it does check the bounds. The detail you are referring to is that it is a different bound that is checked (i.e. it checks that the number fits into an <code>Int</code>), but I am merely answering the question that was asked: how to make a parser fail. I think that debugging your own code is much more instructive than having all your mistakes pointed out at once, when you didn\u2019t ask for it."}], "tags": [], "owner": {"reputation": 12035, "user_id": 603094, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/325af9a946cb4337c6640f0e95044be1?s=128&d=identicon&r=PG", "display_name": "kirelagin", "link": "https://stackoverflow.com/users/603094/kirelagin"}, "is_accepted": false, "score": 1, "last_activity_date": 1530576745, "creation_date": 1530576745, "answer_id": 51145110, "question_id": 51144646, "link": "https://stackoverflow.com/questions/51144646/how-do-i-parse-an-enum-with-aeson/51145110#51145110", "title": "How do I parse an Enum with Aeson?", "body": "<p>You can use the fact that your parser is a <code>Monad</code> (or, to be precise, a <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Monad-Fail.html#t:MonadFail\" rel=\"nofollow noreferrer\"><code>MonadFail</code></a>), so you can make it fail using the <code>fail</code> method. With it your code will look something like this:</p>\n\n<pre><code>instance FromJSON FooBar where\n    parseJSON (Number n) =\n      case maybeInt of\n        Just i -&gt; return (toEnum i)\n        Nothing -&gt; fail \"Out of bounds\"\n      where\n        maybeInt = Scientific.toBoundedInteger n\n    parseJSON _ = mzero\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 2, "last_activity_date": 1530586696, "last_edit_date": 1530586696, "creation_date": 1530576855, "answer_id": 51145120, "question_id": 51144646, "link": "https://stackoverflow.com/questions/51144646/how-do-i-parse-an-enum-with-aeson/51145120#51145120", "title": "How do I parse an Enum with Aeson?", "body": "<p>How about:</p>\n\n<pre><code>import Control.Monad\nimport Control.Monad.Fail as F\n\ndata FooBar = Foo | Bar deriving (Show, Enum, Bounded) -- note Bounded instance\n\ninstance FromJSON FooBar where\n  -- parseJSON is the one for Int, which internally uses the Scientific function\n  -- you used yourself\n  -- Control.Monad.Fail.MonadFail Parser, so safeToEnum may have type\n  -- safeToEnum :: Int -&gt; Parser FooBar\n  -- (Control.Monad.&lt;=&lt;) is (.) but in the Kleisli category\n  -- (&lt;=&lt;) :: (b -&gt; m c) -&gt; (a -&gt; m b) -&gt; (a -&gt; m c)\n  -- (.)   :: (b -&gt;   c) -&gt; (a -&gt;   b) -&gt; (a -&gt;   c)\n  -- (f &lt;=&lt; g) x = do { x' &lt;- g x;   f x' }\n  -- (f  .  g) x = let  x' =  g x in f x'\n  -- it's always nice when something can just be a composition of smaller things\n  parseJSON = safeToEnum &lt;=&lt; parseJSON\n\n-- using fail over mzero gives nicer error messages\n-- (mzero = fail \"mzero\" for Parser, which is *very* informative)\n-- this is a reusable function that can also produce Maybes, Eithers, etc.\n-- depending on context, and works for lots of enumerations, since\n-- many are Bounded (e.g. Bool, Char, etc.), and user-defined ones almost\n-- always are.\nsafeToEnum :: (Enum a, Bounded a, MonadFail m) =&gt; Int -&gt; m a\nsafeToEnum i = if i &lt; min\n                  then F.fail $ show i ++ \" is less than the minimum, \" ++ show min\n                  else if i &gt; max\n                          then F.fail $ show i ++ \" is greater than the maximum, \" ++ show max\n                          else return result\n  where min = fromEnum (minBound `asTypeOf` result)\n        max = fromEnum (maxBound `asTypeOf` result)\n        result = toEnum i -- hooray laziness\n        -- defining result and using it in min and max is safe, because\n        -- asTypeOf ignores the second argument; it's just there to clarify\n        -- to the type system which instance of Bounded we're talking about\n        -- it's not strictly necessary in GHC Haskell, because ScopedTypeVariables\n        -- would allow min = fromEnum (maxBound :: a)\n        -- but using asTypeOf keeps the language extension count down\n</code></pre>\n\n<p>Which produces such results as:</p>\n\n<pre><code>&gt; data D = D { dInt :: Int, dFooBar :: FooBar } deriving (Show, Generic, FromJSON)\n\n&gt; safeToEnum 3 :: Maybe FooBar\nNothing\n-- discards error messages\n&gt; safeToEnum 3 :: Result FooBar\nError \"3 is greater than the maximum, 1\"\n-- keeps error messages\n\n&gt; eitherDecode \"{ \\\"dInt\\\": 5, \\\"dFooBar\\\": 1 }\" :: Either String D\nRight (D {dInt = 5, dFooBar = Bar})\n&gt; eitherDecode \"{ \\\"dInt\\\": 0, \\\"dFooBar\\\": -10 }\" :: Either String D\nLeft \"Error in $.dFooBar: -10 is less than the minimum, 0\"\n-- safeToEnum doesn't cause runtime errors like toEnum\n&gt; toEnum 10 :: FooBar\n*** Exception: toEnum{FooBar}: tag (10) is outside of enumeration's range (0,1)\nCallStack (from HasCallStack):\n  error, called at T.hs:8:41 in main:T\n\n&gt; eitherDecode \"{ \\\"dInt\\\": 0, \\\"dFooBar\\\": 0.5 }\" :: Either String D\nLeft \"Error in $.dFooBar: Int is either floating or will cause over or underflow: 0.5\"\n-- Scientific.toBoundedInteger is there for you, too\n&gt; eitherDecode \"{ \\\"dInt\\\": 0, \\\"dFooBar\\\": 1e42 }\" :: Either String D\nLeft \"Error in $.dFooBar: Int is either floating or will cause over or underflow: 1.0e42\"\n-- and aeson tags the errors with their location\n</code></pre>\n"}], "owner": {"reputation": 1149, "user_id": 1570219, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/26bf6dcd3a00a8b83144efdfcdb3071c?s=128&d=identicon&r=PG", "display_name": "Julian Stecklina", "link": "https://stackoverflow.com/users/1570219/julian-stecklina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 393, "favorite_count": 0, "accepted_answer_id": 51145120, "answer_count": 2, "score": 1, "last_activity_date": 1530586696, "creation_date": 1530572443, "last_edit_date": 1530574383, "question_id": 51144646, "link": "https://stackoverflow.com/questions/51144646/how-do-i-parse-an-enum-with-aeson", "title": "How do I parse an Enum with Aeson?", "body": "<p>I have a type representing enum:</p>\n\n<pre><code>data FooBar = Foo | Bar deriving (Show, Enum)\n</code></pre>\n\n<p>I want to parse this from numeric values in JSON using aeson, i.e. a 0 in the JSON file should return Foo, a 1 should return Bar.</p>\n\n<p>My best attempt is the following:</p>\n\n<pre><code>instance FromJSON FooBar where\n    parseJSON (Number n) = return (case maybeInt of\n                                     Just i -&gt; (toEnum i)\n                                     Nothing -&gt; ??)\n      where maybeInt = (Scientific.toBoundedInteger n)\n    parseJSON _ = mzero\n</code></pre>\n\n<p>But this doesn't really handle the error case. What is the best way to do this?</p>\n"}, {"tags": ["haskell", "external", "haskell-diagrams"], "answers": [{"comments": [{"owner": {"reputation": 1997, "user_id": 737263, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ad00e973f8d4d18fad04d805ae2ef33c?s=128&d=identicon&r=PG", "display_name": "Roman", "link": "https://stackoverflow.com/users/737263/roman"}, "edited": false, "score": 0, "creation_date": 1530658653, "post_id": 51155722, "comment_id": 89310826, "body": "Great explanation, thanks a lot! I&#39;ll try to finish the task with Cairo and update the post."}], "tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": true, "score": 1, "last_activity_date": 1530624883, "last_edit_date": 1530624883, "creation_date": 1530624102, "answer_id": 51155722, "question_id": 51143927, "link": "https://stackoverflow.com/questions/51143927/load-external-image-in-haskell-diagrams/51155722#51155722", "title": "Load external image in Haskell Diagrams", "body": "<p><a href=\"http://hackage.haskell.org/package/diagrams-lib-1.4.2.3/docs/Diagrams-TwoD-Image.html#v:loadImageExt\" rel=\"nofollow noreferrer\"><code>loadImageExt</code></a> appears to expect a <code>FilePath</code>, not a URL, but that's not what the compiler is complaining about. It is complaining that the particular image returned, a <code>DImage Double External</code>, is not <a href=\"http://hackage.haskell.org/package/diagrams-core-1.4.1/docs/Diagrams-Core-Types.html#t:Renderable\" rel=\"nofollow noreferrer\"><code>Renderable</code></a>. This could be because the <a href=\"https://archives.haskell.org/projects.haskell.org/diagrams/doc/manual.html#rendering-backends\" rel=\"nofollow noreferrer\">renderer</a> in use doesn't understand external images; for instance, <a href=\"http://hackage.haskell.org/package/diagrams-svg-1.4.2/docs/Diagrams-Backend-SVG.html#t:SVG\" rel=\"nofollow noreferrer\"><code>Diagrams.Backend.SVG</code></a> appears to support <code>Embedded</code> but not <code>External</code>. In contrast, <a href=\"http://hackage.haskell.org/package/diagrams-html5-1.4.1/docs/Diagrams-Backend-Html5.html#t:Html5\" rel=\"nofollow noreferrer\"><code>Diagrams.Backend.Html5</code></a> supports <code>External</code> but not <code>Embedded</code>. At a guess, it's expected that your diagram refers using local filenames to images, not cross-site URLs. It could be that you can inject URLs with <a href=\"http://hackage.haskell.org/package/diagrams-lib-1.4.2.3/docs/Diagrams-TwoD-Image.html#v:uncheckedImageRef\" rel=\"nofollow noreferrer\"><code>uncheckedImageRef</code></a>, but still only if the backend supports <code>External</code>. The <a href=\"https://archives.haskell.org/projects.haskell.org/diagrams/doc/manual.html#images\" rel=\"nofollow noreferrer\">Diagrams manual section on images</a> claims only the Cairo backend does, but that could be inaccurate. </p>\n"}], "owner": {"reputation": 1997, "user_id": 737263, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ad00e973f8d4d18fad04d805ae2ef33c?s=128&d=identicon&r=PG", "display_name": "Roman", "link": "https://stackoverflow.com/users/737263/roman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 51155722, "answer_count": 1, "score": 2, "last_activity_date": 1530670714, "creation_date": 1530566767, "last_edit_date": 1530670714, "question_id": 51143927, "link": "https://stackoverflow.com/questions/51143927/load-external-image-in-haskell-diagrams", "title": "Load external image in Haskell Diagrams", "body": "<p>So I have this doubt. I already have code that works with local (embedded) image files, but now I need to load an external image instead. Dumb replacing with <code>loadImageExt</code> didn't help:</p>\n\n<pre><code>productImageIO :: IO (Diagram B)\nproductImageIO = do\n  res &lt;- loadImageExt \"https://s7d2.scene7.com/is/image/dkscdn/16JDNMJRDNCLPSBLKJRD_Black_Black_White_is/\"\n  return $\n    case res of\n      Left err -&gt; mempty\n      Right product -&gt; image product\n\n\n\n\u2022 No instance for (Renderable (DImage Double External) B)\n        arising from a use of \u2018image\u2019\n    \u2022 In the expression: image product\n      In a case alternative: Right product -&gt; image product\n      In the second argument of \u2018($)\u2019, namely\n        \u2018case res of\n           Left err -&gt; mempty\n           Right product -&gt; image product\u2019\n   |\n26 |       Right product -&gt; image product\n   |                        ^^^^^^^^^^^^^\n</code></pre>\n\n<p>Looking at the source of <a href=\"https://docs.futurice.com/haskell-mega-repo/diagrams-lib-1.4.1.2/src/Diagrams.TwoD.Image.html#loadImageExt\" rel=\"nofollow noreferrer\">loadImageExt</a> and <a href=\"http://hackage.haskell.org/package/JuicyPixels-3.2.9.5/docs/src/Codec-Picture.html#readImage\" rel=\"nofollow noreferrer\">readImage</a> I cannot see where it actually performs http stuff to get the image.</p>\n\n<p>And the docs say, <em>loadImageExt, Check that a file exists, and use JuicyPixels to figure out the right size, but save a reference to the image instead of the raster data</em></p>\n\n<p>So please excuse my ignorance, but does this mean that I need to add http loading logic in this case? Or I'm just missing some point to make this work?</p>\n\n<p><strong>UPD</strong>: I might be wrong and there's some fast and easy way to load external images by just putting the link, but what worked for me was using <a href=\"http://hackage.haskell.org/package/http-conduit-2.3.2/docs/Network-HTTP-Simple.html\" rel=\"nofollow noreferrer\">http-conduit</a>, getting the response in ByteString and parsing it:</p>\n\n<pre><code>productImageIO :: String -&gt; IO (Diagram B)\nproductImageIO path = do\n   response &lt;- fmap getResponseBody $ parseRequest path &gt;&gt;= httpBS\n   return $\n     case loadImageEmbBS response of\n        Left error -&gt; mempty\n        Right decodedImage -&gt; image decodedImage\n</code></pre>\n\n<p>It could load even https image, like this <a href=\"https://sneakernews.com/wp-content/uploads/2018/01/jordan-russell-westbrook-signature-shoe-creamsicle-3.jpg?w=1140\" rel=\"nofollow noreferrer\">https://sneakernews.com/wp-content/uploads/2018/01/jordan-russell-westbrook-signature-shoe-creamsicle-3.jpg?w=1140</a></p>\n"}, {"tags": ["haskell", "serialization", "types", "rpc", "existential-type"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1530606699, "post_id": 51143593, "comment_id": 89283502, "body": "I believe this might be impossible to do in Haskell without some more boilerplate. The point is that, at <i>runtime</i>, we would decode the bits into a <code>TypeRep</code> for some type <code>a</code>, and only then we would need to access the instance for <code>Serializable a</code>. To perform this, since <code>a</code> is unknown at compile time (and is not passed as an argument, but discovered from bits) we need to have the list of all instances at runtime, something that GHC does not keep around."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1530607511, "post_id": 51143593, "comment_id": 89283992, "body": "By the way, I also believe that there might be some generic way to handle pairs. You should be able to  check that the <code>TypeRep</code> is for a pair type, and get the two <code>TypeRep</code>s for the components. After that, one can recurse."}, {"owner": {"reputation": 780, "user_id": 1315126, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/35561833646b79f4f817c343bacb7c78?s=128&d=identicon&r=PG", "display_name": "Mathias Vorreiter Pedersen", "link": "https://stackoverflow.com/users/1315126/mathias-vorreiter-pedersen"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530631956, "post_id": 51143593, "comment_id": 89299963, "body": "I had the feeling that this wasn&#39;t possible :( Your idea for pairs sounds interesting, however! I&#39;m not sure how I can discover that a TypeRep is for a pair without knowing the specific component types, given that Typeable requires monomorphic types?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530634222, "post_id": 51143593, "comment_id": 89301217, "body": "I think you can adapt this technique to check for pairs even if the components are unknown <a href=\"https://stackoverflow.com/questions/48951745/printing-dynamic-data\" title=\"printing dynamic data\">stackoverflow.com/questions/48951745/printing-dynamic-data</a>"}], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 1, "last_activity_date": 1530760931, "creation_date": 1530760931, "answer_id": 51182953, "question_id": 51143593, "link": "https://stackoverflow.com/questions/51143593/rpc-or-how-do-i-disambiguate-function-application-based-on-typerep-values/51182953#51182953", "title": "RPC (Or: How do I disambiguate function application based on TypeRep values?)", "body": "<p><code>Data.Dynamic</code> lets us put arbitrary Haskell values into a single container, and get them out again in a type-safe way.  That's a good start towards inter-process communication; I'll come back to serialization below.</p>\n\n<p>We can write a program that takes a list of <code>Dynamic</code> values, checks for the number &amp; types it needs, and returns a result in the same way.</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n-- | Experiments with type-safe serialization.\n\nmodule Main where\n\nimport Data.Proxy\nimport Data.Dynamic\nimport Data.Foldable\nimport Data.Type.Equality\nimport Type.Reflection\n\nfoo :: Int -&gt; String -&gt; String\nfoo i s = concat (replicate i s)\n\nactor :: [Dynamic] -&gt; Either String [Dynamic]\nactor (di : ds : _) = case (fromDynamic di, fromDynamic ds) of\n    (Just i, Just s) -&gt; Right [toDyn (foo i s)]\n    _ -&gt; Left \"Wrong types of arguments\"\nactor _ = Left \"Not enough arguments\"\n\ncaller :: Either String [Dynamic]\ncaller = actor [ toDyn (3::Int), toDyn \"bar\" ]\n\nmain :: IO ()\nmain = case caller of\n    Left err -&gt; putStrLn err\n    Right dyns -&gt; for_ dyns (\\d -&gt; case fromDynamic d of\n                                    Just s -&gt; putStrLn s\n                                    Nothing -&gt; print d)\n</code></pre>\n\n<p>We can use a <code>TypeRep</code> to guide selection of a class instance.  (For ease of testing my code, I used <code>String</code>.)</p>\n\n<pre><code>class Serial a where\n    encode :: a -&gt; String\n    decode :: String -&gt; Maybe a\n\ndecodeAs :: Serial a =&gt; TypeRep a -&gt; String -&gt; Maybe a\ndecodeAs _ s = decode s\n</code></pre>\n\n<p>Finally, we'd like to serialize the <code>TypeRep</code>, and when decoding, check that the encoded type matches the type that we're decoding at.</p>\n\n<pre><code>instance Serial SomeTypeRep\n\nencodeDyn :: (Typeable a, Serial a) =&gt; a -&gt; (String, String)\nencodeDyn a = (encode (SomeTypeRep (typeOf a)), encode a)\n\ndecodeDynamic :: forall a. (Typeable a, Serial a) =&gt; String -&gt; String -&gt; Maybe a\ndecodeDynamic tyStr aStr = case decode tyStr of\n    Nothing -&gt; Nothing\n    Just (SomeTypeRep ty) -&gt;\n        case eqTypeRep ty (typeRep :: TypeRep a) of\n               Nothing -&gt; Nothing\n               Just HRefl -&gt; decodeAs ty aStr\n</code></pre>\n"}], "owner": {"reputation": 780, "user_id": 1315126, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/35561833646b79f4f817c343bacb7c78?s=128&d=identicon&r=PG", "display_name": "Mathias Vorreiter Pedersen", "link": "https://stackoverflow.com/users/1315126/mathias-vorreiter-pedersen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 2, "accepted_answer_id": 51182953, "answer_count": 1, "score": 3, "last_activity_date": 1530760931, "creation_date": 1530564842, "last_edit_date": 1530632447, "question_id": 51143593, "link": "https://stackoverflow.com/questions/51143593/rpc-or-how-do-i-disambiguate-function-application-based-on-typerep-values", "title": "RPC (Or: How do I disambiguate function application based on TypeRep values?)", "body": "<p>I'm building some infrastructure for doing remote procedure calls in Haskell, and for reasons that are too long to explain here, I cannot reuse existing libraries.</p>\n\n<p>So here's the setup: I have a type class for serializing and deserializing data:</p>\n\n<pre><code>class Serializable a where\n  encode :: a -&gt; B.ByteString\n  decode :: B.ByteString -&gt; Maybe a\n  maxSize :: a -&gt; Int\n</code></pre>\n\n<p>where <code>B</code> is <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString.html\" rel=\"nofollow noreferrer\">Data.ByteString</a>.</p>\n\n<p>I can use this to implement serialization of integers, booleans, lists of serializables, tuples of serializables ect.</p>\n\n<p>Now I want to send some arguments across a network to a server, which then performs a computation based on these arguments, and sends back a result. So I create an existential type representing things that can be serialized:</p>\n\n<pre><code>data SerializableExt = forall t . Serializable t =&gt; SerializableExt t\n</code></pre>\n\n<p>because I want to send something of type <code>[SerializableExt]</code>.</p>\n\n<p>So, of course, I need to create an instance <code>Serializable SerializableExt</code>. This is where the problem starts:</p>\n\n<p>In order to implement <code>decode :: B.ByteString -&gt; Maybe SerializableExt</code> I need to know the concrete type that the existential type SerializableExt wraps.</p>\n\n<p>So I implement <code>encode :: SerializableExt -&gt; B.ByteString</code> as serializing the concrete type along with the value:</p>\n\n<pre><code>encode (SerializableExt x) = encode (typeOf x, x)\n</code></pre>\n\n<p>using <code>typeOf</code> from <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Typeable.html\" rel=\"nofollow noreferrer\">Data-Typeable</a>. The problem is now the implementation of <code>decode :: B.ByteString -&gt; Maybe SerializableExt</code>:</p>\n\n<pre><code>decode bs =\n  let (tyenc, xenc) = splitPair bs -- Not really important. It just splits bs into the two components\n  in case (decode tyenc :: Maybe TypeRep) of\n       Just ty -&gt; SerializableExt &lt;$&gt; _ -- Somehow invoke decode xenc, where the choice of which decode to execute depends on the value of ty.\n       _ -&gt; Nothing\n</code></pre>\n\n<p>But I can't see how to fill in the hole here. Because of Haskell's separation of the value level and the type level I can't use the value of ty to disambiguate the invocation of <code>decode xenc</code>, right?</p>\n\n<p>Is there a way to solve this issue, and actually put something in the hole which will do what I want? Or can you come up with another design?</p>\n\n<p>EDIT: One way of doing it would be the following:</p>\n\n<pre><code>decode bs =\n  let (tyenc, xenc) = splitPair bs\n  in SerializableExt &lt;$&gt;\n       case (decode tyenc :: Maybe TypeRep) of\n         Just ty\n           | ty == typeRep (Proxy :: Proxy Int) -&gt; decode xenc :: Maybe Int\n           | ty = typeRep (Proxy :: Proxy ()) -&gt; decode xenc :: Maybe ()\n           | ...\n         _ -&gt; Nothing\n</code></pre>\n\n<p>but this is bad for several reasons:</p>\n\n<ol>\n<li>It's tedious to extend.</li>\n<li>It cannot handle pairs (or generally: tuples) generically; every\ncombination of types needs to be handled.</li>\n<li>It's not very Haskelly</li>\n</ol>\n"}, {"tags": ["haskell", "types", "sqrt"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1530561848, "post_id": 51142848, "comment_id": 89270144, "body": "&quot;Possible fix:     add (Floating a) to the context of       the type signature for:         isPrime&quot; have you tried this?"}, {"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 1, "creation_date": 1530562026, "post_id": 51142848, "comment_id": 89270222, "body": "Note that you can&#39;t use <code>fromIntegral</code> on a <code>Num a</code> either, since you can&#39;t guarantee that <code>a</code> is integral!"}], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 5738186, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a07da71f6b6d75ab183c759bba69e35a?s=128&d=identicon&r=PG", "display_name": "\u0413\u0435\u043e\u0440\u0433\u0438 \u041b\u0430\u043b\u0435\u0432", "link": "https://stackoverflow.com/users/5738186/%d0%93%d0%b5%d0%be%d1%80%d0%b3%d0%b8-%d0%9b%d0%b0%d0%bb%d0%b5%d0%b2"}, "edited": false, "score": 0, "creation_date": 1530601448, "post_id": 51143108, "comment_id": 89280808, "body": "I don&#39;t know why, but I really thought that (Num a) allows a more broad set of operations, I really should&#39;ve checked that. Thank you for your answer."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1530623522, "post_id": 51143108, "comment_id": 89294314, "body": "It would be more accurate to say that <code>Num</code> provides a narrow set of operations and therefore a broad range of implications."}, {"owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 0, "creation_date": 1530624415, "post_id": 51143108, "comment_id": 89294942, "body": "Or maybe, <code>Num</code> is the most basic numeric class that has subclasses with empty intersection."}], "tags": [], "owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "is_accepted": true, "score": 3, "last_activity_date": 1530562187, "creation_date": 1530562187, "answer_id": 51143108, "question_id": 51142848, "link": "https://stackoverflow.com/questions/51142848/struggling-with-haskell-type-system/51143108#51143108", "title": "Struggling with Haskell type system", "body": "<p>You have two problems in your code:</p>\n\n<ol>\n<li>Incompatible types.</li>\n</ol>\n\n<p>Calling both <code>sqrt n</code> and <code>(mod n)</code> reqiure n to be both <code>Floating</code> and <code>Integral</code> at the same time.</p>\n\n<ol start=\"2\">\n<li>Insufficient context. Requiring only <code>(Num a)</code> does not allow neither of the operations.</li>\n</ol>\n\n<p>A possible fix would be: a) narrow down type context to a much more concise <code>(Integral a)</code>; b) add <code>fromIntegral</code> to <code>sqrt</code>'s argument:</p>\n\n<pre><code>isPrime :: Integral a =&gt; a -&gt; Bool\nisPrime n\n    | n &lt;= 1 = False\n    | otherwise = not $ 0 `elem` map (mod n) [2..m] where m = floor $ sqrt $fromIntegral n\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 41, "user_id": 5443156, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PrX7rSqdy-s/AAAAAAAAAAI/AAAAAAAAADc/6SVP0qX4Snk/photo.jpg?sz=128", "display_name": "Josh Ferrerra", "link": "https://stackoverflow.com/users/5443156/josh-ferrerra"}, "is_accepted": false, "score": 4, "last_activity_date": 1530585480, "creation_date": 1530585480, "answer_id": 51145915, "question_id": 51142848, "link": "https://stackoverflow.com/questions/51142848/struggling-with-haskell-type-system/51145915#51145915", "title": "Struggling with Haskell type system", "body": "<p>As others have mentioned, the use of <code>mod</code> requires <code>a</code> to be <code>Integral</code>, and the use of <code>sqrt</code> requires <code>a</code> to be <code>Floating</code>. Judging by the name of your function, I'm assuming that you want to use it on integral types.\nSo, you can fix this by changing your signature to <code>isPrime :: (Integral a) =&gt; a -&gt; Bool</code>, then precomposing <code>sqrt</code> with <code>fromIntegral</code>. You could do something like</p>\n\n<pre><code>where m = floor . sqrt . fromIntegral $ n\n</code></pre>\n\n<p>Another option would be to replace <code>[1..m]</code> with something like <code>takeWhile (\\x -&gt; x * x &lt;= n) [1..]</code> to avoid the need for <code>Floating</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1530608902, "post_id": 51149607, "comment_id": 89284834, "body": "I didn&#39;t test for extremely large primes, where the quotient storage may take more time and the square root actually runs into rounding issues. That should happen past about <code>2^53</code>."}], "tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 1, "last_activity_date": 1530609141, "last_edit_date": 1530609141, "creation_date": 1530605401, "answer_id": 51149607, "question_id": 51142848, "link": "https://stackoverflow.com/questions/51142848/struggling-with-haskell-type-system/51149607#51149607", "title": "Struggling with Haskell type system", "body": "<p>The issue the compiler is describing is that you're applying incompatible operations to the same type: <code>mod</code> requires <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Integral\" rel=\"nofollow noreferrer\"><code>Integral a</code></a>, <code>sqrt</code> requires <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#t:Floating\" rel=\"nofollow noreferrer\"><code>Floating a</code></a>, and no type satisfies both. You could work around that using type conversions like <code>fromIntegral</code> and <code>ceiling</code>, but you'd want to be careful to avoid rounding errors. For my test, I removed the type constraint and used <code>m = ceiling $ sqrt $ fromIntegral n</code>, which led to the inferred type <code>isPrimeSqrt :: Integral a =&gt; a -&gt; Bool</code>. </p>\n\n<p>Another approach is to consider why the conflict was hit and look for other solutions. The reason for <code>sqrt</code> is to produce an optimized stopping point for the test. Can we find that stopping point in another manner?</p>\n\n<p>As it turns out, while division is expensive, it frequently produces two results: the quotient and remainder. With <code>mod</code> you're looking for the latter, but we have <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:divMod\" rel=\"nofollow noreferrer\"><code>divMod</code></a> and <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:quotRem\" rel=\"nofollow noreferrer\"><code>quotRem</code></a> which produce both. So it could be worth testing if that's notably slower than the plain <code>mod</code> test (<a href=\"http://donkey.vernier.se/~yann/hs-bench/prime.html\" rel=\"nofollow noreferrer\">benchmark results</a>, comparing <code>[2..]</code> vs <code>[2..m]</code>). </p>\n\n<pre><code>isPrime n = (n &gt; 1) &amp;&amp; null (filter isFactor (takeWhile notTooHigh divisors))\n  where notTooHigh (divisor,quotient,_) = divisor &lt;= quotient\n        isFactor (_,_,remainder) = remainder == 0\n        divisors = [(divisor,quotient,remainder) |\n                    divisor &lt;- 2:[3,5..],\n                    let (quotient,remainder) = quotRem n divisor]\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 5738186, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a07da71f6b6d75ab183c759bba69e35a?s=128&d=identicon&r=PG", "display_name": "\u0413\u0435\u043e\u0440\u0433\u0438 \u041b\u0430\u043b\u0435\u0432", "link": "https://stackoverflow.com/users/5738186/%d0%93%d0%b5%d0%be%d1%80%d0%b3%d0%b8-%d0%9b%d0%b0%d0%bb%d0%b5%d0%b2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 51143108, "answer_count": 3, "score": 1, "last_activity_date": 1530609141, "creation_date": 1530560819, "question_id": 51142848, "link": "https://stackoverflow.com/questions/51142848/struggling-with-haskell-type-system", "title": "Struggling with Haskell type system", "body": "<p>I am trying to learn some Haskell by doing basic tasks in the particular case I am trying to implement some basic function for primality check, but I really can figure out the types, my code is</p>\n\n<pre><code>isPrime :: (Num a) =&gt; a -&gt; Bool\nisPrime n\n    | n &lt;= 1 = False\n    | otherwise = not $ 0 `elem` map (mod n) [2..m] where m = floor $ sqrt n\n</code></pre>\n\n<p>I tried instead of <code>(Num a) =&gt; a</code> to use different number types or to use <code>sqrt</code> with <code>fromIntegral</code> but I still get error messages, like:</p>\n\n<pre><code>*Could not deduce (Floating a) arising from a use of `sqrt'\n  from the context: Num a\n    bound by the type signature for:\n               isPrime :: forall a. Num a =&gt; a -&gt; Bool\n    at Helpers.hs:5:1-31\n  Possible fix:\n    add (Floating a) to the context of\n      the type signature for:\n        isPrime :: forall a. Num a =&gt; a -&gt; Bool\n* In the second argument of `($)', namely `sqrt n'\n  In the expression: floor $ sqrt n\n  In an equation for `m': m = floor $ sqrt n\n| otherwise = not $ 0 `elem` map (mod n) [2..m] where m = floor $ sqrt n\n</code></pre>\n\n<p>I can really use some help here, thank you in advance.</p>\n"}, {"tags": ["csv", "parsing", "haskell"], "comments": [{"owner": {"reputation": 2511, "user_id": 2859614, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/N21aX.jpg?s=128&g=1", "display_name": "MackM", "link": "https://stackoverflow.com/users/2859614/mackm"}, "edited": false, "score": 0, "creation_date": 1530560967, "post_id": 51142250, "comment_id": 89269785, "body": "Hello nat, and welcome to the site!  We generally try to keep questions extremely to-the-point so I&#39;ve gone ahead and trimmed yours a bit, feel free to edit it again if you aren&#39;t happy with my changes."}], "answers": [{"comments": [{"owner": {"reputation": 73, "user_id": 5368620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71cd5c45fc1ae2daf61dc8d6496b36d3?s=128&d=identicon&r=PG&f=1", "display_name": "nat", "link": "https://stackoverflow.com/users/5368620/nat"}, "edited": false, "score": 1, "creation_date": 1530560193, "post_id": 51142351, "comment_id": 89269482, "body": "I added a header and still have the same error: sepal_length, sepal_width, petal_length, petal_width, type 5.1,3.5,1.4,0.2,Iris-setosa ..."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 73, "user_id": 5368620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71cd5c45fc1ae2daf61dc8d6496b36d3?s=128&d=identicon&r=PG&f=1", "display_name": "nat", "link": "https://stackoverflow.com/users/5368620/nat"}, "edited": false, "score": 1, "creation_date": 1530561655, "post_id": 51142351, "comment_id": 89270056, "body": "there are spaces in your header that somehow cassava is preserving. I could get it to parse this header with no spaces <code>sepal_length,sepal_width,petal_length,petal_width,iris_type</code>"}, {"owner": {"reputation": 73, "user_id": 5368620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71cd5c45fc1ae2daf61dc8d6496b36d3?s=128&d=identicon&r=PG&f=1", "display_name": "nat", "link": "https://stackoverflow.com/users/5368620/nat"}, "edited": false, "score": 0, "creation_date": 1530562202, "post_id": 51142351, "comment_id": 89270302, "body": "using the same code? I fixed the header and I still get the same error, maybe its something with my configuration file?"}, {"owner": {"reputation": 73, "user_id": 5368620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71cd5c45fc1ae2daf61dc8d6496b36d3?s=128&d=identicon&r=PG&f=1", "display_name": "nat", "link": "https://stackoverflow.com/users/5368620/nat"}, "edited": false, "score": 0, "creation_date": 1530563794, "post_id": 51142351, "comment_id": 89270930, "body": "It worked!!! I had one of the names in the header wrong! thank you :) :)"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 4, "last_activity_date": 1530563839, "last_edit_date": 1530563839, "creation_date": 1530558415, "answer_id": 51142351, "question_id": 51142250, "link": "https://stackoverflow.com/questions/51142250/cassava-parsing-error-in-haskell/51142351#51142351", "title": "Cassava parsing error in haskell", "body": "<p>It appears your data does not have a header, which is assumed by <a href=\"https://hackage.haskell.org/package/cassava-0.5.1.0/docs/Data-Csv.html#v:decodeByName\" rel=\"nofollow noreferrer\"><code>decodeByName</code></a></p>\n\n<blockquote>\n  <p>The data is assumed to be preceeded by a header. </p>\n</blockquote>\n\n<p>Add a header, or use <code>decode NoHeader</code> and the <code>FromRecord</code> type class.</p>\n"}], "owner": {"reputation": 73, "user_id": 5368620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71cd5c45fc1ae2daf61dc8d6496b36d3?s=128&d=identicon&r=PG&f=1", "display_name": "nat", "link": "https://stackoverflow.com/users/5368620/nat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "accepted_answer_id": 51142351, "answer_count": 1, "score": 5, "last_activity_date": 1530563839, "creation_date": 1530557908, "last_edit_date": 1530561038, "question_id": 51142250, "link": "https://stackoverflow.com/questions/51142250/cassava-parsing-error-in-haskell", "title": "Cassava parsing error in haskell", "body": "<p>Im trying to convert a csv into a vector using cassava. The csv Im trying to convert is the fischer iris data set, used for machine learning. It consists of four doubles and one string.\nMy code is the following:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main where\nimport Data.Csv\nimport qualified Data.ByteString.Lazy as BS\nimport qualified Data.Vector as V\n\ndata Iris = Iris\n  { sepal_length  :: !Double\n  , sepal_width   :: !Double\n  , petal_length  :: !Double\n  , petal_width   :: !Double\n  , iris_type     :: !String\n } deriving (Show, Eq, Read)\n\ninstance FromNamedRecord Iris where\n  parseNamedRecord r =\n    Iris\n      &lt;$&gt; r .: \"sepal_length\"\n      &lt;*&gt; r .: \"sepal_width\"\n      &lt;*&gt; r .: \"petal_length\"\n      &lt;*&gt; r .: \"petal_width\"\n      &lt;*&gt; r .: \"iris_type\"\n\nprintIris :: Iris -&gt; IO ()\nprintIris r  = putStrLn $  show (sepal_length r) ++ show (sepal_width r)\n   ++ show(petal_length r) ++ show(petal_length r) ++ \"hola\"\n\nmain :: IO ()\nmain = do\n  csvData &lt;- BS.readFile \"./iris/test-iris\"\n  print csvData\n  case decodeByName csvData of\n    Left err -&gt; putStrLn err\n    -- forM : O(n) Apply the monadic action to all elements of the vector,\n    -- yielding a vector of results.\n    Right (h, v) -&gt; V.forM_ v $ printIris\n</code></pre>\n\n<p>When I run this, it seems as if the csvData is correctly formatted, the first lines from the print csvData return the following: </p>\n\n<pre><code>\"5.1,3.5,1.4,0.2,Iris-setosa\\n4.9,3.0,1.4,0.2,Iris- setosa\\n4.7,3.2,1.3,0.2,Iris-setosa\\n4.6,3.1,1.5,0.2,Iris-setosa\\n5.0,3.6,1.4,0.2,Iris-setosa\\n5.4,3.9,1.7,0.4,Iris-setosa\\n4.6,3.4,1.4,0.3,Iris-setosa\\n5.0,3.4,1.5,0.2,Iris-setosa\\n4.4,2.9,1.4,0.2,Iris-setosa\\n4.9,3.1,1.5,0.1,Iris-setosa\\n5.4,3.7,1.5,0.2,Iris-setosa\\n4.8,3.4,1.6,0.2,Iris-setosa\\n4.8,3.0,1.4,0.1,Iris-setosa\\n4.3,3.0,1.1,0.1,Iris-setosa\\n5.8,4.0,1.2,0.2,Iris-setosa\\n5.7,4.4,1.5,0.4,Iris-set\n</code></pre>\n\n<p>But I get the following error:</p>\n\n<pre><code>parse error (Failed reading: conversion error: no field named \"sepal_length\")  at \n4.7,3.2,1.3,0.2,Iris-setosa\n4.6,3.1,1.5,0.2,Iris-setosa\n5.0,3.6,1.4,0.2,Iris-setosa\n5.4,3.9,1.7,0.4 (truncated)\n</code></pre>\n\n<p>Does anybody have any idea as to why I can be getting this error? The csv has no missing values, and if I replace the line which produces the error for another row I get the same error.</p>\n"}, {"tags": ["c++", "function", "haskell", "terminal"], "comments": [{"owner": {"reputation": 149509, "user_id": 4342498, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/l3j88.jpg?s=128&g=1", "display_name": "NathanOliver", "link": "https://stackoverflow.com/users/4342498/nathanoliver"}, "edited": false, "score": 1, "creation_date": 1530546992, "post_id": 51139808, "comment_id": 89263764, "body": "There should be command line options to call ghci with.  Otherwise you could (I don&#39;t know if you actually can or not) compile the Haskell code into an executable and then call that executable from your c++ code."}, {"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 0, "creation_date": 1530547852, "post_id": 51139808, "comment_id": 89264184, "body": "Maybe you&#39;re looking for this : <a href=\"https://wiki.haskell.org/Calling_Haskell_from_C\" rel=\"nofollow noreferrer\">wiki.haskell.org/Calling_Haskell_from_C</a> ?"}], "answers": [{"tags": [], "owner": {"reputation": 693, "user_id": 1717607, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/645sy.png?s=128&g=1", "display_name": "Thomas Nelson", "link": "https://stackoverflow.com/users/1717607/thomas-nelson"}, "is_accepted": false, "score": 0, "last_activity_date": 1530547473, "last_edit_date": 1530547473, "creation_date": 1530547106, "answer_id": 51139892, "question_id": 51139808, "link": "https://stackoverflow.com/questions/51139808/how-to-manage-ghci-from-c/51139892#51139892", "title": "How to manage ghci from C++?", "body": "<p><code>ghci</code> is the interactive repl. Use <code>ghc</code> to compile your .hs file to a binary executable. See <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using.html#using-ghc\" rel=\"nofollow noreferrer\">the ghc docs</a>.  For example if you have myfile.hs with a main function then running <code>ghc myfile.hs</code> will create an executable <code>myfile</code>.  Then in your c++ try <code>system(\"./myfile\")</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 11, "user_id": 10022408, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e10855dfcdba08706e48add36e8d5373?s=128&d=identicon&r=PG&f=1", "display_name": "Sz. Bal&#225;zs", "link": "https://stackoverflow.com/users/10022408/sz-bal%c3%a1zs"}, "edited": false, "score": 0, "creation_date": 1530551371, "post_id": 51140207, "comment_id": 89265680, "body": "Thank you very much! ghc Module.hs -e expression &lt;-- this solved my problem, exactly what I was looking for!"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1530625345, "post_id": 51140207, "comment_id": 89295598, "body": "Although it isn&#39;t exactly easy to link a dynamic Haskell library into a C++ program, I wouldn&#39;t say it&#39;s \u201creally, really complicated\u201d."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530693241, "post_id": 51140207, "comment_id": 89321192, "body": "@leftaroundabout Depends on your skill level. If you&#39;re already an expect C++ programmer, it&#39;s not that hard I guess. If you&#39;re just learning programming for the first time... it&#39;s <i>real</i> hard!"}], "tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": true, "score": 6, "last_activity_date": 1530548490, "creation_date": 1530548490, "answer_id": 51140207, "question_id": 51139808, "link": "https://stackoverflow.com/questions/51139808/how-to-manage-ghci-from-c/51140207#51140207", "title": "How to manage ghci from C++?", "body": "<p>Depending on what you're trying to do...</p>\n\n<ul>\n<li><p>If you have a complete Haskell <em>program</em>, you can <em>compile</em> it using GHC and then run the resulting compiled program like any other program.</p></li>\n<li><p>Alternatively, the <code>runhaskell</code> command takes the name of a source code file and runs it for you without needing to compile it first. (It still needs to contain a complete, runnable <em>program</em> though.)</p></li>\n<li><p>If you have a source file containing several functions, you can use <code>ghc Module.hs -e expression</code> to run an arbitrary Haskell <em>expression</em> in the specified module.</p></li>\n<li><p>Finally, you could try compiling the Haskell code into a dynamic library and link it into your C++ code... but that's really, really complicated.</p></li>\n<li><p>It's also possible to call GHC as a library... but again, that's very complicated to do.</p></li>\n</ul>\n"}], "owner": {"reputation": 11, "user_id": 10022408, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e10855dfcdba08706e48add36e8d5373?s=128&d=identicon&r=PG&f=1", "display_name": "Sz. Bal&#225;zs", "link": "https://stackoverflow.com/users/10022408/sz-bal%c3%a1zs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 51140207, "answer_count": 2, "score": 0, "last_activity_date": 1530549706, "creation_date": 1530546752, "last_edit_date": 1530549706, "question_id": 51139808, "link": "https://stackoverflow.com/questions/51139808/how-to-manage-ghci-from-c", "title": "How to manage ghci from C++?", "body": "<p>I have a .hs file in which there is a Haskell function. My C++ program is supposed to run ghci, call the function, then write the output to a text file, then exit ghci. I thought it could be easily done with <code>system()</code>, with which I could have been able to menage the terminal, and do all these good things. But when I execute <code>system(\"ghci\")</code>, the C++ program pauses and waits for me to be done with Haskelling.</p>\n\n<p>How can I run a Haskell program from C++?</p>\n"}, {"tags": ["haskell", "optimization", "singly-linked-list"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1530542500, "post_id": 51138675, "comment_id": 89261351, "body": "Probably has something to do with stream fusion / rewrite rules. Anyway this comparison is somewhat useless because much (most?) of the time will be spent generating the list."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530542681, "post_id": 51138675, "comment_id": 89261463, "body": "@leftaroundabout I do not understand. If you are talking about particular compiler optimizations, why are they not triggered anymore when the code is transplanted away from <code>base</code>?"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530542733, "post_id": 51138675, "comment_id": 89261487, "body": "@leftaroundabout I assumed all three variants will spend the same time generating the list, since the code in <code>main</code> is identical. Is it wrong to think so?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530543038, "post_id": 51138675, "comment_id": 89261643, "body": "Well, it isn&#39;t the same code. There&#39;s probably a rewrite rule somewhere in <code>Data.List</code> that fuses <code>Prelude.head . Prelude.drop n</code> into something more efficient, but the compiler can&#39;t really know that this could also apply to your <code>dropGhc</code>."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1530543477, "post_id": 51138675, "comment_id": 89261921, "body": "I think the most likely <code>foldr</code>/<code>build</code> fusion point is between <code>enumFrom</code> and <code>drop</code>. If those fuse, dropping all those elements is done as a non-allocating loop.  Actually, that seems like a useful test.  If you run your programs with <code>+RTS -s</code> do they report noticeably different allocation?"}, {"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 1, "creation_date": 1530543818, "post_id": 51138675, "comment_id": 89262128, "body": "You can use <a href=\"http://hackage.haskell.org/package/list-fusion-probe\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/list-fusion-probe</a> to find out where fusion happens."}, {"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 1, "creation_date": 1530544438, "post_id": 51138675, "comment_id": 89262430, "body": "Maybe the optimization flags are not the same when you compile your executable and when Prelude was compiled? (like -O2 for example, see <a href=\"https://wiki.haskell.org/Performance/GHC\" rel=\"nofollow noreferrer\">wiki.haskell.org/Performance/GHC</a>)"}, {"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 7, "creation_date": 1530545881, "post_id": 51138675, "comment_id": 89263172, "body": "Oh, you are running <code>ghc</code> without any optimization flags? Explicitly pass <code>-O1</code> or <code>-O2</code> when you use the copy from the <code>Prelude</code> and see if it makes a difference."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1530547393, "post_id": 51138675, "comment_id": 89263975, "body": "@leftaroundabout, no, <code>drop</code> does not participate in fold/build fusion or, as far as I know, any other rewrite rules in <code>base</code>. People have tried to give it rules that don&#39;t behave very badly, but they&#39;ve failed."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1530548614, "post_id": 51138675, "comment_id": 89264567, "body": "What does the Core say?"}], "answers": [{"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1530593623, "post_id": 51144244, "comment_id": 89277722, "body": "Thank you. But why is Prelude always compiled with optimizations? Where is that specified?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1530594522, "post_id": 51144244, "comment_id": 89278000, "body": "@IgnatInsarov, probably somewhere in the <a href=\"https://github.com/ghc/ghc\" rel=\"nofollow noreferrer\">ghc source code</a>.  The prelude is compiled once into <code>Prelude.o</code> (or similar) then linked to your program, thus whatever settings applied when it was first compiled are the ones reflected in its code; it&#39;s not like a C header which is &quot;pasted&quot; verbatim into your project."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1530606818, "post_id": 51144244, "comment_id": 89283575, "body": "I looked at <code>base.cabal</code> and nothing along the lines of <code>ghc-options: -O2</code> revealed itself."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1530607116, "post_id": 51144244, "comment_id": 89283758, "body": "@IgnatInsarov <a href=\"https://www.haskell.org/cabal/users-guide/nix-local-build.html#cfg-field-optimization\" rel=\"nofollow noreferrer\">optimization is enabled by default by <code>cabal</code></a>.  Also, I admire your diligence to really find the root cause!"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1530607244, "post_id": 51144244, "comment_id": 89283821, "body": "Oh weird, <a href=\"https://github.com/commercialhaskell/stack/issues/2132\" rel=\"nofollow noreferrer\">stack apparently uses the same options as cabal</a> so now I can&#39;t explain.  You could try <code>--cabal-verbose</code> option..."}, {"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 2, "creation_date": 1530616026, "post_id": 51144244, "comment_id": 89289373, "body": "The optimization level for <code>base</code> is specified in GHC&#39;s build configurations: <a href=\"https://github.com/ghc/ghc/blob/b4e64839a95d024252950f07e3da50c3d4087882/mk/config.mk.in#L318\" rel=\"nofollow noreferrer\">github.com/ghc/ghc/blob/&hellip;</a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1530631049, "post_id": 51144244, "comment_id": 89299400, "body": "@IgnatInsarov, be sure to see sjakobi&#39;s comment. The libraries shipped with GHC are not actually built by <code>cabal-install</code>. The GHC build system uses a custom build procedure to allow it to build more things in parallel. In particular, it only looks at what modules depend on what modules--it doesn&#39;t care about package dependencies. So if module <code>A</code> from package <code>a</code> depends on module <code>B</code> from package <code>b</code>, it will compile <code>B</code> before <code>A</code>, but may compile <code>A</code> in parallel with other modules in <code>b</code>."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 3, "last_activity_date": 1530638876, "last_edit_date": 1530638876, "creation_date": 1530568950, "answer_id": 51144244, "question_id": 51138675, "link": "https://stackoverflow.com/questions/51138675/why-is-prelude-drop-faster-than-a-trivial-one/51144244#51144244", "title": "Why is Prelude.drop faster than a trivial one?", "body": "<p>I have made this mistake before, so I had a suspicion...</p>\n\n<p>It looks like you are just not compiling with optimizations enabled.  The prelude is compiled with optimizations and linked in, so you are implicitly using optimized code when you use the prelude's <code>drop</code>.  Reproducing locally (after reducing the constant from <code>2^30</code> to <code>2^25</code> &mdash; there is no reason to make yourself wait so long), enabling optimizations causes <code>dropGhc</code> and prelude <code>drop</code> to have identical timing, and <code>dropNaive</code> is not significantly worse.  There is a slight difference in phrasing between <code>dropGhc</code> and <code>dropNaive</code> that might have subtle results on the generated code; I don't have a good intuition for why one would be better than the other.</p>\n\n<p>Note also that <code>base</code> is a special package in the sense that it is built as part of <code>ghc</code>'s build process, using its own build system, rather than by Cabal, as ordinary packages. As @sjakobi pointed out in comments, <a href=\"https://github.com/ghc/ghc/blob/b4e64839a95d024252950f07e3da50c3d4087882/mk/config.mk.in#L318\" rel=\"nofollow noreferrer\">there is a setting in <code>ghc</code>'s build configuration</a> that sets the level of optimization for <code>base</code> at <code>O2</code>.</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 51144244, "answer_count": 1, "score": 4, "last_activity_date": 1530638876, "creation_date": 1530542419, "question_id": 51138675, "link": "https://stackoverflow.com/questions/51138675/why-is-prelude-drop-faster-than-a-trivial-one", "title": "Why is Prelude.drop faster than a trivial one?", "body": "<p>I made some runs of:</p>\n\n<pre><code>main = print $ head . drop (2^30) $ [1..]\n</code></pre>\n\n<p>\u2014 With both <code>Prelude.drop</code> and a trivial <code>drop</code>. The Prelude variant is consistently faster by about 45% and I cannot discover why. I even extracted the definition of <code>GHC.List.drop</code> from <code>base-4.11.1.0</code> but it performs worse than my trivial code! What is going on?</p>\n\n<p>This is what I am doing:</p>\n\n<pre><code>% stack ghc -- --version           \nThe Glorious Glasgow Haskell Compilation System, version 8.2.2\n</code></pre>\n\n<p><code>Prelude.drop</code>:</p>\n\n<pre><code>% git checkout drop-prelude\n% git clean --force\n% cat ListTest.hs\nmodule Main where\n\nmain = print $ head . drop (2^30) $ [1..]\n% stack ghc -- ListTest.hs\n[1 of 1] Compiling Main             ( ListTest.hs, ListTest.o )\nLinking ListTest ...\n% time ./ListTest\n1073741825\n./ListTest  18.76s user 0.09s system 99% cpu 18.906 total\n</code></pre>\n\n<p>A trivial <code>drop</code>:</p>\n\n<pre><code>% git checkout drop-naive \n% git clean --force\n% cat ListTest.hs\nmodule Main where\n\ndropNaive :: Int -&gt; [a] -&gt; [a]\ndropNaive 0 xs = xs\ndropNaive n [ ] = [ ]\ndropNaive n (x: xs) = dropNaive (pred n) xs\n\nmain = print $ head . dropNaive (2^30) $ [1..]\n% stack ghc -- ListTest.hs\n[1 of 1] Compiling Main             ( ListTest.hs, ListTest.o )\nLinking ListTest ...\n% time ./ListTest\n1073741825      \n./ListTest  31.56s user 0.12s system 99% cpu 31.774 total\n</code></pre>\n\n<p><code>drop</code> from <code>GHC.List</code>:</p>\n\n<pre><code>% git checkout drop-ghc \n% git clean --force\n% cat ListTest.hs \n{-# LANGUAGE BangPatterns #-}\n\nmodule ListTest where\n\ndropGhc :: Int -&gt; [a] -&gt; [a]\n{-# INLINE dropGhc #-}\ndropGhc n xs\n  | n &lt;= 0     = xs\n  | otherwise  = unsafeDrop n xs\n  where\n    unsafeDrop :: Int -&gt; [a] -&gt; [a]\n    unsafeDrop !_ []     = []\n    unsafeDrop 1  (_:xs) = xs\n    unsafeDrop m  (_:xs) = unsafeDrop (m - 1) xs\n% cat ListTestRunner.hs \nimport ListTest\n\nmain = print $ head . dropGhc (2^30) $ [1..]\n% stack ghc -- ListTestRunner.hs\n[1 of 2] Compiling ListTest         ( ListTest.hs, ListTest.o )\n[2 of 2] Compiling Main             ( ListTestRunner.hs, ListTestRunner.o )\nLinking ListTestRunner ...\n% time ./ListTestRunner\n1073741825            \n./ListTestRunner  35.35s user 0.14s system 99% cpu 35.591 total\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1530533268, "post_id": 51135384, "comment_id": 89255792, "body": "Try <code>(\\ (Avg s c) y-&gt; Avg (s+y) (c+1))</code>"}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530533467, "post_id": 51135384, "comment_id": 89255921, "body": "Oh...i can pattern match on the left side of the lambda.That is precisely what i needed."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1530655389, "post_id": 51135384, "comment_id": 89309978, "body": "Side note: if your input is going to be at all large, it\u2019d be good to make the fields of <code>Avg</code> strict (<code>sum :: !Int, count :: !Int</code>) or strictly match on them (<code>\\ (Avg !s !c) -&gt; \u2026</code> with <code>BangPatterns</code>) to avoid a possible space leak\u2014as it is, you\u2019re not forcing the <i>contents</i> of the record until you do something with the result of the fold, so you\u2019re accumulating a series of thunks, e.g., <code>Avg { sum = ((0 + 1) + 2) + 3, count = ((0 + 1) + 1) + 1 }</code>."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1530686304, "post_id": 51135384, "comment_id": 89317564, "body": "Oh but i thought that using <code>foldl&#39;</code> would be enough to not have thunks."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1530535295, "creation_date": 1530535295, "answer_id": 51136511, "question_id": 51135384, "link": "https://stackoverflow.com/questions/51135384/decomposing-type-as-seed-in-fold/51136511#51136511", "title": "Decomposing type as seed in fold", "body": "<p>A few possible solutions:</p>\n\n<pre><code>(\\ (Avg s c) y -&gt; Avg (s + y) (c + 1))\n-- equivalent to the longer\n(\\ x y -&gt; case x of Avg s c -&gt; Avg (s + y) (c + 1))\n\n-- mentioning the fields name explicitly\n(\\ Avg{sum=s, count=c} y -&gt; Avg (s + y) (c + 1))\n\n-- using the RecordWildCards extension\n(\\ Avg{..} y -&gt; Avg (sum + y) (count + 1))\n\n-- using the two projections\n(\\ x y -&gt; Avg (sum x + y) (count x + 1))\n</code></pre>\n\n<p>or even, adapting your code</p>\n\n<pre><code>bang::[Int]-&gt;IO()\nbang ls@(x:xs) = printAvg $ foldl' foo (Avg 0 0) ls\n   where\n   foo (Avg s c) y = Avg (s + y) (c+ 1)\n</code></pre>\n\n<p>(using <code>let foo .. in ..</code> is also possible)</p>\n"}, {"tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 1, "last_activity_date": 1530539075, "creation_date": 1530539075, "answer_id": 51137667, "question_id": 51135384, "link": "https://stackoverflow.com/questions/51135384/decomposing-type-as-seed-in-fold/51137667#51137667", "title": "Decomposing type as seed in fold", "body": "<p>Since <code>data Avg = Avg { sum :: Int, count :: Int }</code> is isomorphic to <code>(Int, Int)</code>, you could also fold with a tuple:</p>\n\n<pre><code>average :: Fractional r =&gt; [Int] -&gt; r\naverage = uncurry (/) . foldr (\\x (sum, count) -&gt; (sum+x, count+1)) (0,0)\n\nbang :: [Int] -&gt; IO ()\nbang = putStrLn . show . average\n</code></pre>\n\n<p>And if you want to keep the average running, you could use a <code>newtype</code> wrapper:</p>\n\n<pre><code>newtype Count = Count (Int, Int)\n\naccumulate :: [Int] -&gt; Count\naccumulate = foldr accum (Count (0, 0))\n  where\n    accum :: Int -&gt; Count -&gt; Count\n    accum x (Count (sum, count)) = Count (sum+x, count+1)\n\naverage :: Fractional r =&gt; Count -&gt; r\naverage (Count (x, y)) = x / y\n\nbang :: [Int] -&gt; IO ()\nbang = putStrLn . show . average . accumulate\n</code></pre>\n\n<p>You might risk overflows in both cases.</p>\n\n<p>Consider finding a <a href=\"https://stackoverflow.com/questions/41351442/computing-moving-average-in-haskell\">moving average</a> (Haskell).</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 51136511, "answer_count": 2, "score": 1, "last_activity_date": 1530539075, "creation_date": 1530531694, "last_edit_date": 1530537715, "question_id": 51135384, "link": "https://stackoverflow.com/questions/51135384/decomposing-type-as-seed-in-fold", "title": "Decomposing type as seed in fold", "body": "<p>I have the following problem:</p>\n\n<p>I want to calculate the sum of the first <code>n</code> numbers and keep the count of each added number on every iteration. Therefore i defined a type:</p>\n\n<pre><code>data Avg = Avg { sum :: Int, count :: Int }\n</code></pre>\n\n<p>I need to use a seed of type <code>Avg</code> in a <code>foldl'</code> but i need it decomposed inside the aggregator function:</p>\n\n<pre><code>bang :: [Int] -&gt; IO ()\nbang ls@(x:xs) = printAvg $ foldl ' (\\x y -&gt; (x sum+y count+1) ) (Avg 0 0) ls\n\nprintAvg :: Avg -&gt; IO ()\nprintAvg av = putStrLn . show (fromIntegral $ sum av / fromIntegral $ count av)\n</code></pre>\n\n<p>So my question is:</p>\n\n<p>Given a type <code>data T = T { a :: Int, b :: Int }</code> and given a variable <code>myvar</code> of type <code>T</code>, how can I place it for pattern matching instead of its data constructor?</p>\n\n<p>In my example the <code>foldl'</code> takes an <code>Avg</code> which is the <code>seed</code> and one element from the list.</p>\n\n<p>I need <code>(\\x y-&gt; (x sum+y  count+1))</code>  instead of  <code>(\\x y-&gt; (Avg sum+y  count+1))</code>.</p>\n"}, {"tags": ["haskell", "matching", "fold"], "comments": [{"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 0, "creation_date": 1530528325, "post_id": 51134235, "comment_id": 89252913, "body": "Hi, do you know about hoogle? <a href=\"https://www.haskell.org/hoogle/?hoogle=reverse\" rel=\"nofollow noreferrer\">haskell.org/hoogle/?hoogle=reverse</a>"}, {"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 2, "creation_date": 1530528505, "post_id": 51134235, "comment_id": 89253006, "body": "But, yeah if you are really starting with Haskell, I&#39;d recommend looking at simpler stuff than this <code>main</code>. <a href=\"http://learnyouahaskell.com/chapters\" rel=\"nofollow noreferrer\">learnyouahaskell.com/chapters</a> is great to understand the basics."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1530529070, "post_id": 51134235, "comment_id": 89253312, "body": "Is this an exercise from a course? The code they&#39;ve given you is really not a good teaching example"}], "answers": [{"comments": [{"owner": {"reputation": 24791, "user_id": 499214, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PObJM.png?s=128&g=1", "display_name": "John Dvorak", "link": "https://stackoverflow.com/users/499214/john-dvorak"}, "edited": false, "score": 0, "creation_date": 1530530161, "post_id": 51134593, "comment_id": 89253933, "body": "Yet another option: <code>:t</code> in GHCI."}], "tags": [], "owner": {"reputation": 261, "user_id": 2191774, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/61bb548b9b44cde8e43023a95f7b7551?s=128&d=identicon&r=PG", "display_name": "Ongy", "link": "https://stackoverflow.com/users/2191774/ongy"}, "is_accepted": false, "score": 0, "last_activity_date": 1530529064, "creation_date": 1530529064, "answer_id": 51134593, "question_id": 51134235, "link": "https://stackoverflow.com/questions/51134235/haskell-pattern-matching-beginner/51134593#51134593", "title": "Haskell Pattern Matching (beginner)", "body": "<p>As suggested in the comment, hoogle is a great tool.\nTo find out what exactly you get from <code>getArgs</code> you can search for it on hoogle:</p>\n\n<p><a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/System-Environment.html#v:getArgs\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/base-4.11.1.0/docs/System-Environment.html#v:getArgs</a>\nAs you can see, it's of type <code>IO [String]</code>.\nSince I don't know how familiar you are with the IO abstractions yet, we'll just say that the right part of <code>&gt;&gt;=</code> gets those as argument.</p>\n\n<p>The arguments for a call like <code>./a.out -a -b --asdf Hi</code> will then be a list of strings:</p>\n\n<p><code>[\"-a\", \"-b\", \"--asdf\", \"Hi\"]</code>.</p>\n\n<p>The fold + reverse in the main will then do some magic, and your <code>apply</code> function will be called with each string in the list and the previous return value (<code>0</code> for the first invocation).</p>\n\n<p>In Haskell, <code>String</code> is the same as <code>[Char]</code> with a bit of compiler sugar, so you can match on strings like you would on regular lists in your definition of <code>apply</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 1, "creation_date": 1530618426, "post_id": 51134782, "comment_id": 89290799, "body": "Using <code>foldl (flip apply) 0</code> without reversing does work fine."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1530529722, "creation_date": 1530529722, "answer_id": 51134782, "question_id": 51134235, "link": "https://stackoverflow.com/questions/51134235/haskell-pattern-matching-beginner/51134782#51134782", "title": "Haskell Pattern Matching (beginner)", "body": "<p>This is not beginner-friendly code. Several shortcuts are taken there to keep the code very compact (and in pointfree form). The code</p>\n\n<pre><code>main = getArgs &gt;&gt;= print . (foldr apply 0) . reverse\n</code></pre>\n\n<p>can be expanded as follows</p>\n\n<pre><code>main = do\n  args &lt;- getArgs\n  let reversedArgs = reverse args\n      result = foldr apply 0 reversedArgs\n  print result\n</code></pre>\n\n<p>The result of this can be seen as follows. If the command line arguments are, say, <code>args = [\"A\",\"B\",\"C\"]</code>, then we get <code>reversedArgs = [\"C\",\"B\",\"A\"]</code> and finally</p>\n\n<pre><code>result = apply \"C\" (apply \"B\" (apply \"A\" 0))\n</code></pre>\n\n<p>since <code>foldr</code> applies the function <code>apply</code> in such way.</p>\n\n<p>Honestly, I'm unsure about why the code uses <code>reverse</code> and <code>foldr</code> for your task. I would have considered <code>foldl</code> (or, to improve performance, <code>foldl'</code>) instead.</p>\n"}, {"tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 1, "last_activity_date": 1530619879, "last_edit_date": 1530619879, "creation_date": 1530616260, "answer_id": 51153148, "question_id": 51134235, "link": "https://stackoverflow.com/questions/51134235/haskell-pattern-matching-beginner/51153148#51153148", "title": "Haskell Pattern Matching (beginner)", "body": "<p>I expect the exercise is not to touch the given code, but to expand on it to perform your function. It defines a complicated-looking <code>main</code> function and declares the type of a more straight forward <code>apply</code>, which is called but not defined. </p>\n\n<pre><code>import System.Environment   -- contains the function getArgs\n-- main gets arguments, does something to them using apply, and prints\nmain = getArgs &gt;&gt;= print . (foldr apply 0) . reverse\n-- apply must have this type, but what it does must be elsewhere\napply :: String -&gt; Integer -&gt; Integer\n</code></pre>\n\n<p>If we concentrate on <code>apply</code>, we see that it receives a string and an integer, and returns an integer. This is the function we have to write, and it can't decide control flow, so we can just get to it while hoping the argument handling works out. </p>\n\n<p>If we do want to figure out what <code>main</code> is up to, we can make a few observations. The only integer in <code>main</code> is <code>0</code>, so the first call must get that as its second argument; later ones will be chained with whatever is returned, as that's how <code>foldr</code> operates. <code>r</code> stands for from the right, but the arguments are <code>reverse</code>d, so this still processes arguments from the left. </p>\n\n<p>So I could go ahead and just write a few <code>apply</code> bindings to make the program compile:</p>\n\n<pre><code>apply \"succ\"   n = succ n\napply \"double\" n = n + n\napply \"div3\"   n = n `div` 3\n</code></pre>\n\n<p>This added a few usable operations. It doesn't handle all possible strings. </p>\n\n<pre><code>$ runhaskell pmb.hs succ succ double double succ div3\n3\n$ runhaskell pmb.hs hello?\npmb.hs: pmb.hs:(5,1)-(7,26): Non-exhaustive patterns in function apply\n</code></pre>\n\n<p>The exercise should be about how you handle the choice of operation based on the string argument. There are several options, including distinct <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-580003.17\" rel=\"nofollow noreferrer\">patterns</a> as above, pattern guards, <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13\" rel=\"nofollow noreferrer\"><code>case</code></a> and <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-320003.6\" rel=\"nofollow noreferrer\"><code>if</code></a> expressions. </p>\n\n<p>It can be useful to examine the used functions to see how they might fit together. Here's a look at a few of the used functions in <code>ghci</code>:</p>\n\n<pre><code>Prelude&gt; import System.Environment\nPrelude System.Environment&gt; :t getArgs\ngetArgs :: IO [String]\nPrelude System.Environment&gt; :t (&gt;&gt;=)\n(&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\nPrelude System.Environment&gt; :t print\nprint :: Show a =&gt; a -&gt; IO ()\nPrelude System.Environment&gt; :t (.)\n(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\nPrelude System.Environment&gt; :t foldr\nfoldr :: Foldable t =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\nPrelude System.Environment&gt; :t reverse\nreverse :: [a] -&gt; [a]\n</code></pre>\n\n<p>This shows that all the strings come out of <a href=\"https://www.stackage.org/haddock/lts-11.16/base-4.10.1.0/System-Environment.html#v:getArgs\" rel=\"nofollow noreferrer\"><code>getArgs</code></a>, it and <a href=\"https://www.stackage.org/haddock/lts-11.16/base-4.10.1.0/Prelude.html#v:print\" rel=\"nofollow noreferrer\"><code>print</code></a> operate in the <code>IO</code> monad, which must be the <code>m</code> in <code>&gt;&gt;=</code>, and <code>.</code> transfers results from the right function into arguments for the left function. The type signature alone doesn't tell us what order <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:foldr\" rel=\"nofollow noreferrer\"><code>foldr</code></a> handles things, though, or what <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:reverse\" rel=\"nofollow noreferrer\"><code>reverse</code></a> does (though it can't create new values, only reorder including repetition). </p>\n\n<p>As a last exercise, I'll rewrite the <code>main</code> function in a form that doesn't switch directions as many times:</p>\n\n<pre><code>main = print . foldl (flip apply) 0 =&lt;&lt; getArgs\n</code></pre>\n\n<p>This reads from right to left in a data flow sense and handles arguments from left to right because <code>foldl</code> performs left-associative folding. <code>flip</code> is just there to match the argument order for <code>apply</code>. </p>\n"}], "owner": {"reputation": 31, "user_id": 10021017, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d173a71a5866ff2cd4e98c04f80d725?s=128&d=identicon&r=PG&f=1", "display_name": "Razor", "link": "https://stackoverflow.com/users/10021017/razor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1530619879, "creation_date": 1530527856, "last_edit_date": 1530528174, "question_id": 51134235, "link": "https://stackoverflow.com/questions/51134235/haskell-pattern-matching-beginner", "title": "Haskell Pattern Matching (beginner)", "body": "<p>I have to implement a small programm in Haskell that increments/decrements a result by what in the console line is. For example if we have -a in the console the results must be 0, if -b the result must be incremented with 6 and so on. I have to do this with pattern matching.</p>\n\n<p>I haven't used Haskell until now and I find it pretty hard to understand. I have this to start with:</p>\n\n<pre><code>import System.Environment\nmain = getArgs &gt;&gt;= print . (foldr apply 0) . reverse\napply :: String -&gt; Integer -&gt; Integer\n</code></pre>\n\n<p>I don't understand what in the main is. What does it make and the reverse from end, what does it do? As I've read on the internet the getArgs function gives me the values from the console line. But how can I use them? Are there are equivalent functions like for/while in Haskell?</p>\n\n<p>Also, if you have some examples or maybe could help me, I will be very thankful.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "profiling", "code-coverage", "ghc"], "answers": [{"comments": [{"owner": {"reputation": 183, "user_id": 10020420, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46fc6395be2407d2edc5cb0d6325eb96?s=128&d=identicon&r=PG&f=1", "display_name": "Maxim", "link": "https://stackoverflow.com/users/10020420/maxim"}, "edited": false, "score": 0, "creation_date": 1530552542, "post_id": 51139510, "comment_id": 89266204, "body": "That works, thanks! (Although it would be nice if hpc could do that...)"}], "tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 0, "last_activity_date": 1530545657, "creation_date": 1530545657, "answer_id": 51139510, "question_id": 51132029, "link": "https://stackoverflow.com/questions/51132029/profiling-coverage-counting-case-alternative-evaluations/51139510#51139510", "title": "Profiling/coverage: counting case alternative evaluations", "body": "<p>I don't know of a compiler option to do this all at once for all case expressions.  You can <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/profiling.html#inserting-cost-centres-by-hand\" rel=\"nofollow noreferrer\">insert Cost Center annotations manually</a>; the profiling output will have the number of entries and the time spent for each cost center.  Or you can move each alternative into a named function, at least while you're working on optimizing. I've taken both approaches in the past.</p>\n"}], "owner": {"reputation": 183, "user_id": 10020420, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46fc6395be2407d2edc5cb0d6325eb96?s=128&d=identicon&r=PG&f=1", "display_name": "Maxim", "link": "https://stackoverflow.com/users/10020420/maxim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 35, "favorite_count": 0, "accepted_answer_id": 51139510, "answer_count": 1, "score": 1, "last_activity_date": 1530545657, "creation_date": 1530520560, "question_id": 51132029, "link": "https://stackoverflow.com/questions/51132029/profiling-coverage-counting-case-alternative-evaluations", "title": "Profiling/coverage: counting case alternative evaluations", "body": "<p><code>hpc markup --fun-entry-count</code> shows the number of times a top-level function has been entered.</p>\n\n<p>I'm wondering if there is a similar option for other syntactic entities, in particular case alternatives. Basically I'm trying to optimise a big case statement and am wondering which branches are the most common ones.</p>\n\n<p>From the docs it looks like there isn't. So is there any other way to achieve this?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 133, "user_id": 2159471, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6ba03bcf5c19e5dd23f98da34fc17348?s=128&d=identicon&r=PG", "display_name": "user2159471", "link": "https://stackoverflow.com/users/2159471/user2159471"}, "edited": false, "score": 0, "creation_date": 1530530874, "post_id": 51133809, "comment_id": 89254307, "body": "Thank You. I was missing the intuition for self-referencing lists. I wont say i grasp that completely (while searching for explanations came across some complicated stuff already) but i am in much better position and at least understand the asked scenario."}], "tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": true, "score": 2, "last_activity_date": 1530535299, "last_edit_date": 1530535299, "creation_date": 1530526447, "answer_id": 51133809, "question_id": 51131876, "link": "https://stackoverflow.com/questions/51131876/fibonacci-series-using-scanl-and-self-referencing-list/51133809#51133809", "title": "Fibonacci series using scanl and self-referencing list", "body": "<p>We can use the phase difference caused by <code>1:</code> to make the recursive back reference using only <code>scanl</code>, as you showed in the last sample. </p>\n\n<pre><code>let fib = 1 : scanl (+) 1 fib in take 5 fib\n</code></pre>\n\n<p>When substituting the definition of <code>scanl</code> in this form, we first see that <code>(x:xs)</code> matches the existing <code>:</code>:</p>\n\n<pre><code>1 : 1 : scanl (+) 2 (drop 1 fibs)\n</code></pre>\n\n<p>At this point, the second element exists, so we can extract another <code>x</code>. </p>\n\n<pre><code>1 : 1 : 2 : scanl (+) 3 (drop 2 fibs)\n1 : 1 : 2 : 3 : scanl (+) 5 (drop 3 fibs)\n1 : 1 : 2 : 3 : 5 : scanl (+) 8 (drop 4 fibs)\n</code></pre>\n\n<p>We're not really using <code>drop</code>, but advancing along the same list that we're building by matching the <code>:</code> for each element. I had to name the remaining list something to refer recursively, and found the <code>drop</code> form to conveniently express the generation and origin. Actually using <code>drop</code> like this would cause the entire list to be kept in memory and be needlessly traversed from the start to find the next element. In truth we have just a small chunk shaped like the recursive <code>let</code> expression as the tail until we evaluate it:</p>\n\n<pre><code>fibsfrom a b = let morefibs = a : scanl (+) b morefibs in morefibs\n</code></pre>\n\n<p>You get the whole list if you seed this function with 1 1, or any other place by seeding it with a consecutive pair of Fibonacci numbers. Try it with e.g. 2 3 or 5 8. The formula for the tail refers back to the list one element prior and can therefore always split it into head and tail. </p>\n\n<p>Sometimes viewing the references as a graph makes things clearer. We see the recursion as a loop, but it is still possible to evaluate because we only need <code>head list</code> to perform the next step. Here's a graphviz dot rendering of the first few steps (apologies for the roundabout \"run snippet - full page\" method, stack overflow doesn't handle dot or svg neatly). </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;!DOCTYPE svg  PUBLIC '-//W3C//DTD SVG 1.1//EN'  'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\r\n&lt;svg width=\"667pt\" height=\"392pt\" viewBox=\"0 0 666.59 392\" xmlns=\"http://www.w3.org/2000/svg\"&gt;&lt;g id=\"a\" class=\"graph\" transform=\"scale(1) translate(4 388)\"&gt;&lt;title&gt;fibs&lt;/title&gt;&lt;polygon points=\"-4 4 -4 -388 662.59 -388 662.59 4\" fill=\"#fff\" stroke=\"transparent\"/&gt;&lt;g id=\"b\" class=\"node\"&gt;&lt;title&gt;fibs&lt;/title&gt;&lt;ellipse cx=\"78\" cy=\"-366\" rx=\"46.292\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"78\" y=\"-362.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head : tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"c\" class=\"node\"&gt;&lt;title&gt;1&lt;/title&gt;&lt;ellipse cx=\"27\" cy=\"-192\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"27\" y=\"-188.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;1&lt;/text&gt;&lt;/g&gt;&lt;g id=\"d\" class=\"edge\"&gt;&lt;title&gt;fibs-&amp;gt;1&lt;/title&gt;&lt;path d=\"m56.935-349.84c-14.569 12.593-32.75 31.487-40.935 52.841-9.6269 25.117-4.6011 55.944 1.4413 77.679\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"20.795 -220.32 20.334 -209.74 14.094 -218.3\" stroke=\"#000\"/&gt;&lt;text x=\"29\" y=\"-275.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head&lt;/text&gt;&lt;/g&gt;&lt;g id=\"e\" class=\"node\"&gt;&lt;title&gt;scanl&lt;/title&gt;&lt;ellipse cx=\"119\" cy=\"-279\" rx=\"67.688\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"119\" y=\"-275.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;scanl op init list&lt;/text&gt;&lt;/g&gt;&lt;g id=\"f\" class=\"edge\"&gt;&lt;title&gt;fibs-&amp;gt;scanl&lt;/title&gt;&lt;path d=\"m74.923-347.75c-0.8767 10.092-0.562 22.605 4.0774 32.753 1.9313 4.2246 4.6212 8.1661 7.7022 11.775\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"89.414 -305.46 93.929 -295.87 84.422 -300.55\" stroke=\"#000\"/&gt;&lt;text x=\"88\" y=\"-318.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"g\" class=\"edge\"&gt;&lt;title&gt;scanl-&amp;gt;fibs&lt;/title&gt;&lt;path d=\"m111.6-297.09c-4.1167-9.8196-9.4396-22.122-14.602-32.907-1.4341-2.996-2.982-6.1053-4.5537-9.1854\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"89.269 -337.71 87.75 -348.2 95.476 -340.95\" stroke=\"#000\"/&gt;&lt;text x=\"112.5\" y=\"-318.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;list&lt;/text&gt;&lt;/g&gt;&lt;g id=\"h\" class=\"edge\"&gt;&lt;title&gt;scanl-&amp;gt;1&lt;/title&gt;&lt;path d=\"m100.38-261.39c-14.397 13.615-34.421 32.55-49.915 47.202\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"52.502 -211.3 42.832 -206.97 47.693 -216.39\" stroke=\"#000\"/&gt;&lt;text x=\"88.5\" y=\"-231.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;init&lt;/text&gt;&lt;/g&gt;&lt;g id=\"i\" class=\"node\"&gt;&lt;title&gt;+&lt;/title&gt;&lt;ellipse cx=\"119\" cy=\"-192\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"119\" y=\"-188.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;+&lt;/text&gt;&lt;/g&gt;&lt;g id=\"j\" class=\"edge\"&gt;&lt;title&gt;scanl-&amp;gt;+&lt;/title&gt;&lt;path d=\"m119-260.97v40.815\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"122.5 -220 119 -210 115.5 -220\" stroke=\"#000\"/&gt;&lt;text x=\"126\" y=\"-231.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;op&lt;/text&gt;&lt;/g&gt;&lt;g id=\"k\" class=\"node\"&gt;&lt;title&gt;g1fibs&lt;/title&gt;&lt;ellipse cx=\"254\" cy=\"-366\" rx=\"46.292\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"254\" y=\"-362.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head : tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"l\" class=\"node\"&gt;&lt;title&gt;g1_1&lt;/title&gt;&lt;ellipse cx=\"226\" cy=\"-192\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"226\" y=\"-188.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;1&lt;/text&gt;&lt;/g&gt;&lt;g id=\"m\" class=\"edge\"&gt;&lt;title&gt;g1fibs-&amp;gt;g1_1&lt;/title&gt;&lt;path d=\"m246.94-348.16c-5.1005 13.748-11.65 33.355-14.942 51.158-4.7502 25.686-6.065 55.455-6.3006 76.722\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"229.2 -219.99 225.66 -210 222.2 -220.01\" stroke=\"#000\"/&gt;&lt;text x=\"245\" y=\"-275.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head&lt;/text&gt;&lt;/g&gt;&lt;g id=\"n\" class=\"node\"&gt;&lt;title&gt;g1fibs1&lt;/title&gt;&lt;ellipse cx=\"313\" cy=\"-279\" rx=\"46.292\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"313\" y=\"-275.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head : tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"o\" class=\"edge\"&gt;&lt;title&gt;g1fibs-&amp;gt;g1fibs1&lt;/title&gt;&lt;path d=\"m265.94-348.39c8.4769 12.5 19.995 29.485 29.515 43.522\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"298.36 -306.82 301.08 -296.58 292.57 -302.89\" stroke=\"#000\"/&gt;&lt;text x=\"297\" y=\"-318.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"p\" class=\"edge\"&gt;&lt;title&gt;g1fibs1-&amp;gt;g1_1&lt;/title&gt;&lt;path d=\"m296.23-262.23-47.89 47.89\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"250.53 -211.58 240.98 -206.98 245.58 -216.53\" stroke=\"#000\"/&gt;&lt;text x=\"288\" y=\"-231.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head&lt;/text&gt;&lt;/g&gt;&lt;g id=\"q\" class=\"node\"&gt;&lt;title&gt;g1scanl&lt;/title&gt;&lt;ellipse cx=\"346\" cy=\"-192\" rx=\"67.688\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"346\" y=\"-188.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;scanl op init list&lt;/text&gt;&lt;/g&gt;&lt;g id=\"r\" class=\"edge\"&gt;&lt;title&gt;g1fibs1-&amp;gt;g1scanl&lt;/title&gt;&lt;path d=\"m308.16-260.89c-1.7731 10.049-2.433 22.565 1.8437 32.89 1.6363 3.9503 3.9396 7.6932 6.5995 11.166\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"319.3 -219.06 323.31 -209.25 314.06 -214.42\" stroke=\"#000\"/&gt;&lt;text x=\"319\" y=\"-231.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"s\" class=\"edge\"&gt;&lt;title&gt;g1scanl-&amp;gt;g1fibs1&lt;/title&gt;&lt;path d=\"m339.91-210.03c-3.379-9.8004-7.7327-22.106-11.911-32.973-1.1063-2.8775-2.2936-5.8702-3.498-8.8462\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"321.25 -250.55 320.67 -261.13 327.72 -253.22\" stroke=\"#000\"/&gt;&lt;text x=\"342.5\" y=\"-231.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;list&lt;/text&gt;&lt;/g&gt;&lt;g id=\"t\" class=\"node\"&gt;&lt;title&gt;g1+&lt;/title&gt;&lt;ellipse cx=\"304\" cy=\"-105\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"304\" y=\"-101.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;+&lt;/text&gt;&lt;/g&gt;&lt;g id=\"u\" class=\"edge\"&gt;&lt;title&gt;g1scanl-&amp;gt;g1+&lt;/title&gt;&lt;path d=\"m337.3-173.97c-5.9348 12.293-13.893 28.778-20.541 42.549\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"319.9 -129.89 312.4 -122.41 313.6 -132.94\" stroke=\"#000\"/&gt;&lt;text x=\"335\" y=\"-144.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;op&lt;/text&gt;&lt;/g&gt;&lt;g id=\"v\" class=\"node\"&gt;&lt;title&gt;2&lt;/title&gt;&lt;ellipse cx=\"376\" cy=\"-105\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"376\" y=\"-101.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;2&lt;/text&gt;&lt;/g&gt;&lt;g id=\"w\" class=\"edge\"&gt;&lt;title&gt;g1scanl-&amp;gt;2&lt;/title&gt;&lt;path d=\"m352.22-173.97c4.1303 11.978 9.6324 27.934 14.304 41.482\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"369.94 -133.3 369.89 -122.71 363.33 -131.02\" stroke=\"#000\"/&gt;&lt;text x=\"372.5\" y=\"-144.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;init&lt;/text&gt;&lt;/g&gt;&lt;g id=\"x\" class=\"node\"&gt;&lt;title&gt;g2fibs&lt;/title&gt;&lt;ellipse cx=\"490\" cy=\"-366\" rx=\"46.292\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"490\" y=\"-362.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head : tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"y\" class=\"node\"&gt;&lt;title&gt;g2_1&lt;/title&gt;&lt;ellipse cx=\"459\" cy=\"-192\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"459\" y=\"-188.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;1&lt;/text&gt;&lt;/g&gt;&lt;g id=\"z\" class=\"edge\"&gt;&lt;title&gt;g2fibs-&amp;gt;g2_1&lt;/title&gt;&lt;path d=\"m483.09-348.13c-5.0245 13.763-11.542 33.375-15.088 51.13-5.1251 25.668-7.3327 55.439-8.2831 76.711\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"463.2 -219.87 459.33 -210.01 456.21 -220.13\" stroke=\"#000\"/&gt;&lt;text x=\"481\" y=\"-275.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head&lt;/text&gt;&lt;/g&gt;&lt;g id=\"aa\" class=\"node\"&gt;&lt;title&gt;g2fibs1&lt;/title&gt;&lt;ellipse cx=\"549\" cy=\"-279\" rx=\"46.292\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"549\" y=\"-275.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head : tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"ab\" class=\"edge\"&gt;&lt;title&gt;g2fibs-&amp;gt;g2fibs1&lt;/title&gt;&lt;path d=\"m501.94-348.39c8.4769 12.5 19.995 29.485 29.515 43.522\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"534.36 -306.82 537.08 -296.58 528.57 -302.89\" stroke=\"#000\"/&gt;&lt;text x=\"533\" y=\"-318.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"ac\" class=\"edge\"&gt;&lt;title&gt;g2fibs1-&amp;gt;g2_1&lt;/title&gt;&lt;path d=\"m531.65-262.23c-14.093 13.624-34.094 32.957-49.542 47.89\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"484.12 -211.41 474.5 -206.98 479.25 -216.45\" stroke=\"#000\"/&gt;&lt;text x=\"523\" y=\"-231.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head&lt;/text&gt;&lt;/g&gt;&lt;g id=\"ad\" class=\"node\"&gt;&lt;title&gt;g2fibs2&lt;/title&gt;&lt;ellipse cx=\"550\" cy=\"-192\" rx=\"46.292\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"550\" y=\"-188.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head : tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"ae\" class=\"edge\"&gt;&lt;title&gt;g2fibs1-&amp;gt;g2fibs2&lt;/title&gt;&lt;path d=\"m549.21-260.97c0.1354 11.782 0.3151 27.413 0.4691 40.815\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"553.18 -220.04 549.79 -210 546.18 -219.96\" stroke=\"#000\"/&gt;&lt;text x=\"559\" y=\"-231.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"af\" class=\"node\"&gt;&lt;title&gt;g2_2&lt;/title&gt;&lt;ellipse cx=\"478\" cy=\"-105\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"478\" y=\"-101.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;2&lt;/text&gt;&lt;/g&gt;&lt;g id=\"ag\" class=\"edge\"&gt;&lt;title&gt;g2fibs2-&amp;gt;g2_2&lt;/title&gt;&lt;path d=\"m534.48-174.98c-5.3072 5.9359-11.228 12.686-16.481 18.975-7.1414 8.55-14.742 18.114-21.377 26.63\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"499.25 -127.05 490.36 -121.28 493.71 -131.33\" stroke=\"#000\"/&gt;&lt;text x=\"531\" y=\"-144.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;head&lt;/text&gt;&lt;/g&gt;&lt;g id=\"ah\" class=\"node\"&gt;&lt;title&gt;g2scanl&lt;/title&gt;&lt;ellipse cx=\"591\" cy=\"-105\" rx=\"67.688\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"591\" y=\"-101.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;scanl op init list&lt;/text&gt;&lt;/g&gt;&lt;g id=\"ai\" class=\"edge\"&gt;&lt;title&gt;g2fibs2-&amp;gt;g2scanl&lt;/title&gt;&lt;path d=\"m546.92-173.75c-0.8767 10.092-0.562 22.605 4.0774 32.753 1.9313 4.2246 4.6212 8.1661 7.7022 11.775\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"561.41 -131.46 565.93 -121.87 556.42 -126.55\" stroke=\"#000\"/&gt;&lt;text x=\"560\" y=\"-144.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;tail&lt;/text&gt;&lt;/g&gt;&lt;g id=\"aj\" class=\"edge\"&gt;&lt;title&gt;g2scanl-&amp;gt;g2fibs2&lt;/title&gt;&lt;path d=\"m583.6-123.09c-4.1167-9.8196-9.4396-22.122-14.602-32.907-1.4341-2.996-2.982-6.1053-4.5537-9.1854\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"561.27 -163.71 559.75 -174.2 567.48 -166.95\" stroke=\"#000\"/&gt;&lt;text x=\"584.5\" y=\"-144.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;list&lt;/text&gt;&lt;/g&gt;&lt;g id=\"ak\" class=\"node\"&gt;&lt;title&gt;g2+&lt;/title&gt;&lt;ellipse cx=\"555\" cy=\"-18\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"555\" y=\"-14.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;+&lt;/text&gt;&lt;/g&gt;&lt;g id=\"al\" class=\"edge\"&gt;&lt;title&gt;g2scanl-&amp;gt;g2+&lt;/title&gt;&lt;path d=\"m583.54-86.974c-5.0381 12.175-11.777 28.461-17.442 42.151\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"569.26 -43.312 562.2 -35.41 562.79 -45.988\" stroke=\"#000\"/&gt;&lt;text x=\"583\" y=\"-57.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;op&lt;/text&gt;&lt;/g&gt;&lt;g id=\"am\" class=\"node\"&gt;&lt;title&gt;g2_3&lt;/title&gt;&lt;ellipse cx=\"627\" cy=\"-18\" rx=\"27\" ry=\"18\" fill=\"none\" stroke=\"#000\"/&gt;&lt;text x=\"627\" y=\"-14.3\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;3&lt;/text&gt;&lt;/g&gt;&lt;g id=\"an\" class=\"edge\"&gt;&lt;title&gt;g2scanl-&amp;gt;g2_3&lt;/title&gt;&lt;path d=\"m598.46-86.974c5.0381 12.175 11.777 28.461 17.442 42.151\" fill=\"none\" stroke=\"#000\"/&gt;&lt;polygon points=\"619.21 -45.988 619.8 -35.41 612.74 -43.312\" stroke=\"#000\"/&gt;&lt;text x=\"621.5\" y=\"-57.8\" fill=\"#000000\" font-family=\"Times,serif\" font-size=\"14\" text-anchor=\"middle\"&gt;init&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}], "owner": {"reputation": 133, "user_id": 2159471, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6ba03bcf5c19e5dd23f98da34fc17348?s=128&d=identicon&r=PG", "display_name": "user2159471", "link": "https://stackoverflow.com/users/2159471/user2159471"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 51133809, "answer_count": 1, "score": 1, "last_activity_date": 1530535299, "creation_date": 1530520001, "question_id": 51131876, "link": "https://stackoverflow.com/questions/51131876/fibonacci-series-using-scanl-and-self-referencing-list", "title": "Fibonacci series using scanl and self-referencing list", "body": "<p>I am learning Haskell through Chris Allen Haskell Programming book. I am stuck on a part of defining Fibonacci series using scanl and self-referencing list. \nI understand evaluation of the below code:</p>\n\n<pre><code>scanl (+) 1 [1..3]\n1 : (scanl (+) ((+) 1 1) [2,3])\n</code></pre>\n\n<p>I read (+) is strict in both arguments so am substituting 2 for ((+) 1 1) in next step.</p>\n\n<pre><code>1 : (2 : (scanl (+) ((+) 2 2) [3]))\n1 : (2 : (4 : (scanl (+) ((+) 4 3) [])))\n1 : (2 : (4 : (7 : (scanl (+) 7 []))))\n1 : (2 : (4 : (7 : [])))\n</code></pre>\n\n<p>I am not able to understand evaluation of below code and how is it producing correct Fibonacci series.</p>\n\n<pre><code>fibs = 1 : scanl (+) 1 fibs.\n</code></pre>\n\n<p>I am finding it hard how the pattern match for non empty list (x:xs) works for self-referencing lists.\nAppreciate the help and any resources to understand self-referencing/infinite lists better.  </p>\n"}, {"tags": ["haskell", "attoparsec"], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 1, "last_activity_date": 1530534614, "creation_date": 1530534614, "answer_id": 51136289, "question_id": 51131848, "link": "https://stackoverflow.com/questions/51131848/how-to-adapt-the-many-to-return-left-in-attoparsec-of-haskel/51136289#51136289", "title": "How to adapt the many&#39; to return Left in attoparsec of Haskel", "body": "<p><a href=\"https://hackage.haskell.org/package/attoparsec-0.13.2.2/docs/Data-Attoparsec-ByteString.html#v:parseOnly\" rel=\"nofollow noreferrer\">From the doc on <code>parseOnly</code></a></p>\n\n<blockquote>\n  <p>To force a parser to consume all of its input, use something like this:</p>\n\n<pre><code>parseOnly (myParser &lt;* endOfInput)\n</code></pre>\n</blockquote>\n\n<hr>\n\n<p><code>ParseIni.parseTests</code> applies the parser <code>char '(' *&gt; return 1 &lt;* char ')'</code> zero or more times. It always succeeds, as it can at least apply it zero times. Thus you need to ensure it consumed everything by composing it with <code>endOfInput</code>.</p>\n\n<pre><code>parseOnly (ParseIni.parseTests &lt;* endOfInput) \"(\"\n</code></pre>\n"}], "owner": {"reputation": 317, "user_id": 7370105, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/28a1d625330e0446be0e39e901f8b5b1?s=128&d=identicon&r=PG&f=1", "display_name": "handora", "link": "https://stackoverflow.com/users/7370105/handora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 31, "favorite_count": 0, "accepted_answer_id": 51136289, "answer_count": 1, "score": 0, "last_activity_date": 1530534614, "creation_date": 1530519881, "question_id": 51131848, "link": "https://stackoverflow.com/questions/51131848/how-to-adapt-the-many-to-return-left-in-attoparsec-of-haskel", "title": "How to adapt the many&#39; to return Left in attoparsec of Haskel", "body": "<p>For example</p>\n\n<pre><code>parseTest :: Parser Int\nparseTest = char '(' *&gt; return 1 &lt;* char ')'\n\nparseTests :: Parser [Int]\nparseTests = many' $ char '(' *&gt; return 1 &lt;* char ')'\n\nparseOnly ParseIni.parseTest \"(\" -- returns Left with error\nparseOnly ParseIni.parseTests \"(\" -- returns Right with []\n</code></pre>\n\n<p>How can I make the second one to return Left with lost <code>)</code>, and I also want to parse the case with empty string with answer <code>Right []</code></p>\n"}, {"tags": ["haskell", "stream", "monads"], "answers": [{"comments": [{"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1530597160, "post_id": 51137001, "comment_id": 89278889, "body": "Yes, that sounds good. There is still a problem with the quantification over <code>s</code>, though. See the update."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1530614904, "post_id": 51137001, "comment_id": 89288677, "body": "<code>forall s. Walk (...)</code> (<code>Walk :: forall b a s. ((s -&gt; Step s b) -&gt; s -&gt; Step s a) -&gt; Walk a b</code>) is an existential type, as opposed to <code>Walk (forall s. (...))</code> (<code>Walk :: forall b a. (forall s. (s -&gt; Step s b) -&gt; s -&gt; Step s a) -&gt; Walk a b</code>)."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1530615020, "post_id": 51137001, "comment_id": 89288749, "body": "In the first case, the constructor field of <code>Walk</code> is monomorphic but part of its type is hidden by the constructor, in the other (correct one), the field is polymorphic."}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1530615846, "post_id": 51137001, "comment_id": 89289271, "body": "In that latter case GHC will complain that <code>s</code> escapes its scope in the definition of <code>&gt;&gt;=</code>."}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1530616733, "post_id": 51137001, "comment_id": 89289795, "body": "it&#39;s on github, the last line of the update to the question has the link. Look at StreamTrans2.hs. (The error won&#39;t format well in the comment box...)"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1530617471, "post_id": 51137001, "comment_id": 89290234, "body": "Ah, this is an error caused by <code>MonoLocalBinds</code>. Move the <code>where</code> block to a <code>let</code> block inside <code>Walk</code>. <code>Walk (let t&#39; step s = ... in t&#39;)</code>. By the way, you can call <code>t&#39;</code> directly at <a href=\"https://github.com/mcmayer/stream-transducer/blob/master/src/StreamTrans2.hs#L91\" rel=\"nofollow noreferrer\">line 91</a>, instead of using <code>until</code> to peel off <code>Skip</code> events."}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "edited": false, "score": 0, "creation_date": 1530617956, "post_id": 51137001, "comment_id": 89290512, "body": "ah, sorry, that was some stuff left over from various experiments. I have to have a deep think about what the difference between <code>Walk forall s. ...</code> and <code>forall s. Walk ...</code> is."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 2, "last_activity_date": 1530536979, "creation_date": 1530536979, "answer_id": 51137001, "question_id": 51131671, "link": "https://stackoverflow.com/questions/51131671/stream-transformer-monad-for-vector-stream/51137001#51137001", "title": "Stream transformer Monad for Vector.Stream", "body": "<p>Let's look at <code>Appl</code> again, because it seems almost right.</p>\n\n<pre><code>newtype Appl s a = Appl ((s-&gt;Step s a) -&gt; s -&gt; Step s a)\n</code></pre>\n\n<p>The idea is to define a stream transducer by converting a \"low-level\" step function to a \"high-level\" one. With that view, those two step functions shouldn't have the same output. For example, if we're transducing bits to bytes, we want <code>(s -&gt; Step s Bit) -&gt; s -&gt; Step s Byte</code>.</p>\n\n<p>Thus, a better type would be</p>\n\n<pre><code>newtype Walk s b a = Walk ((s -&gt; Step s b) -&gt; s -&gt; Step s a)\n-- A walk is many steps.\n</code></pre>\n\n<p>Furthermore, since <code>Stream</code> quantifies existentially over <code>s</code>, you'll need some universal quantification over <code>s</code> at some point to use <code>Walk</code>, so you might as well put it in the type definition.</p>\n\n<pre><code>newtype Walk b a = Walk (forall s. (s -&gt; Step s b) -&gt; s -&gt; Step s a)\n</code></pre>\n"}], "owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 51137001, "answer_count": 1, "score": 1, "last_activity_date": 1530605784, "creation_date": 1530519161, "last_edit_date": 1530605784, "question_id": 51131671, "link": "https://stackoverflow.com/questions/51131671/stream-transformer-monad-for-vector-stream", "title": "Stream transformer Monad for Vector.Stream", "body": "<p><a href=\"https://hackage.haskell.org/package/vector-0.1/docs/Data-Vector-Stream.html\" rel=\"nofollow noreferrer\"><code>Data.Vector.Stream</code></a> provides an nice <code>Stream</code> implementation that is very efficient  thanks to the focus on fusability (see <a href=\"http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.104.7401\" rel=\"nofollow noreferrer\">this paper</a> for more). Since <code>vector-0.1</code> this <code>Stream</code> implementation changed slightly by moving the <a href=\"https://hackage.haskell.org/package/vector-0.1/docs/src/Data-Vector-Stream.html#Step\" rel=\"nofollow noreferrer\"><code>Step</code></a> type into a monad. (Now, the implementation is located in <a href=\"http://hackage.haskell.org/package/vector-0.12.0.1/docs/Data-Vector-Fusion-Stream-Monadic.html\" rel=\"nofollow noreferrer\"><code>Data.Vector.Fusion.Stream.Monadic</code></a>.)</p>\n\n<p>In a nutshell, here's the definition of <code>Stream</code>:</p>\n\n<pre><code>data Step s a where\n    Yield :: a -&gt; s -&gt; Step s a\n    Skip  :: s -&gt; Step s a\n    Done  :: Step s a\n\ndata Stream a = forall s. Stream (s -&gt; Step s a) s\n</code></pre>\n\n<p><code>Step s a</code> encapsulates the three possible results from one iteration of state <code>s</code> with update function <code>s -&gt; Step s a</code>. The stream is either <code>Done</code>, or skips output, or yields output. (The definition above uses GADTs, but that's not relevant, here.)</p>\n\n<p>Simple applications of this <code>Stream</code> are:</p>\n\n<pre><code>empty :: Stream a\nempty = Stream (const Done) ()\n\nsingleton :: a -&gt; Stream a\nsingleton x = Stream step True where\n    step True  = Yield x False\n    step False = Done\n\nfromList :: [a] -&gt; Stream a\nfromList zs = Stream step zs\nwhere\n    step (x:xs) = Yield x xs\n    step []     = Done\n</code></pre>\n\n<p>Strict left fold is done like this:</p>\n\n<pre><code>foldl'S :: (a -&gt; b -&gt; a) -&gt; a -&gt; Stream b -&gt; a\nfoldl'S f a0 (Stream step s) = go a0 s where\n    go a s = a `seq`\n                case step s of\n                    Yield b s' -&gt; go (f a b) s'\n                    Skip    s' -&gt; go a       s'\n                    Done       -&gt; a\n</code></pre>\n\n<p>and that gives the usual list-like functions <code>lengthS = foldl'S (\\n _ -&gt; n+1) 0</code>, etc. This certainly isn't as elegant as <a href=\"https://hackage.haskell.org/package/conduit\" rel=\"nofollow noreferrer\"><code>Conduit</code></a> or <a href=\"https://hackage.haskell.org/package/pipes\" rel=\"nofollow noreferrer\"><code>Pipes</code></a>, but it's simple and fast. So far so good.</p>\n\n<p>Now, let's try to aggregate 'low-level' streams to more high-level ones. For example, if you have a bitstream <code>Stream Bool</code> you may want to decode the bits to yield a <code>Stream Int</code> by using some clever codec. Of course it's always possible to build up a new step function <code>s -&gt; Step s b</code> from the <code>step</code> function extracted of a given <code>Stream step s</code>. Repeated applications of the <code>step :: s-&gt;Step s a</code> function result in awkward <code>case (step s) of ...</code> cascades that handle the three possibilities <code>Done</code>, <code>Skip</code>, <code>Yield</code>, over and over again. Ideally, the <code>aggregate</code> should like this:</p>\n\n<pre><code>aggregate :: Stream a -&gt; M?? -&gt; Stream b\nnewStream = aggregate oldStream $ do\n    a1 &lt;- get    -- a1 :: a\n    if a1 == True then doSomething\n    else do\n        a2 &lt;- get\n        -- etc.\n</code></pre>\n\n<p>The <code>M??</code> is some monad, to be defined. Let's try a type <code>Appl s a</code>:</p>\n\n<pre><code>newtype Appl s a = Appl ((s-&gt;Step s a) -&gt; s -&gt; Step s a)\n</code></pre>\n\n<p>It's called <code>Appl</code> because it has the signature of a function application. The monad instance is quite straightforward:</p>\n\n<pre><code>instance Monad (Appl s) where\n    return a = Appl (\\_ s -&gt; Yield a s)\n    (Appl ap) &gt;&gt;= f = Appl (\\step s -&gt;\n        case (ap step s) of\n            Done -&gt; Done\n            Skip s' -&gt; untilNotSkip step s'\n            Yield a' s' -&gt; ap' step s' where Appl ap' = f a'\n</code></pre>\n\n<p>where <code>untilNotSkip :: (s-&gt;Step s a) -&gt; s -&gt; Step s a</code> is just repeated (nested) application of a <code>step :: (s-&gt;Step s a)</code> until a <code>Done</code> or a <code>Yield</code> is returned.</p>\n\n<p>The <code>get</code> function is just normal function application</p>\n\n<pre><code>get :: Appl s a\nget = Appl(\\step s -&gt; step s)\n</code></pre>\n\n<p>To tie things up, <code>Functor</code> and <code>Applicative</code> need to be done, and here comes the problem: <code>Appl s</code> can't be made a functor. The signature is</p>\n\n<pre><code>fmap :: (a-&gt;b) -&gt; Appl s a -&gt; Appl s b\n</code></pre>\n\n<p>and that just doesn't work because in order to make a function <code>(s-&gt;Step s b) -&gt; s -&gt; Step s b)</code> from a function <code>(s-&gt;Step s a) -&gt; s -&gt; Step s a)</code> I'd need a <code>b-&gt;a</code>. I can pull back an <code>Appl s b</code> over an <code>a-&gt;b</code>, but I can't push forward an <code>Appl s a</code> - i.e. I can have a contravariant functor but not a functor. That's weird. Streams <a href=\"https://bartoszmilewski.com/2017/01/02/comonads/\" rel=\"nofollow noreferrer\">are quite naturally comonads</a>, but I don't see the connection. the purpose of <code>Appl</code> is to turn a step function <code>s-&gt;Step s a</code> into another one <code>s-&gt;Step s b</code>.</p>\n\n<p>Something is very wrong here, <code>Appl</code> isn't the right \"<code>M??</code>\". Can anyone help out?</p>\n\n<p><strong>Update</strong></p>\n\n<p>As pointed out by Li-yao Xia the type should be something like </p>\n\n<pre><code>data Walk a b = forall s. Walk ((s-&gt;Step s a) -&gt; s -&gt; Step s b)\n</code></pre>\n\n<p>And the Functor, Applicative and Monad instances would be</p>\n\n<pre><code>instance Functor (Step s) where\n    fmap f Done        = Done\n    fmap f (Skip s)    = Skip s\n    fmap f (Yield a s) = Yield (f a) s\n\ninstance Functor (Walk a) where\n    fmap f (Walk t) = Walk ( \\step s -&gt; fmap f (t step s) )\n\n-- default Applicative given a monad instance\nap :: (Monad m) =&gt; m (a -&gt; b) -&gt; m a -&gt; m b\nap mf m = do\n    f &lt;- mf\n    x &lt;- m\n    return (f x)\n\nuntilNotSkip :: (s-&gt;Step s a) -&gt; s -&gt; Step s a\nuntilNotSkip step s = case step s of\n    Done        -&gt; Done\n    Skip s'     -&gt; untilNotSkip step s'\n    Yield a' s' -&gt; Yield a' s'\n\ninstance Monad (Walk a) where\n    return a = Walk (\\_ s -&gt; Yield a s)\n    Walk t &gt;&gt;= f =\n        Walk (\\step s -&gt; case t (untilNotSkip step) s of\n            Done        -&gt; Done\n            Skip _      -&gt; error \"Internal error.\"\n            Yield b' s' -&gt; case f b' of Walk t' -&gt; t' step s'   -- bad\n    )\n\ninstance Applicative (Walk a) where\n    pure = return\n    (&lt;*&gt;) = ap\n</code></pre>\n\n<p>The type checker won't allow this monad instance, however. In the definition of <code>&gt;&gt;=</code> the <code>s</code> in <code>Walk (\\step s -&gt; ...</code> is different from the <code>s'</code> in <code>Yield b' s' -&gt; ...</code>, but it must be the same. The fundamental problem here is that <code>(&gt;&gt;=) :: Walk a b -&gt; (b-&gt;Walk a c) -&gt; Walk a c</code> has two independently all-quantified states <code>s</code>, one in the first argument, and another one that is returned by <code>b-&gt;Walk a c</code>. Effectively this is (with abuse of notation)\n<code>(forall s. Walk s a b) -&gt; (forall s'. b-&gt;Walk s' a' c) -&gt; (forall s''. Walk s'' a c)</code>, which doesn't make sense, neither conceptually nor for the type checker. All three <code>s</code>, <code>s'</code>, <code>s''</code> must be the same type.</p>\n\n<p>A variation where <code>Walk</code> is not all-quantified over <code>s</code>:</p>\n\n<pre><code>data Walk s a b = Walk ((s-&gt;Step s a) -&gt; s -&gt; Step s b)\n</code></pre>\n\n<p>allows correct definition of bind, but then <code>aggregate</code> won't work:</p>\n\n<pre><code>-- does not compile\naggregate :: Stream a -&gt; Walk s a b -&gt; Stream b\naggregate (Stream step s) (M t) = Stream (t step) s\n</code></pre>\n\n<p>Again, the stream state <code>s</code> must always be the same. One way out of this would be to introduce a <code>data PreStream s a = PreStream (s -&gt; Step s a) s</code>, but that doesn't allow an <code>aggregate :: Stream a -&gt; ?? -&gt; Stream b</code> either.</p>\n\n<p>The source code is on <a href=\"https://github.com/mcmayer/stream-transducer\" rel=\"nofollow noreferrer\">github</a>.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 0, "creation_date": 1530515733, "post_id": 51130450, "comment_id": 89246321, "body": "It looks like the first module should not import the second, can you remove the line <code>import Tclass</code> and retry?"}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "reply_to_user": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 0, "creation_date": 1530516350, "post_id": 51130450, "comment_id": 89246620, "body": "But if i do not import the <code>TClass </code> inside the <code>Company</code> module i can not use instance of <code>Show</code> for <code>Worker</code> type."}, {"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 2, "creation_date": 1530516483, "post_id": 51130450, "comment_id": 89246690, "body": "Then can you move the Show instance to the other module ? defining an instance in another module than the data definition is bad practice (you&#39;ll have the orphan instance warning)"}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "reply_to_user": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 0, "creation_date": 1530516849, "post_id": 51130450, "comment_id": 89246839, "body": "Oh Ok i do not know yet good or bad practices in Haskell.Still a beginner.I thought that you can have the types in their modules ,and a module contianing all instances of a typeclass."}, {"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 2, "creation_date": 1530516958, "post_id": 51130450, "comment_id": 89246899, "body": "You can have the types in a specific module, but with their instances."}, {"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 1, "creation_date": 1530517123, "post_id": 51130450, "comment_id": 89246987, "body": "It&#39;s not part of the question but reading your code I would suggest that you read about strict fields in data records : <a href=\"https://stackoverflow.com/questions/8576795/advantages-of-strict-fields-in-data-types\" title=\"advantages of strict fields in data types\">stackoverflow.com/questions/8576795/&hellip;</a> it might be helpful here."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530530446, "post_id": 51130450, "comment_id": 89254069, "body": "Minor note: mutually recursive modules can be defined in GHC using <code>.hs-boot</code> files, but if possible it better to avoid them. Instances should be defined, when possible, in the module defining the <code>class</code> or in the module defining the type. Putting the instance elsewhere makes it a so-called &quot;orphan&quot; instance, which slows down compilation time, and is hard to find by other programmers."}], "answers": [{"tags": [], "owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "is_accepted": true, "score": 3, "last_activity_date": 1530516858, "creation_date": 1530516858, "answer_id": 51131139, "question_id": 51130450, "link": "https://stackoverflow.com/questions/51130450/module-imports-form-a-cycle/51131139#51131139", "title": "Module imports form a cycle", "body": "<p>Moving the Show instance to the other module, you can break the cycle:</p>\n\n<pre><code>module Tclass where\nimport System.Environment\nimport Company\n\nclass Console a where\n    wLine::a-&gt;IO()\n    rLine::IO String-&gt;a\n</code></pre>\n\n<p>and</p>\n\n<pre><code>module Company where\n\ndata Worker=Worker{\n    age::Int,\n    name::String,\n    title::Title,\n    income::Int\n}\ninstance Show Worker where\n    show w=\"to be defined\"\n    print =putStr . show \n\ndata Title=Manager | Dev | Tester deriving (Show)\n\ndata Company=Company{\n    cname::String,\n    people::[Worker],\n    yf::Int\n}\n</code></pre>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 632, "favorite_count": 0, "accepted_answer_id": 51131139, "answer_count": 1, "score": 2, "last_activity_date": 1530526332, "creation_date": 1530514019, "last_edit_date": 1530526332, "question_id": 51130450, "link": "https://stackoverflow.com/questions/51130450/module-imports-form-a-cycle", "title": "Module imports form a cycle", "body": "<p>Hello i was wondering how do you solve circular dependency in Haskell</p>\n\n<p>I have :<br>\n<strong>Module for a type.</strong><br></p>\n\n<pre><code>module Company where\n\nimport Tclass\n\ndata Worker=Worker{\n    age::Int,\n    name::String,\n    title::Title,\n    income::Int\n}\n\ndata Title=Manager | Dev | Tester deriving (Show)\n\n\ndata Company=Company{\n    cname::String,\n    people::[Worker],\n    yf::Int\n}\n</code></pre>\n\n<p><strong>Module for the instance of the typeclass</strong><br></p>\n\n<pre><code>module Tclass where\nimport System.Environment\nimport Company\n\nclass Console a where\n    wLine::a-&gt;IO()\n    rLine::IO String-&gt;a\n\ninstance Show Worker where\n    show w=\"to be defined\"\n    print =putStr . show \n</code></pre>\n\n<p>If i just want to load the type in ghci and use it ; how do i import them without getting the error:</p>\n\n<pre><code>Module imports form a cycle:\n         module `Tclass' (.\\Tclass.hs)\n        imports `Company' (Company.hs)\n  which imports `Tclass' (.\\Tclass.hs)\n</code></pre>\n\n<p><strong>P.S</strong> I have tried creating a auxiliary module that imports the two modules and the two modules would import it too,but no luck with this one either :</p>\n\n<pre><code>module Au where\n import Tclass\n import Company\n\nmodule Company\n import Au\n\nmodule Tclass \n import Au\n</code></pre>\n"}, {"tags": ["haskell", "haskell-stack", "haskell-ffi"], "comments": [{"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1530518235, "post_id": 51129813, "comment_id": 89247499, "body": "While definitely not a complete answer, these ghc tickets might be related: <a href=\"https://ghc.haskell.org/trac/ghc/ticket/4824\" rel=\"nofollow noreferrer\">#4824</a>, <a href=\"https://ghc.haskell.org/trac/ghc/ticket/5620\" rel=\"nofollow noreferrer\">#5620</a>. These imply that dynamic linking via GHC is apparently broken on windows. You might want to delve into the <a href=\"https://hackage.haskell.org/package/Win32-2.8.0.0/docs/System-Win32-DLL.html\" rel=\"nofollow noreferrer\">System.Win32.DLL</a> module, along with the <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Foreign-Ptr.html#g:2\" rel=\"nofollow noreferrer\">Foreign.Ptr</a> for getting the <code>FunPtr</code> to the linked pointers. Also consider using C to call the C# functions."}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1530518528, "post_id": 51129813, "comment_id": 89247627, "body": "Another option might be getting the C# code that starts up the haskell runtime to pass a <code>FunPtr</code> for the functions you want to call. And a third option is to have the haskell and C# be completely separate and communicate via some messaging channel ( such as named pipes on windows )"}, {"owner": {"reputation": 326, "user_id": 4933975, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3ea4084c4ac3cad4dc0bcb7f5cfd43e?s=128&d=identicon&r=PG", "display_name": "arvindd", "link": "https://stackoverflow.com/users/4933975/arvindd"}, "reply_to_user": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1530520296, "post_id": 51129813, "comment_id": 89248500, "body": "Thanks for the reply! I checked the tickets after your mention, and think they are not related. In both cases it is about DLLs being broken, in my case, it is not really that DLL is broken - it is just that I do not know how to keep unresolved symbols in the DLL  kept unresolved, until be actually resolved by the run-time loader. That said, your idea of C# starting Haskell runtime / using some messaging protocols between the two systems is good, and worth considering for me. Thanks for these ideas! I would still call them as &quot;workarounds&quot; though, so may be there are better ways..."}, {"owner": {"reputation": 2667, "user_id": 325725, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3db095f94749aaedfea12b927b13cf74?s=128&d=identicon&r=PG", "display_name": "Phyx", "link": "https://stackoverflow.com/users/325725/phyx"}, "reply_to_user": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1532378534, "post_id": 51129813, "comment_id": 89942882, "body": "@M.Aroosi Those tickets are about creating a dynamically linked version of GHC itself, not creating user dynamic libraries. You are perfectly able to create a fully statically linked dynamic library on Windows at the moment."}], "answers": [{"tags": [], "owner": {"reputation": 326, "user_id": 4933975, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3ea4084c4ac3cad4dc0bcb7f5cfd43e?s=128&d=identicon&r=PG", "display_name": "arvindd", "link": "https://stackoverflow.com/users/4933975/arvindd"}, "is_accepted": true, "score": 7, "last_activity_date": 1530934331, "last_edit_date": 1530934331, "creation_date": 1530855170, "answer_id": 51203579, "question_id": 51129813, "link": "https://stackoverflow.com/questions/51129813/how-to-link-to-a-c-i-e-managed-dll-from-haskell/51203579#51203579", "title": "How to link to a C# (i.e., managed) DLL from Haskell?", "body": "<p>And so finally, I managed to solve this myself! After a week of struggle, that is. And any helpful comments to add it this answer is welcome.</p>\n\n<p>I did this as follows:</p>\n\n<p><strong>In C# class DLL:</strong></p>\n\n<p>I had to find a way to \"export\" my function <code>fn_called_from_hs()</code> to unsafe native code. I found this is not really straight-forward, and there are really quite some amount of articles on the internet to explain how this is done. Everything amounts to actually disassembling the .NET DLL via the tool <code>ildasm</code>, and in the intermediate IL file generated, adding an \".export\" prefix to the function that we want to export, and then again assembling the IL file back to the DLL form using <code>ilasm</code>. </p>\n\n<p>I found all these steps are automated by the NUGetPackage <a href=\"https://sites.google.com/site/robertgiesecke/Home/uploads/unmanagedexports\" rel=\"noreferrer\">Unmanaged Exports</a>, so the first step is to install this package as a part of your .NET project, and then adding the <code>DLLExport</code> attribute to your function to be exported. Make sure you have <code>RGiesecke.DllExport</code> in your list of imports:</p>\n\n<pre><code>using RGiesecke.DllExport;\n\n[DllExport(\"fn_called_from_hs\", CallingConvention=CallingConvention.Cdecl)]\npublic static string FnCalledFromHs()\n{\n      // Your function code here\n}\n</code></pre>\n\n<p>As you can see, I have named the actual function as <code>FnCalledFromHs()</code> (in accordance with the naming convention in C#), but exported the same function as <code>fn_called_from_hs</code> (in accordance with the naming convention in Haskell). This way, when you look at the Haskell code, you will not see anything that looks out of place.</p>\n\n<p>One of the most important steps for this to actually work is to make sure that the project in which you are exporting the function is made to target x64 or x86 - On default the projects target \"Any CPU\" - <code>RGiesecke.DllExport</code> does not work if the project targets \"Any CPU\".</p>\n\n<p>Now build the project to get the <strong>csharp.dll</strong> which contains your exported <code>fn_called_from_hs</code>.</p>\n\n<p><strong>Before linking Haskell code</strong></p>\n\n<p>Mingw GCC (which ghc on Windows internally uses) can actually directly link with DLLs, provided they were created with gcc before. However, since we have created our C# DLL using the .NET compiler csc, we need to specifically create an import library that our Haskell can see.</p>\n\n<p>We use two tools to our aid: <code>gendef</code> and <code>dlltool</code>, both of which are in the \"mingw\\bin\" folder within your ghc installation (so, of course, you need to have this in your PATH env variable to access these tools). </p>\n\n<p>Here's how I went about it:</p>\n\n<ul>\n<li><p>Created a .def file which in-turn can be used for creating an import library:</p>\n\n<pre><code>gendef csharp.dll\n</code></pre></li>\n<li><p>Created an import library with dlltool:</p>\n\n<pre><code>dlltool -k -d csharp.def -l csharp.lib\n</code></pre></li>\n<li><p>Copied the above import lib to the same directory in which the DLL was present.</p></li>\n</ul>\n\n<p>The last step (below) now will use this import library for actually linking with the csharp DLL.</p>\n\n<p><strong>Linking Haskell code with the above import library</strong></p>\n\n<p>This was a little trickier, and has possibly made me hit a bug in stack / GHC (not sure), but have already <a href=\"https://github.com/commercialhaskell/stack/issues/4135\" rel=\"noreferrer\">filed here</a>.</p>\n\n<p>I went about this as follows:</p>\n\n<ul>\n<li><p>Added <code>extra-lib-dirs</code> in my stack.yaml, and added the directory in which the above import-lib was created:</p>\n\n<pre><code>extra-lib-dirs: [\"&lt;drive&gt;:\\\\path\\\\to\\\\importlib\"]\n</code></pre></li>\n</ul>\n\n<p>(Note that this could have also been added to your package.yaml under \"libraries\", but I chose to have it in my stack.yaml).</p>\n\n<ul>\n<li><p>Added <code>extra-libraries</code> to my stack.yaml, under libraries.</p>\n\n<pre><code>extra-libraries: csharp\n</code></pre></li>\n<li><p>And, added also the options -l and -L to my ghc-options for linking my library. This is what I did to circumvent <strong><em>the (possible) bug</em></strong> that stack somehow is not passing the <code>extra-lib-dirs</code> and <code>extra-libraries</code> to ghc and ld during linking. So, my final \"library\" section in package.yaml looks like this (compare it to how it was before in my question above):</p>\n\n<pre><code> library:\n   source-dirs: \n   - src\n   - src/csrc\n   include-dirs: src/csrc\n   ghc-options:\n   - -shared\n   - -fno-shared-implib\n   - -lcslib\n   - -L&lt;drive&gt;:\\\\path\\\\to\\\\importlib\n   extra-libraries: csharp\n</code></pre></li>\n</ul>\n\n<p><strong>Conclusion</strong></p>\n\n<p>With all this done, my Haskell code now simply builds well with the normal <code>stack build</code> command, without any \"unreferenced symbols\" error. On executing my Haskell code, I also checked that the c# function <code>fn_called_from_hs</code> was actually called, and the results got returned correctly.</p>\n\n<p>Of course, there is more to this from the c# side: correct marshalling of parameters, etc., and I had to also work on those to get my result correct. The only place I can cover all of these nitty-gritties is in a blog :-)  </p>\n\n<p>Please feel free to cross-verify my solution, and also comment on any better way of doing this. This was the best way I could figure out after my struggles!</p>\n"}], "owner": {"reputation": 326, "user_id": 4933975, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3ea4084c4ac3cad4dc0bcb7f5cfd43e?s=128&d=identicon&r=PG", "display_name": "arvindd", "link": "https://stackoverflow.com/users/4933975/arvindd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 4, "accepted_answer_id": 51203579, "answer_count": 1, "score": 9, "last_activity_date": 1530934331, "creation_date": 1530510889, "last_edit_date": 1530858922, "question_id": 51129813, "link": "https://stackoverflow.com/questions/51129813/how-to-link-to-a-c-i-e-managed-dll-from-haskell", "title": "How to link to a C# (i.e., managed) DLL from Haskell?", "body": "<p>I am trying to build a Windows DLL from my Haskell code. The functions in this DLL are supposed to be called from a managed code in C#. And, atleast one of the function (defined in the c# code) is to be called from a function in this DLL.</p>\n\n<p>At the risk of over explaining, here's a small diagram to depict what I want:</p>\n\n<pre><code>+----------------------+           +------------------------+\n|   Managed C# code    |           |  Haskell code (in DLL) |\n|                      |     (1)   |                        |\n|  fn_calling_hs()  -----------------&gt; fn_called_from_cs()  |   \n|                      |           |                        |\n|                      |           |                        |          \n| fn_called_from_hs() &lt;--------------- fn_calling_cs()      |\n|                      |     (2)   |                        |\n+----------------------+           +------------------------+\n</code></pre>\n\n<p>I managed to make the (1) work perfectly, i.e., a Haskell function in the DLL is called by C# code, with correct marshalling of structures and arrays, and the results from the function execution in Haskell is also correct. So far, so good.</p>\n\n<p>The problem is with (2), i.e., a function from Haskell (in the DLL) calling a managed function defined in C#. The problem is in the build itself - I have not yet gone past that to actually check the results of (2).</p>\n\n<p>As the fn_called_from_hs() in the c# managed code is defined in C#, I only have the function symbol \"imported\" in the Haskell code (in DLL):</p>\n\n<pre><code>foreign import ccall fn_called_from_hs :: IO CString\n</code></pre>\n\n<p>Now, when I build my Haskell project with stack, it builds the Haskell DLL without problems, but the build continues to also link \"main.exe\" - and this fails (obviously), because there is no function fn_called_from_hs() defined anywhere in the Haskell code (it is defined in c#).</p>\n\n<p>Is there any way that I can stop stack from continuing to build main.exe after building HsDLL.dll? I am ok with HsDLL.dll having unresolved symbol (fn_called_from_hs()) because this symbol will be found by the runtime linker during the loading of this DLL by the managed C# code.</p>\n\n<p>So far, I have tried these steps, but none of them helped:</p>\n\n<ol>\n<li>Removed the \"executables\" and \"test\" from package.yaml  </li>\n<li><p>Added the GHC option: <code>-no-hs-main</code> in the package.yaml. The package.yaml\nportion that contains building of HsDLL looks like this:</p>\n\n<pre><code>library:   \n  source-dirs: \n  - src\n  - src/csrc   \n  include-dirs: src/csrc   \n  ghc-options:\n  - -shared\n  - -fno-shared-implib \n  - -no-hs-main\n</code></pre>\n\n<ol start=\"3\">\n<li>Completely removed the Main module (i.e., removed Main.hs that was automatically created by stack from the \"app\" folder)</li>\n<li>I added the <code>-dynamic</code> flag in the ghc-options in the hopes that GHC will assume that the unresolved symbols will be defined elsewhere, but this gave other problems: GHC now complains that it needs \"dyn\" libraries of base, etc.</li>\n</ol></li>\n</ol>\n\n<p>So, finally, I always end up with this:</p>\n\n<pre><code>PS C:\\workspace\\Haskell\\hscs\\src\\csrc&gt; stack build\nhscs-0.1.0.0: configure (lib)\nConfiguring hscs-0.1.0.0...\nhscs-0.1.0.0: build (lib)\nPreprocessing library for hscs-0.1.0.0..\nBuilding library for hscs-0.1.0.0..\nLinking main.exe ...\n.stack-work\\dist\\5c8418a7\\build\\HsLib.o:fake:(.text+0x541): undefined reference to `fn_called_from_hs'\ncollect2.exe: error: ld returned 1 exit status\n`gcc.exe' failed in phase `Linker'. (Exit code: 1)\n\n--  While building custom Setup.hs for package hscs-0.1.0.0 using:\n      C:\\tools\\HaskellStack\\setup-exe-cache\\x86_64-windows\\Cabal-simple_Z6RU0evB_2.0.1.0_ghc-8.2.2.exe --builddir=.stack-work\\dist\\5c8418a7 build lib:hscs --ghc-options \" -ddump-hi -ddump-to-file -fdiagnostics-color=always\"\n    Process exited with code: ExitFailure 1\n</code></pre>\n\n<p>So, my questions are:\n(1) I have absolutely no idea how to stop linking \"main.exe\"! I know that the function fn_called_from_hs() is not defined within the HsDLL, but, as I said, I am ok because it is defined in the managed c# code. I just want main.exe not to be built.</p>\n\n<p>OR</p>\n\n<p>(2) Should I go ahead with adding <code>-dynamic</code> flag to GHC (keeping all the other flags as above)? In this case, how do I get stack to install the \"dyn\" libraries that GHC is complaining about?</p>\n\n<p>Can somebody help me? Thanks in advance for your patience in reading this (rather) long question!</p>\n"}, {"tags": ["haskell", "nix"], "comments": [{"owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "edited": false, "score": 0, "creation_date": 1530520676, "post_id": 51129368, "comment_id": 89248670, "body": "Note that in general, it may be a bad idea to have different versions in a dependency graph. It appears that GHC can deal with it reasonably well as long as the conflict is not part of the api&#39;s you&#39;re using. However, Nixpkgs refuses to create such dependency graphs, presumably because it causes more pain than help. Luckily test-only dependencies can be stripped out of the dependency graph, as they are only required for the build."}], "answers": [{"tags": [], "owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "is_accepted": true, "score": 3, "last_activity_date": 1530519377, "creation_date": 1530519377, "answer_id": 51131725, "question_id": 51129368, "link": "https://stackoverflow.com/questions/51129368/building-haskell-package-for-n-different-version/51131725#51131725", "title": "Building haskell package for n different version", "body": "<h2>Overriding a dependency on a single package</h2>\n\n<p>The problem is that the package set was created with the original quickcheck version. Globally overriding a much-used package like that is bound to cause problems.</p>\n\n<p>Instead, you can override specific edges in the dependency graph like <a href=\"https://github.com/NixOS/nixpkgs/blob/be1461fc0ab29c45c69e7b2c2097c887750e4fe0/pkgs/development/haskell-modules/configuration-common.nix#L888\" rel=\"nofollow noreferrer\">this</a>:</p>\n\n<pre><code>myproject.overrideScope (self: super: {\n    QuickCheck = haskellPackagesNew.callPackage ./quickcheck.nix { };\n  });\n</code></pre>\n\n<hr>\n\n<h2>Composability</h2>\n\n<p>Your example can be improved further by using <code>haskellPackages.extend</code> instead of <code>overrides</code>. This will give freedom to further extend your package set after you have extended it before.</p>\n\n<p>Another change you can make is to avoid <code>rec</code> recursive attribute sets in the definition of overrides and overlays. It is often best to use <code>self</code> instead. See this <a href=\"https://blog.flyingcircus.io/2017/11/07/nixos-the-dos-and-donts-of-nixpkgs-overlays/\" rel=\"nofollow noreferrer\">blog post on flyingcircus.io</a>.</p>\n\n<p>It's also a good idea to switch from <code>packageOverrides</code> to <code>overlays</code>.</p>\n\n<p>These things may not cause issues right now, but will lead to surprises in larger projects, so it's better to avoid them in the first place.</p>\n\n<h2>End result</h2>\n\n<p>I hope I got this right because I don't have the complete example.</p>\n\n<pre><code>{ compiler ? \"default\", doBenchmark ? false }:\n\nlet\n\n  overlays = [(pkgs: super: {\n             haskellPackages = super.haskellPackages.extend ( hself: hsuper: {\n                 myproject = (hself.callPackage ./default.nix {}).overrideScope (pself: psuper: {\n                     QuickCheck = pself.QuickCheck_2_9;\n                   });\n                 QuickCheck_2_9 = hself.callPackage ./quickcheck.nix { };\n               };\n             );\n           };\n         )];\n\n  pkgs = (import &lt;nixpkgs&gt; { inherit overlays; }).pkgs;\n\n  f = import ./default.nix;\n\n  haskellPackages = if compiler == \"default\"\n                       then pkgs.haskellPackages\n                       else pkgs.haskell.packages.${compiler};\n\n  variant = if doBenchmark then pkgs.haskell.lib.doBenchmark else pkgs.lib.id;\n\n  drv = variant (haskellPackages.callPackage f { development = true;});\n\nin\n\n{myproject = if pkgs.lib.inNixShell then drv.env else drv;}\n</code></pre>\n"}], "owner": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 0, "accepted_answer_id": 51131725, "answer_count": 1, "score": 2, "last_activity_date": 1530519377, "creation_date": 1530507818, "last_edit_date": 1530508175, "question_id": 51129368, "link": "https://stackoverflow.com/questions/51129368/building-haskell-package-for-n-different-version", "title": "Building haskell package for n different version", "body": "<p>I'm trying to build <a href=\"https://hackage.haskell.org/package/bytestring\" rel=\"nofollow noreferrer\">bytestring</a> and it fails with an error related to <a href=\"https://hackage.haskell.org/package/QuickCheck\" rel=\"nofollow noreferrer\">quickcheck</a>. After a quick check (no pun intended), I found out that bytestring has a dependency on quickcheck with version <code>&gt;= 2.4 &amp;&amp; &lt; 2.10</code> and by default <code>nix</code> build quickcheck version <code>2.10.1</code>.</p>\n\n<p>After reading <a href=\"https://github.com/Gabriel439/haskell-nix/tree/master/project1\" rel=\"nofollow noreferrer\">this</a> now I know I can switch the quickcheck's version.</p>\n\n<p>shell.nix:</p>\n\n<pre><code>{ compiler ? \"default\", doBenchmark ? false }:\n\nlet\n\nconfig = { packageOverrides = pkgs: rec {\n             haskellPackages = pkgs.haskellPackages.override {\n               overrides = haskellPackagesNew: haskellPackagesOld: rec {\n                 myproject = haskellPackagesNew.callPackage ./default.nix { };\n                 QuickCheck = haskellPackagesNew.callPackage ./quickcheck.nix { };\n               };\n             };\n           };\n         };\n\n  pkgs = (import &lt;nixpkgs&gt; { inherit config; }).pkgs;\n\n  f = import ./default.nix;\n\n  haskellPackages = if compiler == \"default\"\n                       then pkgs.haskellPackages\n                       else pkgs.haskell.packages.${compiler};\n\n  variant = if doBenchmark then pkgs.haskell.lib.doBenchmark else pkgs.lib.id;\n\n  drv = variant (haskellPackages.callPackage f { development = true;});\n\nin\n\n{myproject = if pkgs.lib.inNixShell then drv.env else drv;}\n</code></pre>\n\n<p>default.nix and quickcheck.nix is generated with <code>cabal2nix</code>.</p>\n\n<p>Now it throws a different error that some of the package are missing its dependencies which is quickcheck with version <code>&gt;=2.10</code>. </p>\n\n<p>How to tell that only bytestring will use the custom version?</p>\n\n<p>Edit: quickcheck's version switched to <code>2.9.2</code></p>\n"}, {"tags": ["haskell", "logic", "category-theory", "set-theory"], "comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1530502451, "post_id": 51128520, "comment_id": 89242456, "body": "Well, functions are one example (but definitely not the only example) of the things you describe from category theory. Also, unless I&#39;m misunderstanding, this question seems to be mainly about the difference between sets and types (if so, this would be a good thing to search for, if you&#39;re looking for things to research related to this)?"}], "answers": [{"comments": [{"owner": {"reputation": 1338, "user_id": 770110, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dae11b30544529b3c0836855a14cd653?s=128&d=identicon&r=PG", "display_name": "Vlad Patryshev", "link": "https://stackoverflow.com/users/770110/vlad-patryshev"}, "edited": false, "score": 0, "creation_date": 1530823740, "post_id": 51132379, "comment_id": 89381015, "body": "Yes, thank you, this is a great description of the problem. Still, I was not talking about modeling the theory, whether using denotational or operational semantics; either way, sets are not exactly a good idea... but as you hint, we can delimit our operations. I was talking about a proper theory; and is seems like F\\omega may be good enough - as an idealized theory, of course."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 8, "last_activity_date": 1530521778, "creation_date": 1530521778, "answer_id": 51132379, "question_id": 51128520, "link": "https://stackoverflow.com/questions/51128520/whats-the-theoretical-definition-of-a-function-in-haskell/51132379#51132379", "title": "what&#39;s the theoretical definition of a function in Haskell", "body": "<p>This is a very complex topic. In order to keep it simple and manageable, we often cut corners and often \"lie\".</p>\n\n<p>Haskell, like all programming languages, has its own syntax and evaluation rules (<em>operational semantics</em>). However, thinking about a programming language only in operational terms can be quite limiting and cumbersome. When we call a <code>factorial</code> function we do not care about how it is implemented, or the exact number of evaluation steps it takes to provide its result.</p>\n\n<p>To overcome this <em>denotational semantics</em> was proposed, where syntax is interpreted, piece by piece, in some \"mathematical\" model. It is possible that many different programs (syntactic expressions) map to the same interpretation (the \"semantics\").</p>\n\n<p>As far as I know, a denotational semantics for the whole Haskell language was never defined. There are, though, models for Haskell fragments. These models usually are categories.</p>\n\n<p>Here are a few examples.</p>\n\n<p>If we (greatly!) restrict Haskell to a terminating, simply-typed core, then all we need is a (bi-)Cartesian closed category, and the category of sets suffices, with its products, coproducts and exponentials.</p>\n\n<p>However, Haskell is not terminating, and has general recursion, so we need fixed points. Usually this is solved by moving to the category of complete partial orders (usually one between omega-CPO or DCPO).</p>\n\n<p>Then we need type-level fixed points, so we need to consider a category with initial F-algebras (at least for well-behaved functors F). This severely makes things more complex.</p>\n\n<p>We have not added polymorphism, yet! This is particularly tricky since Reynolds proved that polymorphism can not be naively modeled by sets (\"polymorphism is not set-theoretic\" is the main reference paper). So we now have PER models and Coherent models (both being categories) as some attempts to provide semantics to polymorphism.</p>\n\n<p>Then we need type classes, GADTs, higher ranks, higher kinds, ...</p>\n\n<p>In practice, we do not need this level of complexity. When programming, we usually deal with a limited amount of features, so we \"lie\" to ourselves and often pretend everything works like a set, or close enough. Then we add complexity back if really needed.</p>\n"}], "owner": {"reputation": 1338, "user_id": 770110, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dae11b30544529b3c0836855a14cd653?s=128&d=identicon&r=PG", "display_name": "Vlad Patryshev", "link": "https://stackoverflow.com/users/770110/vlad-patryshev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 271, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1530521778, "creation_date": 1530499149, "last_edit_date": 1530512320, "question_id": 51128520, "link": "https://stackoverflow.com/questions/51128520/whats-the-theoretical-definition-of-a-function-in-haskell", "title": "what&#39;s the theoretical definition of a function in Haskell", "body": "<p>I'd like to see, from the foundations point of view, what are called functions in Haskell.</p>\n\n<p>See, categorically, there are \"things\" that compose associatively, with an identity function, and that would be enough, theoretically.</p>\n\n<p>But everyone tries to convince me that this is not how functions are defined. A function is defined (they say) as a set of pairs of elements from two sets (domain and codoman), satisfying certain conditions. Meaning that a function is just a set. That you cannot define a function on something that is not a set.</p>\n\n<p>If we apply this approach to Haskell, what I see is that <code>Hask</code> category is just a subcategory of <code>Sets</code>, which, to me, looks weird.</p>\n\n<p>I'd rather extend the notion of function to apply to what we have in Haskell.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/36448563/whats-the-difference-between-a-function-and-a-functor-in-haskell-only-definiti\">Here</a> in the comments this issue is tangentially touched, but not very deep. I'd like to hear a clear statement, like \"but actually they are all sets\", or \"no, we have nothing to do with set theory\".</p>\n\n<p>Any ideas? Considerations?</p>\n"}, {"tags": ["haskell", "type-families", "recursion-schemes"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530500895, "post_id": 51128360, "comment_id": 89242196, "body": "Please include your code in the question, as well as what version of <code>recursion-schemes</code> you&#39;re using"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530502014, "post_id": 51128360, "comment_id": 89242387, "body": "The code is exactly same as the <code>annotate</code> function in the link, with <code>Term</code> aliased to <code>Maybe</code> and <code>E</code> aliased to <code>Int</code>, and <code>calcEnv</code> function is replaced by <code>const</code>.  The version of <code>recursion-schemes</code> is 5.0.2"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530505318, "post_id": 51128360, "comment_id": 89242935, "body": "Huh, it looks to me like the first part of the error (mentioning Compose) is not consistent with the &quot;Expected ... Actual... &quot; part, which seems like a bug but  I may be missing something. What ghc version?"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530509621, "post_id": 51128360, "comment_id": 89243969, "body": "GHC version is 8.2.2"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530638449, "post_id": 51128360, "comment_id": 89303275, "body": "@jberryman No, GHC is fine. The actual type here corresponds to the very first type in the message, and the expected type the second. That is, the types in the message are ordered &quot;actual expected expected actual.&quot;"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530639418, "post_id": 51128360, "comment_id": 89303741, "body": "Oh the trouble is I read <code>CofreeF</code> as <code>Cofree</code> so it looked like GHC was giving a nonsensical error"}], "answers": [{"comments": [{"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "edited": false, "score": 0, "creation_date": 1530668629, "post_id": 51160166, "comment_id": 89312757, "body": "Finally I found out that I should import <code>CofreeF(..)</code> from <code>Control.Comonad.Trans.Cofree</code> and <code>Cofree</code> from <code>Control.Comonad.Cofree</code> for <code>recursion-schemes</code>... It&#39;s a bit wired."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 1, "last_activity_date": 1530639220, "creation_date": 1530639220, "answer_id": 51160166, "question_id": 51128360, "link": "https://stackoverflow.com/questions/51128360/haskell-type-instance-failed-to-resolve/51160166#51160166", "title": "Haskell type instance failed to resolve", "body": "<p><code>Cofree</code> is just a type synonym</p>\n\n<pre><code>newtype CofreeT f w a = CofreeT { runCofreeT :: w (CofreeF f a (CofreeT f w a)) }\ntype Cofree f = CofreeT f Identity\n</code></pre>\n\n<p>and it is <code>CofreeT</code> that has a <code>Base</code> instance:</p>\n\n<pre><code>type instance Base (CofreeT f w a) = Compose w (CofreeF f a)\n-- Base (Cofree f a) ~ Base (CofreeT f Identity a) ~ Compose Identity (CofreeF f a)\n</code></pre>\n\n<p>The equation from the question is morally equivalent, but it's not a good enough approximation.</p>\n\n<p>Wrap your coalgebra in <code>Compose . Identity</code></p>\n\n<pre><code>annotate :: E -&gt; Fix Term -&gt; Cofree Term E\nannotate = curry $ ana $ Compose . Identity . coalg\n  where\n    coalg :: (E, Fix Term) -&gt; CofreeF Term E (E, Fix Term)\n    coalg (environment, Fix term) = environment :&lt; fmap (environment,) term\n</code></pre>\n"}], "owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 51160166, "answer_count": 1, "score": 2, "last_activity_date": 1530639220, "creation_date": 1530497374, "last_edit_date": 1530502220, "question_id": 51128360, "link": "https://stackoverflow.com/questions/51128360/haskell-type-instance-failed-to-resolve", "title": "Haskell type instance failed to resolve", "body": "<p>I'm trying to create a <code>Cofree</code> structure by anamorphism, according to <a href=\"https://stackoverflow.com/questions/46134949/haskell-labeling-an-ast-with-type-information-using-algorithm-w?rq=1\">this post</a>. But the compiler complains about type mismatch:</p>\n\n<pre><code>Expected type: Base (Cofree Term E) (E, Fix Term)\n  Actual type: CofreeF Term E (E, Fix Term)\n</code></pre>\n\n<p>But at the source code of <code>recursion-schemes</code> package, there is an type instance definition:</p>\n\n<pre><code>type instance Base (Cofree f a) = CofreeF f a\n</code></pre>\n\n<p>How can I make the haskell compiler unify that type with this specific type instance equation successfully?</p>\n\n<p>The code is almost the same as in the link:</p>\n\n<pre><code>import qualified Control.Comonad.Trans.Cofree as COFREEF\n\ntype E = Int\ntype Term = Maybe\n\nannotate :: E -&gt; Fix Term -&gt; COFREEF.Cofree Term E\nannotate = curry (ana coalg)\n  where\n    coalg :: (E, Fix Term) -&gt; COFREEF.CofreeF Term E (E, Fix Term)\n    coalg (environment, Fix term) = environment COFREEF.:&lt; fmap ((,) \nenvironment) term\n</code></pre>\n\n<p>And the exact error message:</p>\n\n<pre><code>Couldn't match type \u2018COFREEF.CofreeF Term E (E, Fix Term)\u2019\n                 with \u2018Compose\n                         Data.Functor.Identity.Identity\n                         (COFREEF.CofreeF Maybe Int)\n                         (E, Fix Term)\u2019\n  Expected type: (E, Fix Term)\n                 -&gt; Base (COFREEF.Cofree Term E) (E, Fix Term)\n    Actual type: (E, Fix Term)\n                 -&gt; COFREEF.CofreeF Term E (E, Fix Term)\n\u2022 In the first argument of \u2018ana\u2019, namely \u2018coalg\u2019\n  In the first argument of \u2018curry\u2019, namely \u2018(ana coalg)\u2019\n  In the expression: curry (ana coalg)\n</code></pre>\n"}, {"tags": ["haskell", "functional-dependencies"], "owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 199, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1530530989, "creation_date": 1530493796, "last_edit_date": 1530530989, "question_id": 51128119, "link": "https://stackoverflow.com/questions/51128119/haskell-functional-dependencies-consistency-condition-is-it-needed-is-it-used", "title": "Haskell Functional Dependencies Consistency Condition: is it needed? Is it used?", "body": "<p>The FunDep Consistency Condition appears in all the literature dating back to Mark P Jones 2000 paper. And it's inherited from the database-theory origins of FunDeps.</p>\n\n<p>But Haskell's FunDeps are not very much like in databases: a FunDep <code>-&gt;</code> means: in any instance for this class, I promise to give an algorithm to get from the class parameters on the left to those on the right. (In the instance decl, that algorithm might have to go via its constraints -- then you need <code>UndecidableInstances</code>.)</p>\n\n<p>It's reasonably well-known that GHC's implementation of the Consistency Condition is bogus -- see <a href=\"https://stackoverflow.com/questions/30533301/how-do-you-get-and-use-the-dependent-type-from-a-type-class-with-functional-depe/30537079#30537079\">this answer, for example</a>. And that's a Good Thing so that I can write</p>\n\n<pre><code>class TypeEq a a' (b :: Bool) | a a' -&gt; b  where ...\ninstance TypeEq a a True  where ...\ninstance (b ~ False) =&gt; TypeEq a a' b  where ...\n</code></pre>\n\n<p>(That needs <code>OverlappingInstances</code> or pragmas, as well as <code>Undecidable</code>.)</p>\n\n<p>The claims in the papers -- including in the FunDeps via CHRs 2006 paper -- is that the Consistency Condition is needed to ensure confluent type inference. And there's an inference rule that if you have <code>TypeEq alpha1 alpha2 beta1</code> and <code>TypeEq alpha1 alpha2 beta2</code>, you can conclude <code>beta1 == beta2</code> in which <code>==</code> is type identity not merely <code>~</code> unifiability.</p>\n\n<p>But I see no evidence GHC ever applies that rule. And a constraint like this works just fine (<strong>EDIT:</strong> my first signature here was a bit too in-your-face even for GHC, corrected):</p>\n\n<pre><code>f :: (TypeEq a a' True, TypeEq a' a False) =&gt; a -&gt; a' -&gt; ()\nf _ _ = ()\n\nf 'c' 'd'         -- produces `()` happily\n</code></pre>\n\n<p>The comparable function using type families can be defined but can't be used</p>\n\n<pre><code>g :: ((a == b) ~ False, (b == a) ~ True) =&gt; a -&gt; b -&gt; ()\n</code></pre>\n\n<p>(Needs <code>TypeOperators</code>, <code>import Data.Type.Equality</code>)\nFor <code>g 'c' 'd'</code> or <code>g 'c' \"d\"</code> GHC complains <code>Couldn't match type 'True with 'False</code>.</p>\n\n<p>Then is the Consistency Condition anything but a nuisance? (There's a few tickets on Trac where it's produced very odd behaviour.)</p>\n\n<p>Does anybody rely on it? Or use it to validate their instances in case of awkward overlaps?</p>\n\n<p><strong>ADDIT:</strong> You might think that signature for <code>f</code> is cheating, by flipping the type params. This signature (my initial post)</p>\n\n<pre><code>f :: (TypeEq a a' True, TypeEq a a' False) =&gt; a -&gt; a' -&gt; ()\n</code></pre>\n\n<p>Gets rejected <code>Couldn't match type 'False with 'True</code>. So looks like GHC is applying the call-with-same-arguments inference rule.</p>\n\n<p>But this with the args non-flipped goes OK (because the two signatures are too remote?)</p>\n\n<pre><code>f1 :: (TypeEq a a' False) =&gt; a -&gt; a' -&gt; [()]\nf1 _ _ = [()]\nf2 :: (TypeEq a a' True) =&gt; a -&gt; a' -&gt; [()]\nf2 _ _ = [()]\n-- f3 :: (TypeEq a a' f2', TypeEq a a' f1') =&gt; a -&gt; a' -&gt; [()]  \nf3 x y = f1 x y ++ f2 x y\n</code></pre>\n\n<p>That is, goes OK if I <em>don't</em> put a signature for <code>f3</code>. (And no matter what signature I try for <code>f3</code>, rejects <code>Overlapping instances for TypeEq a b 'True arising from a use of \u2018f2\u2019</code>; amongst other messages.)</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530486892, "post_id": 51127621, "comment_id": 89240195, "body": "What do you mean by \u201cany program\u201d? <i>Any piece of Haskell code that works</i>, or rather <i>any algorithm that can be implemented in other languages without memory leaks</i>?"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 1, "creation_date": 1530489182, "post_id": 51127621, "comment_id": 89240515, "body": "It&#39;s an interesting question, if you can clarify it. One issue is I suspect that a &quot;space leak&quot; is in some sense by definition &quot;fixable&quot; (e.g. an algorithm that uses O(n) memory for which no better algorithm is known would never be termed a &quot;space leak&quot;)"}, {"owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530551753, "post_id": 51127621, "comment_id": 89265824, "body": "@leftaroundabout I meant to ask whether any piece of Haskell that works can be rewritten in Haskell so that it does not have space leaks."}, {"owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530552126, "post_id": 51127621, "comment_id": 89265993, "body": "@jberryman I like your definition. A counterexample would be a Haskell program that uses asymptotically more memory than equivalent imperative algorithm which cannot be rewritten to help GC reclaim unused memory. I wonder if there is a class of programs fixable by impure RTS specific hacks - it&#39;s certainly better to have this option than none."}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1530486489, "creation_date": 1530486489, "question_id": 51127621, "link": "https://stackoverflow.com/questions/51127621/are-space-leaks-in-ghc-haskell-always-fixable", "title": "Are space-leaks in GHC Haskell always fixable?", "body": "<p>As I learn about Haskell, I'm getting impression that <a href=\"https://ghc.haskell.org/trac/ghc/ticket/2607\" rel=\"nofollow noreferrer\">surprising space leaks</a> (<a href=\"https://ro-che.info/articles/2017-01-10-nested-loop-space-leak\" rel=\"nofollow noreferrer\">also here</a>) are one of the most important barriers to adoption.</p>\n\n<p>It's not clear to me whether any program can always be rewritten so that it does not suffer from space leaks all else being equal.</p>\n"}, {"tags": ["haskell", "maybe"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1530473364, "post_id": 51126343, "comment_id": 89237657, "body": "What part of the error message in the exception isn&#39;t making sense to you?"}, {"owner": {"reputation": 35, "user_id": 9716319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b5c80203985edccb731b47e72130ead9?s=128&d=identicon&r=PG&f=1", "display_name": "radiosonic", "link": "https://stackoverflow.com/users/9716319/radiosonic"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1530473906, "post_id": 51126343, "comment_id": 89237786, "body": "Well basically why it occurs in the first place. In my understanding it shouldn&#39;t even exist a Nothing state when prog is executed with the valid argument String &quot;&quot;c+c*c$&quot;. And if the String is incorrect it shouldn&#39;t return an exception, only &quot;Nothing&quot;."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1530474419, "post_id": 51126343, "comment_id": 89237906, "body": "You are using a lot of partial functions like <code>head,tail,fromJust</code> which should be avoided when possible. Using pattern matching and turning on warnings would be preferred, since it often allows the compiler to point out the cases where your program crashes."}, {"owner": {"reputation": 10159, "user_id": 509824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c62e65b86aabdffdd1c628aad1fefe3?s=128&d=identicon&r=PG", "display_name": "Alberto Garcia-Raboso", "link": "https://stackoverflow.com/users/509824/alberto-garcia-raboso"}, "edited": false, "score": 1, "creation_date": 1530474651, "post_id": 51126343, "comment_id": 89237971, "body": "The logic is a bit difficult to follow, but if you trace it you&#39;ll see the first <code>c</code> is matched, but then there&#39;s a <code>match &#39;*&#39;</code> of the rest that returns <code>Nothing</code> and you end up at <code>ftail Nothing</code>. The first guard in the definition of <code>ftail</code> tries to evaluate <code>fromJust Nothing</code> and... there&#39;s your exception!"}], "answers": [{"tags": [], "owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "is_accepted": false, "score": 2, "last_activity_date": 1530476864, "last_edit_date": 1530476864, "creation_date": 1530474350, "answer_id": 51126503, "question_id": 51126343, "link": "https://stackoverflow.com/questions/51126343/haskell-data-maybe-exception-maybe-fromjust-nothing/51126503#51126503", "title": "Haskell Data.Maybe *** Exception: Maybe.fromJust: Nothing", "body": "<p><code>fromJust</code> expects to be passed a <code>Just</code> value and it receives a <code>Nothing</code>value, this is why this exception happens:</p>\n\n<p><a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Maybe.html#v:fromJust\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Maybe.html#v:fromJust</a></p>\n\n<p>Note that I would encourage you to use the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Maybe.html#v:maybe\" rel=\"nofollow noreferrer\"><code>maybe</code></a> function which could help clarify your code I think ( and ... maybe find the bug :) )</p>\n\n<p>Also, <code>maybe</code> is preferable over <code>fromJust</code> because it's not a partial function (i.e it is guaranteed that the function won't error at runtime)</p>\n\n<p>for example it allows you to rewrite :</p>\n\n<pre><code>match :: Char -&gt; Maybe String -&gt; Maybe String\nmatch x input\n  | (isNothing input == False) &amp;&amp; (x == head (fromJust(input))) = Just (tail (fromJust(input)))\n  | otherwise = Nothing\n</code></pre>\n\n<p>as</p>\n\n<pre><code>match :: Char -&gt; Maybe String -&gt; Maybe String\nmatch x input =\n  maybe\n    Nothing\n    (\\i -&gt;\n      if x == head i\n        then Just $ tail i\n        else Nothing)\n    input\n</code></pre>\n\n<p>One more thing : <code>head</code> and <code>tail</code>\u00a0are partial functions too, you'd prefer using pattern matching like this, to avoid runtime exceptions when the String is empty for example:</p>\n\n<pre><code>match :: Char -&gt; Maybe String -&gt; Maybe String\nmatch x input =\n  maybe\n    Nothing\n    (\\i -&gt; case i of\n      [] -&gt; Nothing\n      first:rest -&gt; \n        if x == first\n          then Just rest\n          else Nothing)\n    input\n</code></pre>\n\n<p>(Edit: also, see the answer of @chi that gives a nice idiomatic implementation of match!)</p>\n"}, {"comments": [{"owner": {"reputation": 1262, "user_id": 3940228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1455002de0a9fc115cc877f962ea4c9f?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier Sohn", "link": "https://stackoverflow.com/users/3940228/olivier-sohn"}, "edited": false, "score": 0, "creation_date": 1530476437, "post_id": 51126630, "comment_id": 89238376, "body": "I like this <code>match</code> better than mine :)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 9, "last_activity_date": 1530475851, "last_edit_date": 1530475851, "creation_date": 1530475420, "answer_id": 51126630, "question_id": 51126343, "link": "https://stackoverflow.com/questions/51126343/haskell-data-maybe-exception-maybe-fromjust-nothing/51126630#51126630", "title": "Haskell Data.Maybe *** Exception: Maybe.fromJust: Nothing", "body": "<p>There are several antipatterns in the OP's code. I'll only discuss this snippet.</p>\n\n<pre><code>match :: Char -&gt; Maybe String -&gt; Maybe String\nmatch x input\n  | (isNothing input == False) &amp;&amp; (x == head (fromJust(input))) = Just (tail (fromJust(input)))\n  | otherwise = Nothing\n</code></pre>\n\n<ul>\n<li>Using <code>isNothing, fromJust</code> is an antipattern, since the latter is a partial function which crashes the program when fed with <code>Nothing</code>. The programmer has to be careful to always check <code>isJust</code> beforehand, which is easy to forget. It is much simpler to forget about these functions completely and rely on pattern matching instead (see below).</li>\n<li><code>.. == False</code> should be rewritten as <code>not ..</code></li>\n<li><code>not (isNothing ..)</code> should be <code>isJust ..</code> (but again, pattern matching makes this pointless)</li>\n<li><code>head,tail,!!</code> are partial functions too, and they should be replaced with pattern matching, when possible. Above, <code>head</code> is potentially called on <code>[]</code>, so we would need to check it beforehand. Pattern matching avoids the need.</li>\n<li>Instead of <code>.. == []</code> one can use <code>null ..</code> (or, better, pattern matching).</li>\n<li>Never write <code>f(x)</code> for a function call, the parentheses have no purpose there.</li>\n<li>Turn on warnings using the <code>-Wall</code> flag: the compiler often spots issues in the code.</li>\n</ul>\n\n<p>If you are learning Haskell, I strongly suggest you refrain from using dangerous partial functions and read a tutorial on pattern patching, using which would prevent almost all the issues in your code.</p>\n\n<p>For comparison, the code above could be rewritten as:</p>\n\n<pre><code>match :: Char -&gt; Maybe String -&gt; Maybe String\nmatch x (Just (y:ys)) | x==y = Just ys\nmatch _ _                    = Nothing\n</code></pre>\n\n<p>Note how pattern matching simultaneously checks whether the argument is a <code>Just</code> with a non empty list inside, and extracts the data inside the constructors. When it fails, the next case of the match is taken (instead of crashing the program). </p>\n\n<p>In languages without pattern matching (say, Java), often libraries force us to remember to check whether data is present (<code>x.hasNext()</code>) before accessing the data (<code>x.next()</code>). Forgetting the check causes a runtime error / exception. With pattern matching, these two steps are combined in the same language construct, so that there is no way to \"forget\" a check and crash the program.</p>\n\n<p>Unlike the original code, <code>match x (Just [])</code> does not crash but returns <code>Nothing</code> instead.</p>\n"}], "owner": {"reputation": 35, "user_id": 9716319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b5c80203985edccb731b47e72130ead9?s=128&d=identicon&r=PG&f=1", "display_name": "radiosonic", "link": "https://stackoverflow.com/users/9716319/radiosonic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1003, "favorite_count": 0, "accepted_answer_id": 51126630, "answer_count": 2, "score": 1, "last_activity_date": 1530476864, "creation_date": 1530473160, "question_id": 51126343, "link": "https://stackoverflow.com/questions/51126343/haskell-data-maybe-exception-maybe-fromjust-nothing", "title": "Haskell Data.Maybe *** Exception: Maybe.fromJust: Nothing", "body": "<p>I try to write a program for an exercise. It should read a String and return an empty list if it could parse the String according to a given grammar. In case the String is not in valid grammar it should return \"Nothing\". Like here:</p>\n\n<pre><code>&gt;prog \"c+c*c$\"\nJust\"\"\n&gt;prog \"c+c-c$\"\nNothing\n</code></pre>\n\n<p>I wrote the following functions they are loaded and compile in GHCI, but when i run <code>prog</code> with any argument i get the following exception: <code>*** Exception: Maybe.fromJust: Nothing</code></p>\n\n<p>I suppose i access or pass a Maybe String in a wrong way, but not sure where. Any help regarding the right handling of Maybe structures are welcome.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>import Data.Maybe\n\n\nmatch :: Char -&gt; Maybe String -&gt; Maybe String\nmatch x input\n  | (isNothing input == False) &amp;&amp; (x == head (fromJust(input))) = Just (tail (fromJust(input)))\n  | otherwise = Nothing\n\n\nprog :: String -&gt; Maybe String\nprog x = match '$' (expr (Just (x)))\n\n\nexpr :: Maybe String -&gt; Maybe String\nexpr x = ttail (term x)\n\n\nterm :: Maybe String -&gt; Maybe String\nterm x = ftail (factor x)\n\n\nttail :: Maybe String -&gt; Maybe String\nttail x\n  | fromJust(x) == [] = Just []\n  | otherwise = ttail (term (match '+' x))\n\n\nfactor :: Maybe String -&gt; Maybe String\nfactor x = match 'c' x\n\n\nftail :: Maybe String -&gt; Maybe String\nftail x\n  | fromJust(x) == [] = Just []\n  | otherwise  = ftail ( factor ( match '*' x))\n</code></pre>\n"}, {"tags": ["haskell", "idris", "dependent-type"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 7, "creation_date": 1530471834, "post_id": 51126059, "comment_id": 89237301, "body": "Singleton&#39;s how we do it since Haskell doesn&#39;t actually have dependent types."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1530474266, "post_id": 51126059, "comment_id": 89237869, "body": "Haskell only has GADTs, which are not as powerful as dependent types (sometimes more convenient, other times more cumbersome or just not enough). A good technical comparison between GADTs vs dependent types is in the Hasochism paper."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1530722384, "post_id": 51126059, "comment_id": 89338536, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/37362342/difference-between-haskell-and-idris-reflection-of-runtime-compiletime-in-the-t\">Difference between Haskell and Idris: Reflection of Runtime/Compiletime in the type universes</a>"}], "answers": [{"tags": [], "owner": {"reputation": 730, "user_id": 2708711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13eb7bf6018c00d359233c47b63f43be?s=128&d=identicon&r=PG&f=1", "display_name": "Thales MG", "link": "https://stackoverflow.com/users/2708711/thales-mg"}, "is_accepted": false, "score": 0, "last_activity_date": 1531096865, "creation_date": 1531096865, "answer_id": 51237025, "question_id": 51126059, "link": "https://stackoverflow.com/questions/51126059/how-to-write-a-simple-dependent-type-function-in-haskell/51237025#51237025", "title": "How to write a simple dependent type function in Haskell?", "body": "<p>I was going to augment my question by proposing a more complicated dependent type function (like the jammed door example in <a href=\"https://github.com/edwinb/TypeDD-Samples/blob/master/Chapter14/DoorJam.idr\" rel=\"nofollow noreferrer\">Idris</a>) and how to do it in Haskell.</p>\n\n<p>But I found the answer <a href=\"https://github.com/rpeszek/IdrisTddNotes/wiki/Part3_Sec14b_ATM#compared-to-haskell\" rel=\"nofollow noreferrer\">here</a>. Here is the Jammed Door example using that, for reference.</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE TypeInType #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE RebindableSyntax #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE RankNTypes #-}\n\nmodule Door where\n\nimport Data.Kind\nimport Data.Singletons.Prelude\nimport Data.Singletons.TH\nimport Data.Promotion.TH\n\n$(singletons [d|\n data DoorState = DoorOpen | DoorClosed\n data DoorResult = Jammed | OK\n |])\n\n$(promote [d|\n tryOpen :: DoorResult -&gt; DoorState\n tryOpen Jammed = DoorClosed\n tryOpen OK = DoorOpen\n |])\n\ndata DoorCmd (res :: k) (s :: DoorState) (f :: k ~&gt; DoorState) where\n  Open :: forall check. DoorCmd check DoorClosed TryOpenSym0\n  Close :: DoorCmd '() DoorOpen (ConstSym1 'DoorClosed)\n  Knock :: DoorCmd '() state (ConstSym1 state)\n  Pure :: forall (res :: k) (state_fn :: k ~&gt; DoorState). Sing res -&gt; DoorCmd res (state_fn @@ res) state_fn\n  (:&gt;&gt;=) :: forall (a :: k1) (b :: k2) (state1 :: DoorState) (state2_fn :: k1 ~&gt; DoorState) (state3_fn :: k2 ~&gt; DoorState).\n    DoorCmd a state1 state2_fn -&gt;\n    (Sing a -&gt; DoorCmd b (state2_fn @@ a) state3_fn) -&gt;\n    DoorCmd b state1 state3_fn\n\ndoorOps :: DoorCmd '() DoorClosed (ConstSym1 'DoorClosed)\ndoorOps = do\n  Knock\n  result &lt;- Open\n  case result of\n    SJammed -&gt; Knock\n    SOK -&gt; Close\n  where\n    (&gt;&gt;=) = (:&gt;&gt;=)\n    (&gt;&gt;) a k = a :&gt;&gt;= \\_ -&gt; k\n    return = Pure\n</code></pre>\n"}], "owner": {"reputation": 730, "user_id": 2708711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13eb7bf6018c00d359233c47b63f43be?s=128&d=identicon&r=PG&f=1", "display_name": "Thales MG", "link": "https://stackoverflow.com/users/2708711/thales-mg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 494, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1531096865, "creation_date": 1530470936, "question_id": 51126059, "link": "https://stackoverflow.com/questions/51126059/how-to-write-a-simple-dependent-type-function-in-haskell", "title": "How to write a simple dependent type function in Haskell?", "body": "<p>I'm trying to write a function whose return type depends on the value of one of its inputs.</p>\n\n<p>In Idris, it is straightforward:</p>\n\n<pre><code>module Dependent\n\nIntOrChar : Bool -&gt; Type\nIntOrChar True = Int\nIntOrChar False = Char\n\nfun : (x : Bool) -&gt; IntOrChar x\nfun True = 10\nfun False = 'a'\n</code></pre>\n\n<p>With those definitions:</p>\n\n<pre><code>\u03bb\u03a0&gt; fun True\n10 : Int\n\u03bb\u03a0&gt; fun False\n'a' : Char\n</code></pre>\n\n<p>My question is: can I do a similar thing in a simple manner in Haskell?</p>\n\n<p>I suppose I could use something like <a href=\"http://hackage.haskell.org/package/singletons\" rel=\"nofollow noreferrer\">singletons</a>, but I don't know how to use them properly.</p>\n\n<p>This works:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE TypeFamilies #-}\n\nmodule Main where\n\nimport Data.Singletons.Prelude\n\ntype family IntOrChar (x :: Bool) where\n  IntOrChar True = Int\n  IntOrChar False = Char\n\nfun :: SBool b -&gt; IntOrChar b\nfun b = case b of\n          STrue -&gt; 10\n          SFalse -&gt; 'a'\n\n...\n\n\u03bb fun STrue\n10\n\u03bb fun SFalse\n'a'\n</code></pre>\n\n<p>But it requires me to use <code>SBool</code>s instead of plain <code>Bool</code>s. I'd rather use it as <code>fun True</code>.</p>\n\n<p>Is there a way to make the equivalent of <code>fun : (x : Bool) -&gt; IntOrChar x</code> in Haskell?</p>\n"}, {"tags": ["function", "haskell", "threshold"], "answers": [{"comments": [{"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "edited": false, "score": 0, "creation_date": 1530437638, "post_id": 51122076, "comment_id": 89229372, "body": "That looks wonderful! Just to catch, what does &quot;bin&quot; stand for? Or maybe you could give a link to read about such notation. Thank you very much"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1530469278, "post_id": 51122076, "comment_id": 89236584, "body": "Better yet, use a custom data type with <i>only</i> three possible values instead of <code>String</code> as the return value. <code>data Threshold = Low | Medium | High</code>, then <code>bin x | x &lt; 60 = Low</code>, etc."}, {"owner": {"reputation": 10159, "user_id": 509824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c62e65b86aabdffdd1c628aad1fefe3?s=128&d=identicon&r=PG", "display_name": "Alberto Garcia-Raboso", "link": "https://stackoverflow.com/users/509824/alberto-garcia-raboso"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1530470121, "post_id": 51122076, "comment_id": 89236813, "body": "@chepner Nice suggestion!"}], "tags": [], "owner": {"reputation": 10159, "user_id": 509824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c62e65b86aabdffdd1c628aad1fefe3?s=128&d=identicon&r=PG", "display_name": "Alberto Garcia-Raboso", "link": "https://stackoverflow.com/users/509824/alberto-garcia-raboso"}, "is_accepted": false, "score": 5, "last_activity_date": 1530437921, "last_edit_date": 1530437921, "creation_date": 1530437454, "answer_id": 51122076, "question_id": 51121945, "link": "https://stackoverflow.com/questions/51121945/haskell-assigning-name-to-a-threshold-of-values/51122076#51122076", "title": "Haskell. Assigning name to a threshold of values", "body": "<p>If I understand correctly what you want, you can define a function that assigns what you call \"meaning\" to a single integer, and then map the collection list over it:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>bin :: Int -&gt; String\nbin x\n  | x &lt;= 0    = error \"nonpositive value\"\n  | x &lt; 60    = \"Low\"\n  | x &lt; 80    = \"Medium\"\n  | x &lt; 100   = \"High\"\n  | otherwise = error \"value greater than or equal to 100\"\n\nbinnedCollection :: Int -&gt; Int -&gt; Int -&gt; Int -&gt; [String]\nbinnedCollection w x y z = map bin $ collection w x y z\n</code></pre>\n\n<p>For example,</p>\n\n<pre><code>Prelude&gt; binnedCollection 0 20 60 80\n[\"Low\",\"Low\",\"Medium\",\"High\"]\n</code></pre>\n\n<p>I have added error cases for the ranges not included in your definition; change them to whatever is appropriate for your logic.</p>\n"}], "owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1539159292, "creation_date": 1530436441, "last_edit_date": 1539159292, "question_id": 51121945, "link": "https://stackoverflow.com/questions/51121945/haskell-assigning-name-to-a-threshold-of-values", "title": "Haskell. Assigning name to a threshold of values", "body": "<p>I'm trying to figure out how to write in Haskell:</p>\n\n<p>There is a list made of 4 variables: [w,x,y,z]\nAfter completing the following through ghci:</p>\n\n<pre><code>collection :: Int -&gt; Int -&gt; Int -&gt; Int -&gt; [Int]\ncollection w x y z = [w,x,y,z]\n</code></pre>\n\n<p>I want to assign a \"meaning\" to each threshold value for w,x,y,z. Example: when 0 &lt; x &lt; 60, then x = \"Low\", when 59 &lt; x &lt; 80, then x = \"Medium\", when 79 &lt; x &lt; 100, then x = \"High\"</p>\n\n<p>How do you put that in Haskell code?</p>\n"}, {"tags": ["haskell", "arguments", "flip"], "answers": [{"comments": [{"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530427786, "post_id": 51121013, "comment_id": 89227359, "body": "In your buildList example coludnt you just give a function to buildList like buildList f = map f [0..]"}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 1, "creation_date": 1530427940, "post_id": 51121013, "comment_id": 89227390, "body": "@simplesystems Yes, you can always write the same thing without <code>flip</code> by essentially just inlining the definition of <code>flip</code> at its use site. But using <code>flip</code> makes it possible to write in <a href=\"https://wiki.haskell.org/Pointfree\" rel=\"nofollow noreferrer\">point-free style</a>, which some people find more readable, and some people don\u2019t. Personally, I think it\u2019s situational\u2014I think sometimes point-free style eliminates noise and makes things easier to understand\u2014but in that case, I agree, the version with the explicit argument is really no worse."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 1, "creation_date": 1530428008, "post_id": 51121013, "comment_id": 89227403, "body": "To put it another way, you can always replace <code>flip f</code> with <code>\\x y -&gt; f y x</code>, so <code>flip</code> is by no means essential! But like all functions, it is an abstraction, albeit a small one."}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530469305, "post_id": 51121013, "comment_id": 89236600, "body": "@simplesystems You might also be interested in <a href=\"https://stackoverflow.com/q/7402528/176841\">stackoverflow.com/q/7402528/176841</a> . There is some theory you can explore here, if you want: in haskell <code>flip</code> lets us avoid using lambdas (for clarity, aesthetics); interestingly it turns out that lambdas are never <i>necessary</i>: it&#39;s possible to select a handful of functions (&quot;combinators&quot;, such as <code>flip</code>), such that you have a system as powerful as the lambda calculus. This is called a <i>basis</i>, the most famous being the <code>SKI</code> combinator calculus."}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530469442, "post_id": 51121013, "comment_id": 89236630, "body": "<code>flip</code> is usually named <code>C</code> and can form part of a basis too: <a href=\"https://en.wikipedia.org/wiki/B,_C,_K,_W_system\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/B,_C,_K,_W_system</a> .The point I&#39;m trying to get at is that <code>flip</code> (and <code>const</code>, and <code>id</code>) is not arbitrary, but in fact you discover it in the theory if you&#39;re thinking about how you might express computation without resorting to lambdas (which is often a goal in haskell for clarity/aesthetic reasons, as described in other answers here)"}], "tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": true, "score": 17, "last_activity_date": 1530428423, "last_edit_date": 1530428423, "creation_date": 1530427305, "answer_id": 51121013, "question_id": 51120910, "link": "https://stackoverflow.com/questions/51120910/haskell-purpose-of-the-flip-function/51121013#51121013", "title": "Haskell: Purpose of the flip function?", "body": "<p>One is unlikely to ever use the <code>flip</code> function on a function that is immediately applied to two or more arguments, but <code>flip</code> can be useful in two situations:</p>\n\n<ol>\n<li><p>If the function is passed higher-order to a different function, one cannot simply reverse the arguments at the call site, since the call site is in another function! For example, these two expressions produce very different results:</p>\n\n<pre><code>ghci&gt; foldl (-) 0 [1, 2, 3, 4]\n-10\nghci&gt; foldl (flip (-)) 0 [1, 2, 3, 4]\n2\n</code></pre>\n\n<p>In this case, we cannot swap the arguments of <code>(-)</code> because we do not apply <code>(-)</code> directly; <code>foldl</code> applies it for us. So we can use <code>flip (-)</code> instead of writing out the whole lambda <code>\\x y -&gt; y - x</code>.</p></li>\n<li><p>Additionally, it can be useful to use <code>flip</code> to partially apply a function to its second argument. For example, we could use <code>flip</code> to write a function that builds an infinite list using a builder function that is provided the element\u2019s index in the list:</p>\n\n<pre><code>buildList :: (Integer -&gt; a) -&gt; [a]\nbuildList = flip map [0..]\n</code></pre>\n\n\n\n<pre><code>ghci&gt; take 10 (buildList (\\x -&gt; x * x))\n[0,1,4,9,16,25,36,49,64,81]\n</code></pre>\n\n<p>Perhaps more frequently, this is used when we want to partially apply the second argument of a function that will be used higher-order, like in the first example:</p>\n\n<pre><code>ghci&gt; map (flip map [1, 2, 3]) [(+ 1), (* 2)]\n[[2,3,4],[2,4,6]]\n</code></pre>\n\n<p>Sometimes, instead of using <code>flip</code> in a case like this, people will use infix syntax instead, since <a href=\"https://wiki.haskell.org/Section_of_an_infix_operator\" rel=\"noreferrer\">operator sections</a> have the unique property that they can supply the first <em>or</em> second argument to a function. Therefore, writing <code>(`f` x)</code> is equivalent to writing <code>flip f x</code>. Personally, I think writing <code>flip</code> directly is usually easier to read, but that\u2019s a matter of taste.</p></li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530427902, "post_id": 51121033, "comment_id": 89227384, "body": "what is the $ standing for in you third example?"}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 0, "creation_date": 1530428096, "post_id": 51121033, "comment_id": 89227421, "body": "+1, I especially like your last example. I\u2019ve definitely seen that at times (and I might have even written it myself once or twice) and it isn\u2019t something I thought to include in my answer. :)"}, {"owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "edited": false, "score": 0, "creation_date": 1530430042, "post_id": 51121033, "comment_id": 89227806, "body": "simplesystems, I use it instead of parentheses. You can read more about it here: <a href=\"https://haskell-lang.org/tutorial/operators\" rel=\"nofollow noreferrer\">haskell-lang.org/tutorial/operators</a>"}, {"owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "edited": false, "score": 1, "creation_date": 1530430250, "post_id": 51121033, "comment_id": 89227859, "body": "Alexis, yeah I found that this use case is more common for me! (I also prefer using backticks instead of flip in many cases)."}], "tags": [], "owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "is_accepted": false, "score": 4, "last_activity_date": 1530427617, "creation_date": 1530427617, "answer_id": 51121033, "question_id": 51120910, "link": "https://stackoverflow.com/questions/51120910/haskell-purpose-of-the-flip-function/51121033#51121033", "title": "Haskell: Purpose of the flip function?", "body": "<p>Sometimes you'll want to use a function by supplying the second parameter but take it's first parameter from somewhere else. For example:</p>\n\n<pre><code>map (flip (-) 5) [1..5]\n</code></pre>\n\n<p>Though this can also be written as:</p>\n\n<pre><code>map (\\x -&gt; x - 5) [1..5]\n</code></pre>\n\n<p>Another use case is when the second argument is long:</p>\n\n<pre><code>flip (-) 5 $\n   if odd x\n      then x + 1\n      else x\n</code></pre>\n\n<p>But you can always use a <code>let</code> expression to name the first parameter computation and then not use <code>flip</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": false, "score": 5, "last_activity_date": 1530428417, "creation_date": 1530428417, "answer_id": 51121104, "question_id": 51120910, "link": "https://stackoverflow.com/questions/51120910/haskell-purpose-of-the-flip-function/51121104#51121104", "title": "Haskell: Purpose of the flip function?", "body": "<p>One very useful example of <code>flip</code> usage is sorting in descending order. You can see how it works in <code>ghci</code>:</p>\n\n<pre><code>ghci&gt; import Data.List\n\nghci&gt; :t sortBy \nsortBy :: (a -&gt; a -&gt; Ordering) -&gt; [a] -&gt; [a]\n\nghci&gt; :t compare\ncompare :: Ord a =&gt; a -&gt; a -&gt; Ordering\n\nghci&gt; sortBy compare [2,1,3]\n[1,2,3]\n\nghci&gt; sortBy (flip compare) [2,1,3]\n[3,2,1]\n</code></pre>\n"}], "owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1631, "favorite_count": 0, "accepted_answer_id": 51121013, "answer_count": 3, "score": 7, "last_activity_date": 1553764352, "creation_date": 1530426120, "last_edit_date": 1553764352, "question_id": 51120910, "link": "https://stackoverflow.com/questions/51120910/haskell-purpose-of-the-flip-function", "title": "Haskell: Purpose of the flip function?", "body": "<p>I am a bit surprised that this was not asked before. Maybe it is a stupid question.</p>\n\n<p>I know that flip is changing the order of two arguments.</p>\n\n<p>Example:</p>\n\n<pre><code>(-) 5 3\n= 5 - 3\n= 2\n\nflip (-) 5 3\n= 3 - 5\n= -2\n</code></pre>\n\n<p>But why would I need such a function? Why not just change the inputs manually?</p>\n\n<p>Why not just write:</p>\n\n<pre><code>(-) 3 5\n= 3 - 5\n= -2\n</code></pre>\n"}, {"tags": ["haskell", "fold", "infix-operator", "foldleft"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 2, "creation_date": 1530426200, "post_id": 51120866, "comment_id": 89227099, "body": "Infix is just syntax.  You are correct about the nesting of the calls, but being infix or prefix doesn&#39;t matter.  (Also, note that the syntax to use a prefix function infix uses backticks, not single quotes.)"}], "answers": [{"tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": true, "score": 5, "last_activity_date": 1530463954, "last_edit_date": 1530463954, "creation_date": 1530426340, "answer_id": 51120934, "question_id": 51120866, "link": "https://stackoverflow.com/questions/51120866/haskell-foldl-function-applied-as-infix-function/51120934#51120934", "title": "Haskell: foldl Function applied as infix Function?", "body": "<p>The only difference between infix function application and prefix function application is syntax, so your question does not make very much sense. Outside of referring to the syntax of a particular expression, applying a function \u201cin an infix way\u201d doesn\u2019t mean anything.</p>\n\n<p>In Haskell, when you write <code>x + y</code>, it is precisely equivalent to writing <code>(+) x y</code>. Likewise, <code>x `op` y</code> is precisely equivalent to writing <code>op x y</code>. Put another way, application of an infix operator is still just plain old function application where the function is applied to two arguments.</p>\n\n<p>If it helps you to visualize <code>foldl</code> via an expression like <code>((a `f` b) `f` c) `f` d</code> instead of one like <code>f (f (f a b) c) d</code>, that\u2019s certainly within your right, since the two expressions are equivalent. Indeed, the documentation for <code>foldl</code> uses infix notation to help explain the function\u2019s behavior, since it is a useful representation that helps get the point across. But be careful not to confuse <em>notation</em> (aka syntax) with <em>denotation</em> (aka meaning). Many programs can be notationally distinct but denotationally equivalent.</p>\n"}], "owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 51120934, "answer_count": 1, "score": 1, "last_activity_date": 1530463954, "creation_date": 1530425690, "last_edit_date": 1530447145, "question_id": 51120866, "link": "https://stackoverflow.com/questions/51120866/haskell-foldl-function-applied-as-infix-function", "title": "Haskell: foldl Function applied as infix Function?", "body": "<p>Is the function I give to <code>foldl</code> applied in an infix way?</p>\n\n<p>Example</p>\n\n<pre><code>foldl (-) 0 [1,2,3]\n\n= 0-1-2-3 \n= -6\n</code></pre>\n\n<p>so more generally:</p>\n\n<pre><code>foldl f x [a,b,c]\n</code></pre>\n\n<p>is applied as:</p>\n\n<pre><code>(((x `f` a) `f`  b) `f` c)\n</code></pre>\n\n<p>I know it's recursive, but can I think about it that way?</p>\n"}, {"tags": ["haskell", "fonts", "haskell-diagrams"], "answers": [{"comments": [{"owner": {"reputation": 1997, "user_id": 737263, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ad00e973f8d4d18fad04d805ae2ef33c?s=128&d=identicon&r=PG", "display_name": "Roman", "link": "https://stackoverflow.com/users/737263/roman"}, "edited": false, "score": 0, "creation_date": 1530397966, "post_id": 51118937, "comment_id": 89223899, "body": "I&#39;m using Rasterific, since I&#39;m working with different image formats."}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "reply_to_user": {"reputation": 1997, "user_id": 737263, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ad00e973f8d4d18fad04d805ae2ef33c?s=128&d=identicon&r=PG", "display_name": "Roman", "link": "https://stackoverflow.com/users/737263/roman"}, "edited": false, "score": 0, "creation_date": 1530444635, "post_id": 51118937, "comment_id": 89230841, "body": "I&#39;m not certain, but looking at <code>diagram-rasterific</code> code for <a href=\"https://github.com/diagrams/diagrams-rasterific/blob/master/src/Diagrams/Backend/Rasterific.hs#L369\" rel=\"nofollow noreferrer\">text rendering</a> and <a href=\"https://github.com/diagrams/diagrams-rasterific/blob/master/src/Diagrams/Backend/Rasterific/Text.hs#L69\" rel=\"nofollow noreferrer\">font selection</a>, I think you may need to recompile <code>diagrams-rasterfic</code> with your font, or otherwise modify it."}], "tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 4, "last_activity_date": 1530396966, "creation_date": 1530396966, "answer_id": 51118937, "question_id": 51118560, "link": "https://stackoverflow.com/questions/51118560/custom-font-for-text-in-haskell-diagrams/51118937#51118937", "title": "Custom font for Text in Haskell Diagrams", "body": "<p>Font handling in <code>Diagrams</code> is highly dependent on the backend.  <code>diagrams-cairo</code> should be able to use any TTF font on your system.  On Linux, it will look up names using FontConfig.  It should use the OS-provided font lookup mechanism on other OSes, but I can't recall ever testing this myself.</p>\n\n<p>What backend are you planning to use?  I'm partial to <code>diagrams-cairo</code> for text handling, but it's the most difficult backend to install, especially on not-Linux.  It's likely other backends have improved since the last time I tested their text handling, also.</p>\n"}], "owner": {"reputation": 1997, "user_id": 737263, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ad00e973f8d4d18fad04d805ae2ef33c?s=128&d=identicon&r=PG", "display_name": "Roman", "link": "https://stackoverflow.com/users/737263/roman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 1, "accepted_answer_id": 51118937, "answer_count": 1, "score": 3, "last_activity_date": 1530502274, "creation_date": 1530393426, "last_edit_date": 1530502274, "question_id": 51118560, "link": "https://stackoverflow.com/questions/51118560/custom-font-for-text-in-haskell-diagrams", "title": "Custom font for Text in Haskell Diagrams", "body": "<p>I'm using Diagrams library to generate some text with a custom font. Looking at the documentation for <a href=\"http://hackage.haskell.org/package/diagrams-lib-1.4/docs/Diagrams-TwoD-Text.html\" rel=\"nofollow noreferrer\">Text</a> it is not clear how can one specify particular .ttf font file? I tried using different .ttf files like in the example below, but no one worked. </p>\n\n<pre><code>discountText :: Maybe Int -&gt; Diagram B\ndiscountText discount =\n  case discount of\n    Nothing -&gt; mempty\n    Just value -&gt;\n      text (show value ++ \" %\") # font \"Roboto-Light.ttf\" # fontSize 90\n</code></pre>\n\n<p>Another alternative seems to be <a href=\"http://hackage.haskell.org/package/SVGFonts\" rel=\"nofollow noreferrer\">SVGFonts</a>, but I would like to achieve this without another library. So how do you guys set custom fonts in Diagrams?</p>\n\n<p>UPD: I find the answer given below very explanatory. To solve the problem I actually ended up using <a href=\"http://hackage.haskell.org/package/SVGFonts\" rel=\"nofollow noreferrer\">SVGFonts</a> which adds extra step of converting .ttf into .svg, but does the job.</p>\n"}, {"tags": ["loops", "haskell", "state"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1530391508, "post_id": 51118162, "comment_id": 89222756, "body": "Why don&#39;t you simply store all coordinates (in a list)? Just change <code>forM_</code> to <code>forM</code> and <code>print</code> to <code>return</code>."}, {"owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1530427377, "post_id": 51118162, "comment_id": 89227292, "body": "Hi Melpomene, ok looks like i need to investigate forM_ vs formM - I see that formM allows me to remember results whereas forM_ doestn&#39;t"}], "answers": [{"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 3, "last_activity_date": 1530391530, "creation_date": 1530391530, "answer_id": 51118353, "question_id": 51118162, "link": "https://stackoverflow.com/questions/51118162/remembering-old-data/51118353#51118353", "title": "Remembering old data", "body": "<p>If you need to treat the first iteration differently, it should be separated (if I understand your problem correctly). You can reduce duplication by using a helper function:</p>\n\n<pre><code>getNumLine :: IO [Int]\ngetNumLine = do\n    line &lt;- getLine\n    return (map read (words line))\n\nmain = do\n    x &lt;- readLn :: IO Int   -- Double seemed wrong, use integer `div` below instead\n    firstline &lt;- getNumLine\n    forM_ [2..x `div` 2] $ \\lc -&gt; do\n        ...\n</code></pre>\n\n<p>And yes you could be much more \"functional\" about this, but I think it's best to learn in baby steps.</p>\n"}, {"comments": [{"owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "edited": false, "score": 0, "creation_date": 1530392871, "post_id": 51118429, "comment_id": 89223030, "body": "Hi Silvio, thank you for taking the time to provide a really comprehensive response. Appreciate your efforts. I am certain there is much I can learn from your code. Which I will spend some time looking at."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": false, "score": 5, "last_activity_date": 1530392157, "creation_date": 1530392157, "answer_id": 51118429, "question_id": 51118162, "link": "https://stackoverflow.com/questions/51118162/remembering-old-data/51118429#51118429", "title": "Remembering old data", "body": "<p>You asked for a more functional way of thinking about this, so I'm going to try to provide that. You said you're new to Haskell, so I apologize in advance if this touches on things you haven't explored yet. Feel free to ask for clarification in any part of it.</p>\n\n<p>First off, let's segment your <code>calcLength</code> function a bit more. We're passing it two points, so rather than passing four arguments, let's pass only two.</p>\n\n<pre><code>data Point a = Point a a\n\ncalcLength :: Floating a =&gt; Point a -&gt; Point a -&gt; a\ncalcLength (Point x1 y1) (Point x2 y2) = sqrt (height ^ 2 + width ^ 2)\n    where height = abs (y2 - y1)\n          width  = abs (x2 - x1)\n</code></pre>\n\n<p>Now let's write a function that reads a single point. We'll call this from <code>main</code> rather than reading two numerical values separately in <code>main</code>.</p>\n\n<pre><code>readPoint :: (Floating a, Read a) =&gt; IO (Point a)\nreadPoint = Point &lt;$&gt; readLn &lt;*&gt; readLn\n</code></pre>\n\n<p>I'm using applicative syntax here. If you're more familiar with do-notation, the equivalent would be</p>\n\n<pre><code>readPoint :: (Floating a, Read a) =&gt; IO (Point a)\nreadPoint = do\n  x &lt;- readLn\n  y &lt;- readLn\n  return $ Point x y\n</code></pre>\n\n<p>Now for the meat of your question. We want to take a list of things (points in your case) and produce adjacent pairs, making sure to loop around to the beginning. Let's stop thinking about it in terms of points for a moment and just write a function that works on <em>any</em> list of things.</p>\n\n<pre><code>-- We're going to take a list of things and produce a list of pairs of those things\nloopedPairs :: [a] -&gt; [(a, a)]\n-- If the original list is empty, return the empty list\nloopedPairs [] = []\n-- Otherwise, start recursing\nloopedPairs (x:xs) = go x xs\n    -- Here, we're pairing off all the elements\n    where go x' (y:ys) =  (x', y) : go y ys\n          -- Because we defined this as an inner function, we can still access\n          -- the original first element, effectively \"remembering\" it like you\n          -- were asking about. Note that we never use any \"global\" storage or\n          -- mutable state to do this, just a bit of variable scope.\n          go x' []     = [(x', x)]\n</code></pre>\n\n<p>Now we'll write a perimeter function. It's good to separate as much of your \"pure\" non-IO logic from the IO work as possible, so we want to factor this out of <code>main</code>.</p>\n\n<pre><code>newtype Polygon a = Polygon [Point a]\n\nperimeter :: Floating a =&gt; Polygon a -&gt; a\nperimeter (Polygon xs) = sum . map (\\(a, b) -&gt; calcLength a b) $ loopedPairs xs\n</code></pre>\n\n<p>We take a polygon, which is really just a list of points, pair off all of our points using <code>loopedPairs</code>, then calculate the length between each of them and sum the results.</p>\n\n<p>With that in mind, <code>main</code> is fairly short.</p>\n\n<pre><code>main :: IO ()\nmain = do\n  n &lt;- readLn :: IO Int\n  points &lt;- replicateM n (readPoint :: IO (Point Double))\n  let result = perimeter (Polygon points)\n  print result\n</code></pre>\n\n<p>We read in the number of points, then we read each point (<code>replicateM</code> essentially means \"do this thing <code>n</code> times and accumulate the result into a list). Then we calculate the perimeter and print it out.</p>\n\n<p>Runnable solution:</p>\n\n<pre><code>import Control.Monad\n\ndata Point a = Point a a\n\nnewtype Polygon a = Polygon [Point a]\n\ncalcLength :: Floating a =&gt; Point a -&gt; Point a -&gt; a\ncalcLength (Point x1 y1) (Point x2 y2) = sqrt (height ^ 2 + width ^ 2)\n    where height = abs (y2 - y1)\n          width  = abs (x2 - x1)\n\nreadPoint :: (Floating a, Read a) =&gt; IO (Point a)\nreadPoint = Point &lt;$&gt; readLn &lt;*&gt; readLn\n\nloopedPairs :: [a] -&gt; [(a, a)]\nloopedPairs [] = []\nloopedPairs (x:xs) = go x xs\n    where go x' (y:ys) =  (x', y) : go y ys\n          go x' []     = [(x', x)]\n\nperimeter :: Floating a =&gt; Polygon a -&gt; a\nperimeter (Polygon xs) = sum . map (\\(a, b) -&gt; calcLength a b) $ loopedPairs xs\n\nmain :: IO ()\nmain = do\n  n &lt;- readLn :: IO Int\n  points &lt;- replicateM n (readPoint :: IO (Point Double))\n  let result = perimeter (Polygon points)\n  print result\n</code></pre>\n\n<p>I invite you to dissect this, and let me know if you have any questions at all. Functional programming is a tricky mindset to get into, because it's very different from other programming, but it's a handy set of techniques to have in your toolbelt.</p>\n"}, {"tags": [], "owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "is_accepted": false, "score": 0, "last_activity_date": 1530460704, "last_edit_date": 1530460704, "creation_date": 1530459983, "answer_id": 51124758, "question_id": 51118162, "link": "https://stackoverflow.com/questions/51118162/remembering-old-data/51124758#51124758", "title": "Remembering old data", "body": "<p>After everbodys help: my final solution:</p>\n\n<pre><code>import Data.List\nimport Data.Foldable\nimport Data.Traversable\nimport Data.List.Split\n\n          -- Calculate length of line given points x1,y2, x2,y2\n          calc_length:: Int -&gt; Int -&gt; Int -&gt; Int -&gt; Float \n         calc_length x1 y1 x2 y2 =\n               sqrt ( fromIntegral (height ^2 + width ^2)  )\n               where height = abs( y2 - y1) \n                     width  = abs( x2 - x1)\n\n\n        -- Calculate the distances between vertex points (except the last)\n        getResults list = \n            sum [ calc_length (head f)  (last f) (head s)  (last s)   |  (f,s)  &lt;-  (zip list (tail list)) ]  \n\n\n       -- Calculate the last vertex distance between points\n       headAndTail list =\n           calc_length (z!!0) (z!!1) (z!!2) (z!!3)\n           where z  = head list ++ last list \n\n        -- Prompt the user for co-ordinate pairs\n        main = do\n                x &lt;- readLn :: IO Double\n                result &lt;- forM [1,2..x ] ( \\lc -&gt; do\n                   line1 &lt;- getLine\n                   let wds1 = map (\\str -&gt; read str::Int) (words $ line1)\n                   return wds1)\n\n                print (  (getResults result) + (headAndTail result)   ) \n</code></pre>\n"}], "owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 1, "accepted_answer_id": 51118353, "answer_count": 3, "score": 2, "last_activity_date": 1531042644, "creation_date": 1530389605, "last_edit_date": 1531042644, "question_id": 51118162, "link": "https://stackoverflow.com/questions/51118162/remembering-old-data", "title": "Remembering old data", "body": "<p>Remembering your first time (in a Haskell loop)</p>\n\n<p>I am trying to teach myself a little Haskell by going through some Hackerrank questions.</p>\n\n<p>The question I am looking at involves reading in sets of co-ordinates (x1,y1) and (x2,y2) and\nDetermining the perimeter of the polygon drawn by those co-ordinates.</p>\n\n<p>Here is my code so far:</p>\n\n<pre><code>-- Calculate length of line given points x1,y2, x2,y2\ncalc_length:: Int -&gt; Int -&gt; Int -&gt; Int -&gt; Float \ncalc_length x1 y1 x2 y2 =\n       sqrt ( fromIntegral (height ^2 + width ^2)  )\n       where height = abs( y2 - y1) \n             width  = abs( x2 - x1) \n\n\nmain = do\n        x &lt;- readLn :: IO Double\n        forM_ [1,2..(x / 2)] $ \\lc -&gt; do\n           line1 &lt;- getLine\n           let wds1 = map (\\str -&gt; read str::Int) (words $ line1)\n           line2 &lt;- getLine\n           let wds2 = map (\\str -&gt; read str::Int) (words $ line2)\n           print ( wds1, wds2)\n</code></pre>\n\n<p>The problem I have is that I need to calculate the distance between the first and last co-ordinates I.e. REMEMBER the first pair of numbers entered ( stored in line1). But after multiply iterations the first pair will be lost. I have tried using global variables to store the first calling of getLine (with little success, and even if that had worked I don\u2019t it think it would help.)</p>\n\n<p>I get the feeling that there is a more functional approach I could try but just don\u2019t know how.</p>\n\n<p>I am not looking for a full coded solution just an approach that points me in a better direction.</p>\n\n<p>Any thoughts?</p>\n"}, {"tags": ["haskell", "functional-programming", "haskell-stack"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1530389663, "post_id": 51117947, "comment_id": 89222354, "body": "Should note that numeric code probably isn&#39;t the easiest way to get used to Haskell as most popular algorithm rely on mutable buffers - which you can get in Haskell, but they&#39;re not a first class feature."}, {"owner": {"reputation": 167, "user_id": 9213402, "user_type": "registered", "profile_image": "https://graph.facebook.com/2204364039589930/picture?type=large", "display_name": "Floyd Everest", "link": "https://stackoverflow.com/users/9213402/floyd-everest"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1530390372, "post_id": 51117947, "comment_id": 89222517, "body": "I&#39;ll keep that in mind, thank you!"}], "answers": [{"comments": [{"owner": {"reputation": 167, "user_id": 9213402, "user_type": "registered", "profile_image": "https://graph.facebook.com/2204364039589930/picture?type=large", "display_name": "Floyd Everest", "link": "https://stackoverflow.com/users/9213402/floyd-everest"}, "edited": false, "score": 0, "creation_date": 1530390282, "post_id": 51118164, "comment_id": 89222498, "body": "Well you just killed two birds with one stone there! This definitely fixes the program, but I still have a while to go before I fully understand the type systems in Haskell. While you&#39;re here, could you explain to me what the <code>{-# LANGUAGE ScopedTypeVariables #-}</code> line actually does in general? Also, what else can we write in place of &#39;ScopedTypeVariables&#39; and what do they do?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "reply_to_user": {"reputation": 167, "user_id": 9213402, "user_type": "registered", "profile_image": "https://graph.facebook.com/2204364039589930/picture?type=large", "display_name": "Floyd Everest", "link": "https://stackoverflow.com/users/9213402/floyd-everest"}, "edited": false, "score": 1, "creation_date": 1530390938, "post_id": 51118164, "comment_id": 89222628, "body": "@FloydEverest I added some links."}, {"owner": {"reputation": 167, "user_id": 9213402, "user_type": "registered", "profile_image": "https://graph.facebook.com/2204364039589930/picture?type=large", "display_name": "Floyd Everest", "link": "https://stackoverflow.com/users/9213402/floyd-everest"}, "edited": false, "score": 0, "creation_date": 1530391452, "post_id": 51118164, "comment_id": 89222746, "body": "Thank you so much! I&#39;ll have to remember to upvote everything the day I get 15 points - I&#39;m new here from math.Stackexchange. Again, thank you so much for your guidance!"}], "tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 5, "last_activity_date": 1530390843, "last_edit_date": 1530390843, "creation_date": 1530389623, "answer_id": 51118164, "question_id": 51117947, "link": "https://stackoverflow.com/questions/51117947/learning-haskell-and-found-an-error-in-some-sample-code/51118164#51118164", "title": "Learning Haskell and found an error in some sample code", "body": "<p>It looks like you're missing two pieces from the linked code:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n</code></pre>\n\n<p>at the top and</p>\n\n<pre><code>evalFourier\n  :: forall a . RealFloat a\n  =&gt; [Complex a] -- ^ polynomial coefficients, starting from a_0\n  -&gt; [U] -- ^ points at which to evaluate the polynomial\n  -&gt; Writer (Sum Int) [Complex a]\n</code></pre>\n\n<p>as the type signature for <code>evalFourier</code>.</p>\n\n<p>Without <code>ScopedTypeVariables</code>, the two <code>a</code> type variables (in the type of <code>evalFourier</code> and the nested <code>eval1 :: U -&gt; Writer (Sum Int) (Complex a)</code>) are independent. In particular, the type of <code>eval1</code> specifies a fully general result type, which is not matched by the function body.</p>\n\n<p>With <code>ScopedTypeVariables</code>, the inner <code>a</code> in the type of <code>eval1</code> refers to the outer <code>a</code> defined by <code>forall a. ...</code>.</p>\n\n<p>The <code>{-# LANGUAGE ... #-}</code> construct is a <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pragmas\" rel=\"nofollow noreferrer\">pragma</a> (a compiler directive).</p>\n\n<p>The <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#language-pragma\" rel=\"nofollow noreferrer\"><code>LANGUAGE</code> pragma</a> enables language extensions.</p>\n\n<p>See <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/Cabal-2.2.0.1/Language-Haskell-Extension.html#t:KnownExtension\" rel=\"nofollow noreferrer\"><code>Language.Haskell.Extension</code></a> for a list of language extensions understood by GHC, and in particular <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#ghc-flag--XScopedTypeVariables\" rel=\"nofollow noreferrer\"><code>-XScopedTypeVariables</code></a> for <code>ScopedTypeVariables</code>.</p>\n"}], "owner": {"reputation": 167, "user_id": 9213402, "user_type": "registered", "profile_image": "https://graph.facebook.com/2204364039589930/picture?type=large", "display_name": "Floyd Everest", "link": "https://stackoverflow.com/users/9213402/floyd-everest"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 158, "favorite_count": 0, "accepted_answer_id": 51118164, "answer_count": 1, "score": 2, "last_activity_date": 1530390843, "creation_date": 1530387340, "question_id": 51117947, "link": "https://stackoverflow.com/questions/51117947/learning-haskell-and-found-an-error-in-some-sample-code", "title": "Learning Haskell and found an error in some sample code", "body": "<p>When I learn a new language, the first thing I do is to read through a Fast Fourier Transform implementation and try to get it to work. It's an algorithm that I'm fairly familiar with - so it helps me to understand how the language works.</p>\n\n<p>Currently, I'm reading through <a href=\"https://ro-che.info/articles/2015-12-04-fft\" rel=\"nofollow noreferrer\">this</a> implementation by Roman Cheplyaka. I have followed the algorithm very closely now and everything seems to work as intended, but the following piece of code throws a bunch of errors for me: (specifically, the <code>squareMap</code> part throws the error)</p>\n\n<pre><code>evalFourier coeffs pts = do\n  let\n    squares = nub $ u_sqr &lt;$&gt; pts -- values of x^2\n    (even_coeffs, odd_coeffs) = split coeffs\n  even_values &lt;- evalFourier even_coeffs squares\n  odd_values &lt;- evalFourier odd_coeffs squares\n\n  let\n    -- a mapping from x^2 to (A_e(x^2), A_o(x^2))\n    square_map =\n      Map.fromList\n      . zip squares\n      $ zip even_values odd_values\n\n    -- evaluate the polynomial at a single point\n    eval1 :: U -&gt; Writer (Sum Int) (Complex a)\n    eval1 x = do\n      let (ye,yo) = (square_map Map.! u_sqr x)\n          r = ye + toComplex x * yo\n      tell $ Sum 2 -- this took two arithmetic operations\n      return r\n\n  mapM eval1 pts\n</code></pre>\n\n<p>Note that <code>Map</code> is short for <code>Data.Map</code> and here are some non-standard library functions that were defined in the implementation:</p>\n\n<pre><code>-- | U q corresponds to the complex number exp(2 i pi q)\nnewtype U = U Rational\n  deriving (Show, Eq, Ord)\n\n-- | Convert a U number to the equivalent complex number\ntoComplex :: Floating a =&gt; U -&gt; Complex a\ntoComplex (U q) = mkPolar 1 (2 * pi * realToFrac q)\n\n-- | Smart constructor for U numbers; automatically performs normalization\nmkU :: Rational -&gt; U\nmkU q = U (q - realToFrac (floor q))\n\n-- | Raise a U number to a power\nuPow :: U -&gt; Integer -&gt; U\nuPow (U q) p = mkU (fromIntegral p*q)\n\n-- | Square a U number\nuSqr :: U -&gt; U\nuSqr x = uPow x 2\n</code></pre>\n\n<p>Here is the error that shows after I run <code>stack build</code>:</p>\n\n<pre><code>src\\FFT.hs:43:13: error:\n    * Couldn't match type `a' with `a1'\n      `a' is a rigid type variable bound by\n        the type signature for:\n          evalFourier :: forall a.\n                         RealFloat a =&gt;\n                         [Complex a] -&gt; [U] -&gt; Writer (Sum Int) [Complex a]\n        at src\\FFT.hs:(19,1)-(22,35)\n      `a1' is a rigid type variable bound by\n        the type signature for:\n          eval1 :: forall a1. U -&gt; Writer (Sum Int) (Complex a1)\n        at src\\FFT.hs:38:9-50\n      Expected type: WriterT\n                       (Sum Int) Data.Functor.Identity.Identity (Complex a1)\n        Actual type: WriterT\n                       (Sum Int) Data.Functor.Identity.Identity (Complex a)\n    * In a stmt of a 'do' block: return r\n      In the expression:\n        do let (ye, yo) = (squareMap Map.! uSqr x)\n               r = ye + toComplex x * yo\n           tell $ Sum 2\n           return r\n      In an equation for `eval1':\n          eval1 x\n            = do let (ye, yo) = ...\n                     ....\n                 tell $ Sum 2\n                 return r\n    * Relevant bindings include\n        r :: Complex a (bound at src\\FFT.hs:41:17)\n        ye :: Complex a (bound at src\\FFT.hs:40:18)\n        yo :: Complex a (bound at src\\FFT.hs:40:21)\n        eval1 :: U -&gt; Writer (Sum Int) (Complex a1)\n          (bound at src\\FFT.hs:39:9)\n        squareMap :: Map.Map U (Complex a, Complex a)\n          (bound at src\\FFT.hs:33:9)\n        oddValues :: [Complex a] (bound at src\\FFT.hs:30:5)\n        (Some bindings suppressed; use -fmax-relevant-binds=N or -fno-max-relevant-binds)\n   |\n43 |             return r\n   |             ^^^^^^^^\n\n\n--  While building custom Setup.hs for package FastFourier-0.1.0.0 using:\n      C:\\sr\\setup-exe-cache\\x86_64-windows\\Cabal-simple_Z6RU0evB_2.0.1.0_ghc-8.2.2.exe --builddir=.stack-work\\dist\\5c8418a7 build lib:FastFourier exe:FastFourier-exe --ghc-options \" -ddump-hi -ddump-to-file -fdiagnostics-color=always\"\n    Process exited with code: ExitFailure 1\n</code></pre>\n\n<p>Can anyone please point out what is causing the error I'm seeing here? I have a feeling this error has something to do with the line <code>let (ye,yo) = (square_map Map.! u_sqr x)</code>. Thanks.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1530362262, "post_id": 51114933, "comment_id": 89216213, "body": "Why don&#39;t you have just a single expression type? <code>data Expr = Literal Integer | Variable Char | Add Expr Expr | Mul Expr Expr | ...</code>"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1530362965, "post_id": 51114933, "comment_id": 89216352, "body": "How can your parser possibly produce a value of this type? Do you plan to have a different parse function for every supported structure of expression (meaning you don&#39;t support arbitrary nesting)? Or do you want it to be polymorphic and then you supply the structure as a type argument? But then that would still require you to know the structure of the expression before parsing the string."}, {"owner": {"reputation": 1122, "user_id": 892584, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4403f52eda5458b0ce029c80a379a09d?s=128&d=identicon&r=PG", "display_name": "Chase Walden", "link": "https://stackoverflow.com/users/892584/chase-walden"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1530364616, "post_id": 51114933, "comment_id": 89216734, "body": "@melpomene, because you cannot have a Literal with different inner types, as stated in my original post. If I were to use that structure, I would be using the exact structure laid out in numerous AST tutorials online that I said I read and chose not to use"}, {"owner": {"reputation": 1122, "user_id": 892584, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4403f52eda5458b0ce029c80a379a09d?s=128&d=identicon&r=PG", "display_name": "Chase Walden", "link": "https://stackoverflow.com/users/892584/chase-walden"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1530364869, "post_id": 51114933, "comment_id": 89216791, "body": "@sepp2k. The aim is to have each binary expression to have a left and right type. If there was an Add nested in an Add, for example, I would need something in place to say &quot;an <code>Add Integer Double</code> is reduce-able to a <code>Double</code>. So at any point in time, there are only two types on each side. Something like <code>Add (Add Int Variable) Double</code> only has to keep track of two inner types at each level"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 2, "creation_date": 1530367395, "post_id": 51114933, "comment_id": 89217389, "body": "@ChaseWalden I&#39;m asking what you want the type of <code>parse someString</code> should be. The way I&#39;ve understood you so far, you&#39;d want the expression <code>2 * (3 + 4.0)</code> to be represented as a <code>BinaryExpression UnaryExpression Integer (BinaryExpression UnaryExpression Integer UnaryExpression) Double</code> and <code>42</code> as <code>UnaryExpression Integer</code>. But you&#39;ve also said that you have a parser, so you&#39;re not just writing down ASTs manually in code - you&#39;re converting arbitrary strings to ASTs. So you have a <code>parse</code> function of type <code>String -&gt; ?</code> and I&#39;m asking what goes in the place of <code>?</code>."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1530368046, "post_id": 51114933, "comment_id": 89217568, "body": "Sure you can have different literal types: <code>... LitInt Integer | LitDouble Double | ...</code>."}, {"owner": {"reputation": 1122, "user_id": 892584, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4403f52eda5458b0ce029c80a379a09d?s=128&d=identicon&r=PG", "display_name": "Chase Walden", "link": "https://stackoverflow.com/users/892584/chase-walden"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1530386687, "post_id": 51114933, "comment_id": 89221765, "body": "@sepp2k my parser is being ported currently. I previously had all literal as Double, but since I keep changing the structure of my AST, I need to keep changing my parser every time I change the datatypes. Therefore, currently, I am writing the AST manually for testing in the GHCI"}, {"owner": {"reputation": 1122, "user_id": 892584, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4403f52eda5458b0ce029c80a379a09d?s=128&d=identicon&r=PG", "display_name": "Chase Walden", "link": "https://stackoverflow.com/users/892584/chase-walden"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1530386757, "post_id": 51114933, "comment_id": 89221781, "body": "@melpomene, yes but that also means that I need a different literal for every type I support rather than being able to extend the parser using typeclasses. Maybe this is not possible since I am recently moving from OOP to functional-like languages"}], "answers": [{"comments": [{"owner": {"reputation": 1122, "user_id": 892584, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4403f52eda5458b0ce029c80a379a09d?s=128&d=identicon&r=PG", "display_name": "Chase Walden", "link": "https://stackoverflow.com/users/892584/chase-walden"}, "edited": false, "score": 0, "creation_date": 1530387835, "post_id": 51116357, "comment_id": 89222024, "body": "This is interesting, I will give this a try and see how it ends up"}, {"owner": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "edited": false, "score": 0, "creation_date": 1588926183, "post_id": 51116357, "comment_id": 109093201, "body": "Hey, thanks so much for this, I ran into the same problem and was prepared to write some weird stuff to make it work :)"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1530373841, "creation_date": 1530373841, "answer_id": 51116357, "question_id": 51114933, "link": "https://stackoverflow.com/questions/51114933/mathmatic-ast-in-haskell/51116357#51116357", "title": "Mathmatic AST in Haskell", "body": "<p>So I think what you actually want is something like this:</p>\n\n<ul>\n<li><code>AST o</code> should be a mathematical expression representing a value of numerical type <code>o</code>.</li>\n<li>This can be either a literal of type <code>o</code>, or a binary expression containing expressions that represent <em>more specialised</em> number types than <code>o</code> (e.g. <code>Int</code> being more specialised than <code>Double</code>).</li>\n</ul>\n\n<p>First, always keep it simple and <em>avoid duplication</em>, so we should only have one constructor in <code>AST</code> for all binary operators. For distinguishing between different operators, make a separate variant type:</p>\n\n<pre><code>data NumOperator = Addition | Multiplication | Exponentiation\n</code></pre>\n\n<p>Then, you need to have some way what you mean by \u201cmore specialised number type\u201d. Haskell has a bunch of numerical classes, but no standard notion of which types are more general than which others. One library for that implements this is <a href=\"http://hackage.haskell.org/package/convertible-1.1.1.0/docs/Data-Convertible-Base.html#v:convert\" rel=\"nofollow noreferrer\">convertible</a>, but it's a bit too liberal \u201cconvert anything into anything else regardless of whether it's semantically clear how\u201d. Here a simple version:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses #-}\n\nclass ConvertNum a b where\n  convertNum :: a -&gt; b\n\ninstance ConvertNum Int Int where convertNum = id\ninstance ConvertNum Double Double where convertNum = id\n...\ninstance ConvertNum Int Double where convertNum = fromIntegral\n...\n</code></pre>\n\n<p>Then, you need a way to store different types in the binary-operator constructor. This is <em>existential quantification</em>, best expressed with a GADT:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\ndata AST o where\n  Literal :: o -&gt; AST o\n  Variable :: String -&gt; AST o\n  BinaryExpression :: (ConvertNum ol o, ConvertNum or o)\n          =&gt; NumOperator -&gt; AST ol -&gt; AST or -&gt; AST o\n</code></pre>\n"}], "owner": {"reputation": 1122, "user_id": 892584, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4403f52eda5458b0ce029c80a379a09d?s=128&d=identicon&r=PG", "display_name": "Chase Walden", "link": "https://stackoverflow.com/users/892584/chase-walden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 301, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1530373841, "creation_date": 1530361655, "question_id": 51114933, "link": "https://stackoverflow.com/questions/51114933/mathmatic-ast-in-haskell", "title": "Mathmatic AST in Haskell", "body": "<p>I am currently trying to write an AST in Haskell. More specifically, I have a parser that converts text to AST and then I want to be able to simplify an AST into another AST.</p>\n\n<p>For example <code>x + x + x</code> </p>\n\n<p>-> <code>Add (Add (Variable 'x') (Variable 'x')) (Variable 'x')</code></p>\n\n<p>-> <code>(Mul (Literal 3) (Variable 'x'))</code></p>\n\n<p>-> <code>3x</code></p>\n\n<p>I have found other examples but none that take into account different data types. I want to use this approach to allow simplification rules depending on what the inner type of the left and right side of a binary expression is. </p>\n\n<p>Here is roughly what I have so far for my datatypes:</p>\n\n<pre><code>data UnaryExpression o = Literal o\n                       | Variable Char\n\ndata BinaryExpression l lo r ro = Add (l lo) (r ro)\n                                | Mul (l lo) (r ro)\n                                | Exp (l lo) (r ro)\n                                -- etc...\n</code></pre>\n\n<p>I think I have 2 problems:\nFirst, I need to have the correct data structure, and being new to Haskell, I am not sure what is the correct approach.\nSecond, I need to have my simplify function that is aware of the left and right datatypes. I feel like there should be a way to do this, but I am not sure.</p>\n"}, {"tags": ["multithreading", "sockets", "haskell", "concurrency"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1530385284, "post_id": 51113460, "comment_id": 89221479, "body": "It sounds like STM would make the implementation much easier. See this answer for dealing with timeouts <a href=\"https://stackoverflow.com/questions/22171895/using-tchan-with-timeout\" title=\"using tchan with timeout\">stackoverflow.com/questions/22171895/using-tchan-with-timeou&zwnj;&#8203;t</a>"}], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 1, "last_activity_date": 1530369568, "creation_date": 1530369568, "answer_id": 51115885, "question_id": 51113460, "link": "https://stackoverflow.com/questions/51113460/how-do-you-subscribe-to-state-changes-across-threads/51115885#51115885", "title": "How do you subscribe to state changes across threads?", "body": "<p>I would use a <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Concurrent-Chan.html\" rel=\"nofollow noreferrer\">Chan</a> or <a href=\"https://hackage.haskell.org/package/stm-2.4.5.0/docs/Control-Concurrent-STM-TChan.html\" rel=\"nofollow noreferrer\">TChan</a> to subscribe each thread to the game state.  When the state changes, I would check whether the current player is the same as the thread player.  Then either return to awaiting the next message on the <code>TChan</code> or start the timer for user input.</p>\n"}], "owner": {"reputation": 6426, "user_id": 3946931, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/a45b621c0a6b96ea0996dfd51867c541?s=128&d=identicon&r=PG&f=1", "display_name": "therewillbecode", "link": "https://stackoverflow.com/users/3946931/therewillbecode"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 51115885, "answer_count": 1, "score": 1, "last_activity_date": 1530369568, "creation_date": 1530349534, "question_id": 51113460, "link": "https://stackoverflow.com/questions/51113460/how-do-you-subscribe-to-state-changes-across-threads", "title": "How do you subscribe to state changes across threads?", "body": "<p>How do you conditionally wrap an IO action in a given thread depending on some mutable state stored in an MVar?</p>\n\n<p>My overall aim is to enable timeouts so that in a given game if a player does not send an action to the server within 30 seconds then the socket msg callback will be called with a special Timeout action to denote failure of the player to act.</p>\n\n<p>I am looking for a method to enable each socket thread to subscribe to a change in game state contained in an MVar.</p>\n\n<p>My current draft implementation for creating a Timeout action is as follows:</p>\n\n<pre><code>-- This function processes msgs from authenticated clients\nauthenticatedMsgLoop ::\n     (MsgIn -&gt; ReaderT MsgHandlerConfig (ExceptT Err IO) ())\n  -&gt; MsgHandlerConfig\n  -&gt; IO ()\nauthenticatedMsgLoop msgCallback msgHandlerConfig@MsgHandlerConfig {..}\n = do\n  finally\n       (forever $ do\n          maybeMsg &lt;- timeout 1000000 (WS.receiveData clientConn)\n          let parsedMsg = maybe (Just Timeout) parseMsgFromJSON maybeMsg\n          for_ parsedMsg $ \\parsedMsg -&gt; do\n            result &lt;-\n              runExceptT $ runReaderT (msgCallback parsedMsg) msgHandlerConfig\n            either (\\err -&gt; sendMsg clientConn $ ErrMsg err) return result)\n          return ())\n    (removeClient username serverState)\n</code></pre>\n\n<p>To summarise all msgs which are valid are passed to the msgCallback function. This callback will then update the card game with the new player action and then broadcast the new game state to all clients who are subscribed to the game.</p>\n\n<p>One issue with this is that as soon as a timeout occurs an exception is thrown inside the thread which disconnects the running socket. This is of course undesirable behaviour.</p>\n\n<p>Another issue is that this timeout is implemented after a new msg is received by a client. Instead I would like to the timeout to only be implemented when the game is in a particular state - that is a state in which the player represented by this particular thread is the next player to act.</p>\n\n<p>Therefore the timeout for a player action in a particular game can only be enacted in at most one thread at at the same time. As the card game employs turn based action.</p>\n\n<p>It follows that I need to conditionally wrap the IO action for receiving messages with a timeout depending on the game state which is stored within an MVar.</p>\n"}, {"tags": ["haskell", "monads", "hspec"], "answers": [{"tags": [], "owner": {"reputation": 223, "user_id": 8198583, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/X2yJ0.png?s=128&g=1", "display_name": "ncaq", "link": "https://stackoverflow.com/users/8198583/ncaq"}, "is_accepted": true, "score": 3, "last_activity_date": 1530334667, "creation_date": 1530334667, "answer_id": 51111858, "question_id": 51111566, "link": "https://stackoverflow.com/questions/51111566/hspec-deal-with-two-io-actions-in-haskell/51111858#51111858", "title": "Hspec deal with two IO actions in Haskell", "body": "<p>I do not know <code>FileType</code>, I deal it equals <code>FilePath</code>.</p>\n\n<h1>use do and liftIO</h1>\n\n<pre><code>it \"parse examples 0\" $ do\n  ex0in &lt;- liftIO (tests \"ex0in.txt\")\n  ex0out &lt;- liftIO (tests \"ex0Out.txt\")\n  ex0in `shouldBe` ex0out\n</code></pre>\n\n<h1>use join and liftIO</h1>\n\n<pre><code>it \"parse examples 0\" $ join $ liftM2 shouldBe (liftIO (tests \"ex0in.txt\")) (liftIO (tests \"ex0Out.txt\"))\n</code></pre>\n"}], "owner": {"reputation": 317, "user_id": 7370105, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/28a1d625330e0446be0e39e901f8b5b1?s=128&d=identicon&r=PG&f=1", "display_name": "handora", "link": "https://stackoverflow.com/users/7370105/handora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 279, "favorite_count": 0, "accepted_answer_id": 51111858, "answer_count": 1, "score": 0, "last_activity_date": 1530334667, "creation_date": 1530330555, "question_id": 51111566, "link": "https://stackoverflow.com/questions/51111566/hspec-deal-with-two-io-actions-in-haskell", "title": "Hspec deal with two IO actions in Haskell", "body": "<p>My question is whether there are ways to test two <code>IO actions</code> in HSpec of Haskell?</p>\n\n<p>Just something like the below example: (The below is wrong because of type)</p>\n\n<pre><code>  it \"parse examples 0\" $ liftM2 shouldBe (tests \"ex0in.txt\") (tests \"ex0Out.txt\")\n\n  tests :: FileType -&gt; IO (Either String String)\n</code></pre>\n"}, {"tags": ["haskell", "lazy-evaluation"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1530295705, "post_id": 51107200, "comment_id": 89201508, "body": "What are <code>convertByteStringToB</code> and <code>reductBsToC</code>? The reason is probably in there."}, {"owner": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 0, "creation_date": 1530304737, "post_id": 51107200, "comment_id": 89205270, "body": "Thanks for including a Minimal Example! Can you also rewrite it to be Complete and Verifiable? See <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 0, "creation_date": 1530301422, "post_id": 51108328, "comment_id": 89203944, "body": "It\u2019s actually combining data into nodes in the graph. In the end there\u2019s only 7 nodes in the Gr graph, so I don\u2019t think that\u2019s the source. Nodes are never deleted so the graph has a maximum size of 7 nodes."}, {"owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 0, "creation_date": 1530304654, "post_id": 51108328, "comment_id": 89205243, "body": "After more toying around. It looks like Graph is certainly a factor here. But it&#39;s not the size of the graph that&#39;s the problem. Something else in the implementation is preventing the list items from getting freed. I&#39;ll update when I have more."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "reply_to_user": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 2, "creation_date": 1530314412, "post_id": 51108328, "comment_id": 89207919, "body": "@MikeLui Are we sure the graph isn&#39;t collecting thunks? You&#39;re using <code>foldl&#39;</code>, which makes the graph strict, but it doesn&#39;t necessarily make the data <i>inside</i> the graph strict. It just ensures evaluation to weak-head normal form."}, {"owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "reply_to_user": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1530316580, "post_id": 51108328, "comment_id": 89208284, "body": "@DarthFennec That&#39;s definitely what it is. I threw in a bunch of bang patterns and saw resident memory drop from 4GB to 10MB. Going to narrow it down and update."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 1, "last_activity_date": 1530300848, "creation_date": 1530300848, "answer_id": 51108328, "question_id": 51107200, "link": "https://stackoverflow.com/questions/51107200/laziness-in-folding-the-result-of-a-map-operation/51108328#51108328", "title": "Laziness in folding the result of a map operation", "body": "<p><code>reduceBsToC</code> is producing a <code>Gr</code> graph. It is represented as a <code>Map</code>, which is not a lazy or streaming structure (it's a tree). Thus the fold is accumulating a graph possibly as large as the original list.</p>\n"}, {"tags": [], "owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "is_accepted": false, "score": 1, "last_activity_date": 1530377188, "last_edit_date": 1530377188, "creation_date": 1530374287, "answer_id": 51116410, "question_id": 51107200, "link": "https://stackoverflow.com/questions/51107200/laziness-in-folding-the-result-of-a-map-operation/51116410#51116410", "title": "Laziness in folding the result of a map operation", "body": "<p>Barring adding a complete and verifiable example, I was able to hunt down the issue.</p>\n\n<p>My Megaparsec computations were getting lazily evaluated at the very end during the final <code>print</code>, meaning the entire file was read in to generate the parse computations, but not executing right away.</p>\n\n<p>I added <a href=\"https://wiki.haskell.org/Performance/Data_types#Strict_fields\" rel=\"nofollow noreferrer\">strict fields</a> to the data constructors getting <code>return</code>ed in my parsers. E.g.:</p>\n\n<pre><code>data MyParsedData = MyParsedData { value1 :: !Int, value2 :: !Int }\n</code></pre>\n\n<p>This forces the following to parse immediately upon building the MyParsedData, instead of the parsing getting deferred.</p>\n\n<pre><code>myParse = do\n    val1 &lt;- parseVal1\n    val2 &lt;- parseVal2\n    return $ MyParsedData val1 val2\n</code></pre>\n\n<p>Additionally, I tried forgoing the strict fields, and instead used \n<a href=\"https://downloads.haskell.org/~ghc/7.8.4/docs/html/users_guide/bang-patterns.html\" rel=\"nofollow noreferrer\">BangPatterns</a>, which also corrected the problem. This involved adding the BangPatterns pragma, and using them when pattern matching my data later on in the foldl' accumulating function (referencing the original question):</p>\n\n<pre><code>tryAddtoGr gr (MyParsedData !val1 !val2) = ...\n</code></pre>\n\n<p>This forces execution of parse during the fold.</p>\n\n<p><strong>Clarification</strong>: MyParsedData is built just before it gets pattern matched, when it is used in the fold.</p>\n"}], "owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "accepted_answer_id": 51108328, "answer_count": 2, "score": 0, "last_activity_date": 1530377188, "creation_date": 1530295376, "last_edit_date": 1530299963, "question_id": 51107200, "link": "https://stackoverflow.com/questions/51107200/laziness-in-folding-the-result-of-a-map-operation", "title": "Laziness in folding the result of a map operation", "body": "<p><strong>Why is this function causing high memory usage, and are there any suggestions to reduce memory usage?</strong></p>\n\n<p><strong>EDIT</strong>: A more minimal example</p>\n\n<p>Example (1) GC sees that each element is not needed after printed as little memory is used:</p>\n\n<pre><code>printThings = readThing &gt;=&gt; mapM_ (parseThing &gt;&gt;&gt; print)\n</code></pre>\n\n<p>Example (2) Entire list is kept in memory</p>\n\n<pre><code>printThings = readThing &gt;=&gt; map parseThing &gt;&gt;&gt; print\n</code></pre>\n\n<p>Note in my exact question below, I fold over the map result, hoping to only evaluate each element and then have that element freed by GC.</p>\n\n<hr>\n\n<p>I have a program that reads in data, parses it, and reduces it. As a <em>minimal</em> example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>aFoo :: FilePath -&gt; IO ()\naFoo = readFile &gt;=&gt; lines &gt;&gt;&gt; map convertStringToB &gt;&gt;&gt; reduceBsToC &gt;&gt;&gt; print\nreduceBsToC = foldl' bToC base\n</code></pre>\n\n<p>To be more specific, I am reading in a file lazily with:</p>\n\n<pre><code>import Data.ByteString.Lazy.Char8 as B\nactualFoo = B.readFile &gt;=&gt; B.split '\\n' &gt;&gt;&gt; map convertByteStringToB &gt;&gt;&gt; reduceBsToC &gt;&gt;&gt; print)\n</code></pre>\n\n<p>I'm seeing lots of memory usage for this program (~4GB with my input) for what  appears to be either:</p>\n\n<ul>\n<li>The entire file is being read into memory</li>\n<li>Or more likely, the entire result of <code>map</code> is being stored in memory</li>\n</ul>\n\n<p>I was expecting the [B] created by <code>map convertByteStringStringToB</code> to be read lazily by the fold. If I just print [B] I don't see this behavior, and far less memory gets used (~10MB):</p>\n\n<pre><code>readFoo :: FilePath -&gt; IO [ByteString]\nreadFoo = B.readFile &gt;=&gt; B.split '\\n' &gt;&gt;&gt; return\nprintFoo :: FilePath -&gt; IO ()\nprintFoo = readFoo &gt;=&gt; mapM_ (convertByteStringToB &gt;&gt;&gt; print)\n-- Lazily reading in file and converting each 'line'\n</code></pre>\n\n<p>I know the implementation of <code>foldl'</code> is:</p>\n\n<pre><code>foldl' f z []     = z\nfoldl' f z (x:xs) = let z' = z `f` x \n                    in seq z' $ foldl' f z' xs\n</code></pre>\n\n<p>I assumed that <code>(x:xs)</code> uses a thunk to represent <code>xs</code>, otherwise the entire result of the <code>map</code> operation would be in memory.</p>\n\n<hr>\n\n<p><strong>EDIT</strong></p>\n\n<p><code>convertByteStringToC</code> and <code>reduceBsToC</code> were requested for clarification:</p>\n\n<p><code>convertByteStringToC</code> is a <a href=\"https://hackage.haskell.org/package/megaparsec-6.5.0\" rel=\"nofollow noreferrer\">Megaparsec</a> function which is too long for this format.</p>\n\n<p><code>reduceBsToC</code> uses <a href=\"http://hackage.haskell.org/package/fgl-5.6.0.0\" rel=\"nofollow noreferrer\">fgl</a>. (simplified):</p>\n\n<pre><code>type MyGraph = Gr UNode UEdge\nreduceBsToC :: MyGraph -&gt; B -&gt; MyGraph\nreduceBsToC gr End = gr\nreduceBsToC gr b = maybe makeDefault setGraph (tryAddToGr gr b)\n</code></pre>\n"}, {"tags": ["haskell", "count", "functional-programming", "tree", "nodes"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 4, "creation_date": 1530294544, "post_id": 51106864, "comment_id": 89201063, "body": "Should <code>numNodes</code> take a list of nodes or a single node? What does the compiler error message say?"}, {"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1530299421, "post_id": 51106864, "comment_id": 89203086, "body": "hi, numNodes should take a tree like &quot;tree1&quot;"}, {"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1530299600, "post_id": 51106864, "comment_id": 89203166, "body": "@Bergi I added de compiler output to the question"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 4, "creation_date": 1530299718, "post_id": 51106864, "comment_id": 89203220, "body": "<code>b</code> is not a tree."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1530300287, "post_id": 51106864, "comment_id": 89203443, "body": "Your actual code includes a type signature, isn&#39;t it? Do include it too here."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 3, "last_activity_date": 1530302098, "creation_date": 1530302098, "answer_id": 51108582, "question_id": 51106864, "link": "https://stackoverflow.com/questions/51106864/haskell-count-nodes-of-a-tree/51108582#51108582", "title": "Haskell: Count Nodes of a Tree", "body": "<p>First, you can't represent an empty tree with your data type; you can only represent a tree with a single node with no subtrees.</p>\n\n<pre><code>numNodes (Node a []) = 1\n</code></pre>\n\n<p>Second, each node as 0 or more <em>substrees</em> as children. You need to use <code>map</code> to compute the number of nodes in each subtree, then sum up the counts for each children.</p>\n\n<pre><code>numNodes (Node a b) = 1 + sum (map numNodes b)\n</code></pre>\n\n<p>Because <code>sum [] == 0</code> by definition, you don't actually need the base case, as <code>sum (map numNodes b)</code> will return the correct count whether or not <code>b</code> is non-empty.</p>\n"}], "owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 541, "favorite_count": 0, "accepted_answer_id": 51108582, "answer_count": 1, "score": 0, "last_activity_date": 1530339163, "creation_date": 1530293672, "last_edit_date": 1530339163, "question_id": 51106864, "link": "https://stackoverflow.com/questions/51106864/haskell-count-nodes-of-a-tree", "title": "Haskell: Count Nodes of a Tree", "body": "<p>I have a custom Datatype:</p>\n\n<pre><code>data Tree a = Node a [Tree a]\n</code></pre>\n\n<p>an example tree:</p>\n\n<pre><code>tree1 = Node 3 [Node 4 [Node 3 [], Node 2 []], Node 5 []]\n</code></pre>\n\n<p>and I am struggling while trying to create a function to count the Nodes of the tree.</p>\n\n<p>I have a function:</p>\n\n<pre><code>numNodes :: Num p =&gt; Tree a -&gt; p\nnumNodes(Node a []) = 0\nnumNodes(Node a b) = 1 + numNodes b\n</code></pre>\n\n<p>But that is not really working, where am I wrong?</p>\n\n<p>Edit:\nCompiler output:</p>\n\n<pre><code>   \u2022 Couldn't match type \u2018Tree a\u2019 with \u2018[Tree a]\u2019\n      Expected type: [Tree a] -&gt; p\n        Actual type: Tree a -&gt; p\n\n   \u2022 Relevant bindings include\n        numNodes :: [Tree a] -&gt; p (bound at tree.hs:28:1)\n\n\n28 | numNodes(Node a []) = 0\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "is_accepted": false, "score": 0, "last_activity_date": 1530298308, "creation_date": 1530298308, "answer_id": 51107822, "question_id": 51106839, "link": "https://stackoverflow.com/questions/51106839/haskell-couldnt-match-type-io-with-control-monad-logger-loggingt-io/51107822#51107822", "title": "Haskell Couldn&#39;t match type \u2018IO\u2019 with \u2018Control.Monad.Logger.LoggingT IO\u2019", "body": "<p>Looks like something inside the big lambda forces it to be of type <code>IO a</code> instead of the correct <code>LoggerT IO a</code>, which in turn forces result if <code>Db.with...</code> be of <code>IO a</code> type.</p>\n\n<p>It looks like the reason is in the <code>runDb</code> call, it should be wrapped into <code>liftIO</code> like in other places of your code, but I cannot verify it now.</p>\n"}], "owner": {"reputation": 65, "user_id": 2984674, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1365603304eb84adf021706beac5e670?s=128&d=identicon&r=PG&f=1", "display_name": "user2984674", "link": "https://stackoverflow.com/users/2984674/user2984674"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 144, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1530298308, "creation_date": 1530293579, "question_id": 51106839, "link": "https://stackoverflow.com/questions/51106839/haskell-couldnt-match-type-io-with-control-monad-logger-loggingt-io", "title": "Haskell Couldn&#39;t match type \u2018IO\u2019 with \u2018Control.Monad.Logger.LoggingT IO\u2019", "body": "<p>I have a problem with compile haskell program. Code should make simple rest api with persistance. I use postgres as database engine. When I type <code>stack build</code> I gets an error</p>\n\n<pre><code> \u2022 Couldn't match type \u2018IO\u2019 with \u2018Control.Monad.Logger.LoggingT IO\u2019\n      Expected type: Control.Monad.Logger.LoggingT IO ()\n        Actual type: IO ()\n    \u2022 In the second argument of \u2018($)\u2019, namely\n        \u2018Db.withPostgresqlPool connStr 10\n           $ \\ pool\n               -&gt; do runDB pool $ Db.runMigration migrateAll\n                     scotty 5001 $ do ...\u2019\n      In the expression:\n        runStderrLoggingT\n          $ Db.withPostgresqlPool connStr 10\n              $ \\ pool\n                  -&gt; do runDB pool $ Db.runMigration migrateAll\n                        scotty 5001 $ do ...\n      In an equation for \u2018main\u2019:\n          main\n            = runStderrLoggingT\n                $ Db.withPostgresqlPool connStr 10\n                    $ \\ pool\n                        -&gt; do runDB pool $ Db.runMigration migrateAll\n                              ....\n   |\n20 | main = runStderrLoggingT $ Db.withPostgresqlPool connStr 10 $ \\pool -&gt; do\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...\n\n\n--  While building custom Setup.hs for package App-0.1.0.0 using:\n      /home/lukasz/.stack/setup-exe-cache/x86_64-linux/Cabal-simple_mPHDZzAJ_2.0.1.0_ghc-8.2.2 --builddir=.stack-work/dist/x86_64-linux/Cabal-2.0.1.0 build exe:App --ghc-options \" -ddump-hi -ddump-to-file -fdiagnostics-color=always\"\n    Process exited with code: ExitFailure 1\n</code></pre>\n\n<p>I don't known why.</p>\n\n<p>My code:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings   #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n\nmodule Main where\n\nimport           Control.Monad.IO.Class               (liftIO)\n\nimport           Network.HTTP.Types\nimport           Network.Wai.Middleware.RequestLogger\nimport           Network.Wai.Middleware.Static\nimport           Web.Scotty\nimport           Control.Monad.Logger    (runStderrLoggingT)\n\nimport qualified Database.Persist.Postgresql          as Db\n\nimport           Models\nimport           ModelsJson\n\nmain :: IO()\nmain = runStderrLoggingT $ Db.withPostgresqlPool connStr 10 $ \\pool -&gt; do\n\n  -- Migrate database\n  runDB pool $ Db.runMigration migrateAll\n\n  -- Start server\n  scotty 5001 $ do\n\n    middleware logStdoutDev\n\n    -- * Static content middleware\n    --middleware $ staticPolicy (noDots &gt;-&gt; addBase \"public\")\n\n    get \"/\" $\n      html $ \"&lt;h1&gt;Backend API server (haskell Scotty)&lt;/h1&gt;\"\n\n    -- * CRUD\n\n    get \"/api/users\" $ do\n      (users :: [Db.Entity User]) &lt;-\n        liftIO $ runDB pool $ Db.selectList [] []\n      json users\n\n    post \"/api/users\" $ do\n      (user :: User) &lt;- jsonData\n      uid &lt;- liftIO $ runDB pool $ Db.insert user\n      json $ Db.Entity uid user\n\n\nconnStr :: Db.ConnectionString\nconnStr =  \"host=localhost dbname=road_free_development user=cidevant password='' port=5432\"\n\nrunDB :: Db.ConnectionPool -&gt;  Db.SqlPersistM a -&gt; IO a\nrunDB = flip Db.runSqlPersistMPool\n</code></pre>\n\n<p>I get this code from this source <a href=\"https://gist.github.com/konstantinwebarchitect/11231173\" rel=\"nofollow noreferrer\">https://gist.github.com/konstantinwebarchitect/11231173</a></p>\n\n<p>Can anyone help me? I'm new in haskell. </p>\n"}, {"tags": ["json", "haskell", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "is_accepted": false, "score": 2, "last_activity_date": 1530293630, "creation_date": 1530293630, "answer_id": 51106856, "question_id": 51106651, "link": "https://stackoverflow.com/questions/51106651/couldnt-match-expected-type-fullweather-with-actual-type-m1-fullweather/51106856#51106856", "title": "Couldn&#39;t match expected type FullWeather with actual type m1 FullWeather", "body": "<p>Three problems I can spot:  </p>\n\n<ol>\n<li><p>do-notation is for monadic values and is syntax sugar for applications of <code>(&gt;&gt;=)</code> and <code>(&gt;&gt;)</code>. Don't use do-notation for function that don't return a monadic value (like <code>IO a</code>, <code>[a]</code>, <code>Maybe a</code>...).  Outside of a do-notation the correct syntax is <code>let ... in ...</code>.<br>\nI suggest following a Haskell tutorial like <a href=\"http://learnyouahaskell.com/\" rel=\"nofollow noreferrer\">Learn you a Haskell</a>, which will teach you the correct usage of do-notation.</p></li>\n<li><p>The function <code>return</code> has type <code>return :: Monad m =&gt; a -&gt; m a</code>.<br>\n<strong><code>return</code> is not a keyword</strong>.</p></li>\n<li><p>If your function returns a <code>FullWeather</code>, it can't return a string too. This is what <code>Either</code> or <code>Maybe</code> are for.<br>\nAnother thing you can do is throw an error.  </p></li>\n</ol>\n\n<p>There are 3 basic solutions we can use for this:  </p>\n\n<ol>\n<li><p>Throw an error in the case of a problem.  </p>\n\n<pre><code>extractValues :: BSL.ByteString -&gt; FullWeather\nextractValues rawJSON =\n    let result  = eitherDecode rawJSON :: Either String FullWeather\n    in case result of\n        Left problem -&gt; error problem\n        Right ok     -&gt; ok\n</code></pre></li>\n<li><p>Return a <code>Maybe FullWeather</code> instead of <code>FullWeather</code>.</p>\n\n<pre><code>extractValues :: BSL.ByteString -&gt; Maybe FullWeather\nextractValues rawJSON =\n    let result  = eitherDecode rawJSON :: Either String FullWeather\n    in case result of\n        Left problem -&gt; Nothing\n        Right ok     -&gt; Just ok\n</code></pre></li>\n<li><p>Return an <code>Either String FullWeather</code> instead of <code>FullWeather</code>.  </p>\n\n<pre><code>extractValues :: BSL.ByteString -&gt; Either String FullWeather\nextractValues = eitherDecode\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 31, "user_id": 8109702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d46bbf7a408772a1409342f01f864d00?s=128&d=identicon&r=PG&f=1", "display_name": "Ashot Bes", "link": "https://stackoverflow.com/users/8109702/ashot-bes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1530293630, "creation_date": 1530292599, "question_id": 51106651, "link": "https://stackoverflow.com/questions/51106651/couldnt-match-expected-type-fullweather-with-actual-type-m1-fullweather", "title": "Couldn&#39;t match expected type FullWeather with actual type m1 FullWeather", "body": "<p>I'm working with json code. And I can not extract from it the value due to an error in the type.And to get this error I'm using a function eitherDecode</p>\n\n<p>Code part:</p>\n\n<pre><code>extractValues :: BSL.ByteString -&gt; FullWeather\nextractValues rawJSON = do\n    let result  = eitherDecode rawJSON :: Either String FullWeather\n    case result of\n        Left problem -&gt; return problem\n        Right ok     -&gt; return ok\n</code></pre>\n\n<p>Eroor:</p>\n\n<pre><code>  Couldn't match expected type \u2018FullWeather\u2019\n       with actual type \u2018m0 String\u2019    \n25        Left problem -&gt; return problem\n\n  Couldn't match expected type \u2018FullWeather\u2019\n       with actual type \u2018m1 FullWeather\u2019\n26        Right ok     -&gt; return ok\n</code></pre>\n"}, {"tags": ["haskell", "nix"], "comments": [{"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 1, "creation_date": 1530297515, "post_id": 51105182, "comment_id": 89202301, "body": "That\u2019s multiple questions. You might attract more answers if you ask one question at a time."}, {"owner": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "reply_to_user": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 0, "creation_date": 1530314280, "post_id": 51105182, "comment_id": 89207888, "body": "@JoachimBreitner Alright next time I&#39;ll try to make it 1 question per thread. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "edited": false, "score": 0, "creation_date": 1530314550, "post_id": 51109194, "comment_id": 89207949, "body": "Didn&#39;t know about that nix pill thingy, will check it for sure, thanks!"}, {"owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "reply_to_user": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "edited": false, "score": 0, "creation_date": 1530440825, "post_id": 51109194, "comment_id": 89229974, "body": "It&#39;s a very well written series of blog posts that serve as an introduction to Nix, Nixpkgs, and NixOS. It has a post about callPackage, <a href=\"https://nixos.org/nixos/nix-pills/callpackage-design-pattern.html\" rel=\"nofollow noreferrer\">nixos.org/nixos/nix-pills/callpackage-design-pattern.html</a> and many other ideas."}], "tags": [], "owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "is_accepted": true, "score": 0, "last_activity_date": 1530305256, "creation_date": 1530305256, "answer_id": 51109194, "question_id": 51105182, "link": "https://stackoverflow.com/questions/51105182/arguments-on-invoking-a-nix-expression/51109194#51109194", "title": "Arguments on invoking a nix expression", "body": "<p>For your question about <code>callPackage</code>, I think Luca Bruno (lethalman) has a <a href=\"https://nixos.org/nixos/nix-pills/callpackage-design-pattern.html\" rel=\"nofollow noreferrer\">great explanation</a> in his Nix Pill series. As to why we know it's there, <code>callPackage</code> is there because someone wrote it that way. Its usage is documented in the <a href=\"https://nixos.org/nixpkgs/manual/index.html#how-to-build-a-stand-alone-project\" rel=\"nofollow noreferrer\">Nixpkgs documentation</a>.</p>\n\n<p>To answer your last question: yes you can replace it with your proposed expression, but you need to make a little change in <a href=\"https://github.com/Gabriel439/haskell-nix/blob/master/project0/default.nix#L1\" rel=\"nofollow noreferrer\">default.nix</a>, because the function needs to ignore all the attributes it doesn't need from <code>haskellPkgs</code>. You can do that by adding <code>...</code> to the argument list like this:</p>\n\n<pre><code>{ mkDerivation, base, stdenv, ... }:\n</code></pre>\n"}], "owner": {"reputation": 405, "user_id": 9348482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67dc5143c1ba85c2f417bf83ede6177f?s=128&d=identicon&r=PG&f=1", "display_name": "autumn322", "link": "https://stackoverflow.com/users/9348482/autumn322"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "closed_date": 1530305353, "accepted_answer_id": 51109194, "answer_count": 1, "score": 1, "last_activity_date": 1530305256, "creation_date": 1530286521, "question_id": 51105182, "link": "https://stackoverflow.com/questions/51105182/arguments-on-invoking-a-nix-expression", "closed_reason": "Needs more focus", "title": "Arguments on invoking a nix expression", "body": "<p>in nix expression for GNU Hello in the manual, which is this one:</p>\n\n<pre><code>{ stdenv, fetchurl, perl }: 1\n\nstdenv.mkDerivation { 2\n  name = \"hello-2.1.1\"; 3\n  builder = ./builder.sh; 4\n  src = fetchurl { 5\n    url = ftp://ftp.nluug.nl/pub/gnu/hello/hello-2.1.1.tar.gz;\n    sha256 = \"1md7jsfd8pa45z73bz1kszpp01yw6x5ljkjk2hx7wl800any6465\";\n  };\n  inherit perl; 6\n}\n</code></pre>\n\n<p>How do you know, that <code>stdenv</code>, <code>fetchurl</code> and <code>perl</code> are in a set that is being passed on as the argument for that nix expression? </p>\n\n<p>Also in this <a href=\"https://github.com/Gabriel439/haskell-nix/blob/master/project0/release0.nix\" rel=\"nofollow noreferrer\">release0.nix</a> from <code>Gabriel439/haskell-nix</code> what does <code>callPackage</code> do? And how does we know that <code>callPackage</code> exist in the <code>haskellPackages</code> attribute path? </p>\n\n<p>Another 1 from the above <code>release0.nix</code>. I'm guessing <code>callPackage</code> works just like <code>import</code> but with the current set also being passed in as the argument, is this true? If so, can I change the expression with this:</p>\n\n<pre><code>let\n  pkgs = import &lt;nixpkgs&gt; {};\n  haskellPkgs = pkgs.haskellPackages;\n  myPackages = import ./default.nix;\nin\n  myPackages haskellPkgs\n</code></pre>\n\n<p>Sorry that's a lot of question!</p>\n"}, {"tags": ["haskell", "haskell-stack", "intero"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530279369, "post_id": 51102833, "comment_id": 89193268, "body": "I had some issues with Emacs and intero in the past due to incompatible versions. Perhaps, check that your emacs intero package is updated."}, {"owner": {"reputation": 317, "user_id": 7370105, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/28a1d625330e0446be0e39e901f8b5b1?s=128&d=identicon&r=PG&f=1", "display_name": "handora", "link": "https://stackoverflow.com/users/7370105/handora"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530280358, "post_id": 51102833, "comment_id": 89193946, "body": "While It&#39;s already the newest version of <code>intero</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1530282285, "post_id": 51102833, "comment_id": 89195059, "body": "To avoid confusion: the <code>intero</code> you install with <code>stack</code> is one thing, the <code>intero</code> emacs package you install under <code>emacs</code> is another."}, {"owner": {"reputation": 437, "user_id": 5775622, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/64YBh.png?s=128&g=1", "display_name": "1234", "link": "https://stackoverflow.com/users/5775622/1234"}, "edited": false, "score": 0, "creation_date": 1575324022, "post_id": 51102833, "comment_id": 104520381, "body": "how do I know my intero from which? stack or emacs package?"}], "owner": {"reputation": 317, "user_id": 7370105, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/28a1d625330e0446be0e39e901f8b5b1?s=128&d=identicon&r=PG&f=1", "display_name": "handora", "link": "https://stackoverflow.com/users/7370105/handora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 169, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1530278729, "creation_date": 1530278729, "question_id": 51102833, "link": "https://stackoverflow.com/questions/51102833/emacs-haskell-intero-problems", "title": "Emacs Haskell Intero problems", "body": "<p>I am writing the Haskell programs with the package <code>readline</code>. When I use the   Intero and cabal file to autoinstall the package, it reports the error and can't recognize the package. while I can install it with <code>stack</code> perfectly. below is part of my cabal file: </p>\n\n<pre><code>library\n  exposed-modules:\n      Lib\n  other-modules:\n      Paths_ch24\n  hs-source-dirs:\n      src\n  build-depends:\n      base &gt;=4.7 &amp;&amp; &lt;5\n    , directory\n    , bytestring\n    , readline\n  default-language: Haskell2010\n</code></pre>\n\n<p>So my question is whether it is a <code>bug</code> of <code>Intero</code> or just something I misoperate?</p>\n"}, {"tags": ["haskell", "typeclass"], "answers": [{"comments": [{"owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "edited": false, "score": 0, "creation_date": 1530281257, "post_id": 51102786, "comment_id": 89194469, "body": "thanks @leftaroundabout, very clear and informative!"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 10, "last_activity_date": 1530279488, "last_edit_date": 1530279488, "creation_date": 1530278580, "answer_id": 51102786, "question_id": 51102411, "link": "https://stackoverflow.com/questions/51102411/using-proxy-in-a-typeclass/51102786#51102786", "title": "Using Proxy in a TypeClass", "body": "<p>First a couple of remarks:</p>\n\n<ol>\n<li><em>Don't define such an instance</em>. This instance would match <em>anything</em> of the form <code>f a</code>, regardless of whether <code>f</code> is actually in the <code>Wrapper</code> class. In particular, it would also conflict with standard instances such as <code>FromJSON (Vector a)</code>, even though <code>Vector</code> <em>can't</em> be a (well-behaved) instance of <code>Wrapper</code>. The reason for this is that Haskell's typeclass system is based on an <em>open-world assumption</em>: the compiler can never assume that a type is not in some class, because anybody could, at least technically speaking, add the instance later.</li>\n<li><p>I would advice against using <code>Proxy</code> in new code. I always considered <code>Proxy</code> an ugly hack, barely less ugly than the <code>undefined :: T</code> arguments that were commonly used for this in old Haskell code. In new GHC, the problem was fixed properly by <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-AllowAmbiguousTypes\" rel=\"noreferrer\"><code>-XAllowAmbiguousTypes</code></a> with <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-TypeApplications\" rel=\"noreferrer\"><code>-XTypeApplications</code></a>; these allow you to simply make the signature</p>\n\n<pre><code>{-# LANGUAGE AllowAmbiguousTypes #-}\nclass Wrapper f where\n  ...\n  name :: String\n</code></pre>\n\n<p>and then instead of <code>name (Proxy :: Proxy (f a))</code> write only <code>name @f</code>.</p></li>\n</ol>\n\n<p>Now to the actual problem: your code doesn't work because type variables in standard Haskell always only belong to a single type signature / class context, but aren't usable in the code that defines it. IOW, type variables don't use the same <em>name scopes</em> as value-variables, that's why when you mention <code>Proxy (f a)</code> the compiler \u201cdisambiguates\u201d the type variables to <code>f0</code> and <code>a0</code>. This is a bit of a silly shortcoming of Haskell98, and is adressed by the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-ScopedTypeVariables\" rel=\"noreferrer\"><code>-XScopedTypeVariables</code></a> extension (together with the <code>\u2200</code> aka <code>forall</code> keyword). The following would compile, by itself:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables, UnicodeSyntax #-}\ninstance \u2200 f a .  (IsString a, FromJSON a, Wrapper f) =&gt; FromJSON (f a) where\n    parseJSON (String s) = wrap &lt;$&gt; pure (fromString $ unpack s)\n    parseJSON invalid    = typeMismatch (name (Proxy :: Proxy (f a))) invalid\n</code></pre>\n\n<p>Just, as I said, such an instance shouldn't be defined. I think what you actually want is something like</p>\n\n<pre><code>{-# LANGUAGE DataKinds, KindSignatures, TypeApplications #-}\n\nimport GHC.TypeLits (Symbol, KnownSymbol, symbolVal)\n\ndata Wrapper (n :: String) (a :: *)\n   = Wrapper a\n   | TypeMismatch String\n\ninstance \u2200 a s . (IsString a, FromJSON a, KnownSymbol s)\n                     =&gt; FromJSON (Wrapper s a) where\n  parseJSON (String s) = Wrapper &lt;$&gt; pure (fromString $ unpack s)\n  parseJSON invalid    = TypeMismatch $ symbolVal @s Proxy\n</code></pre>\n\n<p>No classes needed.</p>\n"}], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 51102786, "answer_count": 1, "score": 2, "last_activity_date": 1530279488, "creation_date": 1530277318, "question_id": 51102411, "link": "https://stackoverflow.com/questions/51102411/using-proxy-in-a-typeclass", "title": "Using Proxy in a TypeClass", "body": "<p>I'm trying to do something similar to <a href=\"https://stackoverflow.com/questions/13629538/a-way-to-declare-a-constant-value-in-a-type-class\">this question</a>.</p>\n\n<p>I'd like to define a typeclass</p>\n\n<pre><code>class Wrapper f where\n    wrap :: a -&gt; f a\n    unwrap :: f a -&gt; a\n    name :: Proxy (f a) -&gt; String\n</code></pre>\n\n<p>and then define</p>\n\n<pre><code>instance (IsString a, FromJSON a, Wrapper f) =&gt; FromJSON (f a) where\n    parseJSON (String s) = wrap &lt;$&gt; pure (fromString $ unpack s)\n    parseJSON invalid    = typeMismatch (name (Proxy :: Proxy (f a))) invalid\n</code></pre>\n\n<p>But I'm getting an error saying that</p>\n\n<pre><code>Could not deduce (Wrapper f0) arising from a use of \u2018name\u2019                                               \n      from the context: (IsString a, FromJSON a, Wrapper f)                                                    \n        bound by the instance declaration at src/Model/Wrapper.hs:29:10-62                                     \n      The type variable \u2018f0\u2019 is ambiguous\n</code></pre>\n\n<p>It's not really clear to me why this doesn't work and if it possible to fix it somehow</p>\n"}, {"tags": ["haskell", "memoization", "fold"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1530275616, "post_id": 51101391, "comment_id": 89190859, "body": "You should be careful with measurements like this. The fact that you added IO between the things you want to measure may well have caused the compiler to emit different code for them. Also note that memoisation is always a bit of a clutch; If you have a need for things like this see if you can&#39;t cache the results &quot;normally&quot; first."}], "answers": [{"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": true, "score": 2, "last_activity_date": 1530418851, "creation_date": 1530418851, "answer_id": 51120376, "question_id": 51101391, "link": "https://stackoverflow.com/questions/51101391/memoization-for-subsequent-fold-calls/51120376#51120376", "title": "Memoization for subsequent fold calls", "body": "<p>Make a data type!</p>\n\n<pre><code>module List (List, _elements, _sum, _length, toList, cons) where\n\ndata List = List\n  { _elements :: [Int]\n  , _sum :: !Int\n  , _length :: !Int\n  }\n\ntoList :: [Int] -&gt; List\ntoList xs = List xs (sum xs) (length xs)\n\ncons :: Int -&gt; List -&gt; List\ncons x (List xs t n) = List (x:xs) (x+t) (1+n)\n</code></pre>\n\n<p>Note that the <code>List</code> type is exported, but the <code>List</code> constructor is not, so that the only way to construct a <code>List</code> is using the <code>toList</code> function (commonly called a \"smart constructor\").</p>\n"}], "owner": {"reputation": 145, "user_id": 5255089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb99414b7f1cbc6d5a1dc99d217c6125?s=128&d=identicon&r=PG", "display_name": "Eryk Ciepiela", "link": "https://stackoverflow.com/users/5255089/eryk-ciepiela"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 51120376, "answer_count": 1, "score": 4, "last_activity_date": 1530418851, "creation_date": 1530274022, "question_id": 51101391, "link": "https://stackoverflow.com/questions/51101391/memoization-for-subsequent-fold-calls", "title": "Memoization for subsequent fold calls", "body": "<p>I'm looking for a technique that allows for memoization between subsequent fold calls against the lists that is being prepended. </p>\n\n<p>I looked at <a href=\"http://hackage.haskell.org/package/memoize\" rel=\"nofollow noreferrer\">memoize library</a> but this doesn't seem to support memoization of higher-order functions, which is the case for folds.</p>\n\n<p>I also tried the technique with lazy evaluated map of results but to no avail.</p>\n\n<p>Here's simple example code:</p>\n\n<pre><code>module Main where\n\nimport Data.Time\n\nprintAndMeasureTime :: Show a =&gt; a -&gt; IO ()\nprintAndMeasureTime a = do\n  startTime &lt;- getCurrentTime\n  print a\n  stopTime &lt;- getCurrentTime\n  putStrLn $ \" in \" ++ show (diffUTCTime stopTime startTime)\n\nmain = do\n  let as = replicate 10000000 1\n  printAndMeasureTime $ foldr (-) 0 as -- just to resolve thunks\n  printAndMeasureTime $ sum as\n  printAndMeasureTime $ sum (1:as) -- recomputed from scratch, could it reuse previous computation result?\n  printAndMeasureTime $ length (as)\n  printAndMeasureTime $ length (1:as) -- recomputed from scratch, could it reuse previous computation result?\n</code></pre>\n\n<p>and the output:</p>\n\n<pre><code>0\n in 1.125098223s\n10000000\n in 0.096558168s\n10000001\n in 0.104047058s\n10000000\n in 0.037727126s\n10000001\n in 0.041266456s\n</code></pre>\n\n<p>Times suggest that folds are computed from scratch. Is there a way to make the subsequent folds reuse previous fold results?</p>\n"}, {"tags": ["haskell", "types", "generic-programming"], "answers": [{"comments": [{"owner": {"reputation": 3082, "user_id": 453856, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/864167d82d60f126e4225e53953461a4?s=128&d=identicon&r=PG", "display_name": "netom", "link": "https://stackoverflow.com/users/453856/netom"}, "edited": false, "score": 0, "creation_date": 1530350456, "post_id": 51100725, "comment_id": 89213520, "body": "This solution would make me to rewrite code that matches patterns on my Value and uses lenses/prisms, and that is about half the lines of code in the main application. Nice trick by the way, thank you for the answer!"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1530271699, "creation_date": 1530271699, "answer_id": 51100725, "question_id": 51100263, "link": "https://stackoverflow.com/questions/51100263/writing-a-hashable-instance-for-a-large-sum-type/51100725#51100725", "title": "Writing a Hashable instance for a large sum type", "body": "<p>I'd prefer to add an orphan instance. Anyway, you can avoid that as follows.</p>\n\n<p>Define this auxiliary type</p>\n\n<pre><code>data ValueNotTime\n= VNull\n| VDouble !Double\n| VSci !Scientific\n| VInt !Int\n| VText !Text\n| VTexts ![Text]\n| VByteString !BS.ByteString\n</code></pre>\n\n<p>and derive Hashable automatically. Then, write an isomorphism</p>\n\n<pre><code>iso :: Value -&gt; Either ValueNotTime UTCTime\nosi :: Either ValueNotTime UTCTime -&gt; Value\n</code></pre>\n\n<p>in the obvious way. Then,</p>\n\n<pre><code>instance Hashable Value where\n    hashWithSalt v = case iso v of\n       Left valueNoTime -&gt; use derived implementation (hashWithSalt valueNoTime)\n       Right utcTime    -&gt; use custom implementation\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3082, "user_id": 453856, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/864167d82d60f126e4225e53953461a4?s=128&d=identicon&r=PG", "display_name": "netom", "link": "https://stackoverflow.com/users/453856/netom"}, "edited": false, "score": 0, "creation_date": 1530350283, "post_id": 51100967, "comment_id": 89213482, "body": "Good one, thanks! I just made a pull request for that issue :)"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 2, "last_activity_date": 1530272591, "creation_date": 1530272591, "answer_id": 51100967, "question_id": 51100263, "link": "https://stackoverflow.com/questions/51100263/writing-a-hashable-instance-for-a-large-sum-type/51100967#51100967", "title": "Writing a Hashable instance for a large sum type", "body": "<p>This seems like a good place to get the orphan instance from: <a href=\"https://hackage.haskell.org/package/hashable-time\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/hashable-time</a></p>\n\n<hr>\n\n<p>If a generic implementation, say <code>genericHashWithSalt</code>, were exported (but it's currently not <a href=\"https://github.com/tibbe/hashable/issues/148\" rel=\"nofollow noreferrer\">https://github.com/tibbe/hashable/issues/148</a>) it would be possible to do</p>\n\n<pre><code>data Value_ utctime\n  = ...\n  | VUTCTime utctime\n  deriving (Generic, Functor)\ntype Value = Value_ UtcTime\n\ninstance Hashable Value where\n  hashWithSalt s (VUTCTime t) = (my custom implementation) s t\n  hashWithSalt s v = genericHashWithSalt s (fmap (\\_ -&gt; ()) v)\n</code></pre>\n\n<p>And if you don't want to mangle your types, it should also be possible to modify the generic representation of <code>Value</code> as another way to hide <code>VUTCTime</code> before calling <code>genericHashWithSalt</code>.</p>\n\n<pre><code> data Value = ...  -- the original one\n\n instance Hashable Value where\n   hashWithSalt s (VUTCTime t) = (my custom implementation) s t\n   hashWithSalt s t = genericHashWithSalt s (genericHideLastConstructor t)\n   -- something like that...\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3082, "user_id": 453856, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/864167d82d60f126e4225e53953461a4?s=128&d=identicon&r=PG", "display_name": "netom", "link": "https://stackoverflow.com/users/453856/netom"}, "edited": false, "score": 0, "creation_date": 1530350153, "post_id": 51101051, "comment_id": 89213462, "body": "Well, this is the most practical advice i.e. the one I&#39;m actually going to use so I&#39;m going to accept this one. Hashable-time does the dirty work for me regarding orphan instances :) Honestly I <i>could</i> make an orphan instance for UTCTime since I&#39;m writing an application for a particular problem, and it&#39;s highly unlikely anyone&#39;s going to use that code for anything else. The newtype solution is also viable, but requires some refactoring (patterns, prisms). Separating orphan instances into standalone packages seems like a good general strategy in such cases too. Thank you for the answer!"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 6, "last_activity_date": 1530272858, "creation_date": 1530272858, "answer_id": 51101051, "question_id": 51100263, "link": "https://stackoverflow.com/questions/51100263/writing-a-hashable-instance-for-a-large-sum-type/51101051#51101051", "title": "Writing a Hashable instance for a large sum type", "body": "<p>For this particular situation, you should just use the <a href=\"http://hackage.haskell.org/package/hashable-time-0.2.0.1/docs/Data-Hashable-Time.html\" rel=\"noreferrer\">hashable-time package</a>, which defines the orphan instance in a standardised place.</p>\n\n<p>In general for this kind of situation, I would either:</p>\n\n<ul>\n<li>Wrap the problematic type in a <code>newtype</code>, so you can define the instance locally without risking orphan-instance trouble.</li>\n<li>Just write the orphan instance. If it's unlikely that somebody else will provide a conflicting instance (i.e. when both class and type belong to obscure packages that are unlikely to be used in conjuction by anybody else), then this isn't something one really needs to worry about (even if duplicate-instance errors will happen at some point, this is very easy to fix and that'll actually be a good thing, removing the redundancy that a <code>newtype</code> would give).</li>\n<li>Add the instance to the library where it originally came from. If <em>either</em> the class or type come from a very common library, then it would probably make sense to define the instance in the less-common library. If that's open source, add the instance there and send the author a pull request.</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 3082, "user_id": 453856, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/864167d82d60f126e4225e53953461a4?s=128&d=identicon&r=PG", "display_name": "netom", "link": "https://stackoverflow.com/users/453856/netom"}, "edited": false, "score": 0, "creation_date": 1530350560, "post_id": 51106676, "comment_id": 89213538, "body": "That&#39;s an interesting trick, thank you. :) Unfortunately this would require to do even more refactor than just writing hashWithSalt cases for all my Value constructors."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 2, "last_activity_date": 1530293909, "last_edit_date": 1530293909, "creation_date": 1530292698, "answer_id": 51106676, "question_id": 51100263, "link": "https://stackoverflow.com/questions/51100263/writing-a-hashable-instance-for-a-large-sum-type/51106676#51106676", "title": "Writing a Hashable instance for a large sum type", "body": "<p>You can make a type with a \"hole\", and fill in the hole in <code>hashWithSalt</code>. So:</p>\n\n<pre><code>{-# LANGUAGE DeriveFunctor, DeriveGeneric, DeriveAnyClass #-}\nimport Data.Hashable\nimport Data.Text (Text)\nimport Data.Time\nimport GHC.Generics\nimport qualified Data.ByteString as BS\ndata ValueF a\n    = VNull\n    | VDouble !Double\n    | VInt !Int\n    | VText !Text\n    | VTexts ![Text]\n    | VByteString !BS.ByteString\n    | VUTCTime !a\n    deriving (Hashable, Functor, Generic)\n\nnewtype Value = Value (ValueF UTCTime)\n\ninstance Hashable Value where\n    hashWithSalt s (Value (VUTCTime t)) = {- whatever you're going to do here -}\n    hashWithSalt s (Value v) = hashWithSalt s (() &lt;$ v)\n    -- OR\n    -- hashWithSalt s (Value v) = hashWithSalt s (unsafeCoerce v :: Value ())\n</code></pre>\n"}], "owner": {"reputation": 3082, "user_id": 453856, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/864167d82d60f126e4225e53953461a4?s=128&d=identicon&r=PG", "display_name": "netom", "link": "https://stackoverflow.com/users/453856/netom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "accepted_answer_id": 51101051, "answer_count": 4, "score": 1, "last_activity_date": 1530293909, "creation_date": 1530270166, "question_id": 51100263, "link": "https://stackoverflow.com/questions/51100263/writing-a-hashable-instance-for-a-large-sum-type", "title": "Writing a Hashable instance for a large sum type", "body": "<p>I have a large sum type</p>\n\n<pre><code>data Value\n= VNull\n| VDouble !Double\n| VSci !Scientific\n| VInt !Int\n| VText !Text\n| VTexts ![Text]\n| VByteString !BS.ByteString\n| VUTCTime !UTCTime\n-- This goes on for quite a few more lines\n</code></pre>\n\n<p>I need a Hashable instance for this datatype. I could of course just type the instance by hand, but fortunately there is a default implementation for hashWithSalt based on generics.</p>\n\n<p>Unfortunately - as far as I understand - this requires any type that can be \"packed\" inside the Value type to have a Hashable instance. Well, UTCTime does not have one.</p>\n\n<p>So it looks like I can choose between two \"suboptimal\" solutions:</p>\n\n<ol>\n<li>Type the Hashable instance by hand.</li>\n<li>Write an orphan instance of Hashable UTCTime</li>\n</ol>\n\n<p>I think there <em>should</em> be a third, \"optimal\" way: to only write an implementation for value constructors where there are not possible to do it automatically, i.e do something like this:</p>\n\n<pre><code>instance Hashable Value where\n    hashWithSalt (VUTCTime t) = ... -- custom implementation\n    hashWithSalt _ = ... -- use the default implementation\n</code></pre>\n\n<p>The question of course could be asked more generally: how can I re-use existing instance implementation in case of certain value constructors while having my own implementation in specific cases <em>without having to write boilerplate for each of the value constructors</em>.</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 1, "creation_date": 1530264559, "post_id": 51098495, "comment_id": 89184556, "body": "You have to instruct GHC how to render your type, yes. If you use <code>deriving Show</code> you do not need to provide an instance of <code>Show</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530271927, "post_id": 51098495, "comment_id": 89188704, "body": "If you add <code>deriving Show</code> the compiler writes the instance for you. Unless you want it to be different from the compiler&#39;s default, there&#39;s no need to write it on your own."}], "answers": [{"comments": [{"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 1, "creation_date": 1530265728, "post_id": 51098682, "comment_id": 89185221, "body": "You can not magically derive <code>Show</code> for any polymorphic data type. The polymorphic types must also have instances of <code>Show</code>."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 1, "creation_date": 1530266036, "post_id": 51098682, "comment_id": 89185402, "body": "@RobertK Quote: &quot;And the compiler will automatically add the necessary constraints.&quot; I&#39;m fully aware the <code>a</code> in <code>Maybe a</code> must also be an instance of <code>Show</code>."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 1, "creation_date": 1530270510, "post_id": 51098682, "comment_id": 89187902, "body": "The compiler will not automatically add an instance of <code>Show</code> for <code>a</code>. This is where i claim you are wrong."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1530271506, "post_id": 51098682, "comment_id": 89188466, "body": "@RobertK I do not claim that. By &#39;nested type&#39; I think the asker means a type like <code>Maybe</code>, not the type argument."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1530273143, "post_id": 51098682, "comment_id": 89189410, "body": "why would it make any sense that <code>Maybe</code> is the nested type in question?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1530275815, "post_id": 51098682, "comment_id": 89190988, "body": "@RobertK The compiler will not add an instance of <code>Show</code> for <code>a</code>, but it will add a constraint to the derived instance demanding <code>Show a</code> (producing e.g. <code>instance Show a =&gt; Show (Maybe a) where ...</code>)."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1530276629, "post_id": 51098682, "comment_id": 89191512, "body": "@DanielWagner yes i am perfectly aware of that. That is however not what AJFarmar was implying in his answer. The statement was &quot;I understand that for nested types you have to provide Show implementation&quot; and AJ&#39;s answer was &quot;You do not&quot;. I think it is misleading/unclear as there is always a need for that instance. You do not yourself however have to supply it, if one already exists."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 3, "creation_date": 1530280032, "post_id": 51098682, "comment_id": 89193754, "body": "@RobertK I suspect that what you mean by nested types is &quot;types contained in another type&quot;, while what the original question asker meant was &quot;types that contain another type&quot;. Perhaps this explains the confusion in the conversation thus far."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1530299190, "post_id": 51098682, "comment_id": 89202990, "body": "I am sorry for late response.For nested types i was meaning having ADT inside ADT. Something like <code>data Person=Male | Female</code> and  <code>data IsMarried=Yes | No</code>   in <code>data Worker=Worker{ type::Person , status::IsMarried}</code> .I didn&#39;t know if you have to provide show for each level of ADT even though you do not want any specific behaviour you just want the name of the data constructor <code>toString</code>."}], "tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 2, "last_activity_date": 1530265506, "last_edit_date": 1530265506, "creation_date": 1530264864, "answer_id": 51098682, "question_id": 51098495, "link": "https://stackoverflow.com/questions/51098495/efficient-way-of-printing-property-names-in-haskell/51098682#51098682", "title": "Efficient way of printing property names in Haskell", "body": "<blockquote>\n  <p>Do I have to provide [a show instance for every type?]</p>\n</blockquote>\n\n<p>No, because you have automatically derived <code>Show</code>:</p>\n\n<pre><code>data Letter = A | B | C deriving (Show)\n--                      ^^^^^^^^^^^^^^^ Here\n</code></pre>\n\n<p>However, if you want a 'smarter' <code>show</code>, such as displaying a custom list as <code>[1,2,3]</code> rather than a mess of constructors, you're going to have to write it yourself.</p>\n\n<p>You can do the same for a number of classes (Including <code>Eq</code>,<code>Ord</code>,<code>Read</code>,<code>Enum</code>, and <code>Bounded</code>) but most classes, including user-defined classes, must be implemented manually without the use of certain language extensions.</p>\n\n<blockquote>\n  <p>I understand that for nested types you have to provide Show implementation[...]</p>\n</blockquote>\n\n<p>You do not! For instance, I can write this:</p>\n\n<pre><code>data Maybe a = Just a | Nothing deriving (Show)\n</code></pre>\n\n<p>And the compiler will automatically add the necessary constraints, despite it being a 'nested' type.</p>\n\n<blockquote>\n  <p>Just get the property name / constructor name and ToString-it ?</p>\n</blockquote>\n\n<p>There are no 'properties' in Haskell - don't think in terms of C# here. <code>show</code> is the equivalent of <code>ToString</code>.  However, a form of type reflection is available in <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Typeable.html\" rel=\"nofollow noreferrer\">TypeReps</a>, though I would advise not using this until you have a solid grasp on Haskell.</p>\n"}, {"tags": [], "owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "is_accepted": true, "score": 2, "last_activity_date": 1530276702, "last_edit_date": 1530276702, "creation_date": 1530273555, "answer_id": 51101257, "question_id": 51098495, "link": "https://stackoverflow.com/questions/51098495/efficient-way-of-printing-property-names-in-haskell/51101257#51101257", "title": "Efficient way of printing property names in Haskell", "body": "<p>Since @AJFarmar edit back his answer when i change it:</p>\n\n<blockquote>\n  <p>Do I have to provide [a show instance for every type?]</p>\n</blockquote>\n\n<p>Yes. Either by deriving it with <code>deriving Show</code>, or by supplying a type instance </p>\n\n<p><code>instance Show -type- where...</code></p>\n\n<blockquote>\n  <p>I understand that for nested types you have to provide Show implementation[...]</p>\n</blockquote>\n\n<p>Yes you do, the compiler will not add any necessary instances for Show.</p>\n\n<pre><code>data Test = Test -- no instance for Show\n\ntest :: String\ntest = show $ (Just Test :: Maybe Test)\n</code></pre>\n\n<p>Will not compile with the error message:</p>\n\n<pre><code>main.hs:4:8: error:\n    \u2022 No instance for (Show Test) arising from a use of \u2018show\u2019\n    \u2022 In the expression: show $ (Just Test :: Maybe Test)\n      In an equation for \u2018test\u2019: test = show $ (Just Test :: Maybe Test)\n</code></pre>\n\n<p>Which is why you need to have a <code>Show</code> instance for <code>a</code> aswell. If one already exists, you do not have to supply a new one, however.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 51101257, "answer_count": 2, "score": -2, "last_activity_date": 1530299418, "creation_date": 1530264317, "last_edit_date": 1530299418, "question_id": 51098495, "link": "https://stackoverflow.com/questions/51098495/efficient-way-of-printing-property-names-in-haskell", "title": "Efficient way of printing property names in Haskell", "body": "<p>Hello  i am new to Haskell and i was wondering :</p>\n\n<p>For every new defined type constructor even if it is something with 0 depth eg.:</p>\n\n<pre><code>data Letter =A | B | C deriving (Show)\n</code></pre>\n\n<p>do i have to provide</p>\n\n<pre><code>instance Show Type\n    Letter A = \"A\"\n    Letter B =\"B\"\n    Letter C =\"C\"\n</code></pre>\n\n<p>I understand that for nested types you have to provide <code>Show</code> implementation but for something simple is there no other way to just use something equivalent to reflection (C#) ? Just get the property name / constructor name  and  <code>ToString</code><em>-it</em> ?</p>\n\n<p>Do haskell programmers provide instances for <code>Show</code> for any adhoc type they create?</p>\n\n<p>By nested types i mean having a simple ADT inside another ADT inside another etc..but all you want is to get their names:</p>\n\n<p>e.g:</p>\n\n<pre><code>data Person = Male | Female\ndata IsMarried=Yes | No\n\ndata Worker=Worker{\n            person::Person,\n            status::IsMarried\n            }\n</code></pre>\n\n<p>For this kind of nesting do i really have to define <code>instance</code> of <code>Show</code> for all these type constructors even though all i want is their name be \"stringified\"?</p>\n"}, {"tags": ["haskell", "attoparsec"], "answers": [{"comments": [{"owner": {"reputation": 317, "user_id": 7370105, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/28a1d625330e0446be0e39e901f8b5b1?s=128&d=identicon&r=PG&f=1", "display_name": "handora", "link": "https://stackoverflow.com/users/7370105/handora"}, "edited": false, "score": 0, "creation_date": 1530252499, "post_id": 51094493, "comment_id": 89178371, "body": "It completely solves the problem. :) And is it means that after consuming &quot;v&quot;, it keeps consuming empty string for input &quot;v&quot;?"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 3, "last_activity_date": 1530247802, "creation_date": 1530247802, "answer_id": 51094493, "question_id": 51093771, "link": "https://stackoverflow.com/questions/51093771/haskell-attoparsec-infinite-loop/51094493#51094493", "title": "Haskell Attoparsec infinite loop", "body": "<p>The second alternative in <code>pString</code> accepts the empty string: <code>many' pChar &gt;&gt;= \\s -&gt; return (...)</code>. Thus <code>many' pString</code> keeps consuming the empty string ad infinitum.</p>\n"}], "owner": {"reputation": 317, "user_id": 7370105, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/28a1d625330e0446be0e39e901f8b5b1?s=128&d=identicon&r=PG&f=1", "display_name": "handora", "link": "https://stackoverflow.com/users/7370105/handora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 51094493, "answer_count": 1, "score": 0, "last_activity_date": 1530247802, "creation_date": 1530242272, "question_id": 51093771, "link": "https://stackoverflow.com/questions/51093771/haskell-attoparsec-infinite-loop", "title": "Haskell Attoparsec infinite loop", "body": "<p>The code is based on <code>Haskell Attoparsec</code>, and when I use <code>parseOnly pString \"v\"</code>, it gives me the right answer as <code>Right (DontNeedTrim, \"v\")</code>.</p>\n\n<p>While when I use the instruction <code>parseOnly (many' pString) \"v\"</code>, it seems drops into the <code>infinite loop</code> and finally failed with the overflowed stack.</p>\n\n<pre><code>data Signal = NeedTrim\n              | DontNeedTrim\n              deriving (Show)\n\npString :: Parser (Signal, [Char])\npString = ((char '\\\"' *&gt; many' pChar' &lt;* char '\\\"') &gt;&gt;= \\s -&gt; return (NeedTrim, s))\n          &lt;|&gt; (many' pChar &gt;&gt;= \\s -&gt; return (DontNeedTrim, s))\n\npChar :: Parser Char\npChar = char '\\\\' *&gt; (pEscape &lt;|&gt; spaces *&gt; endOfLine *&gt; pChar)\n        &lt;|&gt; satisfy (`C.notElem` \"\\\"\\\\\\n#;\")\n\npChar' :: Parser Char\npChar' = char '\\\\' *&gt; pEscape\n         &lt;|&gt; satisfy (`C.notElem` \"\\\\\\\"\")\n\npEscape :: Parser Char\npEscape = choice (zipWith decode \"bnt\\\\\\\"\" \"\\b\\n\\t\\\\\\\"\")\n  where decode c r = r &lt;$ char c\n</code></pre>\n"}, {"tags": ["haskell", "recursion", "polymorphism"], "comments": [{"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1530236415, "post_id": 51093198, "comment_id": 89174507, "body": "Note: This question is a more focused sub-question of the one asked <a href=\"https://stackoverflow.com/q/40247339/2682729\">here</a>."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 2, "creation_date": 1530239456, "post_id": 51093198, "comment_id": 89175116, "body": "You need polymorphic recursion to operate on <a href=\"https://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Sequence.html\" rel=\"nofollow noreferrer\"><code>Seq</code></a> values."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1530317109, "post_id": 51093198, "comment_id": 89208362, "body": "@Carl, that&#39;s a good example. Could you expand that into a more full-fledged answer (e.g. what operations use polymorphic recursion/what additional benefits it provides compared to an implementation in another language without it)?"}], "answers": [{"comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 2, "creation_date": 1530284280, "post_id": 51096486, "comment_id": 89196167, "body": "It might be worth note that other GHC features are enabled by using polymorphic representation.  RankNTypes are particularly powerful and require a uniform in-memory representation of values in order to be polymorphic at runtime."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530285859, "post_id": 51096486, "comment_id": 89196992, "body": "Funny that you should mention <code>std::vector&lt;bool&gt;</code>, which the C++ community generally considers a historical <code>fail</code>... But, quite generally speaking, monomorphisation does lead to better cache performance. In C++ you can stuff anything in a <code>vector</code> and be confident it will be efficient in memory. In Haskell, carrying around the <code>Unbox</code> or <code>Storable</code> constraint can be a bit of a burden by comparison."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530289385, "post_id": 51096486, "comment_id": 89198855, "body": "@leftaroundabout Why is <code>std::vector&lt;bool&gt;</code> considered a failure? I&#39;m not familiar with the downsides. I see the point about cache performance, but monomorphization sometimes repeats the same code over and over in the object file. OTOH, keeping only one copy of the code requires a uniform representation and an extra indirection which prevents some low-level optimizations. (Fortunately, in GHC we have <code>SPECIALIZE</code> to get something similar)"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1530289850, "post_id": 51096486, "comment_id": 89199045, "body": "@chi <code>std::vector&lt;bool&gt;</code> breaks all kinds of assumptions C++ programmers like to make about vectors, such as being able to pass <code>v.data()</code> as a pointer to a C function that expects a plain old array. Also, it&#39;s in practice often actually <i>slower</i> than a na&#239;ve implementation would be, since extra masks/shifts are required. \u2014 You&#39;re right about code bloat, but in many applications that&#39;s a worthwhile tradeoff. For small functions, the repetition doesn&#39;t matter much, and large ones are often only ever used with a few different types. \u2013 FWIW, Haskell isn&#39;t a champion of tiny executables either..."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1530317316, "post_id": 51096486, "comment_id": 89208390, "body": "Hi, while this is a nice example, I&#39;d consider it to fall under &quot;Small toy examples which show that you can do X&quot; ... I&#39;m looking for a more fleshed-out examples where the additional power is helpful in solving some &quot;practical problem&quot;. In my comment to the question, I&#39;ve linked to another SO post which is also gives a small example and points to Okasaki&#39;s book -- I&#39;m explicitly looking for medium to large scale examples here."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 2, "creation_date": 1530374969, "post_id": 51096486, "comment_id": 89219135, "body": "&quot;[...] type checked once.&quot; IIUC, monomorphisation doesn&#39;t necessarily entail that you need to type-check multiple times unless you have a duck-typed template system like C++."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1530285085, "last_edit_date": 1530285085, "creation_date": 1530257402, "answer_id": 51096486, "question_id": 51093198, "link": "https://stackoverflow.com/questions/51093198/applications-of-polymorphic-recursion/51096486#51096486", "title": "Applications of polymorphic recursion", "body": "<p>Sometimes you want encode some constraints in types, so that they are enforced at compile time.</p>\n\n<p>For instance, a complete binary tree can be defined as</p>\n\n<pre><code>data CTree a = Tree a | Dup (CTree (a,a))\n\nexample :: CTree Int\nexample = Dup . Dup . Tree $ ((1,2),(3,4))\n</code></pre>\n\n<p>The type will prevent non complete trees like <code>((1,2),3)</code> to be stored inside, enforcing the invariant.</p>\n\n<p>Okasaki's book shows many of such examples.</p>\n\n<p>If one then wants to operate on such trees, polymorphic recursion is needed. \nWriting a function which computes the height of a tree, sums all the numbers in a <code>CTree Int</code>, or a generic map or fold requires polymorphic recursion.</p>\n\n<p>Now, it is not terribly frequent to need/want such polymorphically recursive types. Still, they are nice to have.</p>\n\n<p>In my personal opinion, monomorphisation is a bit unsatisfactory not only because it prevents polymorphic recursion, but because it requires to compile the polymorphic code once for every type it is used at. In Haskell or Java, using <code>Maybe Int, Maybe String, Maybe Bool</code> does not cause the <code>Maybe</code>-related functions to be compiled thrice and appear thrice in the final object code. In C++, this happens, bloating the object code. It is true, though, that in C++ this allows more efficient specializations to be used (e.g. <code>std::vector&lt;bool&gt;</code> can be implemented with a bitvector). This further enables C++'s SFINAE, etc. Still, I think I prefer it when the polymorphic code is compiled once, and type checked once -- after which it is guaranteed to be type safe a all types.</p>\n"}, {"comments": [{"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1530318742, "post_id": 51108357, "comment_id": 89208624, "body": "+1, I hadn&#39;t seen the Kitten example before. This one is particularly compelling in that it allows you to have both polymorphism + static typing in a whole language, not just have one fancy data structure."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1530331104, "post_id": 51108357, "comment_id": 89210116, "body": "@theindigamer: Thanks. :) I\u2019m not sure what you mean by \u201cnot just one fancy data structure\u201d, though. Also I wasn\u2019t <i>exactly</i> using Kitten syntax for this post, just some type theory notation and concatenative pseudocode, but it\u2019s similar enough."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 1, "creation_date": 1530374732, "post_id": 51108357, "comment_id": 89219081, "body": "By &quot;one fancy data structure&quot;, I mean that sure, you can make types which are recursive in non-trivial ways, it isn&#39;t necessarily clear where such types should be used. The language example demonstrates a concrete use case."}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 3, "last_activity_date": 1530301032, "creation_date": 1530301032, "answer_id": 51108357, "question_id": 51093198, "link": "https://stackoverflow.com/questions/51093198/applications-of-polymorphic-recursion/51108357#51108357", "title": "Applications of polymorphic recursion", "body": "<p>Here\u2019s one example close to my work that I think generalises fairly well: in a concatenative language, that is, a language built on composing functions that operate on a shared program state such as a stack, all functions are polymorphic with respect to the part of the stack they don\u2019t touch, all recursion is polymorphic recursion, and moreover all higher-order functions are also higher-rank. For instance, the type of <code>map</code> in such a language might be:</p>\n\n<blockquote>\n  <p>\u2200\u03b1\u03b2\u03c3. \u03c3 \u00d7 List \u03b1 \u00d7 (\u2200\u03c4. \u03c4 \u00d7 \u03b1 \u2192 \u03c4 \u00d7 \u03b2) \u2192 \u03c3 \u00d7 List \u03b2</p>\n</blockquote>\n\n<p>Where \u00d7 is a left-associative product type with a stack-kinded type on the left and a value-kinded type on the right, \u03c3 and \u03c4 are stack-kinded type variables, and \u03b1 and \u03b2 are value-kinded type variables. <code>map</code> can be called on any program state \u03c3 as long as it has a List of \u03b1s and a function from \u03b1s to \u03b2s on top, like:</p>\n\n<pre><code>\"ignored\" [ 1 2 3 ] { succ show } map\n=\n\"ignored\" [ \"2\" \"3\" \"4\" ]\n</code></pre>\n\n<p>There\u2019s polymorphic recursion here because <code>map</code> calls itself recursively on different instantiations of \u03c3 (i.e., different types of \u201crest of the stack\u201d):</p>\n\n<pre><code>-- \u03c3 = Bottom \u00d7 String\n\"ignored\"           [ 1 2 3 ] { succ show } map\n\"ignored\" 1 succ show [ 2 3 ] { succ show } map cons\n\n-- \u03c3 = Bottom \u00d7 String \u00d7 String\n\"ignored\" \"2\"           [ 2 3 ] { succ show } map cons\n\"ignored\" \"2\" 2 succ show [ 3 ] { succ show } map cons cons\n\n-- \u03c3 = Bottom \u00d7 String \u00d7 String \u00d7 String\n\"ignored\" \"2\" \"3\"           [ 3 ] { succ show } map cons cons\n\"ignored\" \"2\" \"3\" 3 succ show [ ] { succ show } map cons cons cons\n\n-- \u03c3 = Bottom \u00d7 String \u00d7 String \u00d7 String \u00d7 String\n\"ignored\" \"2\" \"3\" \"4\" [ ] { succ show } map cons cons cons\n\"ignored\" \"2\" \"3\" \"4\" [ ] cons cons cons\n\"ignored\" \"2\" \"3\" [ \"4\" ] cons cons\n\"ignored\" \"2\" [ \"3\" \"4\" ] cons\n\"ignored\" [ \"2\" \"3\" \"4\" ]\n</code></pre>\n\n<p>And the functional argument of <code>map</code> needs to be higher-rank because it\u2019s called on different stack types as well (different instantiations of \u03c4).</p>\n\n<p>In order to do this without polymorphic recursion, you would need an additional stack or local variables in which to place the intermediate results of <code>map</code> to get them \u201cout of the way\u201d so that all recursive calls take place on the same type of stack. This has implications for how functional languages can be compiled to e.g. typed combinator machines: with polymorphic recursion you can preserve safety while keeping the virtual machine simple.</p>\n\n<p>The general form of this is that you have a recursive function which is polymorphic over <em>part</em> of a data structure, such as the initial elements of an <code>HList</code> or a subset of a polymorphic record.</p>\n\n<p>And as @chi has already mentioned, the main instance where you need polymorphic recursion at the function level in Haskell is when you have polymorphic recursion at the <em>type</em> level, such as:</p>\n\n<pre><code>data Nest a = Nest a (Nest [a]) | Nil\n\nexample = Nest 1 $ Nest [1, 2] $ Nest [[1, 2], [3, 4]] Nil\n</code></pre>\n\n<p>A recursive function over such a type is always polymorphically recursive, since the type parameter changes with each recursive call.</p>\n\n<p>Haskell requires type signatures for such functions, but apart from the types, mechanically there\u2019s no difference between recursion and polymorphic recursion. You can write a polymorphic fixed-point operator if you have a secondary <code>newtype</code> that hides the polymorphism:</p>\n\n<pre><code>newtype Forall f = Abstract { instantiate :: forall a. f a }\n\nfix' :: forall f. ((forall a. f a) -&gt; (forall a. f a)) -&gt; (forall a. f a)\nfix' f = instantiate (fix (\\x -&gt; Abstract (f (instantiate x))))\n</code></pre>\n\n<p>Without all the wrapping &amp; unwrapping ceremony, this is the same as <code>fix' f = fix f</code>.</p>\n\n<p>This is also the reason that polymorphic recursion doesn\u2019t need to result in a blowup of instantiations of a function\u2014even if the function is specialised in its value-kinded type parameters, it\u2019s \u201cfully polymorphic\u201d in the recursive parameter, so it doesn\u2019t manipulate it <em>at all</em>, and thus only needs a single compiled representation.</p>\n"}, {"comments": [{"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1530468238, "post_id": 51121172, "comment_id": 89236344, "body": "I&#39;m curious though: what would you use a <code>TypeRepMap</code> for?"}, {"owner": {"reputation": 674, "user_id": 7478655, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/UL7XU.jpg?s=128&g=1", "display_name": "vrom911", "link": "https://stackoverflow.com/users/7478655/vrom911"}, "reply_to_user": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1530510254, "post_id": 51121172, "comment_id": 89244174, "body": "It was needed for another library that allows mutually recursive late-bound  capabilities with runtime dispatch and a type-safe interface."}], "tags": [], "owner": {"reputation": 674, "user_id": 7478655, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/UL7XU.jpg?s=128&g=1", "display_name": "vrom911", "link": "https://stackoverflow.com/users/7478655/vrom911"}, "is_accepted": false, "score": 3, "last_activity_date": 1530429066, "creation_date": 1530429066, "answer_id": 51121172, "question_id": 51093198, "link": "https://stackoverflow.com/questions/51093198/applications-of-polymorphic-recursion/51121172#51121172", "title": "Applications of polymorphic recursion", "body": "<p>I can share a real example I was using in my project.</p>\n\n<p>Long story short, I have a data structure <code>TypeRepMap</code> where I store types as the keys and this type matches the type of the corresponding value. </p>\n\n<p>For benchmarking my library I needed to make a list of 1000 types to check how fast <code>lookup</code> in this data structure works. And here comes the polymorphic recursion.</p>\n\n<p>To do so I introduced the following data types as type-level natural numbers:</p>\n\n<pre><code>data Z\ndata S a\n</code></pre>\n\n<p>Using these data types I was able to implement the function which builds <code>TypeRepMap</code> of the desired size.</p>\n\n<pre><code>buildBigMap :: forall a . Typeable a \n            =&gt; Int \n            -&gt; Proxy a \n            -&gt; TypeRepMap \n            -&gt; TypeRepMap\nbuildBigMap 1 x = insert x\nbuildBigMap n x = insert x . buildBigMap (n - 1) (Proxy @(S a))\n</code></pre>\n\n<p>so when I run <code>buildBigMap</code> with size <code>n</code> and <code>Proxy a</code> then it calls itself recursively with <code>n - 1</code> and <code>Proxy (S a)</code> at each step, so the types are growing on each step.</p>\n"}], "owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 807, "favorite_count": 0, "accepted_answer_id": 51108357, "answer_count": 3, "score": 9, "last_activity_date": 1554362164, "creation_date": 1530236399, "question_id": 51093198, "link": "https://stackoverflow.com/questions/51093198/applications-of-polymorphic-recursion", "title": "Applications of polymorphic recursion", "body": "<p>One limitation of implementing polymorphism in a language via monomorphisation (and monomorphisation only) is that you lose the ability to support polymorphic recursion (e.g. see rust-lang <a href=\"https://github.com/rust-lang/rust/issues/4287#issuecomment-11846582\" rel=\"noreferrer\">#4287</a>).</p>\n\n<p>What are some compelling use cases for supporting polymorphic recursion in a programming language? I have been trying to find libraries/concepts which use this and so far I've come across one example:</p>\n\n<ol>\n<li>In \"The Naming Problem\" where we'd like to have both (a) fast capture avoiding substitution and (b) fast alpha equivalence checking, there is the <a href=\"https://www.stackage.org/lts-11.15/package/bound-2.0.1\" rel=\"noreferrer\">bound</a> library (more detailed explanation <a href=\"https://www.schoolofhaskell.com/user/edwardk/bound\" rel=\"noreferrer\">here</a>). Both of these properties are desirable when writing a compiler for a functional programming language.</li>\n</ol>\n\n<p>To prevent the question from being overly broad, I'm looking for other programs/libraries/research papers that present applications of polymorphic recursion to traditional computer science problems such as those involved in writing compilers.</p>\n\n<p>Examples of things that I'm not looking for:</p>\n\n<ol>\n<li><p>Answers showing how you can encode X from category theory using polymorphic recursion, unless they demonstrate how encoding X can be beneficial for solving Y which falls under the criterion above.</p></li>\n<li><p>Small toy examples which show that you can do X with polymorphic recursion but you can't without it. </p></li>\n</ol>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 2, "creation_date": 1530227045, "post_id": 51092200, "comment_id": 89172743, "body": "You need to install the <code>monad-par</code> package. Try <code>cabal install monad-par</code>."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "reply_to_user": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1530251679, "post_id": 51092200, "comment_id": 89178086, "body": "Like @DarthFennec said, it is not part of the prelude and must thus be installed locally. I advice you do this in a sandbox (<code>cabal sandbox init</code> at your project root), so your different projects won&#39;t complain about broken dependencies and so forth."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1530287852, "post_id": 51092200, "comment_id": 89198131, "body": "@RobertK, please don&#39;t confuse the prelude (a single distinguished module) with the set of packages that ship with GHC."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1530507358, "post_id": 51092200, "comment_id": 89243335, "body": "@dfeuer That is true, my bad."}], "answers": [{"tags": [], "owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "is_accepted": true, "score": 3, "last_activity_date": 1530291268, "creation_date": 1530291268, "answer_id": 51106358, "question_id": 51092200, "link": "https://stackoverflow.com/questions/51092200/import-control-monad-par-not-working/51106358#51106358", "title": "import Control.Monad.Par not working", "body": "<p>In general, <code>Could not find module \u2018...\u2019</code> means you don't have the package installed<sup>1</sup>. You can search the module name on <a href=\"http://hayoo.fh-wedel.de/\" rel=\"nofollow noreferrer\">hayoo</a> to get the package name, and then do:</p>\n\n<pre><code>cabal install [package name]\n</code></pre>\n\n<p>Or if you're using <a href=\"https://docs.haskellstack.org/en/stable/README/\" rel=\"nofollow noreferrer\">Stack</a> for your project (recommended), you can add the package name to the <code>build-depends</code> section in your <code>*.cabal</code> file.</p>\n\n<hr>\n\n<p><sup><sup>1</sup>It could also mean you misspelled the module name, the package was installed incorrectly, GHC isn't looking for the package in the place it was installed, or some other weird thing is going on, but I won't go into that.</sup></p>\n"}], "owner": {"reputation": 35, "user_id": 9616002, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "madmonk", "link": "https://stackoverflow.com/users/9616002/madmonk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 484, "favorite_count": 1, "accepted_answer_id": 51106358, "answer_count": 1, "score": 2, "last_activity_date": 1530291914, "creation_date": 1530226652, "last_edit_date": 1530291914, "question_id": 51092200, "link": "https://stackoverflow.com/questions/51092200/import-control-monad-par-not-working", "title": "import Control.Monad.Par not working", "body": "<p>Here are my version info:</p>\n\n<p>cabal-install version 1.24.0.2\ncompiled using version 1.24.2.0 of the Cabal library</p>\n\n<p>On Ubuntu 18.04</p>\n\n<pre><code>$ ghci\n\nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\n\nPrelude&gt; import Control.Monad.Par\n\n&lt;no location info&gt;: error:\nCould not find module \u2018Control.Monad.Par\u2019\nPerhaps you meant\n  Control.Monad.Fail (from base-4.9.1.0)\n  Control.Monad.Fix (from base-4.9.1.0)\n  Control.Monad.RWS (needs flag -package-key mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6)\n</code></pre>\n\n<p>Would appreciate any help on how to get Control.Monad.Par to work.</p>\n"}, {"tags": ["haskell", "io", "monads"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 3, "creation_date": 1530227449, "post_id": 51092191, "comment_id": 89172831, "body": "You can&#39;t have an IO action in a non-IO function. You should do <code>readLines</code> in your <code>main</code> function, and pass the result to <code>get_coefficients</code>, which is how that answer you linked does it."}], "answers": [{"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 2, "last_activity_date": 1530231390, "creation_date": 1530231390, "answer_id": 51092688, "question_id": 51092191, "link": "https://stackoverflow.com/questions/51092191/haskell-read-a-text-file-of-doubles-and-assign-a-list-containing-them-to-a-list/51092688#51092688", "title": "Haskell: read a text file of doubles and assign a list containing them to a list variable", "body": "<p>Since you use <code>return</code>, your output is in a monad, in this case the <code>IO</code> monad. As the error message tells you, you should change this line:</p>\n\n<pre><code>get_coefficients :: String -&gt; [Double]\n</code></pre>\n\n<p>To this:</p>\n\n<pre><code>get_coefficients :: String -&gt; IO [Double]\n</code></pre>\n\n<p>This is because of a core principle of Haskell: referential transparency.</p>\n\n<p>If you want to use the <code>[Double]</code> produced, you still have to keep it in an <code>IO</code> monad, like so:</p>\n\n<pre><code>main :: IO ()\nmain = do\n    -- This can be thought of as taking out values from the monad,\n    -- but requires the promise that it'll be put back into a monad later.\n    doubles &lt;- get_coefficients \"This argument does nothing, why?\"\n    -- This prints the list of doubles. Note: it returns an IO (),\n    -- thus fufills the promise!\n    -- print :: Show a =&gt; a -&gt; IO ()\n    print doubles\n</code></pre>\n"}], "owner": {"reputation": 99, "user_id": 8331987, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bcb309ae253520b65ff36725a57ef0?s=128&d=identicon&r=PG&f=1", "display_name": "dcw", "link": "https://stackoverflow.com/users/8331987/dcw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1530231390, "creation_date": 1530226595, "last_edit_date": 1530226921, "question_id": 51092191, "link": "https://stackoverflow.com/questions/51092191/haskell-read-a-text-file-of-doubles-and-assign-a-list-containing-them-to-a-list", "title": "Haskell: read a text file of doubles and assign a list containing them to a list variable", "body": "<p>Okay, I'm new to the Haskell community having come from Python and this is driving me crazy. </p>\n\n<p>I have a text file looking something like:\n\"1.2\n1.423\n2.43\".</p>\n\n<p>I want to read this text file and store it as a list of doubles in list_var. So list_var = [1.2,1.423,2.43]. This list_var will be used further in the program.</p>\n\n<p>I just don't seem to find an answer on how to do this, most answers can print out list_var, e.g. <a href=\"https://stackoverflow.com/questions/32236072/haskell-read-a-file-containing-numbers-into-a-list\">Haskell - Read a file containing numbers into a list</a> but I need list_var further down the line!</p>\n\n<p>I have tried:</p>\n\n<pre><code>get_coefficients :: String -&gt; [Double]\nget_coefficients file_1 = do\n coefficients_fromfile &lt;- readLines \"test2.txt\"\n let coefficients = map readDouble coefficients_fromfile\n return coefficients\n</code></pre>\n\n<p>which doesn't work, readLines is </p>\n\n<pre><code>readLines :: FilePath -&gt; IO [String]\nreadLines = fmap lines . readFile\n</code></pre>\n\n<p>and readDouble is </p>\n\n<pre><code>readDouble :: String -&gt; Double\nreadDouble = read\n</code></pre>\n\n<p>Thanks in advance!</p>\n"}, {"tags": ["haskell", "pattern-matching"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1530218717, "post_id": 51090879, "comment_id": 89170187, "body": "Post the <i>full</i> code. Enable warnings with <code>-Wall</code> so that the unmatched cases are reported at compile time. You can&#39;t print unless you return a value inside the IO monad -- read a tutorial."}, {"owner": {"reputation": 966, "user_id": 5669167, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2cc0p.jpg?s=128&g=1", "display_name": "zython", "link": "https://stackoverflow.com/users/5669167/zython"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530219175, "post_id": 51090879, "comment_id": 89170368, "body": "thanks for the <code>-Wall</code> recommendation, I have noticed that I have copy pasted your answer from earlier without deobfusciating the names, now it works, I wish I&#39;d think before copy pasting, cheers"}], "answers": [{"comments": [{"owner": {"reputation": 966, "user_id": 5669167, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2cc0p.jpg?s=128&g=1", "display_name": "zython", "link": "https://stackoverflow.com/users/5669167/zython"}, "edited": false, "score": 0, "creation_date": 1530219312, "post_id": 51091011, "comment_id": 89170411, "body": "am I correct to assume that <code>traceShow</code> returns the same type as <code>g</code> ?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 966, "user_id": 5669167, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2cc0p.jpg?s=128&g=1", "display_name": "zython", "link": "https://stackoverflow.com/users/5669167/zython"}, "edited": false, "score": 1, "creation_date": 1530219375, "post_id": 51091011, "comment_id": 89170431, "body": "<code>traceShow</code> returns the type of whatever the dummy value (the second argument) is. So it could be the same as <code>g</code> but doesn&#39;t necessarily have to be. You can see a full list of the different tracing functions and all their type signatures on the <a href=\"https://hackage.haskell.org/package/base-4.10.1.0/docs/Debug-Trace.html\" rel=\"nofollow noreferrer\">Hackage page</a>"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1530219393, "post_id": 51091011, "comment_id": 89170436, "body": "<code>traceShow :: Show a =&gt; a -&gt; b -&gt; b</code>. You pass it a thing to print and a value, it prints the thing and returns that value."}, {"owner": {"reputation": 966, "user_id": 5669167, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2cc0p.jpg?s=128&g=1", "display_name": "zython", "link": "https://stackoverflow.com/users/5669167/zython"}, "edited": false, "score": 0, "creation_date": 1530219511, "post_id": 51091011, "comment_id": 89170473, "body": "that answers my question more than enough, thanks everyone"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 4, "creation_date": 1530219617, "post_id": 51091011, "comment_id": 89170512, "body": "An alternative for this situation might be to use <code>error $ print g</code>. When I&#39;m debugging an unexpected pattern match, that&#39;s how I usually deal with it. Especially when the alternative is &quot;return a dummy value&quot;."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 5, "last_activity_date": 1530218874, "creation_date": 1530218874, "answer_id": 51091011, "question_id": 51090879, "link": "https://stackoverflow.com/questions/51090879/how-to-print-variable-inside-function/51091011#51091011", "title": "How to print variable inside function?", "body": "<p>I can't speak to your non-exhaustive pattern problem without seeing the definition of <code>Wrapper</code> that you're using. I can, however, answer the question you've asked.</p>\n\n<p>Normally, in Haskell, to print a value, we need to have <code>IO</code> in our return type. This keeps the code functionality pure and gives us tons of benefits, so we should never try to break this rule in production code.</p>\n\n<p><em>However</em>, there's always that pesky little voice in your head that wants to print a value for debugging purposes only. Bear in mind, this should <em>never</em> be done in a finished product; it's only for debugging reasons. However, for this reason, Haskell provides a module <code>Debug.Trace</code> which breaks all sanity and normal functional rules to let you do this.</p>\n\n<pre><code>import Debug.Trace\n\nfold_wrap v x z g = traceShow g someDummyValue\n</code></pre>\n\n<p>Now, there are a few considerations. First, <code>Wrapper</code> still has to have <code>Show</code>. There's nothing we can do about that; if Haskell doesn't know <em>how</em> to print something, then it can't print it, even for debugging. Second, Haskell is non-strict, so when you run the code, you need to make sure the <code>fold_wrap</code> call is actually evaluated. Just calling it and binding the result to a dummy variable won't do; you need to actually take that dummy value and use it in some context where it absolutely has to be evaluated, usually by printing it out in <code>main</code>.</p>\n\n<p>I said this before, but I'll say it again because it's important. <code>Debug.Trace</code> is <em>for debugging only</em>. It can get addicting, especially if you're new to Haskell. But <em>do not</em> use that module in production code. It has a lot of problems, such as not guaranteeing print order, that don't matter when debugging but matter <em>a lot</em> when used in user-facing code. Not to mention the fact that it breaks every Haskell rule in the book.</p>\n"}], "owner": {"reputation": 966, "user_id": 5669167, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2cc0p.jpg?s=128&g=1", "display_name": "zython", "link": "https://stackoverflow.com/users/5669167/zython"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 666, "favorite_count": 0, "accepted_answer_id": 51091011, "answer_count": 1, "score": 0, "last_activity_date": 1530218874, "creation_date": 1530218225, "question_id": 51090879, "link": "https://stackoverflow.com/questions/51090879/how-to-print-variable-inside-function", "title": "How to print variable inside function?", "body": "<p>I have a function:</p>\n\n<pre><code>fold_wrap :: (a -&gt; a -&gt; a) -&gt; (Prop -&gt; a) -&gt; a -&gt; Wrapper -&gt; a\n\nfold_wrap v x z (Mrappe l r)   = v ( v(v x z l) v(v x z r) )\nfold_wrap v x z (Wrap f)       = x f \nfold_warp v x z (Wtail )       = z\n</code></pre>\n\n<p>Where I encounter the following error:</p>\n\n<pre><code>mast: mast.hs:(15,1)-(16,31): Non-exhaustive patterns in function fold_mast\n</code></pre>\n\n<p>So I added </p>\n\n<pre><code>fold_wrap v x z _ = z \n</code></pre>\n\n<p>Which fixed the error but </p>\n\n<p>Which led me to believe that some patterns were indeed left unmatched.</p>\n\n<p>Now my intuition to fixing this was to print what gets passed  to the function.</p>\n\n<p>So I added  this</p>\n\n<pre><code>fold_wrap  v x z g = print g\n</code></pre>\n\n<p>But that didnt work either since the the function has to return an <code>a</code> type and not <code>IO</code></p>\n\n<p>So my question is:</p>\n\n<p>How do I print <code>g</code> and return some dummy value at the same time ?</p>\n\n<p>Tips on how to fix this non exhaustive pattern matching are also appreciated. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1530218267, "post_id": 51090822, "comment_id": 89170023, "body": "Presumably, you want <code>v</code> to be of type <code>String</code>, but the compiler has no way of knowing that."}], "answers": [{"comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1530218392, "post_id": 51090891, "comment_id": 89170070, "body": "The <code>read valor</code> step is redundant. <code>readLn</code> already has type <code>Read a =&gt; IO a</code>"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1530218510, "post_id": 51090891, "comment_id": 89170118, "body": "@4castle I learned something today then. I don&#39;t think I&#39;ve ever used <code>readLn</code> for anything other than strings. Thanks for the correction! :)"}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 2, "creation_date": 1530218645, "post_id": 51090891, "comment_id": 89170157, "body": "Perhaps you were thinking of <code>getLine</code>? It <i>does</i> have type <code>IO String</code>"}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": false, "score": 2, "last_activity_date": 1530218469, "last_edit_date": 1530218469, "creation_date": 1530218272, "answer_id": 51090891, "question_id": 51090822, "link": "https://stackoverflow.com/questions/51090822/get-the-return-values-from-another-function-haskell/51090891#51090891", "title": "Get the return values from another function - Haskell", "body": "<p>Your problem, I believe, is confined to your type signatures.</p>\n\n<pre><code>prompt :: Read a =&gt; String -&gt; IO a\n</code></pre>\n\n<p>This type signature says that <code>prompt</code> is a function which takes a string, does some I/O magic, and then returns a value of type <code>a</code>, for <em>any</em> readable type <code>a</code> the user wishes. However, your implementation gets a string from the user and returns it.</p>\n\n<p>If your intention is that <code>prompt</code> return a string, simply change your type.</p>\n\n<pre><code>prompt :: Read a =&gt; String -&gt; IO a\n</code></pre>\n\n<p>If your intention truly is that <code>prompt</code> return a value of some arbitrary user-specified type, you need to resolve the ambiguity when you actually read the value.</p>\n\n<pre><code>prompt :: Read a =&gt; String -&gt; IO a\nprompt str = do putStrLn str\n                valor &lt;- readLn\n                return valor\n</code></pre>\n\n<p>You'll get an ambiguity error in <code>main</code>, since Haskell can't figure out what type you want <code>v</code> to be. This can be resolved by explicitly specifying.</p>\n\n<pre><code>v &lt;- prompt \"Whats your name?\" :: IO String\n</code></pre>\n\n<p>(or, equivalently, <code>IO Int</code> for an integer, <code>IO Double</code> for a double, or any other readable type)</p>\n\n<p>However, more than likely you intended that <code>prompt</code> always return a string. So I recommend the first solution, as it will be more intuitive to users.</p>\n"}], "owner": {"reputation": 189, "user_id": 5013644, "user_type": "registered", "profile_image": "https://graph.facebook.com/852470824827684/picture?type=large", "display_name": "Matheus Vin&#237;cius de Andrade", "link": "https://stackoverflow.com/users/5013644/matheus-vin%c3%adcius-de-andrade"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 245, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1530218469, "creation_date": 1530217907, "question_id": 51090822, "link": "https://stackoverflow.com/questions/51090822/get-the-return-values-from-another-function-haskell", "title": "Get the return values from another function - Haskell", "body": "<p>I'm trying to get the values from this function, so, when i call that function \"prompt\" a send a message and this function return an value according with the supposed question that i made.  </p>\n\n<p>But i can't receive that value, so why ?\nI'm noob with haskell.</p>\n\n<pre><code>module Main (main) where\nimport System.IO (stdout, hSetBuffering, BufferMode(NoBuffering))\ntype State = Double\n\nmain::IO()\nprompt::Read a =&gt;  String -&gt;  IO a\n\n\nmain = do putStrLn \"Testing\"\n          v &lt;- prompt \"Whats your name?\"\n          return ()\n\nprompt str = do putStrLn str\n                valor &lt;- readLn\n                return valor\n</code></pre>\n"}, {"tags": ["haskell", "tuples"], "comments": [{"owner": {"reputation": 2665, "user_id": 4323201, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/QefSh.png?s=128&g=1", "display_name": "RyanNerd", "link": "https://stackoverflow.com/users/4323201/ryannerd"}, "edited": false, "score": 2, "creation_date": 1530215469, "post_id": 51089945, "comment_id": 89168950, "body": "What do you need help with exactly? What is your expected output is it different than the example. Do you have code you&#39;ve created so far that you can share?"}, {"owner": {"reputation": 11, "user_id": 10007392, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-J3Kr8M8h_EI/AAAAAAAAAAI/AAAAAAAAABU/pfsSBRQzFpc/photo.jpg?sz=128", "display_name": "Cereegolas", "link": "https://stackoverflow.com/users/10007392/cereegolas"}, "reply_to_user": {"reputation": 2665, "user_id": 4323201, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/QefSh.png?s=128&g=1", "display_name": "RyanNerd", "link": "https://stackoverflow.com/users/4323201/ryannerd"}, "edited": false, "score": 0, "creation_date": 1530216278, "post_id": 51089945, "comment_id": 89169272, "body": "The output is correct for the actual example that i wrote before. I have a tuple(double, string) and i have to write out in new lines the answer in the following order : (strings: double(value) +15%)"}], "answers": [{"tags": [], "owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "is_accepted": true, "score": -1, "last_activity_date": 1530221548, "creation_date": 1530221548, "answer_id": 51091516, "question_id": 51089945, "link": "https://stackoverflow.com/questions/51089945/haskell-tuple-double-string/51091516#51091516", "title": "Haskell, tuple (double, string)", "body": "<p>You can implement it using <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:mapM_\" rel=\"nofollow noreferrer\"><code>mapM_</code></a>/<a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Foldable.html#v:traverse_\" rel=\"nofollow noreferrer\"><code>traverse_</code></a> or the flipped argument versions: <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Foldable.html#v:forM_\" rel=\"nofollow noreferrer\"><code>forM_</code></a>/<a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Foldable.html#v:for_\" rel=\"nofollow noreferrer\"><code>for_</code></a>. I prefer <code>for_</code> since it looks more like the \"enhanced for-loop\" from languages like Java.</p>\n\n<pre><code>import Data.Foldable (for_)\n\nmyPutStr :: [(Double,String)] -&gt; IO ()\nmyPutStr vals = do\n    for_ vals $ \\(num, str) -&gt; do\n        putStr str\n        putStr \": \"\n        print (num * 1.15) -- increase num by 15%\n    putStrLn \"Done\"\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 10007392, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-J3Kr8M8h_EI/AAAAAAAAAAI/AAAAAAAAABU/pfsSBRQzFpc/photo.jpg?sz=128", "display_name": "Cereegolas", "link": "https://stackoverflow.com/users/10007392/cereegolas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "closed_date": 1530231500, "accepted_answer_id": 51091516, "answer_count": 1, "score": -7, "last_activity_date": 1530221548, "creation_date": 1530213536, "last_edit_date": 1530217219, "question_id": 51089945, "link": "https://stackoverflow.com/questions/51089945/haskell-tuple-double-string", "closed_reason": "Needs more focus", "title": "Haskell, tuple (double, string)", "body": "<p>i need a little help. </p>\n\n<p>Input : (double, string) tuple</p>\n\n<p>Output:\n - in new lines the strings + \":\"  + \" \" + 15% increased real number, at the end in new line \"Done\"</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <p>myPutStr [(210.0,\"Converse\"),(315.0,\"Crocs\"),(250.0,\"Lacoste\"),(275.5,\"Under Armour\")] </p>\n</blockquote>\n\n<p>Output:</p>\n\n<p>Converse: 241.0</p>\n\n<p>Crocs: 362.0</p>\n\n<p>Lacoste: 287.0</p>\n\n<p>Under Armour: 316.825</p>\n\n<p>Done</p>\n"}, {"tags": ["haskell", "syntactic-sugar", "gadt"], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530217888, "post_id": 51090591, "comment_id": 89169895, "body": "@WheatWizard I added a completely GADT-free version. Note that we still need to enable <code>~</code> constraints, somehow (I used <code>TypeFamilies</code> to do that). Anyway, you can&#39;t completely encode GADTs in plain Haskell, they do extend the type system. The article you linked only points out that a GADT can be desugared into existentials+<code>~</code>. I think my first GADT-like makes it clearer, because the whole point of a GADT is to return different types in the constructors, but (apparently) the GADT above does not do that -- it only does so after you consider the <code>~</code> constraints."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1530217636, "last_edit_date": 1530217636, "creation_date": 1530216753, "answer_id": 51090591, "question_id": 51089784, "link": "https://stackoverflow.com/questions/51089784/how-can-i-desugar-my-gadts/51090591#51090591", "title": "How can I desugar my GADTs?", "body": "<p>You could desugar your GADT into this one:</p>\n\n<pre><code>data HList t where\n  Empty :: t ~ '[]      =&gt; HList t\n  Cons  :: t ~ (a ': b) =&gt; a -&gt; HList b -&gt; HList t\n</code></pre>\n\n<p>This is no longer a \"real\" GADT, since every constructor returns the general type <code>HList t</code>, like it happens in plain old algebraic data types.</p>\n\n<p>The trick is that the type variable <code>t</code> looks unconstrained in the result type <code>HList t</code>, but is actually restricted by the type equality constraints <code>t ~ ...</code>, so to obtain the same semantics as the original type.</p>\n\n<p>If you want to remove the GADT syntax completely, you can do as follows. You'll still need to turn on some extensions to use <code>~</code> constraints.</p>\n\n<pre><code>{-# LANGUAGE DataKinds, TypeOperators, TypeFamilies, ExistentialQuantification #-}\ndata HList2 t\n   = t ~ '[] =&gt; Empty2\n   | forall a b .  t ~ (a ': b) =&gt; Cons2 a (HList2 b)\n</code></pre>\n\n<p>The paper you mention is probably pointing out that, since <code>t</code> is involved in equality constraints, it has a nominal role.</p>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 51090591, "answer_count": 1, "score": 4, "last_activity_date": 1530217998, "creation_date": 1530212885, "last_edit_date": 1530217998, "question_id": 51089784, "link": "https://stackoverflow.com/questions/51089784/how-can-i-desugar-my-gadts", "title": "How can I desugar my GADTs?", "body": "<p>I was reading <a href=\"http://reasonablypolymorphic.com/blog/roles/\" rel=\"nofollow noreferrer\">Coercions and Roles for Dummies</a> and the author off handedly mentioned that GADTs were just syntactic sugar.</p>\n\n<blockquote>\n  <p>GADTs are syntactic sugar on top of <code>(~)</code> so expect GADTs to have nominal role type parameters. </p>\n</blockquote>\n\n<p>Now the author didn't go into this any further because this wasn't the point of the blog post.  However I am intrigued.  How can I go about desugaring my GADTs?</p>\n\n<p>For example here is a simple Heterogeneous list using a GADT.</p>\n\n<pre><code>{-# Language GADTs, DataKinds, TypeOperators #-}\n\ndata HList a where\n  Empty :: HList '[]\n  Cons  :: a -&gt; HList b -&gt; HList (a ': b)\n</code></pre>\n\n<p>What would the desugared version look like?</p>\n"}, {"tags": ["string", "haskell", "text", "ascii"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1530211932, "post_id": 51089523, "comment_id": 89167430, "body": "Haskell&#39;s <code>Char</code> type is Unicode, not ASCII. Does that have any impact on your question?"}, {"owner": {"reputation": 917, "user_id": 1667423, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/3ff1fb6d7b142bca9bb38ec7abd66184?s=128&d=identicon&r=PG", "display_name": "user76284", "link": "https://stackoverflow.com/users/1667423/user76284"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1530212510, "post_id": 51089523, "comment_id": 89167665, "body": "@Carl I suppose it doesn&#39;t really matter for my use case. I&#39;ve edited the question to reflect this."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1530213371, "post_id": 51089523, "comment_id": 89168064, "body": "<code>filter isPunctuation $ map chr [0..0x10FFFF]</code> etc"}, {"owner": {"reputation": 917, "user_id": 1667423, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/3ff1fb6d7b142bca9bb38ec7abd66184?s=128&d=identicon&r=PG", "display_name": "user76284", "link": "https://stackoverflow.com/users/1667423/user76284"}, "edited": false, "score": 0, "creation_date": 1530216092, "post_id": 51089523, "comment_id": 89169204, "body": "What I&#39;m looking for is <code>filter isPrint $ map chr [0..128]</code>. Thanks!"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1530216930, "post_id": 51089523, "comment_id": 89169506, "body": "Why <code>map chr</code> when you can <code>[&#39;\\0&#39; .. &#39;\\128&#39;]</code> directly?"}, {"owner": {"reputation": 917, "user_id": 1667423, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/3ff1fb6d7b142bca9bb38ec7abd66184?s=128&d=identicon&r=PG", "display_name": "user76284", "link": "https://stackoverflow.com/users/1667423/user76284"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1530217547, "post_id": 51089523, "comment_id": 89169746, "body": "@melpomene Even better, thanks."}], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 0, "last_activity_date": 1530826537, "creation_date": 1530826537, "answer_id": 51200195, "question_id": 51089523, "link": "https://stackoverflow.com/questions/51089523/string-constants-in-haskell/51200195#51200195", "title": "String constants in Haskell", "body": "<p><a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Char.html#v:isControl\" rel=\"nofollow noreferrer\">Data.Char</a> has predicates for punctuation, whitespace, and all of the Unicode character classes.  As others suggested in comments, you can use these with <code>filter</code>, and restrict the list to ASCII if that is all you want.</p>\n"}], "owner": {"reputation": 917, "user_id": 1667423, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/3ff1fb6d7b142bca9bb38ec7abd66184?s=128&d=identicon&r=PG", "display_name": "user76284", "link": "https://stackoverflow.com/users/1667423/user76284"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 90, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1530826537, "creation_date": 1530211712, "last_edit_date": 1530212471, "question_id": 51089523, "link": "https://stackoverflow.com/questions/51089523/string-constants-in-haskell", "title": "String constants in Haskell", "body": "<p>Does Haskell have a function for getting a list of all punctuation characters, and all whitespace characters, like Python's <a href=\"https://docs.python.org/3/library/string.html#string-constants\" rel=\"nofollow noreferrer\">string constants</a>? </p>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "edited": false, "score": 1, "creation_date": 1530257657, "post_id": 51087728, "comment_id": 89180737, "body": "<code>Prop</code>&#39;s data constructors should start with an upper case letter"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1530204074, "creation_date": 1530204074, "answer_id": 51087830, "question_id": 51087728, "link": "https://stackoverflow.com/questions/51087728/cannot-construct-inifnite-type/51087830#51087830", "title": "Cannot construct inifnite type", "body": "<p>This looks wrong</p>\n\n<pre><code>fold_wrap v x z (Mrappe l r)   = v ( v(v x z l) v(v x z r) )\n</code></pre>\n\n<p><code>v</code> takes two <code>a</code> arguments, and <code>x, z, l</code> are <em>three</em> arguments instead. Moreover <code>x, l</code> have not type <code>a</code>. \nIndeed, <code>x</code> has type <code>Prop -&gt; a</code>, and equating <code>a ~ Prop -&gt; a</code> causes the invalid \"infinite\" type.</p>\n\n<p>You instead want to recurse there:</p>\n\n<pre><code>fold_wrap v x z (Mrappe l r)   = v (fold_wrap v x z l) (fold_wrap v x z r)\n</code></pre>\n"}], "owner": {"reputation": 966, "user_id": 5669167, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2cc0p.jpg?s=128&g=1", "display_name": "zython", "link": "https://stackoverflow.com/users/5669167/zython"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 51087830, "answer_count": 1, "score": 0, "last_activity_date": 1530204074, "creation_date": 1530203646, "question_id": 51087728, "link": "https://stackoverflow.com/questions/51087728/cannot-construct-inifnite-type", "title": "Cannot construct inifnite type", "body": "<pre><code>data Prop = a | b | c | d \n      deriving (Show, Eq)\n\ndata Wrapper =\n      Wtail\n      | Wrap prop\n      | Mrappe Wrapper Wrapper\n      deriving (Show, Eq)\n\n\nfold_wrap :: (a -&gt; a -&gt; a) -&gt; (Prop -&gt; a) -&gt; a -&gt; Wrapper -&gt; a\n\nfold_wrap v x z (Mrappe l r)   = v ( v(v x z l) v(v x z r) )\nfold_wrap v x z (Wrap f)       = x f \nfold_warp v x z (Wtail )       = z\n</code></pre>\n\n<p>I'm getting the following error with the above code:</p>\n\n<pre><code>ghc mast.hs\n[1 of 1] Compiling Main             ( mast.hs, mast.o )\n\nmast.hs:13:39: error:\n    \u2022 Occurs check: cannot construct the infinite type: a ~ Prop -&gt; a\n    \u2022 In the first argument of \u2018v\u2019, namely \u2018x\u2019\n      In the first argument of \u2018v\u2019, namely \u2018(v x z l)\u2019\n      In the first argument of \u2018v\u2019, namely \u2018(v (v x z l) v (v x z r))\u2019\n    \u2022 Relevant bindings include\n        z :: a (bound at mast.hs:13:15)\n        x :: Prop -&gt; a (bound at mast.hs:13:13)\n        v :: a -&gt; a -&gt; a (bound at mast.hs:13:11)\n        fold_mast :: (a -&gt; a -&gt; a) -&gt; (Prop -&gt; a) -&gt; a -&gt; Wrapper -&gt; a\n          (bound at mast.hs:13:1)\n   |\n13 | fold_mast v x z (Wrapper l r)  = v ( v(v x z l) v(v x z r) )\n   |                                       ^\n</code></pre>\n\n<p>I've looked at:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/795317/why-does-this-haskell-code-produce-the-infinite-type-error\">Why does this Haskell code produce the &quot;infinite type&quot; error?</a></p>\n\n<p>And if I understand correctly I cannot put my <code>v</code> function into my <code>fold_wrap</code> as it would allow infinite recursion.</p>\n\n<p>The method <code>fold_wrap</code> should fold the treelike structure <code>Wrapper</code>, where <code>wtail</code> should point to a preconfigured constant value, <code>Wrap</code> has a value and <code>Mrappe</code> is what enables the data structure to be tree like. </p>\n\n<p>My question is: </p>\n\n<p>How do I avoid this \"cannot construct the infinite type\" error ?</p>\n"}, {"tags": ["haskell", "if-statement"], "comments": [{"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 1, "creation_date": 1530196936, "post_id": 51085642, "comment_id": 89159740, "body": "<code>y</code> is defined in the first branch of your expression, but used in the second half. What are you expecting to happen?"}, {"owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "reply_to_user": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1530197635, "post_id": 51085642, "comment_id": 89160226, "body": "I was thinking that I could use <code>y</code> as sort of storage for the expressions I&#39;m using to add up the elements of the list. I couldn&#39;t think of another way to do it..."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 2, "creation_date": 1530197773, "post_id": 51085642, "comment_id": 89160333, "body": "Take a look at <a href=\"http://learnyouahaskell.com/chapters\" rel=\"nofollow noreferrer\">Learn You a Haskell</a>, it will walk you through basics of syntax and problem solving."}, {"owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "reply_to_user": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1530197983, "post_id": 51085642, "comment_id": 89160492, "body": "I&#39;ve been teaching myself with that and @haskellbook, any other good resources?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 1, "creation_date": 1530201938, "post_id": 51085642, "comment_id": 89162992, "body": "Remember that you&#39;re working in a <i>purely functional language</i> now. There&#39;s no such thing as &quot;storage&quot; or &quot;variables&quot; (at least, not in the usual sense). It&#39;s a huge adjustment to make, but in order to program efficiently in Haskell, you have to get used to that paradigm shift."}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530197332, "post_id": 51085737, "comment_id": 89160011, "body": "A previous error that showed up was when I didn&#39;t have either <code>let</code>. What is an alternative that would still do those operations?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "reply_to_user": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530197363, "post_id": 51085737, "comment_id": 89160030, "body": "@VeganJoy What do you mean by &quot;those operations&quot;? Alternative to what?"}, {"owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530197524, "post_id": 51085737, "comment_id": 89160130, "body": "I was referring to the expressions after <code>let</code> in both cases where I used it, and I don&#39;t really know a lot of functions. What else could I use there, or is <code>in</code> applicable here?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "reply_to_user": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530197878, "post_id": 51085737, "comment_id": 89160422, "body": "@VeganJoy I have no idea what you&#39;re trying to do there. You&#39;re defining <code>y</code> to be the sum of <code>x</code> and the first element of <code>xs</code>, but <code>x</code> doesn&#39;t exist. Then you&#39;re defining <code>xs</code> to be its own tail. I can&#39;t tell you what to use instead because I don&#39;t understand what you&#39;re trying to do or how any of this would help you with summing up a list."}, {"owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530198269, "post_id": 51085737, "comment_id": 89160680, "body": "Um... I don&#39;t know what I was thinking with <code>x</code>. I&#39;m trying to take the first part of the list, add it to a variable, then get rid of the first element of <code>xs</code> and repeat until it&#39;s empty. Once it&#39;s empty I planned on having it print the variable which had been added to."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "reply_to_user": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530198313, "post_id": 51085737, "comment_id": 89160709, "body": "@VeganJoy That&#39;s not how Haskell works. You can&#39;t modify variables."}, {"owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530198422, "post_id": 51085737, "comment_id": 89160774, "body": "Uh oh... I think I&#39;ll go back to reading for a while, thanks for your help though!"}], "tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 4, "last_activity_date": 1530196966, "creation_date": 1530196966, "answer_id": 51085737, "question_id": 51085642, "link": "https://stackoverflow.com/questions/51085642/haskell-simple-if-then-else-error/51085737#51085737", "title": "Haskell simple If-then-else error", "body": "<p>The syntax for a <code>let</code> expression is <code>let <i>BINDINGS</i> in <i>EXPRESSION</i></code>, e.g.</p>\n\n<pre><code>let x = 21 in x + x\n</code></pre>\n\n<p>It's probably complaining about <code>else</code> because it was expecting to see <code>in</code>.</p>\n\n<p>There's a form of <code>let</code> without <code>in</code>, but that only works in <code>do</code> blocks (or list comprehensions).</p>\n"}, {"comments": [{"owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530197177, "post_id": 51085783, "comment_id": 89159896, "body": "I&#39;ve seen the recursive syntax before but I don&#39;t know how it works. Can you elaborate? Edit: Also in the third line where I&#39;m defining the types should that be a <code>IO ()</code> instead of <code>Int</code>?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "edited": false, "score": 0, "creation_date": 1530201798, "post_id": 51085783, "comment_id": 89162906, "body": "@VeganJoy You shouldn&#39;t have an <code>IO</code> anywhere in your <code>summ</code> function. The compiler may have suggested that, because you had a stray <code>print</code> call in there, but you don&#39;t want to <code>print</code> inside your <code>summ</code> function; you want to simply return the value and let <code>main</code> print it out or do whatever it wants to it."}], "tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 4, "last_activity_date": 1530198327, "last_edit_date": 1530198327, "creation_date": 1530197100, "answer_id": 51085783, "question_id": 51085642, "link": "https://stackoverflow.com/questions/51085642/haskell-simple-if-then-else-error/51085783#51085783", "title": "Haskell simple If-then-else error", "body": "<p>That doesn't look quite right to me. <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#v:print\" rel=\"nofollow noreferrer\"><code>print</code></a> returns <code>IO ()</code>, which isn't <code>Int</code>, and the <code>let</code> section doesn't seem to lead up to an expression at all, and <code>x</code> wasn't defined. Were you attempting to write a recursive function?</p>\n\n<pre><code>summ [] = 0\nsumm (x:xs) = x + summ xs\n</code></pre>\n\n<p>The recursion isn't syntax; this simply uses two partial function definitions with pattern matching. One of them calls <code>summ</code> again, which is recursion, and eventually (given a finite list) that call will lead to the simpler, non-recursive function. The pattern also deconstructs the list into head and tail, so the function is equivalent to:</p>\n\n<pre><code>summ xs = if null xs\n          then 0\n          else head xs + summ (tail xs)\n</code></pre>\n\n<p>Note that both <code>then</code> and <code>else</code> branches are expressions of the same type. </p>\n\n<p>Each of these definitions have type <code>summ :: Num t =&gt; [t] -&gt; t</code></p>\n"}], "owner": {"reputation": 23, "user_id": 10006219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4011a9a08672cfb04ff25273396c5af4?s=128&d=identicon&r=PG&f=1", "display_name": "VeganJoy", "link": "https://stackoverflow.com/users/10006219/veganjoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 0, "accepted_answer_id": 51085737, "answer_count": 2, "score": 0, "last_activity_date": 1530655862, "creation_date": 1530196673, "last_edit_date": 1530655862, "question_id": 51085642, "link": "https://stackoverflow.com/questions/51085642/haskell-simple-if-then-else-error", "title": "Haskell simple If-then-else error", "body": "<p>I'm really new to Haskell and programming in general. I'm trying to add up the contents of a list without using the <code>sum</code> function from Data.List. Here's what I've got so far:</p>\n\n<pre><code>module Summ\n    where\nsumm :: [Int] -&gt; Int\nsumm xs = \n  if null xs == False\n    then let y = x + (head xs)\n         let xs = tail xs\n    else print y\n</code></pre>\n\n<p>I'm pretty sure there's a lot wrong with this code, but for now the latest error is \"parse error on input\" for the <code>else</code> statement. What's wrong?</p>\n"}, {"tags": ["haskell", "currying"], "comments": [{"owner": {"reputation": 2613, "user_id": 9156061, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e69150721b719cef2eb990fc78bc9cc0?s=128&d=identicon&r=PG&f=1", "display_name": "mdatsev", "link": "https://stackoverflow.com/users/9156061/mdatsev"}, "edited": false, "score": 2, "creation_date": 1530188409, "post_id": 51082680, "comment_id": 89153910, "body": "Haskell functions are always curried."}, {"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "reply_to_user": {"reputation": 2613, "user_id": 9156061, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e69150721b719cef2eb990fc78bc9cc0?s=128&d=identicon&r=PG&f=1", "display_name": "mdatsev", "link": "https://stackoverflow.com/users/9156061/mdatsev"}, "edited": false, "score": 0, "creation_date": 1530189275, "post_id": 51082680, "comment_id": 89154453, "body": "I edited my question see the last example"}, {"owner": {"reputation": 2531, "user_id": 6084317, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4295c9b1ada748080d7a123f7263ae69?s=128&d=identicon&r=PG&f=1", "display_name": "Edward Minnix", "link": "https://stackoverflow.com/users/6084317/edward-minnix"}, "edited": false, "score": 0, "creation_date": 1530189444, "post_id": 51082680, "comment_id": 89154548, "body": "I added some more detail to my answer @simplesystems"}], "answers": [{"comments": [{"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530188919, "post_id": 51082767, "comment_id": 89154249, "body": "Really, every function is curried?"}, {"owner": {"reputation": 2531, "user_id": 6084317, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4295c9b1ada748080d7a123f7263ae69?s=128&d=identicon&r=PG&f=1", "display_name": "Edward Minnix", "link": "https://stackoverflow.com/users/6084317/edward-minnix"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 2, "creation_date": 1530189100, "post_id": 51082767, "comment_id": 89154358, "body": "Yes. The way the language sees it is that every function takes in one parameter and gives one output <code>minCur a b = ...</code> is syntactic sugar for <code>minCur = \\a -&gt; (\\b -&gt; ...</code> There is no such thing as an uncurried function (the only way to simulate this is with tuples/product types, so the user has to provide one value with all of the data at once. <code>min (a, b) = ...</code>"}, {"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530189245, "post_id": 51082767, "comment_id": 89154434, "body": "ah I just edited the question so the Tuple input wouldn&#39;t be a curried function? Or is it just a function which doesnt make use of currying?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1530189668, "post_id": 51082767, "comment_id": 89154688, "body": "I see where you&#39;re going with this answer, but \u201cevery function is curried\u201d just doesn&#39;t make sense as such. A function that only takes one primitive argument and gives one primitive result can&#39;t possibly be curried or uncurried. The crucial point is that in Haskell, <i>every</i> function only takes a single argument and gives a single result, but neither of these needs to be primitive."}, {"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530190498, "post_id": 51082767, "comment_id": 89155226, "body": "So the statement, every function is curried is not correct? Is it better to say Every function in Haskell takes just one argument?"}, {"owner": {"reputation": 2531, "user_id": 6084317, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4295c9b1ada748080d7a123f7263ae69?s=128&d=identicon&r=PG&f=1", "display_name": "Edward Minnix", "link": "https://stackoverflow.com/users/6084317/edward-minnix"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1530190635, "post_id": 51082767, "comment_id": 89155318, "body": "@leftaroundabout where did I state that the types had to be primitive?"}], "tags": [], "owner": {"reputation": 2531, "user_id": 6084317, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4295c9b1ada748080d7a123f7263ae69?s=128&d=identicon&r=PG&f=1", "display_name": "Edward Minnix", "link": "https://stackoverflow.com/users/6084317/edward-minnix"}, "is_accepted": false, "score": 4, "last_activity_date": 1530190839, "last_edit_date": 1530190839, "creation_date": 1530188414, "answer_id": 51082767, "question_id": 51082680, "link": "https://stackoverflow.com/questions/51082680/haskell-how-to-recognize-a-curried-function/51082767#51082767", "title": "Haskell: How to recognize a curried function?", "body": "<p>It does not matter, since <strong>every</strong> function that takes more than one argument is a curried function. In Haskell, every function takes a single parameter and returns a single value (<code>a -&gt; b -&gt; c</code> is the same as <code>a -&gt; (b -&gt; c)</code>).</p>\n\n<p>There shouldn't be a reason for the user to care whether the function is curried or not.</p>\n\n<p>The two function definitions you provided are considered to be the same function. The user shouldn't need to care beyond what the behavior of <code>minCur</code> is and what type it has.</p>\n\n<p>In the case of the version with the tuple, it has a different type. So</p>\n\n<pre><code> min (a, b) = if a &gt; b then b else a\n min :: Ord p =&gt; (p, p) -&gt; p\n</code></pre>\n\n<p>And the types <code>(a, a) -&gt; a</code> and <code>a -&gt; a -&gt; a</code> are incompatible. You cannot curry the function with the tuple because it only has one parameter anyway and does not return a function type.</p>\n"}, {"comments": [{"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530191776, "post_id": 51083590, "comment_id": 89156088, "body": "is there a possibility to see the source of those library functions?"}, {"owner": {"reputation": 2531, "user_id": 6084317, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4295c9b1ada748080d7a123f7263ae69?s=128&d=identicon&r=PG&f=1", "display_name": "Edward Minnix", "link": "https://stackoverflow.com/users/6084317/edward-minnix"}, "edited": false, "score": 1, "creation_date": 1530193308, "post_id": 51083590, "comment_id": 89157258, "body": "Since it&#39;s open source, you can find it online. But a function like <code>uncurry</code> would probably looks like <code>uncurry f (a, b) = f a b</code> and <code>curry</code> would look like <code>curry f a b = f (a, b)</code>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530199615, "post_id": 51083590, "comment_id": 89161580, "body": "@simplesystems Use <a href=\"https://hoogle.haskell.org/\" rel=\"nofollow noreferrer\">hoogle.haskell.org</a> to search any library function, and then click on the &quot;source&quot; link next to the function type."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1530190825, "creation_date": 1530190825, "answer_id": 51083590, "question_id": 51082680, "link": "https://stackoverflow.com/questions/51082680/haskell-how-to-recognize-a-curried-function/51083590#51083590", "title": "Haskell: How to recognize a curried function?", "body": "<p>In the libraries, we have a function <code>curry</code> which transforms</p>\n\n<pre><code>f :: (A,B) -&gt; C\nf (a,b) = ...\n</code></pre>\n\n<p>into <code>g = curry f</code>, defined as</p>\n\n<pre><code>g :: A -&gt; B -&gt; C\ng a b = ...\n</code></pre>\n\n<p>We also have the inverse transformation, called <code>uncurry</code> which maps <code>g</code> back into <code>f = uncurry g</code>.</p>\n\n<p>Sometimes, functions like <code>g</code> are called \"curried\" and functions like <code>f</code> are called \"uncurried\". This way of speaking is a bit informal since we should instead say, more properly, \"<code>g</code> is the curried form of <code>f</code>\" and \"<code>f</code> is the uncurried form of <code>g</code>\".</p>\n\n<p>There is no perfect distinction between \"curried\" and \"uncurried\" functions on ther own. For instance, <code>h :: (A,B) -&gt; C -&gt; D</code> can be seen as the currying of <code>h1 :: ((A,B),C) -&gt; D</code> or the uncurrying of <code>h2 :: A -&gt; B -&gt; C -&gt; D</code>, so it would be both curried and uncurred at the same time.</p>\n\n<p>Often, though, we say that a function is curried or not depending on whether it takes a tuple as a single argument or its components as separate arguments. Again, this is a bit informal.</p>\n\n<p>When choosing which style to follow, in Haskell we prefer the curried form since it is easier to apply partially.</p>\n"}], "owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "accepted_answer_id": 51083590, "answer_count": 2, "score": 0, "last_activity_date": 1530190839, "creation_date": 1530188139, "last_edit_date": 1530189156, "question_id": 51082680, "link": "https://stackoverflow.com/questions/51082680/haskell-how-to-recognize-a-curried-function", "title": "Haskell: How to recognize a curried function?", "body": "<p>Given the following two functions:</p>\n\n<pre><code>minCur a = (\\b -&gt; if a &gt; b then b else a)\n\nminCur a b = if a &gt; b then b else a\n</code></pre>\n\n<p>Asking for the type results for both the same:</p>\n\n<pre><code>minCur :: Ord p =&gt; p -&gt; p -&gt; p\n</code></pre>\n\n<p>How does the User of the function know if he is dealing with a curried function? Does it even matter?</p>\n\n<p>Edit:</p>\n\n<p>Is this currying?</p>\n\n<pre><code>minCur (a,b) = if a &gt; b then b else a\n</code></pre>\n"}, {"tags": ["haskell", "currying"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1530187153, "creation_date": 1530187153, "answer_id": 51082370, "question_id": 51082300, "link": "https://stackoverflow.com/questions/51082300/haskell-currying-simple-example/51082370#51082370", "title": "Haskell Currying Simple Example", "body": "<p><code>a -&gt; b -&gt; c</code> is exactly the same type as <code>a -&gt; (b -&gt; c)</code>. When printing the type, parentheses are omitted for improving readability.</p>\n\n<p><code>(a -&gt; b) -&gt; c</code> instead is always printed with parentheses, otherwise it could be confused with the other type.</p>\n"}, {"comments": [{"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530187523, "post_id": 51082372, "comment_id": 89153340, "body": "what is if I have an example: notCur a b = if a &gt; b then b else a and asking for the type which results in the same as the curried version :: Ord a =&gt; a -&gt; a -&gt; a  so how could I know (as user of the function) if it there is a curried implementation or not behind?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530187601, "post_id": 51082372, "comment_id": 89153380, "body": "@simplesystems If you have another question, do not ask it in the comments, but rather open another question."}], "tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 2, "last_activity_date": 1530187566, "last_edit_date": 1530187566, "creation_date": 1530187156, "answer_id": 51082372, "question_id": 51082300, "link": "https://stackoverflow.com/questions/51082300/haskell-currying-simple-example/51082372#51082372", "title": "Haskell Currying Simple Example", "body": "<p>In Haskell, <code>-&gt;</code> is what we call 'right associative', meaning these two things are equivalent:</p>\n\n<pre><code>foo :: a -&gt; (b -&gt; c)\nfoo :: a -&gt; b -&gt; c\n</code></pre>\n\n<p>In other words, when the compiler sees <code>minCur :: Ord a =&gt; a -&gt; a -&gt; a</code>, it reads <code>minCur :: Ord a =&gt; a -&gt; (a -&gt; a)</code> as you expected. So, your expectation was correct and was actually fufilled.</p>\n\n<p>This is done for readability and ease of writing, since putting on more brackets every time you need a new argument is tiresome.</p>\n"}], "owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1530187566, "creation_date": 1530186912, "question_id": 51082300, "link": "https://stackoverflow.com/questions/51082300/haskell-currying-simple-example", "title": "Haskell Currying Simple Example", "body": "<p>I have defined a Function minCurr:</p>\n\n<pre><code>minCur a = (\\b -&gt; if a &gt; b then b else a)\n</code></pre>\n\n<p>When asking for the type of minCur I get </p>\n\n<pre><code>minCur :: Ord a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>What I expected is something like</p>\n\n<pre><code>minCur :: Ord a =&gt; a -&gt; (a-&gt;a)\n</code></pre>\n\n<p>Why is this?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 948, "user_id": 6786713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca60202ee069ceb93cce62ae8398c3af?s=128&d=identicon&r=PG&f=1", "display_name": "HamzaNig", "link": "https://stackoverflow.com/users/6786713/hamzanig"}, "edited": false, "score": 0, "creation_date": 1530186473, "post_id": 51082067, "comment_id": 89152573, "body": "can you put the output you need"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1530186902, "post_id": 51082067, "comment_id": 89152923, "body": "If your tuples represent some sort of non-abstract data, it might be worth it to define your own datatype like so: <code>data MyType = MyType {foo :: Int, bar :: Int, baz :: Int}</code>, and so instead of using <code>(==1) . fst</code> you use <code>(==1) . foo</code>. This also makes your type annotations more easily understood."}, {"owner": {"reputation": 13, "user_id": 10005313, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-AIm3mk3Phus/AAAAAAAAAAI/AAAAAAAAABM/E7f-rcJVl8c/photo.jpg?sz=128", "display_name": "photonicDog", "link": "https://stackoverflow.com/users/10005313/photonicdog"}, "reply_to_user": {"reputation": 948, "user_id": 6786713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca60202ee069ceb93cce62ae8398c3af?s=128&d=identicon&r=PG&f=1", "display_name": "HamzaNig", "link": "https://stackoverflow.com/users/6786713/hamzanig"}, "edited": false, "score": 0, "creation_date": 1530208125, "post_id": 51082067, "comment_id": 89166036, "body": "@NigHamza Well, the output would just be <code>[(1,2,3)]</code>, but this isn&#39;t representative of my specific issue, I just made the question more general so people using it as a resource will find it easier to read. Also thank you @AJFarmar for the helpful addition! In my own code I did this but I didn&#39;t want to muddy the question up too much."}], "answers": [{"tags": [], "owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "is_accepted": true, "score": 1, "last_activity_date": 1530186344, "creation_date": 1530186344, "answer_id": 51082123, "question_id": 51082067, "link": "https://stackoverflow.com/questions/51082067/filter-through-a-list-of-3or-greater-tuples-based-on-an-element/51082123#51082123", "title": "Filter through a list of 3(or greater)-tuples based on an element", "body": "<p>With static typing, the simplest way is probably to type all the commas manually:</p>\n\n<pre><code>filter (\\(x,_,_) -&gt; x == 1) [(1,2,3),(4,5,6),(7,8,9)]\n</code></pre>\n\n<p>(You can try to automate this, e.g. writing a generic version of <code>fst</code> as a class method, but then you'll need to manually state that every tuple size is an instance of this class.)</p>\n"}, {"tags": [], "owner": {"reputation": 49, "user_id": 8032145, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZhdmO.jpg?s=128&g=1", "display_name": "wul", "link": "https://stackoverflow.com/users/8032145/wul"}, "is_accepted": false, "score": 0, "last_activity_date": 1531047082, "creation_date": 1531047082, "answer_id": 51231228, "question_id": 51082067, "link": "https://stackoverflow.com/questions/51082067/filter-through-a-list-of-3or-greater-tuples-based-on-an-element/51231228#51231228", "title": "Filter through a list of 3(or greater)-tuples based on an element", "body": "<p>You can use the lens library, which provide a Lens to operate on tuple.</p>\n\n<pre><code>import Control.Lens\n\nfilter ((== 1) . (^. _1)) [(1, 2, 3), (4, 5, 6), (7, 8, 9)]\n</code></pre>\n\n<p>Lens use type classes like Field1 Field2 ... to make code above possible.</p>\n"}], "owner": {"reputation": 13, "user_id": 10005313, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-AIm3mk3Phus/AAAAAAAAAAI/AAAAAAAAABM/E7f-rcJVl8c/photo.jpg?sz=128", "display_name": "photonicDog", "link": "https://stackoverflow.com/users/10005313/photonicdog"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 51082123, "answer_count": 2, "score": 1, "last_activity_date": 1531047082, "creation_date": 1530186168, "question_id": 51082067, "link": "https://stackoverflow.com/questions/51082067/filter-through-a-list-of-3or-greater-tuples-based-on-an-element", "title": "Filter through a list of 3(or greater)-tuples based on an element", "body": "<p>Let's say I have a list of 3-tuples, like:</p>\n\n<p><code>[(1,2,3),(4,5,6),(7,8,9)]</code></p>\n\n<p>What would be a way to <code>filter</code> through these if I wanted to, say, find every item where its first element is <code>1</code>. <code>filter ((==1).fst)</code> can't be used as the tuples' lengths are not equal to 2. I've had some ideas but I can't seem to progress them into workable code, so I wanted to see if there were a better solution someone more knowledgable with this language could suggest.</p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 2, "creation_date": 1530183858, "post_id": 51079162, "comment_id": 89150849, "body": "The benefit is that you can embed side effects."}], "answers": [{"comments": [{"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530178908, "post_id": 51079410, "comment_id": 89147727, "body": "In your example 1 + 4 - 5, Why does it matter if the values are lines in a file or not? The calculation would be the same, no?"}, {"owner": {"reputation": 84157, "user_id": 238978, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a633afaf19e6d4bb53ee50b62e3b5397?s=128&d=identicon&r=PG", "display_name": "Emil Vikstr&#246;m", "link": "https://stackoverflow.com/users/238978/emil-vikstr%c3%b6m"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530179015, "post_id": 51079410, "comment_id": 89147784, "body": "Imagine this: <code>(readInt f) + (readInt f) - (readInt f)</code>. The function <code>readInt</code> gets the same parameter every time, so if it were pure you would get the same result from all three calls. Now you don&#39;t because it reads from the outside world, and then it becomes important in what order you execute the <code>readInt</code> calls."}, {"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530181123, "post_id": 51079410, "comment_id": 89149158, "body": "yes but f could be a different value every time? I mean I can read three ints a,b,c from a file and then do a + b - c"}, {"owner": {"reputation": 84157, "user_id": 238978, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a633afaf19e6d4bb53ee50b62e3b5397?s=128&d=identicon&r=PG", "display_name": "Emil Vikstr&#246;m", "link": "https://stackoverflow.com/users/238978/emil-vikstr%c3%b6m"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530181432, "post_id": 51079410, "comment_id": 89149317, "body": "If you <i>literally</i> have my example and <code>f</code> is the same file handle every time, you would expect to get back the same value for all three calls."}, {"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "reply_to_user": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 1, "creation_date": 1530183614, "post_id": 51079410, "comment_id": 89150694, "body": "It might help to understand purity if you consider the difference between methods and functions. A function is a mapping from an input to an output; given the same input a function will always produce the same output. Since reading from a file requires the IO monad (enter side effects), the call from f might not produce the same results, as the file might have changed between calls. @simplesystems"}, {"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "reply_to_user": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1530183882, "post_id": 51079410, "comment_id": 89150869, "body": "@RobertK thanks this makes more sense... But you say the file might have changed, if the file changed then it would not be the same Input and logically the function would return an other value/result. What am I missing?"}, {"owner": {"reputation": 84157, "user_id": 238978, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a633afaf19e6d4bb53ee50b62e3b5397?s=128&d=identicon&r=PG", "display_name": "Emil Vikstr&#246;m", "link": "https://stackoverflow.com/users/238978/emil-vikstr%c3%b6m"}, "edited": false, "score": 0, "creation_date": 1530184730, "post_id": 51079410, "comment_id": 89151439, "body": "That&#39;s the point! Your function suddenly return another value due to outside state! You can consider the monad an argument to your function, in which case you are not missing anything at all."}, {"owner": {"reputation": 3567, "user_id": 4019871, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/7db9ac6bdc0a996dd01da64b3660f8b6?s=128&d=identicon&r=PG&f=1", "display_name": "Mas Bagol", "link": "https://stackoverflow.com/users/4019871/mas-bagol"}, "edited": false, "score": 1, "creation_date": 1530441447, "post_id": 51079410, "comment_id": 89230107, "body": "IO Monad is pure. A pure function is always give the same result with same parameter. In the case of IO monad, the extra parameter is the state of the entire world. If you have an IO monad, and <i>you able to give the exact same entire world state</i>, the result should be the same."}], "tags": [], "owner": {"reputation": 84157, "user_id": 238978, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a633afaf19e6d4bb53ee50b62e3b5397?s=128&d=identicon&r=PG", "display_name": "Emil Vikstr&#246;m", "link": "https://stackoverflow.com/users/238978/emil-vikstr%c3%b6m"}, "is_accepted": false, "score": 3, "last_activity_date": 1530179183, "last_edit_date": 1530179183, "creation_date": 1530178401, "answer_id": 51079410, "question_id": 51079162, "link": "https://stackoverflow.com/questions/51079162/the-main-purpose-of-monads-haskell/51079410#51079410", "title": "The main purpose of Monads (Haskell)", "body": "<p>I/O is not pure. Reading the contents of a file, for example, can give different results at different points in time. Reading the current system time always gives different results. Generating a random number gives different results for each call. Apparently (or obviously) these kinds of operations depend on something <em>other</em> than their function parameters. Some kind of state. In the case of the IO monad this state even lies outside of the Haskell program!</p>\n\n<p>You can consider the monad to be an \"extra parameter\" to your function calls. So  every function in the IO monad also gets an argument \"containing\" the entire world outside of your program.</p>\n\n<p>You might wonder why this is important. One reason is that optimizations can change the order of execution in your program, as long as the semantic meaning stays the same. To calculate the expression <code>1 + 4 - 5</code> it does not matter if you do the addition or subtraction first. But if each of the values are lines in a file, it does matter in which order you read them: <code>(readInt f) + (readInt f) - (readInt f)</code>. The function <code>readInt</code> gets the same parameter every time, so if it were pure you would get the same result from all three calls. Now you don't because it reads from the outside world, and then it becomes important in what order you execute the <code>readInt</code> calls.</p>\n\n<p>For that reason you can consider the IO monad as a serialization mechanism. Two operations in the monad will always be done in the same order, because the order becomes important when talking to the outside world!</p>\n\n<p>The actual value of monads comes when you start to work outside them. Your pure program can pass around values that are \"boxed\" in a monad, and later lift out the value. Looking back at optimizations this allows the optimizer to optimize the pure code while  keeping the semantic meaning of the monads.</p>\n"}, {"tags": [], "owner": {"reputation": 34861, "user_id": 110081, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/cSvwm.jpg?s=128&g=1", "display_name": "Roman Cheplyaka", "link": "https://stackoverflow.com/users/110081/roman-cheplyaka"}, "is_accepted": false, "score": 17, "last_activity_date": 1530180086, "creation_date": 1530180086, "answer_id": 51080029, "question_id": 51079162, "link": "https://stackoverflow.com/questions/51079162/the-main-purpose-of-monads-haskell/51080029#51080029", "title": "The main purpose of Monads (Haskell)", "body": "<p>Thinking of monads as <em>things</em> (nouns) is a source of confusion. Monads are more like adjectives. You don't ask what 'blue' or 'thin' are good for. You find some useful things, like a blue book or a thin pen, and then you notice some patterns \u2014 some things are blue, some are thin, some are neither.</p>\n\n<p>Similarly with monads. To understand monads, you should first get some experience with the things that <em>are</em> monads: <code>Maybe</code>, <code>Either</code>, <code>Reader</code>, <code>State</code>. Understand how they work, what <code>&gt;&gt;=</code> and <code>return</code> do for them and how they are useful, but also how you can work with these types <em>without</em> using the Monad class. (For this reason, don't start with IO.) Then you will be ready to notice the commonalities between these different types and appreciate why they follow a common pattern that's called Monad.</p>\n\n<p>Monad is just a useful interface for various types, but you can't appreciate it until you're familiar with the types themselves, just like you can't appreciate the word 'blue' if you've never seen any blue things.</p>\n"}, {"comments": [{"owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "edited": false, "score": 0, "creation_date": 1530344984, "post_id": 51084874, "comment_id": 89212427, "body": "First thanks for the great explanation! How does the function commaParse work in your first example? where does it get his input from and what is it doing with it?"}], "tags": [], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "is_accepted": false, "score": 3, "last_activity_date": 1530555961, "last_edit_date": 1530555961, "creation_date": 1530194489, "answer_id": 51084874, "question_id": 51079162, "link": "https://stackoverflow.com/questions/51079162/the-main-purpose-of-monads-haskell/51084874#51084874", "title": "The main purpose of Monads (Haskell)", "body": "<p>The main purpose of monads is to ease the burden of working with computational contexts. </p>\n\n<p>Take parsing for example. In parsing we attempt to turn strings into data. And the Parser context is turning strings into data.</p>\n\n<p>In parsing, we might attempt to read a string as an integer. We can probably succeed if the string is \"123\", but may fail for the string \"3,6\". So failure is part of the context of parsing. Another part of parsing is handling the current location of the string that we are parsing, and that is also included in the \"context\". So if we want to parse an integer, then a comma, then another integer our monad helps us parse the above \"3,6\" with something like:</p>\n\n<pre><code>intCommaInt = do \n  i &lt;- intParse\n  commaParse\n  j &lt;- intParse\n  return (i,j)\n</code></pre>\n\n<p>The definition of the parser monad would need to handle some internal state of a string that is being parsed so that the first intParse will consume the \"3\", and pass the rest of the string, \",6\" to the rest of the parser. The monad helps by allowing the user to ignore passing the unparsed string around.</p>\n\n<p>To appreciate this, imagine writing some functions which manually passes the parsed string around.</p>\n\n<pre><code>commaParseNaive :: String -&gt; Maybe (String,())\ncommaParseNaive (',':str) = Just (str,())\ncommaParseNaive _         = Nothing\n\nintParseNaive :: String -&gt; Maybe (String,Int)\nintParseNaive str = ...\n</code></pre>\n\n<p>Note: I left <code>intParseNaive</code> unimplemented, because its more complex and \nyou can guess what it's supposed to do. I made the comma parse return a boring (), so that both functions have a similar interface, alluding to how they might both be the same type of monadic thing.</p>\n\n<p>Now to compose the two naive parsers above we connect the output of the previous parse to the input of the subsequent parse--if the parse succeeded. But we do that every single time we want to parse one thing then another. The monad instance lets the user forget about that noise and just concentrate on the next part of the current string. </p>\n\n<p>There are a lot of common programming situations where the particulars of what the program does can be modeled by a monadic context. Its a general concept. Knowing something is a monad lets you know how to combine monadic functions, i.e. inside a <code>do</code> block. But you still need to know what the specifics of the context are, as Roman stresses in his answer. </p>\n\n<p>The monad interface has two methods, <code>return</code> and <code>(&gt;&gt;=)</code>. These determine the context. I like to think in terms of the <code>do</code> notation, and so I paraphrase a few more examples below, in terms of putting a pure value into context, <code>return</code>, and taking it out of context within a do block, <code>a &lt;- (monadicExpression :: m a)</code></p>\n\n<ul>\n<li><code>Maybe</code>: computations with failure. \n\n<ul>\n<li><code>return a</code>: A computation which reliably, always yields <code>a</code></li>\n<li><code>a &lt;- m</code>  : <code>m</code> was run and succeeded.</li>\n</ul></li>\n<li><code>Reader r</code>: Computations which may use some \"global\" data <code>r</code>.\n\n<ul>\n<li><code>return a</code> : A computation which doesn't need the global.</li>\n<li><code>a &lt;- m</code>   : <code>m</code> was run, possibly using the global, and yielded <code>a</code></li>\n</ul></li>\n<li><code>State s</code>: Computations with an internal state, like a read/write mutable variable that is available to them.\n\n<ul>\n<li><code>return a</code> : A computation which leaves that state unchanged.</li>\n<li><code>a &lt;- m</code>   : <code>m</code> was run, possibly using/modifying the state, and yielded <code>a</code></li>\n</ul></li>\n<li><code>IO</code>: Computations which may do some input/output interaction in the real world.\n\n<ul>\n<li><code>return a</code> : An IO computation which will not actually do IO.</li>\n<li><code>a &lt;- m</code>   : <code>m</code> was run, possibly through interaction with a file, user, network, etc, and yielded an <code>a</code>.</li>\n</ul></li>\n</ul>\n\n<p>The above listed, along with parsing, will get you a long way to using any monad effectively. I am leaving out some things as well. First, the <code>a &lt;- m</code> isn't the whole story of the bind (>>=). For instance for my maybe explanation doesn't explain what to do on a failed computation--abort the rest of the chain. Secondly I also ignore the monad laws, which I can't explain anyway. But their purpose is mainly to ensure that <code>return</code> is like doing nothing to the context, e.g. IO return doesn't send missles, State return doesn't touch state, etc. </p>\n\n<p>Edit. Since I can't nicely inline the answer to the comment, I'll address it here. <code>commaParse</code> is a notional example for a fictional parser combinator, of the type <code>commaParse :: MyUndefinedMonadicParserType ()</code>. I could implement this parser by, for example</p>\n\n<pre><code>import Text.Read\n\ncommaParse :: ReadPrec ()\ncommaParse = do\n  ',' &lt;- get\n  return ()\n</code></pre>\n\n<p>where <code>get :: ReadPrec Char</code> is defined in <code>Text.ParserCombinators.ReadPrec</code> and takes the next character from the string being parsed. I utilize the fact that <code>ReadPrec</code> has a <code>MonadFail</code> instance and use the monadic bind as a pattern match against <code>','</code>. If the bound character was not a comma then the next character in the parsed string was not a comma and the parse fails.</p>\n\n<p>The next part of the question is important, as it stresses the subtle magic of a monadic parser, \"where does it get his input from?\" The input is part of what I've been referring to as the monadic context. In a sense, the parser just knows that it will be there and the library provides primitives to access it.</p>\n\n<p>To elaborate: writing the original <code>intCommaInt = do</code> block my thinking is something like, \"At this point in the parse I expect an integer (An string with a valid integer representation), I'll call that 'i'. Next there is a comma (which returns a <code>()</code>, no need to bind that to a variable). Next should another integer. Ok, parse successful, return the two integers. Notice, I don't need to think things like. \"Grab the current string that i'm parsing, pass the remaining string on.\" That boring stuff is handled by the definition of the parser. My knowledge of the context is that the parser will be working on the next part of the string, whatever that is.</p>\n\n<p>But of course, the string will need to be provided eventually. One way to do this, is the standard \"running\" a monad pattern:</p>\n\n<pre><code>x = runMonad monadicComputation inputData\n</code></pre>\n\n<p>in our case, something along the lines of</p>\n\n<pre><code>case readPrec_to_S intCommaInt 0 inputString of\n  [] -&gt; --failed parse value\n  ((i,j),remainingString):moreParses -&gt;  --something using i,j etc.\n</code></pre>\n\n<p>The above is a standard pattern wherein the monad represents some type of computer that needs input. However, for <code>ReadPrec</code> in particular, the running is done through the standard <code>Read</code> type class and just calling <code>read \"a string to parse\"</code>.</p>\n\n<p>So, if we were to make <code>(Int,Int)</code> a member of <code>Read</code> with</p>\n\n<pre><code>class Read (Int,Int) where\n  readPrec = intCommaInt\n</code></pre>\n\n<p>then we could call things like the following, which would all used the underlying <code>Read</code> instance.</p>\n\n<pre><code>read \"1,1\" :: (Int,Int) --Success, now can work with int pairs.\nread \"a,b\" :: (Int,Int) --Fails at runtime\nreadMaybe \"a,b\" :: Maybe (Int,Int) -- Returns (Just (1,1))\nreadMaybe \"1,1\" :: Maybe (Int,Int) -- Returns Nothing   \n</code></pre>\n\n<p>However, the read Class already has an implementation for (Int,Int), so we cant write that class directly. Instead we would might define a new type,</p>\n\n<pre><code>newtype IntCommaInt = IntCommaInt (Int,Int)\n</code></pre>\n\n<p>and define our parser/ReadPrec in terms of it.</p>\n"}], "owner": {"reputation": 705, "user_id": 4853434, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/99eb56b75f44e239b4803e241bccc249?s=128&d=identicon&r=PG&f=1", "display_name": "simplesystems", "link": "https://stackoverflow.com/users/4853434/simplesystems"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 286, "favorite_count": 1, "closed_date": 1530223626, "answer_count": 3, "score": 1, "last_activity_date": 1530555961, "creation_date": 1530177679, "last_edit_date": 1530195964, "question_id": 51079162, "link": "https://stackoverflow.com/questions/51079162/the-main-purpose-of-monads-haskell", "closed_reason": "Duplicate", "title": "The main purpose of Monads (Haskell)", "body": "<p>From my readings I understand that Monads are mainly used for:</p>\n\n<p>-Function Composition\n by matching one Functions Output Type to another Functions Input Type.</p>\n\n<p>I think this is a really good Article:</p>\n\n<p><a href=\"http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html\" rel=\"nofollow noreferrer\">http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html</a></p>\n\n<p>It explains Monads with the concept of boxes/wrappers. But I don't understand what are these wrappers used for? What's the benefit of the Wrapper other than Composition?</p>\n\n<p>Also IO Monad is a common example.</p>\n\n<pre><code>name &lt;- getLine -- name has the type String and getLine IO String\n</code></pre>\n\n<p>So what's the benefit of this type difference? Is it Error Handling? </p>\n"}, {"tags": ["list", "haskell", "higher-order-functions", "map-function", "partial-application"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 7, "creation_date": 1530150678, "post_id": 51073535, "comment_id": 89136717, "body": "Use a lambda: <code>map (\\x -&gt; f x y z) [1, 2, 3]</code>"}], "answers": [{"comments": [{"owner": {"reputation": 311, "user_id": 7841675, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dAmAX.png?s=128&g=1", "display_name": "AtilioA", "link": "https://stackoverflow.com/users/7841675/atilioa"}, "edited": false, "score": 0, "creation_date": 1530151791, "post_id": 51073652, "comment_id": 89136925, "body": "I don&#39;t get it. f won&#39;t work with only one argument."}, {"owner": {"reputation": 479, "user_id": 4496701, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh5.googleusercontent.com/-SST61v329Q0/AAAAAAAAAAI/AAAAAAAAAFM/ihwdZ1nZE7Q/photo.jpg?sz=128", "display_name": "Cliff Stamp", "link": "https://stackoverflow.com/users/4496701/cliff-stamp"}, "reply_to_user": {"reputation": 311, "user_id": 7841675, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dAmAX.png?s=128&g=1", "display_name": "AtilioA", "link": "https://stackoverflow.com/users/7841675/atilioa"}, "edited": false, "score": 3, "creation_date": 1530152538, "post_id": 51073652, "comment_id": 89137111, "body": "Haskell is perfectly fine with only partially applying a function, it just makes a function which needs more arguments. For example if you say f = (2+) that makes a function which needs another argument so f 6 = 8, f 10 = 12 etc. ."}, {"owner": {"reputation": 311, "user_id": 7841675, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dAmAX.png?s=128&g=1", "display_name": "AtilioA", "link": "https://stackoverflow.com/users/7841675/atilioa"}, "edited": false, "score": 0, "creation_date": 1530186615, "post_id": 51073652, "comment_id": 89152695, "body": "I&#39;m confirming that this works, though I think Bi Rico&#39;s answer is more simple and intuitive."}], "tags": [], "owner": {"reputation": 479, "user_id": 4496701, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh5.googleusercontent.com/-SST61v329Q0/AAAAAAAAAAI/AAAAAAAAAFM/ihwdZ1nZE7Q/photo.jpg?sz=128", "display_name": "Cliff Stamp", "link": "https://stackoverflow.com/users/4496701/cliff-stamp"}, "is_accepted": false, "score": 3, "last_activity_date": 1530162434, "last_edit_date": 1530162434, "creation_date": 1530151230, "answer_id": 51073652, "question_id": 51073535, "link": "https://stackoverflow.com/questions/51073535/using-map-with-function-that-has-multiple-arguments/51073652#51073652", "title": "Using map with function that has multiple arguments", "body": "<p>There are guaranteed to be better ways to do this (still learning) but you can:</p>\n\n<pre><code>f' = map f [1,2,3]\n</code></pre>\n\n<p><code>f'</code> is now a list of partially applied <code>f</code></p>\n\n<pre><code>g y z= map (\\h -&gt; h y z) f'\n</code></pre>\n\n<p>will take each of those functions and run it on the arguments y z. </p>\n\n<p>You can hack that all in one line. </p>\n"}, {"tags": [], "owner": {"reputation": 23220, "user_id": 1004096, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d0bd5ec4d97233e5f9f5f74bd6f02357?s=128&d=identicon&r=PG", "display_name": "Bi Rico", "link": "https://stackoverflow.com/users/1004096/bi-rico"}, "is_accepted": true, "score": 6, "last_activity_date": 1530176465, "last_edit_date": 1530176465, "creation_date": 1530158718, "answer_id": 51074556, "question_id": 51073535, "link": "https://stackoverflow.com/questions/51073535/using-map-with-function-that-has-multiple-arguments/51074556#51074556", "title": "Using map with function that has multiple arguments", "body": "<p>You should use a lambda function, to see this works lets start by using a helper function to map f over some list.</p>\n\n<pre><code>map helper [1, 2, 3] where\n  helper x = f x y z\n</code></pre>\n\n<p>In Haskell there are two syntax for functions so lets use the lambda syntax to define our helper function: </p>\n\n<pre><code>map helper [1, 2, 3] where\n  helper = \\x -&gt; f x y z\n</code></pre>\n\n<p>using the lambda syntax we don't need to give our helper function an explicit name, it can just be an anonymous function we map over the input</p>\n\n<pre><code>map (\\x -&gt; f x y z) [1, 2, 3]\n</code></pre>\n\n<p>So now you can say</p>\n\n<pre><code>mapF y z = map (\\x -&gt; f x y z) [1,2,3]\n</code></pre>\n\n<p>But presumably you don't want <code>x</code> to be 1, 2 and 3, you want it to be a list\nyou pass as an argument to <code>mapF</code>. So you need to give that a different name:</p>\n\n<pre><code>mapF xs y z = map (\\x -&gt; f x y z) xs\n</code></pre>\n\n<p>It is Haskell convention to use <code>s</code> as a suffix for variables that hold lists or other containers. So if one value is <code>x</code> then a list of them is <code>xs</code></p>\n"}], "owner": {"reputation": 311, "user_id": 7841675, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dAmAX.png?s=128&g=1", "display_name": "AtilioA", "link": "https://stackoverflow.com/users/7841675/atilioa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3842, "favorite_count": 1, "accepted_answer_id": 51074556, "answer_count": 2, "score": 2, "last_activity_date": 1571184673, "creation_date": 1530150078, "last_edit_date": 1571184673, "question_id": 51073535, "link": "https://stackoverflow.com/questions/51073535/using-map-with-function-that-has-multiple-arguments", "title": "Using map with function that has multiple arguments", "body": "<p>Is it possible to use map with a function that takes multiple arguments?</p>\n\n<p>I want to use map's second and third arguments repeatedly as the function's arguments. \nAs in</p>\n\n<pre><code>mapF x y z = map (f y z) [1, 2, 3]\n</code></pre>\n\n<p>So it'll evaluate <code>f</code> with the same <code>y</code> and <code>z</code> values, but with <code>x = 1</code>, <code>x = 2</code>, <code>x = 3</code> and so on.</p>\n"}, {"tags": ["haskell", "functional-programming", "recursion-schemes"], "answers": [{"comments": [{"owner": {"reputation": 117, "user_id": 9644760, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9cFg0.png?s=128&g=1", "display_name": "xal", "link": "https://stackoverflow.com/users/9644760/xal"}, "edited": false, "score": 0, "creation_date": 1530153121, "post_id": 51073592, "comment_id": 89137253, "body": "The generalization step with the type synonyms was the crucial step I couldn&#39;t come up with, but it all seems so clear now that it&#39;s in front of me. Thanks!"}, {"owner": {"reputation": 725, "user_id": 295840, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ae29e2d5030baed32b935af3eac52ece?s=128&d=identicon&r=PG", "display_name": "MrUnleaded", "link": "https://stackoverflow.com/users/295840/mrunleaded"}, "edited": false, "score": 0, "creation_date": 1597425324, "post_id": 51073592, "comment_id": 112138341, "body": "How would you do this with Expr also referring to Stmt like if Expr had a <code>Block [Stmt] Expr</code>"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 1, "creation_date": 1597427628, "post_id": 51073592, "comment_id": 112139367, "body": "In the case of mutually recursive types you&#39;ll need a fixpoint operation for functors with multiple parameters: <code>ExprF expr stmt</code>, <code>StmtF expr stmt</code>. The recursion-schemes library won&#39;t cut it anymore. I think compdata is a good alternative, but it&#39;s a bit more sophisticated. It seems easiest to roll your own recursion schemes at that point."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 6, "last_activity_date": 1530150645, "creation_date": 1530150645, "answer_id": 51073592, "question_id": 51073110, "link": "https://stackoverflow.com/questions/51073110/recursion-schemes-with-several-types/51073592#51073592", "title": "Recursion schemes with several types", "body": "<p>The recursion-schemes perspective is to view recursive types as fixed points of functors. The type of expressions is the fixed point of the following functor:</p>\n\n<pre><code>data ExprF expr = Const Int\n                | Add expr expr\n</code></pre>\n\n<p>The point of changing the name of the variable is to make explicit the fact that it is a placeholder for the actual type of expressions, that would otherwise be defined as:</p>\n\n<pre><code>data Expr = Const Int | Add Expr Expr\n</code></pre>\n\n<p>In <code>Stmt</code>, there are two recursive types, <code>Expr</code> and <code>Stmt</code> itself. So we put two holes/unknowns.</p>\n\n<pre><code>data StmtF expr stmt = Compound [stmt]\n                     | Print expr\n</code></pre>\n\n<p>When we take a fixpoint with <code>Fix</code> or <code>Cofree</code>, we are now solving a system of two equations (one for <code>Expr</code>, one for <code>Stmt</code>), and that comes with some amount of boilerplate.</p>\n\n<p>Instead of applying <code>Fix</code> or <code>Cofree</code> directly, we generalize, taking those fixpoint combinators (<code>Fix</code>, <code>Cofree</code>, <code>Free</code>) as parameters in the construction of expressions and statements:</p>\n\n<pre><code>type Expr_ f = f ExprF\ntype Stmt_ f = f (StmtF (Expr_ f))\n</code></pre>\n\n<p>Now we can say <code>Expr_ Fix</code> or <code>Stmt_ Fix</code> for the unannotated trees, and <code>Expr_ (Flip Cofree ann)</code>, <code>Stmt_ (Flip Cofree ann)</code>. Unfortunately we have to pay another LOC fee to make the kinds match, and the types get ever more convoluted.</p>\n\n<pre><code>newtype Flip cofree a f b = Flip (cofree f a b)\n</code></pre>\n\n<p>(This also assumes we want to use the same <code>Fix</code> or <code>Cofree</code> everywhere at the same times.)</p>\n\n<hr>\n\n<p>Another representation to consider is (<a href=\"http://reasonablypolymorphic.com/blog/higher-kinded-data/\" rel=\"noreferrer\">called HKD nowadays</a>):</p>\n\n<pre><code>data Expr f = Const Int\n            | Add (f Expr) (f Expr)\n\ndata Stmt f = Compount [f Stmt]\n            | Print (f (Expr f))\n</code></pre>\n\n<p>where you only abstract from annotation/no-annotation (<code>f = Identity</code> or <code>(,) ann</code>) and not from recursion.</p>\n"}], "owner": {"reputation": 117, "user_id": 9644760, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9cFg0.png?s=128&g=1", "display_name": "xal", "link": "https://stackoverflow.com/users/9644760/xal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 2, "accepted_answer_id": 51073592, "answer_count": 1, "score": 4, "last_activity_date": 1530150645, "creation_date": 1530145550, "question_id": 51073110, "link": "https://stackoverflow.com/questions/51073110/recursion-schemes-with-several-types", "title": "Recursion schemes with several types", "body": "<p>Right now, I've got an AST for expression that's polymorphic over the type of recursion:</p>\n\n<pre><code>data Expr a = Const Int\n            | Add a a\n</code></pre>\n\n<p>This has been incredibly useful by allowing me to use a type for plain recursion (<code>Fix Expr</code>) and another one when I need to attach extra information (<code>Cofree Expr ann</code>).</p>\n\n<p>The issue occurs when I want to introduce another type into this recursion scheme:</p>\n\n<pre><code>data Stmt a = Compound [a]\n            | Print (Expr ?)\n</code></pre>\n\n<p>I'm not sure what to put for the <code>Expr</code> term without introducing additional type variables and breaking compatibility with all the general functions I've already written.</p>\n\n<p>Can this be done, and if so, is it a useful pattern?</p>\n"}]