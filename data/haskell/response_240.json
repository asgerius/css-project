[{"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1565825197, "post_id": 57503187, "comment_id": 101475168, "body": "Are you really calling <code>parseToken xs</code>? Looks like a type error to me"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 1, "creation_date": 1565825207, "post_id": 57503187, "comment_id": 101475173, "body": "Do you need to use <code>&gt;&gt;=</code> specifically, or are you just looking for something cleaner? Because there\u2019s <code>tokenise = mapM parseToken . words</code>."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1565825579, "post_id": 57503187, "comment_id": 101475245, "body": "@Ry- With <code>mapM parseToken = foldr (\\x ms -&gt; parseToken x &gt;&gt;= \\t -&gt; (t:) &lt;$&gt; ms) (Just [])</code> if one insists on using <code>&gt;&gt;=</code> :-)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565827049, "post_id": 57503187, "comment_id": 101475500, "body": "I&#39;m really not sure what the question is here. But if it is to rewrite the function using <code>&gt;&gt;=</code>, actually it already uses it, because that&#39;s what <code>do</code> notation translates to, by a very straightforward mechanical process."}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565828612, "post_id": 57503187, "comment_id": 101475754, "body": "mapM has the type declaration of Monad m =&gt; (a -&gt; m b) -&gt; [a] -&gt; m [b]. But how does the final result evaluate to Nothing and not Maybe [Token] if for any one of the elements in the list, parseToken gives a result of Nothing?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1565828716, "post_id": 57503187, "comment_id": 101475768, "body": "@ceno980 <code>Nothing</code> is a value of the type <code>Maybe [Token]</code>"}, {"owner": {"reputation": 417, "user_id": 6154465, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-QH6aSFzvxxc/AAAAAAAAAAI/AAAAAAAAAn8/4ZmFspG9pxA/photo.jpg?sz=128", "display_name": "Uri Brecher", "link": "https://stackoverflow.com/users/6154465/uri-brecher"}, "edited": false, "score": 1, "creation_date": 1565869670, "post_id": 57503187, "comment_id": 101485958, "body": "what would be the reason for wrapping a [Token] inside Maybe? what would be the semantic difference between Nothing and Just [] for you?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 417, "user_id": 6154465, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-QH6aSFzvxxc/AAAAAAAAAAI/AAAAAAAAAn8/4ZmFspG9pxA/photo.jpg?sz=128", "display_name": "Uri Brecher", "link": "https://stackoverflow.com/users/6154465/uri-brecher"}, "edited": false, "score": 1, "creation_date": 1565883779, "post_id": 57503187, "comment_id": 101492819, "body": "@UriBrecher I don&#39;t know about for the OP, but for me, I&#39;d want <code>Just []</code> to mean I successfully lexed a file that had no tokens, and <code>Nothing</code> to mean I had failed to lex the file."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 6, "last_activity_date": 1565830731, "creation_date": 1565830731, "answer_id": 57503713, "question_id": 57503187, "link": "https://stackoverflow.com/questions/57503187/using-the-bind-function-to-process-a-list/57503713#57503713", "title": "Using the bind function to process a list", "body": "<p>You have merged two separate concerns in one function here:</p>\n\n<ol>\n<li>Separating a string into components, and</li>\n<li>turning each component into a token.</li>\n</ol>\n\n<p>That's all fine and normal so far. What I would recommend, though, is splitting step (2) out into a separate function, and implementing your top-level thing in terms of it. So:</p>\n\n<pre><code>parseTokens :: [String] -&gt; Maybe [Token]\nparseTokens [] = ...\nparseTokens (x:xs) = ...\n</code></pre>\n\n<p>I think you will find it easier to implement this than implementing <code>tokenise</code> wholesale, because when it comes time to deal with <code>xs</code>, you will find that you already have a function that does the thing you need on it. I recommend taking a stab at implementing this function; if you have trouble, then perhaps a fresh question with your attempt and why you believe it's not possible to make progress on it would be warranted.</p>\n\n<p>Once you've done that, you can drop this function in place in your existing <code>tokenise</code> implementation:</p>\n\n<pre><code>tokenise str = do\n    let (x:xs) = words str\n    parseTokens (x:xs)\n</code></pre>\n\n<p>Of course, at this point there's no reason to pattern match on the result of <code>words</code> like that, since you just plan to pass on the result anyway:</p>\n\n<pre><code>tokenise str = do\n    let xs = words str\n    parseTokens xs\n</code></pre>\n\n<p>Most people would then inline <code>xs</code>,</p>\n\n<pre><code>tokenise str = do\n    parseTokens (words str)\n</code></pre>\n\n<p>drop the superfluous <code>do</code>,</p>\n\n<pre><code>tokenise str = parseTokens (words str)\n</code></pre>\n\n<p>and make it point-free.</p>\n\n<pre><code>tokenise = parseTokens . words\n</code></pre>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 57503713, "answer_count": 1, "score": 0, "last_activity_date": 1565861349, "creation_date": 1565825027, "last_edit_date": 1565861349, "question_id": 57503187, "link": "https://stackoverflow.com/questions/57503187/using-the-bind-function-to-process-a-list", "title": "Using the bind function to process a list", "body": "<p>I am trying to convert a <code>String</code> of numbers (e.g. <code>\"2 3 9 10 14\"</code>) into a list of <code>Maybe [Token]</code>.  I have the following code where the function <code>parseToken</code> converts a <code>String</code> into a <code>Maybe Token</code>.</p>\n\n<pre><code>data Token = Num Int \n\nparseToken :: String -&gt; Maybe Token\nparseToken str = fmap Num (readMaybe str)\n</code></pre>\n\n<p>For converting the <code>String</code> into a list of <code>Maybe [Token]</code>, I have the following code below: </p>\n\n<pre><code>tokenise :: String -&gt; Maybe [Token]\n\ntokenise str = do\n            let (x:xs) = words str\n            y &lt;- parseToken x\n            ys &lt;- parseToken xs \n            return (y:ys)\n</code></pre>\n\n<p>I am trying to use the <code>bind</code> (<code>&gt;&gt;=</code>) function to do this. Initially I convert the string into a list of strings, using the <code>words</code> function. I then apply <code>parseToken</code> to the first element of the list, with the result (i.e. the Token value) of this stored in y.\nHowever, I am not sure how I can apply parseToken to the rest of the list using bind. In general, if one wants to apply a function to every element of a list, while taking in the context of failure, and then join the results into a new list - \n what is the best way to do this?\nAny insights are appreciated.</p>\n"}, {"tags": ["haskell", "type-signature"], "answers": [{"comments": [{"owner": {"reputation": 19222, "user_id": 789186, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/9d232cc5abe46092d3972d4f85833e42?s=128&d=identicon&r=PG", "display_name": "user4035", "link": "https://stackoverflow.com/users/789186/user4035"}, "edited": false, "score": 0, "creation_date": 1565815772, "post_id": 57501445, "comment_id": 101472919, "body": "&quot;It would be redundant to the signatures in the type class itself.&quot; - did you mean to specify for the instances of a type class?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 19222, "user_id": 789186, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/9d232cc5abe46092d3972d4f85833e42?s=128&d=identicon&r=PG", "display_name": "user4035", "link": "https://stackoverflow.com/users/789186/user4035"}, "edited": false, "score": 0, "creation_date": 1565816116, "post_id": 57501445, "comment_id": 101473014, "body": "@user4035: well the signature in the instances would be redundant to the type signature in the type classes. Since by writing <code>instance Enum Odd</code>, we know that the <code>a</code> in <code>Enum a</code> is <code>a ~ Odd</code>, and thus the signature of <code>succ :: Odd -&gt; Odd</code> by the type signature at the class level."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1565816195, "last_edit_date": 1565816195, "creation_date": 1565813683, "answer_id": 57501445, "question_id": 57501369, "link": "https://stackoverflow.com/questions/57501369/giving-function-type-signature-inside-typeclass-instance-gives-an-error/57501445#57501445", "title": "Giving function type signature inside typeclass instance gives an error", "body": "<p>The signature in the instances would be redundant to the type signature in the type classes. If you later slightly change the signature of the typeclass, for example by adding an extra type constraint, it could result in errors simply because the signatures are no longer in harmony.</p>\n\n<p>This is specified in the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-770004.3.2\" rel=\"nofollow noreferrer\">section on <em>Instance Declarations</em> in the <em>Haskell '10 report</em></a>:</p>\n\n<blockquote>\n  <p>The declarations <strong>may not contain any type signatures or fixity declarations, since these have already been given in the class declaration</strong>. As in the case of default class methods (Section 4.3.1), the method declarations must take the form of a variable or function definition.</p>\n</blockquote>\n\n<p>The <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Enum.html#succ\" rel=\"nofollow noreferrer\"><strong><code>Enum</code></strong> typeclass [src]</a> already contains the signature:</p>\n\n<blockquote><pre><code>class  Enum a   where\n    -- | the successor of a value.  For numeric types, 'succ' adds 1.\n    succ                :: <b>a -&gt; a</b>\n    -- ...</code></pre></blockquote>\n\n<p>If you however want to specify the signature, you can turn on the <a href=\"https://downloads.haskell.org/~ghc/8.0.2/docs/html/users_guide/glasgow_exts.html#ghc-flag--XInstanceSigs\" rel=\"nofollow noreferrer\"><strong><code>InstanceSigs</code></strong> language extension [ghc-doc]</a>, like:</p>\n\n<pre><code>{-# LANGUAGE <b>InstanceSigs</b> #-}\n\ndata Odd = Odd Integer deriving (Eq, Show)\n\ninstance Enum Odd where\n  <b>succ :: Odd -&gt; Odd</b>\n  succ (Odd x) = Odd $ x + 2</code></pre>\n"}], "owner": {"reputation": 19222, "user_id": 789186, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/9d232cc5abe46092d3972d4f85833e42?s=128&d=identicon&r=PG", "display_name": "user4035", "link": "https://stackoverflow.com/users/789186/user4035"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 1, "accepted_answer_id": 57501445, "answer_count": 1, "score": 3, "last_activity_date": 1565816195, "creation_date": 1565813331, "question_id": 57501369, "link": "https://stackoverflow.com/questions/57501369/giving-function-type-signature-inside-typeclass-instance-gives-an-error", "title": "Giving function type signature inside typeclass instance gives an error", "body": "<p>Once I have successfully solved an exercise for Functor typeclass:</p>\n\n<pre><code>data ExactlyOne a = ExactlyOne a deriving (Eq, Show)\n\ninstance Functor ExactlyOne where\n  (&lt;$&gt;) ::\n    (a -&gt; b)\n    -&gt; ExactlyOne a\n    -&gt; ExactlyOne b\n  (&lt;$&gt;) f a = ExactlyOne $ f (runExactlyOne a)\n</code></pre>\n\n<p>Solving another exercise I needed to define Enum typeclass functions for a custom Odd type.</p>\n\n<pre><code>data Odd = Odd Integer\n  deriving (Eq, Show)\n\ninstance Enum Odd where\n  -- succ :: Odd -&gt; Odd &lt;-- error\n  succ (Odd x) = Odd $ x + 2\n</code></pre>\n\n<p>Now when I try to specify the type signature for a simpler function, ghci gives an error:</p>\n\n<blockquote>\n  <p>Illegal type signature in instance declaration:\n     succ :: Odd -> Odd   (Use InstanceSigs to allow this)</p>\n</blockquote>\n\n<p>It works without it, but I wonder why is this error produced and how to specify the type signature correctly for this function?</p>\n"}, {"tags": ["css", "haskell", "reflex", "reflex-dom", "obelisk"], "answers": [{"comments": [{"owner": {"reputation": 105, "user_id": 10859841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ee54ff618704440fadaa0aff4e6a9e9?s=128&d=identicon&r=PG&f=1", "display_name": "Emiel Lanckriet", "link": "https://stackoverflow.com/users/10859841/emiel-lanckriet"}, "edited": false, "score": 0, "creation_date": 1565984343, "post_id": 57529195, "comment_id": 101526481, "body": "I get the following error using this solution: Could not deduce (StaticFile &quot;css/cssTest.css&quot;) arising from a use of &#39;static&#39;. Also {-# LANGUAGE TypeApplications #-} is used."}, {"owner": {"reputation": 136287, "user_id": 65696, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/d8da959b2a586b4a147604e6f534a9fe?s=128&d=identicon&r=PG", "display_name": "SingleNegationElimination", "link": "https://stackoverflow.com/users/65696/singlenegationelimination"}, "reply_to_user": {"reputation": 105, "user_id": 10859841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ee54ff618704440fadaa0aff4e6a9e9?s=128&d=identicon&r=PG&f=1", "display_name": "Emiel Lanckriet", "link": "https://stackoverflow.com/users/10859841/emiel-lanckriet"}, "edited": false, "score": 0, "creation_date": 1566433754, "post_id": 57529195, "comment_id": 101658396, "body": "@EmielLanckriet for <code>StaticFile &quot;foo&#47;bar&quot;</code>  to be derived, the file needs to be in <code>static&#47;foo&#47;bar</code> in your projects root at the time you started <code>ob run</code> or when built the project.  If that&#39;s still not working, i&#39;ll need more information such as your <code>default.nix</code>."}, {"owner": {"reputation": 105, "user_id": 10859841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ee54ff618704440fadaa0aff4e6a9e9?s=128&d=identicon&r=PG&f=1", "display_name": "Emiel Lanckriet", "link": "https://stackoverflow.com/users/10859841/emiel-lanckriet"}, "edited": false, "score": 1, "creation_date": 1566493296, "post_id": 57529195, "comment_id": 101683135, "body": "The problem seems to solved by deleting the &#39;/&#39; in &quot;/css/cssTest&quot;, using this post (<a href=\"https://stackoverflow.com/questions/57548236/staticfile-error-when-using-ob-and-reflex-to-import-css-file\" title=\"staticfile error when using ob and reflex to import css file\">stackoverflow.com/questions/57548236/&hellip;</a>)."}], "tags": [], "owner": {"reputation": 136287, "user_id": 65696, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/d8da959b2a586b4a147604e6f534a9fe?s=128&d=identicon&r=PG", "display_name": "SingleNegationElimination", "link": "https://stackoverflow.com/users/65696/singlenegationelimination"}, "is_accepted": true, "score": 4, "last_activity_date": 1565978571, "creation_date": 1565978571, "answer_id": 57529195, "question_id": 57500631, "link": "https://stackoverflow.com/questions/57500631/where-to-put-the-css-file-when-using-obelisk/57529195#57529195", "title": "Where to put the css file when using obelisk", "body": "<p>You should store all of the static assets your site needs live in the <code>static</code> directory created by <code>ob init</code>.  this is especially important for mobile builds.</p>\n\n<p>The other thing you need to do is refer to those assets like the following:</p>\n\n<pre><code>styleSheet $ static @\"css/cssTest.css\"\n             ^^^^^^^^\n</code></pre>\n\n<p>assuming you've turned on <code>TypeApplications</code>, which is the default in the obelisk skeleton.</p>\n"}], "owner": {"reputation": 105, "user_id": 10859841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ee54ff618704440fadaa0aff4e6a9e9?s=128&d=identicon&r=PG&f=1", "display_name": "Emiel Lanckriet", "link": "https://stackoverflow.com/users/10859841/emiel-lanckriet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 57529195, "answer_count": 1, "score": 4, "last_activity_date": 1589680916, "creation_date": 1565809537, "last_edit_date": 1589680916, "question_id": 57500631, "link": "https://stackoverflow.com/questions/57500631/where-to-put-the-css-file-when-using-obelisk", "title": "Where to put the css file when using obelisk", "body": "<p>I want to make two div's float side by side using Obelisk. For this I used the information from this post, <a href=\"https://stackoverflow.com/questions/2637696/how-to-place-div-side-by-side\">How to place div side by side</a> and for this solution classes have to be declared in css. Following the advice of this tutorial (<a href=\"https://github.com/hansroland/reflex-dom-inbits/blob/master/tutorial.md\" rel=\"nofollow noreferrer\">https://github.com/hansroland/reflex-dom-inbits/blob/master/tutorial.md</a>), more specifically the part about mainWidgetWithHead, I put the commands in a different file. The problem is, however, that I can't find where the css-file should be stored in order to get accessed by the program.</p>\n\n<p>I tried to put it in several places within the automatically generated directory by \"ob init\", but I always end up with an empty css-file when I load it in my browser.</p>\n\n<p>Below you can see a minimal example of the frontend function used in frontend/src/Frontend.hs.</p>\n\n<pre><code>frontend :: Frontend (R FrontendRoute)\nfrontend = Frontend\n    { _frontend_head = prerender_ (text \"Loading..\") headElement\n    , _frontend_body = prerender_ (text \"Loading...\") bodyElement\n    }\n\nheadElement :: MonadWidget t m =&gt; m ()\nheadElement = do\n    el \"title\" $ text \"Title\"\n    styleSheet \"/css/cssTest.css\"\n        where\n            styleSheet link = elAttr \"link\" (Map.fromList [\n                    (\"rel\", \"stylesheet\"),\n                    (\"type\", \"text/css\"),\n                    (\"href\", link)\n                ]) $ return ()\n\nbodyElement :: MonadWidget t m =&gt; m ()\nbodyElement = elClass \"div\" \"container\" $ do\n    elClass \"div\" \"fixed\" $ do\n        el \"h2\" $ text \"Button enabled / disabled\"\n    elClass \"div\" \"flex-item\" $ do\n        el \"h2\" $ text \"Second paragraph next to it.\"\n</code></pre>\n\n<p>This error message is consequently given, no matter where I put the css-file:\nResource interpreted as Stylesheet but transferred with MIME type text/plain: \"<a href=\"http://127.0.0.1:8000/css/cssTest.css\" rel=\"nofollow noreferrer\">http://127.0.0.1:8000/css/cssTest.css</a>\"</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565810307, "post_id": 57500458, "comment_id": 101470938, "body": "I made <a href=\"https://github.com/ekmett/exceptions/issues/73\" rel=\"nofollow noreferrer\">an issue</a> asking why there is no such instance, we shall see if anything comes up."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565811543, "post_id": 57500458, "comment_id": 101471375, "body": "Instance <code>MonadThrow Identity</code> cannot exist, because where would the exception go?"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565824369, "post_id": 57500458, "comment_id": 101475023, "body": "Surely <code>instance MonadThrow Except</code> could."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 1, "last_activity_date": 1565814200, "last_edit_date": 1565814200, "creation_date": 1565808696, "answer_id": 57500458, "question_id": 57500190, "link": "https://stackoverflow.com/questions/57500190/how-can-i-use-throwm-with-except/57500458#57500458", "title": "How can I use `throwM` with `Except`?", "body": "<p>The compiler infers types this way:</p>\n\n<ul>\n<li>Since <code>runExcept :: Except e a -&gt; ...</code>, the argument of <code>runExcept</code> must be of type <code>Except e a</code>.<br>\nSo, <code>throwM Overflow :: Except e a</code></li>\n<li><code>Except e a</code> is a type synonym for <code>ExceptT e Identity a</code>.<br>\nSo, <code>throwM Overflow :: ExceptT e Identity a</code></li>\n<li>Because <code>throwM :: MonadThrow m =&gt; e -&gt; m a</code>, the compiler needs to find an instance of <code>ThrowM</code> for a type that would match <code>ExceptT e Identity</code>.</li>\n<li>And look: <a href=\"https://hackage.haskell.org/package/exceptions-0.10.2/docs/Control-Monad-Catch.html#t:MonadThrow\" rel=\"nofollow noreferrer\">there is such instance</a>: <code>MonadThrow m =&gt; MonadThrow (ExceptT e m)</code>. It matches any <code>ExceptT e m</code> for any <code>m</code>, but this <code>m</code> also must have an instance of <code>MonadThrow</code>.</li>\n<li>Matching up the type of <code>throwM Overflow</code>, which is <code>ExceptT e Identity a</code>, and the type for which the <code>MonadThrow</code> instance is defined, which is <code>Except T m</code>, the compiler determines that <code>m = Identity</code>.</li>\n<li>But wait! According to the instance definition <code>MonadThrow m =&gt; MonadThrow (ExceptT e m)</code>, this <code>m</code> (which we now know to be <code>Identity</code>) must also have a <code>MonadThrow</code> instance.</li>\n<li>So the compiler looks for that, and doesn't find it.</li>\n<li>And displays you an error message: <em>\"No instance <code>MonadThrow Identity</code>\"</em></li>\n</ul>\n\n<p>Type class-related error messages can be vexing. The compiler doesn't always tell you the full chain of conclusions it has followed in order to reach the error. This is unfortunate, but whatchagonnado.</p>\n\n<p>But the underlying problem here is that <code>Except</code> and <code>throwM</code> <em>aren't actually compatible</em>. That is to say, <code>throwM</code> throws errors in a different sense than <code>Except</code> contains errors. They're two different error-related mechanisms. In order to throw an <code>Except</code>-compatible error, use <a href=\"https://hackage.haskell.org/package/transformers-0.5.6.2/docs/Control-Monad-Trans-Except.html#v:throwE\" rel=\"nofollow noreferrer\">its own <code>throwE</code></a>. This should work:</p>\n\n<pre><code>&gt; runExcept $ throwE Overflow\nLeft Overflow\n</code></pre>\n\n<hr>\n\n<p>As far as I understand at the moment, the error-handling landscape in Haskell hasn't yet settled down to a manageable state. We have <code>Except</code>, which got generalized to <code>ExceptT</code>, and then we have <code>throw</code>, <code>throwTo</code>, <code>throwIO</code>, <code>throwSTM</code>, <code>throwE</code>, <code>throwError</code>, <code>throwM</code>, and all of those have variants from different libraries and under different monads. Plus, the arrival of <code>UnliftIO</code> has complicated things even further. It sort of looks like <code>ExceptT</code> will be going away as a result.</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 1, "accepted_answer_id": 57500458, "answer_count": 1, "score": 1, "last_activity_date": 1565814200, "creation_date": 1565807307, "question_id": 57500190, "link": "https://stackoverflow.com/questions/57500190/how-can-i-use-throwm-with-except", "title": "How can I use `throwM` with `Except`?", "body": "<p>There is a package <a href=\"https://hackage.haskell.org/package/transformers\" rel=\"nofollow noreferrer\"><code>transformers</code></a> that features the monad <a href=\"https://hackage.haskell.org/package/transformers-0.5.6.2/docs/Control-Monad-Trans-Except.html#t:Except\" rel=\"nofollow noreferrer\"><code>Except</code></a>.</p>\n\n<blockquote>\n  <p>This monad transformer extends a monad with the ability to throw exceptions.</p>\n</blockquote>\n\n<p>There is a package <a href=\"https://hackage.haskell.org/package/exceptions\" rel=\"nofollow noreferrer\"><code>exceptions</code></a> that features the effect <a href=\"https://hackage.haskell.org/package/exceptions-0.10.2/docs/Control-Monad-Catch.html#v:throwM\" rel=\"nofollow noreferrer\"><code>throwM</code></a>.</p>\n\n<blockquote>\n  <p>Throw an exception. ...</p>\n</blockquote>\n\n<p>So it would seem that these two should play well together. However:</p>\n\n<pre><code>\u03bb runExcept $ throwM Overflow\n\n&lt;interactive&gt;:46:13: error:\n    \u2022 No instance for (MonadThrow Data.Functor.Identity.Identity)\n        arising from a use of \u2018throwM\u2019\n    \u2022 In the second argument of \u2018($)\u2019, namely \u2018throwM Overflow\u2019\n      In the expression: runExcept $ throwM Overflow\n      In an equation for \u2018it\u2019: it = runExcept $ throwM Overflo\n</code></pre>\n\n<p>I know I can use the monad <a href=\"https://hackage.haskell.org/package/exceptions-0.10.2/docs/Control-Monad-Catch-Pure.html#t:Catch\" rel=\"nofollow noreferrer\"><code>Catch</code></a>. But anyway, I would like to\nunderstand what is going on. I am not very familiar with monad transformers.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565794508, "post_id": 57497146, "comment_id": 101464049, "body": "Actually an <code>IO</code> is not &quot;impure&quot;. It is not an IO operation, it is what it will do, some sort of recipe."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565794702, "post_id": 57497146, "comment_id": 101464170, "body": "yes, some callback which will be called by main when it will apply beta-reduction. But I interested to the solution, not terms, excuse me please :)  How do peoples solve similar problem?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1565800214, "post_id": 57497146, "comment_id": 101467001, "body": "I don&#39;t think you can do this using only <code>IORef</code>s. You probably need some proper locking, e.g. using <code>MVar</code>s."}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1565878919, "post_id": 57497146, "comment_id": 101490399, "body": "A Haskell function cannot be impure."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1565880103, "post_id": 57497146, "comment_id": 101490971, "body": "you are right, &quot;impure&quot; is not accurate term here, something like &quot;function with effects&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565867935, "post_id": 57500756, "comment_id": 101485366, "body": "That&#39;s not actually a decent approximation of how it works. :("}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1565868061, "post_id": 57500756, "comment_id": 101485400, "body": "To add <code>atomic-primops</code> exposes a CAS on ioref"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565878126, "post_id": 57500756, "comment_id": 101490004, "body": "@dfeuer I browsed a bit about it, and understood the algorithm above. I might have got something wrong. If that&#39;s not accurate, please consider either posting an answer about how it really works, or amending the answer above so that&#39;s correct (if possible)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565878412, "post_id": 57500756, "comment_id": 101490165, "body": "@chi, I&#39;m sorry for the quick &quot;You&#39;re wrong&quot; with no explanation. I was about to go swimming, so I couldn&#39;t say more but wanted to try to limit unnecessary confusion. I&#39;ve edited your answer based on my recollection of how the mechanism works. I hope my memories are correct. Please feel free to fix my presentation and any further errors I may have introduced."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565878592, "post_id": 57500756, "comment_id": 101490233, "body": "Note: the reason for the mechanism being the way it is (editing a thunk in a way not done anywhere else that I know of) is to avoid any allocation whatsoever in the CAS loop."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565879869, "post_id": 57500756, "comment_id": 101490857, "body": "@dfeuer It has also the nice property of evaluating the thunk only once. Thank you."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565880384, "post_id": 57500756, "comment_id": 101491099, "body": "@chi, also very importantly, an expensive <code>f</code> won&#39;t make the CAS likely to fail. The thunk could in general be evaluated twice (by different threads), but the <code>noDuplicate#</code> in <code>unsafePerformIO</code> will prevent this."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1565927652, "last_edit_date": 1565927652, "creation_date": 1565810202, "answer_id": 57500756, "question_id": 57497146, "link": "https://stackoverflow.com/questions/57497146/how-to-use-atomicmodifyioref-with-impure-functions/57500756#57500756", "title": "How to use atomicModifyIORef with impure functions?", "body": "<p>This variant of <code>atomicModifyIORef</code> with an effectful function is not supported by the current GHC PrimOps (the low-level primitives). Further, it can not be easily realized on standard hardware, so it is likely that it will never be implemented.</p>\n\n<p>Here's how <code>atomicModifyIORef r f</code> is realized, roughly:</p>\n\n<ol>\n<li>Create a thunk, <code>t</code>, representing the application of <code>f</code> to the contents of the <code>IORef</code>. Since the contents are not yet known, put a null pointer where they will go. Create a thunk, <code>u</code>, that selects the first component of <code>t</code>.</li>\n<li>Read <code>r</code>. This will give a pointer to a heap object -- name this <code>p1</code>.</li>\n<li>Modify the thunk <code>t</code> to install <code>p1</code> in its argument field. </li>\n<li>Use a hardware-supported atomic compare-and-swap operation to replace the contents of <code>r</code> with <code>u</code> if and only if those contents are still <code>p1</code>. If that succeeds, then stop. Otherwise, go back to step 2.</li>\n</ol>\n\n<p><code>atomicModifyIORef'</code> is basically the same, but after the successful compare-and-swap it forces <code>u</code>.</p>\n\n<p>As you can see, this is a mechanism based on speculation. If we're unlucky, we may have to read <code>r</code> and edit the argument field of <code>t</code> multiple times.</p>\n\n<p>Note that compare-and-swap exists precisely to support this kind of speculation mechanisms. The steps above are pretty much standard. It is done in this way so that the memory has to be locked for a small amount of time, only during the compare-and-swap instruction.</p>\n\n<p>Now, since <code>f</code> is evaluated an arbitrary time after the thunk is inserted, it is usually important that <code>f</code> is free from side effects.</p>\n\n<p>If <code>f</code> has side effects whose timing or order matters, we can no longer speculate and use compare-and-swap, and need to lock the reference <code>r</code> for a long time. For that, we need proper locks like those used for <code>MVar</code>s.</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 1, "accepted_answer_id": 57500756, "answer_count": 1, "score": 2, "last_activity_date": 1565927652, "creation_date": 1565794391, "question_id": 57497146, "link": "https://stackoverflow.com/questions/57497146/how-to-use-atomicmodifyioref-with-impure-functions", "title": "How to use atomicModifyIORef with impure functions?", "body": "<p>I have a code like this:</p>\n\n<pre><code>  changedMap &lt;- traverseMyMap s $ itemVisitor config\n  atomicModifyIORef' (theMap s) $ \\_map -&gt; (changedMap, ())\n</code></pre>\n\n<p>which should be buggy, as I understand, because I ignore <code>_map</code> argument in modification function, which means that other thread can change the map and I can traverse and update here irrelevant copy of the map. So, I should do traverse with modification in the function passing to <code>atomicModifyIORef'</code>. But it's impossible because <code>itemVisitor</code> is impure function (it makes different IO operations, logs some messages, and so on), so it's signature is <code>:: MyKey -&gt; MyValue -&gt; IO (Maybe MyValue)</code>.</p>\n\n<p>What would be the right solution here? I thought to create some function <code>applyChanges</code> which will remove removed items, add added items and replace existing ones, something like:</p>\n\n<pre><code>changedMap &lt;- traverseMyMap s $ itemVisitor config\natomicModifyIORef' (theMap s) $ \\m -&gt; (applyChanges m changedMap, ())\n</code></pre>\n\n<p>but it means 2 traversions. Is it possible to do it with one traversion only? Or maybe there is another solution to change atomically some IORef value by impure function?</p>\n"}, {"tags": ["haskell", "haskell-hedgehog"], "comments": [{"owner": {"reputation": 15219, "user_id": 91522, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5de8b254c711059975670fba5ec10ab1?s=128&d=identicon&r=PG", "display_name": "Eric", "link": "https://stackoverflow.com/users/91522/eric"}, "edited": false, "score": 0, "creation_date": 1565793513, "post_id": 57496772, "comment_id": 101463482, "body": "I think this is a copy and paste error in your GHCi session. Make sure that <code>genWord</code> is well aligned with its type declaration"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 1, "creation_date": 1565799190, "post_id": 57496772, "comment_id": 101466516, "body": "<code>Gen.sample</code> has type <code>Gen a -&gt; IO a</code>, i.e., <code>GenT Identity a -&gt; IO a</code>, so it cannot accept <code>genWord</code> as an argument, because of that constraint <code>MonadIO Identity</code>. This change seems to have happened in hedgehog-0.4, and otherwise I can&#39;t see a way to use a <code>GenT m</code> that doesn&#39;t use <code>Identity</code>... You might want to ask this on the issue tracker (or weigh in on <a href=\"https://github.com/hedgehogqa/haskell-hedgehog/issues/312\" rel=\"nofollow noreferrer\">github.com/hedgehogqa/haskell-hedgehog/issues/312</a>)"}], "owner": {"reputation": 1010, "user_id": 267916, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/d630bf06a192014619dd8c9a75c7ade2?s=128&d=identicon&r=PG", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/267916/jeremy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 111, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1565793122, "creation_date": 1565793122, "question_id": 57496772, "link": "https://stackoverflow.com/questions/57496772/hedgehog-generator-using-io", "title": "Hedgehog generator using IO", "body": "<p>There is a <a href=\"https://hedgehog.qa/article/haskell-property-testing\" rel=\"nofollow noreferrer\">post</a> on the official Hedgehog site detailing how to write a Hedgehog generator that uses IO. The relevant code inside it is:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>    import           Data.Text (Text)\n    import qualified Data.Text as T\n    import qualified Data.Text.IO as T\n\n    import           Hedgehog\n    import qualified Hedgehog.Gen as Gen\n    import qualified Hedgehog.Range as Range\n\n    genWord :: MonadIO m =&gt; GenT m Text\n    genWord = do\n      ws &lt;- T.lines &lt;$&gt; liftIO (T.readFile \"/usr/share/dict/words\")\n      Gen.element ws\n</code></pre>\n\n<p>...followed by <code>Gen.sample genWord</code> to actually invoke the generator to create some Text values.</p>\n\n<p>The code syntax checks fine. However, when I attempt to run it, I am told:</p>\n\n<pre><code>\u2022 Could not deduce (MonadIO Data.Functor.Identity.Identity)\n    arising from a use of \u2018genWord\u2019\n  from the context: MonadIO m\n    bound by the inferred type of it :: MonadIO m =&gt; m Text\n    at &lt;interactive&gt;:62:1-27\n</code></pre>\n\n<p>I figure that the error happens because the example is just from an old version of the library or GHC, but I'm at a loss as to how to track down the actual problem and fix it. I haven't been able to find an analogous example in the Hedgehog source itself, or elsewhere.</p>\n\n<p>I'd love a solution (of course) but even more some hints about how to go about solving this sort of problem in general.</p>\n"}, {"tags": ["haskell", "haskell-pipes", "haskell-frames"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565858350, "post_id": 57496102, "comment_id": 101481927, "body": "I don&#39;t understand your question yet, but you should check out <a href=\"http://hackage.haskell.org/package/pipes-group\" rel=\"nofollow noreferrer\"><code>pipes-group</code></a> and perhaps <a href=\"https://hackage.haskell.org/package/streaming-utils-0.2.0.0/docs/Streaming-Pipes.html\" rel=\"nofollow noreferrer\"><code>Streaming.Pipes</code></a>."}, {"owner": {"reputation": 1206, "user_id": 783116, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ZOv9Y.jpg?s=128&g=1", "display_name": "josiah", "link": "https://stackoverflow.com/users/783116/josiah"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565893066, "post_id": 57496102, "comment_id": 101496620, "body": "@dfeuer well, what I mean is, instead of <code>groupBy</code> building a <code>Map a [Record rs]</code>, I&#39;d like it to build a <code>Map a (Producer (Record rs) Identity ())</code> so that I don&#39;t have to exit the Pipes library implementation to complete the <code>groupByCol</code> operation.  Does this help clarify my question any?  Thanks for suggesting pipes-group, I&#39;ll go through the tutorial there and start tinkering."}, {"owner": {"reputation": 1206, "user_id": 783116, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ZOv9Y.jpg?s=128&g=1", "display_name": "josiah", "link": "https://stackoverflow.com/users/783116/josiah"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565895361, "post_id": 57496102, "comment_id": 101497598, "body": "At this point, since I figured out how to get <code>P.fold</code> to work, this question might be more appropriate for StackExchange CodeReview..."}], "owner": {"reputation": 1206, "user_id": 783116, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ZOv9Y.jpg?s=128&g=1", "display_name": "josiah", "link": "https://stackoverflow.com/users/783116/josiah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 79, "favorite_count": 2, "answer_count": 0, "score": 0, "last_activity_date": 1565854871, "creation_date": 1565790736, "last_edit_date": 1565854871, "question_id": 57496102, "link": "https://stackoverflow.com/questions/57496102/how-to-write-groupby-function-using-the-pipes-library", "title": "How to write GroupBy function using the Pipes library", "body": "<p>I've figured out a way to implement this function on the <code>InCore</code> representation of the data as follows:</p>\n\n<pre><code>groupByCol :: (Eq a, Ord a, RecVec rs) =&gt;\n             (forall (f :: * -&gt; *).\n                 Functor f =&gt;\n                 (a -&gt; f a) -&gt; Record rs -&gt; f (Record rs))\n             -&gt; FrameRec rs -&gt; Map a (FrameRec rs)\ngroupByCol feature frame = M.map toFrame $ F.foldl' groupBy M.empty frame\n  where groupBy m r = M.insertWith (\\[new] old -&gt; new:old) (view feature r) [r] m\n</code></pre>\n\n<p>And the following unit test passes (so you can see an example of how this is used and what the expected result is).</p>\n\n<pre><code>  describe \"Lib.groupByCol\" $ do\n    it \"Returns the expected map when splitting the Spam dataset on the Images column\" $ do\n      -- type SpamOrHam = Record '[SpamId :-&gt; Int, SuspiciousWords :-&gt; Bool, UnknownSender :-&gt; Bool, Images :-&gt; Bool, SpamClass :-&gt; Text]\n      spamFrame &lt;- loadSpamOrHam\n      let row0 :: SpamOrHam\n          row0 = 489 &amp;: True &amp;: True &amp;: False &amp;: \"spam\" &amp;: RNil\n          row1 :: SpamOrHam\n          row1 = 376 &amp;: True &amp;: False &amp;: True &amp;: \"spam\" &amp;: RNil\n          groupingMap = groupByCol images spamFrame\n          falseRows = F.toList $ groupingMap M.! False\n          trueRows = F.toList $ groupingMap M.! True\n      falseRows `shouldContain` [row0]\n      falseRows `shouldNotContain` [row1]\n      trueRows `shouldContain` [row1]\n      trueRows `shouldNotContain` [row0]\n</code></pre>\n\n<p>So, I wanted to create an equivalent <code>groupByCol</code> function using the functions provided by the Pipes library, instead, since that library is what Frames uses internally to optimize its calculations.  The below is my best attempt, but it appears that <code>fold</code> from the Pipes library handles converting my data to a <code>Map</code> for me, because the type system says I'm getting back a <code>Map a (Map a (Record rs))</code> instead of a <code>Map a [Record rs]</code>, and the latter is the goal.  I'm pretty sure this auto-conversion doesn't automatically partition my dataset by unique value in the provided column, though.</p>\n\n<pre><code>groupByCol' :: (Eq a, Ord a, RecVec rs) =&gt;\n             (forall (f :: * -&gt; *).\n                 Functor f =&gt;\n                 (a -&gt; f a) -&gt; Record rs -&gt; f (Record rs))\n             -&gt; FrameRec rs -&gt; Map a (FrameRec rs)\ngroupByCol' feature frame =\n  P.fold groupBy M.empty (M.map toFrame) (P.each frame)\n    where groupBy m r = M.insertWith (\\[new] old -&gt; new:old) (view feature r) [r] m\n</code></pre>\n\n<p>Here's the full code if you need further context.  I don't mind sharing since this is just personal exploration.\n<a href=\"https://github.com/josiah14-MachineLearning/ID3-and-Derivatives/blob/master/ID3/haskell/sequential/hid3-and-seq/src/Lib.hs#L116\" rel=\"nofollow noreferrer\">https://github.com/josiah14-MachineLearning/ID3-and-Derivatives/blob/master/ID3/haskell/sequential/hid3-and-seq/src/Lib.hs#L116</a></p>\n\n<hr>\n\n<h2>Update</h2>\n\n<p>I just had some success with the following code which leverages the Identity monad, but I'd really like to get away from using Lists in the groupBy nested function and use Pipes there, as well.  I thought using <code>Pipes.yield</code> would be the way to go, but I'm unable to satisfy the typechecker.</p>\n\n<pre><code>groupByCol' :: (Eq a, Ord a, RecVec rs) =&gt;\n             (forall (f :: * -&gt; *).\n                 Functor f =&gt;\n                 (a -&gt; f a) -&gt; Record rs -&gt; f (Record rs))\n             -&gt; FrameRec rs -&gt; Map a (FrameRec rs)\ngroupByCol' feature frame =\n  runIdentity $ P.fold groupBy M.empty (M.map toFrame) (P.each frame)\n    where groupBy m r = M.insertWith (\\[new] old -&gt; new:old) (view feature r) [r] m\n</code></pre>\n\n<hr>\n"}, {"tags": ["haskell", "io", "monads", "io-monad", "do-notation"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1565783302, "post_id": 57494084, "comment_id": 101457829, "body": "You should use an <code>fmap (map parsePair)</code> here"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1565789740, "post_id": 57494084, "comment_id": 101461373, "body": "Instead of the non-working <code>arr &lt;- map parsePair $ replicateM size getLine</code> you can use the similar <code>arr &lt;- map parsePair &lt;$&gt; replicateM size getLine</code> (<code>&lt;$&gt;</code> is <code>fmap</code>)."}, {"owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "edited": false, "score": 1, "creation_date": 1565791324, "post_id": 57494084, "comment_id": 101462303, "body": "Consider also <code>replicateM size getLine &gt;&gt;= print . map parsePair</code>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565791716, "post_id": 57494084, "comment_id": 101462513, "body": "see <a href=\"https://stackoverflow.com/a/11326549/849891\"><code>do</code> notation primer</a> with a <a href=\"https://i.stack.imgur.com/oKZgV.jpg\" rel=\"nofollow noreferrer\">picture</a>, by user:<a href=\"https://stackoverflow.com/users/828361/pigworker\">pigworker</a>"}], "answers": [{"comments": [{"owner": {"reputation": 325, "user_id": 7329561, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/fniRg.png?s=128&g=1", "display_name": "Albizia", "link": "https://stackoverflow.com/users/7329561/albizia"}, "edited": false, "score": 0, "creation_date": 1565783816, "post_id": 57494176, "comment_id": 101458089, "body": "Thanks for the details. But I\u2019d like to understand why it works without <code>fmap</code> if I just do that on the next line"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 325, "user_id": 7329561, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/fniRg.png?s=128&g=1", "display_name": "Albizia", "link": "https://stackoverflow.com/users/7329561/albizia"}, "edited": false, "score": 0, "creation_date": 1565783847, "post_id": 57494176, "comment_id": 101458113, "body": "@Albizia: as said, because the arrow <code>&lt;-</code> will obtain the result from that <code>IO a</code>. It is not the new line here, it is the fact that you used <code>arr &lt;- ...</code>, and then processed the <code>arr</code>."}, {"owner": {"reputation": 325, "user_id": 7329561, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/fniRg.png?s=128&g=1", "display_name": "Albizia", "link": "https://stackoverflow.com/users/7329561/albizia"}, "edited": false, "score": 0, "creation_date": 1565783915, "post_id": 57494176, "comment_id": 101458144, "body": "Oh, I see. I didn\u2019t understand that part of the answer. thanks."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1565783554, "creation_date": 1565783554, "answer_id": 57494176, "question_id": 57494084, "link": "https://stackoverflow.com/questions/57494084/why-does-the-type-match-on-the-next-line-but-not-on-the-same-line-in-do-block/57494176#57494176", "title": "Why does the type match on the next line but not on the same line in `do` block?", "body": "<p>Because the type of <code>replicateM size getLine</code> is <code><b>IO</b> [String]</code>, it is not a list of <code>String</code>s, it is basically a description of an <code>IO</code> action that will obtain a <code>[String]</code>. You can see the arrow <code>&lt;-</code> in an <code>IO</code> monad as a way to retrieve it and unpack the result.</p>\n\n<p>You can however do some processing on that like, since <code>IO</code> is a <code>Functor</code> as well, you can make use of <code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</code>:</p>\n\n<pre><code>main :: IO [Int]\nmain = do\n  let size = 3\n  <b>fmap (map parsePair)</b> (replicateM size getLine)</code></pre>\n\n<p>or you can shift the <code>fmap</code> to the <code>getLine</code> part:</p>\n\n<pre><code>main :: IO [Int]\nmain = do\n  let size = 3\n  replicateM size (<b>fmap parsePair</b> getLine)</code></pre>\n\n<p>Note that there is a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:readLn\" rel=\"noreferrer\"><strong><code>readLn :: Read a =&gt; IO a</code></strong></a> function that is basically <code>fmap read getLine</code> (except that it does some addional error handling). We can thus use:</p>\n\n<pre><code>main :: IO [Int]\nmain = do\n  let size = 3\n  replicateM size <b>readLn</b></code></pre>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 7, "last_activity_date": 1565784451, "creation_date": 1565784451, "answer_id": 57494388, "question_id": 57494084, "link": "https://stackoverflow.com/questions/57494084/why-does-the-type-match-on-the-next-line-but-not-on-the-same-line-in-do-block/57494388#57494388", "title": "Why does the type match on the next line but not on the same line in `do` block?", "body": "<p>Note that the <code>do</code> syntax with the <code>&lt;-</code> symbol is really not like the assignment operator (which is <code>=</code> in many languages, sometimes <code>:=</code> and sometimes indeed <code>&lt;-</code>, e.g. in R). Rather, it's a special construct that <em>executes a monadic action</em> and extracts the <em>result</em> of this action. There is is a fundamental distinction between an action and its result; and often-quoted analogy is that an action is like a <em>recipe</em> for a cake, the result is the cake itself.</p>\n\n<p>applying <code>map parsePair</code> directly to the <code>IO</code> action would be like taking a knife to cut the recipe in pieces, and expecting that you can then use that recipe to bake a ready-cut cake. Clearly that's not how it works.</p>\n\n<p>Likewise, you first need to execute (<em>bind</em>) an <code>IO</code> action before you can manipulate the result. That's what happens on the line <code>arr &lt;- replicateM size getLine</code>: the action is executed and only its result stored in <code>arr</code>, so that you can then write <code>map parsePair arr</code>.</p>\n\n<p>Alternatively, you can use the <code>fmap</code> operator. What this does is basically, it takes a recipe and some instruction what to do with the result, and then adds that instruction to the end of the recipe. If you then execute <em>that</em> recipe, the result of it will indeed be a cake cut into pieces.</p>\n"}], "owner": {"reputation": 325, "user_id": 7329561, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/fniRg.png?s=128&g=1", "display_name": "Albizia", "link": "https://stackoverflow.com/users/7329561/albizia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 57494176, "answer_count": 2, "score": 4, "last_activity_date": 1565851852, "creation_date": 1565783237, "last_edit_date": 1565851852, "question_id": 57494084, "link": "https://stackoverflow.com/questions/57494084/why-does-the-type-match-on-the-next-line-but-not-on-the-same-line-in-do-block", "title": "Why does the type match on the next line but not on the same line in `do` block?", "body": "<p>I\u2019m reading in several lines from the input that the user has to type:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  let size = 3\n  arr &lt;- replicateM size getLine\n  let pairs = map parsePair arr\n  print pairs\n</code></pre>\n\n<p>Why am I allowed to do <code>map parsePair arr</code> on a separate line\nbut not on the same line, like this:</p>\n\n<pre><code>arr &lt;- map parsePair (replicateM size getLine)\n</code></pre>\n\n<p>Doing so, I get the error\u202f:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018[]\u2019 with \u2018IO\u2019\n  Expected type: IO [Int]\n    Actual type: [[Int]]\n</code></pre>\n\n<p>To give you more details, here is <code>parsePair</code>:</p>\n\n<pre><code>parsePair string = map parseInt $ words string\n\nparseInt :: String -&gt; Int\nparseInt s = read s :: Int\n</code></pre>\n"}, {"tags": ["performance", "haskell"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 1, "creation_date": 1565784842, "post_id": 57492550, "comment_id": 101458598, "body": "Have you considered benchmarking it"}, {"owner": {"reputation": 3074, "user_id": 1608276, "user_type": "registered", "accept_rate": 28, "profile_image": "https://i.stack.imgur.com/XiZ2q.jpg?s=128&g=1", "display_name": "luochen1990", "link": "https://stackoverflow.com/users/1608276/luochen1990"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565840206, "post_id": 57492550, "comment_id": 101477541, "body": "@Li-yaoXia  <a href=\"https://gist.github.com/luochen1990/5062732c98c220d986adab5e4df6a252\" rel=\"nofollow noreferrer\">gist.github.com/luochen1990/5062732c98c220d986adab5e4df6a252</a>  I tested the normal branch, but don&#39;t know how to benchmark the error branch, since I cannot repeat to cause the error to make the difference significant."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565865509, "post_id": 57492550, "comment_id": 101484515, "body": "You can evaluate values with <code>evaluate</code> and catch exceptions with <code>catch</code> (from <code>Control.Exception</code>)."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 2, "last_activity_date": 1565789633, "last_edit_date": 1565789633, "creation_date": 1565786029, "answer_id": 57494800, "question_id": 57492550, "link": "https://stackoverflow.com/questions/57492550/will-errorwithoutstacktrace-be-faster-than-error-when-there-isnt-hascallstack/57494800#57494800", "title": "Will errorWithoutStackTrace be faster than error when there isn&#39;t HasCallStack?", "body": "<p><code>error</code> means something bad happened so for most, if not all purposes, it does not matter how fast it is, because it indicates a program that's <em>not working</em>.</p>\n\n<hr>\n\n<p>That said, a quick glance at the code is enough to reasonably guess that <code>error</code> does strictly more work than <code>errorWithoutStackTrace</code> (and that is compounded by the addition of <code>withFrozenCallStack</code> to the <code>error</code> variant of your code). Confirming that with benchmarks is left as an exercise to the reader.</p>\n\n<p>Here's the definition of <code>error</code> and <code>errorWithoutStackTrace</code>:</p>\n\n<p><a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Err.html#error\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Err.html#error</a></p>\n\n<pre><code>error s = raise# (errorCallWithCallStackException s ?callStack)\n\nerrorWithoutStackTrace s = raise# (errorCallException s)\n</code></pre>\n\n<p>Now those two internal functions are defined as follows:</p>\n\n<pre><code>errorCallException :: String -&gt; SomeException\nerrorCallException s = toException (ErrorCall s)\n\nerrorCallWithCallStackException :: String -&gt; CallStack -&gt; SomeException\nerrorCallWithCallStackException s stk = unsafeDupablePerformIO $ do\n  ...\n  return $ toException (ErrorCallWithLocation s stack)\n</code></pre>\n\n<p>Note that both essentially do <code>toException (something s)</code>, but <code>errorCallWithCallStackException</code> also has a whole lot more code to handle the stack (in \"<code>...</code>\").</p>\n"}], "owner": {"reputation": 3074, "user_id": 1608276, "user_type": "registered", "accept_rate": 28, "profile_image": "https://i.stack.imgur.com/XiZ2q.jpg?s=128&g=1", "display_name": "luochen1990", "link": "https://stackoverflow.com/users/1608276/luochen1990"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1565789633, "creation_date": 1565777086, "question_id": 57492550, "link": "https://stackoverflow.com/questions/57492550/will-errorwithoutstacktrace-be-faster-than-error-when-there-isnt-hascallstack", "title": "Will errorWithoutStackTrace be faster than error when there isn&#39;t HasCallStack?", "body": "<p>I noticed that the base package use <code>errorWithoutStackTrace</code> to implement lots of functions. Is there some performance different between the following two definition?</p>\n\n<pre><code>head :: [a] -&gt; a\nhead (x:_) = x\nhead [] = errorWithoutStackTrace (\"Prelude.head: empty list\")\n\nhead :: [a] -&gt; a\nhead (x:_) = x\nhead [] = withFrozenCallStack $ error (\"Prelude.head: empty list\")\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 24772, "user_id": 770830, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a3943e02574f64dabaa71603264c9c28?s=128&d=identicon&r=PG", "display_name": "bereal", "link": "https://stackoverflow.com/users/770830/bereal"}, "edited": false, "score": 0, "creation_date": 1565772199, "post_id": 57491066, "comment_id": 101452331, "body": "I don&#39;t see any <code>print</code> in your code..."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1565772223, "post_id": 57491066, "comment_id": 101452343, "body": "Can you please explain <i>what</i> you aim to do. It looks like you make things too complex. For exaple <code>[i | i &lt;- [m..n]]</code> is just the same as <code>[m..n]</code>. You furthermore use <code>Float</code>s and <code>Int</code>s at the same time."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 24772, "user_id": 770830, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a3943e02574f64dabaa71603264c9c28?s=128&d=identicon&r=PG", "display_name": "bereal", "link": "https://stackoverflow.com/users/770830/bereal"}, "edited": false, "score": 1, "creation_date": 1565772243, "post_id": 57491066, "comment_id": 101452356, "body": "@bereal: the print is probably due to the implicit <code>print</code> in ghci."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 3, "creation_date": 1565773156, "post_id": 57491066, "comment_id": 101452804, "body": "And please format your code in a sensible way. Lines with &gt;90 chars get very hard  to read."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1565777769, "post_id": 57491066, "comment_id": 101455124, "body": "Ideas, yes, <i>see the derived type</i> with <code>GHCi&gt; :t test</code>: <code>test :: (RealFrac a, Integral a, Floating a) =&gt; a -&gt; a -&gt; [(a, a)]</code>. an Integral, and a Floating at the same time?.."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1565788797, "post_id": 57491066, "comment_id": 101460784, "body": "Also: <code>\\y -&gt; sum y == sum</code> and <code>\\x -&gt; map (^2) x == map (^2)</code>. Break your code up into more manageable functions; <code>test</code> doesn&#39;t have to be responsible for generating the list of tuples it is testing. And finally, <code>map f (map g someList)</code> is the same as <code>map (f . g) someList</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1565773479, "creation_date": 1565773479, "answer_id": 57491497, "question_id": 57491066, "link": "https://stackoverflow.com/questions/57491066/in-haskell-apply-sqrt-in-list-of-tuples/57491497#57491497", "title": "In Haskell apply sqrt in list of tuples", "body": "<p>Please do <em>not</em> check if a value is square by calculating the square root. This maps items to the \"floating point world\". This can have rounding errors, etc. It furthermore makes the code harder to read, since you need to do all those conversions between the integer world and the floating point world.</p>\n\n<p>You can for example use the <a href=\"https://hackage.haskell.org/package/arithmoi-0.9.0.0/docs/Math-NumberTheory-Powers-Squares.html#v:isSquare\" rel=\"nofollow noreferrer\"><strong><code>isSquare :: Integral a =&gt; a -&gt; Bool</code></strong> function</a> from the <a href=\"https://hackage.haskell.org/package/arithmoi\" rel=\"nofollow noreferrer\"><strong><code>arithmoi</code></strong> package</a>.</p>\n\n<pre><code>import Math.NumberTheory.Powers.Squares(isSquare)\n\ntest :: Integral i => i -> i -> [(i,i)]\ntest m n = filter (isSquare . snd)\n    [ (j, (sum . map (^2) . filter ((==) 0 . mod j)) [1..j]) | j &lt;- [m..n]]</code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude Math.NumberTheory.Powers.Squares&gt; test 0 1000\n[(0,0),(1,1),(42,2500),(246,84100),(287,84100),(728,722500)]\n</code></pre>\n"}], "owner": {"reputation": 180, "user_id": 3827449, "user_type": "registered", "accept_rate": 40, "profile_image": "https://graph.facebook.com/100000919387349/picture?type=large", "display_name": "Filippos Ser", "link": "https://stackoverflow.com/users/3827449/filippos-ser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "accepted_answer_id": 57491497, "answer_count": 1, "score": 0, "last_activity_date": 1565778013, "creation_date": 1565771876, "last_edit_date": 1565778013, "question_id": 57491066, "link": "https://stackoverflow.com/questions/57491066/in-haskell-apply-sqrt-in-list-of-tuples", "title": "In Haskell apply sqrt in list of tuples", "body": "<p>I have made a list of tuples and I want to filter this list based on whether the square root of the second member of each tuple is an integer:</p>\n\n<pre><code>isInt :: (RealFrac a) =&gt; a -&gt; Bool\ntest m n = filter (\\(a,b) -&gt; isInt (sqrt b)) \n             ( zip [m..n]  \n                ( map (\\y -&gt; sum y ) $ \n                    map (\\x -&gt; map (^2) x) \n                        [  filter (\\z -&gt; mod j z ==0 ) [1..j] \n                           |  j &lt;- [i | i &lt;- [m..n]]  ] ))\nisInt x  =  x == fromInteger (round x) \n</code></pre>\n\n<p>But every time, I get this error:</p>\n\n<pre><code>  \u2022 Ambiguous type variable \u2018b0\u2019 arising from a use of \u2018print\u2019\n      prevents the constraint \u2018(Show b0)\u2019 from being solved.\n      Probable fix: use a type annotation to specify what \u2018b0\u2019 should be.\n      These potential instances exist:\n        instance (Show b, Show a) =&gt; Show (Either a b)\n          -- Defined in \u2018Data.Either\u2019\n        instance Show Ordering -- Defined in \u2018GHC.Show\u2019\n        instance Show Integer -- Defined in \u2018GHC.Show\u2019\n        ...plus 23 others\n        ...plus 43 instances involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>Any ideas?</p>\n"}, {"tags": ["haskell", "immutability", "io-monad", "do-notation", "ioref"], "answers": [{"comments": [{"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1565768827, "post_id": 57490116, "comment_id": 101450708, "body": "yes, of course it is so, but the question is: if my thread A read the map with <code>readIORef</code> and I am doing something with it, can it be changed by another thread B? Haskell as I know does copy-on-write, also IO monad is only wrapper for good old C-like code (readIORef/writeIORef are even reorderable like in C), so: can <code>someMap</code> be changed by another thread after I read it?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 2, "creation_date": 1565769937, "post_id": 57490116, "comment_id": 101451237, "body": "@Paul-AG: no, since if you use <code>writeIORef</code>, you write a different value to the reference. Datastructures are never modified, you create a &quot;shallow&quot; modified copy. So if you write to the <code>IORef</code>, then it means that you let the ref now point to a different map."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "reply_to_user": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 3, "creation_date": 1565773930, "post_id": 57490116, "comment_id": 101453172, "body": "@Paul-AG I think you are trying to understand the semantics of Haskell by understanding how it is translated into low-level operations on memory. This works for imperative languages like C or C++, or even Java, because the underlying programmer model for those languages is a von Neumann architecture. It does not work for Haskell because the underlying programmer model for Haskell is the lambda calculus. Therefore you should stop trying to think of Haskell semantics in terms of pointers and copies and try instead to think in terms of values and functions."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 4, "creation_date": 1565791662, "post_id": 57490116, "comment_id": 101462487, "body": "Although this particular case is very easy to explain by analogy to pointers and copies. An IORef I&#39;d like a mutable variable containing a pointer to an immutable object. Reading a pointer is atomic, so it&#39;s not possible for another thread to write to the pointer &quot;while&quot; I&#39;m reading it. Once I&#39;ve read it to find out what object is pointed to, it doesn&#39;t matter what other threads do; they can&#39;t change the immutable object I&#39;m now working with, so they can only affect me if I read the pointer again."}], "tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 5, "last_activity_date": 1565768148, "creation_date": 1565768148, "answer_id": 57490116, "question_id": 57489844, "link": "https://stackoverflow.com/questions/57489844/how-does-readioref-work-creates-copy-or-it-does-not/57490116#57490116", "title": "How does readIORef work: creates copy or it does not?", "body": "<p>No it is not a copy. In Haskell there is no such thing as a \"copy\", there are only values and all values are immutable.</p>\n\n<p>An <code>IORef</code> contains a value. The <code>IORef</code> itself is mutable: you can change the value that it contains. The value itself is not mutable. To understand this, think of an <code>IORef Int</code> which currently contains <code>5</code>. If you get that value out and add one to it to get <code>6</code> you have created a new value, but you have not changed the <code>5</code> value to have suddenly become <code>6</code>, because the value of <code>5</code> is immutable.</p>\n\n<p>Likewise if I create a <code>Map</code> with the value <code>fromList [(\"foo\", 5), (\"bar, 6\")]</code> and put it in an IORef, the IORef now contains that value, but the value itself is immutable. If I get the value out and add a new entry using <code>Map.insert</code> I have created a new value, not modified the original value, exactly the same way as with the <code>5</code> and <code>6</code> above.</p>\n\n<p>Hopefully that answers your question. However you may now have another one. If all values are immutable, how can IORefs change?</p>\n\n<p>The answer is that the IORef itself does not change. However IORefs exist as a kind of portal to the mutable ever-changing chaos that we call \"The Real World\". In The Real World you can do the same thing twice and get different results. That includes <code>readLine</code> and <code>readIORef</code>. The IO monad exists to quarantine this chaos while still allowing the program to interact with it. Hence every function that works with IORefs is in the IO monad.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 2, "last_activity_date": 1565780408, "creation_date": 1565780408, "answer_id": 57493396, "question_id": 57489844, "link": "https://stackoverflow.com/questions/57489844/how-does-readioref-work-creates-copy-or-it-does-not/57493396#57493396", "title": "How does readIORef work: creates copy or it does not?", "body": "<p><code>readIORef :: IORef a -&gt; IO a</code>, so <code>myMap</code> must be <code>IORef a</code> and <code>readIORef myMap :: IO a</code>. </p>\n\n<p>And so <code>someMap :: a</code>, because it's to the left of <code>&lt;-</code> in the <code>do</code> code line of the type <code>IO a</code> (it's <code>a &lt;- M a</code>, always, in <code>do</code> notation). </p>\n\n<p>In your case, that <code>a ~ Data.Map.Strict.Map k v</code>, i.e. a pure immutable value. </p>\n\n<p>If another thread writes some new value into that <code>myMap :: IORef (Data.Map.Strict.Map k v)</code>, then, it does. But it won't change the pure value that was already drawn from it <em>before</em> the switch-up.</p>\n\n<p>Effectful code has time. Pure referentially transparent code with immutable data is timeless. </p>\n\n<p>(What is true, is true, regardless of how long it takes to prove it.)</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 1, "accepted_answer_id": 57493396, "answer_count": 2, "score": 2, "last_activity_date": 1565780408, "creation_date": 1565767008, "last_edit_date": 1565778706, "question_id": 57489844, "link": "https://stackoverflow.com/questions/57489844/how-does-readioref-work-creates-copy-or-it-does-not", "title": "How does readIORef work: creates copy or it does not?", "body": "<p>What exactly does this code do? Is <code>someMap</code> a copy of the object (of <code>::Data.Map.Strict.Map</code>) referred to by <code>myMap</code> or it's a reference only? I mean can <code>someMap</code> change <strong>(by another thread)</strong> after I read it with <code>readIORef</code>? Something like C's volatile... Is it possible? I expect that it's copy/snapshot, so any changes will not affect my <code>someMap</code>, or ...?</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>     do\n        ....\n        someMap &lt;- readIORef myMap\n        ....\n</code></pre>\n"}, {"tags": ["function", "haskell", "types", "functional-programming"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 4, "creation_date": 1565767420, "post_id": 57489772, "comment_id": 101450092, "body": "&quot;<i>Would it be \u2026</i>&quot; - yes, exactly that. Your intuition seems to be fine already."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565769276, "post_id": 57489772, "comment_id": 101450917, "body": "The output is thus <code>&quot;FFPM&quot;</code>, since you concatenate the labels."}, {"owner": {"reputation": 415, "user_id": 10484793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ec95469fb82b965d3ee2f22d1cea5ce?s=128&d=identicon&r=PG&f=1", "display_name": "SavannahGemp", "link": "https://stackoverflow.com/users/10484793/savannahgemp"}, "edited": false, "score": 0, "creation_date": 1565769829, "post_id": 57489772, "comment_id": 101451187, "body": "how would I write a map, what&#39;s the thinking behind it, the important things to consider before starting?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1565770370, "post_id": 57489772, "comment_id": 101451452, "body": "A fold (AKA catamorphism) intuitively &quot;replaces&quot; each constructor with a user-provided function, and computes the resulting term. I think you understand that. From a higher viewpoint, it expresses the existence of the unique morphism between an initial F-algebra and any given F-algebra, but this can be hard to understand without a proper background. Still, you might want to read about <code>cata</code> from <code>recursion-schemes</code>, or <a href=\"https://bartoszmilewski.com/2017/02/28/f-algebras/\" rel=\"nofollow noreferrer\">Bartosz Milewski&#39;s book</a> if you want a deeper understanding."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1565770508, "post_id": 57489772, "comment_id": 101451514, "body": "<code>mapRose f t</code> replaces every value <code>x :: a</code> in the tree <code>t :: Rose a</code> with <code>f x</code>. The result is then a <code>Rose b</code>, if <code>f :: a -&gt; b</code>. GHC can even generate it for you (using <code>deriving Functor</code> and a few extensions), but writing it manually can be a nice exercise."}, {"owner": {"reputation": 415, "user_id": 10484793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ec95469fb82b965d3ee2f22d1cea5ce?s=128&d=identicon&r=PG&f=1", "display_name": "SavannahGemp", "link": "https://stackoverflow.com/users/10484793/savannahgemp"}, "edited": false, "score": 0, "creation_date": 1565773256, "post_id": 57489772, "comment_id": 101452851, "body": "mapRose f Leaf a = f a______  mapRose f Node t = foldRose f ?? t ______ what would be the function for a Node?"}], "answers": [{"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1565788149, "last_edit_date": 1565788149, "creation_date": 1565774687, "answer_id": 57491850, "question_id": 57489772, "link": "https://stackoverflow.com/questions/57489772/functions-of-different-data-types-in-haskell/57491850#57491850", "title": "Functions of different Data Types in Haskell", "body": "<p>Just follow the steps, slowly and confidently.</p>\n\n<pre><code>data Rose a = Leaf a | Node [Rose a]\n\nfmfp = Node [ Node [Leaf \"F\"]\n            , Node []\n            , Node [Leaf \"F\", Leaf \"P\"]\n            , Leaf \"M\" ]\n\nfoldRose :: \n         (a -&gt; r)               -&gt; \n               ([r] -&gt; r)        -&gt; \n                     Rose a       -&gt;  r\nfoldRose fLeaf fNode (Leaf a    )  =  fLeaf a\nfoldRose fLeaf fNode (Node trees)  =  fNode (map (foldRose fLeaf fNode) trees)\n</code></pre>\n\n<p>(<a href=\"https://stackoverflow.com/a/57165128/849891\">\"<code>r</code>\"</a> is for <a href=\"https://stackoverflow.com/search?tab=votes&amp;q=user%3A849891%20%22recursive%20result%22\">recursive result</a>).</p>\n\n<p>Notice that you had few errors there, which I fixed in the above. Now,</p>\n\n<pre><code>  foldRose id concat fmfp \n= let fLeaf = id\n      fNode = concat\n  in\n  foldRose fLeaf fNode (Node [Node [Leaf \"F\"], Node [], Node [Leaf \"F\", Leaf \"P\"], Leaf \"M\"])\n= fNode (map (foldRose fLeaf fNode) \n                             [Node [Leaf \"F\"], Node [], Node [Leaf \"F\", Leaf \"P\"], Leaf \"M\"])\n= fNode [\n          foldRose fLeaf fNode $ Node [Leaf \"F\"]\n        , foldRose fLeaf fNode $ Node []\n        , foldRose fLeaf fNode $ Node [Leaf \"F\", Leaf \"P\"]\n        , foldRose fLeaf fNode $ Leaf \"M\" ]\n= fNode [\n          fNode $ map (foldRose fLeaf fNode) [Leaf \"F\"]\n        , fNode $ map (foldRose fLeaf fNode) []\n        , fNode $ map (foldRose fLeaf fNode) [Leaf \"F\", Leaf \"P\"]\n        , fLeaf $ \"M\" ]\n= fNode [\n          fNode [ foldRose fLeaf fNode $ Leaf \"F\"]\n        , fNode []\n        , fNode [ foldRose fLeaf fNode $ Leaf \"F\", foldRose fLeaf fNode $ Leaf \"P\"]\n        , fLeaf \"M\" ]\n= fNode [\n          fNode [ fLeaf \"F\"]\n        , fNode []\n        , fNode [ fLeaf \"F\", fLeaf \"P\"]\n        , fLeaf \"M\" ]\n</code></pre>\n\n<p>and that is simply</p>\n\n<pre><code>= concat [ concat [ id \"F\"]\n         , concat []\n         , concat [ id \"F\", id \"P\"]\n         , id \"M\"\n         ]\n= concat [ concat [ \"F\"], [], concat [ \"F\", \"P\"], \"M\" ]\n= concat [          \"F\",               \"FP\",      \"M\" ]\n</code></pre>\n"}], "owner": {"reputation": 415, "user_id": 10484793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ec95469fb82b965d3ee2f22d1cea5ce?s=128&d=identicon&r=PG&f=1", "display_name": "SavannahGemp", "link": "https://stackoverflow.com/users/10484793/savannahgemp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1565788149, "creation_date": 1565766708, "last_edit_date": 1565774678, "question_id": 57489772, "link": "https://stackoverflow.com/questions/57489772/functions-of-different-data-types-in-haskell", "title": "Functions of different Data Types in Haskell", "body": "<p>I have the DataType </p>\n\n<pre><code>data Rose a = Leaf a | Node [Rose a]\n</code></pre>\n\n<p>an example would be:</p>\n\n<pre><code>fmfp = Node [Node [Leaf \"F\"], Node [], Node [Leaf \"F\", Leaf \"P\"], Leaf \"M\"]\n</code></pre>\n\n<p>which graphically looks like this:\n<a href=\"https://i.stack.imgur.com/IfkIp.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/IfkIp.png\" alt=\"enter image description here\"></a></p>\n\n<p>I have learned how to (mechanically) write fold functions for different data types, and so I came up with this fold function:</p>\n\n<pre><code>foldRose :: (a -&gt; r) -&gt; ([r] -&gt; r) -&gt; Rose a -&gt; r\n\nfoldRose fl fn Leaf a = fl a\nfoldRose fl fn Node a = fn (map (foldRose fl fn)) a\n</code></pre>\n\n<p>The thing is, I don't really understand WHAT it does. \nFor example, if I had </p>\n\n<pre><code>foldRose id concat fmfp \n</code></pre>\n\n<p>what would it do exactly? Would it be</p>\n\n<pre><code>foldRose id concat fmfp = concat [concat [id \"F\"], concat [], \n                                  concat [id \"F\", id \"P\"], id \"M\"]\n</code></pre>\n\n<p>How do you wrap your mind around those kinds of functions? What do they intuitively mean?\nAlso, how do I write a mapRose function, what would I have to think befre starting, what would it be supposed to do?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 7, "creation_date": 1565729827, "post_id": 57485198, "comment_id": 101441534, "body": "that&#39;s equivalent to <code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code>, which has your 3 arguments. Remember that strictly speaking <i>all</i> Haskell functions only take 1 argument, all functions which appear to take more only do so because of currying."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1565730084, "post_id": 57485198, "comment_id": 101441620, "body": "Every function in Haskell takes <i>one</i> parameter."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1565730190, "post_id": 57485198, "comment_id": 101441652, "body": "The type <code>a -&gt; (b -&gt; c)</code> is more verbose than <code>a -&gt; b -&gt; c</code> but the same."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1565737383, "post_id": 57485198, "comment_id": 101443515, "body": "Strictly speaking, each function takes exactly one argument. Loosely speaking, your <code>ring</code> can (appear to) take arbitrarily many arguments (of the right types), e.g. <code>ring id id (+) 4 5 = id (id (+)) 4 5 = (+) 4 5 = 9</code>. Number of arguments is often an illusion (albeit a convenient one, most of the times)."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565751775, "post_id": 57485198, "comment_id": 101445995, "body": "Note you can rewrite <code>ring</code> equivalently several different ways: <code>ring r q = \\p -&gt; r (q p)</code>, or <code>ring r = \\q -&gt; \\p -&gt; r (q p)</code>, or <code>ring = \\r -&gt; \\q -&gt; \\p -&gt; r (q p)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 3, "last_activity_date": 1565730849, "last_edit_date": 1565730849, "creation_date": 1565730461, "answer_id": 57485349, "question_id": 57485198, "link": "https://stackoverflow.com/questions/57485198/determining-type-of-haskell-function/57485349#57485349", "title": "Determining type of Haskell function", "body": "<p>Let's go step by step into you <code>ring</code> function (known for everybody as <code>compose</code> or <code>.</code>)</p>\n\n<p>here is the story:</p>\n\n<pre><code>ring r q p = r (q p)\n</code></pre>\n\n<p>if you start with <code>p</code> you can give to it a type, the variable is not bounded or restricted, so it can be variable, generic, so let's choose a name, <code>a</code></p>\n\n<pre><code>p :: a\n</code></pre>\n\n<p>now, <code>q</code> has something that you can tell, it takes values of type <code>p</code> as parameter, right? Because it is applied to <code>p</code> , <code>(q p)</code>, so, <code>q</code> is a function, and a function has the form (type -> type), </p>\n\n<pre><code>p :: a\nq :: (type -&gt; type)\n</code></pre>\n\n<p>now you can replace the input, <code>q</code> expects a <code>p</code> typed values, and <code>p :: a</code> so:</p>\n\n<pre><code>p :: a\nq :: a -&gt; type\n</code></pre>\n\n<p>again, the type of the return can be the same as the input, but is not restricted to be, so we can use another name to it, let use <code>b</code></p>\n\n<pre><code>p :: a\nq :: a -&gt; b\n(q p) :: b\n</code></pre>\n\n<p>now, what about <code>r</code> ?, <code>r</code> expects the result of <code>(q p)</code> and you know the type, it is <code>b</code>, same logic, <code>r :: type -&gt; type</code> because it is a function</p>\n\n<pre><code>p :: a\nq :: a -&gt; b\n(q p) :: b\nr :: b -&gt; type\n</code></pre>\n\n<p>and finally, the return type of <code>r</code> is not restricted, so it can be a <code>c</code> type, so:</p>\n\n<pre><code>p :: a\nq :: a -&gt; b\n(q p) :: b\nr :: b -&gt; c\nr (q p) :: c\n</code></pre>\n\n<p>replacing everything in <code>ring</code>:</p>\n\n<pre><code>ring :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\nring r q p = r (q p)\n</code></pre>\n\n<p>see that I didn't use the final parenthesis, because they are not needed, in haskell the functions are curried, so, its true that if you give two functions to ring, it will return a third function of type  <code>a -&gt; c</code></p>\n\n<p>let's see:</p>\n\n<pre><code>ring show (+1)\n\n(+1) :: Num a -&gt; a -&gt; a\nshow :: Show a =&gt; a -&gt; String\n\nring show (+1) :: (Show a, Num a) =&gt; a -&gt; String\n</code></pre>\n\n<p>and I didn't give the value, so that why you can write ring as:</p>\n\n<pre><code>ring :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; (a -&gt; c)\n</code></pre>\n\n<p>and remove it to:</p>\n\n<pre><code>ring :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>and to see more, check the types of:</p>\n\n<pre><code>ring show :: Show a =&gt; (b -&gt; a) -&gt; b -&gt; String\nring show (+1) :: (Show a, Num a) =&gt; a -&gt; String\nring  show (+1) 2 :: String\n</code></pre>\n\n<p>ring also can have more extra parenthesis:</p>\n\n<pre><code>ring :: (b -&gt; c) -&gt; ((a -&gt; b) -&gt; (a -&gt; c))\n</code></pre>\n\n<p>as you can see in <code>ring show</code> it returns <code>((a -&gt; b) -&gt; (a -&gt; c))</code> and <code>ring show (+1)</code> returns <code>(a -&gt; c)</code></p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 5, "last_activity_date": 1565730506, "creation_date": 1565730506, "answer_id": 57485357, "question_id": 57485198, "link": "https://stackoverflow.com/questions/57485198/determining-type-of-haskell-function/57485357#57485357", "title": "Determining type of Haskell function", "body": "<p>Every function in Haskell takes <em>one</em> parameter. A function can however return a function that takes another parameter. Haskell however introduces some syntax to make it more convenient. A signature <code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; (a -&gt; c)</code> is thus equivalent to <code>(b -&gt; c) -&gt; ((a -&gt; b) -&gt; (a -&gt; c))</code> or <code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code>.</p>\n\n<p>Let us first analyze the expression:</p>\n\n<pre><code>ring r q p = r (q p)\n</code></pre>\n\n<p>Since at the moment we do not know much about the type yet, we will first assign some types to the parameters:</p>\n\n<pre><code>r :: a\nq :: b\np :: c\nring :: a -&gt; b -&gt; c -&gt; d\n</code></pre>\n\n<p>Now we can start to determine the types. In the expression, we see <code>q p</code>, this thus means that <code>q</code> is a function, and <code>p</code> a parameter. This thus means that <code>q</code> is a function of type <code>c -&gt; e</code> (with <code>e</code> a type parameter we introduce).</p>\n\n<p>So we derived that:</p>\n\n<pre><code>q :: c -&gt; e\np :: c\nq p :: e\n</code></pre>\n\n<p>Next we see that the result of <code>q p</code> is used as a parameter with <code>r</code> the function, so that means <code>r</code> is a function that takes an <code>e</code> as parameter type. We thus set the type of <code>r</code> to <code>e -&gt; f</code>. We thus know that:</p>\n\n<pre><code>q p :: e\nr :: e -&gt; f\nr (q p) :: f\n</code></pre>\n\n<p>Since the result of <code>ring r q p</code> is <code>r (q p)</code>, this thus means that the type of <code>ring</code> is:</p>\n\n<pre><code>ring :: (e -&gt; f) -&gt; (c -&gt; e) -&gt; c -&gt; f\n</code></pre>\n\n<p>or more verbose:</p>\n\n<pre><code>ring :: (e -&gt; f) -&gt; ((c -&gt; e) -&gt; (c -&gt; f))\n</code></pre>\n"}], "owner": {"reputation": 363, "user_id": 7473854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f64161a6ba5c289d5c73dcc3563e1641?s=128&d=identicon&r=PG&f=1", "display_name": "cb7", "link": "https://stackoverflow.com/users/7473854/cb7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1565730849, "creation_date": 1565729708, "question_id": 57485198, "link": "https://stackoverflow.com/questions/57485198/determining-type-of-haskell-function", "title": "Determining type of Haskell function", "body": "<p>One past exam question was to state the type of the function <code>ring</code> with definition <code>ring r q p = r (q p)</code>. Supposedly the answer is <code>ring :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; (a -&gt; c)</code>, but I don't see where this comes from. Surely such a type would indicate that <code>ring</code> only receives two arguments, but in the definition it takes three, so what's going on?</p>\n"}, {"tags": ["performance", "haskell", "unsafe", "parametric-polymorphism"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1565722108, "post_id": 57483014, "comment_id": 101438694, "body": "(Nevermind, I see why it would be a problem now - the primitive is <code>rnf</code>, not <code>deepseq</code>.) I&#39;m not certain about whether it would actually pay off for performance anyway. Using <code>rnf</code>/<code>deepseq</code> is usually very bad for performance. It tends to change O(n) algorithms to O(n^2)."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1565722710, "post_id": 57483014, "comment_id": 101438967, "body": "&quot;Mathematically, it would be sound to simply reduce <code>Coyoneda g x</code> to <code>Coyoneda id (fmap g x)</code>&quot; - isn&#39;t that just <code>liftCoyoneda . lowerCoyoneda</code>?"}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1565734860, "post_id": 57483014, "comment_id": 101442950, "body": "Benjamin Hodgson: Yes, but the way I understand, <code>rnf</code> is not a function with an input and an output, but calling it reduces its argument &quot;wherever it is in memory&quot; so to say, i.e. in such a way that anything sharing that argument will also work on the reduced version in the future. I would like to apply <code>liftCoyoneda . lowerCoyoneda</code> as part of the reduction performed by <code>rnf</code>, so not as an ordinary Haskell function. If there is any Haskell feature that allows me to do this, it is going to be an exceptionally unsafe feature."}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1566897021, "post_id": 57483014, "comment_id": 101789912, "body": "<a href=\"https://github.com/tibbe/talks/blob/master/zurihac-2015/slides.md\" rel=\"nofollow noreferrer\">These &quot;slides&quot;</a> seem relevant."}], "answers": [{"comments": [{"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1565735188, "post_id": 57485546, "comment_id": 101443035, "body": "Thanks for rectifying the terminology. After applying the <code>Coyoneda</code> trick, the remaining space leak is more detrimental than the remaining time leak, and I hope that <code>rnf</code>ing a data structure right before storing it in the state might resolve things. The problem with applying <code>seq</code> instead is - heh - that it doesn&#39;t go deep enough, so I would need to apply <code>seq</code> all over, but I suspect that this would require me to duplicate a lot of code where I might need a strict and a lazy version."}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1565735233, "post_id": 57485546, "comment_id": 101443046, "body": "I also think you&#39;re right about <code>seq</code> not helping much when applying it to a function: it doesn&#39;t make the closure go away."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 2, "creation_date": 1565777910, "post_id": 57485546, "comment_id": 101455209, "body": "@dremodaris if you have space leaks in a data structure, you can try making the data structure strict, besides using <code>rnf</code>."}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1565784998, "post_id": 57485546, "comment_id": 101458677, "body": "The data structures go through a computation-heavy phase, and are then stored somewhere. During computation, I think laziness and <code>Coyoneda</code> are quite useful, but I would like to shrink the data before storing it."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": false, "score": 1, "last_activity_date": 1565777797, "last_edit_date": 1565777797, "creation_date": 1565731747, "answer_id": 57485546, "question_id": 57483014, "link": "https://stackoverflow.com/questions/57483014/nfdata-instance-for-the-coyoneda-type/57485546#57485546", "title": "NFData instance for the Coyoneda type", "body": "<blockquote>\n  <p>The trouble is that reducing lambdas to normal form doesn't reduce the thunk in their body</p>\n</blockquote>\n\n<p>Functions do not contain \"thunks\". They contain a pointer to immutable code, possibly along with a closure of values of captured variables. Thunks might evaluate to functions, but functions themselves are always considered to be fully evaluated. </p>\n\n<p>Also, since functions contain pointers to immutable machine code, function bodies cannot be updated or modified at runtime in any way. <code>rnf</code> is a bit of a misnomer, since GHC can't evaluate under function binders, thus can't reduce to normal forms in the usual sense in the theory of lambda calculi. </p>\n\n<p><code>rnf</code> does exactly the same as <code>seq</code> on functions, and <code>seq</code> itself only does anything noteworthy if you have a thunk which reduces to a function. This is not common in Haskell code; one such example would be a lazy lookup from a structure which contains functions. </p>\n\n<p><code>rnf</code> should be used sparingly, since it fully traverses data structures. The reason people usually use <code>rnf</code> is to get rid of space leaks, not to (directly) make things faster.</p>\n\n<p>In summary, you could try using <code>seq</code> on the function part of <code>Coyoneda</code>, and probably should not use <code>rnf</code>, but I doubt that <code>seq</code> would help in a measurable way.</p>\n"}, {"comments": [{"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1565786909, "post_id": 57494755, "comment_id": 101459670, "body": "For other readers: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO-Unsafe.html#v:unsafePerformIO\" rel=\"nofollow noreferrer\">various precautions</a> are apparently necessary when using <code>unsafePerformIO</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1565788634, "post_id": 57494755, "comment_id": 101460663, "body": "@dremodaris, while I swam some laps, I realized I made a couple mistakes, one of which is important. I hope everything is right now. This particular application is sufficiently pure in spirit that most of the nastiest <code>unsafePerformIO</code> caveats shouldn&#39;t apply."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 1, "creation_date": 1565789689, "post_id": 57494755, "comment_id": 101461351, "body": "@dremodaris, I believe it&#39;s safe in a world without fully-polymorphic <code>seq</code> in which every <code>Functor</code> instance is lawful. In real Haskell, it&#39;s a little unsafe."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1565792597, "post_id": 57494755, "comment_id": 101463004, "body": "@dremodaris, actually, I think there&#39;s no way to be totally safe here..... Suppose <code>fmap f (xs :: [a]) = drop 1 (map f xs)</code>. Now <code>fmap f</code> will drop 1 element but <code>fmap f . force</code> will drop 2."}, {"owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "edited": false, "score": 0, "creation_date": 1565794299, "post_id": 57494755, "comment_id": 101463932, "body": "Yes, I&#39;ve defined a copy of <code>unsafeReadCoyoneda</code> called <code>readCoyoneda</code> which takes a <code>Functor</code> instance and am pretending that all such instances are well-behaved. I&#39;m building further on that. Among other things, I&#39;ve defined a bidirectional <code>Coyoneda</code> pattern as you have suggested in an earlier version of your answer."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 1, "last_activity_date": 1565791736, "last_edit_date": 1565791736, "creation_date": 1565785862, "answer_id": 57494755, "question_id": 57483014, "link": "https://stackoverflow.com/questions/57483014/nfdata-instance-for-the-coyoneda-type/57494755#57494755", "title": "NFData instance for the Coyoneda type", "body": "<p>Yes, you can do something like that, and yes, it's kind of ugly.</p>\n\n<pre><code>module Data.Functor.Coyoneda.NF where\n\nimport qualified Data.Functor.Coyoneda as S\nimport Data.IORef\nimport Control.DeepSeq\nimport System.IO.Unsafe\nimport Control.Exception\n\nnewtype Coyoneda f a =\n  UnsafeCoyonedaFromRef {unsafeCoyonedaToRef :: IORef (S.Coyoneda f a)}\n\nnewCoyonedaIO :: S.Coyoneda f a -&gt; IO (Coyoneda f a)\nnewCoyonedaIO c = UnsafeCoyonedaFromRef &lt;$&gt; newIORef c\n\nnewCoyoneda :: S.Coyoneda f a -&gt; Coyoneda f a\nnewCoyoneda = unsafePerformIO . newCoyonedaIO\n\nunsafeReadCoyonedaIO :: Coyoneda f a -&gt; IO (S.Coyoneda f a)\nunsafeReadCoyonedaIO (UnsafeCoyonedaFromRef ref) = readIORef ref\n\nunsafeReadCoyoneda :: Coyoneda f a -&gt; S.Coyoneda f a\nunsafeReadCoyoneda = unsafePerformIO . unsafeReadCoyonedaIO\n\n{-| `fmap` happens under the reference, but does NOT traverse `f`. -}\ninstance Functor (Coyoneda f) where\n  fmap f c = unsafePerformIO $ do\n    q &lt;- unsafeReadCoyonedaIO c\n    newCoyonedaIO $ fmap f q\n\ninstance (Functor f, NFData (f a)) =&gt; NFData (Coyoneda f a) where\n  rnf (UnsafeCoyonedaFromRef ref) = unsafePerformIO $ do\n    co &lt;- readIORef ref\n    let fx = S.lowerCoyoneda co\n    -- We use evaluate because we want to be really sure the reduction to NF\n    -- succeeds and we don't install bottom in the IORef.\n    evaluate (rnf fx)\n    writeIORef ref (S.liftCoyoneda fx)\n\nliftCoyoneda :: f a -&gt; Coyoneda f a\nliftCoyoneda = newCoyoneda . S.liftCoyoneda\n\nlowerCoyoneda :: Functor f =&gt; Coyoneda f a -&gt; f a\nlowerCoyoneda = S.lowerCoyoneda . unsafeReadCoyoneda\n</code></pre>\n\n<hr>\n\n<p>What makes <code>unsafeReadCoyoneda</code> \"unsafe\"? It subtly breaks referential transparency. If someone can extract the wrapped <code>f a</code>, then they may be able to do something like traverse the value, forcing the supposedly hidden elements. Or if <code>f</code> has a somewhat bogus <code>fmap</code> that changes its structure then it's possible to observe a change from supposedly pure code (ouch).</p>\n"}], "owner": {"reputation": 345, "user_id": 2610474, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1c33bc50efcb00a277fd29737d8f73?s=128&d=identicon&r=PG", "display_name": "dremodaris", "link": "https://stackoverflow.com/users/2610474/dremodaris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 213, "favorite_count": 0, "accepted_answer_id": 57494755, "answer_count": 2, "score": 7, "last_activity_date": 1565791736, "creation_date": 1565718831, "last_edit_date": 1565785196, "question_id": 57483014, "link": "https://stackoverflow.com/questions/57483014/nfdata-instance-for-the-coyoneda-type", "title": "NFData instance for the Coyoneda type", "body": "<p>I have a Haskell project that uses <code>fmap</code> on data structures <strong>very</strong> intensively. In order to avoid traversing the same data structure again and again, while retaining the possibility to use <code>fmap</code> liberally, I decided to use the <a href=\"https://hackage.haskell.org/package/kan-extensions-5.2/docs/Data-Functor-Contravariant-Coyoneda.html#t:Coyoneda\" rel=\"nofollow noreferrer\"><code>Coyoneda</code></a>-type to guard some of the bigger structures.</p>\n\n<p>The Coyoneda type has constructor <code>Coyoneda :: (x -&gt; y) -&gt; f x -&gt; Coyoneda f y</code>. The idea is that by parametricity, more precisely by the co-Yoneda lemma, the types <code>f a</code> and <code>Coyoneda f a</code> are isomorphic, but the advantage of the <code>Coyoneda</code> type is that it postpones the actual structure traversal.</p>\n\n<p>For example, in the following code, the first expression traverses the underlying structure 3 times, and the second one only once:</p>\n\n<pre><code>fmap k $ fmap h $ fmap g $ (x :: f a)\nlowerCoyoneda $ fmap k $ fmap h $ fmap g $ liftCoyoneda $ (x :: f a)\n</code></pre>\n\n<p>Indeed, the second line reduces as follows:</p>\n\n<pre><code>lowerCoyoneda $ fmap k $ fmap h $ fmap g $ liftCoyoneda $ x\nlowerCoyoneda $ fmap k $ fmap h $ fmap g $ Coyoneda id x\nlowerCoyoneda $ fmap k $ fmap h $ Coyoneda g x\nlowerCoyoneda $ fmap k $ Coyoneda (h . g) x\nlowerCoyoneda $ Coyoneda (k . h . g) x\nfmap (k . h . g) x\n</code></pre>\n\n<p>so it effectively postpones the actual structure traversal until you apply <code>lowerCoyoneda</code>.</p>\n\n<p>This had a massive impact on time and a big impact on space performance, but I am still not satisfied. For this reason, I want to start using <code>deepseq</code> (or similar) as (indirectly) provided by the <a href=\"https://hackage.haskell.org/package/deepseq-1.4.4.0/docs/Control-DeepSeq.html#t:NFData\" rel=\"nofollow noreferrer\"><code>NFData</code></a> typeclass. So I want to implement <code>NFData</code> for my functors, which now have <code>Coyoneda</code>-guards in their definitions.</p>\n\n<p>The trouble is that reducing lambdas to normal form doesn't shrink the size of the data in their closure.</p>\n\n<p>Mathematically, it would be sound to simply reduce <code>Coyoneda g x</code> to <code>Coyoneda id (fmap g x)</code>. I am wondering if there is some unsafe hack - some sort of runtime rewrite rule - to implement this. Other solutions are also appreciated.</p>\n"}, {"tags": ["performance", "haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1565681438, "post_id": 57471398, "comment_id": 101418336, "body": "I guess more information has to be kept around at runtime, just in case there is an error. We have to regard &quot;normal branches&quot;, as computations which have not reached an error, but might be in the future."}], "answers": [{"comments": [{"owner": {"reputation": 3074, "user_id": 1608276, "user_type": "registered", "accept_rate": 28, "profile_image": "https://i.stack.imgur.com/XiZ2q.jpg?s=128&g=1", "display_name": "luochen1990", "link": "https://stackoverflow.com/users/1608276/luochen1990"}, "edited": false, "score": 0, "creation_date": 1565775926, "post_id": 57485352, "comment_id": 101454170, "body": "So, adding <code>HasCallStack</code> to total function could be optmized as if there is no <code>HasCallStack</code>, but GHC is not smart enough to optmize it this much,  so even adding <code>HasCallStack</code> to total function also has runtime overhead now, right?"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 3074, "user_id": 1608276, "user_type": "registered", "accept_rate": 28, "profile_image": "https://i.stack.imgur.com/XiZ2q.jpg?s=128&g=1", "display_name": "luochen1990", "link": "https://stackoverflow.com/users/1608276/luochen1990"}, "edited": false, "score": 1, "creation_date": 1565809145, "post_id": 57485352, "comment_id": 101470515, "body": "Well, I think GHC can do better with &quot;statically total&quot; functions where no analysis of the runtime behavior is needed; such functions would still take an extra argument but, if inlined, might have the call stack optimized away.  I don&#39;t think you can rely on it, though."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 8, "last_activity_date": 1565731009, "last_edit_date": 1565731009, "creation_date": 1565730485, "answer_id": 57485352, "question_id": 57471398, "link": "https://stackoverflow.com/questions/57471398/how-does-hascallstack-influence-the-performance-of-a-normal-branch-in-haskell/57485352#57485352", "title": "How does HasCallStack influence the performance of a normal branch in Haskell?", "body": "<p>The effect of adding a <code>HasCallStack</code> constraint to a function <code>foo</code> is more or less equivalent to:</p>\n\n<ul>\n<li>adding an additional input argument for the call stack to <code>foo</code>'s argument list;</li>\n<li>wherever <code>foo</code> is invoked, constructing a call stack argument for it, by pushing an information frame (consisting of the function name \"foo\" and the source location where it was invoked) onto the input call stack (if <code>foo</code> is invoked from another function with a <code>HasCallStack</code> constraint) or onto an empty call stack (if it is invoked from a function without a <code>HasCallStack</code> constraint).</li>\n</ul>\n\n<p>So... if you have some functions:</p>\n\n<pre><code>foo :: HasCallStack =&gt; Int -&gt; String -&gt; String\nfoo n = bar n '*'\n\nbar :: HasCallStack =&gt; Int -&gt; Char -&gt; String -&gt; String\nbar n c str = if n &gt;= 0 then c' ++ ' ':str ++ ' ':c'\n              else error \"bad n\"\n  where c' = replicate n c\n\nbaz :: String\nbaz = foo 3 \"hello\"\n</code></pre>\n\n<p>then adding <code>HasCallStack</code> to <code>foo</code> and <code>bar</code> (but leaving <code>baz</code> alone) has basically the same effect as if you'd written:</p>\n\n<pre><code>foo cs n = bar cs' n\n  where cs' = pushCallStack (\"bar\", &lt;loc&gt;) cs\nbar cs n c str\n  = if n &gt;= 0 then c' ++ ' ':str ++ ' ':c'\n    else error cs' \"bad n\"\n  where c' = replicate n c\n        cs' = pushCallStack (\"error\", &lt;loc&gt;) cs\nbaz = foo cs' 3 \"hello\"\n  where cs' = pushCallStack (\"foo\", &lt;loc&gt;) emptyCallStack\n</code></pre>\n\n<p>So, the baseline, unoptimized performance cost is the cost of an extra parameter for each function decorated with <code>HasCallStack</code> plus the cost of a thunk allocation to supply that parameter for every invocation point of the decorated function.  (These costs are paid even if no error is triggered.)</p>\n\n<p>In practice, optimized code will be... erm... optimized.  For example, if the above example is compiled with <code>-O2</code>, <code>foo</code> will be inlined and <code>bar</code> will be specialized in the definition of <code>baz</code> in such a way that the only runtime cost of the call stack is that a static pointer (to a thunk for creating the full call stack for the <code>error</code> call) gets passed to the specialized version of <code>bar</code> (but ignored, since no error is generated).</p>\n\n<p>GHC doesn't seem to be smart enough to determine that <code>baz</code> will never follow the <code>error</code> case and so doesn't need the stack frame at all.</p>\n"}], "owner": {"reputation": 3074, "user_id": 1608276, "user_type": "registered", "accept_rate": 28, "profile_image": "https://i.stack.imgur.com/XiZ2q.jpg?s=128&g=1", "display_name": "luochen1990", "link": "https://stackoverflow.com/users/1608276/luochen1990"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 226, "favorite_count": 3, "accepted_answer_id": 57485352, "answer_count": 1, "score": 13, "last_activity_date": 1565731009, "creation_date": 1565672743, "last_edit_date": 1565709245, "question_id": 57471398, "link": "https://stackoverflow.com/questions/57471398/how-does-hascallstack-influence-the-performance-of-a-normal-branch-in-haskell", "title": "How does HasCallStack influence the performance of a normal branch in Haskell?", "body": "<p>Generating a call stack when reaching the error branch has runtime cost; that is easy to understand.</p>\n\n<p>But will the <code>HasCallStack</code> constraint also influence the performance of a normal branch?  How?</p>\n"}, {"tags": ["haskell", "monads", "arrows", "reader-monad", "kleisli"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1565697378, "post_id": 57470639, "comment_id": 101426257, "body": "Interesting follow-up question: which are the monads that have this property? Are all of them isomorphic to a combination of <code>Reader</code> and <code>Writer</code> with an <a href=\"https://en.wikipedia.org/wiki/Idempotence\" rel=\"nofollow noreferrer\">idempotent</a> monoid?"}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565705593, "post_id": 57470639, "comment_id": 101430838, "body": "@leftaroundabout I&#39;m pretty sure we can add <code>Either</code> and <code>Maybe</code> Monads to the list since their effect depends on the sequence of applications, and, according to the definition of <code>(&amp;&amp;&amp;)</code>, the applications are the same and are in the same order on the left hand and the right hand. But I might be mistaken. What do you think?"}], "answers": [{"comments": [{"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 0, "creation_date": 1565773320, "post_id": 57472941, "comment_id": 101452880, "body": "Do <code>Either</code> and <code>Maybe</code> Monads also have this property? I believe they do since their effect depends on the sequence of applications, and, according to the definition of <code>(&amp;&amp;&amp;)</code>, the applications are the same and are in the same order on the left hand and the right hand."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 1, "creation_date": 1565789153, "post_id": 57472941, "comment_id": 101461015, "body": "@ZhiltsoffIgor They should have it, I guess."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1565681253, "last_edit_date": 1565681253, "creation_date": 1565680902, "answer_id": 57472941, "question_id": 57470639, "link": "https://stackoverflow.com/questions/57470639/f-g-h-kleisli-e-a-b-f-g-h-f-g-f-h/57472941#57472941", "title": "f, g, h :: Kleisli ((-&gt;) e) a b &lt;=&gt; f &gt;&gt;&gt; (g &amp;&amp;&amp; h) = (f &gt;&gt;&gt; g) &amp;&amp;&amp; (f &gt;&gt;&gt; h)?", "body": "<h1>Intuitively</h1>\n\n<p>Yes, the <code>(-&gt;) e</code> monad is a reader monad, and it does not matter if we perform two reads or only one. Running <code>f</code> once or twice does not matter, since it will always produce the same result, with the same effect (reading).</p>\n\n<p>Your reasoning seems intuitively correct to me.</p>\n\n<h1>Formally</h1>\n\n<p><code>f, g, h :: Kleisli ((-&gt;) e) a b</code> essentially means <code>f, g, h :: a -&gt; (e -&gt; b)</code>, removing the wrapper.</p>\n\n<p>Again, ignoring the wrapper, we get</p>\n\n<pre><code>for all (f :: a -&gt; e -&gt; b) and (g :: b -&gt; e -&gt; c)\nf &gt;&gt;&gt; g = (\\xa xe -&gt; g (f xa xe) xe)\n\nfor all (f :: a -&gt; e -&gt; b) and (g :: a -&gt; e -&gt; c)\nf &amp;&amp;&amp; g = (\\xa xe -&gt; (f xa xe, g xa xe))\n</code></pre>\n\n<p>Hence:</p>\n\n<pre><code>f &gt;&gt;&gt; (g &amp;&amp;&amp; h)\n= { def &amp;&amp;&amp; }\nf &gt;&gt;&gt; (\\xa xe -&gt; (g xa xe, h xa xe))\n= { def  &gt;&gt;&gt; }\n(\\xa' xe' -&gt; (\\xa xe -&gt; (g xa xe, h xa xe)) (f xa' xe') xe')\n= { beta }\n(\\xa' xe' -&gt; (g (f xa' xe') xe', h (f xa' xe') xe'))\n\n\n(f &gt;&gt;&gt; g) &amp;&amp;&amp; (f &gt;&gt;&gt; h)\n= { def &gt;&gt;&gt; }\n(\\xa xe -&gt; g (f xa xe) xe) &amp;&amp;&amp; (\\xa xe -&gt; h (f xa xe) xe)\n= { def &amp;&amp;&amp; }\n(\\xa' xe' -&gt; ((\\xa xe -&gt; g (f xa xe) xe) xa' xe', (\\xa xe -&gt; h (f xa xe) xe) xa' xe'))\n= { beta }\n(\\xa' xe' -&gt; (g (f xa' xe') xe', h (f xa' xe') xe'))\n</code></pre>\n"}], "owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 182, "favorite_count": 1, "accepted_answer_id": 57472941, "answer_count": 1, "score": 5, "last_activity_date": 1594738949, "creation_date": 1565665674, "last_edit_date": 1594738949, "question_id": 57470639, "link": "https://stackoverflow.com/questions/57470639/f-g-h-kleisli-e-a-b-f-g-h-f-g-f-h", "title": "f, g, h :: Kleisli ((-&gt;) e) a b &lt;=&gt; f &gt;&gt;&gt; (g &amp;&amp;&amp; h) = (f &gt;&gt;&gt; g) &amp;&amp;&amp; (f &gt;&gt;&gt; h)?", "body": "<p>Edit: We will call an arrow <code>p</code> pure if exists such function <code>f</code> that: <code>p = arr f</code>.</p>\n\n<p>I'm trying to get a better grasp of Arrows in Haskell, and I want to figure out when </p>\n\n<p><code>f &gt;&gt;&gt; (g &amp;&amp;&amp; h) = (f &gt;&gt;&gt; g) &amp;&amp;&amp; (f &gt;&gt;&gt; h)</code>, where <code>f</code>, <code>g</code>, <code>h</code> are arrows.</p>\n\n<p>Obviously, it isn't generally true. In this particular example, the side-effects are duplicated on the right hand:</p>\n\n<pre><code>GHCi&gt; c = Kleisli $ \\x -&gt; (\"AB\", x + 1)\nGHCi&gt; fst . runKleisli (c &gt;&gt;&gt; c &amp;&amp;&amp; c) $ 1\n\"ABABAB\"\nGHCi&gt; fst . runKleisli ((c &gt;&gt;&gt; c) &amp;&amp;&amp; (c &gt;&gt;&gt; c)) $ 1\n\"ABABABAB\"\n</code></pre>\n\n<p>Obviously, <code>f &gt;&gt;&gt; (g &amp;&amp;&amp; h) = (f &gt;&gt;&gt; g) &amp;&amp;&amp; (f &gt;&gt;&gt; h)</code> if <code>f</code> is pure.</p>\n\n<p>I was experimenting in GHCi with this statement for <code>f, g, h :: Kleisli ((-&gt;) e) a b</code>, and didn't manage to find such values of <code>f</code>, <code>g</code> and <code>h</code> that <code>f &gt;&gt;&gt; (g &amp;&amp;&amp; h) \u2260 (f &gt;&gt;&gt; g) &amp;&amp;&amp; (f &gt;&gt;&gt; h)</code>. Is this statement indeed true for <code>f, g, h :: Kleisli ((-&gt;) e) a b</code>, and, if so, could this be a valid proof of that:\nThe effect of the <code>Monad ((-&gt;) e)</code> is reading from the environment. Thus, the result of the application of <code>f</code> is the function with the help of which <code>g</code> and <code>h</code> are going to read from the environment. No matter where this function was created \u2013 it is the same since it is applied to the same argument every time, thus the result of reading from the environment is the same, thus the overall result is the same as well.</p>\n"}, {"tags": ["haskell", "input", "io", "keyboard"], "comments": [{"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1565654653, "post_id": 57469425, "comment_id": 101412005, "body": "At least I want to know the reason of failure?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 2, "creation_date": 1565656396, "post_id": 57469425, "comment_id": 101412266, "body": "A bit of advice on the form of your question: you asked &quot;why this failed&quot;, but it would also have been good to explain what &quot;failure&quot; means to you. Otherwise people have to guess what you are trying to understand, and risk guessing wrong. There are so many ways things can &quot;not work&quot;. A good format of question is <b>&quot;what I did, what I expected, what I saw&quot;</b>, and for more subtle problems &quot;why what I saw doesn&#39;t match what I expected&quot;."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565657015, "post_id": 57469425, "comment_id": 101412364, "body": "Sorry, my first answer was too hasty, the function keys do translate to escape sequences. Maybe you&#39;re having trouble with the fact that <code>stdin</code> is buffered."}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "closed_date": 1565654519, "answer_count": 0, "score": 2, "last_activity_date": 1565663576, "creation_date": 1565652611, "last_edit_date": 1565663576, "question_id": 57469425, "link": "https://stackoverflow.com/questions/57469425/how-to-read-function-keys-etc", "closed_reason": "Duplicate", "title": "How to read function keys etc?", "body": "<p>This question is a sequel to the following question: <a href=\"https://stackoverflow.com/q/57446365/4540658\">How to prevent inputs being flushed into output?</a></p>\n\n<p>Using this program, I observed that Function keys (and some others) are compositions of multiple characters:</p>\n\n<pre><code>'\\ESC' -- F1 pressed\n'O'\n'P'\n'\\ESC' -- Insert pressed\n'['\n'2'\n'~'\n'\\ESC' -- Alt+v pressed\n'v'\n</code></pre>\n\n<p>So I wanted to read such keys. Here is my attempt:</p>\n\n<pre><code>import Control.Monad\nimport System.IO\n\nmain :: IO ()\nmain = forever $ do\n    hSetEcho stdin False\n    c &lt;- getChar\n    cs &lt;- getRemaining\n    putStrLn $ case c:cs of\n        \"\\ESCOP\" -&gt; \"\\\\F1\"\n        \"\\ESCOQ\" -&gt; \"\\\\F2\"\n        \"\\ESCOR\" -&gt; \"\\\\F3\"\n        \"\\ESCOS\" -&gt; \"\\\\F4\"\n        \"\\ESC[15~\" -&gt; \"\\\\F5\"\n        \"\\ESC[17~\" -&gt; \"\\\\F6\"\n        \"\\ESC[18~\" -&gt; \"\\\\F7\"\n        \"\\ESC[19~\" -&gt; \"\\\\F8\"\n        \"\\ESC[20~\" -&gt; \"\\\\F9\"\n        \"\\ESC[24~\" -&gt; \"\\\\F12\"\n        \"\\ESC[2~\" -&gt; \"\\\\Insert\"\n        \"\\ESC[3~\" -&gt; \"\\\\Delete\"\n        \"\\ESC[H\" -&gt; \"\\\\Home\"\n        \"\\ESC[F\" -&gt; \"\\\\End\"\n        \"\\ESC[5~\" -&gt; \"\\\\PageUp\"\n        \"\\ESC[6~\" -&gt; \"\\\\PageDown\"\n        \"\\ESC[A\" -&gt; \"\\\\\u2191\"\n        \"\\ESC[D\" -&gt; \"\\\\\u2190\"\n        \"\\ESC[B\" -&gt; \"\\\\\u2193\"\n        \"\\ESC[C\" -&gt; \"\\\\\u2192\"\n        \"\\ESC[E\" -&gt; \"\\\\NumPad5\"\n        '\\ESC':_ -&gt; \"\\\\Alt\" ++ cs\n        _        -&gt; c:cs\n  where\n    getRemaining = do\n        c &lt;- hReady stdin &gt;&gt;= \\r -&gt; if r then pure &lt;$&gt; getChar else return \"\"\n        if null c\n            then return \"\"\n            else (c ++) &lt;$&gt; getRemaining\n</code></pre>\n\n<p>The key idea was to call <code>getChar</code> until the input buffer becomes empty.</p>\n\n<p>But why this failed and won't accept any input?</p>\n\n<p>EDIT: I expected something like this:</p>\n\n<pre><code>a -- A pressed\nA -- Shift+A pressed\n\\F1 -- F1 pressed\n\\Insert -- Insert pressed\n\\Alte -- Alt+E pressed\n</code></pre>\n\n<p>But I don't see any output. If I don't <code>hSetEcho stdin False</code>, the only output are echoes.</p>\n\n<p>EDIT 2: I tried:</p>\n\n<pre><code>getRemaining = do\n    c &lt;- isEOF &gt;&gt;= \\r -&gt; if r then return \"\" else pure &lt;$&gt; getChar\n    case c of\n        \"\" -&gt; return \"\"\n        _  -&gt; (c ++) &lt;$&gt; getRemaining\n</code></pre>\n\n<p>But the problem remains the same.</p>\n"}, {"tags": ["haskell", "debian-based"], "comments": [{"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1565683097, "post_id": 57467841, "comment_id": 101419041, "body": "Are you sure you want to use such ancient technology?"}, {"owner": {"reputation": 91, "user_id": 10795912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47727e032126c234dda302200df38d06?s=128&d=identicon&r=PG&f=1", "display_name": "bcloney", "link": "https://stackoverflow.com/users/10795912/bcloney"}, "reply_to_user": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1565732523, "post_id": 57467841, "comment_id": 101442403, "body": "I guess now I&#39;m pretty sure I don&#39;t want to use any more old software without knowing exactly what I&#39;m trying to do. Especially in this language."}], "answers": [{"tags": [], "owner": {"reputation": 91, "user_id": 10795912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47727e032126c234dda302200df38d06?s=128&d=identicon&r=PG&f=1", "display_name": "bcloney", "link": "https://stackoverflow.com/users/10795912/bcloney"}, "is_accepted": false, "score": 0, "last_activity_date": 1565732645, "creation_date": 1565732645, "answer_id": 57485682, "question_id": 57467841, "link": "https://stackoverflow.com/questions/57467841/how-can-i-successfully-install-eclipsefp-dependencies-buildwrapper-and-scion-b/57485682#57485682", "title": "How can I successfully install eclipsefp dependencies? (buildwrapper and scion-browser)", "body": "<p>I found this <a href=\"https://github.com/rikvdkleij/intellij-haskell\" rel=\"nofollow noreferrer\">plugin</a> in Haskell IDE's <a href=\"https://wiki.haskell.org/IDEs\" rel=\"nofollow noreferrer\">recommendations</a>. It's awesome, I can load my project in GHCi or run it in one click. I wish I tried this before.</p>\n\n<p>I was definitely trying to do something wrong, deprecated software is bad idea, and generally not a good practice at all (stubbornness has to pass at some point).</p>\n"}], "owner": {"reputation": 91, "user_id": 10795912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47727e032126c234dda302200df38d06?s=128&d=identicon&r=PG&f=1", "display_name": "bcloney", "link": "https://stackoverflow.com/users/10795912/bcloney"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1565732645, "creation_date": 1565641692, "question_id": 57467841, "link": "https://stackoverflow.com/questions/57467841/how-can-i-successfully-install-eclipsefp-dependencies-buildwrapper-and-scion-b", "title": "How can I successfully install eclipsefp dependencies? (buildwrapper and scion-browser)", "body": "<p>I have been for a long time to successfully install the eclipse eclipse \"fp\" extension that I want to try even knowing that is not maintained. I tried old proposed solutions, which do not resolved my issue, but at least helped. There's a question that a user suggests making a sandbox \"as the author suggests\", but it is offline, I have no clue how to do it in the context of the Eclipse FP installation.</p>\n\n<p>Firstly. Having a fresh install with the cabal executable and ghc in my path, going to Haskell's options in the eclipse preferences gave errors related to UI, so I began installing the dependencies mentioned in the online <a href=\"http://eclipsefp.github.io/\" rel=\"nofollow noreferrer\">page</a>. </p>\n\n<p>To install the dependencies at once, I finally executed <code>cabal install utf8-string-0.3.8  happy terminfo  buildwrapper  scion-browser-0.3.2</code> using ghc-7.8.4 (deb 9) which did not led me again a error related to dependencies in contrary to other versions (maybe all of the debian repo). But gave me the following error:</p>\n\n<pre><code>Resolving dependencies...\nConfiguring th-lift-instances-0.1.11...\nConfiguring happy-1.19.5...\nBuilding th-lift-instances-0.1.11...\nFailed to install th-lift-instances-0.1.11\nBuild log ( /home/user/.cabal/logs/ghc-7.8.4/th-lift-instances-0.1.11-CIJlvzaRbR2DTAkKUXtGrB.log ):\ncabal: Entering directory '/tmp/cabal-tmp-13572/th-lift-instances-0.1.11'\nConfiguring th-lift-instances-0.1.11...\nPreprocessing library for th-lift-instances-0.1.11..\nBuilding library for th-lift-instances-0.1.11..\n[1 of 1] Compiling Instances.TH.Lift ( src/Instances/TH/Lift.hs, dist/build/Instances/TH/Lift.o )\nLoading package ghc-prim ... linking ... done.\ninteger-gmp base transformers-0.3.0.0 fail-4.9.0.0 ... linking ... done primitive-0.7.0.0 array-0.5.0.0 deepseq-1.3.0.2 ... linking ... done.\n[...]\n\nsrc/Instances/TH/Lift.hs:141:10:\n    Duplicate instance declarations:\n      instance Lift Text.Text\n        -- Defined at src/Instances/TH/Lift.hs:141:10\n      instance Lift Text.Text -- Defined in \u2018Data.Text\u2019\n\nsrc/Instances/TH/Lift.hs:144:10:\n    Duplicate instance declarations:\n      instance Lift Text.Lazy.Text\n        -- Defined at src/Instances/TH/Lift.hs:144:10\n      instance Lift Text.Lazy.Text -- Defined in \u2018Data.Text.Lazy\u2019\ncabal: Leaving directory '/tmp/cabal-tmp-13572/th-lift-instances-0.1.11'\nBuilding happy-1.19.5...\nInstalled happy-1.19.5\ncabal: Error: some packages failed to install:\nhttp-api-data-0.3.6-GIzTiZjkgryH72JVZRYNGw depends on http-api-data-0.3.6\nwhich failed to install.\npersistent-2.7.3.1-3HvNd9Eyn968ranIeThmQz depends on persistent-2.7.3.1 which\nfailed to install.\npersistent-sqlite-2.6.4-EE5sqx4PH2C9q8mniK9twF depends on\npersistent-sqlite-2.6.4 which failed to install.\npersistent-template-2.1.3.6-BjKjksCBzOLEjWTgFDeWyM depends on\npersistent-template-2.1.3.6 which failed to install.\nscion-browser-0.3.2-KA6F1jz9d5G2f7dPj11jrk depends on scion-browser-0.3.2\nwhich failed to install.\nth-lift-instances-0.1.11-CIJlvzaRbR2DTAkKUXtGrB failed during the building\nphase. The exception was:\nExitFailure 1\nuri-bytestring-0.3.0.2-5kqtjrq6OAQHifT5lZcXoC depends on\nuri-bytestring-0.3.0.2 which failed to install.\n\n</code></pre>\n\n<p>Output near the error with \"-v\" option:</p>\n\n<pre><code>\nInstalled happy-1.19.5\nWorld file is already up to date.\nThe executable file\nhas been installed at /home/user/.cabal/bin/happy\nCallStack (from HasCallStack):\n  die', called at ./Distribution/Client/Install.hs:993:15 in main:Distribution.Client.Install\ncabal: Error: some packages failed to install:\nhttp-api-data-0.3.6-GIzTiZjkgryH72JVZRYNGw depends on http-api-data-0.3.6\nwhich failed to install.\npersistent-2.7.3.1-3HvNd9Eyn968ranIeThmQz depends on persistent-2.7.3.1 which\nfailed to install.\npersistent-sqlite-2.6.4-EE5sqx4PH2C9q8mniK9twF depends on\npersistent-sqlite-2.6.4 which failed to install.\npersistent-template-2.1.3.6-BjKjksCBzOLEjWTgFDeWyM depends on\npersistent-template-2.1.3.6 which failed to install.\nscion-browser-0.3.2-KA6F1jz9d5G2f7dPj11jrk depends on scion-browser-0.3.2\nwhich failed to install.\nth-lift-instances-0.1.11-CIJlvzaRbR2DTAkKUXtGrB failed during the building\nphase. The exception was:\nExitFailure 1\nuri-bytestring-0.3.0.2-5kqtjrq6OAQHifT5lZcXoC depends on\nuri-bytestring-0.3.0.2 which failed to install.\n</code></pre>\n\n<p>I know the plugin is not maintained, but still I would like to try,</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 0, "creation_date": 1565639684, "post_id": 57467306, "comment_id": 101408131, "body": "Ah, that&#39;s sweet. Didn&#39;t think of <code>RankNTypes</code> in terms of argument and not a constraint. Thanks!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 0, "creation_date": 1565642481, "post_id": 57467306, "comment_id": 101409124, "body": "@SergeyKolbasov A natural transformation has type <code>forall x. F x -&gt; G x</code>, so if we want to pass that as an argument, we need <code>(forall x. F x -&gt; G x) -&gt; SomeResultType</code>, which is a higher rank type."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1565639400, "last_edit_date": 1565639400, "creation_date": 1565638688, "answer_id": 57467306, "question_id": 57467085, "link": "https://stackoverflow.com/questions/57467085/natural-transformation-as-an-argument-in-haskell/57467306#57467306", "title": "Natural transformation as an argument in Haskell", "body": "<p>Certainly, you just need to demand that the implementer, not the caller, gets to choose the variable:</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\nmapK :: (forall a. m a -&gt; IO a) -&gt; Kleisli m Bool Int -&gt; Kleisli IO Bool Int\n-- implementation is exactly as before\nmapK toIO kleisli = Kleisli (toIO . runKleisli kleisli)\n-- OR, with TypeApplications also on,\nmapK toIO = coerce @(_ (Bool -&gt; _ Int)) (toIO.)\n</code></pre>\n"}], "owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 1, "accepted_answer_id": 57467306, "answer_count": 1, "score": 4, "last_activity_date": 1565639400, "creation_date": 1565637619, "question_id": 57467085, "link": "https://stackoverflow.com/questions/57467085/natural-transformation-as-an-argument-in-haskell", "title": "Natural transformation as an argument in Haskell", "body": "<p>I'm looking for a way to define natural transformation as a simple argument to pass to a function.</p>\n\n<p>Let's have a simple function as an example:</p>\n\n<pre><code>mapK :: (m Int -&gt; IO Int) -&gt; Kleisli m Bool Int -&gt; Kleisli IO Bool Int\nmapK toIO kleisli = Kleisli (\\bool -&gt; toIO $ runKleisli kleisli bool)\n</code></pre>\n\n<p>Neat, but if I change it to:</p>\n\n<pre><code>mapK :: (m a -&gt; IO a) -&gt; Kleisli m Bool Int -&gt; Kleisli IO Bool Int\nmapK toIO kleisli = Kleisli (\\bool -&gt; toIO $ runKleisli kleisli bool)\n</code></pre>\n\n<p>I get the error that <code>Int</code> isn't an <code>a</code> (no surprise there).</p>\n\n<p>I know it's possible to achieve it using constraint like:</p>\n\n<pre><code>class NaturalTransformation f g where\n  transform :: f a -&gt; g a\n\nmapK :: (NaturalTransformation m IO) =&gt; Kleisli m Bool Int -&gt; Kleisli IO Bool Int\n</code></pre>\n\n<p>but I'm curious if it's also possible to do it in plain arguments.</p>\n"}, {"tags": ["haskell", "functional-programming", "let"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 5, "creation_date": 1565632115, "post_id": 57465882, "comment_id": 101405100, "body": "You don&#39;t need to use a <code>do</code> here at all."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1565632179, "post_id": 57465882, "comment_id": 101405124, "body": "Do <i>not</i> use <code>do</code> here. <code>do</code> expressions are syntactical sugar for expressions with bind functions."}, {"owner": {"reputation": 69, "user_id": 9836429, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/owUlf.jpg?s=128&g=1", "display_name": "Murad Alm.", "link": "https://stackoverflow.com/users/9836429/murad-alm"}, "edited": false, "score": 0, "creation_date": 1565632214, "post_id": 57465882, "comment_id": 101405142, "body": "without do i will get an error: parse error on input `let&#39;"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565632568, "post_id": 57465882, "comment_id": 101405284, "body": "@MuradAlm.: please do not use <i>Voodoo programming</i> either <a href=\"https://www.techopedia.com/definition/22860/voodoo-programming\" rel=\"nofollow noreferrer\">techopedia.com/definition/22860/voodoo-programming</a> :)"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565634207, "post_id": 57465882, "comment_id": 101405927, "body": "@WillemVanOnsem That&#39;s not a very helpful remark. Someone doing something wrong because they don&#39;t understand it can&#39;t just magically choose to understand instead. It takes a little study, practice, whatever. Calling it voodoo programming is just dismissive."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1565634380, "post_id": 57465882, "comment_id": 101406011, "body": "@amalloy: what I mean is that I see a lot of people that when having an error, just aim a series of substitutes until it eventually might typecheck, or produce sensical output. But unfortunately my experience is that (a) one can not per se guarantee that it works, it might have worked on a small subset, and (b) because it is trail and error, future ehancements, fixes, are again done through &quot;voodoo programming&quot;, and thus yielding (a) again."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1565634475, "post_id": 57465882, "comment_id": 101406071, "body": "@amalloy: I did not come up with the name voodoo programming, it is more the idea of adding some things, removing some things, and hope that &quot;magic&quot; will &quot;click&quot;, is usually not very effective. I agree that &quot;voodoo programming&quot; is a bit (over)offensive."}, {"owner": {"reputation": 69, "user_id": 9836429, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/owUlf.jpg?s=128&g=1", "display_name": "Murad Alm.", "link": "https://stackoverflow.com/users/9836429/murad-alm"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565636129, "post_id": 57465882, "comment_id": 101406784, "body": "@WillemVanOnsem it wasn&#39;t just adding and removing stuff and hoping it will work. I&#39;ve started to learn Haskell (my very first functional programming language) a couple days ago (and i&#39;m already in love) and that&#39;s why i&#39;m still confused and trying to get out of the OOP principles"}, {"owner": {"reputation": 69, "user_id": 9836429, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/owUlf.jpg?s=128&g=1", "display_name": "Murad Alm.", "link": "https://stackoverflow.com/users/9836429/murad-alm"}, "edited": false, "score": 0, "creation_date": 1565636152, "post_id": 57465882, "comment_id": 101406797, "body": "I appreciate your help, and thanks for the advice."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1565636519, "post_id": 57465882, "comment_id": 101406925, "body": "@MuradAlm: It was not meant to be that offensive, sorry if that was the effect. Probably I interpreted &quot;<i>without <code>do</code> i will get an error: parse error on input <code>let</code></i>&quot; a bit the wrong way (as in &quot;I got an error without, so I added <code>do</code>). The question shows that you have put effort into it, and although it was no completely successful, it was quite close to the correct result. So I did +1. :)"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1565632490, "creation_date": 1565632490, "answer_id": 57465970, "question_id": 57465882, "link": "https://stackoverflow.com/questions/57465882/haskell-using-multiple-let-and-return-a-value-after-the-do-block-inside-a-funct/57465970#57465970", "title": "Haskell: Using multiple let and return a value after the do block inside a function", "body": "<p>Please do <em>not</em> use a <code>do</code> expression. <code>do</code> expressions are snytactical sugar for expressions with binds. Yes a list is an instance of <code>Monad</code>, but you use it not in the correct way.</p>\n\n<p>You can here define your <code>let</code>s in a block like:</p>\n\n<pre><code>insertAt :: a -&gt; Int -&gt; [a] -&gt; [a]\ninsertAt x n xs =\n    let before = take n xs\n        after = drop n xs\n        merged = before ++ [x] ++ after\n    in  merged\n</code></pre>\n\n<p>But it might be more elegant to use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:splitAt\" rel=\"noreferrer\"><strong><code>splitAt :: Int -&gt; [a] -&gt; ([a], [a])</code></strong></a>, like:</p>\n\n<pre><code>insertAt :: a -&gt; Int -&gt; [a] -&gt; [a]\ninsertAt x n xs = let (hs,ts) = splitAt n xs in hs ++ x : ts\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 69, "user_id": 9836429, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/owUlf.jpg?s=128&g=1", "display_name": "Murad Alm.", "link": "https://stackoverflow.com/users/9836429/murad-alm"}, "edited": false, "score": 0, "creation_date": 1565640709, "post_id": 57466470, "comment_id": 101408496, "body": "Wow! i didn&#39;t think about it in that way! thanks a lot! i love the fact that i&#39;m able to do things in 3 lines of code in Haskell, that would take 30 in Java (for example)!"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1565635320, "last_edit_date": 1565635320, "creation_date": 1565634822, "answer_id": 57466470, "question_id": 57465882, "link": "https://stackoverflow.com/questions/57465882/haskell-using-multiple-let-and-return-a-value-after-the-do-block-inside-a-funct/57466470#57466470", "title": "Haskell: Using multiple let and return a value after the do block inside a function", "body": "<p>If you want to use the list monad, though, you can write</p>\n\n<pre><code>insertAt x n ys = do\n   (i, y) &lt;- zip [0..] ys\n   if i == n then [x, y] else [y]\n</code></pre>\n\n<p>This works by \"numbering\" each element of the input list. Normally, you just return each element as you find it (remember, <code>return x == [x]</code> in the list monad). But at position <code>n</code>, you want to \"sneak in\" <code>x</code> before the current element of the existing list. You do that by providing the list <code>[x,y]</code> instead of simply <code>[y]</code>.</p>\n\n<p><code>insertAt 'x' 3 \"Aleander\"</code> essentially becomes <code>concat [\"A\", \"l\", \"e\", \"xa\", \"n\", \"d\", \"e\", \"r\"]</code>.</p>\n\n<hr>\n\n<p>Drawback: it won't append <code>'x'</code> to the output, regardless of what <code>n</code> you supply, so this may be more of a demonstration of the list monad than a solution to your actual problem. One simple fix is to special case <code>n == 0</code>, then insert <code>x</code> <em>after</em> the <code>n</code> the element. This lets you append if <code>n == length ys</code>, but not <code>n &gt; length ys</code>:</p>\n\n<pre><code>insertAt x n ys = if n == 0 then x:ys else do\n    (i, y) &lt;- zip [1..] ys  -- Note the increase in indices\n    if i == n then [y, x] else [y]\n</code></pre>\n"}], "owner": {"reputation": 69, "user_id": 9836429, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/owUlf.jpg?s=128&g=1", "display_name": "Murad Alm.", "link": "https://stackoverflow.com/users/9836429/murad-alm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 338, "favorite_count": 0, "accepted_answer_id": 57465970, "answer_count": 2, "score": 1, "last_activity_date": 1565635320, "creation_date": 1565632050, "last_edit_date": 1565632368, "question_id": 57465882, "link": "https://stackoverflow.com/questions/57465882/haskell-using-multiple-let-and-return-a-value-after-the-do-block-inside-a-funct", "title": "Haskell: Using multiple let and return a value after the do block inside a function", "body": "<p>As the title says, i want to return a value after the <em>do</em> block.</p>\n\n<p>Example: Writing a function that inserts a variable at a given position in an array:</p>\n\n<pre><code>insertAt :: a -&gt; Int -&gt; [a] -&gt; [a]\ninsertAt x n xs = do\n            let before = take n xs\n            let after  = drop n xs\n            let merged = before ++ [x] ++ after\n            in  merged\n</code></pre>\n\n<p>For example: </p>\n\n<p>insertAt 'x' 3 \"Aleander\" => \"Alexander\"</p>\n\n<p>Anyway, when using a single <em>let</em> call, one could return a value using the <em>in</em> keyword, but with the multiple calls of <em>let</em> as in the example i get the error: </p>\n\n<p><em>error: parse error on input `in'</em></p>\n\n<p>I know i could do the whole thing in a single <em>let</em> usage, but i want to know how to deal with multiple let calls :)</p>\n\n<p>Thanks for the help!</p>\n"}, {"tags": ["haskell", "ghc", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 1, "last_activity_date": 1565632021, "last_edit_date": 1565632021, "creation_date": 1565631703, "answer_id": 57465808, "question_id": 57465534, "link": "https://stackoverflow.com/questions/57465534/stack-cache-builds-with-various-flags/57465808#57465808", "title": "Stack cache builds with various flags", "body": "<p>You can tell <code>stack</code> where to keep the cache via <code>--work-dir</code>. The default is <code>&lt;project root&gt;/.stack-work</code>, but you can specify separate directories for your different build modes:</p>\n\n<pre><code>stack build -j8 --profile --work-dir .stack-work-profile\n\nstack build -j8 --ghc-options -DVERBOSE_SOLVING --work-dir .stack-work-verbose-solving\n</code></pre>\n\n<p>I don't think there is a way to have <code>stack</code> automatically figure out different caches based on flags. If you <em>really</em> need this, you could whip up a script that would take a hash of the flag combination and redirect work-dir to <code>.stack-work-&lt;hash&gt;</code> or something.</p>\n"}], "owner": {"reputation": 5328, "user_id": 325809, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/b858606c4daae58cfdb362bf2fc4caa5?s=128&d=identicon&r=PG", "display_name": "fakedrake", "link": "https://stackoverflow.com/users/325809/fakedrake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 43, "favorite_count": 0, "accepted_answer_id": 57465808, "answer_count": 1, "score": 1, "last_activity_date": 1565632021, "creation_date": 1565630318, "question_id": 57465534, "link": "https://stackoverflow.com/questions/57465534/stack-cache-builds-with-various-flags", "title": "Stack cache builds with various flags", "body": "<p>I have two different build commands that I use for my project</p>\n\n<pre><code>stack build -j8 --profile\n</code></pre>\n\n<p>and </p>\n\n<pre><code>stack build -j8  --ghc-options -DVERBOSE_SOLVING\n</code></pre>\n\n<p>There are hundreds of files in my projects. Whenever I change from one to the other command everything is rebuilt. Is there a way to keep the build increments of both?</p>\n"}, {"tags": ["function", "haskell", "functional-programming"], "comments": [{"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "edited": false, "score": 3, "creation_date": 1565697657, "post_id": 57464667, "comment_id": 101426399, "body": "Aha, the boob operator."}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 1, "last_activity_date": 1565647037, "last_edit_date": 1565647037, "creation_date": 1565627089, "answer_id": 57464864, "question_id": 57464667, "link": "https://stackoverflow.com/questions/57464667/the-function-in-haskell/57464864#57464864", "title": "The function (.).(.) in haskell", "body": "<p>The simple definition of compose is:</p>\n\n<pre><code>compose f h x = f (h x)\n</code></pre>\n\n<p>and its type:</p>\n\n<pre><code>compose :: (t1 -&gt; t2) -&gt; (t3 -&gt; t1) -&gt; t3 -&gt; t2\n</code></pre>\n\n<p>the type variable name changes because I defined manually. So, if you want to compose the compose function, you will need an extra argument, because compose takes a function that takes one argument, so, compose of compose will need an extra argument. The definition of compose of compose could be simple as:</p>\n\n<pre><code>composeOfCompose f h x y = f (h x y) \n</code></pre>\n\n<p>and its type, as you could figure is:</p>\n\n<pre><code>composeOfCompose :: (t1 -&gt; t2) -&gt; (t3 -&gt; t4 -&gt; t1) -&gt; t3 -&gt; t4 -&gt; t2\n</code></pre>\n\n<p>why is that? well, follow the application of functions:</p>\n\n<pre><code>x :: t3\ny :: t4\nh :: t3 -&gt; t4 -&gt; t1\nf :: t1 -&gt; t2\ncomposeOfCompose f h :: t3 -&gt; t4 -&gt; t2\n</code></pre>\n\n<p>if you think it like this is a little simpler, I guess, at least for me.</p>\n\n<p>To add a little more info about it with the question in the comment of D. W.:</p>\n\n<pre><code>compose :: (t1 -&gt; t2) -&gt; (t3 -&gt; t1) -&gt; t3 -&gt; t2\ncompose f h x = f (h x)\n\ncomposeOfCompose :: (t1 -&gt; t2) -&gt; (t4 -&gt; t5 -&gt; t1) -&gt; t4 -&gt; t5 -&gt; t2\ncomposeOfCompose  = compose compose compose\n</code></pre>\n\n<p>If the first compose is <code>compose'</code> and the second compose is <code>compose''</code></p>\n\n<pre><code>compose' (f' :: (t1 -&gt; t2)) \n         (h' :: (**t3** -&gt; t1)) (x' :: **t3**) = f' (h' x')\n</code></pre>\n\n<p>and the second should have:</p>\n\n<pre><code>compose'' (f'' :: (t4 -&gt; t5))\n          (h'' :: (t6 -&gt; t4)) (x'' :: t6) = f'' (h'' x'')\n</code></pre>\n\n<p>so... </p>\n\n<pre><code>**t3** ~ (t4 -&gt; t5)\nmeaning h :: t4 -&gt; t5 -&gt; t1\n</code></pre>\n\n<p>translating in place, the middle compose::</p>\n\n<pre><code>compose f h x = f :: t1 -&gt; t2\n                (h :: t4 -&gt; t5 -&gt; t1)\n                    (x :: t4 -&gt; t5)) :: t1\n</code></pre>\n\n<p>A simple example:</p>\n\n<pre><code>:t (.) . (.)\n(.) . (.) :: (b -&gt; c) -&gt; (a1 -&gt; a2 -&gt; b) -&gt; a1 -&gt; a2 -&gt; c\n</code></pre>\n\n<p>lets create a function for that:</p>\n\n<pre><code>composeOfCompose  = (.) . (.)\n\ndata A1 = A | B deriving Show\ndata A2 = C | D deriving Show\ndata B  = E | F deriving Show\ndata C  = G | H deriving Show\n\ntransform :: A1 -&gt; A2 -&gt; B\ntransform A C = E\ntransform B C = E\ntransform _ _ = F\n\nfinalTrans :: B -&gt; C\nfinalTrans E = G\nfinalTrans F = H\n\nmain = do\n  putStrLn $ show $ (composeOfCompose finalTrans transform) A D\n\n$&gt; H\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 88, "user_id": 6513106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b6f98024e29da0c55dea2a0080f26a6?s=128&d=identicon&r=PG", "display_name": "janqo", "link": "https://stackoverflow.com/users/6513106/janqo"}, "is_accepted": true, "score": 4, "last_activity_date": 1565628433, "last_edit_date": 1565628433, "creation_date": 1565627651, "answer_id": 57464988, "question_id": 57464667, "link": "https://stackoverflow.com/questions/57464667/the-function-in-haskell/57464988#57464988", "title": "The function (.).(.) in haskell", "body": "<p>Let's look at the equivalent <code>(.) (.) (.)</code></p>\n\n<p>The first dot type:\n<code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code></p>\n\n<p>Second:\n<code>(e -&gt; f) -&gt; (d -&gt; e) -&gt; d -&gt; f</code></p>\n\n<p>Hence:</p>\n\n<p><code>b</code> is the same as <code>e -&gt; f</code></p>\n\n<p><code>c</code> is the same as <code>(d -&gt; e) -&gt; d -&gt; f</code></p>\n\n<p>Third:\n<code>(h -&gt; i) -&gt; (g -&gt; h) -&gt; g -&gt; i</code></p>\n\n<p>Hence:</p>\n\n<p><code>a</code> is the same as <code>h -&gt; i</code></p>\n\n<p><code>b</code> is the same as <code>(g -&gt; h) -&gt; g -&gt; i</code></p>\n\n<p><code>e -&gt; f</code> is <code>(g -&gt; h) -&gt; g -&gt; i</code></p>\n\n<p><code>e</code> is <code>g -&gt; h</code></p>\n\n<p><code>f</code> is <code>g -&gt; i</code></p>\n\n<p>Since <code>(.) (.) (.) :: a -&gt; c</code> from the first dot type, we have:</p>\n\n<p><code>a -&gt; c</code> is <code>(h -&gt; i) -&gt; (d -&gt; e) -&gt; d -&gt; f</code></p>\n\n<p>substituting <code>e</code> and <code>f</code>:\n<code>(h -&gt; i) -&gt; (d -&gt; g -&gt; h) -&gt; d -&gt; g -&gt; I</code></p>\n\n<p>Answering your question, I think that what is wrong with your thinking are last two lines e.g.:</p>\n\n<p><code>d ~ h</code>,\n<code>e ~ i</code></p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 2, "last_activity_date": 1565685416, "last_edit_date": 1565685416, "creation_date": 1565652337, "answer_id": 57469396, "question_id": 57464667, "link": "https://stackoverflow.com/questions/57464667/the-function-in-haskell/57469396#57469396", "title": "The function (.).(.) in haskell", "body": "<p>Your derivation should have been :</p>\n\n<pre><code>(.).(.) = (.) (.) (.)\n\n(.) :: (   b      -&gt;           c          )  -&gt;  (   a      -&gt;           b          ) -&gt; (a -&gt; c) \n(.) ::  (d -&gt; e)  -&gt;  (f -&gt; d) -&gt; (g -&gt; e)   -- WRONG\n(.) ::                                            (h -&gt; i)  -&gt;  (j -&gt; h) -&gt; (h -&gt; k)  -- WRONG\n(.) ::  (d -&gt; e)  -&gt;  (f -&gt; d) -&gt; (f -&gt; e)   -- correct\n(.) ::                                            (h -&gt; i)  -&gt;  (j -&gt; h) -&gt; (j -&gt; i)  -- correct\n</code></pre>\n\n<p>Thus the overall type is</p>\n\n<pre><code>(.) (.) (.) ::   a    -&gt;                c                   ,   b ~ b\n            ~  (h-&gt;i) -&gt;  (f -&gt;   d   ) -&gt; (f -&gt;   e   )    ,   (j -&gt; h) -&gt; (j -&gt; i) ~ \n                                                               (   d     -&gt;    e    )\n             --------------------------------------------\n               (h-&gt;i) -&gt;  (f -&gt; j -&gt; h) -&gt; (f -&gt; j -&gt; i)\n</code></pre>\n\n<p>Or,</p>\n\n<pre><code>               (                     h             -&gt; i) \n                      -&gt;  (f -&gt; j -&gt; h)\n             --------------------------------------------\n                                        -&gt; (f -&gt; j -&gt; i)\n</code></pre>\n\n<hr>\n\n<p>The types of such composition chains are often easier to follow with <code>(&gt;&gt;&gt;) = flip (.)</code>:</p>\n\n<pre><code>(.) . (.) = comp2  .  comp1\n          = comp1 &gt;&gt;&gt; comp2    where   comp1 = (.) ; comp2 = (.)\n\n(&gt;&gt;&gt;)    ::   (  a    -&gt;         b         ) -&gt; \n                        (        b           -&gt;         c         )  -&gt;  (a -&gt; c)\ncomp1    ::    (e-&gt;f) -&gt; ((d-&gt;e) -&gt; (d-&gt;f))\ncomp2    ::              (  h    -&gt;   i   )  -&gt; ((g-&gt;h) -&gt; (g-&gt;i))\n-------------------------------------------------------------------------\n               (e-&gt;f)                        -&gt; ((g-&gt;h) -&gt; (g-&gt;i))\n                         h~(d-&gt;e)   i~(d-&gt;f)\n-------------------------------------------------------------------------\n               (e-&gt;f) -&gt; (g-&gt;d-&gt;e) -&gt; (g-&gt;d-&gt;f)\n</code></pre>\n\n<p>Thus, again,</p>\n\n<pre><code>((.) . (.)) :: (c-&gt;r) -&gt; (a-&gt;b-&gt;c) -&gt; (a-&gt;b-&gt;r)\n((.) . (.)) f g a b = f (g a b)\n</code></pre>\n\n<p>Indeed,</p>\n\n<pre><code>((.) . (.)) f g a b = ((.) . (.)) f  g  a  b\n                    =  (.) ( (.)  f) g  a  b\n                    =      ((f .)  . g) a  b     -- NB\n                    =       (f .)  ( g  a) b\n                    =       (f .     g  a) b\n\n                    =        f (     g  a  b)\n</code></pre>\n\n<p>NB:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/57431487/why-function-composition-sometimes-requires-two-s-to-combine-two-functions\">Why function composition sometimes requires two &quot;.&quot; &#39;s to combine two functions</a></li>\n</ul>\n\n<hr>\n\n<p>You can also verify that</p>\n\n<pre><code>((.) . (.) . (.)) :: (d-&gt;r) -&gt; (a-&gt;b-&gt;c-&gt;d) -&gt; (a-&gt;b-&gt;c-&gt;r)\n((.) . (.) . (.)) f g a b c = f (g a b c)\n</code></pre>\n\n<p>Why? <code>(.)</code> is <code>fmap</code> for functions, and so we can re-write the above as</p>\n\n<pre><code>(fmap . fmap . fmap) f g a b c =\n   fmap (fmap (fmap f)) g a b c =\n   (do { x &lt;- g ; return $ fmap (fmap f) x }) a b c =\n   (do { x &lt;- g ; return $ do { y &lt;- x ; return $ fmap f y } }) a b c =\n   (do { x &lt;- g ; return $ do { y &lt;- x ; return $ do { z &lt;- y ; return $ f z } } }) a b c =\n   let x=g a in (const $ do { y &lt;- x ; return $ do { z &lt;- y ; return $ f z } }) a b c =\n   let x=g a in (do { y &lt;- x ; return $ do { z &lt;- y ; return $ f z } }) b c =\n   let x=g a in let y=x b in (const $ do { z &lt;- y ; return $ f z }) b c =\n   let x=g a in let y=x b in (do { z &lt;- y ; return $ f z }) c =\n   let x=g a in let y=x b in let z=y c in const (f z) c =\n   let x=g a in let y=x b in f (y c) =\n   let x=g a in f (x b c) =\n   f (g a b c)\n</code></pre>\n\n<p>This obviously works for any number of the chained compositions of <code>fmap</code>s that way.</p>\n"}], "owner": {"reputation": 415, "user_id": 10484793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ec95469fb82b965d3ee2f22d1cea5ce?s=128&d=identicon&r=PG&f=1", "display_name": "SavannahGemp", "link": "https://stackoverflow.com/users/10484793/savannahgemp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 57464988, "answer_count": 3, "score": 4, "last_activity_date": 1565685416, "creation_date": 1565626226, "last_edit_date": 1565627134, "question_id": 57464667, "link": "https://stackoverflow.com/questions/57464667/the-function-in-haskell", "title": "The function (.).(.) in haskell", "body": "<p>I am trying to find the type of <code>(.).(.)</code> in Haskell, manually.</p>\n\n<p>My attempt was the following:</p>\n\n<pre><code>(.).(.) = \\x -&gt; (.).(.) x\n\n(.)     :: (     b   -&gt;             c         )  -&gt;  ((     a    -&gt;           b        ) -&gt; (a -&gt; c))\n(.)     :: (d -&gt; e)  -&gt;  ((f -&gt; d) -&gt; (g -&gt; e))\n(.)     ::                                              (h -&gt; i) -&gt; (j -&gt; h) -&gt; (h -&gt; k)\n\n-----------------------------------------------------------------------------------------------------\nb ~ (d -&gt; e) ~ (j -&gt; h) -&gt; (h -&gt; k)\nc ~ ((f -&gt; d) -&gt; (g -&gt; e))\na ~ (h -&gt; i)\nd ~ h\ne ~ i                 \n\nso (a-&gt;c)~     (h-&gt;i) -&gt; ((f -&gt; h) -&gt; (g -&gt; i))\n</code></pre>\n\n<p>What is wrong in my way of thinking? The actual type is</p>\n\n<pre><code>(.).(.) :: (b -&gt; c) -&gt; (a1 -&gt; a2 -&gt; b) -&gt; a1 -&gt; a2 -&gt; c\n</code></pre>\n"}, {"tags": ["haskell", "list-comprehension", "do-notation"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565604988, "post_id": 57459324, "comment_id": 101392025, "body": "List comprehension syntax is basically just <code>do</code> expresssion syntax, which is syntactical sugar for some expressions with binds."}, {"owner": {"reputation": 23557, "user_id": 12266, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/6a2a454191fa75d4114ed05836a0b924?s=128&d=identicon&r=PG", "display_name": "Andrew Jaffe", "link": "https://stackoverflow.com/users/12266/andrew-jaffe"}, "edited": false, "score": 1, "creation_date": 1565605046, "post_id": 57459324, "comment_id": 101392047, "body": "The <code>xs</code> on the LHS is the argument of the function, and on the RHS it is the actual function definition. It&#39;s no different than <code>f x = x + 3</code>. In this case, the <code>&lt;-</code> operator just means to take successive values from the <code>xs</code> list and call them each <code>x</code> as you go through the loop."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 8, "creation_date": 1565607661, "post_id": 57459324, "comment_id": 101393188, "body": "<code>&lt;-</code> isn&#39;t really an operator; it&#39;s just part of the syntax of a list comprehension."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565625567, "post_id": 57459324, "comment_id": 101402490, "body": "yes, the &quot;&lt;-&quot; in the question linked above (part of monadic <a href=\"https://stackoverflow.com/questions/tagged/do-notation\">do-notation</a> syntax) <i>is</i> different to the &quot;&lt;-&quot; used in the code (part of list comprehension syntax). No, xs does not &quot;run inside xs&quot;, it is meaningless to say this. <code>xs</code> on the right of <code>=</code> (a variable) refers to the <code>xs</code> on the left (i.e. <code>boomBangs</code>&#39;s parameter)."}, {"owner": {"reputation": 45, "user_id": 11734222, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-kHDfRLWUWWo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfqbbZjHYu3976bxzNwDs_BK3oWfQ/photo.jpg?sz=128", "display_name": "Magnar Kleppe", "link": "https://stackoverflow.com/users/11734222/magnar-kleppe"}, "edited": false, "score": 0, "creation_date": 1565678367, "post_id": 57459324, "comment_id": 101416955, "body": "Thanks everyone! Learned a bunch of new things, appreciate it!"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 1, "last_activity_date": 1565605707, "creation_date": 1565605707, "answer_id": 57459537, "question_id": 57459324, "link": "https://stackoverflow.com/questions/57459324/what-does-mean/57459537#57459537", "title": "What does &quot;&lt;-&quot; mean?", "body": "<p>Your list comprehension is in essence just syntactical sugar for:</p>\n\n<pre><code>import Control.Monad(guard)\n\nboomBangs :: Integral i =&gt; [i] -&gt; [String]\nboomBangs xs = do\n    x &lt;- xs\n    guard (odd x)\n    return (if x &lt; 10 then \"BOOM!\" else \"BANG!\")\n</code></pre>\n\n<p>This is thus a <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-470003.14\" rel=\"nofollow noreferrer\"><code>do</code> expression [Haskell report]</a>, and as the report says, it is syntactical sugar. It is syntactical sugar for:</p>\n\n<pre><code>boomBangs xs = xs &gt;&gt;= \\x -&gt; (guard (odd x) &gt;&gt; return (if x &lt; 10 then \"BOOM!\" else \"BANG!\"))\n</code></pre>\n\n<p>For a list the <code>Monad</code> instance is defined as:</p>\n\n<pre><code>instance Monad [] where\n    (&gt;&gt;=) = flip concatMap\n    return x = [x]\n</code></pre>\n\n<p>Furthermore the <code>guard</code> is defined as:</p>\n\n<pre><code>guard :: Monad m =&gt; Bool -&gt; m ()\nguard True = pure ()\nguard False = empty\n</code></pre>\n\n<p>and the default implementation of <code>(&gt;&gt;)</code> is:</p>\n\n<pre><code>(&gt;&gt;) :: Monad m =&gt; m a -&gt; m b -&gt; m b\n(&gt;&gt;) u v = u &gt;&gt;= \\_ -&gt; v\n</code></pre>\n\n<p>So the <code>boomBangs</code> is basically implemented as:</p>\n\n<pre><code>boomBangs xs = concatMap (\\x -&gt; (guard (odd x) &gt;&gt;= \\_ -&gt; [if x &lt; 10 then \"BOOM!\" else \"BANG!\"])) xs\n             = concatMap (\\x -&gt; concatMap (\\_ -&gt; [if x &lt; 10 then \"BOOM!\" else \"BANG!\"]) guard (odd x)) xs\n</code></pre>\n\n<p>Since for a list, the <code>guard</code> can be specialized to:</p>\n\n<pre><code>-- guard for the Monad []\nguard :: Bool -&gt; [()]\nguard True = [()]\nguard False = []\n</code></pre>\n\n<p>It thus means that if the <code>guard</code> gets a <code>True</code>, it returns a singleton list, and for <code>False</code> an empty list. This thus means that given the guard holds, the <code>concatMap (\\_ -&gt; [if x &lt; 10 then \"BOOM!\" else \"BANG!\"])</code> will return the content in the <code>[if x &lt; 10 then \"BOOM!\" else \"BANG!\"]</code>, if the guard fails, it will return an empty list. The guard acts thus as some sort of filter.</p>\n\n<p>So now what is the <code>x &lt;-</code>. If we look at how the <code>do</code>-expressions are desugared, an <code>x &lt;- foo</code>, corresponds to the <code>foo &gt;&gt;= \\x -&gt; ...</code>.</p>\n\n<p>For list comprehensions, <code>x &lt;- ...</code> acts as some sort of \"enumerator\": it will enumerate over all elements in the list, and <code>x</code> will each time obtain one of the elements in the list to do further processing.</p>\n"}], "owner": {"reputation": 45, "user_id": 11734222, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-kHDfRLWUWWo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfqbbZjHYu3976bxzNwDs_BK3oWfQ/photo.jpg?sz=128", "display_name": "Magnar Kleppe", "link": "https://stackoverflow.com/users/11734222/magnar-kleppe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "closed_date": 1565614923, "accepted_answer_id": 57459537, "answer_count": 1, "score": 2, "last_activity_date": 1565895817, "creation_date": 1565604874, "last_edit_date": 1565895817, "question_id": 57459324, "link": "https://stackoverflow.com/questions/57459324/what-does-mean", "closed_reason": "Duplicate", "title": "What does &quot;&lt;-&quot; mean?", "body": "<p>In this tutorial <a href=\"http://learnyouahaskell.com/starting-out\" rel=\"nofollow noreferrer\">http://learnyouahaskell.com/starting-out</a> the author writes this piece of code.</p>\n\n<pre><code>boomBangs xs = [ if x &lt; 10 then \"BOOM!\" else \"BANG!\" | x &lt;- xs, odd x]\n</code></pre>\n\n<p>And then later executes it like this</p>\n\n<pre><code>boomBangs[7..13]\n</code></pre>\n\n<p>And my question is, what does the \"&lt;-\" operator do? To me this seems like it would cause recursive behavior, since I am referencing what looks to me like a function inside a function, or perhaps defining how to create a list comprehension.</p>\n\n<p>Searching around I found this explanation by chi on a different <a href=\"https://stackoverflow.com/questions/28624408/equal-vs-left-arrow-symbols-in-haskell\">question</a>:<br>\n\"x &lt;- action runs the IO action, gets its result, and binds it to x\" </p>\n\n<p>Is the \"&lt;-\" in the question linked above different to the \"&lt;-\" used in the code I copied above? Does xs run inside xs? I'd be grateful if someone could explain to me what's going on here.</p>\n"}, {"tags": ["function", "haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 10, "creation_date": 1565603304, "post_id": 57458890, "comment_id": 101391306, "body": "Why do you expect these to be the same?"}, {"owner": {"reputation": 415, "user_id": 10484793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ec95469fb82b965d3ee2f22d1cea5ce?s=128&d=identicon&r=PG&f=1", "display_name": "SavannahGemp", "link": "https://stackoverflow.com/users/10484793/savannahgemp"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565603371, "post_id": 57458890, "comment_id": 101391347, "body": "I expected both to represent (map(map))"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1565603573, "post_id": 57458890, "comment_id": 101391453, "body": "<code>f . g</code> is the same as <code>\\x -&gt; f (g x)</code>, so the <code>map . map</code> is equivalent to <code>\\x -&gt; map (map x))</code>, note that there is an extra <code>x</code> here."}, {"owner": {"reputation": 415, "user_id": 10484793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ec95469fb82b965d3ee2f22d1cea5ce?s=128&d=identicon&r=PG&f=1", "display_name": "SavannahGemp", "link": "https://stackoverflow.com/users/10484793/savannahgemp"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565603702, "post_id": 57458890, "comment_id": 101391510, "body": "and how about (f g)?"}, {"owner": {"reputation": 23557, "user_id": 12266, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/6a2a454191fa75d4114ed05836a0b924?s=128&d=identicon&r=PG", "display_name": "Andrew Jaffe", "link": "https://stackoverflow.com/users/12266/andrew-jaffe"}, "edited": false, "score": 2, "creation_date": 1565603760, "post_id": 57458890, "comment_id": 101391536, "body": "<code>(map map)</code> is the same as <code>(map $ map)</code> -- and <code>(.)</code> (composition) and <code>($)</code> (&quot;applied to&quot;) are very different operators, although often confused."}, {"owner": {"reputation": 415, "user_id": 10484793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ec95469fb82b965d3ee2f22d1cea5ce?s=128&d=identicon&r=PG&f=1", "display_name": "SavannahGemp", "link": "https://stackoverflow.com/users/10484793/savannahgemp"}, "edited": false, "score": 0, "creation_date": 1565603970, "post_id": 57458890, "comment_id": 101391641, "body": "So both are (map(map)) baically? or how does the x in map.map change the function? sorry if i&#39;m being ridiculoous but i really want to understand"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565604095, "post_id": 57458890, "comment_id": 101391697, "body": "@SavannahGemp: no, there is a difference between <code>map map</code> and <code>\\x -&gt; map (map x)</code> since the latter takes as parameter something that is applied to the inner map, whereas the former applies a parameter as &quot;second parameter&quot; the &quot;outer&quot; map."}, {"owner": {"reputation": 23557, "user_id": 12266, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/6a2a454191fa75d4114ed05836a0b924?s=128&d=identicon&r=PG", "display_name": "Andrew Jaffe", "link": "https://stackoverflow.com/users/12266/andrew-jaffe"}, "edited": false, "score": 2, "creation_date": 1565604814, "post_id": 57458890, "comment_id": 101391956, "body": "@SavannahGemp <code>(f g)</code> or <code>(f $ g)</code> applies <code>f</code> to the function <code>g</code> itself, not to the <i>result</i> of the function <code>g</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1565611105, "post_id": 57458890, "comment_id": 101394793, "body": "One is <code>map</code> applied to <code>map</code>; the other is <code>map</code> applied to the <i>result</i> of applying <code>map</code> to something else."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1565619437, "post_id": 57458890, "comment_id": 101399257, "body": "<code>map map</code> = <code>\\ x -&gt; (map map) x</code> while <code>map.map</code> = <code>\\ x -&gt; map (map x)</code>. the difference is in how the parentheses are placed."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 8, "last_activity_date": 1565604362, "last_edit_date": 1565604362, "creation_date": 1565604018, "answer_id": 57459113, "question_id": 57458890, "link": "https://stackoverflow.com/questions/57458890/map-map-vs-map-map/57459113#57459113", "title": "map map vs map.map", "body": "<p>The <code>map map</code> expression will take second <code>map</code> as the parameter of the first one. So that means that if we derive the type, we see:</p>\n\n<pre><code>map :: (  a     -&gt;      b     ) -&gt; ([a] -&gt; [b])\nmap :: (c -&gt; d) -&gt; ([c] -&gt; [d])\n-----------------------------------------------\na ~ (c -&gt; d), b ~ [c] -&gt; [d]\n</code></pre>\n\n<p>This thus means that <code>a</code> has the same type as <code>c -&gt; d</code>, and <code>b</code> has the same type as <code>[c] -&gt; [d]</code>. It thus means that the type of <code>map map</code> is:</p>\n\n<pre><code>map map :: [a] -&gt; [b]\n        :: [c -&gt; d] -&gt; [[c] -&gt; [d]]\n</code></pre>\n\n<p>Here <code>map map</code> thus takes as parameter a list of functions of type <code>c -&gt; d</code>, and it will generate a list of functions that performs a mapping with these functions.</p>\n\n<p>It thus means that if you write:</p>\n\n<pre><code>(map map) [(+1), (*2), (-3)]\n</code></pre>\n\n<p>you retrieve something like:</p>\n\n<pre><code>[map (+1), map (*2), map (-3)]\n</code></pre>\n\n<hr>\n\n<p>That is not the case for <code>map . map</code>. This expression is equivalent to <code>(.) map map</code>. The <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:.\" rel=\"noreferrer\"><strong><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code></strong></a> function takes two functions <code>f</code> and <code>g</code>, and combines these as <code>\\x -&gt; f (g x)</code>. The type thus means:</p>\n\n<pre><code>(.) :: (  b     -&gt;      c     ) -&gt; ((  a     -&gt;      b     ) -&gt; (a -&gt; c))\nmap :: (d -&gt; e) -&gt; ([d] -&gt; [e])\nmap ::                              (f -&gt; g) -&gt; ([f] -&gt; [g])\n-------------------------------------------------------------------------\nb ~ d -&gt; e ~ [f] -&gt; [g], c ~ [d] -&gt; [e], a ~ f -&gt; g, d ~ f, e ~ g\n</code></pre>\n\n<p>The type of <code>(.) map map</code> is thus:</p>\n\n<pre><code>(.) map map :: a -&gt; c\n            :: (f -&gt; g) -&gt; ([d] -&gt; [e])\n            :: (f -&gt; g) -&gt; ([[f]] -&gt; [[g]])\n</code></pre>\n\n<p>This function takes a single function of type <code>f -&gt; g</code>, and will generate a function that takes a list of list of <code>f</code>s and it can map these to <code>g</code>s.</p>\n\n<p>So <code>(map . map) (+1)</code> will generate a function such that for:</p>\n\n<pre><code>(map . map) (+1) [[1,4,2,5],[1,3,0,2]]\n</code></pre>\n\n<p>it will generate:</p>\n\n<pre><code>[[2,5,3,6], [2,4,1,3]]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1565604098, "creation_date": 1565604098, "answer_id": 57459135, "question_id": 57458890, "link": "https://stackoverflow.com/questions/57458890/map-map-vs-map-map/57459135#57459135", "title": "map map vs map.map", "body": "<pre><code>map . map \u2261 (\\x -&gt; map (map x))\n          \u2261 (\\x y -&gt; map (map x) y)\n\nmap map   \u2261 map (map)\n          \u2261 (\\x -&gt; map map x)\n</code></pre>\n\n<p>So, basically the <code>.</code> smuggles an extra variable into the \u201cfunction bracket\u201d of the outer <code>map</code>.</p>\n\n<p>It turns <code>map (map) x</code> into <code>map (map x)</code>. Both mean something quite different, as the types demonstrate.</p>\n\n<p>In <code>map (map x) y</code>, the <code>x</code> is a function that'll be applied to the inner elements of the nested list <code>y</code>, because <code>map x</code> (partial application) is a list-mapping function. Whereas in <code>map map x</code>, the <em>higher-order function</em> <code>map</code> itself is mapped over the list. That sounds strange but it is possible, it just requires a list of functions (which will be the functions that the inner <code>map</code> maps) and spits out another list of functions (each of which does the mapping over one particular inner list).</p>\n"}], "owner": {"reputation": 415, "user_id": 10484793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ec95469fb82b965d3ee2f22d1cea5ce?s=128&d=identicon&r=PG&f=1", "display_name": "SavannahGemp", "link": "https://stackoverflow.com/users/10484793/savannahgemp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "answer_count": 2, "score": 5, "last_activity_date": 1565611673, "creation_date": 1565603059, "last_edit_date": 1565611673, "question_id": 57458890, "link": "https://stackoverflow.com/questions/57458890/map-map-vs-map-map", "title": "map map vs map.map", "body": "<p>I'm new to Haskell and I thought that the functions <code>map map</code> and <code>map.map</code> are the same in Haskell. \nMy terminal gives me two different types, </p>\n\n<pre><code>(map.map) :: (a -&gt; b) -&gt;  [[a]]  -&gt;  [[b]]\n</code></pre>\n\n<p>and</p>\n\n<pre><code>(map map) :: [a -&gt; b] -&gt; [[a] -&gt; [b]]\n</code></pre>\n\n<p>How are those functions different from eachother, in terms of syntax, and what does each one of them mean exactly?</p>\n"}, {"tags": ["haskell", "parallel-processing", "immutability", "lazy-evaluation"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 4, "creation_date": 1565571786, "post_id": 57454648, "comment_id": 101383666, "body": "&quot;data actually can be mutate from thunk to evaluated result&quot; can you say more about what you mean here and why you believe this is true?"}, {"owner": {"reputation": 483, "user_id": 4799906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58a6804706d39b381315aa97c9404af?s=128&d=identicon&r=PG&f=1", "display_name": "damhiya", "link": "https://stackoverflow.com/users/4799906/damhiya"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1565572613, "post_id": 57454648, "comment_id": 101383772, "body": "@Thomas <a href=\"https://wiki.haskell.org/Thunk\" rel=\"nofollow noreferrer\">wiki.haskell.org/Thunk</a> I don&#39;t have exact information of haskell implementation, but that was the simplest solution to implement laziness and thunk as I think."}, {"owner": {"reputation": 483, "user_id": 4799906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58a6804706d39b381315aa97c9404af?s=128&d=identicon&r=PG&f=1", "display_name": "damhiya", "link": "https://stackoverflow.com/users/4799906/damhiya"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1565572836, "post_id": 57454648, "comment_id": 101383808, "body": "Also : <a href=\"https://en.m.wikibooks.org/wiki/Haskell/Laziness#Thunks_and_Weak_head_normal_form\" rel=\"nofollow noreferrer\">en.m.wikibooks.org/wiki/Haskell/&hellip;</a>"}, {"owner": {"reputation": 483, "user_id": 4799906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58a6804706d39b381315aa97c9404af?s=128&d=identicon&r=PG&f=1", "display_name": "damhiya", "link": "https://stackoverflow.com/users/4799906/damhiya"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1565573211, "post_id": 57454648, "comment_id": 101383864, "body": "The point is, each thread must sync the information whether the thunk is already evaluated or not. Or each thread must re evaluate the thunk. (As I think)"}, {"owner": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "edited": false, "score": 0, "creation_date": 1565573514, "post_id": 57454648, "comment_id": 101383906, "body": "Laziness often only applies to <b>initialization</b> - supposing you have a global lock, then you can initialize an object on a single thread and make the other threads (or promises/tasks/futures) <i>wait</i> and then provide an initialized, immutable, data value to the new concurrent processes. No contradiction there."}, {"owner": {"reputation": 483, "user_id": 4799906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58a6804706d39b381315aa97c9404af?s=128&d=identicon&r=PG&f=1", "display_name": "damhiya", "link": "https://stackoverflow.com/users/4799906/damhiya"}, "reply_to_user": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "edited": false, "score": 0, "creation_date": 1565574391, "post_id": 57454648, "comment_id": 101383993, "body": "@Dai There are no guarantee that the object can be fully evaluated before other threads start since haskell allows infinite data structure."}, {"owner": {"reputation": 483, "user_id": 4799906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58a6804706d39b381315aa97c9404af?s=128&d=identicon&r=PG&f=1", "display_name": "damhiya", "link": "https://stackoverflow.com/users/4799906/damhiya"}, "reply_to_user": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "edited": false, "score": 1, "creation_date": 1565574692, "post_id": 57454648, "comment_id": 101384025, "body": "@Dai So the thread have to block other tasks every time when evaluation of shared value performed."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 4, "creation_date": 1565590770, "post_id": 57455935, "comment_id": 101386715, "body": "The first step isn&#39;t quite right, because GHC uses lazy blackholing (a different sense of &quot;lazy&quot; from the usual one). See the section &quot;Black holes and revelations&quot; in <a href=\"http://mainisusuallyafunction.blogspot.com/2011/10/thunks-and-lazy-blackholes-introduction.html?m=1\" rel=\"nofollow noreferrer\">mainisusuallyafunction.blogspot.com/2011/10/&hellip;</a>"}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 4, "creation_date": 1565619494, "post_id": 57455935, "comment_id": 101399282, "body": "Consider including a link to the paper with all the gory details, <a href=\"https://simonmar.github.io/bib/papers/multiproc.pdf\" rel=\"nofollow noreferrer\">Haskell on a Shared-Memory Multiprocessor</a>. A lot of time is spent discussing very low level details that are relevant to making the result ultimately go fast in practice."}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 34, "last_activity_date": 1565587067, "creation_date": 1565587067, "answer_id": 57455935, "question_id": 57454648, "link": "https://stackoverflow.com/questions/57454648/how-do-laziness-and-parallelism-coexist-in-haskell/57455935#57455935", "title": "How do laziness and parallelism coexist in Haskell?", "body": "<p>Yes, GHC\u2019s RTS uses thunks to implement non-strict evaluation, and they use mutation under the hood, so they require some synchronisation. However, this is simplified due to the fact that most heap objects are immutable and functions are referentially transparent.</p>\n\n<p>In a multithreaded program, evaluation of a thunk proceeds as follows:</p>\n\n<ul>\n<li><p>The thunk is <em>atomically</em><sup>&dagger;</sup> replaced with a <code>BLACKHOLE</code> object</p></li>\n<li><p>If the <em>same</em> thread attempts to force the thunk after it\u2019s been updated to a <code>BLACKHOLE</code>, this represents an infinite loop, and the RTS throws an exception (<code>&lt;&lt;loop&gt;&gt;</code>)</p></li>\n<li><p>If a <em>different</em> thread attempts to force the thunk while it\u2019s a <code>BLACKHOLE</code>, it blocks until the original thread has finished evaluating the thunk and updated it with a value</p></li>\n<li><p>When evaluation is complete, the original thread <em>atomically</em><sup>&dagger;</sup> replaces the thunk with its result</p></li>\n</ul>\n\n<p><sup>&dagger;</sup> e.g., using a compare-and-swap (CAS) instruction</p>\n\n<p>So there is a potential race here: if two threads attempt to force the same thunk at the same time, they may both begin evaluating it. In that case, they will do some redundant work\u2014however, one thread will succeed in overwriting the <code>BLACKHOLE</code> with the result, and the other thread will simply discard the result that it calculated, because its CAS will fail.</p>\n\n<p>Safe code cannot detect this, because it can\u2019t obtain the address of an object or determine the state of a thunk. And in practice, this type of collision is rare for a couple of reasons:</p>\n\n<ul>\n<li><p>Concurrent code generally partitions workloads across threads in a manner suited to the particular problem, so there is low risk of overlap</p></li>\n<li><p>Evaluation of thunks is generally fairly \u201cshallow\u201d before you reach weak head normal form, so the probability of a \u201ccollision\u201d is low</p></li>\n</ul>\n\n<p>So thunks ultimately provide a good performance tradeoff when implementing non-strict evaluation, even in a concurrent context.</p>\n"}], "owner": {"reputation": 483, "user_id": 4799906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58a6804706d39b381315aa97c9404af?s=128&d=identicon&r=PG&f=1", "display_name": "damhiya", "link": "https://stackoverflow.com/users/4799906/damhiya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1525, "favorite_count": 2, "answer_count": 1, "score": 32, "last_activity_date": 1565610191, "creation_date": 1565571499, "last_edit_date": 1565610191, "question_id": 57454648, "link": "https://stackoverflow.com/questions/57454648/how-do-laziness-and-parallelism-coexist-in-haskell", "title": "How do laziness and parallelism coexist in Haskell?", "body": "<p>People argue that Haskell has an advantage in parallelism since it has immutable data structures. But Haskell is also lazy. It means data actually can be mutated from thunk to evaluated result.</p>\n\n<p>So it seems laziness can harm the advantage of immutability. Am I wrong or does Haskell have countermeasures for this problem? Or is this Haskell's own feature?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 10, "last_activity_date": 1565558159, "creation_date": 1565558159, "answer_id": 57453672, "question_id": 57453638, "link": "https://stackoverflow.com/questions/57453638/why-can-i-call-a-function-from-a-typeclass-instance-directly-in-the-repl-like-c/57453672#57453672", "title": "Why can I call a function from a typeclass instance directly in the REPL (like compare from Ord)?", "body": "<p>The <a href=\"https://kseo.github.io/posts/2017-01-04-type-defaulting-in-haskell.html\" rel=\"noreferrer\">type defaulting</a> here comes into play. The interpreter can derive that <code>5</code> and <code>7</code> need to be of the same type, and members of the <code>Ord</code> and <code>Num</code> typeclass. The default for a <code>Num</code> is <code>Integer</code>, and since <code>Integer</code> is an instance of <code>Ord</code> as well, we can thus use <code>Integer</code>.</p>\n\n<p>The interpreter thus considers <code>5</code> and <code>7</code> to be <code>Integer</code>s here in that case, and thus it can evaluate the function and obtain <code>LT</code>.</p>\n\n<p>GHCi has some additional defaulting rules, described in the <a href=\"https://downloads.haskell.org/~ghc/7.8.4/docs/html/users_guide/interactive-evaluation.html#extended-default-rules\" rel=\"noreferrer\">GHCi documentation</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": false, "score": 9, "last_activity_date": 1565559574, "creation_date": 1565559574, "answer_id": 57453814, "question_id": 57453638, "link": "https://stackoverflow.com/questions/57453638/why-can-i-call-a-function-from-a-typeclass-instance-directly-in-the-repl-like-c/57453814#57453814", "title": "Why can I call a function from a typeclass instance directly in the REPL (like compare from Ord)?", "body": "<p>Methods like <code>compare</code> are associated with types, not particular values. The compiler needs to be able to deduce the type in order to select the correct typeclass instance, but that doesn't require any special assistance.</p>\n\n<p>The type of <code>compare</code> is</p>\n\n<pre><code>compare :: (Ord a) =&gt; a -&gt; a -&gt; Ordering\n</code></pre>\n\n<p>Thus any of its arguments (of type <code>a</code>) can be used to look up the <code>Ord</code> instance.</p>\n\n<p>As you correctly assumed, in the <code>compare 5 7</code> example, the types of <code>5</code> and <code>7</code> default to <code>Integer</code>. Thus <code>a</code> in the <code>compare</code> type is deduced to be <code>Integer</code> and the <code>Ord Integer</code> instance is selected.</p>\n\n<p>This selection does not necessarily go through a function argument. Consider e.g.</p>\n\n<pre><code>read :: (Read a) =&gt; String -&gt; a\n</code></pre>\n\n<p>Here it is the result type that drives instance selection, but the type checker is just fine with it:</p>\n\n<pre><code>&gt; read \"(2, 3)\" :: (Int, Int)\n(2,3)\n</code></pre>\n\n<p>(What would the OO equivalent be? <code>\"(2, 3)\".read()</code>?)</p>\n\n<p>In fact, methods don't even have to be functions:</p>\n\n<pre><code>maxBound :: (Bounded a) =&gt; a\n</code></pre>\n\n<p>This is a polymorphic value, not a function:</p>\n\n<pre><code>&gt; maxBound :: Int\n9223372036854775807\n</code></pre>\n\n<p>Class instances are uniquely connected to types, so as long as the type checker has enough information to figure out what that type variable represents, everything works out. That is, in</p>\n\n<pre><code>someMethod :: (SomeClass foo) =&gt; ...\n</code></pre>\n\n<p><code>foo</code> has to appear somewhere in the type signature <code>...</code> so the type checker can resolve <code>SomeClass foo</code> from the way <code>someMethod</code> is used at any given point (at least in the absence of certain language extensions).</p>\n"}], "owner": {"reputation": 2564, "user_id": 4134881, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/797360342295a3f637a9c4d71d40d113?s=128&d=identicon&r=PG&f=1", "display_name": "evianpring", "link": "https://stackoverflow.com/users/4134881/evianpring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "answer_count": 2, "score": 7, "last_activity_date": 1565559574, "creation_date": 1565557830, "question_id": 57453638, "link": "https://stackoverflow.com/questions/57453638/why-can-i-call-a-function-from-a-typeclass-instance-directly-in-the-repl-like-c", "title": "Why can I call a function from a typeclass instance directly in the REPL (like compare from Ord)?", "body": "<p>When I am in a REPL like GHCI with Prelude, and I write</p>\n\n<pre><code>*&gt; compare 5 7\nLT\n</code></pre>\n\n<p>Why can I call that function (<code>compare</code>) like that directly in the REPL?</p>\n\n<p>I know that <code>compare</code> is defined in typeclass <code>Ord</code>. The typeclass definition for <code>Ord</code> of course shows that it is a subclass of <code>Eq</code>. </p>\n\n<p>Here is my line of reasoning:\n<code>5</code> has type <code>Num a =&gt; a</code>, and <code>Num</code> typeclass is not a subclass of <code>Eq</code>. \nAlso, </p>\n\n<pre><code>Prelude&gt; :t (compare 5)\n(compare 5) :: (Num a, Ord a) =&gt; a -&gt; Ordering\n</code></pre>\n\n<p>So, there is an additional constraint imposed here when I apply a numeric type argument. when I call <code>compare 5 7</code>, the types of the arguments are narrowed to something that does have an instance of <code>Ord</code>. I think the narrowing happens to the default concrete type associated with the typeclass: in the case of <code>Num</code>, this is <code>Integer</code>, which has an instance of <code>Real</code>, which has an instance of <code>Ord</code>.</p>\n\n<p>However, coming from a non-functional programming background, I would have imagined that I would have to call <code>compare</code> on one of the numbers (like calling it on an object in OOP). If <code>5</code> is <code>Integer</code>, which does implement <code>Ord</code>, then why do I call <code>compare</code> in the REPL itself? <strong>This is obviously a question related to a paradigm shift for me and I still didn't get it. Hopefully someone can explain.</strong></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "edited": false, "score": 3, "creation_date": 1565538295, "post_id": 57451389, "comment_id": 101377658, "body": "<code>sumDigits . toDigits x</code> is equivalent to <code>sumDigits . (toDigits x)</code>. Is that what you intended to write?"}], "answers": [{"comments": [{"owner": {"reputation": 70, "user_id": 4089747, "user_type": "registered", "profile_image": "https://graph.facebook.com/1218457685/picture?type=large", "display_name": "Kh&#244;i Ho&#224;ng Nguy\u1ec5n", "link": "https://stackoverflow.com/users/4089747/kh%c3%b4i-ho%c3%a0ng-nguy%e1%bb%85n"}, "edited": false, "score": 0, "creation_date": 1565539697, "post_id": 57451429, "comment_id": 101377952, "body": "Thank you very much!  One question: can you clarify why toDigits runs in O(n^2)? Does it have to scan through each element of the list to append a new one there? If so, it looks more like a linked list than an array."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 70, "user_id": 4089747, "user_type": "registered", "profile_image": "https://graph.facebook.com/1218457685/picture?type=large", "display_name": "Kh&#244;i Ho&#224;ng Nguy\u1ec5n", "link": "https://stackoverflow.com/users/4089747/kh%c3%b4i-ho%c3%a0ng-nguy%e1%bb%85n"}, "edited": false, "score": 1, "creation_date": 1565539809, "post_id": 57451429, "comment_id": 101377977, "body": "@Kh&#244;iHo&#224;ngNguy\u1ec5n: Imagine that you have a number <code>123</code>, then you will have an expression <code>(([]++[1])++[2])++[3]</code>. <code>(++)</code> takes linear time in the length of the left operand. So the inner <code>(++)</code> function will use 0 cycles, the one above that 1 cycles, the one above that 2 cycles, etc. until <code>n</code>. A sum of 1+2+3+...+n scales O(n^2)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 70, "user_id": 4089747, "user_type": "registered", "profile_image": "https://graph.facebook.com/1218457685/picture?type=large", "display_name": "Kh&#244;i Ho&#224;ng Nguy\u1ec5n", "link": "https://stackoverflow.com/users/4089747/kh%c3%b4i-ho%c3%a0ng-nguy%e1%bb%85n"}, "edited": false, "score": 2, "creation_date": 1565540553, "post_id": 57451429, "comment_id": 101378134, "body": "@Kh&#244;iHo&#224;ngNguy\u1ec5n Yes, <code>[Integer]</code> is indeed a linked list type, not an array. Appending at the end with <code>... ++ [x]</code> costs O(N). A common technique is prepending instead using <code>x : ...</code> which only costs O(1). Since prepending will produce the reversed list, one can at the very end use <code>reverse</code> (cost O(N)) <i>once</i> to put the list in the intended order. Total cost: N*O(1)+O(N)=O(N). Another efficient alternative is using &quot;difference lists&quot;, but that&#39;s more advanced than prepending &amp; reversing at the end."}, {"owner": {"reputation": 70, "user_id": 4089747, "user_type": "registered", "profile_image": "https://graph.facebook.com/1218457685/picture?type=large", "display_name": "Kh&#244;i Ho&#224;ng Nguy\u1ec5n", "link": "https://stackoverflow.com/users/4089747/kh%c3%b4i-ho%c3%a0ng-nguy%e1%bb%85n"}, "edited": false, "score": 0, "creation_date": 1565540730, "post_id": 57451429, "comment_id": 101378173, "body": "Thank you guys. Now I understand it"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1565538464, "creation_date": 1565538464, "answer_id": 57451429, "question_id": 57451389, "link": "https://stackoverflow.com/questions/57451389/can-someone-explain-to-me-what-is-wrong-with-the-logic/57451429#57451429", "title": "Can someone explain to me what is wrong with the logic", "body": "<p>The expression <code>sumDigits . toDigits x</code> is interpreted as <code>sumDigits . (toDigits x)</code>. Since the signature of <code>(.)</code> is <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:.\" rel=\"nofollow noreferrer\"><strong><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code></strong></a>, the result thus should be a function, not a value.</p>\n\n<p>That being said, it does not look a very good approach here:</p>\n\n<ol>\n<li>you implement a lot of logic yourself, for example summing up items; and</li>\n<li>the <code>toDigits</code> function runs in <em>O(n<sup>2</sup>)</em> with <em>n</em> the number of digits, since you each time append, instead of prepending.</li>\n</ol>\n\n<p>Since the order of the digits does not matter, we can implement <code>toDigits</code> as:</p>\n\n<pre><code>toDigits :: Integral i =&gt; i -&gt; [i]\ntoDigits n | n &lt;= 0 = []\n           | otherwise = r : toDigits q\n           where (q,r) = quotRem n 10\n</code></pre>\n\n<p>and we can then calculate the sum of the digits as:</p>\n\n<pre><code>sumDigits :: Integral i =&gt; [i] -&gt; i\nsumDigits = sum . concatMap toDigits\n</code></pre>\n\n<p>we here thus concatenate a mapping with <code>toDigits</code>, and then calculate the <code>sum</code> over that result.</p>\n\n<p>This gives us the expected:</p>\n\n<pre><code>Prelude&gt; sumDigits [16,7,12,5]\n22\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "is_accepted": false, "score": 4, "last_activity_date": 1565538683, "creation_date": 1565538683, "answer_id": 57451454, "question_id": 57451389, "link": "https://stackoverflow.com/questions/57451389/can-someone-explain-to-me-what-is-wrong-with-the-logic/57451454#57451454", "title": "Can someone explain to me what is wrong with the logic", "body": "<p>The <code>.</code> operator is function composition, and expects the expressions on each side to be functions.  When you write <code>(sumDigits . toDigits x)</code>, the left side is <code>sumDigits</code>, which is a function.  But the right side is <code>toDigits x</code>, which is not a function.  (<code>toDigits</code> is a function, but <code>toDigits x</code> is the result after that function has been applied.)</p>\n\n<p>It seems that you meant <code>(sumDigits . toDigits) x</code>.  That composes the functions first, and then applies the resulting function to x, computing the sum of its digits.  In Haskell, function application has a higher precedence than anything else, so you need the parentheses to group the function composition first, and then apply it.</p>\n"}], "owner": {"reputation": 70, "user_id": 4089747, "user_type": "registered", "profile_image": "https://graph.facebook.com/1218457685/picture?type=large", "display_name": "Kh&#244;i Ho&#224;ng Nguy\u1ec5n", "link": "https://stackoverflow.com/users/4089747/kh%c3%b4i-ho%c3%a0ng-nguy%e1%bb%85n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 57451429, "answer_count": 2, "score": 1, "last_activity_date": 1565538683, "creation_date": 1565538106, "question_id": 57451389, "link": "https://stackoverflow.com/questions/57451389/can-someone-explain-to-me-what-is-wrong-with-the-logic", "title": "Can someone explain to me what is wrong with the logic", "body": "<p>I need a function that sum all the digits as follow:\nsumDigits [16,7,12,5] = 1+6+7+1+2+5 = 22</p>\n\n<p>I have defined toDigits function as follow:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>    toDigits :: Integer -&gt; [Integer]\n    toDigits n\n        | n &lt;= 0 = []\n        | otherwise = toDigits(n `div` 10) ++ [n `mod` 10]\n</code></pre>\n\n<p>The sumDigits function is defined as follow:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>    sumDigits :: [Integer] -&gt; Integer\n    sumDigits [] = 0\n    sumDigits (x:[]) = x\n    sumDigits (x:zs) = (sumDigits . toDigits x) + sumDigits zs\n</code></pre>\n\n<p>The compiler shows the following errors:</p>\n\n<pre><code>Couldn't match expected type \u2018a0 -&gt; [Integer]\u2019\n              with actual type \u2018[Integer]\u2019\nPossible cause: \u2018toDigits\u2019 is applied to too many arguments\n  In the second argument of \u2018(.)\u2019, namely \u2018toDigits x\u2019\n  In the first argument of \u2018(+)\u2019, namely \u2018(sumDigits . toDigits x)\u2019\n  In the expression: (sumDigits . toDigits x) + sumDigitsX zs\n\nCouldn't match expected type \u2018a0 -&gt; Integer\u2019\n              with actual type \u2018Integer\u2019\nPossible cause: \u2018sumDigitsX\u2019 is applied to too many arguments\n  In the second argument of \u2018(+)\u2019, namely \u2018sumDigits zs\u2019\n  In the expression: (sumDigits . toDigits x) + sumDigits zs\n  In an equation for \u2018sumDigits\u2019:\n      sumDigitsX (x : zs) = (sumDigits . toDigits x) + sumDigits zs\n</code></pre>\n\n<p>I expect that toDigits will split each number to a singleton array and sumDigits will convert it to Integer. Can you explain what is wrong with this one?</p>\n"}, {"tags": ["haskell", "ncurses", "haskell-stack"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565517561, "post_id": 57448771, "comment_id": 101373346, "body": "<i>Stack is not a package manager</i>, it&#39;s a <i>build tool</i>. You can use Cabal-install, which is kind-of a package manager and build tool simultaneously, or you can use Stack in the way it&#39;s supposed to be used."}, {"owner": {"reputation": 23, "user_id": 11913520, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b49589c18afe6e00eb5b4157edf0c7fd?s=128&d=identicon&r=PG&f=1", "display_name": "LogXx", "link": "https://stackoverflow.com/users/11913520/logxx"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565519241, "post_id": 57448771, "comment_id": 101373634, "body": "but i also have installed the network package, which can be loaded even in ghci, how do this work then?"}], "owner": {"reputation": 23, "user_id": 11913520, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b49589c18afe6e00eb5b4157edf0c7fd?s=128&d=identicon&r=PG&f=1", "display_name": "LogXx", "link": "https://stackoverflow.com/users/11913520/logxx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 34, "favorite_count": 0, "closed_date": 1565517526, "answer_count": 0, "score": 0, "last_activity_date": 1565515303, "creation_date": 1565515303, "question_id": 57448771, "link": "https://stackoverflow.com/questions/57448771/installed-ncurses-module-via-haskell-stack-but-cant-use-it", "closed_reason": "Duplicate", "title": "Installed ncurses module via Haskell Stack, but can&#39;t use it", "body": "<p>I have installed the ncurses module globally via \"stack install ncurses\", but somehow i still can't use it in my code. Is there a way to fix this?</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import UI.NCurses\nimport Data.Function (fix)\nimport Control.Monad (unless)\n\nmain = runCurses $ do\n  setEcho False\n  w &lt;- defaultWindow\n  updateWindow w $ do\n    drawString \"test\"\n  render\n  fix $ \\f -&gt; do\n    ev &lt;- getEvent w Nothing\n    let Just ev' = ev\n    unless (ev' == EventCharacter 'q') f\n</code></pre>\n\n<p>I expect the file to compile, but it doesn't:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>[1 of 1] Compiling Main             ( main.hs, main.o )\n\nmain.hs:1:1: error:\n    Could not find module \u2018UI.NCurses\u2019\n    Use -v to see a list of the files searched for.\n  |\n1 | import UI.NCurses\n  | ^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["haskell", "error-handling", "io", "monoids", "monadplus"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1565525334, "post_id": 57447800, "comment_id": 101374819, "body": "Note that <code>fail</code> is not intended as a general-purpose method to raise an error; it&#39;s an implementation detail for pattern-match failures in <code>do</code> notation and list comprehensions."}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 8, "last_activity_date": 1565586588, "last_edit_date": 1565586588, "creation_date": 1565515095, "answer_id": 57448753, "question_id": 57447800, "link": "https://stackoverflow.com/questions/57447800/monadplus-io-isnt-a-monoid/57448753#57448753", "title": "MonadPlus IO isn&#39;t a monoid", "body": "<p><code>IO</code> under <code>mplus</code> is a monoid relative to an equivalence class that identifies exceptions. Not that satisfying. An alternative approach might look like this:</p>\n\n<pre><code>m &lt;|&gt; n = m `catches`\n  [ Handler $ \\ ~EmptyIO -&gt; n\n  , Handler $ \\ ~se@(SomeException _) -&gt;\n      n `catch` \\ ~EmptyIO -&gt; throwIO se ]\n</code></pre>\n\n<p>The main problem with this approach is that handlers can stack up. When the first action fails, we can't just commit to the second action. A smaller issue is that there's no completely reliable way to determine whether an exception is synchronous (and should be rethrown using <code>throwIO</code>) or asynchronous (in which case we need to rethrow it using <code>throwTo</code> with our own thread ID). So that way lies messes.</p>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 202, "favorite_count": 2, "accepted_answer_id": 57448753, "answer_count": 1, "score": 4, "last_activity_date": 1613793717, "creation_date": 1565504808, "last_edit_date": 1613793717, "question_id": 57447800, "link": "https://stackoverflow.com/questions/57447800/monadplus-io-isnt-a-monoid", "title": "MonadPlus IO isn&#39;t a monoid", "body": "<p>Instance <code>MonadPlus IO</code> is unique because <code>mzero</code> throws:</p>\n\n<pre><code>Prelude Control.Monad&gt; mzero\n*** Exception: user error (mzero)\n</code></pre>\n\n<p>So accordingly, <code>MonadPlus IO</code> <em>implies</em> that it is also intended for errors.</p>\n\n<p><code>mzero</code> apparently serves as the identity element if the other action doesn't throw:</p>\n\n<pre><code>Prelude Control.Monad&gt; mzero `mplus` return 0\n0\nPrelude Control.Monad&gt; return 0 `mplus` mzero\n0\n</code></pre>\n\n<p>But it doesn't when both actions throw:</p>\n\n<pre><code>Prelude Control.Monad&gt; fail \"Hello, world!\" `mplus` mzero\n*** Exception: user error (mzero)\nPrelude Control.Monad&gt; mzero `mplus` fail \"Hello, world!\"\n*** Exception: user error (Hello, world!)\n</code></pre>\n\n<p>So <code>MonadPlus IO</code> is not a monoid.</p>\n\n<p>If it violates <code>MonadPlus</code> laws when user intends errors, what is it actually intended for?</p>\n"}, {"tags": ["haskell", "input", "output", "flush", "gnome-terminal"], "answers": [{"tags": [], "owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "is_accepted": true, "score": 9, "last_activity_date": 1565482304, "last_edit_date": 1565482304, "creation_date": 1565481398, "answer_id": 57446437, "question_id": 57446365, "link": "https://stackoverflow.com/questions/57446365/how-to-prevent-inputs-being-flushed-into-output/57446437#57446437", "title": "How to prevent inputs being flushed into output?", "body": "<p>To prevent input being flushed into the output (or \"echoed\"), use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO.html#v:hSetEcho\" rel=\"noreferrer\"><code>hSetEcho stdin False</code></a>.</p>\n\n<pre><code>Prelude&gt; import System.IO\nPrelude System.IO&gt; import Control.Monad\nPrelude System.IO Control.Monad&gt; hSetEcho stdin False\nPrelude System.IO Control.Monad&gt; forever $ getChar &gt;&gt;= print\n'a'\n'\\n'\n'b'\n'c'\n</code></pre>\n\n<p>This can be used to do things like <a href=\"https://stackoverflow.com/a/4064482/5743988\">read in a password</a>.</p>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 1, "accepted_answer_id": 57446437, "answer_count": 1, "score": 4, "last_activity_date": 1565482304, "creation_date": 1565479942, "last_edit_date": 1565481113, "question_id": 57446365, "link": "https://stackoverflow.com/questions/57446365/how-to-prevent-inputs-being-flushed-into-output", "title": "How to prevent inputs being flushed into output?", "body": "<p>I'm on Ubuntu. When I run <code>ghci</code> on Terminal and do this:</p>\n\n<pre><code>Prelude Control.Monad System.IO&gt; forever $ getChar &gt;&gt;= print\n</code></pre>\n\n<p>The result is something like this:</p>\n\n<pre><code>a'a'\nb'b'\nC'C'\n%'%'\n\\'\\\\'\n1'1'\n''\\''\n\"'\"'\n^X'\\CAN'\n^?'\\DEL'\n^CInterrupted.\n</code></pre>\n\n<p>That is, the characters I type in my keyboard are being flushed into output. How can I prevent this and have only <code>print</code> as the writer?</p>\n"}, {"tags": ["haskell", "io"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1565461543, "post_id": 57444667, "comment_id": 101365384, "body": "This is probably due to the Repl itself. If I use Shift+Enter instead, it works."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1565462406, "post_id": 57444667, "comment_id": 101365583, "body": "As pointed out, this is an issue with repl.it. I&#39;d recommend submitting a <a href=\"https://repl.it/bugs\" rel=\"nofollow noreferrer\">bug report over there</a>. For now, consider using GHC or GHCi on your own machine."}], "owner": {"reputation": 925, "user_id": 2835005, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/YXCkX.png?s=128&g=1", "display_name": "OctaviaLo", "link": "https://stackoverflow.com/users/2835005/octavialo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 94, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1565461453, "creation_date": 1565461453, "question_id": 57444667, "link": "https://stackoverflow.com/questions/57444667/repls-haskell-sandbox-skips-even-getline-inputs", "title": "Repl&#39;s Haskell sandbox skips even getLine inputs", "body": "<p>I'm playing around with Haskell for the first time in Repl. Trying to simply run some IO actions with getLine and putStrLn but when I run main in GHCi it keeps skipping the second getLine. I'm using a code snippet from the <a href=\"https://wiki.haskell.org/Introduction_to_Haskell_IO/Actions\" rel=\"nofollow noreferrer\">Intro to Haskell wiki</a></p>\n\n<p>The <a href=\"https://repl.it/@isabellachen1/IncompleteImpossibleArtificialintelligence\" rel=\"nofollow noreferrer\">Repl sandbox is here</a></p>\n\n<p>Not sure if this is a problem with how the code is running in Repl?</p>\n"}, {"tags": ["haskell", "cabal", "nix"], "comments": [{"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 0, "creation_date": 1612544110, "post_id": 57441156, "comment_id": 116808751, "body": "<a href=\"https://github.com/NixOS/nixpkgs/issues/32586\" rel=\"nofollow noreferrer\">github.com/NixOS/nixpkgs/issues/32586</a> might be helpful"}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 0, "creation_date": 1612544116, "post_id": 57441156, "comment_id": 116808756, "body": "Ran into this similar error for another project that was pulling in <code>prettyprinter</code>... <a href=\"https://gist.github.com/chrissound/6fcea2723e7092555e8afc35e2d1f635\" rel=\"nofollow noreferrer\">gist.github.com/chrissound/6fcea2723e7092555e8afc35e2d1f635</a> (I think it in turn depends on a ghc-related library)"}], "answers": [{"tags": [], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "is_accepted": false, "score": 1, "last_activity_date": 1565521870, "creation_date": 1565521870, "answer_id": 57449475, "question_id": 57441156, "link": "https://stackoverflow.com/questions/57441156/nix-build-fails-to-build-haskell-package-abort-because-of-serious-configure-tim/57449475#57449475", "title": "Nix build fails to build haskell package &quot;abort because of serious configure-time warning from Cabal&quot; &quot;no uhc found&quot;", "body": "<p>Because the project originally could be built successfully with stack... A workaround that resulted in a successful <code>nix-build --option sandbox false</code> was:</p>\n\n<pre><code>{\n  nixpkgs ? import &lt;nixpkgs&gt; {}\n, sources ? import ./nix/sources.nix\n, compiler ? \"ghc864\" } :\nlet\n  niv = import sources.nixpkgs {\n    overlays = [\n      (_ : _ : { niv = import sources.niv {}; })\n    ] ;\n    config = {};\n  };\n  pkgs = niv.pkgs;\nin\npkgs.haskell.lib.buildStackProject {\n  name = \"platinumpitanga\";\n  src = ./.;\n}\n</code></pre>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 521, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1612543507, "creation_date": 1565431297, "last_edit_date": 1612543507, "question_id": 57441156, "link": "https://stackoverflow.com/questions/57441156/nix-build-fails-to-build-haskell-package-abort-because-of-serious-configure-tim", "title": "Nix build fails to build haskell package &quot;abort because of serious configure-time warning from Cabal&quot; &quot;no uhc found&quot;", "body": "<p>I've run into a similar situation as: <a href=\"https://stackoverflow.com/questions/52304037/workarounds-for-haskell-cabal-packages-with-constraints-with-nix-and-cabal\">Workarounds for Haskell / cabal packages with constraints with Nix and Cabal?</a></p>\n\n<p>Essentially I have a Haskell library that has dependency of<br>\n<code>time &gt;= 1.9.2</code> (time library within the cabal package repository).</p>\n\n<p>It seems that this version does not currently exist in <code>nixpkgs</code>, doing a <code>nix build</code> results in a error of:</p>\n\n<pre><code>...\nCallStack (from HasCallStack):\n  die', called at libraries/Cabal/Cabal/Distribution/Simple/Configure.hs:950:20 in Cabal-2.4.0.1:Distribution.Simple.Configure\n  configureFinalizedPackage, called at libraries/Cabal/Cabal/Distribution/Simple/Configure.hs:460:12 in Cabal-2.4.0.1:Distribution.Simple.Configure\n  configure, called at libraries/Cabal/Cabal/Distribution/Simple.hs:596:20 in Cabal-2.4.0.1:Distribution.Simple\n  confHook, called at libraries/Cabal/Cabal/Distribution/Simple/UserHooks.hs:67:5 in Cabal-2.4.0.1:Distribution.Simple.UserHooks\n  configureAction, called at libraries/Cabal/Cabal/Distribution/Simple.hs:178:19 in Cabal-2.4.0.1:Distribution.Simple\n  defaultMainHelper, called at libraries/Cabal/Cabal/Distribution/Simple.hs:115:27 in Cabal-2.4.0.1:Distribution.Simple\n  defaultMain, called at Setup.hs:2:8 in main:Main\nSetup: Encountered missing dependencies:\ntime &gt;=1.9.2\n...\n</code></pre>\n\n<p>What are possible solutions here? I've also noticed the following issue but not sure if it's related: <a href=\"https://github.com/haskell/cabal/issues/5223\" rel=\"nofollow noreferrer\">https://github.com/haskell/cabal/issues/5223</a></p>\n\n<p>Possible solutions I've thought of:</p>\n\n<ol>\n<li>Override the Haskell <code>time</code> package, I assume it's a tedious process though?</li>\n<li>Use cabal's native package management. My concern here is though that it won't be able to fully utilize Nix's store cache, so I'd end up building a lot more libraries? I did find (<a href=\"https://www.haskell.org/cabal/users-guide/nix-integration.html\" rel=\"nofollow noreferrer\">https://www.haskell.org/cabal/users-guide/nix-integration.html</a>) but it isn't clear  what this actually does?</li>\n<li>'jailbreaking' the time library</li>\n</ol>\n\n<hr>\n\n<p>Attempting 1:</p>\n\n<pre><code>  myHaskellPackages = haskellPackages.override {\n    overrides = self: super: rec {\n      time  = self.callCabal2nix \"time\" (builtins.fetchGit {\n        url = \"git@github.com:haskell/time.git\";\n        rev = \"5d2046f79cf5451f48b17529abec85349333aa9f\";\n      }) {};\n    };\n  };\n\n  variant = if doBenchmark then myHaskellPackages.lib.doBenchmark else pkgs.lib.id;\n\n  drv = variant (myHaskellPackages.callPackage f {});\n</code></pre>\n\n<p>Strangely results in:</p>\n\n<pre><code>nix-shell\nerror: infinite recursion encountered, at undefined position\n(use '--show-trace' to show detailed location information)\n</code></pre>\n\n<p>Attempting 2:</p>\n\n<p>Bare in mind I don't have thorough knowledge of cabal, but I'm just documenting what I've tried:</p>\n\n<pre><code>cabal new-update\nDownloading the latest package list from hackage.haskell.org\nTo revert to previous state run:\n    cabal new-update 'hackage.haskell.org,2019-08-10T14:09:42Z'\n</code></pre>\n\n<pre><code>cabal new-build\nResolving dependencies...\ncabal: Could not resolve dependencies:\n[__0] trying: platinumpitanga-1.0.0.0 (user goal)\n[__1] next goal: turtle (dependency of platinumpitanga)\n[__1] rejecting: turtle-1.5.13/installed-1Sp... (conflict: platinumpitanga =&gt;\ntime&gt;=1.9.2, turtle =&gt; time==1.8.0.2/installed-1.8...)\n[__1] trying: turtle-1.5.14\n[__2] next goal: time (dependency of platinumpitanga)\n[__2] rejecting: time-1.8.0.2/installed-1.8... (conflict: platinumpitanga =&gt;\ntime&gt;=1.9.2)\n[__2] rejecting: time-1.9.3, time-1.9.2 (conflict: turtle =&gt; time&lt;1.9)\n[__2] rejecting: time-1.9.1, time-1.9, time-1.8.0.4, time-1.8.0.3,\ntime-1.8.0.2, time-1.8.0.1, time-1.8, time-1.7.0.1, time-1.7, time-1.6.0.1,\ntime-1.6, time-1.5.0.1, time-1.5, time-1.4.2, time-1.4.1, time-1.4.0.2,\ntime-1.4.0.1, time-1.4, time-1.3, time-1.2.0.5, time-1.2.0.4, time-1.2.0.3,\ntime-1.2.0.2, time-1.2.0.1, time-1.2, time-1.1.4, time-1.1.3, time-1.1.2.4,\ntime-1.1.2.3, time-1.1.2.2, time-1.1.2.1, time-1.1.2.0, time-1.0 (conflict:\nplatinumpitanga =&gt; time&gt;=1.9.2)\n[__2] fail (backjumping, conflict set: platinumpitanga, time, turtle)\nAfter searching the rest of the dependency tree exhaustively, these were the\ngoals I've had most trouble fulfilling: time, platinumpitanga, turtle\n</code></pre>\n\n<pre><code>cabal new-build --allow-newer\n...\nBuilding library for lens-simple-0.1.0.9..\n[1 of 1] Compiling Lens.Simple      ( Lens/Simple.hs, dist/build/Lens/Simple.o )\n\nLens/Simple.hs:13:7: error:\n    Not in scope: `_Left'\n    Perhaps you meant data constructor `Left' (imported from Prelude)\n   |\n13 |     , _Left, _Right\n   |       ^^^^^\n...\n\n</code></pre>\n\n<p>Attempting 3: </p>\n\n<pre><code>  myHaskellPackages = pkgs.haskellPackages.override {\n    overrides = self: super: rec {\n      turtle = pkgs.haskell.lib.doJailbreak super.turtle;\n    };\n  };\n</code></pre>\n\n<p>Seems to have resulted in the same error:</p>\n\n<pre><code>...\nCallStack (from HasCallStack):\n  die', called at libraries/Cabal/Cabal/Distribution/Simple/Configure.hs:950:20 in Cabal-2.4.0.1:Distribution.Simple.Configure\n  configureFinalizedPackage, called at libraries/Cabal/Cabal/Distribution/Simple/Configure.hs:460:12 in Cabal-2.4.0.1:Distribution.Simple.Configure\n  configure, called at libraries/Cabal/Cabal/Distribution/Simple.hs:596:20 in Cabal-2.4.0.1:Distribution.Simple\n  confHook, called at libraries/Cabal/Cabal/Distribution/Simple/UserHooks.hs:67:5 in Cabal-2.4.0.1:Distribution.Simple.UserHooks\n  configureAction, called at libraries/Cabal/Cabal/Distribution/Simple.hs:178:19 in Cabal-2.4.0.1:Distribution.Simple\n  defaultMainHelper, called at libraries/Cabal/Cabal/Distribution/Simple.hs:115:27 in Cabal-2.4.0.1:Distribution.Simple\n  defaultMain, called at Setup.hs:2:8 in main:Main\nSetup: Encountered missing dependencies:\ntime &gt;=1.9.2\n\nbuilder for '/nix/store/67109ylsjfw8vpdv0q5b90d2bwx8zii0-platinumpitanga-1.0.0.0.drv' failed with exit code 1\nerror: build of '/nix/store/67109ylsjfw8vpdv0q5b90d2bwx8zii0-platinumpitanga-1.0.0.0.drv' failed\n</code></pre>\n\n<hr>\n\n<p>Update...</p>\n\n<p>So apparently overriding a 'core' library like <code>time</code> doesn't actually work (?)... I've tried to instead define something like:</p>\n\n<pre><code>  myHaskellPackages = pkgs.haskell.packages.${compiler}.override {\n    overrides = self: super: rec {\n      timezz = pkgs.haskell.packages.${compiler}.callHackageDirect\n        {\n          pkg = \"time\";\n          ver = \"1.9.3\";\n          sha256 = \"1bs74nj2qc83i2d78xf1hn79f37g8wjgak2bwn5bnwb31pl0bl7r\";\n        }\n        {};\n    };\n  };\n</code></pre>\n\n<p>And then use <code>timezz</code> as a  dependency instead of <code>time</code>... But it fails to build the time library due to:</p>\n\n<pre><code>Documentation installed in:\n/nix/store/9s5hbq3pzippwcylb3x501rja2vxip1c-platinumpitanga-1.0.0.0-doc/share/doc/platinumpitanga-1.0.0.0\nConfiguration files installed in:\n/nix/store/26qkhjjq0ry8mxx6myp0h7m21d35x84z-platinumpitanga-1.0.0.0/etc\nNo alex found\nUsing ar found on system at:\n/nix/store/0y7jmqnj48ikjh37n3dl9kqw9hnn68nq-binutils-2.31.1/bin/ar\nNo c2hs found\nNo cpphs found\nNo doctest found\nUsing gcc version 7.4.0 given by user at:\n/nix/store/ghzg4kg0sjif58smj2lfm2bdvjwim85y-gcc-wrapper-7.4.0/bin/gcc\nUsing ghc version 8.6.4 found on system at:\n/nix/store/gvshp9yvc6gql09r3cyryj2zgsnfk6br-ghc-8.6.4/bin/ghc\nUsing ghc-pkg version 8.6.4 found on system at:\n/nix/store/gvshp9yvc6gql09r3cyryj2zgsnfk6br-ghc-8.6.4/bin/ghc-pkg\nNo ghcjs found\nNo ghcjs-pkg found\nNo greencard found\nUsing haddock version 2.22.0 found on system at:\n/nix/store/gvshp9yvc6gql09r3cyryj2zgsnfk6br-ghc-8.6.4/bin/haddock\nNo happy found\nUsing haskell-suite found on system at: haskell-suite-dummy-location\nUsing haskell-suite-pkg found on system at: haskell-suite-pkg-dummy-location\nNo hmake found\nUsing hpc version 0.67 found on system at:\n/nix/store/gvshp9yvc6gql09r3cyryj2zgsnfk6br-ghc-8.6.4/bin/hpc\nUsing hsc2hs version 0.68.5 found on system at:\n/nix/store/gvshp9yvc6gql09r3cyryj2zgsnfk6br-ghc-8.6.4/bin/hsc2hs\nUsing hscolour version 1.24 found on system at:\n/nix/store/xnn0093zfkxsvjyr6g7w1l534hrb1p57-hscolour-1.24.4/bin/HsColour\nNo jhc found\nUsing ld found on system at:\n/nix/store/rbpyfy6413aqpik9aj6p3a2syd1mda68-binutils-wrapper-2.31.1/bin/ld\nNo pkg-config found\nUsing runghc version 8.6.4 found on system at:\n/nix/store/gvshp9yvc6gql09r3cyryj2zgsnfk6br-ghc-8.6.4/bin/runghc\nUsing strip version 2.31 found on system at:\n/nix/store/0y7jmqnj48ikjh37n3dl9kqw9hnn68nq-binutils-2.31.1/bin/strip\nUsing tar found on system at:\n/nix/store/wmxqm38g1y1y7sd7s9vg7an3klffaiyz-gnutar-1.31/bin/tar\nNo uhc found\n*** abort because of serious configure-time warning from Cabal\nbuilder for '/nix/store/3dsr8m5frzyn0lcmf4v0b80fq55b2vp6-platinumpitanga-1.0.0.0.drv' failed with exit code 1\nerror: build of '/nix/store/3dsr8m5frzyn0lcmf4v0b80fq55b2vp6-platinumpitanga-1.0.0.0.drv' failed\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 725, "user_id": 5309823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y9956.png?s=128&g=1", "display_name": "cole", "link": "https://stackoverflow.com/users/5309823/cole"}, "edited": false, "score": 1, "creation_date": 1565430851, "post_id": 57441066, "comment_id": 101358644, "body": "Isn\u2019t (2) just saying that terms need to be eta-reduced to be in WHNF? Eta reduction being the difference between <code>\\x -&gt; (+) 1 x</code> and <code>(+) 1</code> (the former is not eta-reduced, i.e  it has a redundant lambda)."}, {"owner": {"reputation": 739, "user_id": 2359990, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/1f7130d72f637bce50544029ccd6998a?s=128&d=identicon&r=PG", "display_name": "Max Maier", "link": "https://stackoverflow.com/users/2359990/max-maier"}, "reply_to_user": {"reputation": 725, "user_id": 5309823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y9956.png?s=128&g=1", "display_name": "cole", "link": "https://stackoverflow.com/users/5309823/cole"}, "edited": false, "score": 0, "creation_date": 1565431950, "post_id": 57441066, "comment_id": 101358854, "body": "yes, I missed the point of eta reduction. Thanks for clarification!"}], "answers": [{"comments": [{"owner": {"reputation": 739, "user_id": 2359990, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/1f7130d72f637bce50544029ccd6998a?s=128&d=identicon&r=PG", "display_name": "Max Maier", "link": "https://stackoverflow.com/users/2359990/max-maier"}, "edited": false, "score": 0, "creation_date": 1565431878, "post_id": 57441100, "comment_id": 101358825, "body": "Uhh I didn&#39;t see the difference between beta-eta WHNF and beta WHNF. Now it makes sense to me.  With &quot;it is of the form of a lambda application&quot; I actually thought that in <code>x y</code> the expression <code>x</code> may be an arbitrary lambda expression. Thus I got confused by the notation of WikiPedia.  Thanks for clarification!"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1565430763, "creation_date": 1565430763, "answer_id": 57441100, "question_id": 57441066, "link": "https://stackoverflow.com/questions/57441066/different-notions-of-weak-head-normal-form/57441100#57441100", "title": "Different notions of weak head normal form?", "body": "<p><code>\\x.(+) x 1</code> is not in the form <code>\\x. f x</code>, so (2) does not apply and it is in WHNF.</p>\n\n<p>By contrast, <code>\\x.(+) 1 x</code> <em>is</em> in the form <code>\\x. f x</code> (<code>f = (+) 1</code>), so (2) applies and it is not in WHNF.</p>\n\n<p>To be pedantic, here wikipedia is considering beta-eta WHNF. Haskell, like many other languages, does not perform eta-reduction, only obtaining beta WHNF.</p>\n\n<p>Clause (3) is intended to apply to any application <code>expression1 expression2</code> who does not match with (1), I think. I am not a fan of the notation used there by wikipedia: usually <code>x,y,z</code> stand for variables (only), and <code>M,N,O</code> for arbitrary terms.</p>\n\n<p>Still, I can't understand what you mean by \"it is of the form of a lambda application\".</p>\n"}], "owner": {"reputation": 739, "user_id": 2359990, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/1f7130d72f637bce50544029ccd6998a?s=128&d=identicon&r=PG", "display_name": "Max Maier", "link": "https://stackoverflow.com/users/2359990/max-maier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 57441100, "answer_count": 1, "score": 1, "last_activity_date": 1565619925, "creation_date": 1565430496, "last_edit_date": 1565619925, "question_id": 57441066, "link": "https://stackoverflow.com/questions/57441066/different-notions-of-weak-head-normal-form", "title": "Different notions of weak head normal form?", "body": "<p>There are already plenty of questions about weak head normal form etc. and once I read through them I thought I got it. But then I read this <a href=\"https://en.wikipedia.org/wiki/Lambda_calculus_definition#Weak_head_normal_form\" rel=\"nofollow noreferrer\">Wikipedia article</a> where WHNF is defined for the lambda calculus as follows:</p>\n\n<pre><code>whnf[ (\\x.y) z ] = false    (1)\nwhnf[ \\x.(f x) ] = false    (2)\nwhnf[ x y ] = whnf[ x ]     (3)\n\nin all other cases\nwhnf[x] = true              (4)\n</code></pre>\n\n<p>I'm fine with clause (1) and (4). However, clause (2) seems wrong to me. According to my understanding, an expression</p>\n\n<pre><code>\\x.x+1\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>\\x.(+) x 1\n</code></pre>\n\n<p>which should be in WHNF since its outermost construct is a lambda abstraction, but according to (2) it's not.</p>\n\n<p>Furthermore, clause (3) seems wrong to me too, since it is of the form of a lambda application.</p>\n\n<p>I'm coming from the Haskell world. Is it possible that there exist different notions of WHNF in the lambda calculus and the Haskell language?</p>\n"}, {"tags": ["haskell", "monad-transformers", "state-monad", "stm", "io-monad"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1565429897, "post_id": 57440981, "comment_id": 101358464, "body": "Well the Monad transformer wraps around an <code>STM Float</code>, not an <code>IO Float</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1565429970, "post_id": 57440981, "comment_id": 101358478, "body": "You can&#39;t run IO actions inside STM, not even <code>randomIO</code>. You need to find a workaround, like pre-generating your random numbers before entering STM, or passing the RNG state around in STM."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1565430002, "post_id": 57440981, "comment_id": 101358484, "body": "You can use <code>unsafeIOToSTM</code>, but as the name indicates: that is unsafe, and therefore you better do not do this."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1565430025, "post_id": 57440981, "comment_id": 101358489, "body": "related: <a href=\"https://mail.haskell.org/pipermail/haskell-cafe/2007-January/021330.html\" rel=\"nofollow noreferrer\">mail.haskell.org/pipermail/haskell-cafe/2007-January/&hellip;</a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1565489990, "post_id": 57440981, "comment_id": 101369794, "body": "@WillemVanOnsem, it might be okay in some contexts. If the random number selected doesn&#39;t affect the probability that the transaction will succeed, then it should be perfectly fine. I&#39;d it does affect that, then it&#39;ll modify the effective distribution, which may or may not be acceptable. That said, random number generation likely takes longer than you really want to spend in an STM transaction."}, {"owner": {"reputation": 7397, "user_id": 27385, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ad2304dd68978c01b9bf45daa6d9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/27385/alex"}, "edited": false, "score": 0, "creation_date": 1565605751, "post_id": 57440981, "comment_id": 101392358, "body": "Given I&#39;m passing in the list from the <code>random</code> package, what is the effect of laziness in this scenario when the STM transaction &quot;pulls&quot; a value? Is passing a thunk dangerous?"}], "answers": [{"tags": [], "owner": {"reputation": 7397, "user_id": 27385, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ad2304dd68978c01b9bf45daa6d9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/27385/alex"}, "is_accepted": true, "score": 3, "last_activity_date": 1565430691, "creation_date": 1565430691, "answer_id": 57441091, "question_id": 57440981, "link": "https://stackoverflow.com/questions/57440981/haskell-io-action-in-statet-a-stm-b/57441091#57441091", "title": "Haskell IO action in `StateT a STM b`", "body": "<p>As per the comments I was attempting something stupid. Instead I passed a list of random <code>Float</code>s that I needed to my function using <code>randomRs (0.0, 1.0) g</code>. </p>\n"}], "owner": {"reputation": 7397, "user_id": 27385, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ad2304dd68978c01b9bf45daa6d9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/27385/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 57441091, "answer_count": 1, "score": 2, "last_activity_date": 1565430691, "creation_date": 1565429761, "question_id": 57440981, "link": "https://stackoverflow.com/questions/57440981/haskell-io-action-in-statet-a-stm-b", "title": "Haskell IO action in `StateT a STM b`", "body": "<p>I want to run <code>randomIO</code> inside my <code>StateT a STM b</code> but I get this error:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>Expected type: StateT Session STM Float\n  Actual type: IO Float\n</code></pre>\n\n<p>so I try <code>lift</code>'ing from <code>Control.Monad.Trans.Class</code> (re-exported by State's Strict module):</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>Expected type: StateT Session STM Float\n  Actual type: StateT Session IO Float\n</code></pre>\n\n<p>which is closer but not quite there. I can't <code>liftIO</code> because there's no <code>MonadIO</code> instance for <code>STM</code>.</p>\n\n<p>How can I get this to compile so I can run <code>randomIO</code> inside <code>STM</code> inside my <code>StateT</code>?</p>\n"}, {"tags": ["haskell", "haskell-lens", "lenses"], "answers": [{"tags": [], "owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "is_accepted": true, "score": 6, "last_activity_date": 1565425996, "creation_date": 1565425996, "answer_id": 57440617, "question_id": 57440564, "link": "https://stackoverflow.com/questions/57440564/how-can-monoid-r-const-r-of-the-optic-fold-type-be-generalized-to-contravaria/57440617#57440617", "title": "How can Monoid r =&gt; Const r of the optic Fold type be generalized to Contravariant + Applicative?", "body": "<p>The <code>Monoid</code> instance is hidden in the constraint of the <code>Applicative</code> instance for <code>Const r</code>.</p>\n\n<p><a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/Data.Functor.Const.html#line-86\" rel=\"noreferrer\"><code>Const r</code> is <em>only</em> an instance of <code>Applicative</code> if <code>r</code> is an instance of <code>Monoid</code></a>:</p>\n\n<pre><code>instance Monoid m =&gt; Applicative (Const m) where\n   ...\n</code></pre>\n"}], "owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 37, "favorite_count": 0, "accepted_answer_id": 57440617, "answer_count": 1, "score": 3, "last_activity_date": 1565425996, "creation_date": 1565425492, "question_id": 57440564, "link": "https://stackoverflow.com/questions/57440564/how-can-monoid-r-const-r-of-the-optic-fold-type-be-generalized-to-contravaria", "title": "How can Monoid r =&gt; Const r of the optic Fold type be generalized to Contravariant + Applicative?", "body": "<p>Starting from this <code>Getter</code> type</p>\n\n<pre><code>type Getter s a = forall r. (a -&gt; Const r a) -&gt; s -&gt; Const r s\n</code></pre>\n\n<p>we need an additional <code>Monoid</code> constraint to obtain a <code>Fold</code>:</p>\n\n<pre><code>type Fold s a = forall r. Monoid r =&gt; (a -&gt; Const r a) -&gt; s -&gt; Const r s\n</code></pre>\n\n<p>But <code>Fold</code>'s actual and more general type is</p>\n\n<pre><code>type Fold s a = forall f. (Contravariant f, Applicative f) =&gt; (a -&gt; f a) -&gt; s -&gt; f s\n</code></pre>\n\n<p>I understand that <code>Contravariant</code> is used to exclude <code>Identity</code> and thus ensure that we can only get the value. But I don't understand how <code>Monoid r</code> corresponds to <code>Applicative</code>? Sure, <code>Const</code> is also an Applicative but where is the monoid hidden?</p>\n\n<p>Sorry for this confusing question.</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1565396184, "post_id": 57438311, "comment_id": 101354033, "body": "Could you copy over your whole <code>stack.yaml</code> file? It may help to diagnose if e.g. you\u2019ve made a syntax error or some similar problem."}, {"owner": {"reputation": 693, "user_id": 7564554, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-h7KkTmgJty0/AAAAAAAAAAI/AAAAAAAAAAo/ZFEGeg_bQ6Y/photo.jpg?sz=128", "display_name": "Eben Kadile", "link": "https://stackoverflow.com/users/7564554/eben-kadile"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1565397476, "post_id": 57438311, "comment_id": 101354181, "body": "@bradrn added the file. I noticed that I had previously included <code>Persistence-2.0</code> in the <code>extra-deps</code> field. I don&#39;t remember what that was meant to solve, but I suppose it could be causing a problem."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1565402525, "post_id": 57438311, "comment_id": 101354735, "body": "Thanks @EbenCowley! But I think I wasn\u2019t quite clear enough with what I was asking: I wanted to see your <code>stack.yaml</code> <i>with the <code>allow-newer</code> field</i>, in order to check the syntax of that field as you have written it."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 3, "creation_date": 1565402584, "post_id": 57438311, "comment_id": 101354741, "body": "The doc you link to is a list of options for <code>stack.yaml</code>, not <code>package.yaml</code> (which is not really part of stack, but of a different tool called hpack). If <code>allow-newer</code> is not in your <code>stack.yaml</code>, another place it could hide is <code>$HOME&#47;.stack&#47;config.yaml</code>."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565409520, "post_id": 57438311, "comment_id": 101355461, "body": "@Li-yaoXia you should add that as an answer. (I can\u2019t believe I missed the fact that the OP added the option to the wrong file!)"}, {"owner": {"reputation": 693, "user_id": 7564554, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-h7KkTmgJty0/AAAAAAAAAAI/AAAAAAAAAAo/ZFEGeg_bQ6Y/photo.jpg?sz=128", "display_name": "Eben Kadile", "link": "https://stackoverflow.com/users/7564554/eben-kadile"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1565421001, "post_id": 57438311, "comment_id": 101356911, "body": "@bradrn @Li-yaoXia Thank you for your help. For some reason, the option <code>allow-newer: true</code> was in <code>config.yaml</code>; I&#39;ve fixed it now."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565422774, "post_id": 57438311, "comment_id": 101357188, "body": "@\u200aEbenCowley or @Li-yaoXia could you add that as an answer so this question can be closed?"}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 2, "last_activity_date": 1565435949, "creation_date": 1565435949, "answer_id": 57441668, "question_id": 57438311, "link": "https://stackoverflow.com/questions/57438311/haskell-stack-allow-newer-enabled-and-wont-turn-off/57441668#57441668", "title": "Haskell stack - allow-newer enabled and won&#39;t turn off?", "body": "<p>The doc you link to is a list of options for <code>stack.yaml</code>, not <code>package.yaml</code> (which is not really part of stack, but of a different tool called hpack). If allow-newer is not in your <code>stack.yaml</code>, another place it could hide is <code>$HOME/.stack/config.yaml</code>.</p>\n"}], "owner": {"reputation": 693, "user_id": 7564554, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-h7KkTmgJty0/AAAAAAAAAAI/AAAAAAAAAAo/ZFEGeg_bQ6Y/photo.jpg?sz=128", "display_name": "Eben Kadile", "link": "https://stackoverflow.com/users/7564554/eben-kadile"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 431, "favorite_count": 0, "accepted_answer_id": 57441668, "answer_count": 1, "score": 1, "last_activity_date": 1565435949, "creation_date": 1565395110, "last_edit_date": 1565397376, "question_id": 57438311, "link": "https://stackoverflow.com/questions/57438311/haskell-stack-allow-newer-enabled-and-wont-turn-off", "title": "Haskell stack - allow-newer enabled and won&#39;t turn off?", "body": "<p>According to <a href=\"https://docs.haskellstack.org/en/stable/yaml_configuration/#allow-newer\" rel=\"nofollow noreferrer\">the docs</a>, <code>allow-newer</code> is an option in <code>package.yaml</code> which tells stack to ignore bounds on dependency versions specified in the <code>cabal</code> file. Despite the fact that it should be disabled by default, I get the following weird error message when building:</p>\n\n<pre><code>WARNING: Ignoring &lt;Project name&gt;'s bounds on Persistence (&gt;2.0); using Persistence-2.0.\nReason: allow-newer enabled.\nWARNING: Ignoring &lt;Project name&gt;'s bounds on binary (&gt;0.8.6.0); using binary-0.8.6.0.\nReason: allow-newer enabled.\n</code></pre>\n\n<p>To try to fix this I added <code>allow-newer: false</code> to <code>package.yaml</code>, but that only resulted in</p>\n\n<pre><code>/path/to/project/package.yaml: Ignoring unrecognized field $.allow-newer\n</code></pre>\n\n<p>as well as the other error messages mentioned above.</p>\n\n<p>What could be going wrong here? I'm using <code>stack</code> version 2.1.3.</p>\n\n<p><code>stack.yaml</code> (comments ommitted):</p>\n\n<pre><code>resolver: lts-14.0\n\npackages:\n- .\n\nextra-deps:\n- Persistence-2.0@sha256:997664d1805105f10202b6148cb3cfd57fa1e298be5b21e9fa97108bfb8f7918,2093\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 11909099, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-nYUZbahWw0g/AAAAAAAAAAI/AAAAAAAAAOI/nE4VfRFJnQA/photo.jpg?sz=128", "display_name": "Matt Witty", "link": "https://stackoverflow.com/users/11909099/matt-witty"}, "edited": false, "score": 0, "creation_date": 1565384655, "post_id": 57436720, "comment_id": 101351658, "body": "Is there anyway to implement mkStdGen into the function so that the signature stays the same and <code>random_ele [1,2,3,4,5] 3456</code> works as an input?"}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 1, "user_id": 11909099, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-nYUZbahWw0g/AAAAAAAAAAI/AAAAAAAAAOI/nE4VfRFJnQA/photo.jpg?sz=128", "display_name": "Matt Witty", "link": "https://stackoverflow.com/users/11909099/matt-witty"}, "edited": false, "score": 3, "creation_date": 1565396068, "post_id": 57436720, "comment_id": 101354017, "body": "@MattWitty If by that you mean that the <code>3456</code> is an <code>Int</code> parameter and you call <code>mkStdGen</code> within <code>random_ele</code>, then obviously you can&#39;t do it by keeping the signature the same; you&#39;d need to take an <code>Int</code> for the second parameter instead of a <code>StdGen</code>. It also wouldn&#39;t be a good idea; you then wouldn&#39;t be able to use <code>random_ele</code> as one part in a sequence of random calculations, because it would demand an <code>Int</code> but the output of random calculations would be a new <code>StdGen</code> to use in the next one, not an <code>Int</code>."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 4, "last_activity_date": 1565382424, "creation_date": 1565382424, "answer_id": 57436720, "question_id": 57436655, "link": "https://stackoverflow.com/questions/57436655/how-do-you-use-an-stdgen-type-in-the-arguments/57436720#57436720", "title": "How do you use an StdGen type in the arguments?", "body": "<p>A <code>StdGen</code> isn't an integer.  (It's actually a pair of 32-bit integers, but that's an implementation detail.)  What you're looking for is the <code>mkStdGen :: Int -&gt; StdGen</code> function which accepts an integer seed and creates a valid <code>StdGen</code>:</p>\n\n<pre><code>&gt; random_ele [1,2,3,4,5] (mkStdGen 3456)\n(1,138328398 40692)\n</code></pre>\n\n<p>Oh, and the meaning of the error message is that GHC can't find a <code>Num</code> instance for <code>StdGen</code> that <strong>would</strong> allow it to convert the literal <code>3456</code> directly to a <code>StdGen</code>, the way <code>3456</code> can be converted directly to a <code>Double</code>, <code>Int</code>, <code>Integer</code>, etc.  (because these types all have <code>Num</code> instances).  You'd get a similar error if you tried to use <code>3456</code> as a <code>Bool</code>:</p>\n\n<pre><code>&gt; not 3456\nerror: ... No instance for (Num Bool) arising from the literal \u20183456\u2019 ...\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 11909099, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-nYUZbahWw0g/AAAAAAAAAAI/AAAAAAAAAOI/nE4VfRFJnQA/photo.jpg?sz=128", "display_name": "Matt Witty", "link": "https://stackoverflow.com/users/11909099/matt-witty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1565389065, "creation_date": 1565382075, "last_edit_date": 1565389065, "question_id": 57436655, "link": "https://stackoverflow.com/questions/57436655/how-do-you-use-an-stdgen-type-in-the-arguments", "title": "How do you use an StdGen type in the arguments?", "body": "<p>Im creating a function with a list of Int's and an StdGen as args and randomly chooses an element from that list, and returns that element along with the new seed.</p>\n\n<pre><code>random_ele :: [Int] -&gt; StdGen -&gt; (Int, StdGen)\n\nrandom_ele xs g = (xs!!r1, g1) where (r1, g1) = randomR (0, ((length xs)-1)) g\n</code></pre>\n\n<p>The input: <code>random_ele [1,2,3,4,5] 3456</code>\nProduces this error: <code>No instance for (Num StdGen) arising from the literal \u20183456\u2019</code></p>\n"}, {"tags": ["haskell", "haskell-lens", "lenses"], "answers": [{"comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565383537, "post_id": 57436563, "comment_id": 101351319, "body": "While this is a great answer as far as it goes, I don&#39;t think you&#39;ve actually answered the OP&#39;s question, which appears to be all about why the <code>Contravariant</code> constraint exists for a <code>Getter</code>, which you don&#39;t appear to have mentioned at all. Your example seems to explain how the <code>Lens</code> type works and how you can use one to essentially re-implement the <code>fst</code> function - but it doesn&#39;t touch on how a <code>Getter</code> is different, and in particular why the type is so relaxed to not need to work on all <code>Functor</code>s, just those which are also <code>Contravariant</code>."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565385794, "post_id": 57436563, "comment_id": 101352007, "body": "@RobinZigmond I disagree that the question was &quot;primarily&quot; about <code>Contravariant</code>. The question title says &quot;How to implement a Getter&quot;, and the first question in the body matches that. It is only after &quot;beyond that&quot; qualification that the OP is asking about <code>Contravariant</code>. Nevertheless, I was going to write about it for completeness, just didn&#39;t have enough time. Done now."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565389057, "post_id": 57436563, "comment_id": 101352794, "body": "@FyodorSoikin apologies, I think I had misread the question when I made that comment. But thank you for subsequently adding the explanation of that part."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1565419504, "post_id": 57436563, "comment_id": 101356649, "body": "I&#39;d like to clarify a detail: <code>firstElementGetter</code> doesn&#39;t even use the Contravariant constraint, because it is sufficient that it exists for <code>f</code>: <code>Const a</code> has an instance but <code>Identity</code> hasn&#39;t, so every attempt to pass <code>Identity</code> as <code>f</code> wouldn&#39;t type check and thus there is no way of using a Getter as a Setter/transformer."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 7, "last_activity_date": 1565388973, "last_edit_date": 1565388973, "creation_date": 1565381508, "answer_id": 57436563, "question_id": 57436243, "link": "https://stackoverflow.com/questions/57436243/how-to-implement-a-lens-like-getter-for-a-specific-type/57436563#57436563", "title": "How to implement a Lens like Getter for a specific type?", "body": "<p>In the type <code>Getter s a</code>, type <code>s</code> denotes the \"object\" that somehow \"contains\" a value of type <code>a</code>, which the getter can somehow \"extract\" from it.</p>\n\n<p>If you want to implement a getter for a pair, then your <code>s = (x, y)</code>, and your <code>a</code> would be either <code>x</code> or <code>y</code>, depending on which element you're extracting. Let's say for clarity that you're extracting the first element. Then <code>a = x</code>.</p>\n\n<p>Ok, so your function would look like this:</p>\n\n<pre><code>firstElementGetter :: Getter (x, y) x\n</code></pre>\n\n<p>Now, if we expand the definition of <code>Getter</code>, we get:</p>\n\n<pre><code>firstElementGetter :: (blah-blah) =&gt; (x -&gt; f x) -&gt; (x, y) -&gt; f (x, y)\nfirstElementGetter h (x, y) = ...\n</code></pre>\n\n<p>This means that your function gets two parameters: (1) a function <code>h</code> that can \"wrap\" an <code>x</code> in functor <code>f</code>, and (2) a tuple <code>(x, y)</code>; and it needs to return a tuple <code>(x, y)</code> wrapped in the functor <code>f</code>. Let's see if we can do that.</p>\n\n<p>First, we have a function <code>h</code> that takes a parameter of type <code>x</code>. Conveniently, we also have an <code>x</code> of that very type. Let's apply it: <code>h x</code>. The result of that has type <code>f x</code>. How can we turn that into <code>f (x, y)</code>? </p>\n\n<p>Well, the very thing of a <code>Functor</code> is that you can <em>map</em> over it. So what function can we map over <code>f x</code> to obtain <code>f (x, y)</code>? Such function obviously needs to have a type <code>x -&gt; (x, y)</code> - and behold! We have all the parts to construct such a function! We can take our existing <code>y</code> and recombine it into the tuple: <code>\\xx -&gt; (xx, y)</code>. </p>\n\n<p>Now we have everything to fulfill the contract of the getter:</p>\n\n<pre><code>firstElementGetter :: (blah-blah) =&gt; (x -&gt; f x) -&gt; (x, y) -&gt; f (x, y)\nfirstElementGetter h (x, y) = fmap (\\xx -&gt; (xx, y)) (h x)\n</code></pre>\n\n<hr>\n\n<p>This is, at root, how all optics work - be they getters, traversals, prisms, or whatever. The consumer can then make them do different things by choosing the right functor <code>f</code> and the right wrapping function <code>h</code>.</p>\n\n<p>For example, the consumer can use your getter to \"extract\" the first element from a tuple by choosing this functor:</p>\n\n<pre><code>data Const a b = Const a\n\ninstance Functor (Const a) where\n    fmap f (Const a) = Const a\n</code></pre>\n\n<p>Notice how it completely ignores the type <code>b</code>. Doesn't actually \"wrap\" a value of it, and <code>fmap</code> implementation doesn't touch it either. You might say it's a \"fake\" functor. We're going to use that to our advantage!</p>\n\n<p>For function <code>h</code> we're going to choose <code>Const</code>. It fits the type, because <code>Const :: x -&gt; Const x foo</code> for any <code>foo</code>, which happens to be compatible with <code>x -&gt; Const x x</code>, which matches the required type <code>x -&gt; f x</code> when <code>f = Const x</code>. I know, this is a bit mind-blowing, but bear with me.</p>\n\n<p>Now, if <code>h = Const</code>, our getter will dutifully call <code>h x</code>, which would return <code>Const x</code>, which the getter will <code>fmap</code> over, but since our definition of <code>fmap</code> ignores its first argument, the result of <code>fmap</code> will still be the very same <code>Const x</code>, which the getter will then return. Now, all we need to do is just unwrap it, and we're done!</p>\n\n<pre><code>getFirst :: (x, y) -&gt; x\ngetFirst pair = \n    let (Const x) = firstElementGetter Const pair\n    in x\n</code></pre>\n\n<hr>\n\n<p>The <code>Contravariant</code> part is a bit of a clever type-level hackery. See, when a functor <code>f</code> is not only <code>Functor</code>, but also <code>Contravariant</code>, it <em>has</em> to have the shape of the <code>Const</code> type above - i.e. it cannot \"wrap\" a value of its type parameter inside.</p>\n\n<p><code>Functor</code> can be thought of as a thing that \"produces\" (or \"contains\") values, while <code>Contravariant</code> is a thing that \"consumes\" values. If a \"wrapper\" type has to be both, the only way to implement it is to only pretend to \"consume\" or \"produce\" values, but ignore them behind the scenes. I understand this is not a very clear explanation, but I can't do any better. Just try to implement a type like that, you'll see.</p>\n\n<p>So <code>Getter</code> is given this weird constraint just as a way to ensure that the only thing it can do is \"get\" a value, never \"set\" or \"transform\" it.</p>\n\n<ul>\n<li>The simplest implementation of a getter would be just <code>s -&gt; a</code>. </li>\n<li>A less simple implementation would be <code>(a -&gt; x) -&gt; s -&gt; x</code> - in continuation-passing style, but equivalent to the previous one.</li>\n<li>A yet less simple implementation would be <code>(a -&gt; Const x a) -&gt; s -&gt; Const x s</code> - I just replaced both <code>a</code> with <code>Const x foo</code> with different <code>foo</code>, but it's still equivalent to the previous one.</li>\n</ul>\n\n<p>While the first (simplest) definition would do for the actual getting, the last definition has the advantage of having a signature compatible with other lenses, thus making it possible to use such getter in lens compositions.</p>\n"}], "owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 57436563, "answer_count": 1, "score": 3, "last_activity_date": 1565388973, "creation_date": 1565379817, "last_edit_date": 1565387857, "question_id": 57436243, "link": "https://stackoverflow.com/questions/57436243/how-to-implement-a-lens-like-getter-for-a-specific-type", "title": "How to implement a Lens like Getter for a specific type?", "body": "<p>Given the general <code>Getter</code> type</p>\n\n<pre><code>type Getter s a = forall f. (Contravariant f, Functor f) =&gt; (a -&gt; f a) -&gt; s -&gt; f s\n</code></pre>\n\n<p>how would I implement a getter for, say, a pair tuple? I guess the above type represents a partially applied function and the missing part is exactly what confuses me.</p>\n\n<p>Beyond that I don't understand the contravariant constraint. It's probably there to make the type more lens like, but isn't functor enough?</p>\n"}, {"tags": ["haskell", "functional-programming", "currying"], "answers": [{"comments": [{"owner": {"reputation": 91978, "user_id": 387076, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/cFyP6.jpg?s=128&g=1", "display_name": "Gilles &#39;SO- stop being evil&#39;", "link": "https://stackoverflow.com/users/387076/gilles-so-stop-being-evil"}, "edited": false, "score": 0, "creation_date": 1565362655, "post_id": 57432582, "comment_id": 101343332, "body": "I wouldn&#39;t say that \u201call functions of multiple arguments are implicitly curried\u201d in the Haskell <i>language</i> itself. That&#39;s true of constructors, and it&#39;s true in the standard library, and compilers are optimized for that, but the core language could equally accommodate uncurried functions. Just like the core ML language can accommodate curried or uncurried functions, and SML (compilers and libraries) went for uncurried while Caml (compilers and libraries) went for curried."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 91978, "user_id": 387076, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/cFyP6.jpg?s=128&g=1", "display_name": "Gilles &#39;SO- stop being evil&#39;", "link": "https://stackoverflow.com/users/387076/gilles-so-stop-being-evil"}, "edited": false, "score": 1, "creation_date": 1565363021, "post_id": 57432582, "comment_id": 101343511, "body": "@Gilles: What I mean is that the notations for functions of multiple arguments, <code>f x y z = \u2026</code> and <code>\\ x y z -&gt; \u2026</code>, are defined by currying rather than with tuples or extending the language with native multi-argument functions. Of course, since they\u2019re isomorphic, GHC\u2019s ABI &amp; runtime in fact deal with multi-argument functions internally for performance reasons\u2014as a rule of thumb they only allocate closures when necessary for partial (unsaturated) applications."}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 3, "last_activity_date": 1565407059, "last_edit_date": 1565407059, "creation_date": 1565362359, "answer_id": 57432582, "question_id": 57431491, "link": "https://stackoverflow.com/questions/57431491/finding-the-computational-interpretation-of-a-theorem/57432582#57432582", "title": "Finding the computational interpretation of a theorem", "body": "<blockquote>\n  <p>I don't think that either (1) or (2) are correct since in Haskell, all functions are considered curried.</p>\n</blockquote>\n\n<p>Here you\u2019re slightly mistaken: all functions <em>written as if they had multiple arguments</em> are implicitly curried, so some function like:</p>\n\n<pre><code>f c n = ord c + n\n\n-- desugared:\n\nf = \\ c n -&gt; ord c + n\n\nf = \\ c -&gt; \\ n -&gt; ord c + n\n</code></pre>\n\n<p>Has a curried type like <code>Char -&gt; Int -&gt; Int</code> (with a chain of unary functions) rather than an uncurried type <code>(Char, Int) -&gt; Int</code> (a function of multiple arguments, represented in Haskell using a tuple because it has no native notion of multi-argument functions).</p>\n\n<p>(1) is correct because (A\u2192(B\u2192C))\u2192((A\u2227B)\u2192C) is <code>(a -&gt; (b -&gt; c)) -&gt; ((a, b) -&gt; c)</code> in Haskell types, and we can implement this by iteratively filling in holes.</p>\n\n<pre><code>f = _ :: (a -&gt; (b -&gt; c)) -&gt; ((a, b) -&gt; c)\n\n-- omitting redundant parentheses:\n\nf = _ :: (a -&gt; b -&gt; c) -&gt; (a, b) -&gt; c\n</code></pre>\n\n<p><code>f</code> must have a function type:</p>\n\n<pre><code>f = \\ g -&gt; _ :: ((a, b) -&gt; c)\n</code></pre>\n\n<p>The result of <code>f</code> must also be a function, which accepts a tuple:</p>\n\n<pre><code>f = \\ g -&gt; \\ (x, y) -&gt; _ :: c\n</code></pre>\n\n<blockquote>\n  <p>Is it possible to have a curried function where you take the first two parameters A and B and then somehow convert them into a tuple and then return a value C?</p>\n</blockquote>\n\n<p>Sort of, but here I think is where you\u2019ve gotten mixed up\u2014at this point the result of the function returned by <code>f</code> must be of type <code>c</code>, and the <em>only</em> way we can obtain a <code>c</code> is by applying <code>g :: a -&gt; b -&gt; c</code> to <code>x :: a</code> and <code>y :: b</code>. This is because <code>a</code>, <code>b</code>, and <code>c</code> are polymorphic type variables: the caller specifies them, and we know <em>nothing</em> about them within <code>f</code>.</p>\n\n<pre><code>f = \\ g -&gt; \\ (x, y) -&gt; g x y\n\n-- with some syntactic sugar:\n\nf g = \\ (x, y) -&gt; g x y\n\nf g (x, y) = g x y\n\n-- example usage:\n\n&gt; f (+) (1, 2)\n3\n</code></pre>\n\n<p>So <code>f</code> is exactly <code>uncurry</code>, which transforms a curried function to an uncurried one.</p>\n"}, {"comments": [{"owner": {"reputation": 1588, "user_id": 1899494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8bff769c85b3fc72eec038070928ff?s=128&d=identicon&r=PG", "display_name": "hugo", "link": "https://stackoverflow.com/users/1899494/hugo"}, "edited": false, "score": 1, "creation_date": 1565370847, "post_id": 57432619, "comment_id": 101346886, "body": "For information, this function exists as <a href=\"https://hoogle.haskell.org/?hoogle=uncurry\" rel=\"nofollow noreferrer\"><code>uncurry :: (a -&gt; b -&gt; c) -&gt; (a, b) -&gt; c</code></a>"}], "tags": [], "owner": {"reputation": 91978, "user_id": 387076, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/cFyP6.jpg?s=128&g=1", "display_name": "Gilles &#39;SO- stop being evil&#39;", "link": "https://stackoverflow.com/users/387076/gilles-so-stop-being-evil"}, "is_accepted": false, "score": 9, "last_activity_date": 1565362483, "creation_date": 1565362483, "answer_id": 57432619, "question_id": 57431491, "link": "https://stackoverflow.com/questions/57431491/finding-the-computational-interpretation-of-a-theorem/57432619#57432619", "title": "Finding the computational interpretation of a theorem", "body": "<blockquote>\n  <p>(A\u2227B) is the tuple (A,B) when converted to a type</p>\n</blockquote>\n\n<p>This is correct. But that doesn't make (A\u2192(B\u2192C))\u2192((A\u2227B)\u2192C) a \u201cfunction that creates a tuple of the two given A values and B values\u201d. Such a function would be A\u2192B\u2192(A\u2227B).</p>\n\n<blockquote>\n  <p>in Haskell, all functions are considered curried</p>\n</blockquote>\n\n<p>No, that's not quite right. The language itself doesn't define how functions with multiple arguments are expressed. It doesn't have a concept of multiple-argument functions. It's a matter of convention whether to choose to express multiple-argument functions by passing one argument at a time (curried) or by passing tuples (uncurried). These conventions have serious implications on library and compiler design, but from the perspective of the language itself, the choice of currying or not is indifferent.</p>\n\n<p>The computational interpretation of A\u2192(B\u2192C) is a function that takes one argument and returns a function that takes a second argument, i.e. that takes two arguments in curried form. The computational interpretation of (A\u2227B)\u2192C is a function that takes one argument which is a pair, i.e. that takes two arguments in uncurried form. Therefore the computational interpretation of (A\u2192(B\u2192C))\u2192((A\u2227B)\u2192C) is a function that transforms a function in curried from into a function in uncurried form.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1565407059, "creation_date": 1565358501, "last_edit_date": 1565373274, "question_id": 57431491, "link": "https://stackoverflow.com/questions/57431491/finding-the-computational-interpretation-of-a-theorem", "title": "Finding the computational interpretation of a theorem", "body": "<p>I have the following theorem: (A\u2192(B\u2192C))\u2192((A\u2227B)\u2192C), and I am trying to determine what its computational interpretation is. I have the following options:</p>\n\n<p>(1) The function that transforms a curried function to an uncurried one.</p>\n\n<p>(2) The function that transforms an uncurried function to a curried one.</p>\n\n<p>(3) The function that creates a tuple of the two given A values and B values.</p>\n\n<p>(4) There is no computational interpretation of this logical formula.</p>\n\n<p>I don't think that either (1) or (2) are correct since in Haskell, all functions are considered curried. I am thinking that option (3) is correct since (A\u2227B) is the tuple (A,B) when converted to a type. However, I am not sure whether my reasoning is correct. Is it possible to have a curried function where you take the first two parameters A and B and then somehow convert them into a tuple and then return a value C? Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "functional-programming", "function-composition"], "answers": [{"tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": false, "score": 2, "last_activity_date": 1565360909, "creation_date": 1565360909, "answer_id": 57432165, "question_id": 57431487, "link": "https://stackoverflow.com/questions/57431487/why-function-composition-sometimes-requires-two-s-to-combine-two-functions/57432165#57432165", "title": "Why function composition sometimes requires two &quot;.&quot; &#39;s to combine two functions", "body": "<p>The type of composition operator <code>(.)</code> is <code>(a-&gt;b) -&gt; (b-&gt;c) -&gt; (a-&gt;c)</code>, which means that it takes 2 unary functions and forwards former's output to the latter.</p>\n\n<p>In case of <code>concat . map</code>, the <code>map</code> function is binary. Its type <code>(a-&gt;b) -&gt; [a] -&gt; [b]</code> doesn't fit into <code>(b-&gt;c)</code> part of <code>(.)</code> type.</p>\n\n<p>Well, it actually does: <code>(a-&gt;b)</code> argument of <code>map</code> goes into <code>b</code> of <code>(b-&gt;c)</code> and <code>[a] -&gt; [b]</code> \"leftover\" goes into <code>c</code>, but that causes type checker to think that you actually have a list of functions and want to operate on it. This is actually possible, but there is a type problem unrelated to your initial question and it is clearly not what you wanted to do.</p>\n\n<p>Your code can be rewritten this way:</p>\n\n<pre><code>myConcatMap f = concat . map f\n</code></pre>\n\n<p>Now we've plumbed <code>(a-&gt;b)</code> argument with <code>f</code>, it became an unary function, which composes well.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 5, "last_activity_date": 1565361013, "creation_date": 1565361013, "answer_id": 57432204, "question_id": 57431487, "link": "https://stackoverflow.com/questions/57431487/why-function-composition-sometimes-requires-two-s-to-combine-two-functions/57432204#57432204", "title": "Why function composition sometimes requires two &quot;.&quot; &#39;s to combine two functions", "body": "<p>It's because <code>map</code> is a two-argument function, and you want to apply <code>concat</code> only after both arguments have been supplied. Keep in mind that Haskell multi-argument functions are curried, i.e. it's actually</p>\n\n<pre><code>map :: (a-&gt;b) -&gt; ([a]-&gt;[b])\n</code></pre>\n\n<p>Thus, if you write a composition <code>c . map</code>, the argument of <code>c</code> must be something of type <code>[a]-&gt;[b]</code>. But the argument of <code>concat</code> is supposed to be a list, i.e. something of type <code>[b]</code> or actually <code>[[e]]</code>.</p>\n\n<p>Solutions:</p>\n\n<ul>\n<li><p>Pass the first argument explicitly.</p>\n\n<pre><code>myConcatMap f = concat . map f\n</code></pre>\n\n<p>This works because <code>map f</code> is only a one-argument function anymore <code>[a] -&gt; [b]</code>, thus you can compose <code>concat</code> in front of it.</p></li>\n<li><p>Compose <code>concat</code> in front of the function <em>that's the result of applying <code>map</code> to its first argument</em>. That's what you're doing in your example.</p></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "is_accepted": false, "score": 1, "last_activity_date": 1565361648, "creation_date": 1565361648, "answer_id": 57432375, "question_id": 57431487, "link": "https://stackoverflow.com/questions/57431487/why-function-composition-sometimes-requires-two-s-to-combine-two-functions/57432375#57432375", "title": "Why function composition sometimes requires two &quot;.&quot; &#39;s to combine two functions", "body": "<p>Let's look at some type signatures.</p>\n\n<pre><code>concat :: Foldable t =&gt; t [a] -&gt; [a]\nmap :: (a -&gt; b) -&gt; [a] -&gt; [b]\n(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>Now, does <code>concat . map</code> make sense? For simplicity, let's assume that <code>Foldable</code> member is just lists.</p>\n\n<p>The first argument to <code>(.)</code> is <code>concat</code>, of type <code>[[d]] -&gt; [d]</code> (to avoid name collisions). Substituting that for <code>(b -&gt; c)</code> gives us:</p>\n\n<pre><code>(.) concat :: (a -&gt; [[d]]) -&gt; a -&gt; [d]\n</code></pre>\n\n<p>Try applying that to <code>map</code>. Applied to a single argument, <code>map</code> gives you a function; this does not match the <code>[[d]]</code> that <code>(.) concat</code> expects of its first argument. We've got ourselves an issue.</p>\n\n<p>But what if you supply <code>map</code> with a single argument first? <code>map g</code> has signature <code>[e] -&gt; [f]</code>, so we end up with this type signature:</p>\n\n<pre><code>(.) concat (map g) :: [e] -&gt; f\n</code></pre>\n\n<p>That typechecks, so we've got something meaningful here! If you'll notice, we're first applying <code>map</code> to <code>g</code>, then applying <code>(.) concat</code> (equivalently <code>(concat .)</code>) to that result, so that function can be rewritten like so:</p>\n\n<pre><code>(concat .) . map $ g\n</code></pre>\n\n<p>This form allows us to get rid of the <code>g</code> entirely and put your function <code>myConcatMap</code> into pointfree form:</p>\n\n<pre><code>myConcatMap = (concat .) . map\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 13, "last_activity_date": 1565382027, "last_edit_date": 1565382027, "creation_date": 1565362546, "answer_id": 57432636, "question_id": 57431487, "link": "https://stackoverflow.com/questions/57431487/why-function-composition-sometimes-requires-two-s-to-combine-two-functions/57432636#57432636", "title": "Why function composition sometimes requires two &quot;.&quot; &#39;s to combine two functions", "body": "<p>This is fairly easy to derive from the definition of <code>(.)</code> and knowledge of Haskell syntax.</p>\n\n<p>You start with a more explicit definition of <code>myConcatMap</code>, which is</p>\n\n<pre><code>\\f -&gt; \\xs -&gt; concat (map f xs)\n</code></pre>\n\n<p>By definition of the composition operator, you can write this as</p>\n\n<pre><code>\\f -&gt; concat . (map f)\n</code></pre>\n\n<p>Rewrite this using <code>.</code> in prefix position rather than as an infix operator.</p>\n\n<pre><code>\\f -&gt; (.) concat (map f)\n</code></pre>\n\n<p>and add some redundant parentheses since function application is left-associative.</p>\n\n<pre><code>\\f -&gt; ((.) concat) (map f)\n</code></pre>\n\n<p>Rewrite this using section syntax to make <code>.</code> an infix operator again</p>\n\n<pre><code>\\f -&gt; (concat .) (map f)\n</code></pre>\n\n<p>and apply the definition of <code>(.)</code> one more time, using the functions <code>(concat .)</code> and <code>map</code>:</p>\n\n<pre><code>(concat .) . map\n</code></pre>\n"}], "owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 1, "accepted_answer_id": 57432636, "answer_count": 4, "score": 5, "last_activity_date": 1565382027, "creation_date": 1565358492, "question_id": 57431487, "link": "https://stackoverflow.com/questions/57431487/why-function-composition-sometimes-requires-two-s-to-combine-two-functions", "title": "Why function composition sometimes requires two &quot;.&quot; &#39;s to combine two functions", "body": "<p>So this question is simple but I can't seem to grasp the concept.</p>\n\n<p>To compose ordinary functions, one can just do something like below:</p>\n\n<pre><code>lowerNoSpaces = filter (/= ' ') . map toLower\n</code></pre>\n\n<p>But, on occasion, there are times where this won't work:</p>\n\n<pre><code>myConcatMap = concat . map\n</code></pre>\n\n<p>It gives the error:</p>\n\n<pre><code>&lt;interactive&gt;:236:1: error:\n    * Non type-variable argument\n        in the constraint: Foldable ((-&gt;) [a1])\n      (Use FlexibleContexts to permit this)\n    * When checking the inferred type\n        concattMap :: forall a1 a2.\n                      Foldable ((-&gt;) [a1]) =&gt;\n                      (a1 -&gt; a2) -&gt; [a2]\n</code></pre>\n\n<p>But when the same function is expressed like this:</p>\n\n<pre><code>myConcatMap = (concat .) . map\n</code></pre>\n\n<p>It works exactly as intended.</p>\n\n<p>I know there is a reason for this, but I have been staring at it for a while and still don't quite understand why the original doesn't work and this one does.</p>\n\n<p>Why is there two \".\" 's?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1565357011, "post_id": 57430816, "comment_id": 101340019, "body": "Both (1) and (2) have the same types, so any reasoning which goes <i>only</i> by types and does not consider the actual proof-term given cannot possibly distinguish between the two. So... no, your reasoning is not correct."}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1565357296, "post_id": 57430816, "comment_id": 101340198, "body": "What is the difference between these two options, if any?"}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1565368363, "post_id": 57431281, "comment_id": 101345959, "body": "&quot;it seems that this particular proof syntax doesn&#39;t indicate which variable should be used&quot; -- I think &quot;delta&quot; is the name of the variable, and not the name of the rule. -&gt;I^delta corresponds to <code>\\delta -&gt; _</code>, and the <code>delta</code> rule for that variable <code>delta</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1565370181, "post_id": 57431281, "comment_id": 101346668, "body": "@chi Ah, that could be! I have optimistically updated the answer under that assumption, as it seems like a particularly clean and likely one to make."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565372734, "post_id": 57431281, "comment_id": 101347587, "body": "I think <code>((\\ b a -&gt; (b,a)) b a)</code> ought to be written explicitly, to correspond to the right sub-proof, constructing the <code>(b,a)</code> from the given <code>a</code> and <code>b</code>, as expected by the left sub-proof."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1565376763, "post_id": 57431281, "comment_id": 101349149, "body": "@WillNess There is no \u2192-E in the right sub-proof, hence no function application. (In this context, <code>(,)</code> is not a function, but a piece of syntax.) So it certainly shouldn&#39;t be <code>f b a</code> for any function <code>f</code>, including <code>f = \\b a -&gt; (b,a)</code>. I don&#39;t know what the &quot;as expected by the left sub-proof&quot; subcomment means at all."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565387894, "post_id": 57431281, "comment_id": 101352568, "body": "OK, so maybe the <code>(b,a)</code> could be written as <code>((,) b a)</code> there to stress the fact that we start from A and B, not from B/\\A. &quot;as expected by&quot; I don&#39;t understand what&#39;s unclear. <code>(\\(b,a) -&gt; ...)</code> needs a <code>(b,a)</code> term to be applied to. the function expects that term as its argument in the application. if we&#39;d be given only A as a premise, we&#39;d not be able to construct the <code>(b,a)</code> term there, that&#39;s all."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565394447, "post_id": 57431281, "comment_id": 101353737, "body": "@WillNess Okay. I don&#39;t see that <code>(,) b a</code> is any more clear than <code>(b,a)</code> -- just different spellings of the same thing. So I will keep the more common choice of <code>(b,a)</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565394814, "post_id": 57431281, "comment_id": 101353794, "body": "@WillNess As for &quot;<code>(\\(b,a) -&gt; ...)</code> needs a <code>(b,a)</code> term to be applied to&quot;, I don&#39;t admit this fact, and also <code>(\\(b,a) -&gt; ...)</code> does not appear in the answer. So I still don&#39;t understand your &quot;as expected by the left sub-proof&quot;."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565422891, "post_id": 57431281, "comment_id": 101357210, "body": "Well, I think I explained what I meant. I do think <code>(b,a)</code> ought to appear as the parameter there instead of <code>delta</code>. that doesn&#39;t mean it is right, I could very well have been mistaken there, but I think it explains my meaning. I really can&#39;t see what more can I add here."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565424919, "post_id": 57431281, "comment_id": 101357611, "body": "yep, <code>(\\(b,a) -&gt; ...)</code> looks to have been wrong, as typed lambda calculus seems to not have pattern matching..."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1565370319, "last_edit_date": 1565370319, "creation_date": 1565357808, "answer_id": 57431281, "question_id": 57430816, "link": "https://stackoverflow.com/questions/57430816/finding-equivalent-program-to-proof-in-typed-lambda-calculus/57431281#57431281", "title": "Finding equivalent program to proof in typed lambda calculus", "body": "<p>Here is the correct line of reasoning. We will start with a \"hole\", and slowly expand the hole following the next proof rule. I'll follow your lead and assume there are two terms in scope, named <code>a</code> (of type <code>A</code>) and <code>b</code> (of type <code>B</code>). We start with just a hole:</p>\n\n<pre><code>_\n</code></pre>\n\n<p>The last proof rule used is \u2192-E (arrow elimination); in the lambda calculus, this corresponds to function application.</p>\n\n<pre><code>_ _\n</code></pre>\n\n<p>Since the proof term for the second hole is smaller, let's start with that one. That rule is \u2227-I (conjunction introduction); the corresponding lambda term is <code>(,)</code>.</p>\n\n<pre><code>_ (_, _)\n</code></pre>\n\n<p>The assumptions used by the conjunction introduction are <code>B</code> and <code>A</code>; our corresponding lambda terms are <code>b</code> and <code>a</code>. So:</p>\n\n<pre><code>_ (b, a)\n</code></pre>\n\n<p>This concludes this branch of the proof term. Now we must ascend the left branch. The rule used to supply the function is \u2192-I<sup>\u03b4</sup> (arrow introduction using variable \u03b4); in lambda calculus, the corresponding term is a lambda.</p>\n\n<pre><code>(\\\u03b4 -&gt; _) (b, a)\n</code></pre>\n\n<p>Next up is a conjunction introduction. As before, the corresponding term is <code>(,)</code>.</p>\n\n<pre><code>(\\\u03b4 -&gt; (_, _)) (b, a)\n</code></pre>\n\n<p>Here the proof branches. For consistency with our previous go, we'll follow the right branch first, then the left branch. The next rule up in the right branch is \u2227-E<sub>1</sub> (conjunction elimination 1); the corresponding term in lambda calculus is <code>fst</code>.</p>\n\n<pre><code>(\\\u03b4 -&gt; (_, fst _)) (b, a)\n</code></pre>\n\n<p>The last rule in this branch is \u03b4 (variable elimination of variable \u03b4);  the corresponding lambda calculus term is <code>\u03b4</code>.</p>\n\n<pre><code>(\\\u03b4 -&gt; (_, fst \u03b4)) (b, a)\n</code></pre>\n\n<p>Now following the left branch of the proof, the next rule used is \u2227-E<sub>2</sub> (conjunction elimination 2) -- <code>snd</code> in the lambda calculus.</p>\n\n<pre><code>(\\\u03b4 -&gt; (snd _, fst \u03b4)) (b, a)\n</code></pre>\n\n<p>The final rule used is again variable elimination (again with variable <code>\u03b4</code>).</p>\n\n<pre><code>(\\\u03b4 -&gt; (snd \u03b4, fst \u03b4)) (b, a)\n</code></pre>\n\n<p>We have now reached the top of every branch of the proof term (and filled all the holes), so we are done building our lambda calculus term. Looks like it corresponds with your (1)! Can you see how the proof term would have to change to correspond with your (2)?</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 2, "accepted_answer_id": 57431281, "answer_count": 1, "score": 5, "last_activity_date": 1565390529, "creation_date": 1565356340, "question_id": 57430816, "link": "https://stackoverflow.com/questions/57430816/finding-equivalent-program-to-proof-in-typed-lambda-calculus", "title": "Finding equivalent program to proof in typed lambda calculus", "body": "<p>I have the following proof that assuming A and B, one can derive A \u2227 B:</p>\n\n<p><a href=\"https://i.stack.imgur.com/2yTDp.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/2yTDp.png\" alt=\"enter image description here\"></a></p>\n\n<p>I am trying to find an equivalent program to this proof, in typed lambda calculus using Haskell-style syntax for pairs. It is assumed that a : A and b : B.</p>\n\n<p>Translating this proof to types, one gets: assuming x :: (B,A) one wants to construct (A,B).</p>\n\n<p>I am stuck between two options for this:</p>\n\n<p>(1) (\u03bbx. (\ud835\uddcc\ud835\uddc7\ud835\uddbd x,\ud835\uddbf\ud835\uddcc\ud835\uddcd x)) (b,a)</p>\n\n<p>(2) (\ud835\uddcc\ud835\uddc7\ud835\uddbd (b,a),\ud835\uddbf\ud835\uddcc\ud835\uddcd (b,a))</p>\n\n<p>I believe that it is option (2) that is correct, since it is not an implication (which translates to a function) that is being proved. However I am not sure if my reasoning is correct. Since we are considering this proof in terms of types, where x :: (B,A) is option (1) more appropriate? Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 765, "user_id": 3316409, "user_type": "registered", "profile_image": "https://graph.facebook.com/719585406/picture?type=large", "display_name": "dvaergiller", "link": "https://stackoverflow.com/users/3316409/dvaergiller"}, "edited": false, "score": 1, "creation_date": 1565347176, "post_id": 57428251, "comment_id": 101334582, "body": "One way to do it, which might not be what you are looking for but it&#39;s what I would do, is to give an example of a function that satisfies it. I have a feeling in this case that only one such function exists (which might of course be written in a couple of different ways but probably only one behaviour would satisfy it). Is this a school assignment?"}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "reply_to_user": {"reputation": 765, "user_id": 3316409, "user_type": "registered", "profile_image": "https://graph.facebook.com/719585406/picture?type=large", "display_name": "dvaergiller", "link": "https://stackoverflow.com/users/3316409/dvaergiller"}, "edited": false, "score": 0, "creation_date": 1565347237, "post_id": 57428251, "comment_id": 101334608, "body": "No, it&#39;s just a homework question. But I am not exactly sure how to do it, so I am looking for some guidance."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1565347268, "post_id": 57428251, "comment_id": 101334621, "body": "This is a function that takes a continuation and then ignores it by just returning the initial value the continuation closed over."}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565347315, "post_id": 57428251, "comment_id": 101334639, "body": "What exactly do you mean by &#39;continuation&#39;?"}, {"owner": {"reputation": 765, "user_id": 3316409, "user_type": "registered", "profile_image": "https://graph.facebook.com/719585406/picture?type=large", "display_name": "dvaergiller", "link": "https://stackoverflow.com/users/3316409/dvaergiller"}, "edited": false, "score": 1, "creation_date": 1565347444, "post_id": 57428251, "comment_id": 101334707, "body": "Actually I&#39;m starting to believe that there is no total, terminating function for this type signature. But I don&#39;t know how I would prove it except with some informal rambling. If I give you my informal rambling I might ruin your assignment"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565347922, "post_id": 57428251, "comment_id": 101334948, "body": "@ceno980 a continuation is something of a type of the form <code>(A -&gt; c) -&gt; c</code>, which (excercise for you!) is generally equivalent to simply <code>A</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1565348367, "post_id": 57428251, "comment_id": 101335181, "body": "...however, it&#39;s actually only equivalent if the type <code>c</code> is unconstrained-polymorphic, which is not actually the case for the argument here \u2013 it would be if the type were <code>(\u2200 c . (a -&gt; c) -&gt; c) -&gt; a</code>, which is different from the one you gave (and <i>has</i> a possible implementation)."}], "answers": [{"comments": [{"owner": {"reputation": 765, "user_id": 3316409, "user_type": "registered", "profile_image": "https://graph.facebook.com/719585406/picture?type=large", "display_name": "dvaergiller", "link": "https://stackoverflow.com/users/3316409/dvaergiller"}, "edited": false, "score": 0, "creation_date": 1565348217, "post_id": 57428518, "comment_id": 101335097, "body": "Could you expand on how you could give an argument for the function if (a :: Void)? (did I understand correctly that this is what you mean you would do?)"}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565348313, "post_id": 57428518, "comment_id": 101335149, "body": "Since you said that this function cannot be implemented, is another way of determining this just looking at the type itself? Since the input of the function is ((a -&gt; c) -&gt; c) and the function is supposed to return &#39;a&#39;, it seems that there is no way for the function to be total since the input parameter is a function that will always return a &#39;c&#39;? Is this a correct way of looking at the problem?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 765, "user_id": 3316409, "user_type": "registered", "profile_image": "https://graph.facebook.com/719585406/picture?type=large", "display_name": "dvaergiller", "link": "https://stackoverflow.com/users/3316409/dvaergiller"}, "edited": false, "score": 1, "creation_date": 1565348409, "post_id": 57428518, "comment_id": 101335198, "body": "@dvaergiller I won&#39;t show this here because it&#39;s homework, the OP should do it."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565348454, "post_id": 57428518, "comment_id": 101335214, "body": "@ceno980 maybe you&#39;re thinking the correct thing, but this is not an explanation I would accept for a homework assignment."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 5, "last_activity_date": 1565348570, "last_edit_date": 1565348570, "creation_date": 1565347821, "answer_id": 57428518, "question_id": 57428251, "link": "https://stackoverflow.com/questions/57428251/determining-a-total-terminating-function/57428518#57428518", "title": "Determining a total, terminating function", "body": "<blockquote>\n  <p>For a function to be terminating, does it have to return a value (and not go into an infinite loop for example)?</p>\n</blockquote>\n\n<p>Yes, that's what it means. Specifically, it means that you shouldn't cheat by giving a definition like</p>\n\n<pre><code>uncont :: ((a -&gt; c) -&gt; c) -&gt; a\nuncont f = uncont f\n</code></pre>\n\n<p>...or <code>uncont = uncont</code>, or <code>uncont = undefined</code>, all of which would mean you're generating a <em>bottom value</em> that can't actually be evaluated to a meaningful result.</p>\n\n<hr>\n\n<p>Generally, to prove that a function of some type can be implemented... just implement it! ...If you can, that is, which ... (<em>spoiler alert</em>) you can't in this case! To prove <em>that</em>, you need to find a particular type-instantiation for which you could generate an impossible result by calling the function. Such results can usually be found by instantiating the result-type-variable with <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Void.html#t:Void\" rel=\"noreferrer\">the <code>Void</code> type</a>, and then demonstrating that you can still produce an <em>argument</em> for the function, which leads to a contradiction because the function (by assumption that it's total and terminates) would produce a value of type <code>Void</code>, which cannot be possible.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1565348570, "creation_date": 1565346812, "question_id": 57428251, "link": "https://stackoverflow.com/questions/57428251/determining-a-total-terminating-function", "title": "Determining a total, terminating function", "body": "<p>I am trying to determine whether for the following type: <code>((a -&gt; c) -&gt; c) -&gt; a</code> a total, terminating function can be written using that type as a function signature? I understand that in order for a function to be total it has to be defined for all possible values of its input. However, I am not sure what exactly does it means for a function to be terminating. For a function to be terminating, does it have to return a value (and not go into an infinite loop for example)?</p>\n\n<p>Further, what methods can I use to prove that a total, terminating function can be written using <code>((a -&gt; c) -&gt; c) -&gt; a</code>? Any insights are appreciated.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1565335288, "post_id": 57425208, "comment_id": 101328774, "body": "No need to definee this: Haskell&#39;s list <i>is</i> a linked list."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565335326, "post_id": 57425208, "comment_id": 101328793, "body": "<code>max</code> already exists: that is <code>maximum</code>. Hint: something is missing in your type signature."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565335327, "post_id": 57425208, "comment_id": 101328794, "body": "You&#39;re right but marking system ask that type"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565335372, "post_id": 57425208, "comment_id": 101328818, "body": "So, I must include first 5-line on the code."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565335540, "post_id": 57425208, "comment_id": 101328900, "body": "what functionality will you need to calculate the maximum of two objects?"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565335617, "post_id": 57425208, "comment_id": 101328934, "body": "Anything if that is basic function. And it should be named max"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565335704, "post_id": 57425208, "comment_id": 101328973, "body": "but now your signature does not make much sense: <code>List</code> is <i>not</i> a typeclass, and furthermore the output is not per se an <code>Int</code>, but an <code>a</code>."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565335742, "post_id": 57425208, "comment_id": 101328993, "body": "Right. I can fix rest of other code except first 5-line. The last 4-line was my attempt."}], "answers": [{"comments": [{"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565336345, "post_id": 57425448, "comment_id": 101329272, "body": "What do you mean by two &quot;\u2026&quot; after &#39;=&#39; sign?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565336368, "post_id": 57425448, "comment_id": 101329279, "body": "@Hume: that is the part you need to fill in yourself :)"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565336568, "post_id": 57425448, "comment_id": 101329365, "body": "Ok! what if the input is character? Do I have to change &quot;Ord a =&quot; part?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565336675, "post_id": 57425448, "comment_id": 101329420, "body": "@Hume: no, that is the entire point of using the <code>Ord a</code> typeclass here: that for everything that is inherently ordered, you can use <code>max</code> to obtain the largest of the two. So if you define your <code>maximum&#39;</code> function in terms of <code>max</code>, then that should work."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565356948, "post_id": 57425448, "comment_id": 101339976, "body": "I tried to solve it but not working. &quot;max ListNode x&quot;, &quot;max ListNode xs&quot;. What&#39;s the problem with this code. Looking for max value in the List."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565357033, "post_id": 57425448, "comment_id": 101340029, "body": "@Hume: what is <code>max ListNode xs</code> supposed to do?"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565357160, "post_id": 57425448, "comment_id": 101340111, "body": "Checking next value in the list. Like x:xs"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565357292, "post_id": 57425448, "comment_id": 101340192, "body": "@Hume: but in the above code fragment, the last clause has an <code>x</code> and <code>xs</code>: <code>x</code> is the first item, <code>xs</code> is a <code>List a</code> object, similar to <code>(x:xs)</code>."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565357452, "post_id": 57425448, "comment_id": 101340301, "body": "yeah. So, if x is not the maximum value, we should check next value (xs). This is my understanding but maybe something wrong."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565357502, "post_id": 57425448, "comment_id": 101340317, "body": "@Hume: <code>xs</code> is not the next value, <code>xs</code> is the <code>List a</code> of the remaining elements. Think of a recursive function to calculate the maximum."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565357812, "post_id": 57425448, "comment_id": 101340524, "body": "&quot;maximum (ListNode x xs)     | x &gt; maxxs = x     | otherwise = maxxs     where maxx = maximum xs&quot;        how about this?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565357886, "post_id": 57425448, "comment_id": 101340567, "body": "@Hume: yes that indeed looks correct. Now we only need to implement the base case: the <code>ListNode x ListEnd = ...</code>."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565357969, "post_id": 57425448, "comment_id": 101340615, "body": "If there is only one element, we can take that value, so I guess &quot;mymaximum (ListNode x ListEnd) = x&quot; is enough"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 1, "creation_date": 1565358057, "post_id": 57425448, "comment_id": 101340676, "body": "Works so well! Thanks you&#39;re legend."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1565336136, "creation_date": 1565336136, "answer_id": 57425448, "question_id": 57425208, "link": "https://stackoverflow.com/questions/57425208/how-to-define-linked-list-on-haskell/57425448#57425448", "title": "How to define Linked list on Haskell?", "body": "<p>First of all, I would suggest that you rename <code>max</code>, for example to <code>maximum'</code>, to avoid name clashes with <code>max</code> and <code>maximum</code>.</p>\n\n<p>The signature does not make much sense right now. Now your code suggest that <code>List</code> is a typeclass, but it is not, it is a type constructor. Furthermore the maximum is supposed to return an element of the list, so an <code>a</code>, not an <code>Int</code>. Finally you can not calculate the maximum of just any type, it needs to have an \"order relation\". So likely you here want to add a type constraint that <code>a</code> is a member of the <code>Ord</code> typeclass.</p>\n\n<p>The signature is thus:</p>\n\n<pre><code>maximum' :: Ord a =&gt; List a -&gt; a\n</code></pre>\n\n<p>Your list has two data constructors: <code>ListNode</code> and <code>ListEnd</code>, so you can not use <code>(:)</code> here, since that is a data constructor of the list type <code>[]</code>. A maximum over an empty list does not make much sense, so we can define two clauses here:</p>\n\n<pre><code>maximum' :: Ord a =&gt; List a -&gt; a\nmaximum' (ListNode x ListEnd) = ...\nmaximum' (ListNode x xs) = ...\n</code></pre>\n\n<p>I leave the rest as an exercise. It might help to take a look at the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:max\" rel=\"nofollow noreferrer\"><strong><code>max :: Ord a =&gt; a -&gt; a -&gt; a</code></strong></a>. This function calculates the maximum of two objects. You probably should use that in your <code>maximum'</code> definition.</p>\n"}], "owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "accepted_answer_id": 57425448, "answer_count": 1, "score": -1, "last_activity_date": 1565337046, "creation_date": 1565335208, "last_edit_date": 1565337046, "question_id": 57425208, "link": "https://stackoverflow.com/questions/57425208/how-to-define-linked-list-on-haskell", "title": "How to define Linked list on Haskell?", "body": "<p>I'm a new in Haskell.\nI made built-in list type on the code below. Using that type I want to make <code>max</code> function. It will work with non-empty lists.</p>\n\n<pre><code>data List a = ListNode a (List a) | ListEnd\n\nmylength :: List a -&gt; Int\nmylength ListEnd         = 0\nmylength (ListNode x xs) = 1 + mylength xs\n\nmax :: List a =&gt; a -&gt; Int\nmax (x:xs)\n    | --\n    | --\n</code></pre>\n\n<p>The expected output is here.</p>\n\n<pre><code>Main&gt; max (ListNode 10 ListEnd)\n\n10\n\nMain&gt; max (ListNode 20 (ListNode 10 ListEnd))\n\n20\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565323551, "post_id": 57423338, "comment_id": 101325484, "body": "What would the input be for <code>freqs [-1, -1, -1, -2]</code>? Or <code>freqs [-1, 1000]</code>?"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565323612, "post_id": 57423338, "comment_id": 101325495, "body": "No negative number"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565323668, "post_id": 57423338, "comment_id": 101325498, "body": "Or [1,3]. -2 occurring once, -1 occurring 3 times."}, {"owner": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565323806, "post_id": 57423338, "comment_id": 101325512, "body": "But <code>[1,3]</code> could also mean <code>1</code> occurring once and <code>2</code> occurring 3 times, couldn&#39;t it? What I am saying is, storing the frequencies in an <code>[Int]</code> is not  a good idea. I suggest storing it in a <code>[(Int, Int)]</code> or a <code>Data.Map</code>."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565323986, "post_id": 57423338, "comment_id": 101325538, "body": "Then how could I get [2,1,1] from [[1,1], [2], [3]]?"}, {"owner": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565324099, "post_id": 57423338, "comment_id": 101325560, "body": "What I am saying is it is much more useful to get <code>[(1, 2), (2, 1), (3, 1)]</code> from <code>[3, 2, 1, 1]</code>. Is there any reason why you must use a more ambiguous format like <code>[2, 1, 1]</code>?"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565324202, "post_id": 57423338, "comment_id": 101325580, "body": "Coz marking system is asking it."}, {"owner": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565324332, "post_id": 57423338, "comment_id": 101325603, "body": "I see. Just for clarification, <code>freqs [1000]</code> produces a list with 999 <code>0</code>s followed by a <code>1</code>?"}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "reply_to_user": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "edited": false, "score": 0, "creation_date": 1565324478, "post_id": 57423338, "comment_id": 101325634, "body": "yes Main&gt; freqs [1000] produces [1] and freqs [999] produces [1] as well."}], "answers": [{"comments": [{"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565325617, "post_id": 57423485, "comment_id": 101325790, "body": "Thank you so much. It works so well. Could I ask what does &#39;$&#39; mean? Is it kind of parentheses?"}, {"owner": {"reputation": 1550, "user_id": 519380, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/X6q0h.jpg?s=128&g=1", "display_name": "David Costa", "link": "https://stackoverflow.com/users/519380/david-costa"}, "edited": false, "score": 0, "creation_date": 1565331659, "post_id": 57423485, "comment_id": 101327267, "body": "($) is the function application but it&#39;s right associative and has the lowest priority, on the other hand the function application with the space has the highest priority and it&#39;s left-associative. You can use it to get rid of some parentheses (<a href=\"http://learnyouahaskell.com/higher-order-functions#function-application\" rel=\"nofollow noreferrer\">learnyouahaskell.com/&hellip;</a>)"}], "tags": [], "owner": {"reputation": 142455, "user_id": 5133585, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/dfqcw.png?s=128&g=1", "display_name": "Sweeper", "link": "https://stackoverflow.com/users/5133585/sweeper"}, "is_accepted": true, "score": 2, "last_activity_date": 1565324711, "creation_date": 1565324711, "answer_id": 57423485, "question_id": 57423338, "link": "https://stackoverflow.com/questions/57423338/how-to-check-the-double-list-length/57423485#57423485", "title": "How to check the double list length?", "body": "<p>If I understood correctly, you can basically <code>map</code> the result you got from <code>group (sort xs)</code> with the <code>length</code> function, which gets the length of a list.</p>\n\n<pre><code>freqs xs = map length $ group $ sort xs\n</code></pre>\n"}], "owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 231, "favorite_count": 0, "accepted_answer_id": 57423485, "answer_count": 1, "score": -1, "last_activity_date": 1565324711, "creation_date": 1565323270, "last_edit_date": 1565324054, "question_id": 57423338, "link": "https://stackoverflow.com/questions/57423338/how-to-check-the-double-list-length", "title": "How to check the double list length?", "body": "<p>How to check the length of list of list?</p>\n\n<p>I'm trying to check the frequency of each numbers using group (sort xs) function.\nI think I can use map and length function but have no idea.</p>\n\n<pre><code>import Data.List\n\nfreqs :: [Int] -&gt; [[Int]]\nfreqs [] = []\nfreqs xs = group (sort xs)\n</code></pre>\n\n<p>The output of above code is</p>\n\n<p>Main> freqs [3,2,1,1]</p>\n\n<p>[[1,1],[2],[3]]</p>\n\n<p>But I want to get the frequency of each numbers.\nSo, the expected output is [2,1,1], 1 occurring twice, 2 occurring once, 3 occurring once.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 194, "user_id": 10322433, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ouTTb.png?s=128&g=1", "display_name": "blueheart", "link": "https://stackoverflow.com/users/10322433/blueheart"}, "edited": false, "score": 0, "creation_date": 1565322325, "post_id": 57423199, "comment_id": 101325325, "body": "your first zed is lowercase, is that the problem?"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1565326094, "post_id": 57423199, "comment_id": 101325871, "body": "Names of type constructors, data constructors, modules, and type classes must begin with an uppercase letter. Variable names (including type variables) must begin with a lowercase letter. This should be in any introductory text on Haskell."}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 3, "creation_date": 1565331846, "post_id": 57423199, "comment_id": 101327335, "body": "Are you sure you have <code>;</code> and not <code>:</code> there? the errors seem to indicate otherwise. assuming the existence of a type <code>Zed</code> the code you wrote(here) should work in GHCi"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1565367903, "post_id": 57423199, "comment_id": 101345816, "body": "Yes, in GHCi <code>Zed</code> should be defined before it is used. In .hs files it can be defined later on, but must be defined before the end of the file is reached."}, {"owner": {"reputation": 2564, "user_id": 4134881, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/797360342295a3f637a9c4d71d40d113?s=128&d=identicon&r=PG&f=1", "display_name": "evianpring", "link": "https://stackoverflow.com/users/4134881/evianpring"}, "reply_to_user": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1565503945, "post_id": 57423199, "comment_id": 101371139, "body": "@M.Aroosi do not assume <code>Zed</code> exists. It doesn&#39;t."}, {"owner": {"reputation": 2564, "user_id": 4134881, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/797360342295a3f637a9c4d71d40d113?s=128&d=identicon&r=PG&f=1", "display_name": "evianpring", "link": "https://stackoverflow.com/users/4134881/evianpring"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1565514706, "post_id": 57423199, "comment_id": 101372848, "body": "@n.m. I am following a textbook on Haskell, but I did not find a comprehensive table or something of this sort summarizing the style rules that are mandatory. Also did not find with a google search."}, {"owner": {"reputation": 2564, "user_id": 4134881, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/797360342295a3f637a9c4d71d40d113?s=128&d=identicon&r=PG&f=1", "display_name": "evianpring", "link": "https://stackoverflow.com/users/4134881/evianpring"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1565529171, "post_id": 57423199, "comment_id": 101375598, "body": "Ok, thanks @n.m., reason I said I didn&#39;t find it is I thought there were like a lotta rules, but I guess it&#39;s as simple as &quot; Variable identifiers start with a lowercase letter, constructor identifiers with an uppercase letter&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "edited": false, "score": 0, "creation_date": 1565385277, "post_id": 57423259, "comment_id": 101351849, "body": "GHCi hasn&#39;t required <code>:{ ... :}</code> for function signatures for a long time \u2013 try, e.g., <code>f :: a -&gt; a ; f = id</code>.  You can also use the up and down arrows (or \u2303P/\u2303N, and similar) to go back and forth between previously entered commands.  The question of upper-case letters isn&#39;t just stylistic, it&#39;s enforced by the language.  It is true that it&#39;s good to be working inside a file most of the time!  But the REPL is essential to experimentation and learning the language, IMHO."}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "edited": false, "score": 0, "creation_date": 1565395631, "post_id": 57423259, "comment_id": 101353951, "body": "@AntalSpector-Zabusky This year I did a small tour between various languages with REPLs. This even included common lisp / SLIME and it included Julia language - F Sharp and ocaml repls. And my take away from that tour is that indeed GHCI could use some love. Much love in fact. In Julia, for example you can simply enter multi line functions. And it has persistent command history. And if you go back in history, you get your WHOLE multilne function recalled and you can edit it in place. Line by line history like in haskell feels poor in contrast."}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "edited": false, "score": 0, "creation_date": 1565396240, "post_id": 57423259, "comment_id": 101354042, "body": "@AntalSpector-Zabusky And there are things like the conventions for indenting, which you CAN NOT learn in the GHCI alone (thanks to its line oriented limitations). And try to write a <code>do block</code> in one line... Actually I hardly ever use <code>do</code> notation even in files, because the indentation rules are cryptic and each time I try it is a waste of time."}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "edited": false, "score": 0, "creation_date": 1565396493, "post_id": 57423259, "comment_id": 101354069, "body": "@AntalSpector-Zabusky Last not least, if the down vote is about me pointing out that  GHCI is not perfect, please undo it. Try entering multiple pattern matched versions of a single function signature in 1 line, if you really want to convince me ;)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "edited": false, "score": 0, "creation_date": 1565490342, "post_id": 57423259, "comment_id": 101369827, "body": "@AntalSpector-Zabusky, you need those funny braces for multi-line input if you don&#39;t turn on the somewhat weird multi-line option."}, {"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "edited": false, "score": 0, "creation_date": 1565537588, "post_id": 57423259, "comment_id": 101377500, "body": "@BitTickler Sure, GHCi could use work \u2013 I don&#39;t disagree with that, for sure.  But your comment about how GHCi behaves wrt type signatures and <code>:{</code>/<code>:}</code> is just wrong.  (And the question of &quot;have to do it all over again&quot; is arguable.)  And moreover, this doesn&#39;t address the questioner&#39;s problem as a result, since the code they have in their question <i>works</i> given <code>data Zed</code>."}, {"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565537624, "post_id": 57423259, "comment_id": 101377511, "body": "@dfeuer Multi-line input, yes; type signatures, no.  Type signatures are fine with just a semicolon entered on one line with the definition."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "edited": false, "score": 0, "creation_date": 1565577836, "post_id": 57423259, "comment_id": 101384421, "body": "@AntalSpector-Zabusky, you can always use semicolons (and sometimes braces) to cut down to one line."}], "tags": [], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "is_accepted": false, "score": 0, "last_activity_date": 1565362345, "last_edit_date": 1565362345, "creation_date": 1565322594, "answer_id": 57423259, "question_id": 57423199, "link": "https://stackoverflow.com/questions/57423199/what-are-the-rules-regarding-naming-in-haskell/57423259#57423259", "title": "What are the rules regarding naming in Haskell?", "body": "<p>You are using the REPL (Ghci). If you try to use a type signature in the REPL, you need to use <code>:{ .....\\n ..... \\n ..... :}</code> kind of multiline input. Then you can do the type signature of the function along with implementation(s) of that type signature. Its not very practical - 1 typo and you have to do it all over again. (Julia language REPL does a much better job with that, btw.).</p>\n\n<p>And yes, there are style guides and types need to start with an uppercase. Usually the compiler warns/errors you.</p>\n\n<p>Since you seem to start out, I suggest you use a source file for your experiments because as soon as you end up with multiple line constructs, the REPL kind of sucks. And it is really easy to use a file for your code. See <code>:load :cd :reload</code> etc. for your GHCI commands which support you doing that.</p>\n"}, {"tags": [], "owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "is_accepted": true, "score": 2, "last_activity_date": 1565538136, "creation_date": 1565538136, "answer_id": 57451394, "question_id": 57423199, "link": "https://stackoverflow.com/questions/57423199/what-are-the-rules-regarding-naming-in-haskell/57451394#57451394", "title": "What are the rules regarding naming in Haskell?", "body": "<p>As was pointed out by <a href=\"https://stackoverflow.com/users/8491228/m-aroosi\">M. Aroosi</a> in <a href=\"https://stackoverflow.com/q/57423199/237428#comment101327335_57423199\">a comment</a>,  your errors don't match your example \u2013 you seem to have written <code>f :: zed -&gt; Zed : f = undefined</code> instead, with a <code>:</code> instead of a <code>;</code>.  If you use a <code>;</code> you will get one of two results.  If <code>Zed</code> is undefined, you'll get an error telling you so:</p>\n\n<pre><code>Prelude&gt; f :: zed -&gt; Zed ; f = undefined\n\n&lt;interactive&gt;:2:13: error:\n    Not in scope: type constructor or class \u2018Zed\u2019\n    Perhaps you meant type variable \u2018zed\u2019 (line 2)\n</code></pre>\n\n<p>If <code>Zed</code> is defined, everything will work:</p>\n\n<pre><code>Prelude&gt; data Zed = TheZed\nPrelude&gt; f :: zed -&gt; Zed ; f = undefined\nPrelude&gt; \n</code></pre>\n\n<p>The general rule for Haskell names is:</p>\n\n<ul>\n<li>At the type level:\n\n<ul>\n<li>Type names start with an uppercase letter.</li>\n<li>Type variables start with a lowercase letter.</li>\n</ul></li>\n<li>At the term level:\n\n<ul>\n<li>Constructor names start with an uppercase letter if they're ordinary names.</li>\n<li>Constructor infix operators start with a <code>:</code>.</li>\n<li>Variable names start with a lowercase letter if they're ordinary names.</li>\n<li>Variable infix operators start with anything but a <code>:</code>.</li>\n</ul></li>\n</ul>\n\n<p>There are some further wrinkles (e.g., you can't use <code>,</code> in names; you can't have a name that's only <code>-</code>s and 2 or more character long), but that covers 95% of it.</p>\n"}], "owner": {"reputation": 2564, "user_id": 4134881, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/797360342295a3f637a9c4d71d40d113?s=128&d=identicon&r=PG&f=1", "display_name": "evianpring", "link": "https://stackoverflow.com/users/4134881/evianpring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 57451394, "answer_count": 2, "score": -1, "last_activity_date": 1565543903, "creation_date": 1565322036, "last_edit_date": 1565543903, "question_id": 57423199, "link": "https://stackoverflow.com/questions/57423199/what-are-the-rules-regarding-naming-in-haskell", "title": "What are the rules regarding naming in Haskell?", "body": "<p>Are there definite rules regarding naming of entities in Haskell? (by entities I mean functions, term level variables, data constructors, type variables, type constructors, typeclasses, modules; not sure if I left something out here) For example</p>\n\n<pre><code>&lt;interactive&gt;:1:13: error:\n    Not in scope: type constructor or class \u2018Zed\u2019\n    Perhaps you meant type variable \u2018zed\u2019 (line 1)\n</code></pre>\n\n<p>I know that in type signatures concrete types must be uppercase. So is it assuming that <code>Zed</code> is a concrete type, and because this type isn't defined (isn't in scope), we get an error?</p>\n\n<p>Are there any other actual rules on naming stuff in Haskell? </p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1565367712, "post_id": 57422565, "comment_id": 101345742, "body": "I&#39;m fairly sure that, when dealing with all the types GHC supports (including GADTs), determining if a given type is inhabited by some total term is undecidable, in general."}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 2, "last_activity_date": 1565320964, "last_edit_date": 1565320964, "creation_date": 1565315411, "answer_id": 57422594, "question_id": 57422565, "link": "https://stackoverflow.com/questions/57422565/how-to-determine-if-one-can-write-a-total-terminating-haskell-function-given-a/57422594#57422594", "title": "How to determine if one can write a total, terminating Haskell function given a type?", "body": "<p>A partial answer:</p>\n\n<p>For finite data types, such as <code>Int</code> you mention, or <code>Bool</code> (all the Bounded could be included I guess). Then yes, you can provide a complete function:</p>\n\n<p>if you have the time to cover all the cases for <code>Int</code>:</p>\n\n<pre><code>negative :: Int -&gt; Int\nnegative 0 = 0\nnegative 1 = -1\nnegative 2 = -2\nnegative 3 = -3\n...............\n...............\nnegative -1 = 1\nnegative -2 = 2\n...\n...\n...\n</code></pre>\n\n<p>until you cover all the cases... It's just an example.</p>\n\n<p>With <code>Bool</code> is a little more obvious you can:</p>\n\n<pre><code>negative :: Bool -&gt; Bool\nnegative False = True\nnegative True  = False\n</code></pre>\n\n<p>but, for functions, that takes functions, they are called <a href=\"http://%20https://en.wikipedia.org/wiki/Uncountable_set\" rel=\"nofollow noreferrer\">Uncontable set</a>, so you can provide all the posible combination of functions, so it will never ends, you will always find another \"level\" of function of functions, it's a \"bigger infinite\" than Nats set.</p>\n\n<p>The main question:</p>\n\n<blockquote>\n  <p>How to determine if one can write a total, terminating Haskell function given a type?</p>\n</blockquote>\n\n<p><code>(a -&gt; b) -&gt; (b -&gt; c) -&gt; (a -&gt; c)</code> and <code>(a -&gt; c) -&gt; ((a, b) -&gt; c)</code> <strong>maybe</strong> you can provide <strong>one</strong>. </p>\n\n<p>But what about:</p>\n\n<pre><code>(a -&gt; b -&gt; c -&gt; d -&gt; e) -&gt; (b -&gt; c) -&gt; (a -&gt; c) -&gt; (d -&gt; e)\n</code></pre>\n\n<p>I just can say for sure that you cannot guarantee that you will find at least one <strong>for all</strong> the combinations of all the types <strong>at least one</strong>. But how to is very well answered by @Jon Purdy </p>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 8, "last_activity_date": 1565320517, "creation_date": 1565320517, "answer_id": 57423048, "question_id": 57422565, "link": "https://stackoverflow.com/questions/57422565/how-to-determine-if-one-can-write-a-total-terminating-haskell-function-given-a/57423048#57423048", "title": "How to determine if one can write a total, terminating Haskell function given a type?", "body": "<p>Given:</p>\n\n<pre><code>(a -&gt; b) -&gt; (b -&gt; c) -&gt; (a -&gt; c)\n</code></pre>\n\n<p>We know that this is <em>not necessarily partial</em> by the Curry\u2013Howard correspondence\u2014interpreting <code>-&gt;</code> as logical implication, product types as AND, and sum types as OR\u2014we find it forms a tautology. But in order to find an implementation and know that it <em>is total</em>, we need to actually find the proof:</p>\n\n<pre><code>   (a \u2192 b) \u2192 (b \u2192 c) \u2192 a \u2192 c\n-- ~~~~~~~~~~~~~~~~~~~~~~~~~\n-- currying\n-- ~~~~~~~~~~~~~~~~~~~~~~~~~\n   (a \u2192 b) \u2227 (b \u2192 c) \u2192 a \u2192 c\n--           ~~~~~~~~~~~~~~~\n-- currying\n--           ~~~~~~~~~~~~~~~\n   (a \u2192 b) \u2227 (b \u2192 c) \u2227 a \u2192 c\n-- ~~~~~~~~~~~~~~~~~\n-- commutativity of AND\n-- ~~~~~~~~~~~~~~~~~\n   (b \u2192 c) \u2227 (a \u2192 b) \u2227 a \u2192 c\n--           ~~~~~~~~~~~\n-- modus ponens\n--           ~\n   (b \u2192 c) \u2227 b \u2192 c\n-- ~~~~~~~~~~~\n-- modus ponens\n-- ~\n   c \u2192 c\n-- ~~~~~\n-- reflexivity of implication\n-- ~\n   1\n</code></pre>\n\n<p>(This is a <em>hypothetical syllogism</em>.)</p>\n\n<p>We can use this proof to arrive at an implementation\u2014skipping the currying steps here, and with <em>modus ponens</em> corresponding to function application:</p>\n\n<pre><code>f ab bc a = bc (ab a)\n</code></pre>\n\n<p>The argument is similar for <code>(a -&gt; c) -&gt; ((a, b) -&gt; c)</code> interpreting <code>(a, b)</code> as <code>a \u2227 b</code> (logical AND).</p>\n"}], "owner": {"reputation": 53, "user_id": 10485405, "user_type": "registered", "profile_image": "https://graph.facebook.com/884977638557039/picture?type=large", "display_name": "Alexander", "link": "https://stackoverflow.com/users/10485405/alexander"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 356, "favorite_count": 3, "accepted_answer_id": 57423048, "answer_count": 2, "score": 2, "last_activity_date": 1565323657, "creation_date": 1565315098, "last_edit_date": 1565323657, "question_id": 57422565, "link": "https://stackoverflow.com/questions/57422565/how-to-determine-if-one-can-write-a-total-terminating-haskell-function-given-a", "title": "How to determine if one can write a total, terminating Haskell function given a type?", "body": "<p>Given a type, determine if you can write a total, terminating Haskell function.</p>\n\n<p>For a type like <code>Int -&gt; Int</code>, we know that the finite-precision integer type Int covers at least the range <code>[-2^29, 2^29-1]</code> so there are finitely many possible mappings we can have from Int to Int so we can write a total, terminating function.</p>\n\n<p>For example, given the following type: <code>(a -&gt; b) -&gt; (b -&gt; c) -&gt; (a -&gt; c)</code>, how can I determine if we can write a total terminating function for using that type as the function signature? Or this type <code>(a -&gt; c) -&gt; ((a, b) -&gt; c)</code>.</p>\n\n<p>Would greatly appreciate guidance through this problem! This is a homework question so I am only seeking guidance.</p>\n"}, {"tags": ["list", "haskell", "types", "ghc", "type-inference"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1565295628, "post_id": 57419852, "comment_id": 101319565, "body": "GHCi tries to use the names of the type variables occurring in the types of the functions you use. Which name survives is hard to guess since the inference algorithm is rather complex. Here, it seems that <code>b</code> comes from the type of <code>.</code>, or at least that&#39;s my guess. The order unification is performed apparently chooses that instead of the other names."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1565298869, "post_id": 57419852, "comment_id": 101320661, "body": "From the two targets, <a href=\"https://stackoverflow.com/q/8519964/2751851\">the older one</a> explains the gist of it in a tidy way, while <a href=\"https://stackoverflow.com/q/24536673/2751851\">the newer one</a> discusses some of the edge cases."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1565299008, "post_id": 57419852, "comment_id": 101320705, "body": "@duplode thanks as always helpful"}], "answers": [{"tags": [], "owner": {"reputation": 343, "user_id": 5085294, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TOFvi.png?s=128&g=1", "display_name": "Christof Schramm", "link": "https://stackoverflow.com/users/5085294/christof-schramm"}, "is_accepted": true, "score": 3, "last_activity_date": 1565295538, "creation_date": 1565295538, "answer_id": 57420014, "question_id": 57419852, "link": "https://stackoverflow.com/questions/57419852/how-does-ghci-choose-names-for-type-variables/57420014#57420014", "title": "How does ghci choose names for type variables?", "body": "<p>I would guess it has to do with the type of <code>.</code> which is </p>\n\n<pre><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>and it just starts replacing from there when inferring the type.</p>\n\n<p><code>a</code> has to be equal to <code>b</code> and <code>b</code> has to be equal to <code>c</code>. So in short my guess is that it tries to keep type variable naming in line with the type variable names in used sub-functions if possible.</p>\n"}, {"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 0, "last_activity_date": 1565297948, "last_edit_date": 1565297948, "creation_date": 1565296249, "answer_id": 57420162, "question_id": 57419852, "link": "https://stackoverflow.com/questions/57419852/how-does-ghci-choose-names-for-type-variables/57420162#57420162", "title": "How does ghci choose names for type variables?", "body": "<p>My guess:</p>\n\n<p>GHCi starts with a generic type if none function is given, I'm talking about my second example:</p>\n\n<pre><code>badImplementationOfCompose []     = id\nbadImplementationOfCompose (x:xs) =  (badImplementationOfCompose xs)\n</code></pre>\n\n<p>it has the type of <code>id</code> beeing <code>a -&gt; a</code> so if another type variable is needed, it start adding by one</p>\n\n<pre><code>badImplementationOfCompose :: [a1] -&gt; a2 -&gt; a2\n</code></pre>\n\n<p>And I thougth, maybe @chi was absolutelly right, and the names comes from the functions, so I made a case with my own <code>id</code>:</p>\n\n<pre><code>id2 :: c -&gt; c\nid2 x = x\n\nbadImplementationOfCompose []     = id2\nbadImplementationOfCompose (x:xs) =  (badImplementationOfCompose xs)\n</code></pre>\n\n<p>and the type was as expected:</p>\n\n<pre><code>:t badImplementationOfCompose\nbadImplementationOfCompose :: [a] -&gt; c -&gt; c\n</code></pre>\n\n<p>The first type variable was <code>a</code> created by GHCi, and <code>c -&gt; c</code> was taken from <code>id2</code></p>\n"}], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "closed_date": 1565298499, "accepted_answer_id": 57420014, "answer_count": 2, "score": 3, "last_activity_date": 1572883372, "creation_date": 1565294648, "last_edit_date": 1572883372, "question_id": 57419852, "link": "https://stackoverflow.com/questions/57419852/how-does-ghci-choose-names-for-type-variables", "closed_reason": "Duplicate", "title": "How does ghci choose names for type variables?", "body": "<p>I made this function:</p>\n\n<pre><code>compose []     = id\ncompose (x:xs) = x  . (compose xs)\n</code></pre>\n\n<p>And when I asked for the type:</p>\n\n<pre><code>:t compose\ncompose :: [b -&gt; b] -&gt; b -&gt; b\n</code></pre>\n\n<p>Why does it give <code>compose :: [b -&gt; b] -&gt; b -&gt; b</code> and not <code>compose :: [a -&gt; a] -&gt; a -&gt; a</code> if a comes first in alphabetic order?</p>\n\n<p>Saying that, I will add this other example:</p>\n\n<pre><code>badImplementationOfCompose []     = id\nbadImplementationOfCompose (x:xs) =  (badImplementationOfCompose xs)\n\n:t badImplementationOfCompose\nbadImplementationOfCompose :: [a1] -&gt; a2 -&gt; a2\n</code></pre>\n\n<p>It might give some hints...</p>\n"}, {"tags": ["sorting", "haskell"], "comments": [{"owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "edited": false, "score": 2, "creation_date": 1565284581, "post_id": 57417687, "comment_id": 101315103, "body": "<a href=\"https://stackoverflow.com/a/9288914/5499914\">stackoverflow.com/a/9288914/5499914</a>"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "edited": false, "score": 0, "creation_date": 1565285072, "post_id": 57417687, "comment_id": 101315316, "body": "@Khuldraesethna&#39;Barya If you believe a question is a duplicate, please flag it as a duplicate (or vote to close, if you have enough rep)."}, {"owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 3, "creation_date": 1565285482, "post_id": 57417687, "comment_id": 101315493, "body": "@amalloy Would have, don&#39;t worry. That only answers half the question, about overriding the instance; there&#39;s more to be said here."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1565285280, "post_id": 57417801, "comment_id": 101315414, "body": "Your first one can also be spelled <code>sortBy (comparing swap)</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 4, "creation_date": 1565285302, "post_id": 57417801, "comment_id": 101315424, "body": "Or just <code>sortOn swap</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565636808, "post_id": 57417801, "comment_id": 101407041, "body": "For what it&#39;s worth: if performance matters, <code>sortBy</code> will almost certainly be faster than <code>sortOn</code> because <code>swap</code> is cheap. The <code>sortBy</code> version will probably allocate more memory but retain less."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 13, "last_activity_date": 1565285437, "last_edit_date": 1565285437, "creation_date": 1565284908, "answer_id": 57417801, "question_id": 57417687, "link": "https://stackoverflow.com/questions/57417687/how-to-change-ord-instance-for-tuple-of-type-string-int-without-declaring-a-n/57417801#57417801", "title": "How to change Ord instance for tuple of type (String, Int) without declaring a new data?", "body": "<p>You can sort with <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:sortBy\" rel=\"noreferrer\"><strong><code>sortBy :: (a -&gt; a -&gt; Ordering) -&gt; [a] -&gt; [a]</code></strong></a>:</p>\n\n<pre><code>import Data.List(sortBy)\nimport Data.Ord(comparing)\nimport Data.Tuple(swap)\n\norderSwap :: (Ord a, Ord b) =&gt; [(a, b)] -&gt; [(a, b)]\norderSwap = sortBy (<b>comparing swap</b>)</code></pre>\n\n<p>or with <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:sortOn\" rel=\"noreferrer\"><strong><code>sortOn :: Ord b =&gt; (a -&gt; b) -&gt; [a] -&gt; [a]</code></strong></a>:</p>\n\n<pre><code>import Data.List(<b>sortOn</b>)\nimport Data.Ord(comparing)\nimport Data.Tuple(swap)\n\norderSwap :: (Ord a, Ord b) =&gt; [(a, b)] -&gt; [(a, b)]\norderSwap = <b>sortOn</b> swap</code></pre>\n\n<p>Or we can just perform two swaps and sort the intermediate result:</p>\n\n<pre><code>import Data.Tuple(swap)\n\norderSwap :: (Ord a, Ord b) =&gt; [(a, b)] -&gt; [(a, b)]\norderSwap = map swap . sort . map swap</code></pre>\n\n<p>This is of course not the \"standard ordering\". If you want to define  an inherent order differently than one that is derived by the instances already defined, you should define your own type.</p>\n\n<p>For example with:</p>\n\n<pre><code>newtype MyType = MyType (String, Int) deriving Eq\n\ninstance Ord MyType where\n    compare (MyType a) (MyType b) = comparing swap a b</code></pre>\n"}, {"tags": [], "owner": {"reputation": 68, "user_id": 2561788, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1595f6682224f98224d0c0bcdc87d72a?s=128&d=identicon&r=PG", "display_name": "Lianne", "link": "https://stackoverflow.com/users/2561788/lianne"}, "is_accepted": false, "score": 0, "last_activity_date": 1565623020, "creation_date": 1565623020, "answer_id": 57463916, "question_id": 57417687, "link": "https://stackoverflow.com/questions/57417687/how-to-change-ord-instance-for-tuple-of-type-string-int-without-declaring-a-n/57463916#57463916", "title": "How to change Ord instance for tuple of type (String, Int) without declaring a new data?", "body": "<p>The <code>newtype</code> is the usual way to define a new instance for an existing type.</p>\n\n<p>Although you will still need to have a constructor for a newtype type there is no computational overhead. The compiler will remove the newtype wrapper opposed to defining a type with <code>data</code>. </p>\n"}], "owner": {"reputation": 61, "user_id": 10469539, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nx0Dt.jpg?s=128&g=1", "display_name": "Bildo", "link": "https://stackoverflow.com/users/10469539/bildo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "answer_count": 2, "score": 5, "last_activity_date": 1565623020, "creation_date": 1565284420, "last_edit_date": 1565296083, "question_id": 57417687, "link": "https://stackoverflow.com/questions/57417687/how-to-change-ord-instance-for-tuple-of-type-string-int-without-declaring-a-n", "title": "How to change Ord instance for tuple of type (String, Int) without declaring a new data?", "body": "<p>I'm trying to sort a list of type <code>[(String, Int)]</code>. By default, it is sorting by Strings and then Ints (if the Strings are equal). I want it to be the opposite &mdash; first, compare Ints and then if equal compare the Strings. Additionally, I don't want to switch to <code>[(Int, String)]</code>.</p>\n\n<p>I found a way to do so by defining an instance, but it only works for my own data type, which I don't want to use.</p>\n"}, {"tags": ["list", "haskell", "random", "functional-programming", "shuffle"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1565281962, "post_id": 57417066, "comment_id": 101313965, "body": "I think the type of your function should be <code>[a] -&gt; IO [a]</code>, not <code>[a] -&gt; [IO a]</code>."}, {"owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565282098, "post_id": 57417066, "comment_id": 101314028, "body": "@WillemVanOnsem I tried that and I got two new errors - Too big to post here"}], "answers": [{"comments": [{"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1565283368, "post_id": 57417173, "comment_id": 101314577, "body": "Going along this route to get sub-quadratic performance leads to use of sparse ranges like <a href=\"https://github.com/the9000/haskell-99-problems/blob/master/p22.hs\" rel=\"nofollow noreferrer\">here</a> + <a href=\"https://github.com/the9000/haskell-99-problems/blob/master/SparseRange.hs\" rel=\"nofollow noreferrer\">here</a>, which is admittedly log-linear in worst case. IDK if a strictly linear solution is possible e.g. by using <a href=\"https://www.haskell.org/tutorial/arrays.html\" rel=\"nofollow noreferrer\">arrays</a> that at least allow constant time random access."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 1, "creation_date": 1565284200, "post_id": 57417173, "comment_id": 101314943, "body": "@9000: yes using random acces data structures can result in a linear solution. Furthermore since &quot;linear congruent generators&quot; have some problematic patterns when you plot consequence pairs, it is better to generate a random number between <code>0</code> and <code>n!</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1565286654, "post_id": 57417173, "comment_id": 101315984, "body": "@9000 Yes, linear is possible. <a href=\"https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\" rel=\"nofollow noreferrer\">Fisher-Yates</a> is the go-to standard way."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 3, "last_activity_date": 1565282310, "creation_date": 1565282310, "answer_id": 57417173, "question_id": 57417066, "link": "https://stackoverflow.com/questions/57417066/how-to-shuffle-a-list-in-haskell-using-random-selection/57417173#57417173", "title": "How to shuffle a list in Haskell using random selection", "body": "<p>You probably are looking for a function like:</p>\n\n<pre><code>shuffle :: [a] -&gt; <b>IO</b> [a]\nshuffle [] = return []\nshuffle ls = do\n    x &lt;- pick ls\n    fmap (x:) (shuffle (remove x ls))</code></pre>\n\n<p>You thus first pick an element from <code>ls</code> and then you recurse on the list of the list. Then we can return a list <code>(x:xs)</code>.</p>\n\n<p>The above can made more elegant. I leave this as an exercise. It is for example usually not a good idea to calculate the <code>length</code> of a list each iteration, since that makes the algorithm <em>O(n<sup>2</sup>)</em>. Furthermore you might want to rewrite <code>pick</code> as a function that returns the item <em>and</em> the list after removal.</p>\n"}, {"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 5, "last_activity_date": 1565283783, "creation_date": 1565283783, "answer_id": 57417539, "question_id": 57417066, "link": "https://stackoverflow.com/questions/57417066/how-to-shuffle-a-list-in-haskell-using-random-selection/57417539#57417539", "title": "How to shuffle a list in Haskell using random selection", "body": "<p>What's happening is that the type signature for <code>shuffle</code> implies that its do-block has type <code>[IO a]</code>.  This means that the monad for this do-block isn't <code>IO</code> as you intend, but rather the monad instance for lists <code>[]</code>, as that's the \"outermost\" type constructor here.  The expression <code>pick ls</code> is therefore required, by the do-block, to have type <code>[t]</code> for some type <code>t</code>, but the type signature for <code>pick</code> implies that <code>pick ls</code> has type <code>IO a</code> for some type <code>a</code>.  GHC is complaining that it expected <code>pick ls</code> to have a list type <code>[a]</code> (because of the type of the do-block) but its actual type was <code>IO a</code> (because of the type signature of <code>pick</code>).</p>\n\n<p>I believe the conceptual mistake you've made is that you're thinking of <code>IO</code> as a kind of modifier on a type that makes it IO-friendly.  So, if <code>IO a</code> is an <code>a</code> that can be generated using an effectful IO computation, then it must be true that <code>[IO a]</code> is a list of <code>a</code>s each of which can be generated using an effectful IO computation.  But this is wrong!</p>\n\n<p>Instead, you should think of <code>IO a</code> as an IO <strong>action</strong> (like a recipe) that, when executed, can produce an <code>a</code>.  If you want a list of such <code>a</code>s, you don't want a list of actions/recipes, each of which produces a single <code>a</code> (i.e., you don't want <code>[IO a]</code>).  Instead, you want a single action/recipe that produces a list of <code>a</code>s, so you want an <code>IO [a]</code>.</p>\n\n<p>So, <code>shuffle</code> should have type signature:</p>\n\n<pre><code>shuffle :: [a] -&gt; IO [a]\n</code></pre>\n\n<p>Making this change will result in another error for the last expression:</p>\n\n<pre><code>(return x) : shuffle y\n</code></pre>\n\n<p>The issue here comes from the same conceptual mistake:  you're taking a (trivial) action/recipe for generating <code>x</code> and trying to create a list of actions/recipes (though now <code>shuffle y</code> isn't a list anymore, so there's a type mismatch).  Instead, you want to replace this with:</p>\n\n<pre><code>xs &lt;- shuffle y  -- use `shuffle y :: IO [a]` action to get `xs :: [a]`\nreturn (x:xs)    -- make an action to return the whole list (type `IO [a]`)\n</code></pre>\n\n<p>You'll also find you need to add an <code>Eq a</code> constraint to shuffle because it's required to invoke <code>remove</code>; also, this will hang unless you properly handle the empty list case.  The final version of <code>shuffle</code> would be:</p>\n\n<pre><code>shuffle :: (Eq a) =&gt; [a] -&gt; IO [a]\nshuffle [] = return []\nshuffle ls = do\n    x &lt;- pick ls\n    let y = remove x ls\n    xs &lt;- shuffle y\n    return (x:xs)\n</code></pre>\n\n<p>and that should work:</p>\n\n<pre><code>&gt; shuffle [1..10]\n[6,8,7,2,5,10,1,9,4,3]\n</code></pre>\n"}], "owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 1, "accepted_answer_id": 57417539, "answer_count": 2, "score": 2, "last_activity_date": 1565283783, "creation_date": 1565281853, "question_id": 57417066, "link": "https://stackoverflow.com/questions/57417066/how-to-shuffle-a-list-in-haskell-using-random-selection", "title": "How to shuffle a list in Haskell using random selection", "body": "<p>I am trying to shuffle a list of any a using random numbers. The reason I ask this here is because I have already made a function and I can't figure out why exactly it isn't working.</p>\n\n<pre><code>pick :: [a] -&gt; IO a\npick xs = do\n    n &lt;- randomRIO (0, length xs - 1)\n    return $ xs !! n\n\nshuffle :: [a] -&gt; [IO a]\nshuffle ls = do\n    x &lt;- pick ls\n    let y = remove x ls\n    (return x) : shuffle y\n\n-- Remove an element from a list (Only first appearance)\nremove :: (Eq a) =&gt; a -&gt; [a] -&gt; [a]\nremove _ []     = []\nremove r (x:xs) = if x == r then xs else x : remove r xs\n</code></pre>\n\n<p>The error I get:</p>\n\n<pre><code>num.hs:31:10: error:\n    * Couldn't match type `IO' with `[]'\n      Expected type: [a]\n        Actual type: IO a\n    * In a stmt of a 'do' block: x &lt;- pick ls\n      In the expression:\n        do x &lt;- pick ls\n           let y = remove x ls\n           (return x) : shuffle y\n      In an equation for `shuffle':\n          shuffle ls\n            = do x &lt;- pick ls\n                 let y = ...\n                 (return x) : shuffle y\n   |\n31 |     x &lt;- pick ls\n   |          ^^^^^^^\n</code></pre>\n\n<p>What doesn't make sense to me is that it says it received a type [a] instead of IO a for pick, but ls is defined as [a]?</p>\n\n<p>If there is something fundamentally wrong with this that I just don't understand, is there another way to shuffle a list in Haskell that is this simple? Preferably without any imports.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1565279951, "post_id": 57416558, "comment_id": 101312988, "body": "Wait, why aren&#39;t you just writing <code>instance Show Value</code> instead of deriving it and then trying to invent something for <code>Endo</code>? Don&#39;t just blindly accept compiler error recommendations. Think about them and fix the underlying problem instead."}, {"owner": {"reputation": 792, "user_id": 9382127, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EMHsr.png?s=128&g=1", "display_name": "Foxy", "link": "https://stackoverflow.com/users/9382127/foxy"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1565280164, "post_id": 57416558, "comment_id": 101313089, "body": "@Carl I have already tried to do this, but GHC returns the following error: <code>No instance for (Show (Endo [Value]))</code>, which seems to be resolved with my instance (but there is a hole in my program, because I don&#39;t know the implementation for <code>Show (Endo [Value])</code>)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565280354, "post_id": 57416558, "comment_id": 101313195, "body": "@RobinZigmond: sorry, I misread it :s"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1565280534, "post_id": 57416558, "comment_id": 101313274, "body": "<i>What</i> do you want to display, exactly? Can you show an example?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1565296070, "post_id": 57416558, "comment_id": 101319726, "body": "There is no list to display inside a <code>Endo [Value]</code>. &quot;how do I view the content of my list&quot; -- you can&#39;t, since there is no list. At best, you can <i>provide</i> a list (which has to be conjured from thin air, in some arbitrary way, e.g. <code>[]</code>), apply your endo to that, and then recursively print the resulting list."}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565280784, "post_id": 57416739, "comment_id": 101313411, "body": "how do we know though that it&#39;s not <code>(++ e [])</code>? it could even be weaving them together, conceivably? it could even not have any list &quot;inside&quot;, i.e. a <code>[a] -&gt; [a]</code> function could be e.g. skipping every second element in the argument, too."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565281215, "post_id": 57416739, "comment_id": 101313620, "body": "<code>E (Endo reverse)</code> is one example, and it&#39;s sure isn&#39;t <code>E (Endo ([] ++))</code>. :) So I was too hasty with the upvote, sorry. :)"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565281364, "post_id": 57416739, "comment_id": 101313695, "body": "@WillNess true enough, but as I said.. It&#39;s <i>one example</i>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565281499, "post_id": 57416739, "comment_id": 101313756, "body": "aah, you mean if the prepending really was what the OP had in mind with their Endos there. OK. (still, it&#39;s too loose, on their part...)"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565282031, "post_id": 57416739, "comment_id": 101314003, "body": "Also, it&#39;s how Endo is used about 99% of the time. It&#39;s probably correct here. But the fact that there&#39;s no guarantee is why there&#39;s no general Show instance."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": true, "score": 4, "last_activity_date": 1565280467, "creation_date": 1565280467, "answer_id": 57416739, "question_id": 57416558, "link": "https://stackoverflow.com/questions/57416558/instantiate-the-endofunctor-type-with-the-show-class/57416739#57416739", "title": "Instantiate the Endofunctor type with the Show class", "body": "<p>You should just write a <code>Show</code> instance for <code>Value</code>. One such instance would look roughly like this (untested) :</p>\n\n<pre><code>instance Show Value where\n    Show (I i) = \"I \" ++ show i\n    show (E (Endo e)) = \"E (Endo (\" ++ show (e []) ++ \"++))\" \n</code></pre>\n"}], "owner": {"reputation": 792, "user_id": 9382127, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EMHsr.png?s=128&g=1", "display_name": "Foxy", "link": "https://stackoverflow.com/users/9382127/foxy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 57416739, "answer_count": 1, "score": 1, "last_activity_date": 1565287981, "creation_date": 1565279739, "last_edit_date": 1565287981, "question_id": 57416558, "link": "https://stackoverflow.com/questions/57416558/instantiate-the-endofunctor-type-with-the-show-class", "title": "Instantiate the Endofunctor type with the Show class", "body": "<p>How can the <code>Show</code> class be instantiated with the <code>Endo</code> type?</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\n\nimport Data.Monoid\n\ndata Value\n    = E (Endo [Value])\n    | I Int\n    deriving Show\n\ninstance Show (Endo [Value]) where\n   show (Endo f) = ... -- f :: a -&gt; a\n</code></pre>\n\n<p>I would like to be able to display the content of my constructor <code>E</code> and I know that wanting to display a function doesn't make much sense, so how do I view the content of my list, if possible, how do I do this correctly?</p>\n"}, {"tags": ["haskell", "functional-programming", "monoids"], "comments": [{"owner": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "edited": false, "score": 1, "creation_date": 1565274787, "post_id": 57414964, "comment_id": 101310020, "body": "fold with an accumulator function that calls each function and compose it according to your operator with the current result (e.g. ||)?"}, {"owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "reply_to_user": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "edited": false, "score": 0, "creation_date": 1565274936, "post_id": 57414964, "comment_id": 101310110, "body": "I tried this, and maybe I just don&#39;t grasp the concept but I tried something like compose x f g = f x || g x but then the problem is that that does not work as an accumulator because it returns a Bool, and I need it to return a function that returns a Bool."}, {"owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "edited": false, "score": 1, "creation_date": 1565275065, "post_id": 57414964, "comment_id": 101310211, "body": "Looks like you want to <a href=\"https://stackoverflow.com/a/27080683/5499914\">apply a list of functions to a single value</a> and <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:or\" rel=\"nofollow noreferrer\">check if any results are <code>True</code></a>."}, {"owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "edited": false, "score": 0, "creation_date": 1565275460, "post_id": 57414964, "comment_id": 101310447, "body": "I tried what Khuldraeseth suggested and got it to work somewhat how I wanted it to with compose fs x = foldl (||) False $ map ($ x) fs which when supplied with a list of functions will compose them and return a function that takes a single variable. Thanks for the help!"}, {"owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "edited": false, "score": 2, "creation_date": 1565275570, "post_id": 57414964, "comment_id": 101310511, "body": "<a href=\"https://stackoverflow.com/a/57415198/5499914\">Willem&#39;s answer</a> is nice. Consider that instead, but make sure you work through it and understand just what&#39;s going on!"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1565275594, "post_id": 57414964, "comment_id": 101310524, "body": "Composition of functions has a specific meaning: the output of one function is used as the input of the next. You are not composing your input functions; you are applying each to the <i>same</i> argument and combining the results in some fashion."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1565276256, "post_id": 57414964, "comment_id": 101310904, "body": "try <code>GHCi&gt; :t (or .) . sequence</code>."}, {"owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565276960, "post_id": 57414964, "comment_id": 101311311, "body": "@WillNess while I see that your &quot;(or .) . sequence&quot; is incredibly elegant, it is also confusing to read compared to some of the other simpler functions that are maybe a little longer."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1565276986, "post_id": 57414964, "comment_id": 101311329, "body": "@BryceTheGrand for me it is the only one I <i>can</i> read. :) the nested <code>flip</code>s, I can&#39;t handle."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 1, "creation_date": 1565277775, "post_id": 57414964, "comment_id": 101311768, "body": "So basically you were looking for a fold rather than a composition. A fold can always be transformed into recursion but usually the fold is more desirable"}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1565276378, "post_id": 57415198, "comment_id": 101310983, "body": "<code>flip id</code> always seems a bit odd to me. <code>Data.Function.(&amp;)</code> (or at least <code>flip ($)</code>) is equivalent and probably more suggestive of what is happening."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565276476, "post_id": 57415198, "comment_id": 101311042, "body": "@chepner: you are correct, it is furthermore more &quot;strong&quot; w.r.t. the types, since it adds an extra contract that we deal with functions (although in the overall expression of course, this will be inferenced)."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 9, "last_activity_date": 1565277430, "last_edit_date": 1565277430, "creation_date": 1565275298, "answer_id": 57415198, "question_id": 57414964, "link": "https://stackoverflow.com/questions/57414964/how-to-compose-functions-that-return-bools-to-one-function/57415198#57415198", "title": "How to compose functions that return Bools to one function", "body": "<p>We can make use of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:any\" rel=\"noreferrer\"><strong><code>any :: Foldable =&gt; (a -&gt; Bool) -&gt; f a -&gt; Bool</code></strong></a> here:</p>\n\n<pre><code>compose :: Foldable f =&gt; f (a -&gt; Bool) -&gt; a -&gt; Bool\ncompose = flip (any . flip ($))</code></pre>\n\n<p>or as <a href=\"https://stackoverflow.com/questions/57414964/how-to-compose-functions-that-return-bools-to-one-function#comment101310983_57415198\">@chepner</a> suggests, with a <code>(&amp;)</code>:</p>\n\n<pre><code>import Data.Function((&))\n\ncompose :: Foldable f =&gt; f (a -&gt; Bool) -&gt; a -&gt; Bool\ncompose = flip (any . (&))</code></pre>\n\n<p>or without the point-free styling (and probably simpler to understand):</p>\n\n<pre><code>compose :: Foldable f =&gt; f (a -&gt; Bool) -&gt; a -&gt; Bool\ncompose l x = any ($ x) l</code></pre>\n\n<p>The above will work with any sort of <code>Foldable</code>, so a list <code>[]</code>, <code>Maybe</code>, etc.</p>\n"}, {"comments": [{"owner": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "reply_to_user": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "edited": false, "score": 1, "creation_date": 1565275747, "post_id": 57415229, "comment_id": 101310624, "body": "@BryceTheGrand Thank for edit (of course it is False in the base case)"}], "tags": [], "owner": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "is_accepted": false, "score": 4, "last_activity_date": 1565275726, "last_edit_date": 1565275726, "creation_date": 1565275398, "answer_id": 57415229, "question_id": 57414964, "link": "https://stackoverflow.com/questions/57414964/how-to-compose-functions-that-return-bools-to-one-function/57415229#57415229", "title": "How to compose functions that return Bools to one function", "body": "<p>A simpler example (I am no Haskeller), based on your requirements:</p>\n\n<pre><code>compose :: [(a -&gt; Bool)] -&gt; (a -&gt; Bool)\ncompose []     = (\\y -&gt; False)\ncompose (x:xs)  = (\\y -&gt; (x y) || ((compose xs) y))\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": false, "score": 5, "last_activity_date": 1565276858, "last_edit_date": 1565276858, "creation_date": 1565275492, "answer_id": 57415252, "question_id": 57414964, "link": "https://stackoverflow.com/questions/57414964/how-to-compose-functions-that-return-bools-to-one-function/57415252#57415252", "title": "How to compose functions that return Bools to one function", "body": "<p>Look: <code>compose xs</code> in your definition is a function. So you can call it with an argument - like <code>compose xs a</code>, - and that will return a <code>Bool</code>.</p>\n\n<p>You can use this to define the recursive case.</p>\n\n<p>First of all, the recursive case must return a function - because that's what your type signature states. So it must look something like:</p>\n\n<pre><code>compose (x:xs) = \\a -&gt; ...\n</code></pre>\n\n<p>Now, the logic would go like this: first of all, call the first function in the list - like <code>x a</code>, - and if it returns true, then that's the result; otherwise, call the composition of the tail - like <code>compose xs a</code>. Let's write that down:</p>\n\n<pre><code>compose (x:xs) = \\a -&gt; x a || compose xs a\n</code></pre>\n\n<p>Next up, you need to decide what to do with the empty list. Obviously it can be either a function that always returns <code>True</code> or a function that always returns <code>False</code>, there can be no other options unless you can inspect the argument somehow, which you can't, because it's of generic type.</p>\n\n<p>So, should it return <code>True</code> or <code>False</code>? Let's see: if it returns <code>True</code>, then any composition will always be <code>True</code>, that's how the <code>||</code> operator works. So we might as well just write <code>compose _ = \\_ -&gt; True</code>. Therefore, the only sane variant is for it to return <code>False</code>.</p>\n\n<p>Summing up all of the above, here's your definition:</p>\n\n<pre><code>compose [] = \\a -&gt; False\ncompose (x:xs) = \\a -&gt; x a || compose xs a\n</code></pre>\n\n<p>And of course, you can use a shorter syntax instead of returning lambdas:</p>\n\n<pre><code>compose [] a = False\ncompose (x:xs) a = x a || compose xs a\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "edited": false, "score": 0, "creation_date": 1565275620, "post_id": 57415267, "comment_id": 101310537, "body": "Is getAny part of some module?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1565275688, "post_id": 57415267, "comment_id": 101310585, "body": "It&#39;s part of the definition of the <code>Any</code> type, defined in <code>Data.Monoid</code>. <code>newtype Any = Any {getAny :: Bool }</code>. It&#39;s used to define the Boolean monoid with <code>||</code> as the operator. <code>Any True &lt;&gt; Any False == Any True</code>, as compared to, say, <code>All True &lt;&gt; All False == All False</code> (where <code>All</code> uses <code>&amp;&amp;</code>)."}, {"owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "edited": false, "score": 0, "creation_date": 1565276708, "post_id": 57415267, "comment_id": 101311171, "body": "So I suppose the mconcat function in the second example is essentially just checking (||) for every function?"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 2, "creation_date": 1565285461, "post_id": 57415267, "comment_id": 101315477, "body": "<code>map</code> followed by <code>mconcat</code> is so common that it has its own function <code>foldMap</code>. This video nicely explains the use of <code>foldMap</code> <a href=\"https://www.youtube.com/watch?v=BovTQeDK7XI\" rel=\"nofollow noreferrer\">youtube.com/watch?v=BovTQeDK7XI</a>"}], "tags": [], "owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "is_accepted": false, "score": 5, "last_activity_date": 1565345313, "last_edit_date": 1565345313, "creation_date": 1565275542, "answer_id": 57415267, "question_id": 57414964, "link": "https://stackoverflow.com/questions/57414964/how-to-compose-functions-that-return-bools-to-one-function/57415267#57415267", "title": "How to compose functions that return Bools to one function", "body": "<p>To implement this using monoids you can use the <code>Any</code> (from <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html\" rel=\"nofollow noreferrer\">Data.Monoid</a>) boolean wrapper which implements the disjunction behaviour you want when combining values e.g.</p>\n\n<pre><code>(Any False) `mappend` (Any True)\n=&gt; Any {getAny = True}\n</code></pre>\n\n<p>Functions which return monoidal values are themselves monoids - <code>mappend</code>ing two such functions returns a function which evalulates the argument on both functions and <code>mappend</code>s the results e.g.</p>\n\n<pre><code>f :: Int -&gt; Any\nf x = Any $ x &gt; 10\n\ng :: Int -&gt; Any\ng x = Any $ x &lt; 3\n\ncomp :: Int -&gt; Any\ncomp = f `mappend` g\n\ncomp 0\n=&gt; Any {getAny = True}\n\ncomp 4\n=&gt; Any {getAny = False}\n\ncomp 11\n=&gt; Any {getAny = True}\n</code></pre>\n\n<p>So if you lift each <code>a -&gt; Bool</code> into a function <code>a -&gt; Any</code> then these be composed with <code>mappend</code>.</p>\n\n<p><code>mconcat</code> reduces a list of monoidal values into a single value so applying this to a list of <code>a -&gt; Any</code> function returns a function which applies the disjunction to each result. You then need to unwrap the <code>Bool</code> from the resulting <code>Any</code> value with <code>getAny</code>.</p>\n\n<pre><code>import Data.Monoid\n\ncompose :: [(a -&gt; Bool)] -&gt; (a -&gt; Bool)\ncompose fs x = let anyfs = map (\\f -&gt; Any . f) fs\n                   combined = mconcat anyfs\n                   anyResult = combined x\n                in getAny anyResult\n</code></pre>\n\n<p>This can also be written as:</p>\n\n<pre><code>compose :: [(a -&gt; Bool)] -&gt; (a -&gt; Bool)\ncompose = (getAny .) . mconcat . (map (Any .))\n</code></pre>\n\n<p>As danidiaz points out in the comments, you can also use <code>foldMap</code>. This also has a more general type:</p>\n\n<pre><code>compose :: Foldable t =&gt; t (a -&gt; Bool) -&gt; a -&gt; Bool\ncompose = (getAny .) . foldMap (Any .)\n</code></pre>\n"}], "owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 1, "accepted_answer_id": 57415198, "answer_count": 4, "score": 7, "last_activity_date": 1565345313, "creation_date": 1565274610, "question_id": 57414964, "link": "https://stackoverflow.com/questions/57414964/how-to-compose-functions-that-return-bools-to-one-function", "title": "How to compose functions that return Bools to one function", "body": "<p>There is a similar question I found here that asks almost the same thing, but not quite.</p>\n\n<p>The question I have is how to compose a list of functions of type (a -> Bool) to be one function that is also (a -> Bool).</p>\n\n<p>Ex.</p>\n\n<pre><code>compose :: [(a -&gt; Bool)] -&gt; (a -&gt; Bool)\ncompose []     = **?**\ncompose (x:xs) = x **?** compose xs\n</code></pre>\n\n<p>The question that was similar to this was taking three functions and mixing them all like so:</p>\n\n<pre><code>newFunction x f g y = f x || g x || y x\n</code></pre>\n\n<p>But this is very limited because you have to supply a specific number of functions, and it does not return another function, it returns a Boolean. I essentially want a function that gives me the above function without functions as arguments.</p>\n\n<p>I tried messing with Monoids to make this work but I ran into issues with wrapping the functions into a Monoid in the first place, let alone actually composing them together as <em>newFunction</em> does.</p>\n\n<p>Is there a way to compose a list of functions of type (a -> Bool) to one function of the same type?</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1565274585, "post_id": 57414879, "comment_id": 101309891, "body": "You restrict <code>a</code> to be a member of the <code>Ord</code> typeclass."}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 3, "last_activity_date": 1565275164, "last_edit_date": 1565275164, "creation_date": 1565274570, "answer_id": 57414952, "question_id": 57414879, "link": "https://stackoverflow.com/questions/57414879/what-is-the-difference-between-ord-a-a-a-a-and-a-a/57414952#57414952", "title": "What is the difference between &quot;Ord a =&gt; [a] -&gt; [a] -&gt; [a]&quot; and &quot;[a] -&gt; [a] -&gt; [a]&quot;", "body": "<p>The difference is in the constraint, <code>Ord a =&gt; a</code> here <code>a</code> has type <code>a</code> but not any <code>a</code>, an <code>a</code> that is an instance of <code>Ord</code> typeclass, example:</p>\n\n<p>here I will change a little bit the type result only to show you can use the functions of the interface:</p>\n\n<pre><code>canBeOrderedList :: Ord a =&gt; [a] -&gt; [a] -&gt; [Bool]\ncanBeOrderedList xs ys = zipWith (&gt;) xs ys\n</code></pre>\n\n<p>here you can do whatever generic function you want, <code>a</code> here is not restricted, so it can be <code>Ord</code> or <code>Eq</code> or both or none, can be functions, can be Ints can be anything</p>\n\n<pre><code>anyListTypeConcat :: [a] -&gt; [a] -&gt; [a]\nanyListTypeConcat xs ys  = xs ++ ys \n</code></pre>\n\n<p>so:</p>\n\n<pre><code>anyListTypeConcat [True, False] [False, True]\n=&gt; [True,False,False,True]\n</code></pre>\n\n<p>here you concatted the two list, so far so good, here:</p>\n\n<pre><code>canBeOrderedList [1,2,3] [4,1,2]\n=&gt; [False,True,True]\n</code></pre>\n\n<p>you can use (>) with numbers but, what about:</p>\n\n<pre><code>data Some = A | B | C deriving (Eq, Show)\n\nanyListTypeConcat [A, A] [B, C]\n=&gt; [A,A,B,C]\n</code></pre>\n\n<p>but:</p>\n\n<pre><code>canBeOrderedList [A,A,B] [C,A,A]\n error:\n    \u2022 No instance for (Ord Some)\n        arising from a use of \u2018canBeOrderedList\u2019\n    \u2022 In the expression: canBeOrderedList [A, A, B] [C, A, A]\n      In an equation for \u2018it\u2019: it = canBeOrderedList [A, A, B] [C, A, A]\n</code></pre>\n\n<p>You cannot order that list, but you may if you change the data type:</p>\n\n<pre><code>data Some = A | B | C deriving (Eq, Show, Ord)\ncanBeOrderedList [A,A,B] [C,A,A]\n=&gt; [False,False,True]\n</code></pre>\n\n<p>And that's essentially the difference</p>\n"}, {"tags": [], "owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "is_accepted": true, "score": 2, "last_activity_date": 1565275784, "last_edit_date": 1565275784, "creation_date": 1565275417, "answer_id": 57415237, "question_id": 57414879, "link": "https://stackoverflow.com/questions/57414879/what-is-the-difference-between-ord-a-a-a-a-and-a-a/57415237#57415237", "title": "What is the difference between &quot;Ord a =&gt; [a] -&gt; [a] -&gt; [a]&quot; and &quot;[a] -&gt; [a] -&gt; [a]&quot;", "body": "<p>Consider:</p>\n\n<pre><code>-- merge :: [a] -&gt; [a] -&gt; [a]  ?\nmerge [] ys = ys\nmerge xs [] = xs\nmerge (x:xs) (y:ys)\n  | y &lt; x     = y : merge (x:xs) ys\n  | otherwise = x : merge xs (y:ys)\n</code></pre>\n\n<p>In particular, look at the second-to-last line. See that <code>(&lt;)</code> operator?</p>\n\n<pre><code>ghci&gt; :i (&lt;)\nclass Eq a =&gt; Ord a where\n  ...\n  (&lt;) :: a -&gt; a -&gt; Bool\n</code></pre>\n\n<p>We can see here that the less-than operator does not exist for type not of class <code>Ord</code>; that <code>merge</code> function therefore makes no sense unless we have <code>Ord a</code>. We therefore rewrite its type signature as:</p>\n\n<pre><code>merge :: Ord a =&gt; [a] -&gt; [a] -&gt; [a]\n</code></pre>\n"}], "owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "accepted_answer_id": 57415237, "answer_count": 2, "score": 1, "last_activity_date": 1572883387, "creation_date": 1565274331, "last_edit_date": 1572883387, "question_id": 57414879, "link": "https://stackoverflow.com/questions/57414879/what-is-the-difference-between-ord-a-a-a-a-and-a-a", "title": "What is the difference between &quot;Ord a =&gt; [a] -&gt; [a] -&gt; [a]&quot; and &quot;[a] -&gt; [a] -&gt; [a]&quot;", "body": "<p>I am new in Haskell. Can anyone explain the difference and the usage of <code>Ord a</code>?</p>\n\n<p>Now I'm familiar with <code>[a] -&gt; [a] -&gt; [a]</code> things. But this,</p>\n\n<pre><code>Ord a =&gt; [a] -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>please explain me in detail.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1565273229, "post_id": 57414259, "comment_id": 101309102, "body": "The first word after <code>where</code> sets the indentation column (that&#39;s the <code>x</code> in <code>x =</code> in your code). Anything less indented than that is parsed outside the <code>where</code>. I&#39;d put the <code>x =</code> in the line below, so that <code>let ... in ...</code> can be on the right of the indentation column."}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": true, "score": 2, "last_activity_date": 1565273895, "last_edit_date": 1565273895, "creation_date": 1565272747, "answer_id": 57414376, "question_id": 57414259, "link": "https://stackoverflow.com/questions/57414259/parse-errors-when-using-where-notation-how-do-i-format-this-structure-correc/57414376#57414376", "title": "Parse errors when using &#39;where&#39; notation - how do I format this structure correctly?", "body": "<p>Here a compiling example:</p>\n\n<pre><code>data Room = RoomRender {title :: String, desctext :: Int}\n</code></pre>\n\n<p>data Room = RoomRender {title :: String, desctext :: Int}</p>\n\n<pre><code>render world = RoomRender { title = \"\", desctext = x }\n where x = \n         let boxThere = undefined\n         in undefined\n</code></pre>\n\n<p>another possibility is:</p>\n\n<pre><code>render world x = RoomRender { title = \"\", desctext = x }\n                                               ---------^\n</code></pre>\n\n<p>very end, I think you miss an enter and then a withe space. Also could be those two.</p>\n\n<p>I final advice: if you are looking for compilation error, please don't use the function <code>blah</code> because is type is <code>blah :: Blah -&gt; Blah -&gt; Blah</code>, so your code won't compile.</p>\n\n<p><code>undifined</code>, on the other hand, has type <code>undefined :: a</code>, so you can put that little momentous fix while you are finding you error </p>\n"}], "owner": {"reputation": 359, "user_id": 2649762, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8574838cef0a260ea45417d364e002b6?s=128&d=identicon&r=PG", "display_name": "user2649762", "link": "https://stackoverflow.com/users/2649762/user2649762"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 36, "favorite_count": 0, "accepted_answer_id": 57414376, "answer_count": 1, "score": 3, "last_activity_date": 1565273895, "creation_date": 1565272393, "question_id": 57414259, "link": "https://stackoverflow.com/questions/57414259/parse-errors-when-using-where-notation-how-do-i-format-this-structure-correc", "title": "Parse errors when using &#39;where&#39; notation - how do I format this structure correctly?", "body": "<p>This is the piece of the code that has the issue:</p>\n\n<pre><code>render world = RoomRender { title = \"\", desctext = x }  where x = \n         let boxThere = (blah blah blah)\n         in (blah blah blah)\n</code></pre>\n\n<p>This is the error:</p>\n\n<pre><code>parse error on input `where'\n   |\n25 |     render world = RoomRender { title = \"\", desctext = x }  where x = \n   |                                                                                                        ^^^^^\n</code></pre>\n\n<p>Maybe there is some kind of tabbing issue? How to format this piece of code so it would work?</p>\n"}, {"tags": ["haskell", "haskell-platform"], "answers": [{"comments": [{"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565267180, "post_id": 57412457, "comment_id": 101305035, "body": "You&#39;re right but I should use only limited technique like what I wrote above. Could I solve them using guard?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565267338, "post_id": 57412457, "comment_id": 101305159, "body": "@Hume: that is done in the implementation of <code>filter&#39;</code>. Note that you do not need a guard, you can use a <code>Bool</code> catamoprhism."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565267605, "post_id": 57412457, "comment_id": 101305351, "body": "Really appreciate for your reply. And have 2 questions. 1) why put the &#39; sign after filter? you didn&#39;t use is in &quot;Prelude&gt; filter evn [2,4,5,8]     2)what is the &#39;p&#39; and &#39;go&#39;? are these just name or keyword of Haskell?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565267698, "post_id": 57412457, "comment_id": 101305405, "body": "@Hume: (1) because that would clash with the <code>filter</code> in the prelude, (2) <code>p</code> is the predicate to be satisfied for an item to be in the result; <code>go</code> is a &quot;helper&quot; function, such that we do not need to pass <code>p</code> from one recursive call to the next one."}, {"owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565267942, "post_id": 57412457, "comment_id": 101305571, "body": "So, it means they&#39;re not keyword. I can replace them to other words like p to y, and go to goooo. right?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "edited": false, "score": 0, "creation_date": 1565268015, "post_id": 57412457, "comment_id": 101305609, "body": "@Hume: indeed, there is nothing special about <code>p</code> and <code>go</code>, but often people use these names, so it is more a &quot;convention&quot;."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1565267308, "last_edit_date": 1565267308, "creation_date": 1565266866, "answer_id": 57412457, "question_id": 57412395, "link": "https://stackoverflow.com/questions/57412395/how-to-store-higher-order-function-data-in-list-in-haskell/57412457#57412457", "title": "How to store higher order function data in list in haskell?", "body": "<p>It looks like you want to use a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:filter\" rel=\"nofollow noreferrer\"><strong><code>filter :: (a -&gt; Bool) -&gt; a -&gt; a</code></strong></a> here. So instead of using your own <code>two_sear</code>, you can use filter instead.</p>\n\n<p>For example:</p>\n\n<pre><code>Prelude&gt; filter evn [2,4,5,8]\n[2,4,8]\nPrelude&gt; filter big [101]\n[101]\n</code></pre>\n\n<p>You can implement <code>filter</code> yourself through recursion:</p>\n\n<pre><code>filter' :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilter' p = go\n    where go [] = []\n          go (x:xs) | p x = x : go xs\n                    | otherwise = go xs</code></pre>\n\n<p>We thus construct a list with <code>(x : go xs)</code>, or less verbose <code>x : go xs</code>. This is a \"cons\" with <code>x</code> the head of the list, and we recurse with <code>go xs</code> on the remaining items of the list.</p>\n\n<p>The <code>go</code> function can be implemented as a <code>foldr</code> with:</p>\n\n<pre><code>import Data.Bool(bool)\n\nfilter' :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilter' p = foldr ((bool id . (:)) &lt;*&gt; p) []</code></pre>\n\n<p>The <code>Prelude</code> already has an implementation for <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:even\" rel=\"nofollow noreferrer\"><strong><code>even :: Integral i =&gt; i -&gt; Bool</code></strong></a> and you can define <code>big</code> as:</p>\n\n<pre><code>big :: (Num n, Ord n) =&gt; n -&gt; Bool\nbig = (&lt;) 100</code></pre>\n\n<p>or:</p>\n\n<pre><code>big :: (Num n, Ord n) =&gt; n -&gt; Bool\nbig = (100 &lt;)</code></pre>\n"}, {"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 1, "last_activity_date": 1565272243, "creation_date": 1565272243, "answer_id": 57414210, "question_id": 57412395, "link": "https://stackoverflow.com/questions/57412395/how-to-store-higher-order-function-data-in-list-in-haskell/57414210#57414210", "title": "How to store higher order function data in list in haskell?", "body": "<p>Just in addition to the already good answer here. Functions in Haskell are like any other value, and also your current functions can be curried (indeed every function in Haskell is curried). Said that, here an example:</p>\n\n<pre><code>fs = [(+), (*), (-), (div)]\nints = [(2,4), (5,3), (6,2), (9,3)]\n\napplyFs :: [a -&gt; b -&gt; c] -&gt; [(a, b)] -&gt; [c]\napplyFs fs ns = zipWith (($) . uncurry) fs ns\n\n=&gt; [6,15,4,3]\n</code></pre>\n\n<p>As you can see, <code>fs</code> is a list a function, completely valid</p>\n"}], "owner": {"reputation": 99, "user_id": 11901818, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wCBuk.jpg?s=128&g=1", "display_name": "Hume", "link": "https://stackoverflow.com/users/11901818/hume"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 57412457, "answer_count": 2, "score": 3, "last_activity_date": 1565272243, "creation_date": 1565266641, "last_edit_date": 1565267085, "question_id": 57412395, "link": "https://stackoverflow.com/questions/57412395/how-to-store-higher-order-function-data-in-list-in-haskell", "title": "How to store higher order function data in list in haskell?", "body": "<p>I'm trying to store function's result data in list but don't know how to define in the code.</p>\n\n<p>I think the problem is 10th line.</p>\n\n<pre><code>| tst x == True  = [x,xs..]\n</code></pre>\n\n<p>How could I define list where I will store the result data of tst x?</p>\n\n<p>So, the expected output is below.</p>\n\n<pre><code>Main&gt; two_sear evn [2,4,5,8]\n[2,4,8]\nMain&gt; two_sear big [101]\n[101]\n</code></pre>\n\n<p>My current approach:</p>\n\n<pre><code>evn :: Int -&gt; Bool\nevn x = mod x 2 == 0\n\nbig :: Int -&gt; Bool\nbig x = x &gt; 100\n\ntwo_sear::(Int -&gt; Bool) -&gt; [Int] -&gt; [Int]\ntwo_sear tst [] = []\ntwo_sear tst (x:xs)\n    | tst x == True  = [x,xs..]\n    | otherwise = two_sear tst xs\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 13, "last_activity_date": 1565224880, "creation_date": 1565224880, "answer_id": 57403838, "question_id": 57403764, "link": "https://stackoverflow.com/questions/57403764/why-is-a-typeclass-constraint-added-when-i-did-not-define-it-in-my-original-type/57403838#57403838", "title": "Why is a typeclass constraint added when I did not define it in my original type definition?", "body": "<p>This is the result of unification of the type of the expression <code>1</code> with the type of <code>kessel</code>.  Note that the type of the expression <code>1</code> is:</p>\n\n<pre><code>&gt; :t 1\n1 :: Num p =&gt; p\n</code></pre>\n\n<p>When this type variable <code>p</code> is unified with the type variable <code>a</code> in:</p>\n\n<pre><code>kessel :: (Ord a, Num b) =&gt; a -&gt; b -&gt; a\n</code></pre>\n\n<p>the result is that <code>a</code> has both <code>Ord</code> and <code>Num</code> constraints.  In particular:</p>\n\n<pre><code>&gt; :t kessel 1\nkessel 1 :: (Ord a, Num b, Num a) =&gt; b -&gt; a\n&gt;\n</code></pre>\n\n<p>When you provide the extra argument satisfying <code>Num b =&gt; b</code>, you get the final type:</p>\n\n<pre><code>&gt; :t kessel 1 2\nkessel 1 2 :: (Ord a, Num a) =&gt; a\n&gt;\n</code></pre>\n\n<p>The <code>Num b</code> constraint has been discharged by supplying <code>2</code>, and neither it nor any other reference to the type <code>b</code> appear in the final signature.</p>\n\n<p>Also, note that if this <code>Num a</code> constraint <em>didn't</em> appear in the final type, then it would be type-correct to write:</p>\n\n<pre><code>&gt; kessel 1 2 :: Bool\n</code></pre>\n\n<p>since <code>Bool</code> is clearly of type <code>Ord a =&gt; a</code>, with the implication that the type of <code>1</code> has somehow been unified with <code>Bool</code>.</p>\n"}], "owner": {"reputation": 2564, "user_id": 4134881, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/797360342295a3f637a9c4d71d40d113?s=128&d=identicon&r=PG&f=1", "display_name": "evianpring", "link": "https://stackoverflow.com/users/4134881/evianpring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "accepted_answer_id": 57403838, "answer_count": 1, "score": 3, "last_activity_date": 1565224880, "creation_date": 1565224063, "question_id": 57403764, "link": "https://stackoverflow.com/questions/57403764/why-is-a-typeclass-constraint-added-when-i-did-not-define-it-in-my-original-type", "title": "Why is a typeclass constraint added when I did not define it in my original type definition?", "body": "<p>In prelude I am checking some types. </p>\n\n<pre><code>*&gt; let kessel :: (Ord a, Num b) =&gt; a -&gt; b -&gt; a; kessel = undefined\n*&gt; :t kessel 1 2\nkessel 1 2 :: (Num a, Ord a) =&gt; a\n</code></pre>\n\n<p>I don't get why <code>Num a</code> is included as a typeclass constraint on the type of <code>kessel 1 2</code>. It wasn't in the original type definition of kessel. Why does it appear in <code>:t kessel 1 2</code>?</p>\n"}]