[{"tags": ["haskell", "math", "data-structures"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 2, "creation_date": 1424901356, "post_id": 28729868, "comment_id": 45747030, "body": "What is <code>n</code> in <code>O(n)</code>? The magnitude of the number or the length of an input for it? What are the &quot;catenable lists&quot; Okasaki describes?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424901526, "post_id": 28729868, "comment_id": 45747116, "body": "@Cirdec, good question. If you neglect decrements, it&#39;s the length of the input for it. With decrements, ... I&#39;m not sure."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 2, "creation_date": 1424902617, "post_id": 28729868, "comment_id": 45747596, "body": "@Cirdec, I wouldn&#39;t be surprised if it were impossible to improve the space usage, now that I think more about it. O(1) addition is a very stringent requirement!"}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 2, "creation_date": 1424907336, "post_id": 28729868, "comment_id": 45749657, "body": "You can&#39;t get constant time addition. You can only get constant time if you limit the size of the numbers."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 2, "creation_date": 1424907585, "post_id": 28729868, "comment_id": 45749753, "body": "@augustss, how&#39;s that? Okasaki&#39;s catenable lists support O(1) append and O(1) decrement."}, {"owner": {"reputation": 19889, "user_id": 906839, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5bce6d276ec5c9b7b97804d0add55084?s=128&d=identicon&r=PG", "display_name": "Brett Hale", "link": "https://stackoverflow.com/users/906839/brett-hale"}, "edited": false, "score": 3, "creation_date": 1424914967, "post_id": 28729868, "comment_id": 45751804, "body": "Not saying this is inappropriate for SO, but you might consider <a href=\"http://scicomp.stackexchange.com/\">compsci</a> as well."}, {"owner": {"reputation": 16267, "user_id": 1346276, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Tu8Re.jpg?s=128&g=1", "display_name": "phipsgabler", "link": "https://stackoverflow.com/users/1346276/phipsgabler"}, "edited": false, "score": 0, "creation_date": 1424945666, "post_id": 28729868, "comment_id": 45762865, "body": "I&#39;m not going to to read into that right now, but chapter 6 of <i>Purely Functional Data Structures</i> is called &quot;Numerical Representations&quot; and deals, I think, with encoding list representations into number representations. Probably some insight can be gained from that."}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424965043, "post_id": 28729868, "comment_id": 45775324, "body": "Are those queues real constant time or just amortized?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 1, "creation_date": 1424965137, "post_id": 28729868, "comment_id": 45775389, "body": "@NiklasB., these are amortized, but real-time versions exist too."}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424965166, "post_id": 28729868, "comment_id": 45775419, "body": "Interesting. I think the o(n) space restriction might be a killer here, but not necessarily"}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424966355, "post_id": 28729868, "comment_id": 45776296, "body": "Can we assume the RAM model (i.e. O(1) operations for integers that fit into the words size w) and log log n = O(w)?"}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424966851, "post_id": 28729868, "comment_id": 45776633, "body": "Or in other words, can we assume that log log n fits into an <code>Int</code>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 1, "creation_date": 1424967882, "post_id": 28729868, "comment_id": 45777287, "body": "@NiklasB., given the FP context, I would feel more comfortable with a pointer machine model (O(1) constructor application and pattern matching, with no other primitive operations), but even a slightly over-powered one would be interesting."}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424969138, "post_id": 28729868, "comment_id": 45778111, "body": "Singly linked lists should give you a simpler O(n) space solution. If you use <code>f (x:xs) (y:xs) = x : y : f xs ys</code> as the addition operation, this should give you O(1) amortized ops"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424970342, "post_id": 28729868, "comment_id": 45778904, "body": "@NiklasB., can you explain that a bit more? In particular, how will that give the right bounds if you double a number repeatedly and then start decrementing?"}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424971425, "post_id": 28729868, "comment_id": 45779603, "body": "The idea is that for every evaluation caused by a pattern match, there has to be at least one add operation before that whose thunk is not yet evaluated. It&#39;s a bit tough for me to prove amortized bounds in a lazy setting, but I think you can define the potential function in terms of the number of nodes in the DAG of thunks"}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424971808, "post_id": 28729868, "comment_id": 45779816, "body": "FWIW, here&#39;s a practical example of a repeated number of function applications: <a href=\"http://ideone.com/oe1uOv\" rel=\"nofollow noreferrer\">ideone.com/oe1uOv</a> In particular since we don&#39;t evaluate the representation of 2^100000 completely, it doesn&#39;t take up a lot of space. In general we take at most O(min(n, m)) space where m is the number operations that lead to the representation the number or something like that. Take these bounds with a grain of salt, I find this analysis pretty confusing"}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424976104, "post_id": 28729868, "comment_id": 45782358, "body": "Nevermind, my analysis is wrong, although I can&#39;t find a sequence of operations that causes a degradation."}, {"owner": {"reputation": 8676, "user_id": 1113881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sBc0F.jpg?s=128&g=1", "display_name": "CR Drost", "link": "https://stackoverflow.com/users/1113881/cr-drost"}, "edited": false, "score": 2, "creation_date": 1424983466, "post_id": 28729868, "comment_id": 45786759, "body": "@dfeuer: the other big player is the Church-encoded numbers, which represent lists as <code>flip (flip . foldr) list</code> and which acts like natural numbers if the underlying list has type <code>[()]</code>. It seems like the underlying <code>foldr</code> would give you O(1) appends and O(1) <code>isZero</code>, and you&#39;d just need to throw amortization arguments at the predecessor function."}, {"owner": {"reputation": 4682, "user_id": 360270, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/1gH9s.jpg?s=128&g=1", "display_name": "starmole", "link": "https://stackoverflow.com/users/360270/starmole"}, "edited": false, "score": 1, "creation_date": 1425363668, "post_id": 28729868, "comment_id": 45921387, "body": "This threw me off completely at first: I was thinking of constant time addition in terms of security/timing attacks :) But it got me thinking, addition should be trivial constant time and linear space in base 1. But everything else is terrible in base 1! So why? I would like to know more about why this is an interesting problem."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1425653906, "post_id": 28901404, "comment_id": 46062122, "body": "The <code>n</code> in the problem description is the magnitude of the number, not the number of bits. I am very well aware that standard binary addition is O(log m+log n). This question is not talking about that form of addition at all."}, {"owner": {"user_type": "does_not_exist", "display_name": "user2191247"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1425656355, "post_id": 28901404, "comment_id": 46063775, "body": "Thank you, have revised based on the feedback."}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 2, "creation_date": 1425716567, "post_id": 28901404, "comment_id": 46084111, "body": "Could be more specific about the data structure you&#39;re proposing? The question is about immutable, functional data structures, so in particular mutable pointers aren&#39;t allowed. Also, could you expand about weighting nodes? Normally you&#39;d use numbers for weights, but of course here we&#39;re trying to represent numbers, assuming we don&#39;t have any yet."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user2191247"}, "is_accepted": false, "score": 4, "last_activity_date": 1425657846, "last_edit_date": 1425657846, "creation_date": 1425653731, "answer_id": 28901404, "question_id": 28729868, "link": "https://stackoverflow.com/questions/28729868/how-can-natural-numbers-be-represented-to-offer-constant-time-addition/28901404#28901404", "title": "How can natural numbers be represented to offer constant time addition?", "body": "<p>My understanding is that in basic computer programming terminology the underlying problem is you want to concatenate lists in constant time. The lists don't have cheats like forward references, so you can't jump to the end in O(1) time, for example.</p>\n\n<p>You can use rings instead, which you can merge in O(1) time, regardless if <code>a+(b+(c+...))</code> or <code>((...+c)+b)+a</code> logic is used. The nodes in the rings don't need to be doubly linked, just a link to the next node.</p>\n\n<p>Subtraction is the removal of any node, O(1), and testing for zero (or one) is trivial. Testing for <code>n &gt; 1</code> is O(n), however.</p>\n\n<p>If you want to reduce space, then at each operation you can merge the nodes at the insertion or deletion points and weight the remaining ones higher. The more operations you do, the more compact the representation becomes! I think the worst case will still be O(n), however.</p>\n"}, {"comments": [{"owner": {"reputation": 44309, "user_id": 21640, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/492a3c5c13fb44d27229364e0993fa11?s=128&d=identicon&r=PG", "display_name": "Marcin", "link": "https://stackoverflow.com/users/21640/marcin"}, "edited": false, "score": 1, "creation_date": 1441722704, "post_id": 32460386, "comment_id": 52782955, "body": "It is eagerly evaluated, so no matter how similar the type system, it&#39;s not going to be that similar. There are a lot of styles which are highly efficient in a lazy environment which are awful in an eager environment, and vice-versa."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1441723378, "post_id": 32460386, "comment_id": 52783445, "body": "Idris naturals offer only logarithmic time operations once they exceed the machine word!"}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1446324595, "post_id": 32460386, "comment_id": 54699348, "body": "Indeed, machine integer types are logarithmic, not <i>O(1)</i>. They only appear to be constant-time for &quot;small&quot; enough numbers (that fit into a machine word)."}], "tags": [], "owner": {"reputation": 1790, "user_id": 3350784, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OTuvN.png?s=128&g=1", "display_name": "Yuuri", "link": "https://stackoverflow.com/users/3350784/yuuri"}, "is_accepted": false, "score": 5, "last_activity_date": 1441722785, "last_edit_date": 1441722785, "creation_date": 1441722467, "answer_id": 32460386, "question_id": 28729868, "link": "https://stackoverflow.com/questions/28729868/how-can-natural-numbers-be-represented-to-offer-constant-time-addition/32460386#32460386", "title": "How can natural numbers be represented to offer constant time addition?", "body": "<p>As far as I know, Idris (a dependently-typed purely functional language which is very close to Haskell) deals with this in a quite straightforward way. Compiler is aware of <code>Nat</code>s and <code>Fin</code>s (upper-bounded <code>Nat</code>s) and replaces them with machine integer types and operations whenever possible, so the resulting code is pretty effective. However, that's not true for custom types (even isomorphic ones) as well as for compilation stage (there were some code samples using <code>Nat</code>s for type checking which resulted in exponential growth in compile-time, I can provide them if needed).</p>\n\n<p>In case of Haskell, I think a similar compiler extension may be implemented. Another possibility is to make TH macros which would transform the code. Of course, both of options aren't easy.</p>\n"}, {"comments": [{"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1446365426, "post_id": 33456874, "comment_id": 54706767, "body": "@dfeuer Because each of them is of the magnitude of <i>(m-k)</i> bits, there are <i>2^(m-k)</i> such numbers, so we need <i>(m-k)</i> bits of information to distinguish them - we can&#39;t get beyond that. We could use some kind of compression and use less actual bits for some numbers, but then we&#39;d need more bits for other numbers. And since this needs to hold for any sum, <a href=\"http://www.netfunny.com/rhf/jokes/90q2/obvious.html\" rel=\"nofollow noreferrer\">obviously</a> the adversary can choose summands that have <i>(m-k)</i> bits or more."}], "tags": [], "owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "is_accepted": false, "score": 3, "last_activity_date": 1446327331, "last_edit_date": 1495541674, "creation_date": 1446327331, "answer_id": 33456874, "question_id": 28729868, "link": "https://stackoverflow.com/questions/28729868/how-can-natural-numbers-be-represented-to-offer-constant-time-addition/33456874#33456874", "title": "How can natural numbers be represented to offer constant time addition?", "body": "<p>We know that there are two \"extremal\" solutions for efficient addition of natural numbers:</p>\n\n<ol>\n<li>Memory efficient, the standard binary representation of natural numbers that uses <em>O(log n)</em> memory and requires <em>O(log n)</em> time for addition. (See also Chapter \"Binary Representations\" in <a href=\"https://www.cs.cmu.edu/~rwh/theses/okasaki.pdf\" rel=\"nofollow noreferrer\">the Okasaki's book</a>.)</li>\n<li><p>CPU efficient which use just <em>O(1)</em> time. (See Chapter \"Structural Abstraction\" in the book.) However, the solution uses <em>O(n)</em> memory as we'd represent natural number <em>n</em> as a list of <em>n</em> copies of <code>()</code>.</p>\n\n<p>I haven't done the actual calculations, but I believe for the <em>O(1)</em> numerical addition we won't need the full power of <em>O(1)</em> FIFO queues, it'd be enough to bootstrap standard list <code>[]</code> (LIFO) in the same way. If you're interested, I could try to elaborate on that.</p></li>\n</ol>\n\n<p>The problem with the CPU efficient solution is that we need to add some redundancy to the memory representation so that we can spare enough CPU time. In some cases, adding such a redundancy can be accomplished without compromising the memory size (like for <em>O(1)</em> increment/decrement operation). And if we allow arbitrary tree shapes, like in the CPU efficient solution with bootstrapped lists, there are simply <a href=\"https://stackoverflow.com/a/12531995/1333025\">too many tree shapes</a> to distinguish them in <em>O(log n)</em> memory.</p>\n\n<p>So <strong>the question</strong> is: Can we find just the right amount of redundancy so that sub-linear amount of memory is enough and with which we could achieve <em>O(1)</em> addition? I believe the answer is <strong>no</strong>:</p>\n\n<p>Let's have a representation+algorithm that has <em>O(1)</em> time addition. Let's then have a number of the magnitude of <em>m</em>-bits, which we compute as a sum of <em>2^k</em> numbers, each of them of the magnitude of <em>(m-k)</em>-bit. To represent each of those summands we need (regardless of the representation) minimum of <em>(m-k)</em> bits of memory, so at the beginning, we start with (at least) <em>(m-k) 2^k</em> bits of memory. Now at each of those <em>2^k</em> additions, we are allowed to preform a constant amount of operations, so we are able to process (and ideally remove) total of <em>C 2^k</em> bits. Therefore at the end, the lower bound for the number of bits we need to represent the outcome is <em>(m-k-C) 2^k</em> bits. Since <em>k</em> can be chosen arbitrarily, our adversary can set <em>k=m-C-1</em>, which means the total sum will be represented with at least <em>2^(m-C-1) = 2^m/2^(C+1) \u2208 O(2^m)</em> bits. So a natural number <em>n</em> will always need <em>O(n)</em> bits of memory!</p>\n"}], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 868, "favorite_count": 10, "answer_count": 3, "score": 34, "last_activity_date": 1446327331, "creation_date": 1424899382, "last_edit_date": 1592644375, "question_id": 28729868, "link": "https://stackoverflow.com/questions/28729868/how-can-natural-numbers-be-represented-to-offer-constant-time-addition", "title": "How can natural numbers be represented to offer constant time addition?", "body": "<p><a href=\"https://stackoverflow.com/a/28711901/1477667\">Cirdec's answer</a> to a largely unrelated question made me wonder how best to represent natural numbers with constant-time addition, subtraction by one, and testing for zero.</p>\n<h3>Why Peano arithmetic isn't good enough:</h3>\n<p>Suppose we use</p>\n<pre><code>data Nat = Z | S Nat\n</code></pre>\n<p>Then we can write</p>\n<pre><code>Z + n = n\nS m + n = S(m+n)\n</code></pre>\n<p>We can calculate <code>m+n</code> in O(1) time by placing <code>m-r</code> debits (for some constant <code>r</code>), one on each <code>S</code> constructor added onto <code>n</code>. To get O(1) <code>isZero</code>, we need to be sure to have at most <code>p</code> debits per <code>S</code> constructor, for some constant <code>p</code>. This works great if we calculate <code>a + (b + (c+...))</code>, but it falls apart if we calculate <code>((...+b)+c)+d</code>. The trouble is that the debits stack up on the front end.</p>\n<h3>One option</h3>\n<p>The easy way out is to just use catenable lists, such as the ones Okasaki describes, directly. There are two problems:</p>\n<ol>\n<li><p>O(n) space is not really ideal.</p>\n</li>\n<li><p>It's not entirely clear (at least to me) that the complexity of bootstrapped queues is necessary when we don't care about order the way we would for lists.</p>\n</li>\n</ol>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 33184, "user_id": 247623, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/bb9e67348d3e0e93ef12dd97c41a6c22?s=128&d=identicon&r=PG&f=1", "display_name": "Erik Kaplun", "link": "https://stackoverflow.com/users/247623/erik-kaplun"}, "edited": false, "score": 0, "creation_date": 1424984157, "post_id": 28729744, "comment_id": 45787095, "body": "@ErikAllik: Uh, not quite sure. I just pick stuff up as I go along. You could take a look at the paper <a href=\"http://web.cecs.pdx.edu/~mpj/thih/thih.pdf\" rel=\"nofollow noreferrer\">Typing Haskell in Haskell</a> and it might also be covered in <i>Types and Programming Languages</i> (TAPL) along with a ton of other material."}], "tags": [], "owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "is_accepted": false, "score": 12, "last_activity_date": 1424900825, "last_edit_date": 1424900825, "creation_date": 1424898901, "answer_id": 28729744, "question_id": 28729288, "link": "https://stackoverflow.com/questions/28729288/why-is-this-eta-expansion-necessary/28729744#28729744", "title": "Why is this eta expansion necessary?", "body": "<p><code>fComp</code> has a higher-rank type and type inference for higher-rank types is very limited. It might be a little easier to understand (but much longer!) if we expand the type synonym:</p>\n\n<pre><code>fComp :: forall f a b c. Functor f =&gt; \n                (forall f1. Functor f1 =&gt; f1 b -&gt; f1 c) -&gt;\n                (forall f2. Functor f2 =&gt; f2 a -&gt; f2 b) -&gt;\n                (f a -&gt; f c)\n</code></pre>\n\n<p>The higher-rank types of <code>f</code> and <code>f'</code> are specified explicitly in this type signature. This lets the type inference start already knowing the types of <code>f</code> and <code>f'</code> and so being able to unify them with the type of <code>.</code>. </p>\n\n<p>However, if you get rid of <code>f</code> and <code>f'</code>, the type that <code>.</code> has to take is not known. Unfortunately, the system can't infer higher-rank types like this, so you get a type error.</p>\n\n<p>In essence, the compiler can't create higher-rank types to fill unknowns during type inference and has to rely on programmer annotations and we need both the name (<code>f</code> and <code>f'</code>) <em>and</em> the type signature to get those annotations.</p>\n\n<p>An easier example to understand would be a higher-rank <code>id</code> function:</p>\n\n<pre><code>myId :: (forall a. a) -&gt; (forall b. b)\n</code></pre>\n\n<p>The definition <code>myId x = id x</code> compiles, but <code>myId = id</code> gives the following error:</p>\n\n<pre><code>/home/tikhon/Documents/so/eta-expansion-needed.hs:11:8:\n    Couldn't match type \u2018b\u2019 with \u2018forall a. a\u2019\n      \u2018b\u2019 is a rigid type variable bound by\n          the type signature for myId :: (forall a. a) -&gt; b\n          at /home/tikhon/Documents/so/eta-expansion-needed.hs:11:1\n    Expected type: (forall a. a) -&gt; b\n      Actual type: b -&gt; b\n    In the expression: id\n    In an equation for \u2018myId\u2019: myId = id\nFailed, modules loaded: none.\n</code></pre>\n\n<p>(Keep in mind that <code>forall b. (forall a. a) -&gt; b</code> is the same as <code>(forall a. a) -&gt; (forall b. b)</code>.)</p>\n"}, {"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 33184, "user_id": 247623, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/bb9e67348d3e0e93ef12dd97c41a6c22?s=128&d=identicon&r=PG&f=1", "display_name": "Erik Kaplun", "link": "https://stackoverflow.com/users/247623/erik-kaplun"}, "edited": false, "score": 1, "creation_date": 1424978996, "post_id": 28729985, "comment_id": 45784161, "body": "@ErikAllik Pierce&#39;s Types and programming languages is a nice one. On a more practical side, you can also get the general ideas by learning to program in a dependently-typed language like Agda or Coq. Also, you can just use Haskell and ask GHC to dump the Core intermediate representation of your program, where you can see all the type level stuff that GHC added during inference. Practice of course will not tell you everything a theory book can, but can greatly help in building some intuition (at least that was the case for me)."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 6, "last_activity_date": 1424900421, "last_edit_date": 1424900421, "creation_date": 1424899793, "answer_id": 28729985, "question_id": 28729288, "link": "https://stackoverflow.com/questions/28729288/why-is-this-eta-expansion-necessary/28729985#28729985", "title": "Why is this eta expansion necessary?", "body": "<p>Let me rewrite the example using a System-F-like notation, wherein we pass types as well. Below, <code>\\\\</code> stands for type-abstraction (big lambda), as well as dictionary abstraction. Also, <code>@</code> stands for type/dictionary application.</p>\n\n<p>Before doing that, recall the type of <code>(.)</code>:</p>\n\n<pre><code>(.) :: forall a b c . (b -&gt; a) -&gt; (c -&gt; b) -&gt; (c -&gt; a)\n</code></pre>\n\n<p>Here's the annotated code (beware, not for the faint of heart):</p>\n\n<pre><code>fComp :: F b c -&gt; F a b -&gt; F a c\nfComp (f :: forall f1. Functor f1 =&gt; f1 b -&gt; f1 c)\n      (f':: forall f2. Functor f2 =&gt; f2 a -&gt; f2 b) \n   = \\\\ ff :: (* -&gt; *) -&gt;\n     \\\\ ffD :: Functor ff -&gt;\n     ((.) @ (ff c) @ (ff b) @ (ff a))   -- instantiated composition\n     (f  @ ff @ ffD)                    -- first argument of (.)\n     (f' @ ff @ ffD)                    -- second argument of (.)\n</code></pre>\n\n<p>(Above I pretended <code>a</code>,<code>b</code>,<code>c</code> are type constants to avoid further type-level lambdas.)</p>\n\n<p>The important parts:</p>\n\n<ul>\n<li><code>f</code> and <code>f'</code> are being used at specific types. That is they are being applied to type-level arguments before being fed to <code>(.)</code>.</li>\n<li><code>(.)</code> is being applied at the type level to types (<code>ff c</code>, etc) which are not the polytypes of <code>f</code> and <code>f'</code></li>\n</ul>\n\n<p>As you can see, the original code is far from being trivial. Type inference is able to add the needed type-level lambdas and applications. After those are added, we can not simply eta contract <code>fComp</code> anymore.</p>\n\n<p>In the pointfree variant, type inference would need to do more than in the pointful case. While the first argument of <code>fComp</code> is of type <code>F a b</code>, the first argument of <code>(.)</code> must be of the form <code>x -&gt; y</code>, which does not unify for <code>F a b = forall g . ...</code>. \nIndeed, there's no way to successfully solve the typing attempt below:</p>\n\n<pre><code>fComp :: F b c -&gt; F a b -&gt; F a c\nfComp \n   = \\\\ ff :: (* -&gt; *) -&gt;\n     \\\\ ffD :: Functor ff -&gt;\n     ((.) @ ???a @ ???b @ ???c)\n</code></pre>\n\n<p>Above there's no <code>???a</code>,... that can lead to the wanted type.</p>\n\n<p>The only possibility would be to instantiate the <code>forall</code>-quantified variables hidden in the <code>F x y</code> types, but to do that we need a <em>point</em>. The compiler might eta-expand that code for you so that points appear and so can be instantiated, theoretically speaking, but in practice will not.</p>\n\n<p>(Also, eta expansion is not always valid in Haskell: e.g. <code>seq (undefined::()-&gt;()) 3</code> loops while <code>seq (\\x-&gt;(undefined::()-&gt;()) x) 3</code> returns <code>3</code>).</p>\n"}], "owner": {"reputation": 1246, "user_id": 238624, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?s=128&d=identicon&r=PG", "display_name": "Alan O&#39;Donnell", "link": "https://stackoverflow.com/users/238624/alan-odonnell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 529, "favorite_count": 1, "answer_count": 2, "score": 21, "last_activity_date": 1424900825, "creation_date": 1424897349, "question_id": 28729288, "link": "https://stackoverflow.com/questions/28729288/why-is-this-eta-expansion-necessary", "title": "Why is this eta expansion necessary?", "body": "<p>Can someone help me understand this/point me to some reading materials? The following works fine:</p>\n\n<pre><code>type F a b = Functor f =&gt; f a -&gt; f b\nfComp :: F b c -&gt; F a b -&gt; F a c\nfComp f f' = f . f'\n</code></pre>\n\n<p>But if I write <code>fComp = (.)</code> instead, the type checker complains:</p>\n\n<pre><code>Couldn't match type \u2018b0 -&gt; f c\u2019\n              with \u2018forall (f1 :: * -&gt; *). Functor f1 =&gt; f1 b -&gt; f1 c\u2019\n</code></pre>\n\n<p>(This specific example isn't particularly useful; I'm just trying to shrink an example that came up while studying lenses.)</p>\n"}, {"tags": ["haskell", "cabal"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1424880619, "post_id": 28723186, "comment_id": 45734467, "body": "This is a well-known and long-standing issue, a question has been asked on SO (it&#39;s a dupe), and some workarounds exist."}, {"owner": {"reputation": 38848, "user_id": 232417, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/004e78a7e0aaf9f1eb0009668cd84b1a?s=128&d=identicon&r=PG", "display_name": "dan", "link": "https://stackoverflow.com/users/232417/dan"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 1, "creation_date": 1424881076, "post_id": 28723186, "comment_id": 45734868, "body": "@BartekBanachewicz I&#39;ve seen this question before: <a href=\"http://stackoverflow.com/questions/10163604/how-to-reduce-duplication-in-the-build-depends-fields-of-a-cabal-file?rq=1\" title=\"how to reduce duplication in the build depends fields of a cabal file\">stackoverflow.com/questions/10163604/&hellip;</a> which you may be referring to, but my question is different."}], "answers": [{"tags": [], "owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "is_accepted": false, "score": 3, "last_activity_date": 1424884275, "last_edit_date": 1495540343, "creation_date": 1424884275, "answer_id": 28725296, "question_id": 28723186, "link": "https://stackoverflow.com/questions/28723186/when-you-depend-on-a-cabal-package-it-seems-to-draw-in-dependencies-in-all-caba/28725296#28725296", "title": "When you depend on a cabal package, it seems to draw in dependencies in all cabal stanzas", "body": "<p>You can put <code>Buildable: False</code> to executable, and then build it explicitly when needed with <code>cabal build Foo</code>, or via flag (<code>cabal configure -fbuild-foo</code> or <code>-fbuild-executables</code>).</p>\n\n<p>Example that might be helpful: <a href=\"https://stackoverflow.com/questions/11745583/cabal-multiple-executables\">Cabal Multiple Executables</a></p>\n"}], "owner": {"reputation": 38848, "user_id": 232417, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/004e78a7e0aaf9f1eb0009668cd84b1a?s=128&d=identicon&r=PG", "display_name": "dan", "link": "https://stackoverflow.com/users/232417/dan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "answer_count": 1, "score": 8, "last_activity_date": 1424884275, "creation_date": 1424878829, "last_edit_date": 1424879230, "question_id": 28723186, "link": "https://stackoverflow.com/questions/28723186/when-you-depend-on-a-cabal-package-it-seems-to-draw-in-dependencies-in-all-caba", "title": "When you depend on a cabal package, it seems to draw in dependencies in all cabal stanzas", "body": "<p>I made my own cabal package (let's call it package-1) with two targets, a library and a executable. The library section has a build-depends list, and the executable has another build-depends list that is much larger.</p>\n\n<p>Now I create package-2, which lists package-1 in its build-depends section. I would like to only bring in the dependencies listed in the <em>library</em> target of package-1. But it seems to bring in <em>all</em> the dependencies listed in all the sections of package-1, including the dependencies for the executable target. </p>\n\n<p>Is there any way to prune the dependency graph to just the library inside package-1, or do I have to resort to breaking out that library target into a separate standalone package?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 16545, "user_id": 1305516, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/fGuXb.png?s=128&g=1", "display_name": "David says Reinstate Monica", "link": "https://stackoverflow.com/users/1305516/david-says-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1424877440, "post_id": 28722577, "comment_id": 45731925, "body": "possible duplicate of <a href=\"http://stackoverflow.com/questions/1012573/getting-started-with-haskell\">Getting started with Haskell</a>"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424880786, "post_id": 28722577, "comment_id": 45734601, "body": "There exists the function <code>toInteger</code> that can convert any <code>Integral a =&gt; a</code> value to an <code>Integer</code>, but there is no way to convert any possible type to an <code>Integer</code>.  You could write your own <code>ToInteger</code> typeclass, then add implementations for <code>Int</code>, <code>Bool</code>, <code>Float</code>, <code>Double</code>, etc, but no such thing exists already in Haskell."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 3, "creation_date": 1424880877, "post_id": 28722577, "comment_id": 45734694, "body": "What should <code>f my_function</code> return? What about <code>f [1,2,3]</code>? What does <code>f (print 5)</code> return?"}], "answers": [{"tags": [], "owner": {"reputation": 1650, "user_id": 1292223, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98458fe74447603906e51a6f74039c4a?s=128&d=identicon&r=PG", "display_name": "kini", "link": "https://stackoverflow.com/users/1292223/kini"}, "is_accepted": true, "score": 14, "last_activity_date": 1424878540, "creation_date": 1424878540, "answer_id": 28723068, "question_id": 28722577, "link": "https://stackoverflow.com/questions/28722577/haskell-function-returning-integer/28723068#28723068", "title": "Haskell function returning Integer", "body": "<p>The only functions of type <code>a -&gt; Integer</code> will be constant functions. This is a <em>free theorem</em> guaranteed by the parametricity of the type (modulo some fudging because of some unsound corners of Haskell).</p>\n\n<p>Here's an example of such a function:</p>\n\n<pre><code>f :: a -&gt; Integer\nf _ = 1\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424924525, "post_id": 28725849, "comment_id": 45754048, "body": "Note that this will even break for <code>Integer</code> itself if the numbers are larger than what fits in an <code>Int</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424925159, "post_id": 28725849, "comment_id": 45754190, "body": "@&#216;rjanJohansen, what part of inadvisable ugly hack didn&#39;t you understand :-? You can &quot;fix&quot; that with a rewrite rule, probably, or some horrifying <code>OverlappingInstances</code> trick."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424926200, "post_id": 28725849, "comment_id": 45754462, "body": "I understood perfectly, I just thought it needed a bit of evidence. Incidentally I recall someone recently complaining about <code>realToFrac :: Double -&gt; Double</code>, which <i>does</i> have a rewrite rule which changes semantics depending on your optimization level."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424928132, "post_id": 28725849, "comment_id": 45755011, "body": "@&#216;rjanJohansen, I tend to see all such functions and their rewrite rules (including even the ubiquitous <code>fromIntegral</code>) as shady."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1424885848, "creation_date": 1424885848, "answer_id": 28725849, "question_id": 28722577, "link": "https://stackoverflow.com/questions/28722577/haskell-function-returning-integer/28725849#28725849", "title": "Haskell function returning Integer", "body": "<p>There's no way to do this in general, and it's not at all advisable, but the cases you mention, and some others, can be obtained using an ugly hack:</p>\n\n<pre><code>f :: Enum n =&gt; n -&gt; Integer\nf x = toInteger (fromEnum x)\n</code></pre>\n\n<p>As a general rule, it's best to simply pretend that the <code>Enum</code> class does not exist, because it is extremely badly designed and some of its instances are badly behaved.</p>\n"}], "owner": {"reputation": 7, "user_id": 4569708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/73094b620752228095796105118a8d1e?s=128&d=identicon&r=PG&f=1", "display_name": "lee1234567890", "link": "https://stackoverflow.com/users/4569708/lee1234567890"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1794, "favorite_count": 0, "accepted_answer_id": 28723068, "answer_count": 2, "score": -4, "last_activity_date": 1424885848, "creation_date": 1424877208, "question_id": 28722577, "link": "https://stackoverflow.com/questions/28722577/haskell-function-returning-integer", "title": "Haskell function returning Integer", "body": "<p>How do I write a function that returns everything to Integer?</p>\n\n<p>i.e</p>\n\n<p><code>f True = 1</code><br>\n <code>f False =0</code><br>\n <code>f 1 = 1</code><br>\n <code>f 2.30 = 2</code>   </p>\n"}, {"tags": ["algorithm", "haskell", "artificial-intelligence", "traveling-salesman"], "comments": [{"owner": {"reputation": 2256, "user_id": 1272233, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07cc66e13f0eb3901c15c9580aa1a78b?s=128&d=identicon&r=PG", "display_name": "Doval", "link": "https://stackoverflow.com/users/1272233/doval"}, "edited": false, "score": 2, "creation_date": 1424877623, "post_id": 28727973, "comment_id": 45742191, "body": "If you think you posted something in the wrong place, ask the moderators to move it. Cross-posting is frowned upon, because it splits up the answers."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 2, "creation_date": 1424893907, "post_id": 28727973, "comment_id": 45742923, "body": "A tip I can provide is to clean up your code first.  You have a lot of redundant parentheses (<code>(read (head s)) :: Int</code> could be replaced with <code>read $ head s</code>, this isn&#39;t lisp and the type signature is redundant). You should convert your directions into a data type instead of using strings. Your code is marching off the right side of the page, break it up a bit. Introduce some new functions, in <code>where</code> blocks in needed, to make your code easier to understand. Doing this will help you just as much as others understand your code.  If you understand your code better, you&#39;ll find problems easier."}, {"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 3, "creation_date": 1424894158, "post_id": 28727973, "comment_id": 45743071, "body": "Can you provide a sample board?"}, {"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 2, "creation_date": 1424895148, "post_id": 28727973, "comment_id": 45743587, "body": "And can you give a concrete example of what is not working?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424905883, "post_id": 28727973, "comment_id": 45749092, "body": "Following up on bheklilr&#39;s advice, you should also use a datatype like <code>data Square=Clean|Dirty</code>. And document what each function does. And explain somewhere how a board is represented and why you chose that representation. And link to the original source of the problem. And explain the problem better. As it stands, your code is pretty much unreadable."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1424929781, "post_id": 28727973, "comment_id": 45755507, "body": "@bheklir Thanks for your suggestions. I am new to haskell. I have commented and refactored the code, best to my ability. Please do have a look."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "reply_to_user": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1424929976, "post_id": 28727973, "comment_id": 45755573, "body": "@user5402 I have given one sample board. As this is online-problem i do not have the exact board. Also there are no right/wrong answers. just better answers for this problem."}], "answers": [{"comments": [{"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1425385461, "post_id": 28771909, "comment_id": 45933157, "body": "i am getting <code>*Main&gt; findBestMove (1,10) [(6,8),(9,7),(9,4),(4,10),(4,6),(7,10),(5,7),(2,4),(8,8),(6,&zwnj;&#8203;5)] 0                     (35,(4,10)) *Main&gt; findBestMove (1,10) [(6,8),(9,7),(9,4),(4,10),(4,6),(7,10),(5,7),(2,4),(8,8),(6,&zwnj;&#8203;5)] 1 (34,(2,4)) *Main&gt; </code> on ghci.  i.e 35 cost for level 0 and 34 for level 1."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1425385593, "post_id": 28771909, "comment_id": 45933232, "body": "Nevertheless, you are right about taking only first &quot;random&quot; (dependent on sorting) point is leading to poor results.."}], "tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": true, "score": 1, "last_activity_date": 1425061878, "creation_date": 1425061878, "answer_id": 28771909, "question_id": 28727973, "link": "https://stackoverflow.com/questions/28727973/traversing-game-state-space-more-search-leads-to-bad-results/28771909#28771909", "title": "Traversing game state space : more search leads to bad results", "body": "<p>After a lot of work I found an example where the best path determined\nby <code>findBestMove</code> at level 1 returns a worse path than when called with\nlevel set to 0:</p>\n\n<pre><code> points = [(6,8),(9,7),(9,4),(4,10),(4,6),(7,10),(5,7),(2,4),(8,8),(6,5)]\n start: (1,10)\n\n  level = 0:\n    cost: 31\n    path: [(1,10),(4,10),(7,10),(5,7),(6,8),(8,8),(9,7),(9,4),(6,5),(4,6),(2,4)]\n\n  level = 1:\n    cost: 34\n    path: [(1,10),(2,4),(6,5),(6,8),(5,7),(4,6),(4,10),(7,10),(8,8),(9,7),(9,4)]\n</code></pre>\n\n<p>The problem is that <code>playGame</code> explores only one of the best possible moves.\nI've found that your algorithm becames more stable if you explore all of the\nbest possible moves like this:</p>\n\n<pre><code> greedy start [] = 0\n greedy start points =\n   let sorted@((d0,_):_) = sort [ (dist start x, x) | x &lt;- points ]\n       nexts = map snd $ takeWhile (\\(d,_) -&gt; d == d0) sorted\n   in d0 + minimum [ greedy n (delete n points)  | n &lt;- nexts ]\n</code></pre>\n\n<p>Here <code>greedy</code> combines <code>findCost</code> and <code>playGame</code>. By only looking at the\nfirst move in the sorted list <code>playGame</code> is dependent on the sorting algorithm\nand the ordering of the points.</p>\n\n<p>You can also write <code>bestMove</code> like this:</p>\n\n<pre><code> bestMove _ start [] = (0,start)\n bestMove depth start points\n   | depth == 0 = minimum [ (d0+d,x) | x &lt;- points,\n                              let d0 = dist start x,\n                              let d = greedy x (delete x points) ]\n   | otherwise  = minimum [ (d0+d,x) | x &lt;- points,\n                              let d0 = dist start x,\n                              let (d,_) = bestMove (depth-1) x (delete x points  ) ]\n</code></pre>\n\n<p>and this highlights the symmetry between the two cases more clearly.</p>\n\n<p>Here is the code I used to find and display the best path for the above board: \n<a href=\"http://lpaste.net/121294\" rel=\"nofollow\">http://lpaste.net/121294</a> To use it just put your code in the module named <code>Ashish</code>.</p>\n\n<p>Finally my instincts tells me that your approach may not be a sound way\nto solve the problem. What you are doing is similar to the A*-algorithm\nwith <code>playGame</code> playing the role of the heuristic function. However,\nin order for A* to work, the heuristic function should not over estimate\nthe shortest distance. But <code>playGame</code> always gives you an upperbound on\nthe shortest distance. Anyway - it's something to consider.</p>\n"}], "migrated_from": {"other_site": {"aliases": ["http://programmer.stackexchange.com", "http://programmers.stackexchange.com"], "markdown_extensions": ["Prettify"], "launch_date": 1292524346, "open_beta_date": 1283972400, "closed_beta_date": 1283367600, "site_state": "normal", "high_resolution_icon_url": "https://cdn.sstatic.net/Sites/softwareengineering/Img/apple-touch-icon@2.png", "twitter_account": "StackSoftEng", "favicon_url": "https://cdn.sstatic.net/Sites/softwareengineering/Img/favicon.ico", "icon_url": "https://cdn.sstatic.net/Sites/softwareengineering/Img/apple-touch-icon.png", "audience": "professionals, academics, and students working within the systems development life cycle", "site_url": "https://softwareengineering.stackexchange.com", "api_site_parameter": "softwareengineering", "logo_url": "https://cdn.sstatic.net/Sites/softwareengineering/Img/logo.png", "name": "Software Engineering", "site_type": "main_site"}, "on_date": 1424892774, "question_id": 274409}, "owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 213, "favorite_count": 0, "accepted_answer_id": 28771909, "answer_count": 1, "score": 1, "last_activity_date": 1425061878, "creation_date": 1424865857, "last_edit_date": 1492087236, "question_id": 28727973, "link": "https://stackoverflow.com/questions/28727973/traversing-game-state-space-more-search-leads-to-bad-results", "title": "Traversing game state space : more search leads to bad results", "body": "<p>I am cross posting this question from <a href=\"https://codereview.stackexchange.com/questions/82547/traversing-game-state-space-more-search-leads-to-bad-results\">codereview</a> as i found that it to be non-responsive.</p>\n\n<p>This problem is avaiable at <a href=\"https://www.hackerrank.com/challenges/botcleanlarge\" rel=\"nofollow noreferrer\">hackerrank ai</a>. I am not asking for solutions but trying to find what is wrong with my strategy or code.</p>\n\n<p>I am trying to solve a problem which i think is <code>TSP on a 2-D grid</code>. So, i am trying to get the best result that i can. However, looking ahead 1 step is producing better results than looking ahead 2 steps. </p>\n\n<p>The problem is that i have to clean the dirty blocks on a 2-D grid in minimum number of movements either <code>UP, DOWN, LEFT, RIGHT, CLEAN</code>.</p>\n\n<p>Another important thing is that i make a move and then process is <code>restarted</code> with the new state of grid and my new position. so i have to run the algorithm again. This also means that i have to avoid being in loop, which is easy to avoid in case of single process, but need to be guaranteed by the algorithm in case of multiple instances of the process.</p>\n\n<p>In short, i have to make only <code>next_move</code> in my process.</p>\n\n<p>so basic strategy is to find the closest dirty cell to my current position. </p>\n\n<p>To look up ahead 1 step, i would do : for each dirty-cell and find the closest dirty cell to the taken dirty-cell. For 2 step, for every dirty-cell, do a 1 step lookup and find the best move. Similarly for the multiple steps.</p>\n\n<p>However, i am getting higher score when i doing only 1 step lookup but less score for 2 steps lookup. score is calculated by <code>(200 - steps_taken)</code>. So, i think something is wrong in my code/strategy. </p>\n\n<p><strong>Input Format</strong> :</p>\n\n<p><code>b</code> represents the bot in grid. <code>-</code> is the clean cell. <code>d</code> is dirty cell.</p>\n\n<p>First Line is pair of ints of bot position. This make <code>b</code> in grid redundant. If bot is currently standing on a dirty cell, <code>d</code> would be present on that cell in grid. </p>\n\n<p>Second Line is dimension of grid.</p>\n\n<p>Third input is grid in row form. Please see the sample input below.</p>\n\n<p><strong>My Haskell code is</strong> :</p>\n\n<pre><code>module Main where\nimport Data.List \nimport Data.Function (on)\nimport Data.Ord\n\n-- slits up a string \n-- ** only used in IO. \nsplit sep = takeWhile (not . null) . unfoldr (Just . span (/= sep) . dropWhile (== sep))\n-- ** only used in IO\ngetList :: Int -&gt; IO [String]\ngetList n = if n==0 then return [] else do i &lt;- getLine; is &lt;- getList(n-1); return (i:is)\n\n-- find positions of all dirty cells in the board\ngetAllDirtyCells :: (Int, Int) -&gt; [String] -&gt; [(Int, Int)]\ngetAllDirtyCells (h, w) board = [(x, y) | x &lt;- [0..(h-1)], y &lt;- [0..(w - 1)]\n                               , ((board !! x) !! y) == 'd']\n\n-- finally get the direction to print ;\n-- first argument is my-position and second arg is next-position.\ngetDir :: (Int, Int) -&gt; (Int, Int) -&gt; String\ngetDir (x, y) (a, b) | a == x &amp;&amp; y == b = \"CLEAN\"\n                     | a &lt; x = \"UP\"\n                     | x == a &amp;&amp; y &lt; b = \"RIGHT\"\n                     | x == a = \"LEFT\"\n                     | otherwise = \"DOWN\"\n\n-- only used in IO for converting strin gto coordinate.\ngetPos :: String -&gt; (Int, Int)\ngetPos pos = let a = map (\\x -&gt; read x :: Int) (words pos)\n             in ((a !! 0) , (a !! 1))\n\n\n-- manhattan Distance :  sum of difference of x and y coordinates\nmanhattanDis :: (Int, Int) -&gt; (Int, Int) -&gt; Int\nmanhattanDis (a, b) (x, y) = (abs (a - x) + (abs (b - y)))\n\n-- sort the positions from (botX, botY) position on manhattan-distance.\n-- does not returns the cost.\ngetSortedPos :: (Int, Int) -&gt; [(Int, Int)] -&gt; [(Int, Int)]\ngetSortedPos (botX, botY) points = map (\\x -&gt; (snd x)) $ \n                                   sortBy (comparing fst)  -- compare on the basis of cost.\n                                              [(cost, (a, b)) | \n                                                     (a, b) &lt;- points, \n                                                     cost &lt;- [manhattanDis (a,b) (botX, botY)]]\n-- exclude the point `v` from the list `p`\nexcludePoint :: (Ord a) =&gt; [a] -&gt; a -&gt; [a]\nexcludePoint [] _ = []\nexcludePoint p v = [x | x &lt;- p , x /= v]\n\n-- playGame uses the nearest-node-policy. \n-- we start playing game when we are not going more deep. \n-- more about that in findBestMove\n-- game is to reduce the nodes to one node with the total cost ;\n-- reduction : take the next shortest node from the current-node.\nplayGame :: (Int, Int) -&gt; [(Int, Int)] -&gt; [(Int, Int)]\nplayGame pos [] = [pos]\nplayGame startPos points = let nextPos = (head (getSortedPos startPos points))\n                           in (nextPos : playGame nextPos (excludePoint points nextPos))\n\n-- sum up cost of all the points as they occur.\nfindCost :: [(Int, Int)] -&gt; Int\nfindCost seq = sum $ map (\\x -&gt; (manhattanDis (fst x) (snd x))) $ zip seq (tail seq)\n\n-- find the position which gives the smallest overall cost.\nsmallestCostMove :: [(Int, (Int, Int))] -&gt; (Int, (Int, Int))\nsmallestCostMove [] = (0, (100, 100))\nsmallestCostMove [x] = x\nsmallestCostMove (x:y:xs) | (fst x) &lt;= (fst y) = smallestCostMove (x : xs)\n                          | otherwise = smallestCostMove (y : xs)                      \n\n-- This is actual move-finder. It does the lookups upto `level` deep.\n-- from startpoint, take each point and think it as starting pos and play the game with it.\n-- this helps us in looking up one step.\n-- when level is 0, just use basic `playGame` strategy. \nfindBestMove :: (Int, Int) -&gt; [(Int, Int)] -&gt; Int -&gt; (Int, (Int, Int))\nfindBestMove startPos  points level \n                                    -- returns the move that takes the smallest cost i.e. total distances.\n                                    | level == 0 = smallestCostMove $ \n                                                     -- return pair of (cost-with-node-x-playGame, x)\n                                                     map (\\x -&gt; (findCost (startPos : (x : (playGame x (excludePoint points x)))), \n                                                                x)) \n                                                         points\n                                    | otherwise  = smallestCostMove $ \n                                                     map (\\x -&gt; \n                                                           -- return pair of (cost-with-node-x, x)\n                                                            ( (findCost (startPos : [x])) + \n                                                              -- findBestMove returns the pair of (cost, next-move-from-x)\n                                                              (fst (findBestMove x (excludePoint points x) (level - 1))),\n                                                             x)) \n                                                         points\n\n-- next_move is our entry point. go only 2 level deep for now, as it can be time-expensive.\nnext_move :: (Int, Int) -&gt; (Int, Int) -&gt; [String] -&gt;  String\nnext_move pos dim board = let boardPoints = (getAllDirtyCells dim board)\n                              numPoints = (length boardPoints)\n                              -- ** Important : This is my question :\n                              -- change the below `deep` to 1 for better results. \n                              deep = if (numPoints &gt; 3) \n                                     then 2 \n                                     else if (numPoints == 1) \n                                          then 1 \n                                          else (numPoints - 1)                                \n                          in if pos `elem` boardPoints \n                             then getDir pos pos\n                             else getDir pos $ snd $ findBestMove pos boardPoints deep\n\n\nmain :: IO()\nmain = do\n    -- Take input\n   b &lt;- getLine\n   i &lt;- getLine\n   -- bot contains (Int, Int) : my-coordinates. like (0,0)\n   let botPos = (read $ head s::Int,read $ head $ tail s::Int) where s = split (' ') b\n   -- dimOfBoard contains dimension of board like (5,5)\n   let dimOfBoard = (read $ head s::Int, read $ head $ tail s::Int) where s = split (' ') i\n   board &lt;- getList (fst dimOfBoard)\n   putStrLn $ next_move botPos dimOfBoard board\n</code></pre>\n\n<p>I control how <code>deep</code> i can go with variable <code>deep</code>. </p>\n\n<p>Sample board is :</p>\n\n<pre><code>0 0\n5 5\nb---d\n-d--d\n--dd-\n--d--\n----d\n</code></pre>\n\n<p>There can be three answers :</p>\n\n<p><strong>Output</strong> :</p>\n\n<pre><code>RIGHT or DOWN or LEFT\n</code></pre>\n\n<p><em>Important</em> : \nAgain new process would be called with <code>new board</code> and <code>my bot new position</code>, till i clean all the dirty cells.</p>\n\n<p>What am i doing wrong ?</p>\n"}, {"tags": ["haskell", "types", "binary-search-tree", "membership"], "comments": [{"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 1, "creation_date": 1424863569, "post_id": 28717757, "comment_id": 45722624, "body": "A <code>Node</code> isn&#39;t a type, it&#39;s a value. You want <code>member :: BinaryTree a -&gt; BinaryTree a -&gt; Bool</code>."}, {"owner": {"reputation": 135, "user_id": 3585010, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a243ced53e90238cb1451c9f22c00d40?s=128&d=identicon&r=PG&f=1", "display_name": "user3585010", "link": "https://stackoverflow.com/users/3585010/user3585010"}, "edited": false, "score": 2, "creation_date": 1424865226, "post_id": 28717757, "comment_id": 45723621, "body": "I think that should be  <code>member :: a -&gt; BinaryTree a -&gt; Bool</code>"}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "reply_to_user": {"reputation": 135, "user_id": 3585010, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a243ced53e90238cb1451c9f22c00d40?s=128&d=identicon&r=PG&f=1", "display_name": "user3585010", "link": "https://stackoverflow.com/users/3585010/user3585010"}, "edited": false, "score": 0, "creation_date": 1424865526, "post_id": 28717757, "comment_id": 45723789, "body": "@user3585010 Er, yeah, looks like you&#39;re right."}], "answers": [{"comments": [{"owner": {"reputation": 13393, "user_id": 1772334, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/36bbc437a85c7654d1841ad508c78acb?s=128&d=identicon&r=PG", "display_name": "Abraham P", "link": "https://stackoverflow.com/users/1772334/abraham-p"}, "edited": false, "score": 0, "creation_date": 1424864634, "post_id": 28717998, "comment_id": 45723260, "body": "No instance for (Eq a) arising from a use of \u2018==\u2019 etc.  Based on your answer and with a bit of googling:  member :: (Ord a) =&gt; a -&gt; BinaryTree a -&gt; Bool if you update your response to reflect that I&#39;ll accept it thanks!"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 13393, "user_id": 1772334, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/36bbc437a85c7654d1841ad508c78acb?s=128&d=identicon&r=PG", "display_name": "Abraham P", "link": "https://stackoverflow.com/users/1772334/abraham-p"}, "edited": false, "score": 0, "creation_date": 1424864822, "post_id": 28717998, "comment_id": 45723361, "body": "@AbrahamP those appear because of the implementation of <code>member</code>, but yeah, you have to add them."}, {"owner": {"reputation": 5734, "user_id": 394796, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aad9f3d17d0679d81841dc6d83a03ea3?s=128&d=identicon&r=PG", "display_name": "Cameron Martin", "link": "https://stackoverflow.com/users/394796/cameron-martin"}, "edited": false, "score": 0, "creation_date": 1424864845, "post_id": 28717998, "comment_id": 45723381, "body": "I&#39;m fairly new to haskell, but I think your first bullet point is slightly wrong. <code>Node</code> isn&#39;t a value of type <code>BinaryTree</code>, it is of type <code>a -&gt; BinaryTree a -&gt; BinaryTree a -&gt; BinaryTree a</code>."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 5734, "user_id": 394796, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aad9f3d17d0679d81841dc6d83a03ea3?s=128&d=identicon&r=PG", "display_name": "Cameron Martin", "link": "https://stackoverflow.com/users/394796/cameron-martin"}, "edited": false, "score": 0, "creation_date": 1424864898, "post_id": 28717998, "comment_id": 45723411, "body": "@CameronMartin Added a note to avoid further confusion."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 1, "creation_date": 1424865389, "post_id": 28717998, "comment_id": 45723700, "body": "<code>Ord</code> is a subclass of <code>Eq</code>, you don&#39;t need to specify the latter."}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": true, "score": 7, "last_activity_date": 1424864802, "last_edit_date": 1424864802, "creation_date": 1424864123, "answer_id": 28717998, "question_id": 28717757, "link": "https://stackoverflow.com/questions/28717757/what-is-wrong-with-my-function-testing-for-membership-in-a-binary-search-tree/28717998#28717998", "title": "What is wrong with my function testing for membership in a binary search tree?", "body": "<p><code>Node</code> isn't a type; it's a:</p>\n\n<ul>\n<li>value of type <code>BinaryTree</code> when fully applied</li>\n<li>a data constructor for such a value (<code>a -&gt; BinaryTree a -&gt; BinaryTree a -&gt; BinaryTree a</code>)</li>\n</ul>\n\n<p><em>Both really mean the same, but it can be helpful to realize the appearance in two different contexts, namely pattern matching and construction.</em></p>\n\n<p>Your <code>member</code> function most probably should take just the element to check for its existence:</p>\n\n<pre><code>member :: a -&gt; BinaryTree a -&gt; Bool\n</code></pre>\n\n<p>If you need additional constraints on the <code>a</code> (in the case of a binary tree, it's going to be <code>Ord</code> and <code>Eq</code>, most probably, you have to put them there too.</p>\n\n<pre><code>member :: (Ord a, Eq a) =&gt; a -&gt; BinaryTree a -&gt; Bool\n</code></pre>\n"}], "owner": {"reputation": 13393, "user_id": 1772334, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/36bbc437a85c7654d1841ad508c78acb?s=128&d=identicon&r=PG", "display_name": "Abraham P", "link": "https://stackoverflow.com/users/1772334/abraham-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1256, "favorite_count": 0, "accepted_answer_id": 28717998, "answer_count": 1, "score": 3, "last_activity_date": 1424870488, "creation_date": 1424863410, "last_edit_date": 1424870488, "question_id": 28717757, "link": "https://stackoverflow.com/questions/28717757/what-is-wrong-with-my-function-testing-for-membership-in-a-binary-search-tree", "title": "What is wrong with my function testing for membership in a binary search tree?", "body": "<p>Lets say I have the following datatype:</p>\n\n<p><code>data BinaryTree a = EmptyTree | Node a (BinaryTree a) (BinaryTree a) deriving (Eq, Ord, Show)</code></p>\n\n<p>and the following function </p>\n\n<pre><code>  member a EmptyTree = False\n  member a (Node x l r)\n    | a &lt; x = member a l\n    | a &gt; x = member a r\n    | a == x = True\n</code></pre>\n\n<p>This function works.</p>\n\n<p>examining the type of <code>Node</code>:</p>\n\n<pre><code>:t Node\nNode :: a -&gt; BinaryTree a -&gt; BinaryTree a -&gt; BinaryTree a\n</code></pre>\n\n<p>However, if the member function is given a signature:\n<code>member :: Node a -&gt; BinaryTree a -&gt; Bool</code></p>\n\n<p>(<code>Node</code> of type a and <code>BinaryTree</code> of type a producing a <code>Bool</code>)</p>\n\n<p>it errors out with:</p>\n\n<pre><code>Not in scope: type constructor or class \u2018Node\u2019\nA data constructor of that name is in scope; did you mean DataKinds?\n</code></pre>\n\n<p>Why is that? How can I define a function which accepts (and compares) Nodes and Trees of arbitrary types?</p>\n"}, {"tags": ["haskell", "types", "functional-programming", "type-conversion"], "comments": [{"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 0, "creation_date": 1424862691, "post_id": 28713994, "comment_id": 45722139, "body": "It compiles fine so long as you have an instance of <code>Convert C A</code> even if it is <code>instance Convert C A where convert _ = error &quot;Cannot convert from C to A&quot;</code>. Is there a reason you couldn&#39;t simply do that?"}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 2, "creation_date": 1424863018, "post_id": 28713994, "comment_id": 45722316, "body": "And if your concern is being type safe (and that this is a partial function), you could consider making it <code>maybeConvert :: a -&gt; Maybe b</code>"}], "answers": [{"comments": [{"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1424854004, "post_id": 28714548, "comment_id": 45716915, "body": "Hmm, thanks! I upvoted you since that is informative and correct, but I&#39;m specifically asking for a workaround."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1424854077, "post_id": 28714548, "comment_id": 45716940, "body": "@Viclib I added something about that, but I&#39;m not sure there is any workaround that allows you to use things as they are."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 7, "last_activity_date": 1424854009, "last_edit_date": 1424854009, "creation_date": 1424853658, "answer_id": 28714548, "question_id": 28713994, "link": "https://stackoverflow.com/questions/28713994/why-is-the-type-system-refusing-my-seemingly-valid-program/28714548#28714548", "title": "Why is the type system refusing my seemingly valid program?", "body": "<p>For that code to work, it would have to work with any argument of the same type. That is, if</p>\n\n<pre><code>get (DB B) :: A\n</code></pre>\n\n<p>works then</p>\n\n<pre><code>get anyValueOfTypeD :: A\n</code></pre>\n\n<p>has to work, including</p>\n\n<pre><code>get (DC C) :: A\n</code></pre>\n\n<p>which can not work because of a missing instance from C to A.</p>\n\n<p>The first line</p>\n\n<pre><code>get anyValueOfTypeD :: B\n</code></pre>\n\n<p>works because we do have all the three instances to convert A,B,C to B.</p>\n\n<p>I do not think there's any workaround that allows you to leave the type <code>D</code> as it is. If instead you can change that, you could use e.g.</p>\n\n<pre><code>data D a = DA a | DB a | DC a\n</code></pre>\n\n<p>(mind that it's quite different from the original), or even the GADT</p>\n\n<pre><code>data D x where\n  DA :: A -&gt; D A\n  DB :: B -&gt; D B\n  DC :: C -&gt; D C\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 2, "creation_date": 1424887643, "post_id": 28716020, "comment_id": 45739337, "body": "One day I wish I have that level of knowledge about the type system. Preferably before pi arrives! Brilliant. Thank you."}, {"owner": {"reputation": 26323, "user_id": 108915, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/a00512b12118ebd20d2043802b38bd02?s=128&d=identicon&r=PG", "display_name": "ziggystar", "link": "https://stackoverflow.com/users/108915/ziggystar"}, "edited": false, "score": 3, "creation_date": 1424892892, "post_id": 28716020, "comment_id": 45742264, "body": "One day I wish, I can write dry texts as entertaining as you do \u2013 not necessarily about Haskell\u2026"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 2, "creation_date": 1424936921, "post_id": 28716020, "comment_id": 45758077, "body": "Ahahaha &quot;D-pendent&quot; made my day. Absolutely brilliant answer."}, {"owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "edited": false, "score": 0, "creation_date": 1426563972, "post_id": 28716020, "comment_id": 46414099, "body": "On GHC 7.6, I wasn&#39;t able to use the <code>type family DInner (d :: D) :: * where</code> syntax, but instead had to convert it to using <code>type instance</code> syntax as specified on the Haskell Wiki page on <a href=\"https://wiki.haskell.org/GHC/Type_families#Type_instance_declarations\" rel=\"nofollow noreferrer\">type families</a>.  Closed type families appear to only be available in GHC 7.8+."}], "tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": true, "score": 70, "last_activity_date": 1424858445, "creation_date": 1424858445, "answer_id": 28716020, "question_id": 28713994, "link": "https://stackoverflow.com/questions/28713994/why-is-the-type-system-refusing-my-seemingly-valid-program/28716020#28716020", "title": "Why is the type system refusing my seemingly valid program?", "body": "<p>If your program <em>really</em> seemed valid to you, then you would be able to write the type of <code>get</code> that does the job you want in Haskell, not in handwave. Let me help you improve your handwave and uncover the reason you are asking for the moon on a stick.</p>\n\n<blockquote>\n  <p>What I want to express is: <code>get :: (Convert a_contained_by_D b) =&gt; D -&gt; b</code>, which seems impossible.</p>\n</blockquote>\n\n<p>As stated, that's not quite as precise as you would need. Indeed, it's what Haskell gives you now, in that</p>\n\n<pre><code>get :: (Convert A b, Convert B b, Convert C b) =&gt; D -&gt; b\n</code></pre>\n\n<p>any <code>a</code> which can be contained by <code>D</code> is required, one at a time, to be convertible to that <code>b</code>. And that's why you're getting classic sysadmin logic: no <code>D</code> is allowed to be gotten unless they all can <code>b</code>.</p>\n\n<p>The problem is that you need to know the status not of the type which might be contained in <em>any</em> old <code>D</code>, but rather the type contained in the particular <code>D</code> that you receive as the input. Right? You want</p>\n\n<pre><code>print (get (DB B) :: A)  -- this to work\nprint (get (DC C) :: A)  -- this to fail\n</code></pre>\n\n<p>but <code>DB B</code> and <code>DC C</code> are just two different elements of <code>D</code>, and as far as the Haskell type system is concerned, within each type <strong>everything different is the same</strong>. If you want to discriminate between elements of <code>D</code>, then you need a <code>D</code>-pendent type. Here's how I'd write it in handwave.</p>\n\n<pre><code>DInner :: D -&gt; *\nDInner (DA a) = A\nDInner (DB b) = B\nDInner (DC c) = C\n\nget :: forall x. pi (d :: D) -&gt; (Convert (DInner d) x) =&gt; x\nget (DA x) = convert x\nget (DB x) = convert x\nget (DC x) = convert x\n</code></pre>\n\n<p>where <code>pi</code> is the binding form for data which are passed at run time (unlike <code>forall</code>) but on which types may depend (unlike <code>-&gt;</code>). Now the constraint is talking not about arbitrary <code>D</code>s but the very <code>d :: D</code> in your hand, and the constraint can compute exactly what is needed by inspecting its <code>DInner</code>.</p>\n\n<p>There is nothing you can say that will make it go away but my <code>pi</code>.</p>\n\n<p>Sadly, whilst <code>pi</code> is rapidly descending from the sky, it has not yet landed. None the less, unlike the moon, it can be reached with a stick. No doubt you will complain that I am changing the setup, but really I am just translating your program from Haskell in approximately 2017 to Haskell in 2015. You'll <code>get</code> it back, one day, with the very type I handwaved.</p>\n\n<p>There is nothing you can say, but you can <em>sing</em>.</p>\n\n<p>Step 1. Switch on <code>DataKinds</code> and <code>KindSignatures</code> and build the singletons for your types (or get Richard Eisenberg to do it for you).</p>\n\n<pre><code>data A = A deriving Show\ndata Aey :: A -&gt; * where  -- think of \"-ey\" as an adjectival suffix\n  Aey :: Aey 'A           -- as in \"tomatoey\"\n\ndata B = B deriving Show\ndata Bey :: B -&gt; * where\n  Bey :: Bey 'B\n\ndata C = C deriving Show\ndata Cey :: C -&gt; * where\n  Cey :: Cey 'C\n\ndata D = DA A | DB B | DC C deriving Show\ndata Dey :: D -&gt; * where\n  DAey :: Aey a -&gt; Dey (DA a)\n  DBey :: Bey b -&gt; Dey (DB b)\n  DCey :: Cey c -&gt; Dey (DC c)\n</code></pre>\n\n<p>The idea is (i) that datatypes become kinds, and (ii) that singletons characterize the type-level data which have a run time presentation. So type level <code>DA a</code> exists at run time provided <code>a</code> does, etc.</p>\n\n<p>Step 2. Guess who's coming to <code>DInner</code>. Switch on <code>TypeFamilies</code>.</p>\n\n<pre><code>type family DInner (d :: D) :: * where\n  DInner (DA a) = A\n  DInner (DB b) = B\n  DInner (DC c) = C\n</code></pre>\n\n<p>Step 3. Get you some <code>RankNTypes</code>, and now you can write</p>\n\n<pre><code>get :: forall x. forall d. Dey d -&gt; (Convert (DInner d) x) =&gt; x\n--               ^^^^^^^^^^^^^^^^^^\n-- this is a plausible fake of pi (d :: D) -&gt;\n</code></pre>\n\n<p>Step 4. Try to write <code>get</code> and screw up. We have to match on the run time evidence that the type level <code>d</code> is representable. We need that to get the type level <code>d</code> specialised in the computation of <code>DInner</code>. If we had proper <code>pi</code>, we could match on a <code>D</code> value that serves double duty, but for now, match on <code>Dey d</code> instead.</p>\n\n<pre><code>get (DAey x) = convert x   -- have x :: Aey a, need x :: A\nget (DBey x) = convert x   -- and so on\nget (DCey x) = convert x   -- and so forth\n</code></pre>\n\n<p>Maddeningly, our <code>x</code>es are now singletons, where, to <code>convert</code>, we need the underlying data. We need more of the singleton apparatus.</p>\n\n<p>Step 5. Introduce and instantiate the singleton class, to \"demote\" type level values (as long as we know their run time representatives). Again, Richard Eisenberg's <code>singletons</code> library can Template-Haskell the boilerplate out of this, but let's see what's going on</p>\n\n<pre><code>class Sing (s :: k -&gt; *) where   -- s is the singleton family for some k\n  type Sung s :: *               -- Sung s is the type-level version of k\n  sung :: s x -&gt; Sung s          -- sung is the demotion function\n\ninstance Sing Aey where\n  type Sung Aey = A\n  sung Aey = A\n\ninstance Sing Bey where\n  type Sung Bey = B\n  sung Bey = B\n\ninstance Sing Cey where\n  type Sung Cey = C\n  sung Cey = C\n\ninstance Sing Dey where\n  type Sung Dey = D\n  sung (DAey aey) = DA (sung aey)\n  sung (DBey bey) = DB (sung bey)\n  sung (DCey cey) = DC (sung cey)\n</code></pre>\n\n<p>Step 6. Do it.</p>\n\n<pre><code>get :: forall x. forall d. Dey d -&gt; (Convert (DInner d) x) =&gt; x\nget (DAey x) = convert (sung x)\nget (DBey x) = convert (sung x)\nget (DCey x) = convert (sung x)\n</code></pre>\n\n<p>Be assured, when we have proper <code>pi</code>, those <code>DAey</code>s will be actual <code>DA</code>s and those <code>x</code>s will no longer need to be <code>sung</code>. My handwave type for <code>get</code> will be Haskell, and your code for <code>get</code> will be fine. But in the meantime</p>\n\n<pre><code>main = do\n  print (get (DCey Cey) :: B)\n  print (get (DBey Bey) :: A)\n</code></pre>\n\n<p>typechecks just fine. That's to say, your program (plus <code>DInner</code> and the correct type for <code>get</code>) seems like valid Dependent Haskell, and we're nearly there.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2848, "favorite_count": 16, "accepted_answer_id": 28716020, "answer_count": 2, "score": 17, "last_activity_date": 1424858445, "creation_date": 1424851354, "question_id": 28713994, "link": "https://stackoverflow.com/questions/28713994/why-is-the-type-system-refusing-my-seemingly-valid-program", "title": "Why is the type system refusing my seemingly valid program?", "body": "<p>Mind this program:</p>\n\n<pre><code>class Convert a b where\n    convert :: a -&gt; b\n\ndata A = A deriving Show\ndata B = B deriving Show\ndata C = C deriving Show\ndata D = DA A | DB B | DC C deriving Show\n\ninstance Convert A A where convert A = A\ninstance Convert A B where convert A = B\ninstance Convert A C where convert A = C\ninstance Convert B A where convert B = A\ninstance Convert B B where convert B = B\ninstance Convert B C where convert B = C\n-- There is no way to convert from C to A\ninstance Convert C B where convert C = B\ninstance Convert C C where convert C = C\n\nget (DA x) = convert x\nget (DB x) = convert x\nget (DC x) = convert x\n\nmain = do\n    print (get (DC C) :: B) -- Up to this line, code compiles fine.\n    print (get (DB B) :: A) -- Add this line and it doesn't, regardless of having a way to convert from B to A!\n</code></pre>\n\n<p>There are instances to convert from <code>C</code> to <code>B</code> and from <code>B</code> to <code>A</code>. Yet, GHC typechecks the former, but fails for the latter. Upon inspection, seems like it isn't able to infer a generic enough type for <code>get</code>: </p>\n\n<pre><code>get :: (Convert A b, Convert B b, Convert C b) =&gt; D -&gt; b\n</code></pre>\n\n<p>What I want to express is: <em>get :: (Convert a_contained_by_D b) => D -> b</em>, which seems impossible. Is there any way to implement and compile a function that does what my <code>get</code> attempts to do, without changing the rest of the setup?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 1367, "user_id": 1160885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc61c1b2045efa54375188bdb6a33945?s=128&d=identicon&r=PG", "display_name": "Jedai", "link": "https://stackoverflow.com/users/1160885/jedai"}, "edited": false, "score": 0, "creation_date": 1424857949, "post_id": 28712295, "comment_id": 45719302, "body": "Note that to use polymorphic operations on dynamic images you&#39;ll have to use <code>dynamicMap</code> or <code>dynamicPixelMap</code>, those takes operations polymorphic in the <code>Pixel</code> type and apply them to a <code>DynamicImage</code>. Also note that conversion doesn&#39;t cost anything if your <code>DynamicImage</code> is of the right type in the first place (so you should chose to standardize on the most common type of image you have to handle)."}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 4, "last_activity_date": 1424844338, "creation_date": 1424844338, "answer_id": 28712295, "question_id": 28711373, "link": "https://stackoverflow.com/questions/28711373/how-to-load-an-image-using-juicypixel/28712295#28712295", "title": "How to load an image using JuicyPixel?", "body": "<p>Well conversions aren't free so your choices are either to operate on the image in whatever format you are given or to convert.  In other words you can:</p>\n\n<ul>\n<li>Use polymorphic operations on dynamic images (there are a few)</li>\n<li>Explicitly destruct the <code>DynamicImage</code> and operate over the image with a known encoding.</li>\n<li>Convert whatever encoding to a single encoding for operations.</li>\n</ul>\n\n<p>This last option seems the most straight-forward and is supported by the <code>JuicyPixels-utils</code> package.  Specifically, see the <code>fromDynamicImage</code> and <code>readImageRGBA8</code> <a href=\"https://hackage.haskell.org/package/JuicyPixels-util-0.2/docs/Codec-Picture-RGBA8.html#v:readImageRGBA8\" rel=\"nofollow\">functions</a>.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 686, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1424844338, "creation_date": 1424839909, "question_id": 28711373, "link": "https://stackoverflow.com/questions/28711373/how-to-load-an-image-using-juicypixel", "title": "How to load an image using JuicyPixel?", "body": "<p>Haskell's JuicyPixel library has a function to load <code>png</code> images, <code>readPng</code>. The problem is that this function returns a <code>Either String DynamicImage</code> type, where most of the library function's actually use an Image type. The library's documentation is not clear on what is the correct method to get a proper <code>Image</code> from the result of <code>readPng</code>. </p>\n\n<p>So far, this is what I have done:</p>\n\n<pre><code>import Codec.Picture\n\nmain = do\n    imageLoad &lt;- readPng \"myImage.png\"\n    case imageLoad of\n        Left error  -&gt; putStrLn error\n        Right image -&gt; do\n            putStrLn \"success\"\n            case image of\n                ImageY8 img     -&gt; print \"TODO: deal with this case.\"\n                ImageY16 img    -&gt; print \"TODO: deal with this case.\"\n                ImageYF img     -&gt; print \"TODO: deal with this case.\"\n                ImageYA8 img    -&gt; print \"TODO: deal with this case.\"\n                ImageYA16 img   -&gt; print \"TODO: deal with this case.\"\n                ImageRGB8 img   -&gt; print \"TODO: deal with this case.\"\n                ImageRGB16 img  -&gt; print \"TODO: deal with this case.\"\n                ImageRGBF img   -&gt; print \"TODO: deal with this case.\"\n                ImageRGBA8 img  -&gt; print \"TODO: deal with this case.\"\n                ImageRGBA16 img -&gt; print \"TODO: deal with this case.\"\n                ImageYCbCr8 img -&gt; print \"TODO: deal with this case.\"\n                ImageCMYK8 img  -&gt; print \"TODO: deal with this case.\"\n                ImageCMYK16 img -&gt; print \"TODO: deal with this case.\"\n    print \"Done.\"\n</code></pre>\n\n<p>Of course, I am not going to manually deal with every possible encoding, so I just (by trial and error) figured out the type of image I was getting (it was ImageRGBA8) and partially matched against it. That sounds like a very bad idea, though - is this really how it must be done, or does the library provide a proper way to just load an image on the format you ask it to?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1424833321, "post_id": 28710330, "comment_id": 45709576, "body": "Shouldn&#39;t <code>empty</code> have the signature <code>a</code> instead of <code>Heap a</code>?"}, {"owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1424833403, "post_id": 28710330, "comment_id": 45709598, "body": "<b>EDIT</b>: In the book, it says <code>val empty : Heap</code>, so I assume that means <code>empty</code> should return a <code>Heap a</code>..."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1424833436, "post_id": 28710330, "comment_id": 45709613, "body": "but there <code>Map</code> is a <code>data</code>, not a <code>class</code>..."}, {"owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1424833531, "post_id": 28710330, "comment_id": 45709633, "body": "maybe I shouldn&#39;t have a type-class then? Coming from scala/java, perhaps I&#39;m trying to use an <code>interface</code> where a <code>class</code> (or maybe ADT in Haskell) should be used?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1424833602, "post_id": 28710330, "comment_id": 45709647, "body": "Haskell&#39;s <code>class</code> is indeed more some kind of interface. I think you better define a datatype (with <code>data</code>) and implement an <code>empty</code> function on top of that."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424834490, "post_id": 28710330, "comment_id": 45709863, "body": "You can&#39;t really translate quite so directly between ML and Haskell. Much of what Okasaki does with ML structures and functors would be done in Haskell with type classes. Note also that ML type and data constructors are lower case, but Haskell ones are upper case."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1424835610, "post_id": 28710330, "comment_id": 45710131, "body": "If I remember right, one of the appendices of Purely Functional Data Structures has Haskell versions of the code. EDIT: That might only be in hard copies of the book, now that I look again."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1424836090, "post_id": 28710330, "comment_id": 45710248, "body": "@DavidYoung, it does, but it doesn&#39;t implement the algorithms faithfully. Specifically, it&#39;s lazier than the ML code, so the worst-case data structures degrade to amortized ones, and he doesn&#39;t include the scheduled structures at all. I&#39;m not sure why, but it seems he didn&#39;t want to touch Haskell&#39;s <code>seq</code>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424834708, "post_id": 28710438, "comment_id": 45709919, "body": "Note that if the <code>empty</code> method has signature <code>a</code>, you&#39;ll end up either using MPTC and functional dependencies or (perhaps better) an associated type to actually be able to deal with elements and structures of them. The more usual approach is to use a higher-kinded class, so you have <code>empty :: map a</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424834924, "post_id": 28710438, "comment_id": 45709963, "body": "@dfeuer: well it&#39;s only a small introduction that <code>class</code>es are not how to define a datastructure. Indeed multiparameter type classes with keytype and value type are better suited for the job."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 3, "last_activity_date": 1424835181, "last_edit_date": 1424835181, "creation_date": 1424833784, "answer_id": 28710438, "question_id": 28710330, "link": "https://stackoverflow.com/questions/28710330/defining-empty-on-heap-typeclass/28710438#28710438", "title": "Defining &#39;empty&#39; on Heap Typeclass", "body": "<p>Type-classes in Haskell are not (that much) related to <code>class</code>es in Object-oriented program. To put it simple: a <code>type-class</code> groups a set of <code>data</code> instances that support a set of functions.</p>\n\n<p>You thus define a class as</p>\n\n<pre><code>class Foo a where\n    bar :: a -&gt; Bool\n    qux :: a\n</code></pre>\n\n<p>That doesn't mean <code>Foo</code> is a type, it means that for any datastructure <code>a</code>, that is an <code>instance</code> of <code>Foo</code>, you should implement these methods.</p>\n\n<p>In that sense it's more an <strong>interface</strong>, types itself are instances of a class.</p>\n\n<p>Now you can for instance define a datastructure, for instance a \"naive\" map approach:</p>\n\n<pre><code>data ListMap a b = ListMap [(a,b)]\n</code></pre>\n\n<p>Now that means that every map is stored as a list of <code>(a,b)</code> tuples with the <code>ListMap</code> \"constructor\".</p>\n\n<p>You can then for instance define an <code>empty</code> method for such listmap:</p>\n\n<pre><code>empty :: ListMap a b\nempty = ListMap []\n</code></pre>\n\n<p>It thus means that you create a <code>ListMap</code> with an empty list.</p>\n\n<p>It can however be useful to construct a <code>class</code> in case you are planning to implement multiple datastructures that behave like a map. In that case you can for instance define:</p>\n\n<pre><code>class Map a where\n    empty :: a\n</code></pre>\n\n<p>Now you can make <code>ListMap</code> an instance of <code>Map</code> with:</p>\n\n<pre><code>instance Map (ListMap a b) where\n    empty = ListMap []\n</code></pre>\n\n<p>Later, if you want to define functions that make returns for instance the list of keys, etc. you can define multi-parameter type classes.</p>\n\n<p>Thus to answer your question in short: if you use a class, the <code>empty</code> method has the signature <code>a</code>, but you should first define a datastructure, a <code>class</code> is more what objected oriented programming languages call an \"interface\".</p>\n"}], "owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1424835181, "creation_date": 1424833160, "question_id": 28710330, "link": "https://stackoverflow.com/questions/28710330/defining-empty-on-heap-typeclass", "title": "Defining &#39;empty&#39; on Heap Typeclass", "body": "<p>I'm trying to copy the ML code from Purely Functional Data Structures into Haskell.</p>\n\n<pre><code>class (Ord a) =&gt; Heap a where\n    empty :: Heap a\n    ...\n</code></pre>\n\n<p>But I get this compile-time error:</p>\n\n<pre><code>Prelude&gt; :l Heap.hs \n[1 of 1] Compiling Main             ( Heap.hs, interpreted )\n\nHeap.hs:2:18:\n    Expected kind \u2018*\u2019, but \u2018Heap a\u2019 has kind \u2018Constraint\u2019\n    In the type \u2018Heap a\u2019\n    In the class declaration for \u2018Heap\u2019\n</code></pre>\n\n<p>It seems appropriate to me that <code>empty</code> should be a function in the <strong>Heap</strong> type-class.</p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["haskell", "tree"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424833099, "post_id": 28710261, "comment_id": 45709516, "body": "What do you think? Why?"}, {"owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424833273, "post_id": 28710261, "comment_id": 45709559, "body": "if the <i>depth</i> is 1, then the following executes:  <code>complete 1</code> -&gt; <code>complete&#39; 1</code> -&gt; <code>complete&#39; 0</code>, which returns <code>Empty</code> - so I&#39;m not sure. My confusion here is understanding what counts towards the <code>O(d)</code> count."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424834245, "post_id": 28710261, "comment_id": 45709795, "body": "Mostly, you should count applying constructors, matching on constructors, and performing arithmetic. Note that guards and <code>if</code> are essentially pattern matches on <code>Bool</code>, so they count too."}, {"owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424836589, "post_id": 28710261, "comment_id": 45710348, "body": "so calling <code>complete _ 1</code> will do the following operations: (1) <code>depth &lt; 0</code> (2) <code>d == 0</code> (3) calling <code>complete&#39; (d-1) -- which includes a few operations and (4) construction of </code>Node x copiedTree copiedTree<code>. So mine definitely isn&#39;t </code>O(d)<code>. I&#39;ve got *at least* </code>O(6/7/8)`, as I perceive."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424840049, "post_id": 28710261, "comment_id": 45711211, "body": "Kevin, I don&#39;t know what O(6/7/8) is supposed to mean. If you want to do this analysis for real, you need to actually write out the equations and then work through the math. If you add the equations to your question, that will definitely get you started in the right direction."}], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 3, "creation_date": 1424850818, "post_id": 28711901, "comment_id": 45715447, "body": "Well gosh if you&#39;re going to count <code>d-1</code> as log(d), we might as well realize that subtracting 1 from an integer has amortized constant time, since the nth bit only needs to be touched once every 2^n times. &lt;/geek&gt;"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 4, "creation_date": 1424877013, "post_id": 28711901, "comment_id": 45731650, "body": "@luqui That&#39;s true if you represent <code>Integer</code> as a list of digits with the least significant digit first or have mutable <code>Integer</code>s. GHC&#39;s <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer\" rel=\"nofollow noreferrer\">default</a> <code>Integer</code> representation <a href=\"https://hackage.haskell.org/package/integer-gmp-0.5.1.0/docs/GHC-Integer-GMP-Internals.html\" rel=\"nofollow noreferrer\">is a <code>ByteArray#</code></a>. Subtracting <code>1</code> requires copying the entire <code>ByteArray#</code>, which is <code>O(n)</code> where <code>n</code> is the number of bits in the array."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424879855, "post_id": 28711901, "comment_id": 45733876, "body": "You might want to mention that the practical limit on the <code>Integer</code> size in this particular program is imposed by theoretical physical limits. If you had a 256-bit depth, say, you couldn&#39;t ever reach a leaf because the universe <a href=\"https://en.wikipedia.org/wiki/Ultimate_fate_of_the_universe\" rel=\"nofollow noreferrer\">would have ended by then</a>. But my bigger concern is that your &quot;practical&quot; answer is a bit too fancy to help the OP, and the theoretical answer is incomplete."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424879911, "post_id": 28711901, "comment_id": 45733925, "body": "It would probably be useful to give a theoretical answer based on an abstract machine with O(1) arithmetic."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424881092, "post_id": 28711901, "comment_id": 45734879, "body": "@dfeuer The theoretical answer it deliberately incomplete for a machine with <code>O(1)</code> arithmetic to encourage the reader to either think, &quot;<code>O(log d)</code> and <code>O(d)</code> are to <code>O(d log d)</code> as <code>O(1)</code> and <code>O(d)</code> are to ???&quot; or to explore the practical answer. The practical answer is as simple as possible to avoid waiting until the universe would end <i>a thousand times</i> to force a fairly small structure like <code>complete 0 300000</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424881699, "post_id": 28711901, "comment_id": 45735285, "body": "@Cirdec, I understand the value of the practical answer you give, and also why it is harder to construct than one might initially expect. But since it looks quite hard to an intermediate-level Haskeller like myself, I imagine it would go completely over the head of a beginner. But then again, different people do learn things differently, so maybe I should just shut up and write my own answer already."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424881730, "post_id": 28711901, "comment_id": 45735312, "body": "@dfeuer A <i>determined</i> novice reader should be able to deal with the practical answer, &quot;We&#39;re going to run the question code ... here&#39;s the question code ... here&#39;s some code the author claims will run it ... here are some results.&quot; There are two interesting results. With a input depth of <code>3</code> they were <code>4</code> and <code>3</code>. With an input depth of <code>300000</code> they were <code>300001</code> and <code>300000</code>. The reader is left to draw all of their own conclusions."}, {"owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "edited": false, "score": 0, "creation_date": 1424921042, "post_id": 28711901, "comment_id": 45753197, "body": "Thanks for this detailed answer. On your last sentence, <code>With a input depth of 3 and there 4 and 3...</code>. How would I use those data points to come up with an <code>O(n)</code> measurement?"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "edited": false, "score": 2, "creation_date": 1424921550, "post_id": 28711901, "comment_id": 45753306, "body": "@KevinMeredith First, you need to reason out that one execution of <code>complete&#39;</code> (ignoring recursion) takes at most some <i>constant</i> amount of time <code>c</code> (if we ignore the integer decrement). The problem then is to figure out how many times <code>complete&#39;</code> is being evaluated. From the two measurements, we can see it&#39;s being evaluated exactly <code>d + 1</code> times. The overall running time is then <code>(d+1)*c</code> which is in <code>O(d)</code>. We can see that nothing inside <code>complete&#39;</code> (like <code>copiedTree</code>) is being evaluated more than proportionally to <code>complete&#39;</code>."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "edited": false, "score": 0, "creation_date": 1424921714, "post_id": 28711901, "comment_id": 45753351, "body": "@KevinMeredith If it weren&#39;t an easy to tease out linear relationship, you&#39;d run it many times, plot the results, and hypothesize what an upper bound is, then check the hypothesis with larger and larger inputs."}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": false, "score": 3, "last_activity_date": 1424878508, "last_edit_date": 1424878508, "creation_date": 1424842509, "answer_id": 28711901, "question_id": 28710261, "link": "https://stackoverflow.com/questions/28710261/function-to-populate-tree-in-odepth/28711901#28711901", "title": "Function to Populate Tree in O(depth)", "body": "<h3>Theoretical Answer</h3>\n\n<p>No, it does not run in <code>O(d)</code> time. Its <a href=\"http://en.wikipedia.org/wiki/Asymptotically_optimal_algorithm\" rel=\"nofollow\">asymptotic performance</a> is dominated by the the <code>Integer</code> subtraction <code>d-1</code>, which takes <code>O(log d)</code> time. This is repeated <code>O(d)</code> times, giving an asymptotic upper bound on time of <code>O(d log d)</code>.</p>\n\n<p>This upper bound can improve if you use an <code>Integer</code> representation with an asymptotically optimal <code>O(1)</code> decrement. <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer\" rel=\"nofollow\">In practice we don't</a>, since the asymptotically optimal <code>Integer</code> implementations are slower even for unimaginably large values.</p>\n\n<p>Practically the <code>Integer</code> arithmetic will be a small part of the running time of the program. For practical \"large\" depths (smaller than a machine word) the program's running time will be dominated by allocating and populating memory. For larger depths you will exhaust the resources of the computer.</p>\n\n<h3>Practical Answer</h3>\n\n<p>Ask the run time system's <a href=\"https://www.haskell.org/ghc/docs/latest/html/users_guide/profiling.html\" rel=\"nofollow\">profiler</a>.</p>\n\n<p>In order to profile your code, we first need to make sure it is run. Haskell is lazily evaluated, so, unless we do something to cause the tree to be completely evaluated, it might not be. Unfortunately, completely exploring the tree will take <code>O(2^d)</code> steps. We could avoid forcing nodes we had already visited if we kept track of their <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/System-Mem-StableName.html#t:StableName\" rel=\"nofollow\"><code>StableName</code></a>s. Fortunately, traversing a structure and keeping track of visited nodes by their memory locations is already provided by the <a href=\"https://hackage.haskell.org/package/data-reify\" rel=\"nofollow\">data-reify</a> package. Since we will be using it for profiling, we need to install it with profiling enabled (<code>-p</code>).</p>\n\n<pre><code>cabal install -p data-reify\n</code></pre>\n\n<p>Using <code>Data.Reify</code> requires the <code>TypeFamilies</code> extension and <code>Control.Applicative</code>.</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n\nimport Data.Reify\nimport Control.Applicative\n</code></pre>\n\n<p>We reproduce your <code>Tree</code> code.</p>\n\n<pre><code>data Tree a = Empty | Node a (Tree a) (Tree a)\n\ncomplete :: a -&gt; Integer -&gt; Maybe (Tree a)\ncomplete x depth \n | depth &lt; 0  = Nothing\n | otherwise  = Just $ complete' depth\n                        where complete' d \n                                | d == 0    = Empty\n                                | otherwise = let copiedTree = complete' (d-1) \n                                              in Node x copiedTree copiedTree\n</code></pre>\n\n<p>Converting data to a graph with data-reify requires that we have a base functor for the data type. The base functor is a representation of the type with explicit recursion removed. The base functor for <code>Tree</code> is <code>TreeF</code>. An additional type parameter is added for the representation of recursive occurrence of the type, and each recursive occurrence is replaced by the new parameter.</p>\n\n<pre><code>data TreeF a x = EmptyF | NodeF a x x\n    deriving (Show)\n</code></pre>\n\n<p>The <code>MuRef</code> instance required by <a href=\"https://hackage.haskell.org/package/data-reify-0.6/docs/Data-Reify.html#v:reifyGraph\" rel=\"nofollow\"><code>reifyGraph</code></a> requires that we provide a <code>mapDeRef</code> to traverse the structure with an <code>Applicative</code> and convert it to the base functor . The first argument provided to <code>mapDeRef</code>, which I have named <code>deRef</code>, is how we can convert the recursive occurrences of the structure.</p>\n\n<pre><code>instance MuRef (Tree a) where\n    type DeRef (Tree a) = TreeF a\n    mapDeRef deRef Empty        = pure EmptyF\n    mapDeRef deRef (Node a l r) = NodeF a &lt;$&gt; deRef l &lt;*&gt; deRef r\n</code></pre>\n\n<p>We can make a little program to run to test the <code>complete</code> function. When the graph is small, we'll print it out to see what's going on. When the graph gets big, we'll only print out how many nodes it has.</p>\n\n<pre><code>main = do\n    d &lt;- getLine\n    let (Just tree) = complete 0 (read d)\n    graph@(Graph nodes _) &lt;- reifyGraph tree\n    if length nodes &lt; 30 \n    then print graph\n    else print (length nodes)\n</code></pre>\n\n<p>I put this code in a file named <code>profileSymmetricTree.hs</code>. To compile it, we need to enable profiling with <code>-prof</code> and enable the run-time system with <code>-rtsopts</code>.</p>\n\n<pre><code>ghc -fforce-recomp -O2 -prof -fprof-auto -rtsopts profileSymmetricTree.hs\n</code></pre>\n\n<p>When we run it, we'll enable the time profile with the <code>+RTS</code> option <code>-p</code>. We'll give it the depth input <code>3</code> for the first run.</p>\n\n<pre><code>profileSymmetricTree +RTS -p\n3\nlet [(1,NodeF 0 2 2),(2,NodeF 0 3 3),(3,NodeF 0 4 4),(4,EmptyF)] in 1\n</code></pre>\n\n<p>We can already see from the graph that the nodes are being shared between the left and right sides of the tree.</p>\n\n<p>The profiler makes a file, <code>profileSymmetricTree.prof</code>.</p>\n\n<pre><code>                                                                                individual     inherited\nCOST CENTRE                        MODULE                     no.     entries  %time %alloc   %time %alloc\n\nMAIN                               MAIN                        43           0    0.0    0.7   100.0  100.0\n main                              Main                        87           0  100.0   21.6   100.0   32.5\n  ...\n  main.(...)                       Main                        88           1    0.0    4.8     0.0    5.1\n   complete                        Main                        90           1    0.0    0.0     0.0    0.3\n    complete.complete'             Main                        92           4    0.0    0.2     0.0    0.3\n     complete.complete'.copiedTree Main                        94           3    0.0    0.1     0.0    0.1\n</code></pre>\n\n<p>It shows in the <code>entries</code> column that <code>complete.complete'</code> was executed <code>4</code> times, and the <code>complete.complete'.copiedTree</code> was evaluated <code>3</code> times.</p>\n\n<p>If you repeat this experiment with different depths, and plot the results, you should get a good idea what the practical asymptotic performance of <code>complete</code> is.</p>\n\n<p>Here are the profiling results for a much greater depth, <code>300000</code>.</p>\n\n<pre><code>                                                                                individual     inherited\nCOST CENTRE                        MODULE                     no.     entries  %time %alloc   %time %alloc\n\nMAIN                               MAIN                        43           0    0.0    0.0   100.0  100.0\n main                              Main                        87           0    2.0    0.0    99.9  100.0\n  ...\n  main.(...)                       Main                        88           1    0.0    0.0     2.1    5.6\n   complete                        Main                        90           1    0.0    0.0     2.1    5.6\n    complete.complete'             Main                        92      300001    1.3    4.4     2.1    5.6\n     complete.complete'.copiedTree Main                        94      300000    0.8    1.3     0.8    1.3\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "edited": false, "score": 0, "creation_date": 1424919815, "post_id": 28725614, "comment_id": 45752941, "body": "Thanks for this detailed answer.   But, why doesn&#39;t <code>f(0) == 3</code>: <code>(1) depth &lt; 0</code>,  <code>(2) d == 0</code> and <code>(3) Empty</code>?"}, {"owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "edited": false, "score": 0, "creation_date": 1424920100, "post_id": 28725614, "comment_id": 45753007, "body": "Also, am I correct in that my solution is <b>not</b> <code>O(d)</code> - it requires using the <code>O(1)</code> technique that you described?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "edited": false, "score": 1, "creation_date": 1424920502, "post_id": 28725614, "comment_id": 45753093, "body": "@KevinMeredith, it kind of depends how you look at it. In theory, it&#39;s not O(d) because <code>Integer</code> decrement is not. But (1) you could &quot;fix&quot; that using a different implementation of natural numbers, and (2) for all practical purposes it might as well be O(d), because it&#39;s O(d log d) with a tiny constant factor."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "edited": false, "score": 0, "creation_date": 1424920633, "post_id": 28725614, "comment_id": 45753121, "body": "@KevinMeredith, you should think about what makes that constant factor so tiny in this case."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1424923418, "post_id": 28725614, "comment_id": 45753785, "body": "I would upvote this answer just for properly using <code>\u2208</code> instead of <code>=</code> for containment in an <code>O</code> function class."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 4, "last_activity_date": 1424918349, "last_edit_date": 1495535052, "creation_date": 1424885167, "answer_id": 28725614, "question_id": 28710261, "link": "https://stackoverflow.com/questions/28710261/function-to-populate-tree-in-odepth/28725614#28725614", "title": "Function to Populate Tree in O(depth)", "body": "<p>The interesting part of the code is the <code>complete'</code> function:</p>\n\n<pre><code>complete' d \n  | d == 0    = Empty\n  | otherwise = let copiedTree = complete' (d-1) \n                in Node x copiedTree copiedTree\n</code></pre>\n\n<p>As <a href=\"https://stackoverflow.com/a/28711901/1477667\">Cirdec's answer</a> suggests, we should be careful to analyze each part of the implementation to make sure our assumptions are valid. As a general rule, we can assume that the following take 1 unit of time each<code>*</code>:</p>\n\n<ol>\n<li><p>Using a data constructor to construct a value (e.g., using <code>Empty</code> to make an empty tree or using <code>Node</code> to turn a value and two trees into a tree).</p></li>\n<li><p>Pattern matching on a value to see what data constructor it was built from and what values the data constructor was applied to.</p></li>\n<li><p>Guards and if/then/else expressions (which are implemented internally using pattern matching).</p></li>\n<li><p>Comparing an <code>Integer</code> to 0.</p></li>\n</ol>\n\n<p>Cirdec mentions that the operation of subtracting 1 from an <code>Integer</code> is logarithmic in the size of the integer. As they say, this is essentially an artifact of the way <code>Integer</code> is implemented. It is possible to implement integers so that it takes only one step to compare them to 0 and also takes only one step to decrement them by 1. To keep things very general, it's safe to assume that there is some function c such that the cost of decrementing an <code>Integer</code> is c(depth).</p>\n\n<hr>\n\n<p>Now that we've taken care of those preliminaries, let's get down to work! As is generally the case, we need to set up a system of equations and solve it. Let f(d) be the number of steps needed to calculate <code>complete' d</code>. Then the first equation is very simple:</p>\n\n<pre><code>f(0) = 2\n</code></pre>\n\n<p>That's because it costs 1 step to compare <code>d</code> to 0, and another step to check that the result is <code>True</code>.</p>\n\n<p>The other equation is the interesting part. Think about what happens when <code>d &gt; 0</code>:</p>\n\n<ol>\n<li>We calculate <code>d == 0</code>.</li>\n<li>We check if that is <code>True</code> (it's not).</li>\n<li>We calculate <code>d-1</code> (let's call the result <code>dm1</code>)</li>\n<li>We calculate <code>complete' dm1</code>, saving the result as <code>copiedTree</code>.</li>\n<li>We apply a <code>Node</code> constructor to <code>x</code>, <code>copiedTree</code>, and <code>copiedTree</code>.</li>\n</ol>\n\n<p>The first part takes 1 step. The second part takes one step. The third part takes c(depth) steps, and the fifth step takes 1 step. What about the fourth part? Well, that takes f(d-1) steps, so this will be a recursive definition.</p>\n\n<pre><code>f(0) = 2\nf(d) = (3+c(depth)) + f(d-1)    when d &gt; 0\n</code></pre>\n\n<p>OK, now we're cooking with gas! Let's calculate the first few values of f:</p>\n\n<pre><code>f(0) = 2\nf(1) = (3+c(depth)) + f(0) = (3+c(depth)) + 2\nf(2) = (3+c(depth)) + f(1)\n     = (3+c(depth)) + ((3+c(depth)) + 2)\n     = 2*(3+c(depth)) + 2\nf(3) = (3+c(depth)) + f(2)\n     = (3+c(depth)) + (2*(3+c(depth)) + 2)\n     = 3*(3+c(depth)) + 2\n</code></pre>\n\n<p>You should be starting to see a pattern by now:</p>\n\n<pre><code>f(d) = d*(3+c(depth)) + 2\n</code></pre>\n\n<p>We generally prove things about recursive functions using mathematical induction.</p>\n\n<p>Base case:</p>\n\n<p>The claim holds for d=0 because 0*(3+c(depth))+2=0+2=2=f(0).</p>\n\n<p>Suppose that the claim holds for d=D. Then</p>\n\n<pre><code>f(D+1) = (3+c(depth)) + f(D)\n       = (3+c(depth)) + (D*(3+c(depth))+2)\n       = (D+1)*(3+c(depth))+2\n</code></pre>\n\n<p>So the claim holds for D+1 as well. Thus by induction, it holds for all natural numbers d. As a reminder, this gives the conclusion that <code>complete' d</code> takes</p>\n\n<pre><code>f(d) = d*(3+c(depth))+2\n</code></pre>\n\n<p>time. Now how do we express that in big O terms? Well, big O doesn't care about the constant coefficients of any of the terms, and only cares about the highest-order terms. We can safely assume that c(depth)>=1, so we get</p>\n\n<pre><code>f(d) \u2208 O(d*c(depth))\n</code></pre>\n\n<p>Zooming out to <code>complete</code>, this looks like O(depth*c(depth))</p>\n\n<p>If you use the real cost of <code>Integer</code> decrement, this gives you O(depth*log(depth)). If you pretend that <code>Integer</code> decrement is O(1), this gives you O(depth).</p>\n\n<p>Side note: As you continue to work through Okasaki, you will eventually reach section 10.2.1, where you will see a way to implement natural numbers supporting O(1) decrement and O(1) <em>addition</em> (but not efficient subtraction).</p>\n\n<p><code>*</code> Haskell's lazy evaluation keeps this from being precisely true, but if you pretend that everything is evaluated strictly, you will get an upper bound for the true value, which will be good enough in this case. If you want to learn how to analyze data structures that use laziness to get good asymptotic bounds, you should keep reading Okasaki.</p>\n"}], "owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 1, "answer_count": 2, "score": 3, "last_activity_date": 1424918349, "creation_date": 1424832631, "question_id": 28710261, "link": "https://stackoverflow.com/questions/28710261/function-to-populate-tree-in-odepth", "title": "Function to Populate Tree in O(depth)", "body": "<p><a href=\"http://books.google.com/books/about/Purely_Functional_Data_Structures.html?id=SxPzSTcTalAC\" rel=\"nofollow\">Purely Functional Data Structures</a> has the following exercise:</p>\n\n<pre><code>-- 2.5 Sharing can be useful within a single object, not just between objects.\n-- For example, if the two subtress of a given node are identical, then they can \n-- be represented by the same tree.\n-- Part a: make a `complete a Int` function that creates a tree of \n-- depth Int, putting a in every leaf of the tree.\ncomplete :: a -&gt; Integer -&gt; Maybe (Tree a)\ncomplete x depth \n | depth &lt; 0  = Nothing\n | otherwise  = Just $ complete' depth\n                        where complete' d \n                                | d == 0    = Empty\n                                | otherwise = let copiedTree = complete' (d-1) \n                                              in Node x copiedTree copiedTree\n</code></pre>\n\n<p>Does this implementation run in <code>O(d)</code> time? Could you please say why or why not?</p>\n"}, {"tags": ["haskell", "authentication", "yesod", "email-validation"], "answers": [{"tags": [], "owner": {"reputation": 842, "user_id": 382610, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b55fee4ececafc82a626c53db968e302?s=128&d=identicon&r=PG", "display_name": "sevcsik", "link": "https://stackoverflow.com/users/382610/sevcsik"}, "is_accepted": false, "score": 1, "last_activity_date": 1425520737, "creation_date": 1425520737, "answer_id": 28868687, "question_id": 28709336, "link": "https://stackoverflow.com/questions/28709336/how-make-yesod-auth-email-display-an-error-when-an-email-is-already-registered/28868687#28868687", "title": "How make Yesod.Auth.Email display an error when an email is already registered?", "body": "<p>After discussing it on #yesod, this is probably a bug, so I filed an issue on it:\n<a href=\"https://github.com/yesodweb/yesod/issues/948\" rel=\"nofollow\">https://github.com/yesodweb/yesod/issues/948</a></p>\n"}], "owner": {"reputation": 842, "user_id": 382610, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b55fee4ececafc82a626c53db968e302?s=128&d=identicon&r=PG", "display_name": "sevcsik", "link": "https://stackoverflow.com/users/382610/sevcsik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1425520737, "creation_date": 1424826164, "last_edit_date": 1425519329, "question_id": 28709336, "link": "https://stackoverflow.com/questions/28709336/how-make-yesod-auth-email-display-an-error-when-an-email-is-already-registered", "title": "How make Yesod.Auth.Email display an error when an email is already registered?", "body": "<p>I found out when I try to register an email on RegisterR which already exists, instead of displaying an error message, that the user already exists, it sends an an email confirmation request to the given email address, just like if I asked for a password reset.</p>\n\n<p>After going through the sources, I found out that <code>registerHelper</code> checks if the email exists, and if it does, it sends a verify email even if it's already verified.</p>\n\n<pre><code>-- [...]\n    mecreds &lt;- lift $ getEmailCreds identifier                           \n        registerCreds &lt;-                                                 \n            case mecreds of                                              \n                Just (EmailCreds lid _ _ (Just key) email) -&gt; return $ Just (lid, key, email)\n                Just (EmailCreds lid _ _ Nothing email) -&gt; do            \n                    key &lt;- liftIO $ randomKey y                          \n                    lift $ setVerifyKey lid key                          \n                    return $ Just (lid, key, email)                      \n                Nothing                                                  \n                    | allowUsername -&gt; return Nothing                    \n                    | otherwise -&gt; do                                    \n                        key &lt;- liftIO $ randomKey y                      \n                        lid &lt;- lift $ addUnverified identifier key       \n                        return $ Just (lid, key, identifier)\n\n        case registerCreds of\n            Nothing -&gt; loginErrorMessageI dest (Msg.IdentifierNotFound identifier)\n            Just (lid, verKey, email) -&gt; do\n                render &lt;- getUrlRender\n                let verUrl = render $ verify (toPathPiece lid) verKey\n                lift $ sendVerifyEmail email verKey verUrl\n                lift $ confirmationEmailSentResponse identifier                                         \n-- [...]\n</code></pre>\n\n<p>Source: <a href=\"https://hackage.haskell.org/package/yesod-auth-1.4.3.1/docs/src/Yesod-Auth-Email.html#registerHelper\" rel=\"nofollow\">https://hackage.haskell.org/package/yesod-auth-1.4.3.1/docs/src/Yesod-Auth-Email.html#registerHelper</a></p>\n\n<p>Since <code>registerCreds</code> is a <code>Just</code> when the email exists and it has a key, it sends the verify email again to the user, whiche he/she can use as a password reset link. </p>\n\n<p>My questions are:</p>\n\n<ol>\n<li>Why does it work this way? This basically makes registering an already existing email address equal requesting password reset. I'm sure it has a good reason, and it makes me wonder if I'm using <code>Auth.Email</code> correctly.</li>\n<li><code>Yesod.Auth.Email.postRegisterR</code> gets called immediately when the request arrives - where do I have a chance to check that the email address already exists, and inform the user?</li>\n</ol>\n\n<p><strong>EDIT</strong>: It turned out I was looking at the source of a much older version: I updated the question. In <code>yesod-auth-1.4.3</code>, this code is in <code>registerHelper</code>, not in <code>postRegisterR</code>.</p>\n"}, {"tags": ["haskell", "typeclass", "associated-types"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424826820, "post_id": 28709126, "comment_id": 45707868, "body": "Why do you want to do this?"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1424828837, "post_id": 28709126, "comment_id": 45708461, "body": "I&#39;m wondering that too. Why not use type families?"}, {"owner": {"reputation": 15004, "user_id": 562906, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a15f15ed0023f4177a518b6c15ca4b6?s=128&d=identicon&r=PG", "display_name": "sinelaw", "link": "https://stackoverflow.com/users/562906/sinelaw"}, "edited": false, "score": 0, "creation_date": 1424844882, "post_id": 28709126, "comment_id": 45712787, "body": "Motivation: provide a basic associated types feature when designing a type system, but do it in a simple (for the type checker) way. Not intended to be used in Haskell"}, {"owner": {"reputation": 15004, "user_id": 562906, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a15f15ed0023f4177a518b6c15ca4b6?s=128&d=identicon&r=PG", "display_name": "sinelaw", "link": "https://stackoverflow.com/users/562906/sinelaw"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424845298, "post_id": 28709126, "comment_id": 45712950, "body": "@dfeuer updated the question to clarify and also see comment above"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424878110, "post_id": 28709126, "comment_id": 45732431, "body": "The <b>polymorphic</b> type of <code>t1</code> <b>is</b> inferable. Disable the monomorphism restriction, as directed in the first paragraph of my <a href=\"http://stackoverflow.com/a/28709551/414413\">answer</a>. The type is not only theoretically inferable, but is practically inferable."}, {"owner": {"reputation": 15004, "user_id": 562906, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a15f15ed0023f4177a518b6c15ca4b6?s=128&d=identicon&r=PG", "display_name": "sinelaw", "link": "https://stackoverflow.com/users/562906/sinelaw"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424879331, "post_id": 28709126, "comment_id": 45733440, "body": "@Cirdec Thanks! That still isn&#39;t exactly what I&#39;m after. I&#39;ve updated the question to include the <code>NoMonomorphismRestriction</code> flag and changed the example to show that the problem still exists: the type of <code>3</code> in <code>t1 = test1 &quot;hi&quot; 3 == &#39;c&#39;</code> still can&#39;t be inferred, it is considered ambiguous. The reason is openness of type classes, as I understand."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424880315, "post_id": 28709126, "comment_id": 45734271, "body": "The type of <code>3</code> in your <i>new</i> <code>t1</code> can&#39;t be inferred (perhaps it should have a different name than <code>t1</code>; I&#39;ll call it <code>t2</code>?). Consider <code>t3 x = test1 &quot;hi&quot; x == &#39;c&#39;</code>. It has the inferred type <code>t3 :: Indexable ([Char], b, Char) =&gt; b -&gt; Bool</code> from which we can deduce that <code>x</code> has the inferred type <code>x :: Indexable ([Char], b, Char) =&gt; b</code>. The best inferred type of <code>3</code> would then be <code>Num b, Indexable ([Char], b, Char) =&gt; b</code>. <code>3</code> needs to have a concrete type because it&#39;s type isn&#39;t involved in the return type of <code>t2 :: Bool</code>."}, {"owner": {"reputation": 15004, "user_id": 562906, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a15f15ed0023f4177a518b6c15ca4b6?s=128&d=identicon&r=PG", "display_name": "sinelaw", "link": "https://stackoverflow.com/users/562906/sinelaw"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424883475, "post_id": 28709126, "comment_id": 45736499, "body": "@Cirdec right, but why is the type of x generalized in your example? Because we can&#39;t know which type is going to be used. However if the type class was allowed to be closed, we could say for certain that your <code>b</code> type must be Int to type check."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 1, "creation_date": 1424885850, "post_id": 28709126, "comment_id": 45738093, "body": "@sinelaw Knowing that the key has a <code>Num</code> instance and that <code>Indexable</code> is closed and the only possible keys are <code>Int</code> and <code>String</code> isn&#39;t enough to know that the key must be <code>Int</code>. You would also need to know that there will never be a <code>Num</code> instance for <code>String</code>, implying that <code>Num</code> is also closed. Alternatively, you could tell that you must be using the instance where the container is a <code>String</code> from the fact that the container isn&#39;t a <code>[(String, a)]</code> and knowing <code>Indexable</code> is closed. Choosing the instance based on the container is exactly what you&#39;d do with fundeps or type families."}, {"owner": {"reputation": 15004, "user_id": 562906, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a15f15ed0023f4177a518b6c15ca4b6?s=128&d=identicon&r=PG", "display_name": "sinelaw", "link": "https://stackoverflow.com/users/562906/sinelaw"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424888270, "post_id": 28709126, "comment_id": 45739704, "body": "@Cirdec OK nice! Add this to your answer and I&#39;ll accept"}], "answers": [{"comments": [{"owner": {"reputation": 15004, "user_id": 562906, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a15f15ed0023f4177a518b6c15ca4b6?s=128&d=identicon&r=PG", "display_name": "sinelaw", "link": "https://stackoverflow.com/users/562906/sinelaw"}, "edited": false, "score": 0, "creation_date": 1424845026, "post_id": 28709551, "comment_id": 45712842, "body": "Is there a way for the type to be inferred without fundeps or type families? Not necessarily in Haskell as it is, also more theoretically"}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": false, "score": 4, "last_activity_date": 1424827802, "last_edit_date": 1424827802, "creation_date": 1424827424, "answer_id": 28709551, "question_id": 28709126, "link": "https://stackoverflow.com/questions/28709126/are-closed-type-classes-enough-for-inference-of-associated-types-without-type-f/28709551#28709551", "title": "Are closed type classes enough for inference of associated types (without type families)?", "body": "<p>This error is caused by the dreaded <a href=\"https://wiki.haskell.org/Monomorphism_restriction\" rel=\"nofollow\">monomorphism restriction</a>. Disable it with <code>NoMonomorphismRestriction</code>.</p>\n\n<pre><code>{-# LANGUAGE NoMonomorphismRestriction #-}\n</code></pre>\n\n<p>This problem is a good example of where you should use <code>MultiParamTypeClasses</code> and <code>newtype</code>s.</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE NoMonomorphismRestriction #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n\nimport Data.Maybe\n\nclass Indexable k v c where\n    at :: c -&gt; k -&gt; Maybe v\n</code></pre>\n\n<p>An ordinary list is <code>Indexable</code> by <code>Int</code>.</p>\n\n<pre><code>instance Indexable Int a [a] where\n    c `at` k = listToMaybe  . drop k $ c\n</code></pre>\n\n<p>A list that has the special meaning of being an association list can easily be <code>Indexable</code> in a different way if it's wrapped in a <code>newtype</code>.</p>\n\n<pre><code>newtype Assoc k v = Assoc {getAssoc :: [(k, v)]}\n\ninstance (Eq k) =&gt; Indexable k v (Assoc k v) where\n    c `at` k = fmap snd . listToMaybe  . filter ((== k) . fst) . getAssoc $ c\n</code></pre>\n\n<p>With <code>NoMonomorphismRestriction</code> or an explicit signature the test snipped will compile.</p>\n\n<pre><code>-- t1 :: Indexable Int v [Char] =&gt; Maybe v\nt1 = \"hi\" `at` (3 :: Int)\n</code></pre>\n\n<p>The <code>Indexable</code> class can be improved further by using <code>FunctionalDependencies</code> or <code>TypeFamilies</code> to help the compiler infer the involved types.</p>\n\n<pre><code>{-# LANGUAGE FunctionalDependencies #-}\n\nclass Indexable k v c | c -&gt; k, c -&gt; v where\n    at :: c -&gt; k -&gt; Maybe v\n</code></pre>\n"}], "owner": {"reputation": 15004, "user_id": 562906, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a15f15ed0023f4177a518b6c15ca4b6?s=128&d=identicon&r=PG", "display_name": "sinelaw", "link": "https://stackoverflow.com/users/562906/sinelaw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 2, "answer_count": 1, "score": 2, "last_activity_date": 1424879188, "creation_date": 1424824774, "last_edit_date": 1424879188, "question_id": 28709126, "link": "https://stackoverflow.com/questions/28709126/are-closed-type-classes-enough-for-inference-of-associated-types-without-type-f", "title": "Are closed type classes enough for inference of associated types (without type families)?", "body": "<p>In the code below, ghc complains about ambiguity. I'm assuming it's because <strong>type classes are open</strong> (outside code could define new instance and actually make this ambiguous).</p>\n\n<p>If I could somehow <strong>close</strong> the <code>Indexable</code> type class, would that be enough to make this idea a valid way to implement basic associated types?</p>\n\n<p><strong>The question is more about theoretical aspects of type inference</strong> than about how to get it to work in Haskell. Is the problem here a theoretical issue with such a system that would make inference not possible for <code>t1</code> below? Would allowing closed type classes be enough to infer <code>t1</code> unambiguously?</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE NoMonomorphismRestriction #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE FlexibleInstances #-}\n\nclass Indexable a where\n\ninstance Indexable (String, Int, Char) where\ninstance Indexable ([(String, a)], String, a) where\n\ntest1 :: Indexable (a,b,c) =&gt; a -&gt; b -&gt; c\ntest1 x y = undefined\n\nt1 = test1 \"hi\" 3 == 'c'\n\nmain = return ()\n\n----------------------------------------------------------------\n-- indexable.hs:14:6:                                         --\n--     No instance for (Indexable ([Char], b0, Char))         --\n--       arising from a use of \u2018test1\u2019                        --\n--     The type variable \u2018b0\u2019 is ambiguous                    --\n--     Note: there is a potential instance available:         --\n--       instance Indexable (String, Int, Char)               --\n--         -- Defined at indexable.hs:8:10                    --\n--     In the first argument of \u2018(==)\u2019, namely \u2018test1 \"hi\" 3\u2019 --\n--     In the expression: test1 \"hi\" 3 == 'c'                 --\n--     In an equation for \u2018t1\u2019: t1 = test1 \"hi\" 3 == 'c'      --\n--                                                            --\n-- indexable.hs:14:17:                                        --\n--     No instance for (Num b0) arising from the literal \u20183\u2019  --\n--     The type variable \u2018b0\u2019 is ambiguous                    --\n--     Note: there are several potential instances:           --\n--       instance Num Double -- Defined in \u2018GHC.Float\u2019        --\n--       instance Num Float -- Defined in \u2018GHC.Float\u2019         --\n--       instance Integral a =&gt; Num (GHC.Real.Ratio a)        --\n--         -- Defined in \u2018GHC.Real\u2019                           --\n--       ...plus three others                                 --\n--     In the second argument of \u2018test1\u2019, namely \u20183\u2019          --\n--     In the first argument of \u2018(==)\u2019, namely \u2018test1 \"hi\" 3\u2019 --\n--     In the expression: test1 \"hi\" 3 == 'c'                 --\n----------------------------------------------------------------\n</code></pre>\n"}, {"tags": ["string", "list", "haskell", "types", "integer"], "answers": [{"comments": [{"owner": {"reputation": 767, "user_id": 4576720, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/YsT74.jpg?s=128&g=1", "display_name": "Rain Man", "link": "https://stackoverflow.com/users/4576720/rain-man"}, "edited": false, "score": 0, "creation_date": 1424817999, "post_id": 28707865, "comment_id": 45705035, "body": "I will be using it in future, I am trying to add the age of both child to a list called <code>ages</code>"}, {"owner": {"reputation": 767, "user_id": 4576720, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/YsT74.jpg?s=128&g=1", "display_name": "Rain Man", "link": "https://stackoverflow.com/users/4576720/rain-man"}, "edited": false, "score": 0, "creation_date": 1424818625, "post_id": 28707865, "comment_id": 45705321, "body": "thanks for updating the answer. I understand your point. but what I was thinking was to implement this so the user can enter as many child as they want. if I do it like that then we limit the number of child. I will update the code with the loop to show what I mean."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1424866384, "post_id": 28707865, "comment_id": 45724315, "body": "If you know statically that there will only be 2 inputs, you&#39;re better off using a pair rather than a list."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 767, "user_id": 4576720, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/YsT74.jpg?s=128&g=1", "display_name": "Rain Man", "link": "https://stackoverflow.com/users/4576720/rain-man"}, "edited": false, "score": 0, "creation_date": 1425017401, "post_id": 28707865, "comment_id": 45797603, "body": "@RainMan: If your question is appropriate for Stack Overflow, you can ask it and point me to it from here if necessary! You\u2019re more likely to get a timely, complete answer that way. =) If not, I suppose you could send me an e-mail \u2013 see <a href=\"https://github.com/minitech\" rel=\"nofollow noreferrer\">github.com/minitech</a>."}], "tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": true, "score": 2, "last_activity_date": 1424825835, "last_edit_date": 1424825835, "creation_date": 1424817916, "answer_id": 28707865, "question_id": 28707765, "link": "https://stackoverflow.com/questions/28707765/type-errors-in-haskell/28707865#28707865", "title": "Type errors in haskell", "body": "<p><code>ages ++ [age1]</code> and <code>ages ++ [age2]</code> are expressions that result in <code>[Int]</code>. They don\u2019t modify <code>ages</code>; <code>ages</code> is just a value. Since you\u2019re not using <code>ages</code> at all, a really simple fix would just be to take all three lines out:</p>\n\n<pre><code>let ages = []\nages ++ [age1]\nages ++ [age2]\n</code></pre>\n\n<p><code>ages</code> can be built from <code>age1</code> and <code>age2</code> later if you were going to use it as <code>[age1, age2]</code>. If you were wanting to use a list to not repeat yourself, you\u2019d probably do it more along these lines in Haskell:</p>\n\n<pre><code>readAge :: String -&gt; IO Int\nreadAge prompt = do\n    putStrLn prompt\n    readLn :: IO Int\n\nmain = do\n    ages &lt;- mapM readAge [\"Enter child 1 age\", \"Enter child 2 age\"]\n    print ages\n</code></pre>\n\n<p>To do it in a loop, you could start with:</p>\n\n<pre><code>readAges :: IO [Int]\nreadAges = do\n    putStrLn \"Enter child age\"\n    age &lt;- readLn :: IO Int\n\n    if age == 0 then\n        return []\n    else\n        fmap (age:) readAges\n\nmain :: IO ()\nmain = do\n    ages &lt;- readAges\n    print ages\n</code></pre>\n\n<p>where <code>fmap (age:) readAges</code> is short for:</p>\n\n<pre><code>ages &lt;- readAges\nreturn $ age : ages\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "is_accepted": false, "score": 0, "last_activity_date": 1424824359, "creation_date": 1424824359, "answer_id": 28709054, "question_id": 28707765, "link": "https://stackoverflow.com/questions/28707765/type-errors-in-haskell/28709054#28709054", "title": "Type errors in haskell", "body": "<p>In Haskell, variables are immutable. You might be looking for something more like this:</p>\n\n<pre><code>inputAges :: [Int] -&gt; IO [Int]\ninputAges (0:otherAges) = return otherAges\ninputAges ages          = _\n</code></pre>\n\n<p>This recursive function keeps track of the ages in its argument. The first line of the definition checks to see if the latest age read is <code>0</code>. If so, it gives you back everything but the <code>0</code>. A list will match the pattern <code>(0:otherAges)</code> if it has at least one element and its head is <code>0</code>. If it matches, the tail is bound to <code>otherAges</code>. Otherwise, it goes to the next pattern (here, the next line).</p>\n\n<p>I left the recursive case to be filled in, but I can give some more help on that. You need something that reads in an age and calls itself with a list that has the new age prepended. The reading in part will look much the same as it does in the code in your question.</p>\n"}], "owner": {"reputation": 767, "user_id": 4576720, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/YsT74.jpg?s=128&g=1", "display_name": "Rain Man", "link": "https://stackoverflow.com/users/4576720/rain-man"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 28707865, "answer_count": 2, "score": 0, "last_activity_date": 1424829270, "creation_date": 1424817511, "last_edit_date": 1424829270, "question_id": 28707765, "link": "https://stackoverflow.com/questions/28707765/type-errors-in-haskell", "title": "Type errors in haskell", "body": "<p>I literally started learning haskell in the past few hours following <a href=\"http://learnyouahaskell.com/starting-out\" rel=\"nofollow\">this tutorial</a>. I keep getting <code>Couldn't match type</code> error when trying to compile the following code: </p>\n\n<pre><code>module Main where\nimport Control.Monad\n\nmain = do\n    putStrLn \"Enter child age\"\n    input &lt;- getLine\n    -- convert the string to int\n    let age = read input :: Int\n    unless (age == 0) $ do\n        -- let ages = []\n        -- print age\n        -- add child age to list here?\n        ages ++ [age]\n        main\n</code></pre>\n\n<p>Here is the error: </p>\n\n<pre><code>Couldn't match type `IO' with `[]'                                                                         \nExpected type: [()]                                                                                        \n  Actual type: IO () \n</code></pre>\n\n<p>I have been searching for several hours trying to understand the issue but have no clue. Why does <code>ages ++ [age2]</code> expects a type <code>IO Int</code> ? and how to resolve this issue?</p>\n\n<p>update: <code>ages</code> is a list which will contain the age of both child. It will be used in future. Also created the loop</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 0, "creation_date": 1424958488, "post_id": 28707547, "comment_id": 45770848, "body": "The functionality of <code>gdiff</code> is hardly obsolete. But the question seems to be if the library could be expressed using other approaches to generic programming. The answer to the latter question is a qualified yes. There is for example <code>gdiff-ig</code> which reimplements it on top of &quot;instant generics&quot;. There are complicated tradeoffs, though, and I&#39;m not sure if such a discussion is in scope for SO."}], "owner": {"reputation": 6568, "user_id": 383508, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/d9d61149baeb9e5c9d1432b220e49cd0?s=128&d=identicon&r=PG", "display_name": "fho", "link": "https://stackoverflow.com/users/383508/fho"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 96, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1424816645, "creation_date": 1424816645, "question_id": 28707547, "link": "https://stackoverflow.com/questions/28707547/is-the-gdiff-library-obsolete", "title": "Is the gdiff library obsolete?", "body": "<p>I just had a closer look at the <a href=\"http://hackage.haskell.org/package/gdiff\" rel=\"nofollow\">gdiff library</a> and wondered if some of the work there could be shifted into GHC Generics and/or Typeables. </p>\n\n<p>To make this a solid question: could the library be improved and deflated by utilizing features available in current ghc versions? </p>\n"}, {"tags": ["string", "haskell", "file-io", "recursion"], "answers": [{"comments": [{"owner": {"reputation": 666, "user_id": 2942659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/1460272084/picture?type=large", "display_name": "Aistis Taraskevicius", "link": "https://stackoverflow.com/users/2942659/aistis-taraskevicius"}, "edited": false, "score": 1, "creation_date": 1424816270, "post_id": 28707393, "comment_id": 45704250, "body": "cheers it works, not sure if I should feel stupid or happy that it was something so simple ;)"}, {"owner": {"reputation": 7353, "user_id": 1378292, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/bea4eb8581883ffd109fca9ab95fdb3a?s=128&d=identicon&r=PG", "display_name": "mjgpy3", "link": "https://stackoverflow.com/users/1378292/mjgpy3"}, "reply_to_user": {"reputation": 666, "user_id": 2942659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/1460272084/picture?type=large", "display_name": "Aistis Taraskevicius", "link": "https://stackoverflow.com/users/2942659/aistis-taraskevicius"}, "edited": false, "score": 0, "creation_date": 1424816309, "post_id": 28707393, "comment_id": 45704270, "body": "@AistisTaraskevicius, glad to hear it. Please accept the answer if you feel so inclined."}, {"owner": {"reputation": 666, "user_id": 2942659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/1460272084/picture?type=large", "display_name": "Aistis Taraskevicius", "link": "https://stackoverflow.com/users/2942659/aistis-taraskevicius"}, "edited": false, "score": 0, "creation_date": 1424816353, "post_id": 28707393, "comment_id": 45704291, "body": "Will do once it allows me in 7 mins."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 2, "creation_date": 1424830359, "post_id": 28707393, "comment_id": 45708829, "body": "Note that these recursive uses of <code>(++)</code> will have polynomial time."}], "tags": [], "owner": {"reputation": 7353, "user_id": 1378292, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/bea4eb8581883ffd109fca9ab95fdb3a?s=128&d=identicon&r=PG", "display_name": "mjgpy3", "link": "https://stackoverflow.com/users/1378292/mjgpy3"}, "is_accepted": true, "score": 2, "last_activity_date": 1424815989, "creation_date": 1424815989, "answer_id": 28707393, "question_id": 28707357, "link": "https://stackoverflow.com/questions/28707357/haskell-combining-values-into-string-using-show-recursivly/28707393#28707393", "title": "Haskell combining values into string using show, recursivly", "body": "<p>It looks like you need to use the append (<code>++</code>) again rather than cons (<code>:</code>) at the end of the <code>createOutput</code> recursive call.</p>\n\n<p>Think about types, <code>++</code> concatenates two <code>String</code>s (formally equal to <code>List</code>s of <code>Chars</code>) whereas, <code>:</code> adds a <code>Char</code> to the beginning of a string.</p>\n\n<p>This can be more formally recognized by their type signatures:</p>\n\n<pre><code>(++) :: [a] -&gt; [a] -&gt; [a]\n(:) :: a -&gt; [a] -&gt; [a]\n</code></pre>\n"}], "owner": {"reputation": 666, "user_id": 2942659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/1460272084/picture?type=large", "display_name": "Aistis Taraskevicius", "link": "https://stackoverflow.com/users/2942659/aistis-taraskevicius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 28707393, "answer_count": 1, "score": 0, "last_activity_date": 1424815989, "creation_date": 1424815853, "question_id": 28707357, "link": "https://stackoverflow.com/questions/28707357/haskell-combining-values-into-string-using-show-recursivly", "title": "Haskell combining values into string using show, recursivly", "body": "<pre><code>writer :: DataBase -&gt; IO ()\nwriter [] = writeFile \"output.txt\" \"\"\nwriter xs = writeFile \"output.txt\"  (createOutput xs)\n\ncreateOutput :: DataBase -&gt; String\ncreateOutput [] = \"\"\ncreateOutput (x:xs) = (show (get1 x)++\", \"++ (get2 x)++\", \"++(get3 x)++\", \"++show(get4 x) ++\", \"++show(get5 x)++\", \"++show(get6 x)++\"\\n\") : createOutput xs\n</code></pre>\n\n<p>recursive call at the end of <code>createOutput</code></p>\n\n<pre><code> : createOutput xs\n</code></pre>\n\n<p>breaks my function, it works fine without recursion, but I cannot execute it recursivly , which is whole point. What I am trying to do is to get values from a \"Custom\" data type which is basically a list of tuples and <code>get1</code> <code>get2</code> etc, fetches first second and so on element in tuple</p>\n\n<pre><code>type Id = Integer\ntype Song = String\ntype Group = String\ntype Year = Integer\ntype Length = Integer\ntype Rate = Rational\n\ntype Data = (Id, Song, Group, Year, Length, Rate)\ntype DataBase = [Data]\nget1 (a1, _, _, _, _, _) = a1\nget2 (_, a2, _, _, _, _) = a2\nget3 (_, _, a3, _, _, _) = a3\nget4 (_, _, _, a4, _, _) = a4\nget5 (_, _, _, _, a5, _) = a5\nget6 (_, _, _, _, _, a6) = a6\n</code></pre>\n\n<p>I am using <code>show</code> to convert non string variables to string, but everything falls apart when I am trying to make function call it self recursively, I attempted adding bunch of brackets around, or not to use <code>show</code>, but even then with just single <code>get</code> statement it breaks apart and it honestly eludes me why...</p>\n\n<p>I know I can print file with <code>writeFile \"output.txt\" (show xs)</code>, but it doesnt produce output I want, which is having no quotation marks and new line for each tuple</p>\n"}, {"tags": ["haskell", "maybe"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 5, "creation_date": 1424814077, "post_id": 28706843, "comment_id": 45703120, "body": "There&#39;s the <code>maybe</code> function in <code>Prelude</code>, and a couple more useful ones in <code>Data.Maybe</code>.  What do you want to happen when the <code>lookup</code> returns <code>Nothing</code>?"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1424814189, "post_id": 28706843, "comment_id": 45703178, "body": "Another common pattern is to use <code>fmap</code> to turn a function that works on normal values into one that works on <code>Maybe</code> values."}, {"owner": {"reputation": 765, "user_id": 2974642, "user_type": "registered", "accept_rate": 28, "profile_image": "https://www.gravatar.com/avatar/8a3448409a891f6d3394aa81ab0b32d9?s=128&d=identicon&r=PG&f=1", "display_name": "UnworthyToast", "link": "https://stackoverflow.com/users/2974642/unworthytoast"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1424814747, "post_id": 28706843, "comment_id": 45703446, "body": "Thanks @bheklilr, I&#39;ll look into <code>fmap</code>. And the <code>Nothing&#39; return is just to give </code>eval` something explicit to do when the input string is not found in the list that <code>lookup</code> is searching through."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1424814785, "post_id": 28706843, "comment_id": 45703465, "body": "The point is, what if your expression uses a variable which is not defined by your memory? In that case, I guess your lookup would return <code>Nothing</code>. What <code>WValue</code> would you return then as the result of the expression evaluation?"}, {"owner": {"reputation": 765, "user_id": 2974642, "user_type": "registered", "accept_rate": 28, "profile_image": "https://www.gravatar.com/avatar/8a3448409a891f6d3394aa81ab0b32d9?s=128&d=identicon&r=PG&f=1", "display_name": "UnworthyToast", "link": "https://stackoverflow.com/users/2974642/unworthytoast"}, "edited": false, "score": 0, "creation_date": 1424817801, "post_id": 28706843, "comment_id": 45704947, "body": "There are certain elements in the memory that are listed as <code>(&quot;|&quot;, undefined)</code>. The reason for this is unimportant, but there are times where when the value would obviously be undefined, and so <code>Nothing</code> would be returned in these cases. That being said, the specific instance of <code>eval</code> that I am talking about would be called by the user, not from any other functions. Because I&#39;m not making this for any commercial purpose, it&#39;s safe to assume the user would search for a string that the user would know already exists. So, in this perfect world, a proper key would always be returned."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 6, "creation_date": 1424818603, "post_id": 28706843, "comment_id": 45705314, "body": "@UnworthyToast, partial functions are widely condemned by Haskell programmers. If the user searches for something that&#39;s not there, they don&#39;t want to see your program crash with some internal error; they want it to return a failure message and let them try again. That&#39;s done by letting the <code>Maybe</code> bubble all the way out to your user interface, where it can be handled gracefully. (Or, in some cases, turning the <code>Maybe</code> into something else like <code>Either</code> or <code>Error</code> or whatever that can hold on to detailed information about the problem.)"}], "answers": [{"tags": [], "owner": {"reputation": 716, "user_id": 1995474, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ae968c7b168bb164fc30f3e3254a8478?s=128&d=identicon&r=PG", "display_name": "Stephan", "link": "https://stackoverflow.com/users/1995474/stephan"}, "is_accepted": false, "score": 7, "last_activity_date": 1424819451, "creation_date": 1424819451, "answer_id": 28708184, "question_id": 28706843, "link": "https://stackoverflow.com/questions/28706843/getting-a-value-from-maybe-a-return-type-in-haskell/28708184#28708184", "title": "Getting &#39;a&#39; value from &#39;Maybe a&#39; return type in Haskell", "body": "<p>If you know that the lookup is successful, and that the <code>Maybe a</code> is actually <code>Just a</code>, you can simply pattern match:</p>\n\n<pre><code>let (Just val) = lookup ...\n</code></pre>\n\n<p>and there you have your <code>val::a</code> out of your <code>Maybe a</code>. Note that this is unsafe code which will ungracefully throw an error if <code>lookup</code> returns a <code>Nothing</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 1, "creation_date": 1424823379, "post_id": 28708661, "comment_id": 45707014, "body": "in your first two examples maybe you want <code>show input</code> in the <code>Nothing</code> case since <code>a</code> is defined?"}, {"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 0, "creation_date": 1546946681, "post_id": 28708661, "comment_id": 95013768, "body": "Wow, I ran that and all my private keys were published. I demand a refund. &gt;:("}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 1, "creation_date": 1546980311, "post_id": 28708661, "comment_id": 95031668, "body": "@MateenUlhaq, your full refund of US $0.00 has been electronically transferred to your account."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 12, "last_activity_date": 1546980403, "last_edit_date": 1546980403, "creation_date": 1424821976, "answer_id": 28708661, "question_id": 28706843, "link": "https://stackoverflow.com/questions/28706843/getting-a-value-from-maybe-a-return-type-in-haskell/28708661#28708661", "title": "Getting &#39;a&#39; value from &#39;Maybe a&#39; return type in Haskell", "body": "<h3>Do this</h3>\n\n<pre><code>do\n   input &lt;- getUserInput\n   result &lt;- lookup input structure\n   case result of\n     Just a -&gt; putStrLn $ \"I'm so happy you chose \"++show a++\".\"\n     Nothing -&gt; putStrLn $ \"So sorry; \"++input++\" is not a valid option.\"\n</code></pre>\n\n<h3>Don't do this</h3>\n\n<pre><code>do\n   input &lt;- getUserInput\n   result &lt;- lookup input structure\n   case result of\n     Just a -&gt; putStrLn $ \"I'm so happy you chose \"++show a++\".\"\n     Nothing -&gt; error $ input ++ \" is not a valid option.\"\n</code></pre>\n\n<p>This is bad because your program just goes splat if the user input is wrong.</p>\n\n<h3>Really don't do this</h3>\n\n<p>There is a function called <code>fromJust</code> that attempts to pull a value out of a <code>Maybe</code> and throws an error if it finds <code>Nothing</code>. It looks like</p>\n\n<pre><code>fromJust :: Maybe a -&gt; a\nfromJust (Just a) = a\nfromJust Nothing = error \"Oops, you goofed up, fool.\"\n</code></pre>\n\n<p>This makes it hard to see what went wrong.</p>\n\n<h3>And really, <em>really</em> don't do this</h3>\n\n<p>But if you want to play with fire, you can try it just for fun. This will attempt to get a value out of a <code>Maybe</code> and crash real hard if it finds <code>Nothing</code>. By \"crash real hard\" I mean you'll get a segmentation fault if you're lucky, and you'll publish your private keys on the web if you're not.</p>\n\n<pre><code>{-# LANGUAGE GADTs, DataKinds, KindSignatures #-}\n{-# OPTIONS_GHC -fno-warn-unused-binds #-}\n\nmodule Unsafe.FromJust (unsafeFromJust) where\n\n-- Clear sign of bad news\nimport Unsafe.Coerce (unsafeCoerce)\n\n-- This creates a \"closed kind\" with types\n-- 'JustType and 'NothingType. You could just\n-- define datatypes called JustType and NothingType,\n-- but this makes the intent clearer.\ndata MaybeType = JustType | NothingType\n\ndata M (t::MaybeType) a where\n  -- The order of these constructors must not\n  -- be changed, because this type must look,\n  -- at runtime, exactly like a Maybe\n  N :: M 'NothingType a\n  J :: a -&gt; M 'JustType a\n\n-- A safe sort of fromJust for M.\nfromJ :: M 'JustType a -&gt; a\nfromJ (J a) = a\n\n-- Really, seriously unsafe.\nunsafeFromJust :: Maybe a -&gt; a\nunsafeFromJust m = fromJ (unsafeCoerce m)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 486, "user_id": 854672, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3eda4f03accf45734865ea7e6c6de010?s=128&d=identicon&r=PG", "display_name": "MauganRa", "link": "https://stackoverflow.com/users/854672/mauganra"}, "is_accepted": false, "score": 0, "last_activity_date": 1527439764, "creation_date": 1527439764, "answer_id": 50554390, "question_id": 28706843, "link": "https://stackoverflow.com/questions/28706843/getting-a-value-from-maybe-a-return-type-in-haskell/50554390#50554390", "title": "Getting &#39;a&#39; value from &#39;Maybe a&#39; return type in Haskell", "body": "<p>Well, you got yourself into a quagmire because the type of your <code>lookup</code> says that it could fail. Haskell forces you in this case to deal with the possibility that such a failure will occur. This is the case if <code>lookup</code> returns <code>Nothing</code>.</p>\n\n<p>If you are <em>really</em> sure that <code>lookup</code> never fails (maybe because you preprocessed and type-checked the program, or you really trust it :) ) you could use <code>fromJust</code> from <code>Data.Maybe</code>. Note that is is really just a band-aid solution because <code>fromJust</code> <em>will</em> produce a (Haskell) runtime error on its own if called with <code>Nothing</code>. </p>\n"}, {"tags": [], "owner": {"reputation": 7626, "user_id": 50542, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7c058491c70fdb295600b8235cc2b252?s=128&d=identicon&r=PG", "display_name": "CDR", "link": "https://stackoverflow.com/users/50542/cdr"}, "is_accepted": false, "score": 10, "last_activity_date": 1535789919, "creation_date": 1535789919, "answer_id": 52126304, "question_id": 28706843, "link": "https://stackoverflow.com/questions/28706843/getting-a-value-from-maybe-a-return-type-in-haskell/52126304#52126304", "title": "Getting &#39;a&#39; value from &#39;Maybe a&#39; return type in Haskell", "body": "<p>The function you are looking for is <code>maybe</code> defined in Prelude.</p>\n\n<p>You need to decide on what to return if the expression is Nothing. Lets say you want to get empty string <code>\"\"</code> for Nothing. Then the following will let you get out of Maybe boxes.</p>\n\n<pre><code>Prelude&gt; maybe \"\" id (Just \"hello\")\n\"hello\"\nPrelude&gt; maybe \"\" id (Nothing)\n\"\"\n</code></pre>\n"}], "owner": {"reputation": 765, "user_id": 2974642, "user_type": "registered", "accept_rate": 28, "profile_image": "https://www.gravatar.com/avatar/8a3448409a891f6d3394aa81ab0b32d9?s=128&d=identicon&r=PG&f=1", "display_name": "UnworthyToast", "link": "https://stackoverflow.com/users/2974642/unworthytoast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 15671, "favorite_count": 4, "accepted_answer_id": 28708661, "answer_count": 4, "score": 8, "last_activity_date": 1546980403, "creation_date": 1424813939, "question_id": 28706843, "link": "https://stackoverflow.com/questions/28706843/getting-a-value-from-maybe-a-return-type-in-haskell", "title": "Getting &#39;a&#39; value from &#39;Maybe a&#39; return type in Haskell", "body": "<p>This is going to be hard to explain because there is a decent amount of background detail about the code as a whole that needs to be known to really know functionally what I'm talking about. But I'll try my best to just get my main point across, and hope that it's enough. Let me know if not and I'll add more information. So:</p>\n\n<p>I have a Haskell function <code>eval :: WExp -&gt; Memory -&gt; WValue</code> with a bunch of different instances of itself for different cases. For now, knowledge about <code>WExp</code>, <code>Memory</code>, and <code>WValue</code> is not relevant. My problem is that, for a specific instance of <code>eval</code>, I am using a <code>lookup</code> function, which takes the parameter of <code>eval</code> (a string in this case) searches a list of key-value pairs for that string. Note that this <code>lookup</code> function is not the one included in the Prelude; it is self-defined within the .hs file. If the string is found, the value associated with it is returned, but if it is not found, <code>Nothing</code> is returned. Because of the <code>Nothing</code> case, the type of <code>lookup</code> is actually <code>Maybe a</code>, where <code>a</code> would be a <code>WValue</code> in this case. Because <code>eval</code> would return a <code>Maybe WValue</code>, the compiler obviously complains that the type is not <code>WValue</code>. </p>\n\n<p>Again, if you need more information on what these other types are, I can provide it. It is just my thought that there might be some kind of general method to extract the <code>a</code> value from any function that returns <code>Maybe a</code>. If not, I guess I'll look elsewhere for solutions :)</p>\n"}, {"tags": ["haskell", "amazon-web-services", "amazon-ec2", "amazon-s3", "yesod"], "comments": [{"owner": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "reply_to_user": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 0, "creation_date": 1424816509, "post_id": 28706603, "comment_id": 45704369, "body": "@Tobias Brandt - i&#39;d try first to install yesod locally using ubuntu 14. but i&#39;d failed..also don&#39;t have have the idea.. coz i&#39;m new to haskell yesod.."}, {"owner": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 1, "creation_date": 1424816809, "post_id": 28706603, "comment_id": 45704496, "body": "If you are on Ubuntu 10.14, you should be able to <code>sudo apt-get install haskell-platform</code> . After that, follow <a href=\"http://www.yesodweb.com/page/quickstart\" rel=\"nofollow noreferrer\">yesodweb.com/page/quickstart</a>"}, {"owner": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "reply_to_user": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 0, "creation_date": 1424860941, "post_id": 28706603, "comment_id": 45721107, "body": "how about in ubuntu 14? cause the amazon ec2 provides the updated OS w/c is the Ubuntu Server 14.04 LTS."}, {"owner": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 0, "creation_date": 1424879379, "post_id": 28706603, "comment_id": 45733485, "body": "Sorry, I meant 14.04. Just follow the link."}], "answers": [{"comments": [{"owner": {"reputation": 86, "user_id": 3980464, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d794c7f110dbf4d604c417214528eba6?s=128&d=identicon&r=PG&f=1", "display_name": "notvitor", "link": "https://stackoverflow.com/users/3980464/notvitor"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1424879899, "post_id": 28709181, "comment_id": 45733915, "body": "To complement my answer above I&#39;d also like suggest that you take a look at halcyon (<a href=\"https://halcyon.sh/\" rel=\"nofollow noreferrer\">halcyon.sh</a>) and DO NOT compile your code inside your EC2 for obvious reasons."}, {"owner": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425460941, "post_id": 28709181, "comment_id": 45968482, "body": "i already have the compiled version of my project tnx to @fpcomplete IDE. but once i install the keter it gives me and error..  i&#39;ll already create and issue to this on <a href=\"https://github.com/snoyberg/keter/issues/76\" rel=\"nofollow noreferrer\">GITHUB</a>"}], "tags": [], "owner": {"reputation": 86, "user_id": 3980464, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d794c7f110dbf4d604c417214528eba6?s=128&d=identicon&r=PG&f=1", "display_name": "notvitor", "link": "https://stackoverflow.com/users/3980464/notvitor"}, "is_accepted": false, "score": 5, "last_activity_date": 1424883018, "last_edit_date": 1424883018, "creation_date": 1424825160, "answer_id": 28709181, "question_id": 28706603, "link": "https://stackoverflow.com/questions/28706603/haskell-yesod-on-amazon/28709181#28709181", "title": "Haskell (Yesod) on Amazon", "body": "<p>I'd suggest you to look at <a href=\"https://github.com/snoyberg/keter/\" rel=\"nofollow noreferrer\">https://github.com/snoyberg/keter/</a>\nand Halcyon at <a href=\"https://halcyon.sh/\" rel=\"nofollow noreferrer\">https://halcyon.sh/</a></p>\n\n<p>They are deployment managers for Haskell web apps. Keter was written in Haskell and Halcyon shell.</p>\n\n<p>In my opinion keter handles amazon better and halcyon is more for dependencies, initial setup, heroku and digital ocean. Both are awesome.</p>\n\n<p>(UPDATE 25-02-2015)</p>\n\n<p>Keter is mentioned at Developing Web Apps with Haskel and Yesod, 2nd Edition, launched this February 2015, (<a href=\"http://www.yesodweb.com/book/deploying-your-webapp\" rel=\"nofollow noreferrer\">http://www.yesodweb.com/book/deploying-your-webapp</a>). I highly recommend it, both the tools and the book.</p>\n\n<p>Also, I'd recommend heroku if it's just a pet project or something to test on.</p>\n\n<p>Links:</p>\n\n<p><a href=\"http://shop.oreilly.com/product/0636920035664.do\" rel=\"nofollow noreferrer\">http://shop.oreilly.com/product/0636920035664.do</a></p>\n\n<p><a href=\"https://rads.stackoverflow.com/amzn/click/com/1491915595\" rel=\"nofollow noreferrer\" rel=\"nofollow noreferrer\">http://www.amazon.com/Developing-Apps-Haskell-Yesod-Safety-Driven/dp/1491915595/ref=dp_ob_title_bk</a></p>\n\n<p><a href=\"https://github.com/snoyberg/keter/\" rel=\"nofollow noreferrer\">https://github.com/snoyberg/keter/</a></p>\n\n<p><a href=\"https://halcyon.sh/\" rel=\"nofollow noreferrer\">https://halcyon.sh/</a></p>\n"}, {"comments": [{"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425474968, "post_id": 28724650, "comment_id": 45976854, "body": "@RyanMonreal yeah, it might be confusing a little, but please feel free to ask questions either on StackOverflow or yesod GoogleGroups, I&#39;ll help you with them, since I succeeded with Keter in past"}, {"owner": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425488934, "post_id": 28724650, "comment_id": 45986576, "body": "so does it mean you also run yesod on Amazon ec2? can you tell me the what is the minimum requirements to install keter? in my situation i use the the t2.micro for my instance, and I also created an issue o <a href=\"https://github.com/snoyberg/keter/issues/76\" rel=\"nofollow noreferrer\">GITHUB</a>."}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425489664, "post_id": 28724650, "comment_id": 45987044, "body": "@RyanMonreal any amazon instance should be more than happy to run keter, just don&#39;t build it there, but build it locally on linux machine (or VM) and copy keter executable to instance. keter is a lightweight high-performance executable, similar to nginx, but written in Haskell, has it&#39;s config format and is able to listen to changes in /opt/keter/incoming, so you don&#39;t have to do anything other than scping your proj.keter file to /opt/keter/incoming"}, {"owner": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425494512, "post_id": 28724650, "comment_id": 45989849, "body": "i get through on installing the keter on my instance. also i build already my Project using fpcomplete IDE it give me a complete package of the build project. but onece i follow <a href=\"http://www.yesodweb.com/book/deploying-your-webapp#deploying-your-webapp_server_process\" rel=\"nofollow noreferrer\">Link</a> and <code>sudo start mysite</code> it give me error.. how was it?"}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425546115, "post_id": 28724650, "comment_id": 46010037, "body": "@RyanMonreal ah, I see now. I was supposing you used just a regular local build to build your project locally. In that case, you would just run <code>yesod keter</code> and have a <code>.keter</code> file that you need to <code>scp</code> to your amazon instance."}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425546145, "post_id": 28724650, "comment_id": 46010053, "body": "@RyanMonreal let me see how to deploy fpcomplete-developed yesod app for a moment"}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425546628, "post_id": 28724650, "comment_id": 46010297, "body": "@RyanMonreal after you downloaded your app from fpcomplete center you can either just unpack and run that Main executable on your amazon server. It will run on some port (not 80), you can either remove keter and just configure nginx to forward 80 port to that port, or you can try to configure keter for this. To configure keter -- unpack locally that .tar.gz, put a <code>config&#47;keter.yml</code> file with following contents <a href=\"https://gist.github.com/k-bx/056b07a85eec3e01ae8d\" rel=\"nofollow noreferrer\">gist.github.com/k-bx/056b07a85eec3e01ae8d</a> (edit your hostname and ip), then pack it back to .tar.gz, rename that .tar.gz to .keter instead."}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425546636, "post_id": 28724650, "comment_id": 46010301, "body": "@RyanMonreal  scp this .keter-file to your host&#39;s /opt/keter/incoming."}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425546749, "post_id": 28724650, "comment_id": 46010361, "body": "@RyanMonreal but as I understand, recommended way to deploy fpcomplete is to use their deployment mechanism. They will use amazon instance, created for your app. Try that via fpcomplete IDE menu, contact their support if something doesn&#39;t work."}, {"owner": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425666559, "post_id": 28724650, "comment_id": 46069764, "body": "i tried your instruction, now How can i access it in the browser?"}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "edited": false, "score": 0, "creation_date": 1425757354, "post_id": 28724650, "comment_id": 46095846, "body": "@RyanMonreal amazon control panel shows your server&#39;s public address. Go to http://&lt;address&gt;:&lt;port&gt; (port should be written by app on launch)"}], "tags": [], "owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "is_accepted": false, "score": 1, "last_activity_date": 1424882555, "creation_date": 1424882555, "answer_id": 28724650, "question_id": 28706603, "link": "https://stackoverflow.com/questions/28706603/haskell-yesod-on-amazon/28724650#28724650", "title": "Haskell (Yesod) on Amazon", "body": "<p>Yesod book has a whole chapter on how to deploy your Yesod app <a href=\"http://www.yesodweb.com/book/deploying-your-webapp\" rel=\"nofollow\">http://www.yesodweb.com/book/deploying-your-webapp</a></p>\n\n<p>Amazon is recommended there, so it should work on amazon without any trouble. If you'll have more specific questions regarding keter -- please post them as new questions then.</p>\n"}, {"tags": [], "owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "is_accepted": false, "score": 2, "last_activity_date": 1447306971, "last_edit_date": 1495540433, "creation_date": 1447306971, "answer_id": 33665141, "question_id": 28706603, "link": "https://stackoverflow.com/questions/28706603/haskell-yesod-on-amazon/33665141#33665141", "title": "Haskell (Yesod) on Amazon", "body": "<p>I could use Nginx as a front end server, and use Yesod app as the reverse proxy on EC2/Ubuntu 14.04. I didn't try Keter, as Nginx/Yesod just works fine. I assume you already install the Nginx.</p>\n\n<h2>Installation of Haskell/Yesod</h2>\n\n<p>As the Yesod author comments in <a href=\"http://www.yesodweb.com/page/quickstart\" rel=\"nofollow noreferrer\">http://www.yesodweb.com/page/quickstart</a>, Stackage (<a href=\"https://www.stackage.org\" rel=\"nofollow noreferrer\">https://www.stackage.org</a>) is really easy to install dependent libraries, and even Haskell itself. I followed this site (<a href=\"https://github.com/commercialhaskell/stack/blob/master/doc/install_and_upgrade.md\" rel=\"nofollow noreferrer\">https://github.com/commercialhaskell/stack/blob/master/doc/install_and_upgrade.md</a>) to easily install Stack on Ubuntu 14.04.</p>\n\n<ol>\n<li><code>wget -q -O- https://s3.amazonaws.com/download.fpcomplete.com/ubuntu/fpco.key | sudo apt-key add -</code></li>\n<li><code>echo 'deb http://download.fpcomplete.com/ubuntu/trusty stable main'|sudo tee /etc/apt/sources.list.d/fpco.list</code></li>\n<li><code>sudo apt-get update &amp;&amp; sudo apt-get install stack -y</code></li>\n</ol>\n\n<p>You can use <code>stack ghci</code> to launch Haskell REPL. </p>\n\n<h2>Create and build Yesod project</h2>\n\n<ul>\n<li><code>stack new my-project yesod-sqlite &amp;&amp; cd my-project</code></li>\n<li><code>stack install yesod-bin cabal-install --install-ghc</code></li>\n<li><code>stack build</code></li>\n</ul>\n\n<h3>Use swap to benefit more memory</h3>\n\n<p>For my EC2 server, I havd only 1G memory not to finish the build, but I could use \nswap to use more memory - <a href=\"https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04\" rel=\"nofollow noreferrer\">https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04</a></p>\n\n<ol>\n<li><code>sudo fallocate -l 4G /swapfile</code></li>\n<li><code>sudo chmod 600 /swapfile</code></li>\n<li><code>sudo mkswap /swapfile</code></li>\n<li><code>sudo swapon /swapfile</code></li>\n</ol>\n\n<h2>Development test</h2>\n\n<ul>\n<li><code>stack exec -- yesod devel</code></li>\n</ul>\n\n<p>You can launch webbrowser to check with <code>http://localhost:3000</code>. </p>\n\n<h2>Deployment</h2>\n\n<p>From <a href=\"http://www.yesodweb.com/book/deploying-your-webapp\" rel=\"nofollow noreferrer\">http://www.yesodweb.com/book/deploying-your-webapp</a>, I need three components to deploy to other machine. </p>\n\n<ol>\n<li>Your executable.</li>\n<li>The config folder.</li>\n<li>The static folder.</li>\n</ol>\n\n<p>The <code>stack build</code> command gives me the location of the executable:</p>\n\n<pre><code>my-project-0.0.0: install\nInstalling library in\n/home/a/my-project/.stack-work/install/x86_64-linux/lts-3.13/7.10.2/lib/x86_64-linux-ghc-7.10.2/my-project-0.0.0-Khn8lQEgR1HARzYGStlvPe\nInstalling executable(s) in\n/home/a/my-project/.stack-work/install/x86_64-linux/lts-3.13/7.10.2/bin\nRegistering my-project-0.0.0...\n</code></pre>\n\n<p>The executable is located in <code>/home/a/my-project/.stack-work/install/x86_64-linux/lts-3.13/7.10.2/bin</code>. I could copy the files (executable, static, and config) in ~/deployment directory to check the Yesod works fine. </p>\n\n<p>This is the directory structure. </p>\n\n<pre><code>\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 client_session_key.aes\n...\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test-settings.yml\n\u251c\u2500\u2500 my-project\n\u2514\u2500\u2500 static\n    ...\n</code></pre>\n\n<h2>Change port number</h2>\n\n<p>Change the port number in config/settings.yml </p>\n\n<pre><code>port:           \"_env:PORT:3002\"\napproot:        \"_env:APPROOT:http://localhost:3002\"\n</code></pre>\n\n<p>(I'm not sure why) However, to make the settings.yml work, you need to copy the file in current directory, then run the <code>./my_project settings.yml</code>.</p>\n\n<p>Check <code>http://localhost:3002</code>.</p>\n\n<h2>Setup Nginx server</h2>\n\n<p>This is the conf file for Yesod. </p>\n\n<pre><code># the IP(s) on which your node server is running. I chose port 3000.\nupstream yesod {\n        server 127.0.0.1:3002;\n        keepalive 8;\n}\n\n# the nginx server instance\nserver {\n        listen 0.0.0.0:80;\n        server_name yesod.example.com;\n        access_log /var/log/nginx/access_yesod.log;\n        error_log /var/log/nginx/error_yesod.log;\n\n        location / {\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header Host $http_host;\n            proxy_set_header X-NginX-Proxy true;\n\n            proxy_pass http://yesod/;\n            proxy_redirect off;\n        }\n\n        location /excluded {\n            return 403;\n        } \n}\n</code></pre>\n\n<p>Copy this file in /etc/nginx/site-enabled (or make symlink from site-available), then relaunch the nginx <code>sudo server nginx restart</code>. </p>\n\n<p>Now, you can access the Yesod app from <code>http://yesod.example.com</code>.</p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"https://hackage.haskell.org/package/stack\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/stack</a></li>\n<li><a href=\"https://stackoverflow.com/questions/33657566/deploying-yesod-web-app\">Deploying Yesod web app</a></li>\n<li><a href=\"https://stackoverflow.com/questions/33658641/change-yesod-port-number\">Change Yesod port number</a></li>\n<li><a href=\"https://stackoverflow.com/questions/33445898/haskell-cabal-issue-with-mac-os-x-10-11-cannot-satisfy-package-id\">Haskell cabal issue with Mac OS X 10.11? (cannot satisfy -package-id)</a></li>\n</ul>\n"}], "owner": {"reputation": 557, "user_id": 4587327, "user_type": "registered", "accept_rate": 18, "profile_image": "https://lh6.googleusercontent.com/-eepjCZh3Ed8/AAAAAAAAAAI/AAAAAAAAAG8/qey1ipv0gxI/photo.jpg?sz=128", "display_name": "Ryan Monreal", "link": "https://stackoverflow.com/users/4587327/ryan-monreal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1133, "favorite_count": 5, "answer_count": 3, "score": 4, "last_activity_date": 1447306971, "creation_date": 1424813095, "last_edit_date": 1495540813, "question_id": 28706603, "link": "https://stackoverflow.com/questions/28706603/haskell-yesod-on-amazon", "title": "Haskell (Yesod) on Amazon", "body": "<p>I want to deploy a system made in Yesod using Amazon Web Service.\nBut can't find a good tutorial or steps on how to do it.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/3339513/looking-for-a-web-host-that-can-handle-haskell\">Looking for a web host that can handle Haskell</a> says that Amazon EC2 is the best. But it doesn't tell how to do it or give a link.\nAlso it has a comment that I can link my S3 to EC2.</p>\n"}, {"tags": ["haskell", "recursion", "trace"], "comments": [{"owner": {"reputation": 3038, "user_id": 2725031, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a052ac048fc2c1c0df69dd66100e9c06?s=128&d=identicon&r=PG&f=1", "display_name": "Marcin \u0141o\u015b", "link": "https://stackoverflow.com/users/2725031/marcin-%c5%81o%c5%9b"}, "edited": false, "score": 2, "creation_date": 1424811062, "post_id": 28705944, "comment_id": 45701503, "body": "Because you use Unicode Double Quotation Marks instead of ordinary <code>&quot;</code> - which is precisely what the error message points at."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1424856637, "post_id": 28705944, "comment_id": 45718419, "body": "Doesn&#39;t <code>-XUnicodeSyntax</code> help with... Oh, OK, apparently it doesn&#39;t. Maybe somebody should request it..."}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 4602977, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-_kH3KlfO7e8/AAAAAAAAAAI/AAAAAAAAANY/6rAtcM_uQv0/photo.jpg?sz=128", "display_name": "Chelsea Carl", "link": "https://stackoverflow.com/users/4602977/chelsea-carl"}, "edited": false, "score": 0, "creation_date": 1424813391, "post_id": 28705997, "comment_id": 45702746, "body": "Okay how do I get normal ones. Whenever I add them it adds them like that automatically how do I change that?"}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 21, "user_id": 4602977, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-_kH3KlfO7e8/AAAAAAAAAAI/AAAAAAAAANY/6rAtcM_uQv0/photo.jpg?sz=128", "display_name": "Chelsea Carl", "link": "https://stackoverflow.com/users/4602977/chelsea-carl"}, "edited": false, "score": 2, "creation_date": 1424813885, "post_id": 28705997, "comment_id": 45703028, "body": "@ChelseaCarl: That sounds like a problem with your editor or your OS setup. I can&#39;t necessarily help you with that, so I suggest you ask another question on <a href=\"http://superuser.com/\">Super User</a> about how to type a normal quote, including your editor, OS and keyboard layout in the question details."}], "tags": [], "owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "is_accepted": false, "score": 7, "last_activity_date": 1424812383, "last_edit_date": 1424812383, "creation_date": 1424811092, "answer_id": 28705997, "question_id": 28705944, "link": "https://stackoverflow.com/questions/28705944/haskell-trace-function/28705997#28705997", "title": "Haskell Trace Function", "body": "<p>You have a copy and paste problem: your code snippet uses fancy quotes (<code>\u201c</code>) instead of normal ones (<code>\"</code>) and Haskell doesn't know how to parse it. </p>\n\n<p>In the error message, \"lexical error\" means that there is a problem with your syntax; specifically, it doesn't know what to do with the character <code>'\\8220'</code> which is the ASCII representation of <code>\u201c</code>. </p>\n\n<p>Assuming your console properly supports Unicode, you can see what character an escape code like this corresponds to with <code>putStrLn</code>:</p>\n\n<pre><code>Prelude GHC.Exts&gt; putStrLn \"\\8220\"\n\u201c\n</code></pre>\n\n<p>This might help you understand similar error messages in the future.</p>\n\n<p>If you're in Emacs, another option is to use the command <code>C-x 8 &lt;RET&gt;</code> which allows you to input a Unicode character by number (<code>8220</code> in this case). Unfortunately, Emacs expects a number in hexadecimal and Haskell provides one in base-10, so you have to be explicit about your radix:</p>\n\n<pre><code>C-x 8 &lt;RET&gt; #10r8220\n\u201c\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 4602977, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-_kH3KlfO7e8/AAAAAAAAAAI/AAAAAAAAANY/6rAtcM_uQv0/photo.jpg?sz=128", "display_name": "Chelsea Carl", "link": "https://stackoverflow.com/users/4602977/chelsea-carl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 499, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1424812383, "creation_date": 1424810908, "last_edit_date": 1424811135, "question_id": 28705944, "link": "https://stackoverflow.com/questions/28705944/haskell-trace-function", "title": "Haskell Trace Function", "body": "<p>I am on a mac and I am running Haskell through the command line. This is my code I am recursively reversing a list.</p>\n\n<pre><code>import Debug.Trace\nreverse1 :: (Show a) =&gt; [a] -&gt; [a]  \nreverse1 [] = []  \nreverse1 (x:xs) = trace(\u201cinput xs: \u201c ++ show xs) $ reverse1 xs ++ [x]\n</code></pre>\n\n<p>The assignment is to do it recursively and also show the trace. It does the reverse if I remove the trace information once I add it, it breaks. This is the error I receive.</p>\n\n<pre><code>[1 of 1] Compiling Main             ( reverse.hs, interpreted )\n\nreverse.hs:4:24: lexical error at character '\\8220'\nFailed, modules loaded: none. \n</code></pre>\n"}, {"tags": ["haskell", "ghc", "typeclass", "gadt"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 2, "creation_date": 1424807695, "post_id": 28704163, "comment_id": 45699617, "body": "Since <code>Num</code> no longer requires a <code>Show</code> instance it might be helpful to find a different example."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1424807760, "post_id": 28704163, "comment_id": 45699653, "body": "Take a look at the <a href=\"https://hackage.haskell.org/package/constraints\" rel=\"nofollow noreferrer\">constraints</a> package. I don&#39;t think it will let you do what you want to do, but it may give you inspiration as to how you can accomplish this."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1424807966, "post_id": 28704163, "comment_id": 45699781, "body": "I don&#39;t think this can be done unless you use <code>??? = Foo c</code> and <code>Foo</code> is a custom class to this purpose on the line of <code>class Foo c where fooShow :: c a =&gt; a -&gt; String</code>, which needs to be instantiated manually with all the suitable <code>c</code>s (which I understand it&#39;s not your aim)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1424809319, "post_id": 28704163, "comment_id": 45700538, "body": "@user2407038, it looks like the <code>Class</code> class in that package is the closest Edward Kmett was able to get to this. I would guess you&#39;d probably need to change the type checker to go the rest of the way."}, {"owner": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424810473, "post_id": 28704163, "comment_id": 45701182, "body": "@user2407038 Thank you, that pointed me in the right direction."}], "answers": [{"comments": [{"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "edited": false, "score": 0, "creation_date": 1424807231, "post_id": 28704842, "comment_id": 45699343, "body": "The question is how to make, say, <code>Some Num</code> an instance of <code>Show</code> where <code>Num</code> implies <code>Show</code>. (It doesn&#39;t any more, but that&#39;s besides the point.)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1424807334, "post_id": 28704842, "comment_id": 45699408, "body": "The OP wrote that <code>instance c ~ Show =&gt; Show (Some c) </code> would work, but is stricter than it could be. (I did not downvote this, but this might explain who did)"}, {"owner": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 1, "creation_date": 1424807689, "post_id": 28704842, "comment_id": 45699613, "body": "@cdk Your assertion is correct in vanilla Haskell. However, I have made use of the <code>GADTs</code> extension, which means that matching on <code>Some</code> brings an instance of <code>c a</code> into scope. The problem is proving to the compiler that <code>c a ~ Num a</code> implies <code>Show a</code>."}], "tags": [], "owner": {"reputation": 6415, "user_id": 1416525, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6f23f148b7241e345a61d193ed205685?s=128&d=identicon&r=PG", "display_name": "cdk", "link": "https://stackoverflow.com/users/1416525/cdk"}, "is_accepted": false, "score": 1, "last_activity_date": 1424810283, "last_edit_date": 1424810283, "creation_date": 1424807041, "answer_id": 28704842, "question_id": 28704163, "link": "https://stackoverflow.com/questions/28704163/how-to-put-constraints-on-type-variable-of-kind-constraint/28704842#28704842", "title": "How to put constraints on type variable of kind `Constraint`?", "body": "<p>You cannot make <code>Some c</code> an instance of <code>Show</code>, except trivially.</p>\n\n<p>You want to <code>show</code> the <code>a</code> inside <code>Some</code>, but that variable is existentially quantified, so we cannot depend on any knowledge of the type of <code>a</code>. In particular, we have no way of knowing that <code>a</code> is an instance of <code>Show</code>.</p>\n\n<p><strong>EDIT:</strong> I'll expand on my answer. \nEven with more machinery, and giving up on a <code>Show</code> instance, I still don't think what you want is possible because of the existential quantification.</p>\n\n<p>First I'll rewrite <code>Some</code> in a more familiar form</p>\n\n<pre><code>data Dict p where\n    Dict :: p a =&gt; a -&gt; Dict p\n</code></pre>\n\n<p>The usual way to talk about \"constraints implying constraints\" is with the concept of constraint entailment.</p>\n\n<pre><code>data p :- q where\n    Sub :: p a =&gt; Dict q -&gt; p :- q\n</code></pre>\n\n<p>We can think about a value of type <code>p :- q</code> as a proof that if the constraint <code>forall a. p a</code> holds, then <code>forall a. q a</code> follows.</p>\n\n<p>Now we try to write a sensible <code>show</code>-ish function</p>\n\n<pre><code>showD :: p :- Show -&gt; Dict p -&gt; String\nshowD (Sub (Dict a)) (Dict b) = show b\n</code></pre>\n\n<p>At a glance, this might work. We have brought the following constraints into scope (forgive the pseudo-<code>exists</code> syntax)</p>\n\n<pre><code>(0) p :: * -&gt; Constraint\n(1) exists a. p a           -- (Dict p)\n(2) exists b. p b =&gt; Show b -- (p :- Show)\n</code></pre>\n\n<p>But now things fall apart, GHC rightfully complains:</p>\n\n<pre><code>main.hs:10:33:\n    Could not deduce (Show a2) arising from a use of `show' \n    from the context (p a)\n      bound by a pattern with constructor\n                 Sub :: forall (p :: * -&gt; Constraint) (q :: * -&gt; Constraint) a.\n                        (p a) =&gt; \n                        Dict q -&gt; p :- q,\n               in an equation for `showD' \n      at main.hs:10:8-19                    \n    or from (Show a1) \n      bound by a pattern with constructor\n                 Dict :: forall (p :: * -&gt; Constraint) a. (p a) =&gt; a -&gt; Dict p, \n               in an equation for `showD'\n      at main.hs:10:13-18 \n    or from (p a2)\n      bound by a pattern with constructor\n                 Dict :: forall (p :: * -&gt; Constraint) a. (p a) =&gt; a -&gt; Dict p,\n               in an equation for `showD'\n      at main.hs:10:23-28   \n</code></pre>\n\n<p>because it is impossible to unify the <code>a</code> from <code>(1)</code> with the <code>b</code> from <code>(2)</code>. </p>\n\n<p>This is the same essential idea that is used throughout the <code>constraints</code> package mentioned in the comments.</p>\n"}, {"comments": [{"owner": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 0, "creation_date": 1424811711, "post_id": 28706021, "comment_id": 45701855, "body": "Interesting. This doesn&#39;t work if <code>c</code> has other super classes than <code>Show</code> because of the functional dependency, right?"}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 1, "creation_date": 1424811867, "post_id": 28706021, "comment_id": 45701934, "body": "It does work. Multiple super classes are actually a single constraint (a product of constraints)."}, {"owner": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 0, "creation_date": 1424812006, "post_id": 28706021, "comment_id": 45702022, "body": "So, the only downside is that you have to define that extra class <code>A</code>."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 1, "creation_date": 1424812061, "post_id": 28706021, "comment_id": 45702064, "body": "@Andr&#225;sKov&#225;cs It would work for constraints of kind <code>Constraint</code>, these constraints have kind <code>* -&gt; Constraint</code>; I don&#39;t think we can make a product of them without some trickery I haven&#39;t thought of yet."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 1, "creation_date": 1424812173, "post_id": 28706021, "comment_id": 45702125, "body": "@TobiasBrandt <code>A</code> isn&#39;t an extra class, it&#39;s an example of an existing constraint that you would use in <code>Some A</code>. The extra work is defining the <code>Class1 Show A</code> instance for everything like <code>A</code>."}, {"owner": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "edited": false, "score": 0, "creation_date": 1424812638, "post_id": 28706021, "comment_id": 45702363, "body": "@Cirdec Understood, I was confused about the meaning of <code>A</code>. This seems to be the closest you can get to what I want."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424812911, "post_id": 28706021, "comment_id": 45702505, "body": "That one you snuck in at the end, <code>OverlappingInstances</code>, is the only one that bothers me. Is there any way to avoid it?"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424813374, "post_id": 28706021, "comment_id": 45702740, "body": "@dfeuer I didn&#39;t sneak it in, <code>OvelappingInstances</code> was the only extension worth calling out explicitly in the text. For single inheritance it would be avoidable if you could add a constraint to <code>Class1</code> so the compiler could prove that <code>b ~ h</code> doesn&#39;t hold. Unfortunately, there&#39;s no constraint backtracking, not even through closed type families for closed data kinds. Adding e.g. <code>type family Equal a b :: Bool where Equal a a = True ; Equal a b = False</code> and <code>class (Equal b h ~ False) =&gt; Class1 b h | h -&gt; b where cls1 :: h a :- b a</code> doesn&#39;t help."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424816882, "post_id": 28706021, "comment_id": 45704535, "body": "For classes with multiple super classes, use <code>class (p a, q a) =&gt; (&amp;) (p :: k -&gt; Constraint) (q :: k -&gt; Constraint) (a :: k); instance (p a, q a) =&gt; (&amp;) p q a</code> which allows you to write <code>instance Class1 (A &amp; B) C</code>. This is essentially the same as writing <code>type (&amp;) p q a = (p a, q a)</code> but allows <code>&amp;</code> to be partially applied."}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 10, "last_activity_date": 1424811184, "creation_date": 1424811184, "answer_id": 28706021, "question_id": 28704163, "link": "https://stackoverflow.com/questions/28704163/how-to-put-constraints-on-type-variable-of-kind-constraint/28706021#28706021", "title": "How to put constraints on type variable of kind `Constraint`?", "body": "<p>The closest we are able to get is a <code>Class1</code> class that reifys the relationship between a class and a single superclass constraint as a class. It's based on the <a href=\"https://hackage.haskell.org/package/constraints-0.4.1.3/docs/Data-Constraint.html#t:Class\"><code>Class</code></a> from <a href=\"https://hackage.haskell.org/package/constraints\">constraints</a>.</p>\n\n<p>First, we'll take a short tour of the constraints package. A <a href=\"https://hackage.haskell.org/package/constraints-0.4.1.3/docs/Data-Constraint.html#t:Dict\"><code>Dict</code></a> captures the dictionary for a <a href=\"https://hackage.haskell.org/package/constraints-0.4.1.3/docs/Data-Constraint.html#t:Constraint\"><code>Constraint</code></a></p>\n\n<pre><code>data Dict :: Constraint -&gt; * where\n  Dict :: a =&gt; Dict a\n</code></pre>\n\n<p><code>:-</code> captures that one constraint entails another. If we have <code>a :- b</code>, whenever we have the constraint <code>a</code> we can produce the dictionary for the constraint <code>b</code>.</p>\n\n<pre><code>newtype a :- b = Sub (a =&gt; Dict b)\n</code></pre>\n\n<p>We need a proof similar to <code>:-</code>, we need to know that <code>forall a. h a :- b a</code>, or <code>h a =&gt; Dict (b a)</code>.</p>\n\n<h3>Single Inheritance</h3>\n\n<p>Actually implementing this for <code>class</code>es with just single inheritance requires the kitchen sink of language extensions, including <code>OverlappingInstances</code>.</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE ConstraintKinds #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE UndecidableInstances #-}\n{-# LANGUAGE OverlappingInstances #-}\n\nimport Data.Constraint\n</code></pre>\n\n<p>We'll define the class of constraints of kind <code>k -&gt; Constraint</code> where the constraint has a single superclass.</p>\n\n<pre><code>class Class1 b h | h -&gt; b where\n    cls1 :: h a :- b a\n</code></pre>\n\n<p>We're now equipped to tackle our example problem. We have a class <code>A</code> that requires a <code>Show</code> instance.</p>\n\n<pre><code> class Show a =&gt; A a\n instance A Int\n</code></pre>\n\n<p><code>Show</code> is a superclass of <code>A</code></p>\n\n<pre><code>instance Class1 Show A where\n    cls1 = Sub Dict \n</code></pre>\n\n<p>We want to write <code>Show</code> instances for <code>Some</code></p>\n\n<pre><code>data Some (c :: * -&gt; Constraint) where\n    Some :: c a =&gt; a -&gt; Some c\n</code></pre>\n\n<p>We can <code>Show</code> a <code>Some Show</code>.</p>\n\n<pre><code>instance Show (Some Show) where\n    showsPrec x (Some a) = showsPrec x a\n</code></pre>\n\n<p>We can <code>Show</code> a <code>Some h</code> whenever <code>h</code> has a single superclass <code>b</code> and we could show <code>Some b</code>.</p>\n\n<pre><code>instance (Show (Some b), Class1 b h) =&gt; Show (Some h) where\n    showsPrec x (Some (a :: a)) = \n        case cls1 :: h a :- b a of\n            Sub Dict -&gt; showsPrec x ((Some a) :: Some b)\n</code></pre>\n\n<p>This lets us write</p>\n\n<pre><code>x :: Some A\nx = Some (1 :: Int)\n\nmain = print x\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1561844123, "post_id": 56820156, "comment_id": 100195033, "body": "I still don&#39;t understand <i>how</i> that fixes everything."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1561845012, "post_id": 56820156, "comment_id": 100195142, "body": "If you use the bad constraint and want, I don\u2019t know, <code>Show Int</code>, there are two instances\u2014the one from the quantified constraint and the global one\u2014and GHC will pick one as it feels like it. If it picks the global one, congrats, you\u2019ve got a time bomb; if it picks the quantified one, you get an insoluble <code>c Int</code> want. If you use <code>Implies</code>, there is only 1 <code>Show Int</code> and it\u2019s fine. Meanwhile, for the type inside <code>Some</code>, you now have 0 <code>Show</code> instances. After (and only after) this failure, you can search the superclasses of the known constraints, finding the <code>Show</code> in the <code>Implies</code>."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1561854188, "post_id": 56820156, "comment_id": 100196155, "body": "<a href=\"https://gitlab.haskell.org/ghc/ghc/issues/14877\" rel=\"nofollow noreferrer\">AFAICT it\u2019s sanctioned as \u201cexpected behavior\u201d.</a> I don\u2019t like it much, either, but it\u2019s probably a bug if it ever doesn\u2019t work."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 2, "last_activity_date": 1561834966, "creation_date": 1561834966, "answer_id": 56820156, "question_id": 28704163, "link": "https://stackoverflow.com/questions/28704163/how-to-put-constraints-on-type-variable-of-kind-constraint/56820156#56820156", "title": "How to put constraints on type variable of kind `Constraint`?", "body": "<p>The new <code>QuantifiedConstraints</code> extension allows this.</p>\n\n<pre><code>class (a =&gt; b) =&gt; Implies a b where\ninstance (a =&gt; b) =&gt; Implies a b where\ninstance (forall a. c a `Implies` Show a) =&gt; Show (Some c) where\n  show (Some x) = show x\n</code></pre>\n\n<p>Within the body of the <code>Show</code> instance, it is as if there is a</p>\n\n<pre><code>instance forall a. Implies (c a) (Show a)\n</code></pre>\n\n<p>in scope. If you then have <code>T :: Type</code> and know <code>c T</code>, then the superclass of <code>c T =&gt; Show T</code> of the specialized <code>Implies (c T) (Show T)</code> instance allows you to derive <code>Show T</code>. It is necessary to use <code>Implies</code> instead of a straight <code>forall a. c a =&gt; Show a</code> constraint. This incorrect constraint acts like</p>\n\n<pre><code>instance forall a. c a =&gt; Show a\n</code></pre>\n\n<p>which overlaps with every <code>Show</code> instance, <a href=\"https://stackoverflow.com/q/56573436/5684257\">causing weird breakage</a>. Forcing an indirection through the superclass of an otherwise useless constraint fixes everything.</p>\n"}], "owner": {"reputation": 3291, "user_id": 1456761, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/gvNnG.png?s=128&g=1", "display_name": "Tobias Brandt", "link": "https://stackoverflow.com/users/1456761/tobias-brandt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1233, "favorite_count": 2, "accepted_answer_id": 28706021, "answer_count": 3, "score": 15, "last_activity_date": 1561834966, "creation_date": 1424804901, "last_edit_date": 1424812808, "question_id": 28704163, "link": "https://stackoverflow.com/questions/28704163/how-to-put-constraints-on-type-variable-of-kind-constraint", "title": "How to put constraints on type variable of kind `Constraint`?", "body": "<p>I'm playing around with the <code>ConstraintKinds</code> extension of GHC.\nI have the following data type, which is just a box for things fulfilling some one parameter constraint <code>c</code>: </p>\n\n<pre><code>data Some (c :: * -&gt; Constraint) where\n    Some :: forall a. c a =&gt; a -&gt; Some c\n</code></pre>\n\n<p>For example, I could construct a box with some kind of number (arguably not very useful).</p>\n\n<pre><code>x :: Some Num\nx = Some (1 :: Int)\n</code></pre>\n\n<p>Now, as long as <code>c</code> includes the constraint <code>Show</code>, I could provide an instance of <code>Show (Some c)</code>.</p>\n\n<pre><code>instance ??? =&gt; Show (Some c) where\n    show (Some x) = show x    -- Show dictionary for type of x should be in scope here\n</code></pre>\n\n<p>But how do I express this requirement in the instance context (marked with <code>???</code>)?</p>\n\n<p>I cannot use an equality constraint (<code>c ~ Show</code>), because the two are not necessarily equal. <code>c</code> could be <code>Num</code>, which implies, but is not equal to, <code>Show</code>.</p>\n\n<p><strong>Edit</strong></p>\n\n<p>I realised that this cannot be possible in general.</p>\n\n<p>If you have two values of type <code>Some Eq</code>, it is not possible to compare them for equality. They could be of different types that each have their own notion of equality.</p>\n\n<p>What applies to <code>Eq</code> applies to any type class in which the type parameter appears on the right hand side of the first function arrow (like the second <code>a</code> in <code>(==) :: a -&gt; a -&gt; Bool</code>).</p>\n\n<p>Considering that there is no way to create a constraint expressing \"this type variable is not used beyond the first arrow\", I don't think it is possible to write the instance I want to write.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424797746, "post_id": 28701574, "comment_id": 45693944, "body": "You could write this as <code>\\ls len -&gt; map (\\i -&gt; filter (==i) ls) [0..len-1]</code>."}, {"owner": {"reputation": 145, "user_id": 4055842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uvqE0.jpg?s=128&g=1", "display_name": "kp9r4d", "link": "https://stackoverflow.com/users/4055842/kp9r4d"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424797931, "post_id": 28701574, "comment_id": 45694064, "body": "Beautiful solution, thanks!"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424801249, "post_id": 28701574, "comment_id": 45696003, "body": "@user2407038, if the list is long, that&#39;s likely to be very, very slow."}], "answers": [{"comments": [{"owner": {"reputation": 145, "user_id": 4055842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uvqE0.jpg?s=128&g=1", "display_name": "kp9r4d", "link": "https://stackoverflow.com/users/4055842/kp9r4d"}, "edited": false, "score": 0, "creation_date": 1424797708, "post_id": 28701722, "comment_id": 45693903, "body": "Thanks! I understand!"}], "tags": [], "owner": {"reputation": 17641, "user_id": 16800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea1de76c4c343fc844135e18da8a80f1?s=128&d=identicon&r=PG", "display_name": "Guvante", "link": "https://stackoverflow.com/users/16800/guvante"}, "is_accepted": false, "score": 3, "last_activity_date": 1424797013, "creation_date": 1424797013, "answer_id": 28701722, "question_id": 28701574, "link": "https://stackoverflow.com/questions/28701574/long-working-of-program-that-count-ints/28701722#28701722", "title": "Long working of program that count Ints", "body": "<p>Whenever you use <code>++</code> you have to recreate the entire list, since lists are immutable.</p>\n\n<p>A simple solution would be to use <code>:</code>, but that builds a reversed list. However that can be fixed using <code>reverse</code>, which results in only building two lists (instead of 1 million in your case).</p>\n"}, {"comments": [{"owner": {"reputation": 145, "user_id": 4055842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uvqE0.jpg?s=128&g=1", "display_name": "kp9r4d", "link": "https://stackoverflow.com/users/4055842/kp9r4d"}, "edited": false, "score": 0, "creation_date": 1424797729, "post_id": 28701797, "comment_id": 45693922, "body": "Thanks! Your answer is very useful to me!"}], "tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": true, "score": 6, "last_activity_date": 1424797248, "creation_date": 1424797248, "answer_id": 28701797, "question_id": 28701574, "link": "https://stackoverflow.com/questions/28701574/long-working-of-program-that-count-ints/28701797#28701797", "title": "Long working of program that count Ints", "body": "<p>The <code>(++)</code> operator copies the left-hand list. For this reason, adding to the <em>beginning</em> of a list is quite fast, but adding to the <em>end</em> of a list is very slow.</p>\n\n<p>In summary, avoid adding things to the <em>end</em> of a list. Try to always add to the <em>beginning</em> instead. One simple way to do that is to build the list backwards, and then reverse it at the end. A more devious trick is to use \"difference lists\" (Google it). Another possibility is to use <code>Data.Sequence</code> rather than a list.</p>\n"}, {"comments": [{"owner": {"reputation": 145, "user_id": 4055842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uvqE0.jpg?s=128&g=1", "display_name": "kp9r4d", "link": "https://stackoverflow.com/users/4055842/kp9r4d"}, "edited": false, "score": 0, "creation_date": 1424856289, "post_id": 28703001, "comment_id": 45718206, "body": "Thank you for your explanation!"}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1424801393, "last_edit_date": 1495542044, "creation_date": 1424800932, "answer_id": 28703001, "question_id": 28701574, "link": "https://stackoverflow.com/questions/28701574/long-working-of-program-that-count-ints/28703001#28703001", "title": "Long working of program that count Ints", "body": "<p>Your concept of glomming things onto an accumulator is a very useful one, and both <a href=\"https://stackoverflow.com/a/28701797/1477667\">MathematicalOrchid</a> and <a href=\"https://stackoverflow.com/a/28701722/1477667\">Guvante</a> show how you can use that concept reasonably efficiently. But in this case, there is a simpler approach that is likely also faster. You started with</p>\n\n<pre><code>group . sort $ ls\n</code></pre>\n\n<p>and this was a very good place to start! You get a list that's <em>almost</em> the one you want, except that you need to fill in some blanks. How can we figure those out? The simplest way, though probably not quite the most efficient, is to work with a list of all the numbers you want to count up to: <code>[0 .. len-1]</code>.</p>\n\n<p>So we start with</p>\n\n<pre><code>f ls len = g [0 .. len-1] (group . sort $ ls)\n  where\n    ?\n</code></pre>\n\n<p>How do we define <code>g</code>? By pattern matching!</p>\n\n<pre><code>f ls len = g [0 .. len-1] (group . sort $ ls)\n  where\n    -- We may or may not have some lists left,\n    -- but we counted as high as we decided we\n    -- would\n    g [] _ = []\n\n    -- We have no lists left, so the rest of the\n    -- numbers are not represented\n    g ns [] = map (const []) ns\n\n    -- This shouldn't be possible, because group\n    -- doesn't make empty lists.\n    g _ ([]:_) = error \"group isn't working!\"\n\n    -- Finally, we have some work to do!\n    g (n:ns) xls@(xl@(x:_):xls')\n      | n == x    = xl : g ns xls'\n      | otherwise = [] : g ns xls\n</code></pre>\n\n<p>That was nice, but making the list of numbers isn't free, so you might be wondering how you can optimize it. One method I invite you to try is using your original technique of keeping a separate counter, but following this same sort of structure.</p>\n"}, {"tags": [], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "is_accepted": false, "score": 5, "last_activity_date": 1424804190, "creation_date": 1424804190, "answer_id": 28703967, "question_id": 28701574, "link": "https://stackoverflow.com/questions/28701574/long-working-of-program-that-count-ints/28703967#28703967", "title": "Long working of program that count Ints", "body": "<p>The first thing that should be noted is the most obvious way to implement this is use a data structure that allows random access, an array is an obviously choice. Note that you need to add the elements to the array multiple times and somehow \"join them\".</p>\n\n<p><code>accumArray</code> is perfect for this.</p>\n\n<p>So we get:</p>\n\n<pre><code>f l i = elems $ accumArray (\\l e -&gt; e:l) [] (0,i-1) (map (\\e -&gt; (e,e)) l)\n</code></pre>\n\n<p>And we're good to go (see full code <a href=\"http://ideone.com/ZVYyoM\" rel=\"noreferrer\">here</a>).</p>\n\n<p>This approach does involve converting the final array back into a list, but that step is very likely faster than say sorting the list, which often involves scanning the list at least a few times for a list of decent size.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424906303, "post_id": 28727176, "comment_id": 45749275, "body": "Could you start by explaining what structure you&#39;re folding over? This is not clear to me. Also, when I see <code>!!</code>, visions of quadratics start dancing in my head. Is it not problematic here for some reason?"}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424907612, "post_id": 28727176, "comment_id": 45749758, "body": "One type of <code>foldMap</code> is <code>(a -&gt; Bunch x) -&gt; [a] -&gt; Bunch x</code>. I&#39;m folding over the input list. I&#39;m not claiming this is the fastest solution, just that it avoids left-nesting of <code>++</code>."}], "tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": false, "score": 7, "last_activity_date": 1424890040, "creation_date": 1424890040, "answer_id": 28727176, "question_id": 28701574, "link": "https://stackoverflow.com/questions/28701574/long-working-of-program-that-count-ints/28727176#28727176", "title": "Long working of program that count Ints", "body": "<p>I see we're accumulating over some data structure. I think <code>foldMap</code>. I ask \"Which <code>Monoid</code>\"? It's some kind of lists of accumulations. Like this</p>\n\n<pre><code>newtype Bunch x = Bunch {bunch :: [x]}\ninstance Semigroup x =&gt; Monoid (Bunch x) where\n  mempty = Bunch []\n  mappend (Bunch xss) (Bunch yss) = Bunch (glom xss yss) where\n    glom [] yss = yss\n    glom xss [] = xss\n    glom (xs : xss) (ys : yss) = (xs &lt;&gt; ys) : glom xss yss\n</code></pre>\n\n<p>Our underlying elements have some associative operator <code>&lt;&gt;</code>, and we can thus apply that operator pointwise to a pair of lists, just like <code>zipWith</code> does, except that when we run out of one of the lists, <em>we don't truncate</em>, rather we just take the other. Note that <code>Bunch</code> is a name I'm introducing for purposes of this answer, but it's not that unusual a thing to want. I'm sure I've used it before and will again.</p>\n\n<p>If we can translate</p>\n\n<pre><code>0 -&gt; Bunch [[0]]           -- single 0 in place 0\n1 -&gt; Bunch [[],[1]]        -- single 1 in place 1\n2 -&gt; Bunch [[],[],[2]]     -- single 2 in place 2\n3 -&gt; Bunch [[],[],[],[3]]  -- single 3 in place 3\n...\n</code></pre>\n\n<p>and <code>foldMap</code> across the input, then we'll get the right number of each in each place. There should be no need for an upper bound on the numbers in the input to get a sensible output, as long as you are willing to interpret <code>[]</code> as \"the rest is silence\". Otherwise, like Procrustes, you can pad or chop to the length you need.</p>\n\n<p>Note, by the way, that when <code>mappend</code>'s first argument comes from our translation, we do a bunch of <code>([]++)</code> operations, a.k.a. <code>id</code>s, then a single <code>([i]++)</code>, a.k.a. <code>(i:)</code>, so if <code>foldMap</code> is right-nested (which it is for lists), then we will always be doing cheap operations at the left end of our lists.</p>\n\n<p>Now, as the question works with lists, we might want to introduce the <code>Bunch</code> structure only when it's useful. That's what <code>Control.Newtype</code> is for. We just need to tell it about <code>Bunch</code>.</p>\n\n<pre><code>instance Newtype (Bunch x) [x] where\n  pack = Bunch\n  unpack = bunch\n</code></pre>\n\n<p>And then it's</p>\n\n<pre><code>groupInts :: [Int] -&gt; [[Int]]\ngroupInts = ala' Bunch foldMap (basis !!) where\n  basis = ala' Bunch foldMap id [iterate ([]:) [], [[[i]] | i &lt;- [0..]]]\n</code></pre>\n\n<p>What? Well, without going to town on what <code>ala'</code> is in general, its impact here is as follows:</p>\n\n<pre><code>ala' Bunch foldMap f = bunch . foldMap (Bunch . f)\n</code></pre>\n\n<p>meaning that, although <code>f</code> is a function to lists, we accumulate as if <code>f</code> were a function to <code>Bunch</code>es: the role of <code>ala'</code> is to insert the correct <code>pack</code> and <code>unpack</code> operations to make that just happen.</p>\n\n<p>We need <code>(basis !!) :: Int -&gt; [[Int]]</code> to be our translation. Hence <code>basis :: [[[Int]]]</code> is the list of images of our translation, computed on demand at most once each (i.e., the translation, <em>memoized</em>).</p>\n\n<p>For this <code>basis</code>, observe that we need these two infinite lists</p>\n\n<pre><code>[ []                    [ [[0]]\n, [[]]                  , [[1]]\n, [[],[]]               , [[2]]\n, [[],[],[]]            , [[3]]\n...                     ...\n</code></pre>\n\n<p>combined <code>Bunch</code>wise. As both lists have the same length (infinity), I could also have written</p>\n\n<pre><code>basis = zipWith (++) (iterate ([]:) []) [[[i]] | i &lt;- [0..]]\n</code></pre>\n\n<p>but I thought it was worth observing that this also is an example of <code>Bunch</code> structure.</p>\n\n<p>Of course, it's very nice when something like <code>accumArray</code> hands you exactly the sort of accumulation you need, neatly packaging a bunch of grungy behind-the-scenes mutation. But the general recipe for an accumulation is to think \"What's the <code>Monoid</code>?\" and \"What do I do with each element?\". That's what <code>foldMap</code> asks you.</p>\n"}], "owner": {"reputation": 145, "user_id": 4055842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uvqE0.jpg?s=128&g=1", "display_name": "kp9r4d", "link": "https://stackoverflow.com/users/4055842/kp9r4d"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 408, "favorite_count": 1, "accepted_answer_id": 28701797, "answer_count": 5, "score": 2, "last_activity_date": 1424890040, "creation_date": 1424796641, "last_edit_date": 1424801517, "question_id": 28701574, "link": "https://stackoverflow.com/questions/28701574/long-working-of-program-that-count-ints", "title": "Long working of program that count Ints", "body": "<p>I want to write program that takes array of <code>Ints</code> and length and returns array that consist in position <code>i</code> all elements, that equals <code>i</code>, for example</p>\n\n<pre><code>[0,0,0,1,3,5,3,2,2,4,4,4] 6 -&gt; [[0,0,0],[1],[2,2],[3,3],[4,4,4],[5]]\n[0,0,4] 7 -&gt; [[0,0],[],[],[],[4],[],[]]\n[] 3 -&gt; [[],[],[]]\n[2,2] 3 -&gt; [[],[],[2,2]]\n</code></pre>\n\n<p>So, that's my solution</p>\n\n<pre><code>import Data.List\nimport Data.Function\n\nf :: [Int] -&gt; Int -&gt; [[Int]]\nf ls len = g 0 ls' [] where\n    ls' = group . sort $ ls\n    g :: Int -&gt; [[Int]] -&gt; [[Int]] -&gt; [[Int]] \n    g val [] accum\n        | len == val        = accum\n        | otherwise         = g (val+1) [] (accum ++ [[]])\n    g val (x:xs) accum\n        | len == val        = accum\n        | val == head x     = g (val+1) xs (accum ++ [x])\n        | otherwise         = g (val+1) (x:xs) (accum ++ [[]])   \n</code></pre>\n\n<p>But query <code>f [] 1000000</code> works really long, why?</p>\n"}, {"tags": ["haskell", "monads"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 23, "last_activity_date": 1424853280, "last_edit_date": 1424853280, "creation_date": 1424767139, "answer_id": 28691260, "question_id": 28690448, "link": "https://stackoverflow.com/questions/28690448/what-is-indexed-monad/28691260#28691260", "title": "What is indexed monad?", "body": "<p>As a simple scenario, assume you have a state monad. The state type is a complex large one, yet all these states can be partitioned into two sets: red and blue states. Some operations in this monad make sense only if the current state is a blue state. Among these, some will keep the state blue (<code>blueToBlue</code>), while others will make the state red (<code>blueToRed</code>). In a regular monad, we could write</p>\n\n<pre><code>blueToRed  :: State S ()\nblueToBlue :: State S ()\n\nfoo :: State S ()\nfoo = do blueToRed\n         blueToBlue\n</code></pre>\n\n<p>triggering a runtime error since the second action expects a blue state. We would like to prevent this statically. Indexed monad fulfills this goal:</p>\n\n<pre><code>data Red\ndata Blue\n\n-- assume a new indexed State monad\nblueToRed  :: State S Blue Red  ()\nblueToBlue :: State S Blue Blue ()\n\nfoo :: State S ?? ?? ()\nfoo = blueToRed `ibind` \\_ -&gt;\n      blueToBlue          -- type error\n</code></pre>\n\n<p>A type error is triggered because the second index of <code>blueToRed</code> (<code>Red</code>) differs from the first index of <code>blueToBlue</code> (<code>Blue</code>).</p>\n\n<p>As another example, with indexed monads you can allow a state monad to change the type for its state, e.g. you could have</p>\n\n<pre><code>data State old new a = State (old -&gt; (new, a))\n</code></pre>\n\n<p>You could use the above to build a state which is a statically-typed heterogeneous stack. Operations would have type</p>\n\n<pre><code>push :: a -&gt; State old (a,old) ()\npop  :: State (a,new) new a\n</code></pre>\n\n<p>As another example, suppose you want a restricted IO monad which does not\nallow file access. You could use e.g.</p>\n\n<pre><code>openFile :: IO any FilesAccessed ()\nnewIORef :: a -&gt; IO any any (IORef a)\n-- no operation of type :: IO any NoAccess _\n</code></pre>\n\n<p>In this way, an action having type <code>IO ... NoAccess ()</code> is statically guaranteed to be file-access-free. Instead, an action of type <code>IO ... FilesAccessed ()</code> can access files. Having an indexed monad would mean you don't have to build a separate type for the restricted IO, which would require to duplicate every non-file-related function in both IO types.</p>\n"}, {"tags": [], "owner": {"reputation": 23816, "user_id": 572606, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c20a126ad0dce40e8fc4a43456107919?s=128&d=identicon&r=PG", "display_name": "shang", "link": "https://stackoverflow.com/users/572606/shang"}, "is_accepted": false, "score": 19, "last_activity_date": 1424767261, "creation_date": 1424767261, "answer_id": 28691290, "question_id": 28690448, "link": "https://stackoverflow.com/questions/28690448/what-is-indexed-monad/28691290#28691290", "title": "What is indexed monad?", "body": "<p>An indexed monad isn't a specific monad like, for example, the state monad but a sort of generalization of the monad concept with extra type parameters.</p>\n\n<p>Whereas a \"standard\" monadic value has the type <code>Monad m =&gt; m a</code> a value in an indexed monad would be <code>IndexedMonad m =&gt; m i j a</code> where <code>i</code> and <code>j</code> are index types so that <code>i</code> is the type of the index at the beginning of the monadic computation and <code>j</code> at the end of the computation. In a way, you can think of <code>i</code> as a sort of input type and <code>j</code> as the output type.</p>\n\n<p>Using <code>State</code> as an example, a stateful computation <code>State s a</code> maintains a state of type <code>s</code> throughout the computation and returns a result of type <code>a</code>. An indexed version, <code>IndexedState i j a</code>, is a stateful computation where the state can change to a different type during the computation. The initial state has the type <code>i</code> and state and the end of the computation has the type <code>j</code>.</p>\n\n<p>Using an indexed monad over a normal monad is rarely necessary but it can be used in some cases to encode stricter static guarantees.</p>\n"}, {"comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1424800570, "post_id": 28696299, "comment_id": 45695622, "body": "How can you pass the <code>True</code>/<code>False</code> values as type arguments to <code>DVDDrive</code>? Is that some extension, or are the booleans actually types in here?"}, {"owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 8, "creation_date": 1424800790, "post_id": 28696299, "comment_id": 45695755, "body": "@Bergi The booleans have been &quot;lifted&quot; to exist at the type level. This is possible in Haskell using the <code>DataKinds</code> extension and in dependently typed languages... well, that&#39;s kind of the whole thing."}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "edited": false, "score": 0, "creation_date": 1424816004, "post_id": 28696299, "comment_id": 45704109, "body": "Could you expand a little on <code>MonadIx</code>, perhaps with examples? Is it better on theoretical grounds, or better for practical application?"}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "reply_to_user": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "edited": false, "score": 0, "creation_date": 1424819193, "post_id": 28696299, "comment_id": 45705567, "body": "@ChristianConkle Yes, I could."}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "reply_to_user": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "edited": false, "score": 2, "creation_date": 1424820152, "post_id": 28696299, "comment_id": 45705960, "body": "@ChristianConkle I realise that&#39;s not terribly helpful. But you raise what&#39;s really a whole other question. Locally when I say MonadIx is &quot;better&quot; I mean in the context of modelling interactions with an unpredictable environment. Like if your dvd drive is allowed to spit out dvds it doesn&#39;t like when you try to insert them. Some practical situations are as badly behaved as that. Others have more predictability (meaning you can say in what state any continuation starts, not that operations don&#39;t fail), in which case IxMonad is easier to work with."}, {"owner": {"reputation": 2424, "user_id": 3206471, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/fdc1f4bd9f3118fff33a160e9efdb61e?s=128&d=identicon&r=PG", "display_name": "gigabytes", "link": "https://stackoverflow.com/users/3206471/gigabytes"}, "edited": false, "score": 1, "creation_date": 1464457534, "post_id": 28696299, "comment_id": 62498959, "body": "When you &quot;borrow&quot; the do notation in the answer, it could be useful to say that it is actually valid syntax with the <code>RebindableSyntax</code> extension. A mention of other required extensions would be nice, like the aforementioned <code>DataKinds</code>"}, {"owner": {"reputation": 18643, "user_id": 1737909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/058573b71875bc70b5a4e30140c94040?s=128&d=identicon&r=PG", "display_name": "Ven", "link": "https://stackoverflow.com/users/1737909/ven"}, "edited": false, "score": 0, "creation_date": 1487003891, "post_id": 28696299, "comment_id": 71579288, "body": "I don&#39;t understand. You say it&#39;s <code>m before after value</code>, but your <code>DInsert</code> operation goes from <code>True</code> to <code>False</code> \u2014 and unless I&#39;m terribly wrong, inserting a disk doesn&#39;t make the holder empty... Not sure why?"}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "reply_to_user": {"reputation": 18643, "user_id": 1737909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/058573b71875bc70b5a4e30140c94040?s=128&d=identicon&r=PG", "display_name": "Ven", "link": "https://stackoverflow.com/users/1737909/ven"}, "edited": false, "score": 0, "creation_date": 1487069813, "post_id": 28696299, "comment_id": 71608331, "body": "@Ven Let&#39;s clear this up. The state indices in the return type of a given constructor tell you the initial and final state of a computation which starts with that constructor. We have <code>DInsert :: ... -&gt; DVDDrive False k a</code> so <code>DInsert</code> computations start from <code>False</code> and end up at <code>k</code>. The constructor&#39;s arguments explain how one might <i>continue</i> after the corresponding operation: after the insertion, the drive is full, so its continuation starts from <code>True</code>, but it must still reach <code>k</code>. So the <code>dInsert :: DVD -&gt; DVDDrive False True ()</code> computation, inserting then returning at once, typechecks."}, {"owner": {"reputation": 18643, "user_id": 1737909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/058573b71875bc70b5a4e30140c94040?s=128&d=identicon&r=PG", "display_name": "Ven", "link": "https://stackoverflow.com/users/1737909/ven"}, "edited": false, "score": 0, "creation_date": 1487073091, "post_id": 28696299, "comment_id": 71610487, "body": "Oooh! That makes much sense, thank you. I think I wasn&#39;t reading the GADT definitions in the right order... It makes sense now. Thanks!"}], "tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": true, "score": 125, "last_activity_date": 1563477910, "last_edit_date": 1563477910, "creation_date": 1424782275, "answer_id": 28696299, "question_id": 28690448, "link": "https://stackoverflow.com/questions/28690448/what-is-indexed-monad/28696299#28696299", "title": "What is indexed monad?", "body": "<p>As ever, the terminology people use is not entirely consistent. There's a variety of inspired-by-monads-but-strictly-speaking-isn't-quite notions. The term \"indexed monad\" is one of a number (including \"monadish\" and \"parameterised monad\" (Atkey's name for them)) of terms used to characterize one such notion. (Another such notion, if you're interested, is Katsumata's \"parametric effect monad\", indexed by a monoid, where return is indexed neutrally and bind accumulates in its index.)</p>\n\n<p>First of all, let's check kinds.</p>\n\n<pre><code>IxMonad (m :: state -&gt; state -&gt; * -&gt; *)\n</code></pre>\n\n<p>That is, the type of a \"computation\" (or \"action\", if you prefer, but I'll stick with \"computation\"), looks like</p>\n\n<pre><code>m before after value\n</code></pre>\n\n<p>where <code>before, after :: state</code> and <code>value :: *</code>. The idea is to capture the means to interact safely with an external system that has some <em>predictable</em> notion of state. A computation's type tells you what the state must be <code>before</code> it runs, what the state will be <code>after</code> it runs and (like with regular monads over <code>*</code>) what type of <code>value</code>s the computation produces.</p>\n\n<p>The usual bits and pieces are <code>*</code>-wise like a monad and <code>state</code>-wise like playing dominoes.</p>\n\n<pre><code>ireturn  ::  a -&gt; m i i a    -- returning a pure value preserves state\nibind    ::  m i j a -&gt;      -- we can go from i to j and get an a, thence\n             (a -&gt; m j k b)  -- we can go from j to k and get a b, therefore\n             -&gt; m i k b      -- we can indeed go from i to k and get a b\n</code></pre>\n\n<p>The notion of \"Kleisli arrow\" (function which yields computation) thus generated is</p>\n\n<pre><code>a -&gt; m i j b   -- values a in, b out; state transition i to j\n</code></pre>\n\n<p>and we get a composition</p>\n\n<pre><code>icomp :: IxMonad m =&gt; (b -&gt; m j k c) -&gt; (a -&gt; m i j b) -&gt; a -&gt; m i k c\nicomp f g = \\ a -&gt; ibind (g a) f\n</code></pre>\n\n<p>and, as ever, the laws exactly ensure that <code>ireturn</code> and <code>icomp</code> give us a category</p>\n\n<pre><code>      ireturn `icomp` g = g\n      f `icomp` ireturn = f\n(f `icomp` g) `icomp` h = f `icomp` (g `icomp` h)\n</code></pre>\n\n<p>or, in comedy fake C/Java/whatever,</p>\n\n<pre><code>      g(); skip = g()\n      skip; f() = f()\n{g(); h()}; f() = h(); {g(); f()}\n</code></pre>\n\n<p>Why bother? To model \"rules\" of interaction. For example, you can't eject a dvd if there isn't one in the drive, and you can't put a dvd into the drive if there's one already in it. So</p>\n\n<pre><code>data DVDDrive :: Bool -&gt; Bool -&gt; * -&gt; * where  -- Bool is \"drive full?\"\n  DReturn :: a -&gt; DVDDrive i i a\n  DInsert :: DVD -&gt;                   -- you have a DVD\n             DVDDrive True k a -&gt;     -- you know how to continue full\n             DVDDrive False k a       -- so you can insert from empty\n  DEject  :: (DVD -&gt;                  -- once you receive a DVD\n              DVDDrive False k a) -&gt;  -- you know how to continue empty\n             DVDDrive True k a        -- so you can eject when full\n\ninstance IxMonad DVDDrive where  -- put these methods where they need to go\n  ireturn = DReturn              -- so this goes somewhere else\n  ibind (DReturn a)     k  = k a\n  ibind (DInsert dvd j) k  = DInsert dvd (ibind j k)\n  ibind (DEject j)      k  = DEject j $ \\ dvd -&gt; ibind (j dvd) k\n</code></pre>\n\n<p>With this in place, we can define the \"primitive\" commands</p>\n\n<pre><code>dInsert :: DVD -&gt; DVDDrive False True ()\ndInsert dvd = DInsert dvd $ DReturn ()\n\ndEject :: DVDrive True False DVD\ndEject = DEject $ \\ dvd -&gt; DReturn dvd\n</code></pre>\n\n<p>from which others are assembled with <code>ireturn</code> and <code>ibind</code>. Now, I can write (borrowing <code>do</code>-notation)</p>\n\n<pre><code>discSwap :: DVD -&gt; DVDDrive True True DVD\ndiscSwap dvd = do dvd' &lt;- dEject; dInsert dvd ; ireturn dvd'\n</code></pre>\n\n<p>but not the physically impossible</p>\n\n<pre><code>discSwap :: DVD -&gt; DVDDrive True True DVD\ndiscSwap dvd = do dInsert dvd; dEject      -- ouch!\n</code></pre>\n\n<p>Alternatively, one can define one's primitive commands directly</p>\n\n<pre><code>data DVDCommand :: Bool -&gt; Bool -&gt; * -&gt; * where\n  InsertC  :: DVD -&gt; DVDCommand False True ()\n  EjectC   :: DVDCommand True False DVD\n</code></pre>\n\n<p>and then instantiate the generic template</p>\n\n<pre><code>data CommandIxMonad :: (state -&gt; state -&gt; * -&gt; *) -&gt;\n                        state -&gt; state -&gt; * -&gt; * where\n  CReturn  :: a -&gt; CommandIxMonad c i i a\n  (:?)     :: c i j a -&gt; (a -&gt; CommandIxMonad c j k b) -&gt;\n                CommandIxMonad c i k b\n\ninstance IxMonad (CommandIxMonad c) where\n  ireturn = CReturn\n  ibind (CReturn a) k  = k a\n  ibind (c :? j)    k  = c :? \\ a -&gt; ibind (j a) k\n</code></pre>\n\n<p>In effect, we've said what the primitive Kleisli arrows are (what one \"domino\" is), then built a suitable notion of \"computation sequence\" over them.</p>\n\n<p>Note that for every indexed monad <code>m</code>, the \"no change diagonal\" <code>m i i</code> is a monad, but in general, <code>m i j</code> is not. Moreover, values are not indexed but computations are indexed, so an indexed monad is not just the usual idea of monad instantiated for some other category.</p>\n\n<p>Now, look again at the type of a Kleisli arrow</p>\n\n<pre><code>a -&gt; m i j b\n</code></pre>\n\n<p>We know we must be in state <code>i</code> to start, and we predict that any continuation will start from state <code>j</code>. We know a lot about this system! This isn't a risky operation! When we put the dvd in the drive, it goes in! The dvd drive doesn't get any say in what the state is after each command.</p>\n\n<p>But that's not true in general, when interacting with the world. Sometimes you might need to give away some control and let the world do what it likes. For example, if you are a server, you might offer your client a choice, and your session state will depend on what they choose. The server's \"offer choice\" operation does not determine the resulting state, but the server should be able to carry on anyway. It's not a \"primitive command\" in the above sense, so indexed monads are not such a good tool to model the <em>unpredictable</em> scenario.</p>\n\n<p>What's a better tool?</p>\n\n<pre><code>type f :-&gt; g = forall state. f state -&gt; g state\n\nclass MonadIx (m :: (state -&gt; *) -&gt; (state -&gt; *)) where\n  returnIx    :: x :-&gt; m x\n  flipBindIx  :: (a :-&gt; m b) -&gt; (m a :-&gt; m b)  -- tidier than bindIx\n</code></pre>\n\n<p>Scary biscuits? Not really, for two reasons. One, it looks rather more like what a monad is, because it <em>is</em> a monad, but over <code>(state -&gt; *)</code> rather than <code>*</code>. Two, if you look at the type of a Kleisli arrow,</p>\n\n<pre><code>a :-&gt; m b   =   forall state. a state -&gt; m b state\n</code></pre>\n\n<p>you get the type of computations with a <em>precondition</em> <code>a</code> and postcondition <code>b</code>, just like in Good Old Hoare Logic. Assertions in program logics have taken under half a century to cross the Curry-Howard correspondence and become Haskell types. The type of <code>returnIx</code> says \"you can achieve any postcondition which holds, just by doing nothing\", which is the Hoare Logic rule for \"skip\". The corresponding composition is the Hoare Logic rule for \";\".</p>\n\n<p>Let's finish by looking at the type of <code>bindIx</code>, putting all the quantifiers in.</p>\n\n<pre><code>bindIx :: forall i. m a i -&gt; (forall j. a j -&gt; m b j) -&gt; m b i\n</code></pre>\n\n<p>These <code>forall</code>s have opposite polarity. We choose initial state <code>i</code>, and a computation which can start at <code>i</code>, with postcondition <code>a</code>. The world chooses any intermediate state <code>j</code> it likes, but it must give us the evidence that postcondition <code>b</code> holds, and from any such state, we can carry on to make <code>b</code> hold. So, in sequence, we can achieve condition <code>b</code> from state <code>i</code>. By releasing our grip on the \"after\" states, we can model <em>unpredictable</em> computations.</p>\n\n<p>Both <code>IxMonad</code> and <code>MonadIx</code> are useful. Both model validity of interactive computations with respect to changing state, predictable and unpredictable, respectively. Predictability is valuable when you can get it, but unpredictability is sometimes a fact of life. Hopefully, then, this answer gives some indication of what indexed monads are, predicting both when they start to be useful and when they stop.</p>\n"}, {"tags": [], "owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "is_accepted": false, "score": 5, "last_activity_date": 1424801010, "creation_date": 1424801010, "answer_id": 28703023, "question_id": 28690448, "link": "https://stackoverflow.com/questions/28690448/what-is-indexed-monad/28703023#28703023", "title": "What is indexed monad?", "body": "<p>It may be important to take a look how indexing is used in dependent types (eg in agda). This can explain how indexing helps in general, then translate this experience to monads.</p>\n\n<p>Indexing permits to establish relationships between particular instances of types. Then you can reason about some values to establish whether that relationship holds.</p>\n\n<p>For example (in agda) you can specify that some natural numbers are related with <code>_&lt;_</code>, and the type tells which numbers they are. Then you can require that some function is given a witness that <code>m &lt; n</code>, because only then the function works correctly - and without providing such witness the program will not compile.</p>\n\n<p>As another example, given enough perseverance and compiler support for your chosen language, you could encode that the function assumes that a certain list is sorted.</p>\n\n<p>Indexed monads permit to encode some of what dependent type systems do, to manage side effects more precisely.</p>\n"}, {"comments": [{"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 1, "creation_date": 1424893756, "post_id": 28708799, "comment_id": 45742831, "body": "Am I right that Orchard&#39;s monad is equivalent to Atkey&#39;s, as we can go from the former to the latter by taking the endomorphism monoid, and go backwards by CPS encoding monoidal appends in the state transition?"}, {"owner": {"reputation": 28832, "user_id": 34707, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9c51a8b8afa2366a2ef4650c411f187a?s=128&d=identicon&r=PG", "display_name": "Edward KMETT", "link": "https://stackoverflow.com/users/34707/edward-kmett"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1424978596, "post_id": 28708799, "comment_id": 45783890, "body": "That sounds plausible to me."}, {"owner": {"reputation": 28832, "user_id": 34707, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9c51a8b8afa2366a2ef4650c411f187a?s=128&d=identicon&r=PG", "display_name": "Edward KMETT", "link": "https://stackoverflow.com/users/34707/edward-kmett"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1424980171, "post_id": 28708799, "comment_id": 45784830, "body": "That said, based on something he said to me at ICFP 2013, I believe Orchard intended his type families to act like a real monoid rather than an arbitrary category where some of the arrows can&#39;t connect, so there may be more to the story than that, as Atkey&#39;s construction lets you easily restrict some Kleisli actions from connecting with others -- in many ways that is the very point of it and McBride&#39;s version."}, {"owner": {"reputation": 4369, "user_id": 3102935, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/22985d9fffff3b76a11b1f2bccbf2f42?s=128&d=identicon&r=PG&f=1", "display_name": "WorldSEnder", "link": "https://stackoverflow.com/users/3102935/worldsender"}, "edited": false, "score": 2, "creation_date": 1566097336, "post_id": 28708799, "comment_id": 101546776, "body": "To expand on the &quot;careful reading of <code>ibind</code>&quot;: Introduce the type alias <code>Atkey m i j a = m (a := j) i</code>. Using this as the <code>m</code> in Atkey&#39;s definition recovers the two signatures we search for: <code>ireturnAtkin ::  a -&gt; m (a := i) i</code> and <code>ibindAtkin :: m (a := j) i -&gt; (a -&gt; m (b := k) j) -&gt; m (b := k) i</code>. The first one is obtained by composition: <code>ireturn . V</code>. The second one by (1) building a function <code>forall j. (a := j) j -&gt; m (b := k) j</code> by pattern matching, then passing the recovered <code>a</code> to the second argument of <code>ibindAtkin</code>."}], "tags": [], "owner": {"reputation": 28832, "user_id": 34707, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9c51a8b8afa2366a2ef4650c411f187a?s=128&d=identicon&r=PG", "display_name": "Edward KMETT", "link": "https://stackoverflow.com/users/34707/edward-kmett"}, "is_accepted": false, "score": 48, "last_activity_date": 1582641640, "last_edit_date": 1582641640, "creation_date": 1424822722, "answer_id": 28708799, "question_id": 28690448, "link": "https://stackoverflow.com/questions/28690448/what-is-indexed-monad/28708799#28708799", "title": "What is indexed monad?", "body": "<p>There are at least three ways to define an indexed monad that I know.</p>\n\n<p>I'll refer to these options as <em>indexed monads \u00e0 la X</em>, where X ranges over the computer scientists Bob Atkey, Conor McBride and Dominic Orchard, as that is how I tend to think of them. Parts of these constructions have a much longer more illustrious history and nicer interpretations through category theory, but I first learned of them associated with these names, and I'm trying to keep this answer from getting <em>too</em> esoteric.</p>\n\n<h1>Atkey</h1>\n\n<p>Bob Atkey's style of indexed monad is to work with 2 extra parameters to deal with the index of the monad.</p>\n\n<p>With that you get the definitions folks have tossed around in other answers:</p>\n\n<pre><code>class IMonad m where\n  ireturn  ::  a -&gt; m i i a\n  ibind    ::  m i j a -&gt; (a -&gt; m j k b) -&gt; m i k b\n</code></pre>\n\n<p>We can also define indexed comonads \u00e0 la Atkey as well. I actually get a lot of mileage out of those <a href=\"http://hackage.haskell.org/package/lens-4.7/docs/Control-Lens-Internal-Context.html\" rel=\"nofollow noreferrer\">in the <code>lens</code> codebase</a>.</p>\n\n<h1>McBride</h1>\n\n<p>The next form of indexed monad is Conor McBride's definition from his paper <a href=\"https://personal.cis.strath.ac.uk/conor.mcbride/Kleisli.pdf\" rel=\"nofollow noreferrer\">\"Kleisli Arrows of Outrageous Fortune\"</a>. He instead uses a single parameter for the index. This makes the indexed monad definition have a rather clever shape.</p>\n\n<p>If we define a natural transformation using parametricity as follows</p>\n\n<pre><code>type a ~&gt; b = forall i. a i -&gt; b i \n</code></pre>\n\n<p>then we can write down McBride's definition as</p>\n\n<pre><code>class IMonad m where\n  ireturn :: a ~&gt; m a\n  ibind :: (a ~&gt; m b) -&gt; (m a ~&gt; m b)\n</code></pre>\n\n<p>This feels quite different than Atkey's, but it feels more like a normal Monad, instead of building a monad on <code>(m :: * -&gt; *)</code>, we build it on <code>(m :: (k -&gt; *) -&gt; (k -&gt; *)</code>.</p>\n\n<p>Interestingly you can actually recover Atkey's style of indexed monad from McBride's by using a clever data type, which McBride in his inimitable style chooses to say you should read as \"at key\".</p>\n\n<pre><code>data (:=) :: a i j where\n   V :: a -&gt; (a := i) i\n</code></pre>\n\n<p>Now you can work out that</p>\n\n<pre><code>ireturn :: IMonad m =&gt; (a := j) ~&gt; m (a := j)\n</code></pre>\n\n<p>which expands to</p>\n\n<pre><code>ireturn :: IMonad m =&gt; (a := j) i -&gt; m (a := j) i\n</code></pre>\n\n<p>can only be invoked when j = i, and then a careful reading of <code>ibind</code> can get you back the same as Atkey's <code>ibind</code>. You need to pass around these (:=) data structures, but they recover the power of the Atkey presentation. </p>\n\n<p>On the other hand, the Atkey presentation isn't strong enough to recover all uses of McBride's version. Power has been strictly gained.</p>\n\n<p>Another nice thing is that McBride's indexed monad is clearly a monad, it is just a monad on a different functor category. It works over endofunctors on the category of functors from <code>(k -&gt; *)</code> to <code>(k -&gt; *)</code> rather than the category of functors from <code>*</code> to <code>*</code>.</p>\n\n<p>A fun exercise is figuring out how to do the McBride to Atkey conversion for indexed <em>comonads</em>. I personally use a data type 'At' for the \"at key\" construction in McBride's paper. I actually walked up to Bob Atkey at ICFP 2013 and mentioned that I'd turned him inside out at made him into a \"Coat\". He seemed visibly disturbed. The line played out better in my head. =)</p>\n\n<h1>Orchard</h1>\n\n<p>Finally, a third far-less-commonly-referenced claimant to the name of \"indexed monad\" is due to Dominic Orchard, where he instead uses a type level monoid to smash together indices. Rather than go through the details of the construction, I'll simply link to this talk: </p>\n\n<p><a href=\"https://github.com/dorchard/effect-monad/blob/master/docs/ixmonad-fita14.pdf\" rel=\"nofollow noreferrer\">https://github.com/dorchard/effect-monad/blob/master/docs/ixmonad-fita14.pdf</a></p>\n"}], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12316, "favorite_count": 57, "accepted_answer_id": 28696299, "answer_count": 5, "score": 99, "last_activity_date": 1582641640, "creation_date": 1424763577, "last_edit_date": 1424802466, "question_id": 28690448, "link": "https://stackoverflow.com/questions/28690448/what-is-indexed-monad", "title": "What is indexed monad?", "body": "<p>What is <a href=\"https://hackage.haskell.org/package/indexed-0.1/docs/Control-Monad-Indexed.html\" rel=\"noreferrer\">indexed monad</a> and the motivation for this monad?</p>\n\n<p>I have read that it helps to keep track of the side effects. But the type signature and documentation doesn't lead me to anywhere.</p>\n\n<p>What would be an example of how it can help to keep track of side effects (or any other valid example)?</p>\n"}, {"tags": ["haskell", "lazy-evaluation", "thunk", "weak-head-normal-form"], "comments": [{"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "edited": false, "score": 0, "creation_date": 1424746741, "post_id": 28687384, "comment_id": 45667237, "body": "Amusingly, this is already the second result in Google for &quot;haskell check if whnf&quot;, at least for me :)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1424750204, "post_id": 28687384, "comment_id": 45668071, "body": "On a hopeful note, the <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Storage/HeapObjects\" rel=\"nofollow noreferrer\">GHC Commentary</a> suggests that each heap object info table includes the closure type, which <i>looks</i> like it should give you the kind of thing you&#39;re looking for. On a less-hopeful note, I have the feeling that GHC&#39;s unboxing transformation will make this whole idea rather slippery."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424797063, "post_id": 28687384, "comment_id": 45693466, "body": "@dfeuer Thanks. The GHC Commentary was very helpful in writing an <a href=\"http://stackoverflow.com/a/28701687/414413\">approximate answer</a>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424750385, "post_id": 28687719, "comment_id": 45668103, "body": "I believe <code>NOINLINE</code> is usually needed around <code>unsafePerformIO</code> (along with asbestos underwear) to keep it from being optimized away."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1424768310, "post_id": 28687719, "comment_id": 45674447, "body": "AFAICS, here <code>False</code> means that the value is not in whnf, while <code>True</code> means that it is either in whnf <i>or</i> it is being evaluated right now (and has not yet produced a whnf). Maybe using <code>val `seq` unsafePerformIO (writeIORef ref True) `seq` val</code> can lead to the opposite guarantee (<code>True</code> guaranteeing whnf, and <code>False</code> non-whnf/evaluation in progress). With a 3-states state one could represent this even more precisely: unevaluated/in progress/whnf."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 12, "last_activity_date": 1424748990, "creation_date": 1424748990, "answer_id": 28687719, "question_id": 28687384, "link": "https://stackoverflow.com/questions/28687384/test-if-a-value-has-been-evaluated-to-weak-head-normal-form/28687719#28687719", "title": "Test if a value has been evaluated to weak head normal form", "body": "<p>I'm not sure that there's anything pre-packaged for this. However, one can code it up:</p>\n\n<pre><code>import Data.IORef\nimport System.IO.Unsafe\n\ntrack :: a -&gt; IO (a, IO Bool)\ntrack val = do\n    ref &lt;- newIORef False\n    return\n        ( unsafePerformIO (writeIORef ref True) `seq` val\n        , readIORef ref\n        )\n</code></pre>\n\n<p>Here's an example usage in ghci:</p>\n\n<pre><code>*NFTrack&gt; (value, isEvaluated) &lt;- track (undefined:undefined)\n*NFTrack&gt; isEvaluated\nFalse\n*NFTrack&gt; case value of _:_ -&gt; \"neat!\"\n\"neat!\"\n*NFTrack&gt; isEvaluated\nTrue\n</code></pre>\n\n<p>Of course, this will be tracking whether the <em>wrapped</em> write-and-then-return-the-original-value thunk is evaluated to WHNF, not whether the thing passed to <code>track</code> is evaluated to WHNF, so you'll want to put this as close to the thunk you're interested in as possible -- e.g. it will not be able to tell you whether a thunk made by somebody else has already been evaluated by somebody else before the tracking started. And of course consider using <code>MVar</code> instead of <code>IORef</code> if you need thread-safety.</p>\n"}, {"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424797881, "post_id": 28687859, "comment_id": 45694030, "body": "Thanks. This was helpful in writing an <a href=\"http://stackoverflow.com/a/28701687/414413\">approximate answer</a>. The closure inspection code used in <code>RtClosureInspect</code> is <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/ghc/RtClosureInspect.html#v:getClosureData\" rel=\"nofollow noreferrer\">exposed in the GHC api</a>."}], "tags": [], "owner": {"reputation": 20339, "user_id": 99692, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7aee58de3a50c13e688140bc06d60225?s=128&d=identicon&r=PG", "display_name": "Kevin Reid", "link": "https://stackoverflow.com/users/99692/kevin-reid"}, "is_accepted": false, "score": 7, "last_activity_date": 1424749937, "creation_date": 1424749937, "answer_id": 28687859, "question_id": 28687384, "link": "https://stackoverflow.com/questions/28687384/test-if-a-value-has-been-evaluated-to-weak-head-normal-form/28687859#28687859", "title": "Test if a value has been evaluated to weak head normal form", "body": "<p>A negative answer, for the record: It does not appear to be feasible to reuse the mechanism of <code>sprint</code>, because it is tightly tied to interpreted interactive evaluation as opposed to primitive runtime structures \u2014 as far as I can tell; I've never looked at GHC internals before.</p>\n\n<p>I started by searching for \u201csprint\u201d in <a href=\"https://github.com/ghc/ghc/\">the GHC source on GitHub</a>, which turns out to share an implementation with the \u201cprint\u201d command but for a <code>Bool</code> flag called <code>force</code>, and followed definitions until I got to <a href=\"https://github.com/ghc/ghc/blob/f17992a4954ac14cc6a3fe6a61ec6544a098da93/compiler/ghci/RtClosureInspect.hs#L654\">RtClosureInspect.cvObtainTerm</a> which appears to be a specialized evaluator.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424813706, "post_id": 28701687, "comment_id": 45702911, "body": "I think you could probably improve this answer by adding a brief description of at least the most relevant closure types."}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": false, "score": 8, "last_activity_date": 1424801736, "last_edit_date": 1424801736, "creation_date": 1424796938, "answer_id": 28701687, "question_id": 28687384, "link": "https://stackoverflow.com/questions/28687384/test-if-a-value-has-been-evaluated-to-weak-head-normal-form/28701687#28701687", "title": "Test if a value has been evaluated to weak head normal form", "body": "<p>The <a href=\"https://github.com/ghc/ghc/blob/f17992a4954ac14cc6a3fe6a61ec6544a098da93/compiler/ghci/RtClosureInspect.hs#L174\">ghci implementation for <code>:sprint</code></a> ultimately uses <a href=\"http://hackage.haskell.org/package/ghc-prim-0.3.1.0/docs/GHC-Prim.html#v:unpackClosure-35-\"><code>unpackClosure#</code></a> from ghc-prim to inspect a closure. This can be combined with knowledge of the <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Commentary/Rts/Storage/HeapObjects\">format of heap objects</a> to determine if a closure has been evaluated all the way to weak head normal form.</p>\n\n<p>There are a few ways to reproduce the inspection done by the ghci implementation for <code>:sprint</code>. The GHC api exposes <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/ghc/RtClosureInspect.html#v:getClosureData\"><code>getClosureData :: DynFlags -&gt; a -&gt; IO Closure</code></a> in <code>RtClosureInspect</code>. The <a href=\"http://hackage.haskell.org/package/vacuum\">vacuum</a> package, which depends only on ghc-prim, reproduces the code from <code>RtClosureInspect</code> and exposes <code>getClosure :: a -&gt; IO Closure</code>. It's not immediately obvious how to examine either of these <code>Closure</code> representations to, for example, follow an indirection. The <a href=\"http://hackage.haskell.org/package/ghc-heap-view\">ghc-heap-view</a> package inspects closures and exposes both a <a href=\"http://hackage.haskell.org/package/ghc-heap-view-0.5.3/docs/GHC-HeapView.html#v:getClosureData\"><code>getClosureData :: a -&gt; IO Closure</code></a> and a <a href=\"http://hackage.haskell.org/package/ghc-heap-view-0.5.3/docs/GHC-HeapView.html#t:GenClosure\">detailed view of the <code>Closure</code></a>. ghc-heap-view depends on the GHC api.</p>\n\n<p>We can write <code>evaluated</code> in terms of <a href=\"http://hackage.haskell.org/package/ghc-heap-view-0.5.3/docs/GHC-HeapView.html#v:getBoxedClosureData\"><code>getBoxedClosureData</code></a> from ghc-heap-view.</p>\n\n<pre><code>import GHC.HeapView\n\nevaluated :: a -&gt; IO Bool\nevaluated = go . asBox\n    where\n        go box = do\n            c &lt;- getBoxedClosureData box\n            case c of\n                ThunkClosure     {} -&gt; return False\n                SelectorClosure  {} -&gt; return False\n                APClosure        {} -&gt; return False\n                APStackClosure   {} -&gt; return False\n                IndClosure       {indirectee = b'} -&gt; go b'\n                BlackholeClosure {indirectee = b'} -&gt; go b'\n                _ -&gt; return True\n</code></pre>\n\n<p>This handling of blackhole closures may be incorrect while the blackhole is being evaluated. The handling of selector closures may be incorrect. The assumption that AP closures aren't in weak head normal form may be incorrect. The assumption that all other closures are in WHNF is almost certainly incorrect.</p>\n\n<h3>Example</h3>\n\n<p>Our example will require two concurrent threads to observe in one thread that the other is evaluating expressions.</p>\n\n<pre><code>import Data.Char\nimport Control.Concurrent\n</code></pre>\n\n<p>We can communicate information sideways out of a function without resorting to anything <code>unsafe</code> by selectively forcing evaluation. The following builds a stream of pairs of thunks in which we can choose to force one or the other of the pair.</p>\n\n<pre><code>mkBitStream :: Integer -&gt; [(Integer, Integer)]\nmkBitStream a = (a+2, a+3) : mkBitStream (a+1)\n</code></pre>\n\n<p><code>zero</code> forces the first one and <code>one</code> forces the second one.</p>\n\n<pre><code>zero :: [(x, y)] -&gt; [(x, y)]\nzero ((x, _):t) = x `seq` t\n\none :: [(x, y)] -&gt; [(x, y)]\none ((_, y):t) = y `seq` t\n</code></pre>\n\n<p><code>copy</code> is an evil identity function that has the side effect of forcing bits in a stream based on inspecting the data.</p>\n\n<pre><code>copy :: (a -&gt; Bool) -&gt; [(x, y)] -&gt; [a] -&gt; [a]\ncopy f bs []     = []\ncopy f bs (x:xs) = let bs' = if f x then one bs else zero bs\n                   in bs' `seq` (x:copy f bs' xs)\n</code></pre>\n\n<p><code>readBs</code> reads our bit stream by checking if each of the thunks in a pair has been <code>evaluated</code>.</p>\n\n<pre><code>readBs :: [(x, y)] -&gt; IO ()\nreadBs bs@((f, t):bs') = do\n    f' &lt;- evaluated f\n    if f'\n    then putStrLn \"0\" &gt;&gt; readBs bs'\n    else do\n        t' &lt;- evaluated t\n        if t'\n        then putStrLn \"1\" &gt;&gt; readBs bs'\n        else readBs bs\n</code></pre>\n\n<p>Forcing <code>copy</code> when printing it has the side effect of printing the information observed about the read string.</p>\n\n<pre><code>main = do\n    let bs = mkBitStream 0\n    forkIO (readBs bs)\n    text &lt;- getLine\n    putStrLn (copy isAlpha bs text)\n    getLine\n</code></pre>\n\n<p>If we run the program and provide the input <code>abc123</code> we observe the side effect corresponding to checking if each of the characters <code>isAlpha</code></p>\n\n<pre><code>abc123\nabc123\n1\n1\n1\n0\n0\n0\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "is_accepted": false, "score": 1, "last_activity_date": 1424882712, "creation_date": 1424882712, "answer_id": 28724701, "question_id": 28687384, "link": "https://stackoverflow.com/questions/28687384/test-if-a-value-has-been-evaluated-to-weak-head-normal-form/28724701#28724701", "title": "Test if a value has been evaluated to weak head normal form", "body": "<p>There has been a proposal recently, maybe it's somewhere implemented already <a href=\"https://mail.haskell.org/pipermail/libraries/2015-February/024917.html\" rel=\"nofollow\">https://mail.haskell.org/pipermail/libraries/2015-February/024917.html</a></p>\n"}], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1122, "favorite_count": 4, "answer_count": 4, "score": 17, "last_activity_date": 1431764111, "creation_date": 1424746290, "last_edit_date": 1495541699, "question_id": 28687384, "link": "https://stackoverflow.com/questions/28687384/test-if-a-value-has-been-evaluated-to-weak-head-normal-form", "title": "Test if a value has been evaluated to weak head normal form", "body": "<p>In Haskell, is it possible to test if a value has been evaluated to weak head normal form? If a function already exists, I would expect it to have a signature like</p>\n\n<pre><code>evaluated :: a -&gt; IO Bool\n</code></pre>\n\n<p>There are a few places that similar functionality lives.</p>\n\n<p>A <a href=\"https://stackoverflow.com/a/28685367/414413\">previous answer</a> introduced me to the <a href=\"https://downloads.haskell.org/~ghc/7.8.4/docs/html/users_guide/ghci-commands.html#idp7742464\" rel=\"nofollow noreferrer\"><code>:sprint</code></a> ghci command, which will print only the portion of a value that has already been forced to weak head normal form. <code>:sprint</code> can observe whether or not a value has been evaluated:</p>\n\n<pre><code>&gt; let l = ['a'..]\n&gt; :sprint l\nl = _\n&gt; head l\n'a'\n&gt; :sprint l\nl = 'a' : _\n</code></pre>\n\n<p>It's possible in <code>IO</code> to examine properties that would otherwise be off-limits. For example, it's possible to compare in <code>IO</code> to see if two values came from the same declaration. This is provided by the <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/System-Mem-StableName.html#t:StableName\" rel=\"nofollow noreferrer\"><code>StableName</code></a>s in <code>System.Mem.StableName</code> and used famously to solve the observable sharing problem in <a href=\"https://hackage.haskell.org/package/data-reify\" rel=\"nofollow noreferrer\">data-reify</a>. The related <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Foreign-StablePtr.html\" rel=\"nofollow noreferrer\"><code>StablePtr</code></a> does not provide a mechanism to check if the referenced value is in weak head normal form.</p>\n"}, {"tags": ["haskell", "fibonacci"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424732778, "post_id": 28685119, "comment_id": 45663316, "body": "<a href=\"http://stackoverflow.com/questions/24704503/lazy-evaluation-why-is-it-faster-advantages-vs-disadvantages-mechanics-why-i/24705697#24705697\">See one of my answers here</a> that explains more of how this computation works from the &quot;lazy&quot; point of view.  One of the side effects of this is that when you evaluate this in GHCi, it&#39;s actually getting passed to <code>print</code>, which can lazily consume lists, printing each element as its available.  The <code>fibs</code> list you have defined is actually infinite, you can&#39;t actually compute the entire thing."}], "answers": [{"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424742909, "post_id": 28685367, "comment_id": 45666341, "body": "I didn&#39;t know about <code>:sprint</code>; that&#39;s pretty useful and a little terrifying. Is there a runtime version of <code>:sprint</code>, perhaps with the type <code>a -&gt; IO Bool</code>? If so, it would have unsettling implications for ordinary evaluation being side-effect free."}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424743405, "post_id": 28685367, "comment_id": 45666479, "body": "@Cirdec: I believe that <i>exists</i>, in the same way that <code>unsafeCoerce</code> and <code>unsafePerformIO</code> exist: they&#39;re escape hatches to the abstraction that only make sense with an understanding of how it&#39;s actually implemented. I&#39;m not sure exactly how it works though."}], "tags": [], "owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "is_accepted": true, "score": 11, "last_activity_date": 1424733031, "creation_date": 1424733031, "answer_id": 28685367, "question_id": 28685119, "link": "https://stackoverflow.com/questions/28685119/fibonacci-sequence-generation/28685367#28685367", "title": "Fibonacci sequence generation", "body": "<p>So, most of your reasoning is correct. In particular, you described correctly how each new element of the list is evaluated in terms of older ones. You are also correct that to <em>fully</em> evaluate <code>fibs</code> would require repeating the steps you outlined and would, in fact, loop forever.</p>\n\n<p>The key ingredient you're missing is that <strong>we don't have to fully evaluate the list</strong>. A binding like <code>fibs = ...</code> just assigns a name to the expression; it does not require evaluating the whole list. Haskell will only evaluate as much of the list as it needs to run <code>main</code>. So, for example, if our <code>main</code> is</p>\n\n<pre><code>main = print $ fibs !! 100\n</code></pre>\n\n<p>Haskell will only calculate the first 100 elements of <code>fibs</code> (following the steps you outlined) but will not need any more than that and will not loop forever.</p>\n\n<p>Moreover, even if we <em>are</em> evaluating the whole thing (which will loop forever), we can use the parts we've calculated as we go along. This is exactly what's happening when you see the value of <code>fibs</code> in ghci: it prints as much as it can as each element is being calculated and does not have to wait until the whole list is ready.</p>\n\n<h2>Seeing Strictness in GHCi</h2>\n\n<p>You can see how much of a list is evaluated in <code>ghci</code> using the <code>:sprint</code> command which will print a Haskell data structure with <code>_</code> for the parts that haven't been evaluated yet (called \"thunks\"). You can use this to see how <code>fibs</code> gets evaluated in action:</p>\n\n<pre><code>Prelude&gt; let fibs = 1 : 1 : zipWith (+) fibs (tail fibs)\nPrelude&gt; :sprint fibs\nfibs = _\nPrelude&gt; print $ fibs !! 10\n89\nPrelude&gt; :sprint fibs\nfibs = _\n</code></pre>\n\n<p>Oops, that's not what we expected! In fact, this is a case where the <em>lack</em> of the monomorphism restriction is a problem! <code>fibs</code> gets a polymorphic type</p>\n\n<pre><code>Prelude&gt; :t fibs\nfibs :: Num a =&gt; [a]\n</code></pre>\n\n<p>which means it behaves like a function call each time you use it, not like a normal value. (In the background, GHC implements instantiating the <code>Num</code> type class as passing in a dictionary to <code>fibs</code>; it's implemented like a <code>NumDictionary a -&gt; [a]</code> function.)</p>\n\n<p>To really understand what's going on, we'll need to make <code>fibs</code> <em>monomorphic</em> explicitly. We can do this by loading it from a module where the restriction is active or by giving it an explicit type signature. Let's do the latter:</p>\n\n<pre><code>Prelude&gt; let fibs :: [Integer]; fibs = 1 : 1 : zipWith (+) fibs (tail fibs)\nPrelude&gt; :sprint fibs\nfibs = _\nPrelude&gt; print $ fibs !! 10\n89\nPrelude&gt; :sprint fibs\nfibs = 1 : 1 : 2 : 3 : 5 : 8 : 13 : 21 : 34 : 55 : 89 : _\n</code></pre>\n\n<p>And there you are: you can see which parts of the list needed to be evaluated and which ones didn't to get the 10th element. You can play around with other lists or other lazy data structures to get a good feel for what's going on in the background.</p>\n\n<p>Also, you can take a look at <a href=\"http://jelv.is/blog/Lazy-Dynamic-Programming\" rel=\"noreferrer\">my blog post</a> about this sort of laziness. It goes into greater detail about the <code>fibs</code> example (with diagrams!) and talks about how to use this approach for general memoization and dynamic programming.</p>\n"}], "owner": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "accepted_answer_id": 28685367, "answer_count": 1, "score": 4, "last_activity_date": 1424747528, "creation_date": 1424731954, "last_edit_date": 1424747528, "question_id": 28685119, "link": "https://stackoverflow.com/questions/28685119/fibonacci-sequence-generation", "title": "Fibonacci sequence generation", "body": "<p>I was writing a fibonacci sequence generator, and I was trying to understand the following code in Haskell</p>\n\n<p><code>fibs = 1 : 1 : zipWith (+) fibs (tail fibs)\n</code></p>\n\n<p>I understand what <code>zipWith</code> is, but I do not exactly know how the program executes and why it does generate all the fibonacci numbers. I was trying to understand why it does not terminate using the environment concept in functional languages as follows:</p>\n\n<p>Initially, because Haskell's lazy evaluation, the binding in the <code>env</code> should be <code>fibs : [1,1,x]</code>, then to evaluate <code>fibs</code>, the interpreter evaluates <code>x</code> which is <code>zipWith (+) fibs (tail fibs)</code> in this case. When evaluating <code>zipWith</code>, it gets <code>fibs : [1,1,2,x]</code>, again because of the lazy evaluation of Haskell. And <code>fibs</code> in <code>env</code> is bound to <code>[1,1,2,x]</code> at this time. However, to fully evaluate <code>fibs</code>, it continues to evaluate <code>x</code> and we go back to the previous steps.</p>\n\n<p>Is this correct?</p>\n\n<p>Besides, I noticed that when I ran the program above in <code>ghci</code>, it instantly prompts the fibonacci sequence it currently has computed, why? Shouldn't it print the result once it finishes all the computation?</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1424730132, "post_id": 28684400, "comment_id": 45662090, "body": "If you want to chain them together like in a monad (with <code>do</code> notation) then you&#39;ll need to convert them all to a single type that you can then make a Monad instance for. You state that you want the type system to just figure out what a function means by failure without hints or context. In theory, I could have an infinite number of functions that each return a different Integer representing failure, how is the compiler supposed to know when a specific Integer is a failure? It only has a value as context. You can&#39;t expect the compiler to write your program for you, otherwise we&#39;d all use Agda."}, {"owner": {"reputation": 173, "user_id": 4598510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7081398b948933b487e61e83b41d9a4?s=128&d=identicon&r=PG&f=1", "display_name": "og_loc", "link": "https://stackoverflow.com/users/4598510/og-loc"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424730360, "post_id": 28684400, "comment_id": 45662202, "body": "Yeah I don&#39;t necessarily want to make this a monad, but it will be similar. I don&#39;t expect the compiler to know which integers are failure, I want to somehow indicate which integers are failure for <code>f</code>, and indicate a different set for <code>f2</code>, and so on. For example, in Python I could just make a global variable mapping functions to some equivalent of the typeclass instances. Then it would crash at runtime instead of compile time if there&#39;s no mapping from some function the user wants to use. But it would still be safer."}], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 4598510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7081398b948933b487e61e83b41d9a4?s=128&d=identicon&r=PG&f=1", "display_name": "og_loc", "link": "https://stackoverflow.com/users/4598510/og-loc"}, "edited": false, "score": 0, "creation_date": 1424736497, "post_id": 28685356, "comment_id": 45664552, "body": "I&#39;m going to have to reread your answer, but, outputting booleans was useful in my actual use case, since instead of functions I&#39;m really using monadic operations outputting whether they succeeded."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424737662, "post_id": 28685356, "comment_id": 45664954, "body": "Note that base 4.8 adds an <code>Alt</code> type to <code>Data.Monoid</code> (turning an <code>Alternative</code> into a <code>Monoid</code>), so that might not be the best name to choose."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 173, "user_id": 4598510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7081398b948933b487e61e83b41d9a4?s=128&d=identicon&r=PG&f=1", "display_name": "og_loc", "link": "https://stackoverflow.com/users/4598510/og-loc"}, "edited": false, "score": 0, "creation_date": 1424786594, "post_id": 28685356, "comment_id": 45685709, "body": "@og_loc: monadic operations should not output booleans to signal failure, no more than ordinary functions should. For the latter you use a suitable <code>Maybe</code> or <code>Either</code> wrapper; the former should be done with the corresponding monad transformer."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 10, "last_activity_date": 1424766884, "last_edit_date": 1424766884, "creation_date": 1424732960, "answer_id": 28685356, "question_id": 28684400, "link": "https://stackoverflow.com/questions/28684400/functions-as-instances-of-typeclasses/28685356#28685356", "title": "Functions as instances of typeclasses?", "body": "<p>Don't do this. Haskell's static type system and referential transparency give you a tremendously useful guarantee: you can be properly sure that some particular <em>value</em> means the same thing<sup>1</sup>, regardless of how it was produced. There's neither mutability to interfer with this, nor dynamic-style &ldquo;runtime reinterpretation&rdquo; of expressions, as you'd need for the task you seem to envision.</p>\n\n<p>If those functions you have there don't adhere to such a specification accordingly, well, then this is bad. Better get rid of them (at least, <em>hide</em> them and only export a re-defined version with unified behaviour). Or tell the users they'll have to live with looking up the specification of each. But don't try to hack some way around this particular symptom of broken definitions.</p>\n\n<p>An easy change you could apply to just &ldquo;flag&rdquo; the functions where failure means the opposite as it otherwise does is to have them return such a wrapped result:</p>\n\n<pre><code>newtype Anti a = Anti { profail :: a }\n\ninstance (Anti a) =&gt; Fail (Anti a) where\n  isFail (Anti a) = not $ isFail a\n</code></pre>\n\n<hr>\n\n<p><sup>1</sup><sub>Mind: &ldquo;same thing&rdquo; in a possibly very abstract sense. There's no need for <code>Left</code> to be universally a &ldquo;fail constructor&rdquo;, it's sufficient that it's clear that it's the <em>variant constructor associated to the first type argument, which is <strong>not</strong> what the functor/monad instance operates on</em> &ndash; from that it follows automatically that this will &ldquo;mean&rdquo; failure in a monadic application.<br>I.e., when you've chosen the right types, stuff should be unambigious pretty much automatically; obviously the opposite is true when you're just <a href=\"https://existentialtype.wordpress.com/2011/03/15/boolean-blindness/\" rel=\"nofollow\">tossing around booleans</a>, so perhaps you should get rid of those entirely...</sub></p>\n"}], "owner": {"reputation": 173, "user_id": 4598510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7081398b948933b487e61e83b41d9a4?s=128&d=identicon&r=PG&f=1", "display_name": "og_loc", "link": "https://stackoverflow.com/users/4598510/og-loc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1424766884, "creation_date": 1424729156, "question_id": 28684400, "link": "https://stackoverflow.com/questions/28684400/functions-as-instances-of-typeclasses", "title": "Functions as instances of typeclasses?", "body": "<p><code>{-# LANGUAGE LambdaCase #-}</code></p>\n\n<p>I have a bunch of functions which encode failure in various ways. For example:</p>\n\n<ul>\n<li><code>f :: A -&gt; Bool</code> returns <code>False</code> on failure</li>\n<li><code>g :: B -&gt; Maybe B'</code> returns <code>Nothing</code> on failure</li>\n<li><code>h :: C -&gt; Either Error C'</code> returns <code>Left ...</code> on failure</li>\n</ul>\n\n<p>I want to chain these operations in the same way as the <code>Maybe</code> monad, so the chaining function needs to know whether each function failed before proceeding to the next one. For this I wrote this class:</p>\n\n<pre><code>class Fail a where\n  isFail :: a -&gt; Bool\ninstance Fail () where\n  isFail () = False\ninstance Fail Bool where -- a\n  isFail = not\ninstance Fail (Maybe a) where -- b\n  isFail = not . isJust\ninstance Fail (Either a b) where -- c\n  isFail (Left _) = True\n  isFail _ = False\n</code></pre>\n\n<p>However, it's possible that functions that don't conform exist:</p>\n\n<ul>\n<li><code>f' :: A -&gt; Bool</code> returns <code>True</code> on failure</li>\n<li><code>g' :: B -&gt; Maybe Error</code> returns <code>Just Error</code> on failure (<code>Nothing</code> on success)</li>\n<li><code>h' :: C -&gt; Either C' Error</code> returns <code>Right ...</code> on failure</li>\n</ul>\n\n<p>These could be remedied by simply wrapping them with functions that transform them, for example:</p>\n\n<ul>\n<li><code>f'' = not . f'</code>.</li>\n<li><code>g'' = (\\case Nothing -&gt; Right (); Just e -&gt; Left e) . g'</code></li>\n<li><code>h'' = (\\case Left c -&gt; Right c; Right e -&gt; Left e) . h'</code></li>\n</ul>\n\n<p>However, the user of the chaining function expects to be able to combine <code>f</code>,<code>g</code>,<code>h</code>,<code>f'</code>,<code>g'</code>, and <code>h'</code> and have them just work. He would not know that the return type of a function needs to be transformed unless he looks at the semantics of each function he's combining, and check if they match up with whatever <code>Fail</code> instances he has in scope. This is tedious and too subtle for the average user to even notice, especially with type inference bypassing the user having to choose the right instances.</p>\n\n<p>These functions weren't created with knowledge of how they'd be used. So I could make a type <code>data Result a b = Fail a | Success b</code> and make wrappers around each function. For example:</p>\n\n<ul>\n<li><code>fR  = (\\case True -&gt; Sucess (); False -&gt; Fail ()) . f</code></li>\n<li><code>f'R = (\\case False -&gt; Sucess (); True -&gt; Fail ()) . f'</code></li>\n<li><code>gR  = (\\case Just a -&gt; Sucess a; Nothing -&gt; Fail ()) . g</code></li>\n<li><code>g'R = (\\case Nothing -&gt; Sucess (); Just e -&gt; Fail e) . g'</code></li>\n<li><code>hR  = (\\case Left e -&gt; Fail e; Right a -&gt; Sucess a) . h</code></li>\n<li><code>h'R = (\\case Right e -&gt; Fail e; Left a -&gt; Sucess a) . h'</code></li>\n</ul>\n\n<p>However, this feels dirty. What we're doing is just certifying / explaining how each of <code>f</code>,<code>g</code>,<code>h</code>,<code>f'</code>,<code>g'</code>, and <code>h'</code> are used in the context of the combining function. Is there are more direct way of doing this? What I want exactly is a way to say which instance of the <code>Fail</code> typeclass should be used for each function, i.e, (using the names given to the typeclass instances above), <code>f</code> \u2192 <code>a</code>, <code>g</code> \u2192 <code>b</code>, <code>h</code> \u2192 <code>c</code>, and <code>f'</code> \u2192 <code>a'</code>, <code>g'</code> \u2192 <code>b'</code>, <code>h'</code> \u2192 <code>c'</code> for the \"invalid\" functions, where <code>a'</code>,<code>b'</code>, and <code>c'</code> are defined as the following instances (which overlap the previous ones, so you'd need to be able to pick them by name somehow):</p>\n\n<pre><code>instance Fail Bool where -- a'\n  isFail = id\ninstance Fail (Maybe a) where -- b'\n  isFail = isJust\ninstance Fail (Either a b) where -- c'\n  isFail (Right _) = True\n  isFail _ = False\n</code></pre>\n\n<p>It doesn't necessarily have to by done via typeclasses though. Maybe there's some way to do this other than with typeclasses?</p>\n"}, {"tags": ["haskell", "pattern-matching", "sml"], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 4598510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7081398b948933b487e61e83b41d9a4?s=128&d=identicon&r=PG&f=1", "display_name": "og_loc", "link": "https://stackoverflow.com/users/4598510/og-loc"}, "edited": false, "score": 0, "creation_date": 1424723500, "post_id": 28682773, "comment_id": 45658512, "body": "word I just scrolled through chapter 7 of the manual before making the question and I must of missed this cus I&#39;m too gangsta!"}], "tags": [], "owner": {"reputation": 2152, "user_id": 1103600, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7830fb399137c319ff68dca3e3b6f7e2?s=128&d=identicon&r=PG", "display_name": "Arnon", "link": "https://stackoverflow.com/users/1103600/arnon"}, "is_accepted": true, "score": 20, "last_activity_date": 1424723376, "last_edit_date": 1424723376, "creation_date": 1424723139, "answer_id": 28682773, "question_id": 28682750, "link": "https://stackoverflow.com/questions/28682750/pattern-match-in-binding-of-lambda/28682773#28682773", "title": "Pattern match in binding of lambda?", "body": "<p>You can use the LambdaCase language extension and perform</p>\n\n<pre><code>{-# LANGUAGE LambdaCase #-}\n... \nf $ \\case \n     A a1 a2 -&gt;\n...\n</code></pre>\n\n<p>as per your example.</p>\n\n<p>You can read more about it <a href=\"https://downloads.haskell.org/~ghc/7.6.3/docs/html/users_guide/syntax-extns.html#lambda-case\" rel=\"noreferrer\">in GHC's documentation</a></p>\n"}], "owner": {"reputation": 173, "user_id": 4598510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7081398b948933b487e61e83b41d9a4?s=128&d=identicon&r=PG&f=1", "display_name": "og_loc", "link": "https://stackoverflow.com/users/4598510/og-loc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 951, "favorite_count": 0, "accepted_answer_id": 28682773, "answer_count": 1, "score": 12, "last_activity_date": 1424723376, "creation_date": 1424723067, "question_id": 28682750, "link": "https://stackoverflow.com/questions/28682750/pattern-match-in-binding-of-lambda", "title": "Pattern match in binding of lambda?", "body": "<p>In Haskell, I often do something like this:</p>\n\n<pre><code>f $ \\x -&gt; case x of\n            A a1 a2 -&gt; ...\n            B b1 b2 -&gt; ...\n            C c1 c2 -&gt; ...\n</code></pre>\n\n<p>But I don't want <code>x</code>, I just want to deconstruct it.</p>\n\n<p>In Standard ML I can do something like this:</p>\n\n<pre><code>f (fn A(a1,a2) =&gt; ...\n    | B(b1,b2) =&gt; ...\n    | C(c1,c2) =&gt; ...)\n</code></pre>\n\n<p>Is there a way to do this in Haskell or with any GHC extensions?</p>\n"}, {"tags": ["haskell", "currying"], "comments": [{"owner": {"reputation": 37594, "user_id": 149391, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/1355030928a7422efe6349a3ae9bca83?s=128&d=identicon&r=PG", "display_name": "Joey Adams", "link": "https://stackoverflow.com/users/149391/joey-adams"}, "edited": false, "score": 1, "creation_date": 1424719536, "post_id": 28681697, "comment_id": 45656273, "body": "Your <code>curry</code> function works.  What error do you get?"}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424719558, "post_id": 28681697, "comment_id": 45656288, "body": "Agreed, this should work."}, {"owner": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "edited": false, "score": 0, "creation_date": 1424719578, "post_id": 28681697, "comment_id": 45656303, "body": "OK, I figured out my testing function max1 is wrong. <code>max1 x y = curry max x y</code> works. I am new to Haskell, LoL"}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424719668, "post_id": 28681697, "comment_id": 45656360, "body": "By eta reduction <code>max1 x y = curry max x y</code> and <code>max1 = curry max</code> should be equivalent in this case"}, {"owner": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "edited": false, "score": 0, "creation_date": 1424719746, "post_id": 28681697, "comment_id": 45656413, "body": "But is <code>max1 = curry max</code> allowed in Haskell?"}, {"owner": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "edited": false, "score": 0, "creation_date": 1424719797, "post_id": 28681697, "comment_id": 45656445, "body": "Can I define another function <code>max1 = curry max</code>?"}, {"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424719828, "post_id": 28681697, "comment_id": 45656462, "body": "Yes, you can confirm that e.g. by typing it into a ghci session: <code>let max (x,y) = if x &gt; y then x else y; curry f = \\x y -&gt; f (x,y); max1 = curry max</code>. <code>max1</code> will have the type <code>(Ord a) =&gt; a -&gt; a -&gt; a</code>"}], "answers": [{"comments": [{"owner": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 0, "creation_date": 1424720041, "post_id": 28681837, "comment_id": 45656597, "body": "Interesting, didn&#39;t know type inference worked differently in GHCi vs top-level of a module"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424720043, "post_id": 28681837, "comment_id": 45656599, "body": "Indeed, <code>-Wall</code> (or at least a subset of it) should be on by default, IMHO."}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 84156, "user_id": 916657, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/75bf31b48e75eedfebaa411a76a85155?s=128&d=identicon&r=PG", "display_name": "Niklas B.", "link": "https://stackoverflow.com/users/916657/niklas-b"}, "edited": false, "score": 1, "creation_date": 1424720130, "post_id": 28681837, "comment_id": 45656650, "body": "@NiklasB.: from a fairly recent version (7.6 or 7.8 or something), <code>ghci</code> has the monomorphism restriction turned off by default."}, {"owner": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "edited": false, "score": 0, "creation_date": 1424720167, "post_id": 28681837, "comment_id": 45656672, "body": "Thank you! The error ghci pops is something regarding the type inference I guess but I did not really understand why there was an error."}, {"owner": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "edited": false, "score": 0, "creation_date": 1424720237, "post_id": 28681837, "comment_id": 45656713, "body": "My <code>ghci</code> is version 7.8.3, but it still reported the error"}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "edited": false, "score": 0, "creation_date": 1424720258, "post_id": 28681837, "comment_id": 45656723, "body": "@xwang: Yeah, it&#39;s a pretty obscure and unintuitive corner of Haskell&#39;s type inference that confuses almost everyone at some point. For now, just put type signatures everywhere and you&#39;ll be fine."}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "edited": false, "score": 0, "creation_date": 1424720321, "post_id": 28681837, "comment_id": 45656766, "body": "@xwang: <code>ghci</code> reported the error when you were loading your module. If you instead defined <code>max1</code> interactively by entering <code>let max1 = curry max</code> to the prompt, it should not give you an error."}, {"owner": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "edited": false, "score": 0, "creation_date": 1424720435, "post_id": 28681837, "comment_id": 45656832, "body": "@TikhonJelvis You are absolutely right. When loading modules it does not turn off the restriction but in <code>ghci</code> it does turn off."}], "tags": [], "owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "is_accepted": true, "score": 5, "last_activity_date": 1424719926, "creation_date": 1424719926, "answer_id": 28681837, "question_id": 28681697, "link": "https://stackoverflow.com/questions/28681697/currying-in-haskell/28681837#28681837", "title": "Currying in Haskell", "body": "<p>You ran into the <a href=\"https://wiki.haskell.org/Monomorphism_restriction\" rel=\"noreferrer\">dreaded monomorphism restriction</a>, which limits where Haskell can infer polymorphic types.</p>\n\n<p>A binding that does not \"look\" like a function\u2014has no named arguments\u2014cannot have a polymorphic type. The problem is that your <code>max</code> function <em>does</em> have a polymorphic type (it works for any type <code>o</code> that is in the <code>Ord</code> class), which forces the type system to pick a single concerete orderable type for <code>max1</code>. Since there is no default type to pick, it tells you a type variable is ambiguous.</p>\n\n<p>There are three ways you can avoid this restriction. One, as you've already seen, is to make the arguments explicit, making the whole binding look like a function:</p>\n\n<pre><code>max1 x y = curry max x y\n</code></pre>\n\n<p>Another is to add an explicit type signature:</p>\n\n<pre><code>max1 :: Ord o =&gt; o -&gt; o -&gt; o\nmax1 = curry max\n</code></pre>\n\n<p>Finally, you can also turn off the restriction by adding a compiler directive to the top of your module:</p>\n\n<pre><code>{-# LANGUAGE NoMonomorphismRestriction #-}\n</code></pre>\n\n<p>Out of all of these, the most idiomatic choice is adding a type signature. <strong>Generally, every top-level name should have an explicit type signature.</strong> This is not mandatory, but is considered good style because, apart from avoiding monomorphism issues, it also helps catch more errors and makes error messages easier to read. If you turn on all the warnings in GHC (with the <code>-Wall</code> flag), it will warn you about top-level names without type signatures.</p>\n"}], "owner": {"reputation": 127, "user_id": 4573908, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh5.googleusercontent.com/-Y-z4lH0MjKQ/AAAAAAAAAAI/AAAAAAAAAG4/j0Rt9Ilq2H8/photo.jpg?sz=128", "display_name": "xwang", "link": "https://stackoverflow.com/users/4573908/xwang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 358, "favorite_count": 0, "accepted_answer_id": 28681837, "answer_count": 1, "score": 1, "last_activity_date": 1424719926, "creation_date": 1424719390, "question_id": 28681697, "link": "https://stackoverflow.com/questions/28681697/currying-in-haskell", "title": "Currying in Haskell", "body": "<p>I was manually writing a currying function in Haskell as follows.\n<code>curry f = \\x y -&gt; f(x,y)</code>\nThen I use this <code>max(x, y) = if x &gt; y then x else y</code> as f, and I wrote <code>max1 = curry max</code> to get the curried function</p>\n\n<p>But this is not allowed. Why is it wrong?</p>\n"}, {"tags": ["haskell", "recursion", "tail-recursion"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1424719375, "post_id": 28681339, "comment_id": 45656175, "body": "GHC should raise a warning about overlapping patterns if you compile your code with <code>-Wall</code>, pointing at the bug."}, {"owner": {"reputation": 231, "user_id": 4191647, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kFi8q.jpg?s=128&g=1", "display_name": "Himself12794", "link": "https://stackoverflow.com/users/4191647/himself12794"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424720175, "post_id": 28681339, "comment_id": 45656679, "body": "I did, but I was unsure of what exactly that it meant, but it still compiled."}], "answers": [{"tags": [], "owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "is_accepted": false, "score": 2, "last_activity_date": 1424718388, "creation_date": 1424718388, "answer_id": 28681436, "question_id": 28681339, "link": "https://stackoverflow.com/questions/28681339/remove-the-first-value-in-a-list-that-meets-a-criterion/28681436#28681436", "title": "Remove the First Value in a List that Meets a Criterion", "body": "<p>Your first equation,</p>\n\n<pre><code>removeFirst p xs = []\n</code></pre>\n\n<p>says \u201eWhatever my arguments are, just return []\u201c, and the rest of the code is ignored.</p>\n\n<p>You probably mean</p>\n\n<pre><code>removeFirst p [] = []\n</code></pre>\n\n<p>saying \u201eWhen the list is already empty, return the empty list.\u201c</p>\n"}, {"comments": [{"owner": {"reputation": 231, "user_id": 4191647, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kFi8q.jpg?s=128&g=1", "display_name": "Himself12794", "link": "https://stackoverflow.com/users/4191647/himself12794"}, "edited": false, "score": 0, "creation_date": 1424719098, "post_id": 28681441, "comment_id": 45656007, "body": "Thank you! That does work. Now I must do the same thing, removing the second value. I will try to get something going before asking for help on that one."}], "tags": [], "owner": {"reputation": 3611, "user_id": 1029158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/YmuXk.jpg?s=128&g=1", "display_name": "DiegoNolan", "link": "https://stackoverflow.com/users/1029158/diegonolan"}, "is_accepted": true, "score": 4, "last_activity_date": 1424718403, "creation_date": 1424718403, "answer_id": 28681441, "question_id": 28681339, "link": "https://stackoverflow.com/questions/28681339/remove-the-first-value-in-a-list-that-meets-a-criterion/28681441#28681441", "title": "Remove the First Value in a List that Meets a Criterion", "body": "<pre><code>removeFirst p xs = []\n</code></pre>\n\n<p>This always returns the empty list and it matches all arguments. I think you mean this.</p>\n\n<pre><code>removeFirst _ [] = []\n</code></pre>\n"}], "owner": {"reputation": 231, "user_id": 4191647, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kFi8q.jpg?s=128&g=1", "display_name": "Himself12794", "link": "https://stackoverflow.com/users/4191647/himself12794"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 445, "favorite_count": 0, "accepted_answer_id": 28681441, "answer_count": 2, "score": 2, "last_activity_date": 1424785166, "creation_date": 1424718084, "last_edit_date": 1424785166, "question_id": 28681339, "link": "https://stackoverflow.com/questions/28681339/remove-the-first-value-in-a-list-that-meets-a-criterion", "title": "Remove the First Value in a List that Meets a Criterion", "body": "<p>I'm trying to solve this problem. This function takes two parameters. The first is a function that returns a boolean value, and the second is a list of numbers. The function is supposed to remove the first value in the second parameter that returns true when run with the first parameter. \nThere's a second function, which does the same thing, except it removes the last value that satisfies it, instead of the first.\nI'm fairly certain I have the logic down, as I tested it in another language and it worked, my only problem is translating it into Haskell syntax. Here's what I have:</p>\n\n<pre><code>removeFirst :: (t -&gt; Bool) -&gt; [t] -&gt; [t]\nremoveFirst p xs = []\nremoveFirst p xs\n        |   p y = ys \n        |   otherwise = y:removeFirst p ys\n        where\n            y:ys = xs\n\nremoveLast :: (t -&gt; Bool) -&gt; [t] -&gt; [t]\nremoveLast p xs = []\nremoveLast p xs = reverse ( removeFirst p ( reverse xs ) )\n</code></pre>\n\n<p>I ran:</p>\n\n<pre><code>removeFirst even [1..10]\n</code></pre>\n\n<p>But instead of getting [1,3,4,5,6,7,8,9,10] as expected, I get [].\nWhat am I doing wrong?</p>\n"}, {"tags": ["haskell", "applicative", "monoids", "alternative-functor"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 4, "creation_date": 1424721639, "post_id": 28681260, "comment_id": 45657530, "body": "There is <i>nothing</i> deep about <code>Alternative</code>. Like <code>MonadPlus</code>, no one can even agree what its laws are supposed to be, and its most compelling use case is a sort of <i>pun</i>. Do whatever you want with it."}], "answers": [{"comments": [{"owner": {"reputation": 298, "user_id": 1355491, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a2593d170f0414df66cf505226f031e?s=128&d=identicon&r=PG", "display_name": "meiersi", "link": "https://stackoverflow.com/users/1355491/meiersi"}, "edited": false, "score": 0, "creation_date": 1424954044, "post_id": 28714160, "comment_id": 45768079, "body": "Thank you very much for your detailed, well-written answer. I agree that these laws do make sense."}], "tags": [], "owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "is_accepted": true, "score": 7, "last_activity_date": 1424852104, "last_edit_date": 1495542337, "creation_date": 1424852104, "answer_id": 28714160, "question_id": 28681260, "link": "https://stackoverflow.com/questions/28681260/why-is-there-not-alternative-instance-for-control-applicative-const/28714160#28714160", "title": "Why is there not &#39;Alternative&#39; instance for &#39;Control.Applicative.Const&#39;", "body": "<p>I believe there <em>is</em> a deeper reason. While it seems there is no canonical set of rules for <code>Alternative</code>, in order for <code>Alternative</code> to make sense, there definitely ought to be a relationship between <code>Alternative</code> and its <code>Applicative</code> operations (otherwise it'd be just an arbitrary monoid.)</p>\n\n<p><a href=\"https://stackoverflow.com/a/13081604/1333025\">This answer</a> to <a href=\"https://stackoverflow.com/questions/13080606/confused-by-the-meaning-of-the-alternative-type-class-and-its-relationship-to\">Confused by the meaning of the 'Alternative' type class and its relationship to other type classes</a> states these laws</p>\n\n<blockquote>\n  <ol>\n  <li><strong>Right distributivity (of <code>&lt;*&gt;</code>):</strong>&nbsp;&nbsp;<code>(f &lt;|&gt; g) &lt;*&gt; a = (f &lt;*&gt; a) &lt;|&gt; (g &lt;*&gt; a)</code></li>\n  <li><strong>Right absorption (for <code>&lt;*&gt;</code>):</strong>&nbsp;&nbsp;<code>empty &lt;*&gt; a = empty</code></li></li>\n  <li><strong>Left distributivity (of <code>fmap</code>):</strong>&nbsp;&nbsp;<code>f &lt;$&gt; (a &lt;|&gt; b) = (f &lt;$&gt; a) &lt;|&gt; (f &lt;$&gt; b)</code></li>\n  <li><strong>Left absorption (for <code>fmap</code>):</strong>&nbsp;&nbsp;<code>f &lt;$&gt; empty = empty</code></li></li>\n  </ol>\n</blockquote>\n\n<p>which make a lot of sense to me. Roughly speaking, <code>empty</code> and <code>&lt;|&gt;</code> are to <code>pure</code> and <code>&lt;$&gt;</code>/<code>&lt;*&gt;</code> what 0 and + are to 1 and *.</p>\n\n<p>Now if we add instance <code>Monoid m =&gt; Alternative (Const m)</code> that coincides with the one for <code>Monoid</code> / <code>Applicative</code>, the Right- laws don't hold.</p>\n\n<p>For example, 2. fails, because</p>\n\n<pre><code>empty &lt;*&gt; (Const x)\n= Const mempty &lt;*&gt; Const x    -- by the suggested definition of Alternative\n= Const $ mempty `mappend` x  -- by the definition of &lt;*&gt; for COnst\n= Const x                     -- by monoid laws\n</code></pre>\n\n<p>which isn't equal to <code>empty = Const mempty</code>. Similarly, 1. fails, a simple counter-example is setting <code>f = Const (Sum 1); g = Const (Sum 1) ; a = Const (Sum 1)</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://cstheory.stackexchange.com/q/14143/10336\">What are the relations between Alternative, MonadPlus(LeftCatch) and MonadPlus(LeftDistributive)?</a></li>\n<li><a href=\"https://stackoverflow.com/q/13122489/1333025\">What\u2019s an example of a Monad which is an Alternative but not a MonadPlus?</a></li>\n</ul>\n"}], "owner": {"reputation": 298, "user_id": 1355491, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a2593d170f0414df66cf505226f031e?s=128&d=identicon&r=PG", "display_name": "meiersi", "link": "https://stackoverflow.com/users/1355491/meiersi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 444, "favorite_count": 2, "accepted_answer_id": 28714160, "answer_count": 1, "score": 15, "last_activity_date": 1614129565, "creation_date": 1424717815, "last_edit_date": 1614129565, "question_id": 28681260, "link": "https://stackoverflow.com/questions/28681260/why-is-there-not-alternative-instance-for-control-applicative-const", "title": "Why is there not &#39;Alternative&#39; instance for &#39;Control.Applicative.Const&#39;", "body": "<p>There is an instance <code>Monoid a =&gt; Monoid (Const a b)</code> for the <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Control-Applicative.html#t:Const\" rel=\"nofollow\"><code>Const</code></a> functor from <code>Control.Applicative</code>. There is also an instance <code>Monoid m =&gt; Applicative (Const m)</code>. </p>\n\n<p>I would therefore expect that there is also an instance <code>Monoid m =&gt; Alternative (Const m)</code> that coincides with the one for <code>Monoid</code>. Is this just an omission that should be fixed, or is there a deeper reason?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1424711756, "creation_date": 1424711756, "answer_id": 28679426, "question_id": 28679185, "link": "https://stackoverflow.com/questions/28679185/why-cant-i-use-the-type-show-a-something-a/28679426#28679426", "title": "Why can&#39;t I use the type `Show a =&gt; [Something -&gt; a]`?", "body": "<p>All the elements of a list in Haskell must have the same type, so a list containing one <code>Int</code> and one <code>String</code> simply cannot exist. It is possible to get around this in GHC using existential types, but you probably shouldn't (this use of existentials is widely considered an anti-pattern, and it doesn't tend to perform terribly well). Another option would be to switch from a list to a tuple, and use some weird stuff from the <code>lens</code> package to map over both parts. It might even work.</p>\n"}, {"comments": [{"owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 5, "creation_date": 1424716964, "post_id": 28679559, "comment_id": 45654726, "body": "It should be noted that <code>a</code> can&#39;t be <i>any</i> type, it is <i>constrained</i> to types satisfying <code>Show a</code>. In this case, that constraint doesn&#39;t make enough sense to mean anything. But other constraints do; for example, <code>pi :: Floating a =&gt; a</code>. <code>pi</code> can be instantiated to any <code>Floating</code>. Of course, that&#39;s cheating a bit, since the class requires you to define <code>pi</code>. But that&#39;s the idea. The constraints of a polymorphic value can provide sufficient information to construct the requested data for any instance."}, {"owner": {"reputation": 2366, "user_id": 1153719, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/1e99b6d8a41fb3b299e6800c1ed510c2?s=128&d=identicon&r=PG", "display_name": "ARRG", "link": "https://stackoverflow.com/users/1153719/arrg"}, "edited": false, "score": 0, "creation_date": 1424730883, "post_id": 28679559, "comment_id": 45662435, "body": "Thank you. Indeed I wasn&#39;t reading the type signature correctly. It&#39;s still hard not to think of Haskell classes as OO interfaces :)"}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "reply_to_user": {"reputation": 2366, "user_id": 1153719, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/1e99b6d8a41fb3b299e6800c1ed510c2?s=128&d=identicon&r=PG", "display_name": "ARRG", "link": "https://stackoverflow.com/users/1153719/arrg"}, "edited": false, "score": 0, "creation_date": 1424768766, "post_id": 28679559, "comment_id": 45674656, "body": "@ARRG As I say, it seems to be a common misunderstanding. Once you realise that <i>the caller</i> decides, things become clearer. :-)"}], "tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": true, "score": 15, "last_activity_date": 1424712733, "last_edit_date": 1424712733, "creation_date": 1424712173, "answer_id": 28679559, "question_id": 28679185, "link": "https://stackoverflow.com/questions/28679185/why-cant-i-use-the-type-show-a-something-a/28679559#28679559", "title": "Why can&#39;t I use the type `Show a =&gt; [Something -&gt; a]`?", "body": "<p>The type signature doesn't say what you think it says.</p>\n\n<p>This seems to be a common misunderstanding. Consider the function</p>\n\n<pre><code>foo :: Show a =&gt; Rec -&gt; a\n</code></pre>\n\n<p>People frequently seem to think this means that \"<code>foo</code> can return any type that it wants to, so long as that type supports <code>Show</code>\". <em>It doesn't.</em></p>\n\n<p>What it <em>actually</em> means is that <code>foo</code> must be able to return <em>any possible type</em>, because <strong>the caller</strong> gets to choose what the return type should be.</p>\n\n<p>A few moments' thought will reveal that <code>foo</code> actually cannot exist. There is no way to turn a <code>Rec</code> into <em>any possible type that can ever exist</em>. It can't be done.</p>\n\n<p>People often try to do something like <code>Show a =&gt; [a]</code> to mean \"a list of mixed types but they all have <code>Show</code>\". That obviously doesn't work; this type <em>actually</em> means that the list elements can be any type, but they still have to be all the same.</p>\n\n<p>What you're trying to do seems reasonable enough. Unfortunately, I think your first example is about as close as you can get. You <em>could</em> try using tuples and lenses to get around this. You <em>could</em> try using Template Haskell instead. But unless you've got a hell of a lot of fields, it's probably not even worth the effort.</p>\n"}, {"comments": [{"owner": {"reputation": 2366, "user_id": 1153719, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/1e99b6d8a41fb3b299e6800c1ed510c2?s=128&d=identicon&r=PG", "display_name": "ARRG", "link": "https://stackoverflow.com/users/1153719/arrg"}, "edited": false, "score": 0, "creation_date": 1424730983, "post_id": 28680903, "comment_id": 45662483, "body": "Thank you. I&#39;m really intrigued by the relationship between lexical occurences of show and what the compiler is or is not able to do because of it. I guess I&#39;ll have to come back to this once I&#39;m more confortable with the type system in general."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424740017, "post_id": 28680903, "comment_id": 45665598, "body": "That <code>newtype</code> looks unlikely. Doesn&#39;t that need to be <code>data</code>, to hold the dictionary?"}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424748005, "post_id": 28680903, "comment_id": 45667532, "body": "@dfeuer Indeed it does. Although <code>newtype</code> currently doesn&#39;t even support an existential type without a class, either. I remember it was suggested at some point but discarded as not worth supporting. EDIT: Oh <a href=\"https://ghc.haskell.org/trac/ghc/ticket/1965\" rel=\"nofollow noreferrer\">the ticket</a> has been reopened, maybe we&#39;ll see it eventually."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424748389, "post_id": 28680903, "comment_id": 45667619, "body": "@&#216;rjanJohansen, I&#39;ve never been too comfortable with the peculiar mix of purposes of <code>newtype</code>. Aside from magical pattern matching, <code>data Foo a = Foo !a</code> should be the same as <code>newtype Foo a = Foo a</code>, but in fact their runtime representations are different."}], "tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 7, "last_activity_date": 1424716635, "creation_date": 1424716635, "answer_id": 28680903, "question_id": 28679185, "link": "https://stackoverflow.com/questions/28679185/why-cant-i-use-the-type-show-a-something-a/28680903#28680903", "title": "Why can&#39;t I use the type `Show a =&gt; [Something -&gt; a]`?", "body": "<p>The type you actually want is not:</p>\n\n<pre><code>Show a =&gt; [Rec -&gt; a]\n</code></pre>\n\n<p>Any type declaration with unbound type variables has an implicit <code>forall</code>. The above is equivalent to:</p>\n\n<pre><code>forall a. Show a =&gt; [Rec -&gt; a]\n</code></pre>\n\n<p>This isn't what you wan't, because the <code>a</code> must be specialized to a single type for the entire list. (By the caller, to <em>any</em> one type they choose, as MathematicalOrchid points out.) Because you want the <code>a</code> of each element in the list to be able to be instantiated differently... what you are actually seeking is an existential type.</p>\n\n<pre><code>[exists a. Show a =&gt; Rec -&gt; a]\n</code></pre>\n\n<p>You are wishing for a form of subtyping that Haskell does not support very well. The above syntax is not supported at all by GHC. You can use newtypes to sort of accomplish this:</p>\n\n<pre><code>{-# LANGUAGE ExistentialQuantification #-}\nnewtype Showy = forall a. Show a =&gt; Showy a\n\nfields :: [Rec -&gt; Showy]\nfields = [Showy . recNumber, Showy . recName]\n</code></pre>\n\n<p>But unfortunatley, that is just as tedious as converting directly to strings, isn't it?</p>\n\n<hr>\n\n<p>I don't believe that lens is capable of getting around this particular weakness of the Haskell type system:</p>\n\n<pre><code>recToString :: Rec -&gt; String\nrecToString r = intercalate \"\\t\" $ toListOf (each . to fieldShown) fields\n  where fields = (recNumber, recName)\n        fieldShown f = show (f r)\n\n-- error: Couldn't match type Int with [Char]\n</code></pre>\n\n<hr>\n\n<p>Suppose the fields <em>do</em> have the same type:</p>\n\n<pre><code>fields = [recNumber, recNumber]\n</code></pre>\n\n<p>Then it works, and Haskell figures out which show function instance to use at compile time; it doesn't have to look it up dynamically.</p>\n\n<p>If you manually write out <code>show</code> each time, as in your original example, then Haskell can determine the correct instance for each call to <code>show</code> at compile time.</p>\n\n<p>As for existentials... it depends on implementation, but presumably, the compiler cannot determine which instance to use statically, so a dynamic lookup will be used instead.</p>\n"}, {"tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": false, "score": 4, "last_activity_date": 1424749839, "creation_date": 1424749839, "answer_id": 28687845, "question_id": 28679185, "link": "https://stackoverflow.com/questions/28679185/why-cant-i-use-the-type-show-a-something-a/28687845#28687845", "title": "Why can&#39;t I use the type `Show a =&gt; [Something -&gt; a]`?", "body": "<p>I'd like to suggest something very simple instead:</p>\n\n<pre><code>recToString r = intercalate \"\\t\" [s recNumber, s recName]\n  where s f = show (f r)\n</code></pre>\n"}], "owner": {"reputation": 2366, "user_id": 1153719, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/1e99b6d8a41fb3b299e6800c1ed510c2?s=128&d=identicon&r=PG", "display_name": "ARRG", "link": "https://stackoverflow.com/users/1153719/arrg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "accepted_answer_id": 28679559, "answer_count": 4, "score": 5, "last_activity_date": 1424749839, "creation_date": 1424711020, "question_id": 28679185, "link": "https://stackoverflow.com/questions/28679185/why-cant-i-use-the-type-show-a-something-a", "title": "Why can&#39;t I use the type `Show a =&gt; [Something -&gt; a]`?", "body": "<p>I have a record type say </p>\n\n<pre><code>data Rec {\n    recNumber :: Int\n  , recName :: String\n  -- more fields of various types\n}\n</code></pre>\n\n<p>And I want to write a <code>toString</code> function for Rec : </p>\n\n<pre><code>recToString :: Rec -&gt; String\nrecToString r = intercalate \"\\t\" $ map ($ r) fields\n  where fields = [show . recNumber, show . recName]\n</code></pre>\n\n<p>This works. <code>fields</code> has type <code>[Rec -&gt; String]</code>. But I'm lazy and I would prefer writing</p>\n\n<pre><code>recToString r = intercalate \"\\t\" $ map (\\f -&gt; show $ f r) fields\n  where fields = [recNumber, recName]\n</code></pre>\n\n<p>But this doesn't work. Intuitively I would say <code>fields</code> has type <code>Show a =&gt; [Rec -&gt; a]</code> and this should be ok. But Haskell doesn't allow it.</p>\n\n<p>I'd like to understand what is going on here. Would I be right if I said that in the first case I get a list of functions such that the 2 instances of show are actually not the same function, but Haskell is able to determine which is which at compile time (which is why it's ok).</p>\n\n<pre><code>[show . recNumber, show . recName]\n   ^-- This is show in instance Show Number\n                     ^-- This is show in instance Show String\n</code></pre>\n\n<p>Whereas in the second case, I only have one literal use of <code>show</code> in the code, and that would have to refer to multiple instances, not determined at compile time ?</p>\n\n<pre><code>map (\\f -&gt; show $ f r) fields\n            ^-- Must be both instances at the same time \n</code></pre>\n\n<p>Can someone help me understand this ? And also are there workarounds or type system expansions that allow this ?</p>\n"}, {"tags": ["haskell", "lazy-evaluation"], "answers": [{"comments": [{"owner": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424693935, "post_id": 28673655, "comment_id": 45640548, "body": "If I flip the order, the same thing happens though. <code>main = do trace &quot;debug message 2&quot; (return ()); return (trace &quot;debug message 1&quot; ())</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424693978, "post_id": 28673655, "comment_id": 45640577, "body": "@CMCDragonkai: if I run this in <code>ghci</code>, for the second, it prints the debug message. The reason that it is not printed in this context is because it is placed after the return statement. If you however perform <code>do trace &quot;debug message 2&quot; (return ())</code>, it will print the debug message."}, {"owner": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424694015, "post_id": 28673655, "comment_id": 45640612, "body": "Run this with <code>runhaskell</code>."}, {"owner": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424694072, "post_id": 28673655, "comment_id": 45640641, "body": "To be clear, when I run it with <code>runhaskell</code> no matter the order of the statements in the main, the &quot;debug message 1&quot; is never printed."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424694179, "post_id": 28673655, "comment_id": 45640700, "body": "@CMCDragonkai: well <code>ghci</code> is more or less the <code>runhaskell</code> equivalent, but interactive. As you can see, the second debug message is printed. But evidently, you must not place it after a <code>return</code> statement."}, {"owner": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424694463, "post_id": 28673655, "comment_id": 45640870, "body": "Ok so what you&#39;re saying is that within the do context, the runtime will evaluate any function in order to get to a possible return. That&#39;s why it executes the trace function. But if I have a return just by itself, not assigned anything, it doesn&#39;t bother trying to execute the expression passed into return? But won&#39;t the runtime want to know what the end result of the main function is? And the last value in the main function is the expression inside the return that hasn&#39;t been evaluated! Maybe we can try desugaring the whole thing to make it clearer?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424694470, "post_id": 28673655, "comment_id": 45640873, "body": "@CMCDragonkai: tried it with <code>runhaskell</code>: as you can see, the output is the same."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424694527, "post_id": 28673655, "comment_id": 45640903, "body": "@CMCDragonkai: well only if you actually <b>do</b> something with the output. If you would write an <code>IO (Bool)</code> and then fetch the bool, it will execute the trace at fetch time."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424694944, "post_id": 28673655, "comment_id": 45641124, "body": "@CMCDragonkai: did some additional tests which seem to proof that it performs all tasks until the <code>return</code> is reached. The call-tree of the <code>return</code> is not evaluated unless you process that value."}, {"owner": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424695022, "post_id": 28673655, "comment_id": 45641177, "body": "Ok I get it, any expression that is returned has to be used, or else it won&#39;t be evaluated. And by used, that could mean putting it as a parameter to another function like <code>print</code>. Does this mean <code>return</code> is kind of special, since it seems to have a different semantic to say just using the trace function, because the trace function gets evaluated automatically?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424695175, "post_id": 28673655, "comment_id": 45641283, "body": "@CMCDragonkai: no the <code>trace</code> is not special: a trace is only evaluated if necessary. <code>trace &quot;foo&quot;</code> is necessary to reach the <code>return</code> statement (whether we use the value or not), but <code>trace &quot;hello&quot;</code> only needs to be executed while evaluating the the call-tree of the <code>return</code> statement. So haskell needs to reach <code>return</code> in order to move to the next line (<code>return ()</code> or <code>print b</code>), but doesn&#39;t evaluate the <code>return</code> unless you need it (for instance to print it)."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1424694777, "last_edit_date": 1424694777, "creation_date": 1424693891, "answer_id": 28673655, "question_id": 28673546, "link": "https://stackoverflow.com/questions/28673546/lazy-evaluation-in-haskells-do-notation-using-the-trace-function/28673655#28673655", "title": "Lazy evaluation in Haskell&#39;s do notation using the trace function", "body": "<p>My guess would be because of \"lazy evaluation\".</p>\n\n<p>Note that you don't return anything. In other words, the \"return\" is not been queried yet (well there is no return), nor is it useful. Inside the <code>return</code> statement, you are not in a \"monadic\" context. So there is no reason to evaluate it, you simply pass the \"call-tree\" as the result.</p>\n\n<p>In other words, it remains on the \"<em>call-tree</em>\" until someone wants to pick it up.</p>\n\n<p>For the second case it is trivial that the <code>trace</code> will be called. The monad is executed until it reaches a \"<code>return</code>\", and before that <code>return</code> is reached, all necessary actions are taken, including executing debug info if needed.</p>\n\n<p>Example in <code>ghci</code>:</p>\n\n<pre><code>$ ghci\nGHCi, version 7.6.3: http://www.haskell.org/ghc/  :? for help\nLoading package ghc-prim ... linking ... done.\nLoading package integer-gmp ... linking ... done.\nLoading package base ... linking ... done.\nPrelude&gt; import Debug.Trace\nPrelude Debug.Trace&gt; do return (trace \"debug message 1\" ())\nPrelude Debug.Trace&gt; do trace \"debug message 2\" (return ())\ndebug message 2\n</code></pre>\n\n<p>Same for <code>runhaskell</code>. If you write these two programs:</p>\n\n<p><strong><code>program1.hs</code></strong>:</p>\n\n<pre><code>import Debug.Trace\n\nmain = do return (trace \"debug message 1\" ())\n</code></pre>\n\n<p><strong><code>program2.hs</code></strong>:</p>\n\n<pre><code>import Debug.Trace\n\nmain = do\n    trace \"debug message 2\" (return ())\n</code></pre>\n\n<p>Then the console reads:</p>\n\n<pre><code>$ runhaskell program1.hs\n$ runhaskell program2.hs\ndebug message 2\n$ \n</code></pre>\n\n<p>If you however write an <code>IO Bool</code> (thus with return value) and you later use that value, the trace will be executed, for instance:</p>\n\n<pre><code>testFun :: IO Bool\ntestFun = do\n    trace \"foo\" $ return $ trace \"Hello\" True\n\nmain :: IO ()\nmain = do\n    b &lt;- testFun\n    print b\n</code></pre>\n\n<p>This will result in:</p>\n\n<pre><code>$ runhaskell program3.hs\nfoo\nHello\nTrue\n$ \n</code></pre>\n\n<p>If you however omit the <code>print b</code> and put <code>return ()</code> instead, Haskell has no interest in the what is returned and thus doesn't print the trace:</p>\n\n<pre><code>testFun :: IO Bool\ntestFun = do\n    trace \"foo\" $ return $ trace \"Hello\" True\n\nmain :: IO ()\nmain = do\n    b &lt;- testFun\n    return ()   --we ran `testFun` but are not interested in the result\n</code></pre>\n\n<p>The result is:</p>\n\n<pre><code>$ runhaskell program4.hs\nfoo\n$ \n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 2, "creation_date": 1424704763, "post_id": 28676654, "comment_id": 45647159, "body": "You could add a reference to <a href=\"https://www.haskell.org/onlinereport/modules.html\" rel=\"nofollow noreferrer\">haskell.org/onlinereport/modules.html</a> where it says \u201cWhen the program is executed, the computation main is performed, and its result (of type t) is discarded.\u201d"}, {"owner": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424747551, "post_id": 28676654, "comment_id": 45667428, "body": "Nice answer. So what is the type of main if it isn&#39;t (implied by your conclusion) IO ()?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1424748151, "post_id": 28676654, "comment_id": 45667566, "body": "@CMCDragonkai, it can be <code>IO a</code> for any <code>a</code>. Whatever it is, that result is never demanded."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 7, "last_activity_date": 1424704313, "last_edit_date": 1424704313, "creation_date": 1424703629, "answer_id": 28676654, "question_id": 28673546, "link": "https://stackoverflow.com/questions/28673546/lazy-evaluation-in-haskells-do-notation-using-the-trace-function/28676654#28676654", "title": "Lazy evaluation in Haskell&#39;s do notation using the trace function", "body": "<p>There is no special magic about <code>do</code> notation.</p>\n\n<pre><code>main = do\n    return (trace \"debug message 1\" ())\n    trace \"debug message 2\" (return ())\n</code></pre>\n\n<p>is just the same as</p>\n\n<pre><code>main = return (trace \"debug message 1\" ()) &gt;&gt;=\n        \\_ -&gt; trace \"debug message 2\" (return ())\n</code></pre>\n\n<p>By one of the monad identity laws, <code>return a &gt;&gt;= f = f a</code>, so</p>\n\n<pre><code>main = (\\_ -&gt; trace \"debug message 2\" (return ()))\n         (trace \"debug message 1\" ())\n</code></pre>\n\n<p>The function ignores its argument, so the argument is not evaluated; the expression reduces to</p>\n\n<pre><code>main = trace \"debug message 2\" (return ())\n</code></pre>\n\n<p>The first message is entirely gone, and you can see that the remaining <code>trace</code> is now the outermost application that must be reduced to evaluate <code>main</code>, so this message will be printed.</p>\n\n<p>When you flipped the order, you got</p>\n\n<pre><code>main = do\n    trace \"debug message 2\" (return ())\n    return (trace \"debug message 1\" ())\n</code></pre>\n\n<p>This is the same as</p>\n\n<pre><code>main = trace \"debug message 2\" (return ()) &gt;&gt;=\n         (\\_ -&gt; return (trace \"debug message 1\" ()))\n</code></pre>\n\n<p>The situation here is a bit more complicated. The first <code>trace</code> (message 2) is forced, because <code>&gt;&gt;=</code> for <code>IO</code> is strict in its left operand. Then <code>return ()</code> is executed, doing nothing. Its value is ignored, and the final action, <code>return (trace \"debug message 1\" ())</code> is executed. This also does nothing (<code>return</code> <em>never</em> does anything interesting). Since the end of the <code>main</code> action is the end of the program, this return value is never inspected, and thus never forced, so it is not evaluated. Some people think that <code>main</code> should be required to have the type <code>IO ()</code> to emphasize that its return value is never used. (I believe they are wrong about this, because programs that run forever should really have type <code>IO Void</code> or <code>IO a</code>, but that's a nitpick.)</p>\n"}], "owner": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 919, "favorite_count": 0, "accepted_answer_id": 28673655, "answer_count": 2, "score": 3, "last_activity_date": 1424704313, "creation_date": 1424693518, "last_edit_date": 1424694155, "question_id": 28673546, "link": "https://stackoverflow.com/questions/28673546/lazy-evaluation-in-haskells-do-notation-using-the-trace-function", "title": "Lazy evaluation in Haskell&#39;s do notation using the trace function", "body": "<p>I want to know why this \"debug message 1\" doesn't get printed in this snippet:</p>\n\n<pre><code>import Debug.Trace\n\nmain = do\n    return (trace \"debug message 1\" ())\n    trace \"debug message 2\" (return ())\n</code></pre>\n\n<p>The second \"debug message 2\" is printed out, but not \"debug message 1\". It seems that both expressions are the same.</p>\n\n<p>I tried binding the \"debug message 1\" to a variable, and then using that variable in another place, it did in fact trigger the evaluation and print \"debug message 1\", but I still don't understand why this happens.</p>\n\n<p>If I flip the order of the statements, it is still the same result:</p>\n\n<pre><code>import Debug.Trace\n\nmain = do\n    trace \"debug message 2\" (return ())\n    return (trace \"debug message 1\" ())\n</code></pre>\n\n<p>\"debug message 1\" is never printed (using runhaskell).</p>\n"}, {"tags": ["haskell", "functional-programming", "pattern-matching"], "comments": [{"owner": {"reputation": 16267, "user_id": 1346276, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Tu8Re.jpg?s=128&g=1", "display_name": "phipsgabler", "link": "https://stackoverflow.com/users/1346276/phipsgabler"}, "edited": false, "score": 5, "creation_date": 1424679321, "post_id": 28667167, "comment_id": 45632787, "body": "Pattern matching is a form of <a href=\"https://en.wikipedia.org/wiki/Unification_%28computer_science%29\" rel=\"nofollow noreferrer\">unification</a>, which in general is more complicated; however, in Haskell, we only have linear patterns and matching only works &quot;in one direction&quot;, so there&#39;s much less complexity involved."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1424684273, "post_id": 28667167, "comment_id": 45635174, "body": "Pattern matching never &quot;inverts&quot; functions like multiplication, addition, etc. It works on the term algebra (a.k.a. free algebra, initial algebra), wherein we have <i>syntactic</i> terms made by constructors, only, and patterns built from constructors and (linear) variables. So we need to solve equations such as <code>L x (K y) = L [2] (K (L 3))</code> which is done very simply in linear time wrt the size of the pattern. Essentially, to perform this you only need to examine the tip of the term which is being matched."}], "answers": [{"tags": [], "owner": {"reputation": 14609, "user_id": 667648, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/mTpbt.jpg?s=128&g=1", "display_name": "Dair", "link": "https://stackoverflow.com/users/667648/dair"}, "is_accepted": false, "score": 7, "last_activity_date": 1424668541, "creation_date": 1424668541, "answer_id": 28667294, "question_id": 28667167, "link": "https://stackoverflow.com/questions/28667167/how-do-you-identify-the-complexity-of-a-pattern-matching-expression-in-haskell/28667294#28667294", "title": "How do you identify the complexity of a pattern matching expression in Haskell?", "body": "<p>I may be misunderstanding what you are saying but there is an algorithm for pattern matching. From the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-580003.17\" rel=\"noreferrer\">Language Report</a>:</p>\n\n<blockquote>\n  <p><strong>3.17.2 Informal Semantics of Pattern Matching</strong></p>\n  \n  <p>Patterns are matched against values. Attempting to match a pattern can\n  have one of three results: it may fail; it may succeed, returning a\n  binding for each variable in the pattern; or it may diverge (i.e.\n  return \u22a5). Pattern matching proceeds from left to right, and outside\n  to inside, according to the following rules:</p>\n  \n  <ol>\n  <li>Matching the pattern var against a value v always succeeds and binds\n  var to v. </li>\n  <li><p>Matching the pattern ~apat against a value v always\n  succeeds. The free variables in apat are bound to the appropriate\n  values if matching apat against v would otherwise succeed, and to \u22a5 if\n  matching apat against v fails or diverges. (Binding does not imply\n  evaluation.) Operationally, this means that no matching is done on a\n  ~apat pattern until one of the variables in apat is used. At that\n  point the entire pattern is matched against the value, and if the\n  match fails or diverges, so does the overall computation.</p></li>\n  <li><p>Matching the wildcard pattern _ against any value always succeeds, and\n  no binding is done. </p></li>\n  <li><p>Matching the pattern con pat against a value,\n  where con is a constructor defined by newtype, depends on the value:\n  If the value is of the form con v, then pat is matched against v. If\n  the value is \u22a5, then pat is matched against \u22a5. That is, constructors\n  associated with newtype serve only to change the type of a value.</p></li>\n  <li><p>Matching the pattern con pat1 \u2026 patn against a value, where con is a\n  constructor defined by data, depends on the value: If the value is of\n  the form con v1 \u2026 vn, sub-patterns are matched left-to-right against\n  the components of the data value; if all matches succeed, the overall\n  match succeeds; the first to fail or diverge causes the overall match\n  to fail or diverge, respectively. If the value is of the form con\u2032 v1\n  \u2026 vm, where con is a different constructor to con\u2032, the match fails.\n  If the value is \u22a5, the match diverges.</p></li>\n  <li>Matching against a constructor\n  using labeled fields is the same as matching ordinary constructor\n  patterns except that the fields are matched in the order they are\n  named in the field list. All fields listed must be declared by the\n  constructor; fields may not be named more than once. Fields not named\n  by the pattern are ignored (matched against _). </li>\n  <li><p>Matching a numeric,\n  character, or string literal pattern k against a value v succeeds if v\n  ==  k, where == is overloaded based on the type of the pattern. The match diverges if this test diverges. The interpretation of numeric\n  literals is exactly as described in Section 3.2 ; that is, the\n  overloaded function fromInteger or fromRational is applied to an\n  Integer or Rational literal (resp) to convert it to the appropriate\n  type.</p></li>\n  <li><p>Matching an as-pattern var@apat against a value v is the result of\n  matching apat against v, augmented with the binding of var to v. If\n  the match of apat against v fails or diverges, then so does the\n  overall match.</p></li>\n  </ol>\n</blockquote>\n\n<p>In the document I linked to, there is also a more formal description mentioned later.</p>\n"}, {"tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": true, "score": 7, "last_activity_date": 1424696997, "creation_date": 1424696997, "answer_id": 28674591, "question_id": 28667167, "link": "https://stackoverflow.com/questions/28667167/how-do-you-identify-the-complexity-of-a-pattern-matching-expression-in-haskell/28674591#28674591", "title": "How do you identify the complexity of a pattern matching expression in Haskell?", "body": "<p>You seem to be confused about what pattern matching actually does.</p>\n\n<p>The machine stores all data in a fixed representation. Pattern matching merely allows you to query what that representation is.</p>\n\n<p>You cannot use pattern matching to (for example) determine whether two arbitrary expressions are equivalent. That would require solving the Halting Problem, which is impossible. You can <em>only</em> pattern match on data, not expressions.</p>\n\n<p>For example, pattern matching can tell you whether a list is empty or non-empty. It can tell you whether a list contains the numbers 1, 2, 3, in that order. It <em>cannot</em> tell you whether <code>sort . map fst</code> produces the same result as <code>map fst . sort</code>, for example.</p>\n\n<p>So there is no problem of \"guaranteeing a unique representation\"; the computer already <em>does</em> that, whether you pattern match it or not. Pattern matching is O(n) time in the size of the pattern. (Ignoring any lazy evaluation you might trigger, which is a property of the code that produces the data, not the code that consumes it.)</p>\n"}], "owner": {"reputation": 54577, "user_id": 1339987, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/76aa5ba88e0d95b6480113239fe50008?s=128&d=identicon&r=PG", "display_name": "djechlin", "link": "https://stackoverflow.com/users/1339987/djechlin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 259, "favorite_count": 0, "accepted_answer_id": 28674591, "answer_count": 2, "score": 2, "last_activity_date": 1424696997, "creation_date": 1424667599, "question_id": 28667167, "link": "https://stackoverflow.com/questions/28667167/how-do-you-identify-the-complexity-of-a-pattern-matching-expression-in-haskell", "title": "How do you identify the complexity of a pattern matching expression in Haskell?", "body": "<p>Pattern matching is <em>weird</em>. It involves the deceptively simple mathematical problem of finding a representation for a thing.</p>\n\n<p>For example, for a given integer b, every integer a may be represented in the form a = bq + r, with 0 &lt;= r &lt; b, uniquely. To find the q and r requires the division algorithm. The key word being, \"algorithm.\"</p>\n\n<p>So when you perform a pattern matching express in Haskell, like representing a tuple as (a,b), is an algorithm running behind the scenes?</p>\n\n<p>Must the algorithm always be simple, i.e. O(1) or documented somewhere somehow at least?</p>\n\n<p>How do you guarantee a unique lift to a representation?</p>\n"}, {"tags": ["haskell", "parsec"], "comments": [{"owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1424666681, "post_id": 28666983, "comment_id": 45628692, "body": "Quick guess, but shouldn&#39;t you be using <code>(&lt;*&gt;)</code> after <code>word</code> in  your <code>binding</code> definition? I.e: <code>binding = Binding &lt;$&gt; word &lt;*&gt; (spaces *&gt; string &quot;is&quot; *&gt; spaces) *&gt; expr</code>"}, {"owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1424668250, "post_id": 28666983, "comment_id": 45629062, "body": "Does this work? Perhaps you should provide more of your code. <a href=\"http://lpaste.net/121008\" rel=\"nofollow noreferrer\">lpaste.net/121008</a>"}, {"owner": {"reputation": 275, "user_id": 1953221, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2949d31fc450441a1fa42423eb931ac0?s=128&d=identicon&r=PG", "display_name": "user1953221", "link": "https://stackoverflow.com/users/1953221/user1953221"}, "reply_to_user": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 0, "creation_date": 1424746962, "post_id": 28666983, "comment_id": 45667300, "body": "You spotted that quickly. :) Thanks for the help!"}], "answers": [{"comments": [{"owner": {"reputation": 117024, "user_id": 200291, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/399cacf55045372a29f1f844d12ee777?s=128&d=identicon&r=PG", "display_name": "icktoofay", "link": "https://stackoverflow.com/users/200291/icktoofay"}, "edited": false, "score": 1, "creation_date": 1424669410, "post_id": 28667372, "comment_id": 45629328, "body": "That looks right (although you could remove the parentheses with <code>Binding &lt;$&gt; word &lt;* spaces &lt;* string &quot;is&quot; &lt;* spaces &lt;*&gt; expr</code>), but I think adding a little explanation of what was wrong with the attempted solution and why this one works would make this a more valuable answer."}, {"owner": {"reputation": 275, "user_id": 1953221, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2949d31fc450441a1fa42423eb931ac0?s=128&d=identicon&r=PG", "display_name": "user1953221", "link": "https://stackoverflow.com/users/1953221/user1953221"}, "edited": false, "score": 0, "creation_date": 1424746888, "post_id": 28667372, "comment_id": 45667283, "body": "Interesting alternative solution! It&#39;s given me new understanding of how these operators work."}], "tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 6, "last_activity_date": 1424673293, "last_edit_date": 1424673293, "creation_date": 1424669075, "answer_id": 28667372, "question_id": 28666983, "link": "https://stackoverflow.com/questions/28666983/problems-with-applicative-style-parsec/28667372#28667372", "title": "Problems with Applicative-style Parsec", "body": "<p>@danem is right, try:</p>\n\n<pre><code>binding :: Parser Expr\nbinding = Binding &lt;$&gt; word &lt;*&gt; (spaces *&gt; string \"is\" *&gt; spaces *&gt; expr)\n</code></pre>\n\n<p>Full source: <a href=\"http://lpaste.net/121011\">http://lpaste.net/121011</a></p>\n\n<p>Your original definition is parsed this way:</p>\n\n<pre><code>binding = ((Binding &lt;$&gt; word) &lt;* (spaces *&gt; string \"is\" *&gt; spaces)) *&gt; expr\n</code></pre>\n\n<p>i.e. it has the form <code>something *&gt; expr</code>, and so the returned value is determined solely by the last <code>expr</code>. The lhs and <code>is</code> token are parsed but then discarded.</p>\n\n<p>Here is how the sub-expressions type check:</p>\n\n<pre><code>Binding                     :: String -&gt; Expr -&gt; Expr\n(Binding &lt;$&gt; word)          :: Parser (Expr -&gt; Expr)\n(Binding &lt;$&gt; word) &lt;* (...) :: Parser (Expr -&gt; Expr)\n</code></pre>\n\n<p>So we see that everything type checks due to currying and the fact that we are discarding the result of <code>something</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 275, "user_id": 1953221, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2949d31fc450441a1fa42423eb931ac0?s=128&d=identicon&r=PG", "display_name": "user1953221", "link": "https://stackoverflow.com/users/1953221/user1953221"}, "edited": false, "score": 0, "creation_date": 1424746934, "post_id": 28667724, "comment_id": 45667294, "body": "Thanks for the explanation!"}], "tags": [], "owner": {"reputation": 1958, "user_id": 939108, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/055cba8d3eb565a817f6f7f20f936814?s=128&d=identicon&r=PG", "display_name": "Hjulle", "link": "https://stackoverflow.com/users/939108/hjulle"}, "is_accepted": true, "score": 10, "last_activity_date": 1424671377, "creation_date": 1424671377, "answer_id": 28667724, "question_id": 28666983, "link": "https://stackoverflow.com/questions/28666983/problems-with-applicative-style-parsec/28667724#28667724", "title": "Problems with Applicative-style Parsec", "body": "<p>Your problem is that <code>&lt;$&gt;</code> and <code>&lt;*&gt;</code> etc. are left associative. This means that your line:</p>\n\n<pre><code>binding = Binding &lt;$&gt; word &lt;* (spaces *&gt; string \"is\" *&gt; spaces) *&gt; expr\n</code></pre>\n\n<p>will be interpreted as</p>\n\n<pre><code>binding = (Binding &lt;$&gt; word &lt;* (spaces *&gt; string \"is\" *&gt; spaces)) *&gt; expr\n</code></pre>\n\n<p>This means that it will parse and then ignore everything before the last expr. As @icktoofay said, you can write the intended version as:</p>\n\n<pre><code>binding = Binding &lt;$&gt; word &lt;* spaces &lt;* string \"is\" &lt;* spaces &lt;*&gt; expr\n</code></pre>\n\n<p>and not need any parenthesis at all, because of the left associativity.</p>\n"}], "owner": {"reputation": 275, "user_id": 1953221, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2949d31fc450441a1fa42423eb931ac0?s=128&d=identicon&r=PG", "display_name": "user1953221", "link": "https://stackoverflow.com/users/1953221/user1953221"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 28667724, "answer_count": 2, "score": 2, "last_activity_date": 1424673293, "creation_date": 1424666280, "question_id": 28666983, "link": "https://stackoverflow.com/questions/28666983/problems-with-applicative-style-parsec", "title": "Problems with Applicative-style Parsec", "body": "<p>I have the following ADT:</p>\n\n<pre><code>type Program = [Expr]\ndata Expr =\n    Num Int\n    | Bool Bool\n    | Binding String Expr\n    deriving (Show)\n</code></pre>\n\n<p>Here's a parser for variable-binding expressions, of the form <code>lhs is rhs</code>.</p>\n\n<pre><code>binding :: Parser Expr\nbinding = do\n    lhs &lt;- word\n    spaces\n    string \"is\"\n    spaces\n    rhs &lt;- expr\n    return $ Binding lhs rhs\n</code></pre>\n\n<p>It works fine, but when I try to convert it into applicative style, it gives the wrong result.</p>\n\n<pre><code>binding :: Parser Expr\nbinding = Binding &lt;$&gt; word &lt;* (spaces *&gt; string \"is\" *&gt; spaces) *&gt; expr\n</code></pre>\n\n<p>Replacing <code>*&gt;</code> with <code>&gt;&gt;</code> in the parenthesised portion didn't work either. What's the difference between these two implementations? Is there a combinator for composing two parsers and ignoring the result of both?</p>\n\n<p>Trying to debug with <code>Debug.trace</code> didn't work either... Nothing was printed.</p>\n\n<pre><code>binding :: Parser Expr\nbinding = (\\x y -&gt; trace (show (x, y)) (Binding x y)) &lt;$&gt; word &lt;* (spaces *&gt; string \"is\" *&gt; spaces) *&gt; expr\n</code></pre>\n\n<p>The rest of the parser, for context:</p>\n\n<pre><code>word :: Parser String\nword = many1 letter\n\nexpr :: Parser Expr\nexpr = binding &lt;|&gt; atom\n\nprogram :: Parser Program\nprogram = do\n    spaces\n    result &lt;- many (expr &lt;* spaces)\n    return result\n</code></pre>\n"}, {"tags": ["haskell", "emacs"], "comments": [{"owner": {"reputation": 9212, "user_id": 262727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/503f2737e5df22b2bf7727e4b401a1dc?s=128&d=identicon&r=PG", "display_name": "li.davidm", "link": "https://stackoverflow.com/users/262727/li-davidm"}, "edited": false, "score": 1, "creation_date": 1424663044, "post_id": 28666587, "comment_id": 45627866, "body": "Looks like flycheck or something similar...is there a tooltip that appears when you hover over those lines?"}, {"owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "reply_to_user": {"reputation": 9212, "user_id": 262727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/503f2737e5df22b2bf7727e4b401a1dc?s=128&d=identicon&r=PG", "display_name": "li.davidm", "link": "https://stackoverflow.com/users/262727/li-davidm"}, "edited": false, "score": 0, "creation_date": 1424663175, "post_id": 28666587, "comment_id": 45627884, "body": "@li.davidm: I see nothing with click, roll over or anything."}, {"owner": {"reputation": 9212, "user_id": 262727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/503f2737e5df22b2bf7727e4b401a1dc?s=128&d=identicon&r=PG", "display_name": "li.davidm", "link": "https://stackoverflow.com/users/262727/li-davidm"}, "edited": false, "score": 1, "creation_date": 1424663369, "post_id": 28666587, "comment_id": 45627922, "body": "@proseek Are you sure? When I hover I get &quot;Top-level binding with no type signature: ...&quot;, but this is from flycheck. Do you know if you have flycheck or something running? (What minor mode is providing that <code>0:2</code> in the mode line?)"}, {"owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "reply_to_user": {"reputation": 9212, "user_id": 262727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/503f2737e5df22b2bf7727e4b401a1dc?s=128&d=identicon&r=PG", "display_name": "li.davidm", "link": "https://stackoverflow.com/users/262727/li-davidm"}, "edited": false, "score": 0, "creation_date": 1424663873, "post_id": 28666587, "comment_id": 45628032, "body": "@li.davidm: I got it. Thanks."}], "answers": [{"tags": [], "owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "is_accepted": true, "score": 4, "last_activity_date": 1424663858, "creation_date": 1424663858, "answer_id": 28666706, "question_id": 28666587, "link": "https://stackoverflow.com/questions/28666587/the-marks-in-emacs-haskell-and-ghc-mode/28666706#28666706", "title": "The ? marks in emacs/haskell and ghc mode", "body": "<p>I installed <code>flycheck-haskell</code> package, and then started the <code>flycheck mode</code>.\nNow I see the help comment. </p>\n\n<p><img src=\"https://i.stack.imgur.com/0zpUw.png\" alt=\"enter image description here\"></p>\n"}], "owner": {"reputation": 154069, "user_id": 260127, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/74758c702067a3490094451e475e28c5?s=128&d=identicon&r=PG", "display_name": "prosseek", "link": "https://stackoverflow.com/users/260127/prosseek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 28666706, "answer_count": 1, "score": 4, "last_activity_date": 1424663858, "creation_date": 1424662894, "last_edit_date": 1495540616, "question_id": 28666587, "link": "https://stackoverflow.com/questions/28666587/the-marks-in-emacs-haskell-and-ghc-mode", "title": "The ? marks in emacs/haskell and ghc mode", "body": "<p>Following the instructions in this post: <a href=\"https://stackoverflow.com/questions/26603649/haskell-repl-in-emacs\">haskell repl in emacs</a>, I could run haskell and ghc mode in emacs.</p>\n\n<p>The issue is that I have ? marks, and I know it says something is wrong, but I don't know how to check why I get the marks (and how to improve my code from the hints).  How to get the information what is the problem with my code? </p>\n\n<p><img src=\"https://i.stack.imgur.com/cy5At.png\" alt=\"enter image description here\"></p>\n"}, {"tags": ["haskell", "types", "instance"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424670785, "post_id": 28666435, "comment_id": 45629694, "body": "Watch out! The kilogram is a unit of mass, not weight. The SI (derived) unit of weight is the Newton, equal to 1 kg m/s^2."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1424683589, "post_id": 28666435, "comment_id": 45634802, "body": "Are you going to allow adding Kg and Lb together? Otherwise, consider using phantom types to statically guarantee this is not going to happen."}], "answers": [{"comments": [{"owner": {"reputation": 2567, "user_id": 3780203, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b3f3f9ab585dc56fa27e203ce4eb27fd?s=128&d=identicon&r=PG&f=1", "display_name": "ephrion", "link": "https://stackoverflow.com/users/3780203/ephrion"}, "edited": false, "score": 0, "creation_date": 1424662305, "post_id": 28666486, "comment_id": 45627706, "body": "Perfect, thanks! I&#39;ve got a <code>convert</code> function, so I should be able to do something like: <code>Wt x a + Wt y b | a == b = Wt (x + y) a otherwise = Wt x a + (convert (Wt y b))</code> right?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 2567, "user_id": 3780203, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b3f3f9ab585dc56fa27e203ce4eb27fd?s=128&d=identicon&r=PG&f=1", "display_name": "ephrion", "link": "https://stackoverflow.com/users/3780203/ephrion"}, "edited": false, "score": 1, "creation_date": 1424662493, "post_id": 28666486, "comment_id": 45627736, "body": "That seems like it should work. Just don&#39;t forget that the <code>otherwise</code> clause requires a newline and another vertical bar."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 5, "last_activity_date": 1424661965, "creation_date": 1424661965, "answer_id": 28666486, "question_id": 28666435, "link": "https://stackoverflow.com/questions/28666435/haskell-custom-data-type-instance-num-and-redundancy/28666486#28666486", "title": "Haskell custom data type, instance Num, and redundancy", "body": "<p>You can use a guard. The following code is an error, as I'm sure you've noticed:</p>\n\n<pre><code>instance Num Weight where\n    Wt x a + Wt y a = Wt (x + y) a\n    -- ...\n</code></pre>\n\n<p>But this is fine:</p>\n\n<pre><code>instance Num Weight where\n    Wt x a + Wt y b | a == b = Wt (x + y) a\n    -- ...\n</code></pre>\n\n<p>Just remember that if someone tries to add kilograms to pounds, your code will error unless you handle that case too.</p>\n"}], "owner": {"reputation": 2567, "user_id": 3780203, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b3f3f9ab585dc56fa27e203ce4eb27fd?s=128&d=identicon&r=PG&f=1", "display_name": "ephrion", "link": "https://stackoverflow.com/users/3780203/ephrion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 841, "favorite_count": 0, "accepted_answer_id": 28666486, "answer_count": 1, "score": 2, "last_activity_date": 1424661965, "creation_date": 1424661583, "question_id": 28666435, "link": "https://stackoverflow.com/questions/28666435/haskell-custom-data-type-instance-num-and-redundancy", "title": "Haskell custom data type, instance Num, and redundancy", "body": "<p>I'm developing a small set of weightlifting utilities in Haskell as a learning exercise. I've defined a data type <code>Weight</code> such that:</p>\n\n<pre><code>data Weight = Wt Float Unit \n              deriving (Show, Eq)\n\ndata Unit   = Lb | Kg \n              deriving (Show, Eq)\n\ninstance Num Weight where\n  Wt x Lb + Wt y Lb = Wt (x + y) Lb\n  Wt x Lb * Wt y Lb = Wt (x * y) Lb\n  negate (Wt x Lb)  = Wt (negate x) Lb\n  abs    (Wt x Lb)  = Wt (abs x) Lb\n  signum (Wt x Lb)  = Wt (signum x) Lb\n  fromInteger x     = Wt (fromInteger x) Lb\n  -- Repeat for Kg...\n</code></pre>\n\n<p>Is there any way to specify a generic type for the <code>Unit</code> in the Num instance definition? It would be nice to specify something like:</p>\n\n<pre><code>instance Num Weight where\n  Wt x a + Wt y a = Wt (x + y) a\n  -- ...\n</code></pre>\n\n<p>rather than repeating everything with the other constructor. </p>\n"}, {"tags": ["haskell", "ghc", "type-level-computation"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424664350, "post_id": 28666431, "comment_id": 45628146, "body": "Are you interested in something like <code>forall (xs :: [Symbol]) -&gt; HList xs -&gt; [String]</code> or <code>forall (xs :: [Symbol]) -&gt; Proxy xs -&gt; [String]</code>. The former is simple, the latter is slightly less simple (you&#39;ll need a type class constraint on xs)."}, {"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424693177, "post_id": 28666431, "comment_id": 45640156, "body": "I&#39;m looking for the latter. Although I&#39;d be intrigued to see how the former is done as well (but it seems to me that kind <code>HList (xs :: &#39;[Symbol])</code> is more like a list of lists). Also, I&#39;ve never seen the <code>forall</code> used quite like that. Isn&#39;t there supposed to be a period after the thing it quantifies?"}], "answers": [{"comments": [{"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "edited": false, "score": 0, "creation_date": 1424720449, "post_id": 28679571, "comment_id": 45656837, "body": "Ah, very good. I forgot that this wouldn&#39;t be a scenario that required <code>OverlappingInstances</code> because the types <code>&#39;[]</code> and <code>(h &#39;: t)</code> don&#39;t overlap. Thanks."}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 6, "last_activity_date": 1424712233, "creation_date": 1424712233, "answer_id": 28679571, "question_id": 28666431, "link": "https://stackoverflow.com/questions/28666431/convert-type-level-list-to-a-value/28679571#28679571", "title": "Convert Type Level List to a Value", "body": "<p><a href=\"https://hackage.haskell.org/package/base-4.7.0.2/docs/GHC-TypeLits.html#v:symbolVal\"><code>symbolVal</code></a> can be mapped onto type level lists. To do so we'll need <code>ScopedTypeVariables</code> and <code>PolyKinds</code> in addition to <code>DataKinds</code> and <code>TypeOperators</code>.</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE PolyKinds #-}\n\nimport Data.Proxy\nimport GHC.TypeLits\n</code></pre>\n\n<p>We'll defined the class of types (of any kind) for which we can \"get a runtime value of type <code>[String]</code>\".</p>\n\n<pre><code>class SymbolVals a where\n    symbolVals :: proxy a -&gt; [String]\n</code></pre>\n\n<p>We can get a list of strings for any empty list of types.</p>\n\n<pre><code>instance SymbolVals '[] where\n    symbolVals _ = []\n</code></pre>\n\n<p>We can get a list of strings for any list of types where we can get a string for the first type and a list of strings for the remainder.</p>\n\n<pre><code>instance (KnownSymbol h, SymbolVals t) =&gt; SymbolVals (h ': t) where\n    symbolVals _ = symbolVal (Proxy :: Proxy h) : symbolVals (Proxy :: Proxy t)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 483, "user_id": 521370, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a8d69ed3d32273571045f30fc755ff0a?s=128&d=identicon&r=PG", "display_name": "Dmitry Olshansky", "link": "https://stackoverflow.com/users/521370/dmitry-olshansky"}, "is_accepted": false, "score": 2, "last_activity_date": 1486624003, "creation_date": 1486624003, "answer_id": 42130315, "question_id": 28666431, "link": "https://stackoverflow.com/questions/28666431/convert-type-level-list-to-a-value/42130315#42130315", "title": "Convert Type Level List to a Value", "body": "<p>I suggest to use <code>singletons</code> library. You have all that you need but using <code>Sing</code> instead of <code>Proxy</code> type:</p>\n\n<pre><code>$ stack ghci --package singletons\nConfiguring GHCi with the following packages: \nGHCi, version 8.0.1: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; :set -XDataKinds \nPrelude&gt; import Data.Singletons.Prelude\nPrelude Data.Singletons.Prelude&gt; fromSing (sing :: Sing '[\"a\",\"b\"])\n[\"a\",\"b\"]\nPrelude Data.Singletons.Prelude&gt; :t fromSing (sing :: Sing '[\"a\",\"b\"])\nfromSing (sing :: Sing '[\"a\",\"b\"]) :: [String]\n</code></pre>\n"}], "owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 579, "favorite_count": 0, "accepted_answer_id": 28679571, "answer_count": 2, "score": 5, "last_activity_date": 1486624003, "creation_date": 1424661564, "question_id": 28666431, "link": "https://stackoverflow.com/questions/28666431/convert-type-level-list-to-a-value", "title": "Convert Type Level List to a Value", "body": "<p>The module GHC.TypeLits currently provides <code>natVal</code> and <code>symbolVal</code>, which allow us to get a runtime value from a type of kind <code>Nat</code> or <code>Symbol</code>. Is there a way to get a runtime value of type <code>[String]</code> out of a type of kind <code>'[Symbol]</code>? I can't see an obvious way to do this. I can think of one that uses a typeclass with <code>OverlappingInstances</code>, but it seems like GHC should already have a function for this.</p>\n"}, {"tags": ["haskell", "emacs"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user2879704"}, "edited": false, "score": 0, "creation_date": 1424697458, "post_id": 28666471, "comment_id": 45642555, "body": "Chris, goto definiton works well when i generate <code>TAGS</code> file using hasktags inside project directory. However, for lib files sitting in user package as ~/.cabal/libs, it doesn&#39;t work. So, how to configure user/global package when using <code>haskell-mode-jump-to-def</code>?"}, {"owner": {"reputation": 91788, "user_id": 354577, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/dI6cA.jpg?s=128&g=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/354577/chris"}, "edited": false, "score": 0, "creation_date": 1424698361, "post_id": 28666471, "comment_id": 45643067, "body": "@MadhavanKumar, sorry, I don&#39;t know."}, {"owner": {"reputation": 10808, "user_id": 161176, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/cd378611a91eb7852ae19cd582de718a?s=128&d=identicon&r=PG", "display_name": "Sam Ritchie", "link": "https://stackoverflow.com/users/161176/sam-ritchie"}, "edited": false, "score": 2, "creation_date": 1427661050, "post_id": 28666471, "comment_id": 46857609, "body": "What&#39;s the best way to reverse this and jump back to where you came from?"}, {"owner": {"reputation": 10808, "user_id": 161176, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/cd378611a91eb7852ae19cd582de718a?s=128&d=identicon&r=PG", "display_name": "Sam Ritchie", "link": "https://stackoverflow.com/users/161176/sam-ritchie"}, "edited": false, "score": 2, "creation_date": 1427665486, "post_id": 28666471, "comment_id": 46859016, "body": "Looks like I had to go with <code>M-*</code>, which calls <code>pop-tag-mark</code>. I use <code>M-,</code> in <code>clojure-mode</code>, but it wasn&#39;t working here for some reason."}], "tags": [], "owner": {"reputation": 91788, "user_id": 354577, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/dI6cA.jpg?s=128&g=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/354577/chris"}, "is_accepted": true, "score": 7, "last_activity_date": 1424661833, "last_edit_date": 1592644375, "creation_date": 1424661833, "answer_id": 28666471, "question_id": 28666113, "link": "https://stackoverflow.com/questions/28666113/goto-definition-in-emacs-haskell-mode/28666471#28666471", "title": "Goto Definition in Emacs - Haskell mode", "body": "<p><code>haskell-mode-jump-to-def</code> isn't bound by default, <a href=\"https://github.com/haskell/haskell-mode/wiki/Haskell-Interactive-Mode-Tags\" rel=\"noreferrer\">but you can bind it yourself</a>:</p>\n<blockquote>\n<h2>Using GHCi</h2>\n<p>You can bind the following to use GHCi to find definitions of things:</p>\n<pre><code>(define-key haskell-mode-map (kbd &quot;M-.&quot;) 'haskell-mode-jump-to-def)\n</code></pre>\n<p>The one problem with this approach is that if your code doesn't compile, GHCi doesn't give any location info. So you need to make sure your code compiles and the modules you want to jump to are loaded byte-compiled.</p>\n</blockquote>\n<p>Alternatively, you can use a tags file or GHCi / tags hybrid approach as suggested later on that same page.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user2879704"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1367, "favorite_count": 1, "accepted_answer_id": 28666471, "answer_count": 1, "score": 3, "last_activity_date": 1424666705, "creation_date": 1424658595, "last_edit_date": 1424666705, "question_id": 28666113, "link": "https://stackoverflow.com/questions/28666113/goto-definition-in-emacs-haskell-mode", "title": "Goto Definition in Emacs - Haskell mode", "body": "<p>I installed <code>Haskell Mode</code> through Melpa <code>package-install</code>. However, <code>M - .</code> (<code>goto-definition)</code> still uses emacs' inbuilt findTags function. Doesn't haskell mode has this goto function definition feature?</p>\n"}, {"tags": ["haskell", "overriding", "typeclass"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1424659437, "post_id": 28665917, "comment_id": 45627122, "body": "Sure, just use a newtype wrapper like in the almost-correct but deleted answer."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 6, "creation_date": 1424664969, "post_id": 28665917, "comment_id": 45628286, "body": "The correct way of  doing this is to have <code>.. deriving Show</code> and then have some pretty print class (or just a function) which displays the data however you like. Also, there is no such thing as method overriding in Haskell, or <code>super.method</code>, because there is no sub typing in Haskell."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1424682727, "post_id": 28665917, "comment_id": 45634316, "body": "The  <code>show</code> function is supposed to generate a string containing an Haskell expression that, once evaluated, gives the original value back. If you need something else, you should declare a different function (possibly in its own class)."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1424682843, "post_id": 28665917, "comment_id": 45634377, "body": "@chi: then (a) why can it be overriden (one could make a function defined on the objects), and (b) why are infinite lists collapsed into an array literal?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1424683345, "post_id": 28665917, "comment_id": 45634661, "body": "(a) because sometimes the constructors are not exported so you have to override it (see e.g. Data.Set) (b) I don&#39;t completely understand your point, but you would be right to say that the contract is broken for infinite lists e.g. <code>read (show [[1..],[2]])</code> will not get the original list back. That being said, it&#39;s true that the contract is often broken in application code, so what you are trying to do is not uncommon. Sometimes it&#39;s quite convenient to just override <code>show</code> to be more readable and forget Haskell syntax."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 1, "creation_date": 1450816646, "post_id": 28665917, "comment_id": 56589680, "body": "But even when <code>show</code> doesn&#39;t produce valid Haskell syntax it&#39;s still generally regarded as programmer-oriented. It&#39;s &quot;show me be a textual representation of the data so I can tell what it is&quot;, <i>not</i> &quot;display this value as text for the end user&quot;. In python terms it&#39;s <code>repr</code>, not <code>str</code>. So showing some <code>Greek</code> values in a way that&#39;s indistinguishable from integers is a little bit of a code smell."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1450816844, "post_id": 28665917, "comment_id": 56589783, "body": "That&#39;s why you&#39;ll find so many questions on SO about how to make <code>show</code> render <code>String</code> values without the quotes, or lists without the brackets. Too many standard instances treat <code>show</code> as outputting code for it to really easy to use it for display purposes."}], "answers": [{"tags": [], "owner": {"reputation": 708, "user_id": 4553930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/308c878dca0a01a80bc9b5b9b19c7ab6?s=128&d=identicon&r=PG&f=1", "display_name": "Abhay", "link": "https://stackoverflow.com/users/4553930/abhay"}, "is_accepted": false, "score": 7, "last_activity_date": 1424658451, "creation_date": 1424658451, "answer_id": 28666098, "question_id": 28665917, "link": "https://stackoverflow.com/questions/28665917/accessing-the-default-show-in-haskell/28666098#28666098", "title": "Accessing the &quot;default show&quot; in Haskell?", "body": "<p>No, that's not possible AFAIK.</p>\n\n<p>Further, custom instances of <code>Show</code> deserve a second thought, because <code>Show</code> and <code>Read</code> instances should be mutually compatible.</p>\n\n<p>For just converting to human (or whoever) readable strings, use your own function or own typeclass. This will also achieve what you want:</p>\n\n<p>Assuming you have a <code>Presentable</code> typeclass with a method <code>present</code>, and also the default <code>Show</code> instance, you can write:</p>\n\n<pre><code>instance Presentable Greek where\n    present (Number x) = show x\n    present x = show x\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 16267, "user_id": 1346276, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Tu8Re.jpg?s=128&g=1", "display_name": "phipsgabler", "link": "https://stackoverflow.com/users/1346276/phipsgabler"}, "edited": false, "score": 3, "creation_date": 1424679692, "post_id": 28666200, "comment_id": 45632970, "body": "I think you could achieve a similar thing to the first variant using <a href=\"http://hackage.haskell.org/package/generic-deriving-1.7.0/docs/Generics-Deriving-Show.html\" rel=\"nofollow noreferrer\">generic-deriving</a>, which would probably also handle nested things (as long as everything is <code>Generic</code>)."}], "tags": [], "owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "is_accepted": true, "score": 7, "last_activity_date": 1450810592, "last_edit_date": 1450810592, "creation_date": 1424659526, "answer_id": 28666200, "question_id": 28665917, "link": "https://stackoverflow.com/questions/28665917/accessing-the-default-show-in-haskell/28666200#28666200", "title": "Accessing the &quot;default show&quot; in Haskell?", "body": "<p>You can sorta accomplish this using Data and Typeable. It is a hack of course, and this example only works for \"enumerated\" types as in your example. </p>\n\n<p>I'm sure we could get more elaborate with how we do this, but to cover your given example:</p>\n\n<pre><code>{-# LANGUAGE DeriveDataTypeable #-}\nimport Data.Data\nimport Data.Typeable\n\ndata Greek = Alpha | Beta | Gamma | Delta | Eta | Number Int \n             deriving (Data,Typeable)\n\ninstance Show Greek where\n    show Number n = show n\n    show x = show $ toConstr x\n</code></pre>\n\n<p>This approach as I've implemented it cannot handle nested data structures or anything else remotely fancy, but again, this is an ugly hack. If you really <em>must</em> use this approach you can dig around in the <code>Data.Data</code> package I'm sure you could piece something together...</p>\n\n<p>Here is a blog post giving a quick introduction to the packages: <a href=\"http://chrisdone.com/posts/data-typeable\" rel=\"nofollow\">http://chrisdone.com/posts/data-typeable</a></p>\n\n<p>The proper way to go about this would be to use a <code>newtype</code> wrapper. I realize that this isn't the most convenient solution though, especially when using GHCi, but it incurs no additional overhead, and is less likely to break in unexpected ways as your program grows. </p>\n\n<pre><code>data Greek = Alpha | Beta | Gamma | Delta | Eta | Number Int \n         deriving (Show)\n\nnewtype SpecialPrint = SpecialPrint Greek\n\ninstance Show SpecialPrint where\n    show (SpecialPrint (Number x)) = \"Number: \" ++ show x\n    show (SpecialPrint x) = show x\n\nmain = do\n    print (SpecialPrint Alpha)\n    print (SpecialPrint $ Number 1)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2011, "user_id": 194614, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FsM9u.jpg?s=128&g=1", "display_name": "paluh", "link": "https://stackoverflow.com/users/194614/paluh"}, "is_accepted": false, "score": 8, "last_activity_date": 1455624848, "last_edit_date": 1455624848, "creation_date": 1455400489, "answer_id": 35385768, "question_id": 28665917, "link": "https://stackoverflow.com/questions/28665917/accessing-the-default-show-in-haskell/35385768#35385768", "title": "Accessing the &quot;default show&quot; in Haskell?", "body": "<p>As @phg pointed above in comment this can be also done with help of <a href=\"https://hackage.haskell.org/package/generic-deriving\" rel=\"noreferrer\">generic-deriving</a>:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\nmodule Main where\n\nimport           Generics.Deriving.Base (Generic)\nimport           Generics.Deriving.Show (GShow, gshow)\n\ndata Greek = Alpha | Beta | Gamma | Delta | Eta | Number Int\n  deriving (Generic)\n\ninstance GShow Greek\ninstance Show Greek where\n  show (Number n) = \"n:\" ++ show n\n  show l = gshow l\n\nmain :: IO ()\nmain = do\n  print (Number 8)\n  print Alpha\n</code></pre>\n"}], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1737, "favorite_count": 2, "accepted_answer_id": 28666200, "answer_count": 3, "score": 7, "last_activity_date": 1455624848, "creation_date": 1424656915, "last_edit_date": 1495542755, "question_id": 28665917, "link": "https://stackoverflow.com/questions/28665917/accessing-the-default-show-in-haskell", "title": "Accessing the &quot;default show&quot; in Haskell?", "body": "<p>Say you have a data-structure (borrowed from this <a href=\"https://stackoverflow.com/q/2529663/67579\">question</a>):</p>\n\n<pre><code>data Greek = Alpha | Beta | Gamma | Delta | Eta | Number Int\n</code></pre>\n\n<p>Now one can make it an instance of <code>Show</code> by appending <code>deriving Show</code> on that instruction.</p>\n\n<p>Say however we wish to show <code>Number Int</code> as:</p>\n\n<pre><code>instance Show Greek where\n    show (Number x) = show x\n    -- ...\n</code></pre>\n\n<p>The problem is that one must <em>specify</em> all other parts of the <code>Greek</code> data as well like:</p>\n\n<pre><code>    show Alpha = \"Alpha\"\n    show Beta = \"Beta\"\n</code></pre>\n\n<p>For this small example that's of course doable. But if the number of options is long, it requires a large amount of work.</p>\n\n<p>I'm wondering whether it is possible to access the \"default show\" implementation and call it with a wildcard. For instance:</p>\n\n<pre><code>instance Show Greek where\n    show (Number x) = show x\n    show x = defaultShow x\n</code></pre>\n\n<p>You thus \"implement\" the specific patterns that differ from the default approach and the remaining patterns are resolved by the \"fallback mechanism\".</p>\n\n<p>Something a bit similar to method overriding with a reference to <code>super.method</code> in object oriented programming.</p>\n"}, {"tags": ["haskell", "monads", "lifting"], "comments": [{"owner": {"reputation": 62908, "user_id": 567620, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/g8HIM.jpg?s=128&g=1", "display_name": "ely", "link": "https://stackoverflow.com/users/567620/ely"}, "edited": false, "score": 3, "creation_date": 1424657926, "post_id": 28665582, "comment_id": 45626774, "body": "I believe this is precisely what <a href=\"http://en.wikibooks.org/wiki/Haskell/Monad_transformers\" rel=\"nofollow noreferrer\">monad transformers</a> are supposed to be all about, though for a simple use case like this it&#39;s probably better to just create aliases to your functions locally on your own, like <code>myMonadicAdd = (liftM . liftM ) (+)</code> since the use of nested monads will be specific to your application."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1424660285, "post_id": 28665582, "comment_id": 45627283, "body": "<code>liftM . liftM</code> has a type incompatible with monad transformers, so if you find yourself needing this function <i>a lot</i>, then you should consider refactoring your code to use a monad transformer. If this particular example is your actual use case, this may not be good advice, because <code>ListT Maybe a</code> and <code>[Maybe a]</code> are not the same thing."}, {"owner": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424660541, "post_id": 28665582, "comment_id": 45627328, "body": "@user2407038 It&#39;s not my actual use case, but I thought it being very simple, it would be a good example for developing intuition. Then I tried to use <code>ListT Maybe a</code> and found out that the types indeed don&#39;t match, too bad."}, {"owner": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "reply_to_user": {"reputation": 62908, "user_id": 567620, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/g8HIM.jpg?s=128&g=1", "display_name": "ely", "link": "https://stackoverflow.com/users/567620/ely"}, "edited": false, "score": 0, "creation_date": 1424660826, "post_id": 28665582, "comment_id": 45627386, "body": "I wonder why we have liftIO, but not a general solution that does all the necessary lifts that works with any monad. @Mr.F little mistake: <code>(liftM . liftM) (+)</code> is a type error, liftM2 is needed for (+)"}, {"owner": {"reputation": 1365, "user_id": 536017, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5a8149f6e0f3f0276a525bf9a76a5397?s=128&d=identicon&r=PG", "display_name": "danem", "link": "https://stackoverflow.com/users/536017/danem"}, "edited": false, "score": 1, "creation_date": 1424660963, "post_id": 28665582, "comment_id": 45627418, "body": "I looks like you want a way to lift to an arbitrary depth. Unfortunately, there is no straight forward way to implement this, without resorting to something like Template Haskell. While having to occasionally define <code>fmap2</code>, is a bit annoying, in practice it is so rarely needed and so easily defined that they haven&#39;t included an alias for it. Here is a blog post discussing this: <a href=\"https://byorgey.wordpress.com/2007/08/16/mapping-over-a-nested-functor/\" rel=\"nofollow noreferrer\">byorgey.wordpress.com/2007/08/16/mapping-over-a-nested-funct&zwnj;&#8203;or</a>"}, {"owner": {"reputation": 62908, "user_id": 567620, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/g8HIM.jpg?s=128&g=1", "display_name": "ely", "link": "https://stackoverflow.com/users/567620/ely"}, "edited": false, "score": 0, "creation_date": 1424661086, "post_id": 28665582, "comment_id": 45627444, "body": "@LayGonz&#225;lez Yes, the typo was just that I meant <code>(+1)</code> as in your <code>liftM . liftM</code> example. It was too late to edit the comment when I realized I left off the <code>1</code>. I wasn&#39;t going for the <code>liftM2</code> example."}, {"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1424699476, "post_id": 28665582, "comment_id": 45643763, "body": "@user2407038 <code>liftM2.liftM2</code> works because in these cases <code>liftM2</code> = <code>liftA2</code> and Applicative functors <i>do</i> compose (unlike monads in general)."}, {"owner": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "reply_to_user": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1424717741, "post_id": 28665582, "comment_id": 45655177, "body": "@AndrewC if <code>&lt;$&gt; == liftA</code>, is there an operand, say <code>&lt;$$&gt;</code>, that <code>&lt;$$&gt; == liftA.liftA</code> ?"}, {"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1424752556, "post_id": 28665582, "comment_id": 45668642, "body": "@LayGonz&#225;lez I like that idea - and you&#39;ve inspired me to write an answer."}], "answers": [{"comments": [{"owner": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "edited": false, "score": 1, "creation_date": 1424755741, "post_id": 28688239, "comment_id": 45669570, "body": "Although not what I asked, it answers what I wanted to know. I&#39;ll study your answer and the Bazerman&#39;s post. Thanks."}], "tags": [], "owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "is_accepted": true, "score": 7, "last_activity_date": 1424762066, "last_edit_date": 1424762066, "creation_date": 1424752571, "answer_id": 28688239, "question_id": 28665582, "link": "https://stackoverflow.com/questions/28665582/in-haskell-are-there-aliases-for-liftm-liftm-liftm-liftm-liftm-etc/28688239#28688239", "title": "In Haskell, are there aliases for (liftM . liftM), (liftM . liftM . liftM), etc?", "body": "<p>There isn't such a thing as that in base, but well done for asking the most entertaining question for me on Stack Overflow for some time.</p>\n\n<p>Functors and Applicative functors are closed under composition (which certainly isn't the case in general for monads, thus the need for monad transformers), which is why <code>liftA2.liftA2</code> works here, and <code>liftM2</code> is usually just <code>liftA2</code>, especially now Applicative is becoming a superclass of Monad.</p>\n\n<h2>Digression:</h2>\n\n<p>You can use the composition newtype in <a href=\"http://hackage.haskell.org/package/transformers-0.4.2.0/docs/Data-Functor-Compose.html\">Data.Functor.Compose package</a> to compose an Applicative, but you can make new applicatives out of old ones in other ways too - I strongly recommend <a href=\"http://comonad.com/reader/2012/abstracting-with-applicatives/\">Gershom Bazerman's post \"Abstracting with Applicatives\" in the Comonad Reader</a> for folk that want to understand how beautiful a combined Applicative structure is compared to a monad transformer stack - I'm now always on the lookout for making things just Applicative rather than monadic where I can get the functionality I need. Often I can use Applicative to combine all the input stuff into a value I want to output then pipe it directly where i\nt's going using <code>&gt;&gt;=</code>. </p>\n\n<h2>Your functions and operators</h2>\n\n<p>Of course there's nothing stopping you defining your own functions:</p>\n\n<pre><code>liftliftA2 :: (Applicative f, Applicative g) =&gt;\n              (a -&gt; b -&gt; c) -&gt; f (g a) -&gt; f (g b) -&gt; f (g c)\nliftliftA2 = liftA2.liftA2\n</code></pre>\n\n<p>but it's not much shorter than <code>liftA2.liftA2</code>.</p>\n\n<p>I love your idea to make nested Applicative operators, though, but will switch to increasing the angle brackets rather than repeating the internal operator because <code>&lt;**&gt;</code> clashes with <code>(&lt;**&gt;) = flip (&lt;*&gt;)</code> in <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Control-Applicative.html#t:Applicative\">Control.Applicative</a>, and it's more logical.</p>\n\n<pre><code>import Control.Applicative\n\n(&lt;&lt;$&gt;&gt;) :: (Functor f, Functor g) =&gt; \n           (a -&gt; b) -&gt; f (g a) -&gt; f (g b)\n(&lt;&lt;$&gt;&gt;) = fmap.fmap\n\n(&lt;&lt;*&gt;&gt;) :: (Functor m, Applicative m, Applicative n) =&gt;\n            m (n (a -&gt; b)) -&gt; m (n a) -&gt; m (n b)\nmnf &lt;&lt;*&gt;&gt; mna = (&lt;*&gt;) &lt;$&gt; mnf &lt;*&gt; mna\n</code></pre>\n\n<p>giving</p>\n\n<pre><code>ghci&gt; (+) &lt;&lt;$&gt;&gt; [Just 5] &lt;&lt;*&gt;&gt; [Just 7,Just 10]\n[Just 12,Just 15]\n</code></pre>\n\n<p>and of course you can keep going:</p>\n\n<pre><code>(&lt;&lt;&lt;$&gt;&gt;&gt;) :: (Functor f, Functor g, Functor h) =&gt; \n             (a -&gt; b) -&gt; f (g (h a)) -&gt; f (g (h b))\n(&lt;&lt;&lt;$&gt;&gt;&gt;) = fmap.fmap.fmap\n\n(&lt;&lt;&lt;*&gt;&gt;&gt;) :: (Functor l,Functor m, Applicative l, Applicative m, Applicative n) =&gt;\n             l (m (n (a -&gt; b))) -&gt; l (m (n a)) -&gt; l (m (n b))\nlmnf &lt;&lt;&lt;*&gt;&gt;&gt; lmna = (&lt;*&gt;) &lt;&lt;$&gt;&gt; lmnf &lt;&lt;*&gt;&gt; lmna\n</code></pre>\n\n<p>Which lets you do the apparently improbable </p>\n\n<pre><code>ghci&gt; subtract &lt;&lt;&lt;$&gt;&gt;&gt; Right [Just 5,Nothing,Just 10] &lt;&lt;&lt;*&gt;&gt;&gt; Right [Just 100,Just 20]\nRight [Just 95,Just 15,Nothing,Nothing,Just 90,Just 10]\n</code></pre>\n\n<p>but then again, as Gershom Bazerman's article demonstrates, you may well want to nest Applicatives, just as deeply as you might want to nest Monads.</p>\n"}], "owner": {"reputation": 2765, "user_id": 1120410, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/667389841c856a06cbb6d2821f130056?s=128&d=identicon&r=PG", "display_name": "Lay Gonz&#225;lez", "link": "https://stackoverflow.com/users/1120410/lay-gonz%c3%a1lez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 386, "favorite_count": 1, "accepted_answer_id": 28688239, "answer_count": 1, "score": 6, "last_activity_date": 1424762066, "creation_date": 1424654128, "last_edit_date": 1424658049, "question_id": 28665582, "link": "https://stackoverflow.com/questions/28665582/in-haskell-are-there-aliases-for-liftm-liftm-liftm-liftm-liftm-etc", "title": "In Haskell, are there aliases for (liftM . liftM), (liftM . liftM . liftM), etc?", "body": "<p>In Haskell, is there any alias for (liftM . liftM), (liftM . liftM . liftM) etc?</p>\n\n<p>So that I don't have to be so verbose, e.g.:</p>\n\n<pre><code>(liftM . liftM) (+ 1) [Just 1,  Just 2]  = [Just 2, Just 3]\n(liftM2 . liftM2) (+) [Just 1] [Just 2]  = [Just 3]\n</code></pre>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1424647922, "post_id": 28664534, "comment_id": 45624195, "body": "You need to define all value constructor for each respective data type. I&#39;m not sure I understand what you mean. Maybe you can show a pseudo-code example of what you think you would need to do? The given code seems to be working."}, {"owner": {"reputation": 765, "user_id": 2974642, "user_type": "registered", "accept_rate": 28, "profile_image": "https://www.gravatar.com/avatar/8a3448409a891f6d3394aa81ab0b32d9?s=128&d=identicon&r=PG&f=1", "display_name": "UnworthyToast", "link": "https://stackoverflow.com/users/2974642/unworthytoast"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1424648144, "post_id": 28664534, "comment_id": 45624258, "body": "What do you mean by working? Am I wrong that all this code is doing is declaring options for each data type without defining them? So even if it &quot;works&quot;, it doesn&#39;t actually do anything yet."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1424648330, "post_id": 28664534, "comment_id": 45624322, "body": "Not sure what you mean by distinguishing between declaration and definition here. Yes, it doesn&#39;t <i>do</i> anything (no code except <code>main :: IO ()</code> does anything in Haskell :-P), but the data types and constructors are ready to work with (e.g. to define <code>Show</code> and <code>Read</code> instances for them)."}, {"owner": {"reputation": 497, "user_id": 3979725, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mj52I.jpg?s=128&g=1", "display_name": "David Lilue", "link": "https://stackoverflow.com/users/3979725/david-lilue"}, "edited": false, "score": 0, "creation_date": 1424648517, "post_id": 28664534, "comment_id": 45624375, "body": "You dont need to define a <code>type</code> it already have behavior defined by its declaration"}, {"owner": {"reputation": 765, "user_id": 2974642, "user_type": "registered", "accept_rate": 28, "profile_image": "https://www.gravatar.com/avatar/8a3448409a891f6d3394aa81ab0b32d9?s=128&d=identicon&r=PG&f=1", "display_name": "UnworthyToast", "link": "https://stackoverflow.com/users/2974642/unworthytoast"}, "edited": false, "score": 0, "creation_date": 1424649032, "post_id": 28664534, "comment_id": 45624521, "body": "And so continues my immense confusion with Haskell. Thanks everyone."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 4, "creation_date": 1424650257, "post_id": 28664534, "comment_id": 45624854, "body": "I doubt you expect the compiler to read your mind - obviously you must write down <i>what</i> each datatype is. The datatype declarations are doing exactly that. Could you include some pseudocode and its intended behavior? What specifically do you not like about writing these data declarations?"}], "owner": {"reputation": 765, "user_id": 2974642, "user_type": "registered", "accept_rate": 28, "profile_image": "https://www.gravatar.com/avatar/8a3448409a891f6d3394aa81ab0b32d9?s=128&d=identicon&r=PG&f=1", "display_name": "UnworthyToast", "link": "https://stackoverflow.com/users/2974642/unworthytoast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 308, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1424646742, "creation_date": 1424646742, "question_id": 28664534, "link": "https://stackoverflow.com/questions/28664534/defining-data-types-in-haskell", "title": "Defining data types in Haskell", "body": "<p>I am given the following data types for a Haskell assignment (to create a basic language <code>W</code>) in my programming languages class:</p>\n\n<pre><code>data WValue = VInt Int \n        | VBool Bool \n          deriving (Eq, Show)\n\ndata WExp = Val WValue\n      | Var String\n      | Plus WExp WExp\n      | Minus WExp WExp\n      | Multiplies WExp WExp\n      | Divides WExp WExp\n      | Equals WExp WExp\n      | NotEqual WExp WExp\n      | Less WExp WExp\n      | Greater WExp WExp\n      | LessOrEqual WExp WExp\n      | GreaterOrEqual WExp WExp\n      | And WExp WExp\n      | Or WExp WExp\n      | Not WExp\n\ndata WStmt = Empty\n       | VarDecl String WExp\n       | Assign String WExp\n       | If WExp WStmt WStmt\n       | While WExp WStmt\n       | Block [WStmt]\n</code></pre>\n\n<p>My question--dumb as it may be--is whether or not I am going to need to define <em>all</em> value constructors for <em>all</em> data types, or if, for example, defining the data type that is at the highest level (<code>WStmt</code>, in this case), can be sufficient to make the rest of the data types work in some kind of implicit way.</p>\n"}, {"tags": ["haskell", "binary-search-tree", "timing"], "comments": [{"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1424649600, "post_id": 28664204, "comment_id": 45624658, "body": "You might find that double-reversing and stripping every substring is slower than running the string through <code>filter (not.isSpace)</code> first."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424648473, "post_id": 28664769, "comment_id": 45624361, "body": "Regarding the last point, there are lots of other unnecessary parens: <code>putStrLn &quot;Execution time in Sections: &quot;</code>, <code>print my_time</code>, etc. I believe HLint can catch these kinds of things for you."}], "tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": true, "score": 1, "last_activity_date": 1424648220, "creation_date": 1424648220, "answer_id": 28664769, "question_id": 28664204, "link": "https://stackoverflow.com/questions/28664204/timing-experiment-on-bst-in-haskell/28664769#28664769", "title": "timing experiment on bst in haskell", "body": "<p>The last <code>do</code> block is not formatted correctly. Here is a diff:</p>\n\n<pre><code>@@ -78,9 +78,7 @@\n                 then return ()\n                 else ioError e\n          Right inpStr -&gt;\n-             do\n-        let my_list = make_int_list inpStr;\n-            my_time &lt;- test_func my_list\n-                    putStrLn (\"Execution time in Sections: \")\n-                         print(my_time);\n-                    return ();\n+             do let my_list = make_int_list inpStr;\n+                my_time &lt;- test_func my_list\n+                putStrLn(\"Execution time in Sections: \")\n+                print(my_time)\n</code></pre>\n\n<p>Notes:</p>\n\n<ul>\n<li>I am not using tabs anywhere in the source; I have a feeling your source uses tabs. My advice is to avoid tabs in Haskell source.</li>\n<li>You do not need parens to call functions - <code>putStrLn \"...\"</code> and <code>print my_time</code> will work</li>\n</ul>\n\n<p>Also, <code>prin(tree)</code> earlier should be <code>print(tree)</code> but is more commonly written <code>print tree</code> - the parens are not needed.</p>\n"}], "owner": {"reputation": 1, "user_id": 3255286, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e6f9f326246497de0dc5514c98dd6115?s=128&d=identicon&r=PG&f=1", "display_name": "burblebee", "link": "https://stackoverflow.com/users/3255286/burblebee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 28664769, "answer_count": 1, "score": -3, "last_activity_date": 1424648220, "creation_date": 1424644885, "question_id": 28664204, "link": "https://stackoverflow.com/questions/28664204/timing-experiment-on-bst-in-haskell", "title": "timing experiment on bst in haskell", "body": "<p>Hi i am trying to learn haskell and compare its performance to other languages \nwhen i run the following code..</p>\n\n<pre><code>module BST (\n  Tree,\n  singletonTree,\n  insert,\n  member\n) where\n\n\nimport System.IO\nimport System.IO.Error hiding (try)\nimport Control.Exception\nimport Data.Char\nimport System.CPUTime\n\n\n--\n-- Take the string and convert it to a list of numbers\n--\ntrim = f . f\n   where f = reverse . dropWhile isSpace\nfromDigits = foldl addDigit 0\n       where addDigit num d = 10*num+d\nstrToInt str = fromDigits (map digitToInt str)\nsplit_comma \"\" = []\nsplit_comma input = \n        let (a,b) = break (\\x-&gt;x==',') input in \n        [(trim a)]++(split_comma (drop 1 b))\nmake_int_list input =map strToInt (split_comma input)\n-- end of converting string to integers\n\n\n\n\ndata Tree a = EmptyTree | Node a (Tree a)(Tree a) deriving (Show)\n\nsingletonTree :: a -&gt; Tree a\nsingletonTree x = Node x EmptyTree EmptyTree\n\ninsert :: Ord a =&gt; a -&gt; Tree a -&gt; Tree a\ninsert x EmptyTree = singletonTree x\ninsert x (Node root left right) \n    | x &lt; root = Node root (insert x left) (right)\n    | x &gt; root  = Node root (left) (insert x right)\n    | x == root = Node root (Node x left EmptyTree) (right) \n\nmember :: Ord a =&gt; a -&gt; Tree a -&gt; Bool\nmember x EmptyTree = False\nmember x (Node n left right)\n  | x == n = True\n  | x &lt; n = member x left\n  | x &gt; n = member x right\n\n\n---A test function to do the timing\ntest_func input_list =do\n      startTime &lt;- getCPUTime\n      --Note: If you don't use any results haskell won't even run the code\n      -- if you just mergesrt here (uncomment next line) instead of print\n      -- return (let tree = foldr insert EmptyTree )\n      -- then it will always take 0 seconds since it won't actually sort!\n      let tree = foldr insert EmptyTree input_list\n      prin(tree)\n      finishTime &lt;- getCPUTime\n      return $ fromIntegral (finishTime - startTime) / 1000000000000\n\nmain :: IO ()\nmain = do \n       inh &lt;- openFile \"random_numbers.txt\" ReadMode\n       mainloop inh \n       hClose inh\n--Read in my file and run test_func on input\nmainloop :: Handle -&gt; IO ()\nmainloop inh  = \n    do input &lt;- try (hGetLine inh)\n       case input of\n         Left e -&gt; \n             if isEOFError e\n                then return ()\n                else ioError e\n         Right inpStr -&gt;\n             do\n        let my_list = make_int_list inpStr;\n            my_time &lt;- test_func my_list\n                    putStrLn (\"Execution time in Sections: \")\n                         print(my_time);\n                    return ();\n</code></pre>\n\n<p>when attempting to run this code i get </p>\n\n<p>Prelude> :load \"bst.hs\"\n[1 of 1] Compiling BST              ( bst.hs, interpreted )</p>\n\n<p>bst.hs:83:29: parse error on input `&lt;-'\nFailed, modules loaded: none.</p>\n\n<p>i have exhausted my knowledge of haskell.  I tried moving the module statements to both before and after the includes but neither help.  I have used both the bst and the timing code separately but combined is causing error </p>\n\n<p>random_numbers.txt is a list of comma separated values.  </p>\n"}, {"tags": ["haskell", "data-structures", "functional-programming", "ocaml"], "comments": [{"owner": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "edited": false, "score": 0, "creation_date": 1424635941, "post_id": 28662358, "comment_id": 45620414, "body": "good self-work! Would you mind to put your &quot;Edit&quot; part as a separate answer?"}, {"owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "reply_to_user": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "edited": false, "score": 0, "creation_date": 1424639815, "post_id": 28662358, "comment_id": 45621659, "body": "Thanks!  Per your request, posted."}], "answers": [{"tags": [], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "is_accepted": true, "score": 2, "last_activity_date": 1424639800, "creation_date": 1424639800, "answer_id": 28663355, "question_id": 28662358, "link": "https://stackoverflow.com/questions/28662358/how-to-iterate-over-all-elements-in-a-record-type-with-the-same-type-purely-fun/28663355#28663355", "title": "How to iterate over all elements in a record type with the same type (purely functional iterators for record types)", "body": "<p>Actually, this may be a lot more straight forward than I thought.  Fieldslib gives first class elements already.  As long as we make a list of all the ones with the same type, we should be fine.  In other words:</p>\n\n<pre class=\"lang-ocaml prettyprint-override\"><code>open Fieldslib\ntype bar = {\n    w : int;\n    x : float;\n    y : int;\n    z : float\n} with fields\n\nlet ints=[w;y]\nlet floats=[x;z]\n\nlet bar = {\n    w = 1;\n    x = 2.0;\n    y = 3;\n    z = 4.0\n};;\n\nlet print_ints bar = List.iter (fun l -&gt; Printf.printf \"%d\\n\" (l bar)) ints\nlet print_floats bar = List.iter (fun l -&gt; Printf.printf \"%f\\n\" (l bar)) floats\n</code></pre>\n\n<p>More generally, a list of lenses with the same type should make all of this possible since we can then just apply the map, fold, and iter functions from lists.</p>\n"}, {"comments": [{"owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "edited": false, "score": 0, "creation_date": 1424651644, "post_id": 28664089, "comment_id": 45625262, "body": "I&#39;m not sure why you&#39;re getting down votes, but this has been helpful.  Thanks!"}, {"owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "edited": false, "score": 0, "creation_date": 1424653688, "post_id": 28664089, "comment_id": 45625806, "body": "By the way, you left off a <code>module Z = Traversals(TraverseFooInts)</code> from the OCaml example.  With that, everything works perfectly."}, {"owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "reply_to_user": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "edited": false, "score": 0, "creation_date": 1424659776, "post_id": 28664089, "comment_id": 45627196, "body": "Thanks! I&#39;m probably getting downvotes for even suggesting such an ugly thing :)"}], "tags": [], "owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "is_accepted": false, "score": 1, "last_activity_date": 1424659785, "last_edit_date": 1424659785, "creation_date": 1424644207, "answer_id": 28664089, "question_id": 28662358, "link": "https://stackoverflow.com/questions/28662358/how-to-iterate-over-all-elements-in-a-record-type-with-the-same-type-purely-fun/28664089#28664089", "title": "How to iterate over all elements in a record type with the same type (purely functional iterators for record types)", "body": "<p>As a semi-unrelated side-note, in Haskell this could be accomplished by a van Laarhoven <code>Traversal</code></p>\n\n<pre><code>data Foo = Foo {\n    a :: Int,\n    b :: Float,\n    c :: Int,\n    d :: Float\n}\n\ntype Traversal s a = forall f . Applicative f =&gt; (a -&gt; f a) -&gt; (s -&gt; f s)\n\nintsOfFoo :: Traversal Foo Int\nintsOfFoo inj foo = build &lt;$&gt; inj (a foo) &lt;*&gt; inj (b foo) where\n  build a b = foo { a = a, b = b }\n</code></pre>\n\n<p>This value <code>intsOfFoo</code> generally traverses <code>Foo</code> touching each <code>int</code> with the <code>inj</code> function and smashing all of the effects of these \"touches\" together to re-<code>build</code> the resulting <code>Foo</code>.</p>\n\n<pre><code>mapOf :: Traversal s a -&gt; (a -&gt; a) -&gt; (s -&gt; s)\nmapOf trav f = getIdentity . trav (Identity . f)\n\n&gt; let foo0 = Foo { a = 1, b = 1, c = 1, d = 1 }\n&gt; mapOf intsOfFoo (+1) foo0\nFoo { a = 2, b = 1.0, c = 2, d = 1.0 }\n</code></pre>\n\n<p>Not sure how to accomplish this in <code>Fieldslib</code>, but here's an ugly draft in OCaml.</p>\n\n<pre><code>module type Applicative = sig\n  type 'a t\n  val map : ('a -&gt; 'b) -&gt; ('a t -&gt; 'b t)\n  val pure : 'a -&gt; 'a t\n  val ap : ('a -&gt; 'b) t -&gt; ('a t -&gt; 'b t)\nend\n\nmodule type Traversal = functor (F : Applicative) -&gt;\nsig\n  type s\n  type a\n  val it : (a -&gt; a F.t) -&gt; (s -&gt; s F.t)\nend\n\nmodule Identity = struct\n  type 'a t = 'a\n  let map f = f\n  let pure x = x\n  let ap f = f\nend\n\nmodule Traversals (T : Traversal) = struct\n  module Ti = T(Identity)\n  include Ti\n  let mapOf : (a -&gt; a) -&gt; (s -&gt; s) = fun f s -&gt; it f s\nend\n\ntype foo = {\n  a : int;\n  b : float;\n  c : int;\n  d : float;\n}\n\nmodule TraverseFooInts (F : Applicative) = struct\n  let (&lt;$&gt;) = F.map\n  let (&lt;*&gt;) = F.ap\n\n  type s = foo\n  type a = int\n\n  let it inj foo =\n    let build a c = {foo with a = a; c = c} in\n    build &lt;$&gt; inj foo.a &lt;*&gt; inj foo.c\nend\n\nmodule Z = Traversals(TraverseFooInts)\n</code></pre>\n\n<p>And finally,</p>\n\n<pre><code># Z.mapOf;;\n- : (int -&gt; int) -&gt; foo -&gt; foo = &lt;fun&gt;\n# Z.mapOf (fun x -&gt; x + 1) { a = 1; b = 1.; c = 1; d = 1. };;\n- : foo = {a = 2; b = 1.; c = 2; d = 1.}\n</code></pre>\n"}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1184, "favorite_count": 2, "accepted_answer_id": 28663355, "answer_count": 2, "score": 3, "last_activity_date": 1424659785, "creation_date": 1424633951, "last_edit_date": 1424651806, "question_id": 28662358, "link": "https://stackoverflow.com/questions/28662358/how-to-iterate-over-all-elements-in-a-record-type-with-the-same-type-purely-fun", "title": "How to iterate over all elements in a record type with the same type (purely functional iterators for record types)", "body": "<p>Is there a good way to iterate, fold, or loop over all elements in a record that have the same type?  For example, in the following OCaml code</p>\n\n<pre class=\"lang-ocaml prettyprint-override\"><code>type foo = {\n    a : int;\n    b : float;\n    c : int;\n    d : float\n}\n\nlet foo = {\n    a = 1;\n    b = 2.0;\n    c = 3;\n    d = 4.0\n}\n</code></pre>\n\n<p>I'd like to iterate over all of the integers or floats separately.  I am aware of Fieldslib, but it doesn't seem to do what I'd like.  For example, with Fieldslib, I can write the code:</p>\n\n<pre class=\"lang-ocaml prettyprint-override\"><code>open Fieldslib\ntype bar = {\n    w : int;\n    x : float;\n    y : int;\n    z : float\n} with fields\n\nlet bar = {\n    w = 1;\n    x = 2.0;\n    y = 3;\n    z = 4.0\n}\n\nlet print_int bar x = Printf.printf \"%d\\n\" (Fieldslib.Field.get x bar)\n\nlet print_float bar x = Printf.printf \"%f\\n\" (Fieldslib.Field.get x bar);;\n\nFields_of_bar.iter ~w:(print_int bar) \n                   ~x:(print_float bar)\n                   ~y:(print_int bar)\n                   ~z:(print_float bar)\n</code></pre>\n\n<p>But this forces us to iterate over all elements and not just the ints or floats separately.  It also requires the function to be called on each element be specified separately.  Really, I'd like to just say iterate, map, or fold some function to the structure.</p>\n\n<p>If this is difficult with a heterogeneous record type, would it be any easier with a record type where all elements have a single type?  In this case, we could define a lens to project out all of the ints, floats, etc.</p>\n\n<p>In some sense, it feels like I want some sort of purely functional iterator that works with record types and if such a technique exists I'm not sure what it's called.</p>\n\n<hr>\n\n<h1>Edit 1</h1>\n\n<p>Actually, this may be a lot more straight forward than I thought.  Fieldslib gives first class elements already.  As long as we make a list of all the ones with the same type, we should be fine.  In other words:</p>\n\n<pre class=\"lang-ocaml prettyprint-override\"><code>open Fieldslib\ntype bar = {\n    w : int;\n    x : float;\n    y : int;\n    z : float\n} with fields\n\nlet ints=[w;y]\nlet floats=[x;z]\n\nlet bar = {\n    w = 1;\n    x = 2.0;\n    y = 3;\n    z = 4.0\n};;\n\nlet print_ints bar = List.iter (fun l -&gt; Printf.printf \"%d\\n\" (l bar)) ints\nlet print_floats bar = List.iter (fun l -&gt; Printf.printf \"%f\\n\" (l bar)) floats\n</code></pre>\n\n<p>More generally, a list of lenses with the same type should make all of this possible since we can then just apply the map, fold, and iter functions from lists.</p>\n\n<hr>\n\n<h1>Edit 2</h1>\n\n<p>In case someone wants to run @j-abrahamson 's code, here's some mild modifications, so that it ran on my machine</p>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>{-# LANGUAGE RankNTypes #-}\n\nimport Control.Applicative\nimport Control.Monad.Identity\n\ndata Foo = Foo {\n    a :: Int,\n    b :: Float,\n    c :: Int,\n    d :: Float\n} deriving Show\n\ntype Traversal s a = forall f . Applicative f =&gt; (a -&gt; f a) -&gt; (s -&gt; f s)\n\nintsOfFoo :: Traversal Foo Int\nintsOfFoo inj foo = build &lt;$&gt; inj (a foo) &lt;*&gt; inj (c foo) where\n  build a c = foo { a = a, c = c }\n\nmapOf :: Traversal s a -&gt; (a -&gt; a) -&gt; (s -&gt; s)\nmapOf trav f = runIdentity . trav (Identity . f)\n\nfoo0 = Foo { a = 1, b = 1, c = 1, d = 1 }\n\nfoo1 = mapOf intsOfFoo (+1) foo0\n</code></pre>\n\n<p>I'm also adding the Haskell flag in case this helps anyone else.</p>\n"}, {"tags": ["haskell", "monads", "ghc", "ghci"], "answers": [{"comments": [{"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424634110, "post_id": 28662356, "comment_id": 45619784, "body": "You actually <i>cannot</i> define <code>join</code>, it is not a method of the class. There were plans to make it one in the AMP proposal, but it stranded on a bad interaction with the role system for newtype deriving. (Basically it would have made newtype deriving for monad stacks impossible.)"}, {"owner": {"reputation": 11606, "user_id": 1002430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ufy7U.png?s=128&g=1", "display_name": "Ana", "link": "https://stackoverflow.com/users/1002430/ana"}, "edited": false, "score": 0, "creation_date": 1424634349, "post_id": 28662356, "comment_id": 45619882, "body": "I see ... I don&#39;t suppose there is a list of functions available that is tagged as off-limits for use in Monad definitions?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 11606, "user_id": 1002430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ufy7U.png?s=128&g=1", "display_name": "Ana", "link": "https://stackoverflow.com/users/1002430/ana"}, "edited": false, "score": 2, "creation_date": 1424634619, "post_id": 28662356, "comment_id": 45619989, "body": "@Ana There is none, AFAIK. The thumb rule is that you should not use any function requiring <code>Monad (EitherIO e)</code> to define the instance itself. (This circular definition might still lead to termination in some cases, but more often than not is does not.)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 6, "last_activity_date": 1424634269, "last_edit_date": 1424634269, "creation_date": 1424633942, "answer_id": 28662356, "question_id": 28662311, "link": "https://stackoverflow.com/questions/28662311/what-is-wrong-with-my-haskell-definition-of-the-bind-operator-in-this-example/28662356#28662356", "title": "What is wrong with my Haskell definition of the bind operator in this example?", "body": "<p>My guess is that this is the culprit:</p>\n\n<pre><code>instance Monad (EitherIO e) where\n  return  = EitherIO . return . Right\n  x &gt;&gt;= f = join $ fmap f x\n</code></pre>\n\n<p>However, <code>join</code> is defined as:</p>\n\n<pre><code>join x = x &gt;&gt;= id\n</code></pre>\n\n<p>However, in this way <code>join</code> and <code>&gt;&gt;=</code> get defined in a mutually recursive way which leads to non termination.</p>\n\n<p>Note that this type checks, much as the following does:</p>\n\n<pre><code>f, g :: Int -&gt; Int\nf x = g x\ng x = f x\n</code></pre>\n\n<p>Bottom line: you should provide a definition for <code>&gt;&gt;=</code> which does not involve <code>join</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 660, "user_id": 1598002, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/39de6ca47e17259ed444ea7318be9689?s=128&d=identicon&r=PG", "display_name": "ipsec", "link": "https://stackoverflow.com/users/1598002/ipsec"}, "is_accepted": false, "score": 5, "last_activity_date": 1424634396, "creation_date": 1424634396, "answer_id": 28662438, "question_id": 28662311, "link": "https://stackoverflow.com/questions/28662311/what-is-wrong-with-my-haskell-definition-of-the-bind-operator-in-this-example/28662438#28662438", "title": "What is wrong with my Haskell definition of the bind operator in this example?", "body": "<p><a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Control-Monad.html#v:join\"><code>join</code></a> in <code>Control.Monad</code> is defined as follows:</p>\n\n<pre><code>join              :: (Monad m) =&gt; m (m a) -&gt; m a\njoin x            =  x &gt;&gt;= id\n</code></pre>\n\n<p>You see, that <code>join</code> is defined in terms of <code>&gt;&gt;=</code>. So the short answer is, that your definition of <code>&gt;&gt;=</code> gets into an endless loop (i.e. does not terminate), because it uses <code>join</code>, which in turn uses <code>&gt;&gt;=</code> again.</p>\n\n<p>If you think about it, you could use this definition of <code>&gt;&gt;=</code> for every <code>Monad</code>. So it cannot possibly work, because it makes no use of the internal structure of the type at all.</p>\n\n<p>As for why this is not detected by <code>ghc</code>, this is an endless loop, but not a type error. The type system of Haskell is not powerful enough to detect such loops.</p>\n"}], "owner": {"reputation": 11606, "user_id": 1002430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ufy7U.png?s=128&g=1", "display_name": "Ana", "link": "https://stackoverflow.com/users/1002430/ana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "accepted_answer_id": 28662356, "answer_count": 2, "score": 4, "last_activity_date": 1424634396, "creation_date": 1424633634, "question_id": 28662311, "link": "https://stackoverflow.com/questions/28662311/what-is-wrong-with-my-haskell-definition-of-the-bind-operator-in-this-example", "title": "What is wrong with my Haskell definition of the bind operator in this example?", "body": "<p>I'm following a monad transformers tutorial <a href=\"https://github.com/kqr/gists/blob/master/articles/gentle-introduction-monad-transformers.md\" rel=\"nofollow\">here</a>. </p>\n\n<p><a href=\"https://github.com/kqr/gists/blob/master/articles/gentle-introduction-monad-transformers.md#implementing-instances-for-common-typeclasses\" rel=\"nofollow\">At this point in the tutorial</a>, it asks me to try to implement the Monad instance for the <code>EitherIO</code> data type, defined as:</p>\n\n<pre><code>data EitherIO e a = EitherIO {\n    runEitherIO :: IO (Either e a)\n}\n</code></pre>\n\n<p>So I tried:</p>\n\n<pre><code>instance Functor (EitherIO e) where\n  fmap f = EitherIO . fmap (fmap f) . runEitherIO\n\ninstance Monad (EitherIO e) where\n  return  = EitherIO . return . Right\n  x &gt;&gt;= f = join $ fmap f x\n</code></pre>\n\n<p>The tutorial's version was a bit different:</p>\n\n<pre><code>instance Monad (EitherIO e) where\n  return  = pure -- the same as EitherIO . return . Right\n  x &gt;&gt;= f = EitherIO $ runEitherIO x &gt;&gt;= either (return . Left) (runEitherIO . f)\n</code></pre>\n\n<p>Now, the types all fit, so I thought I was good, and congratulated myself on finally finding a use for <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Control-Monad.html#v:join\" rel=\"nofollow\"><code>join</code></a>. </p>\n\n<p>As it turns out, <a href=\"https://github.com/kqr/gists/blob/master/articles/gentle-introduction-monad-transformers.md#do-you-even-lift\" rel=\"nofollow\">further down the tutorial</a>, I was asked to run <code>runEitherIO getToken</code> on the following:</p>\n\n<pre><code>liftEither x = EitherIO (return x)\nliftIO x = EitherIO (fmap Right x)\n\ngetToken = do\n  liftIO (T.putStrLn \"Enter email address:\")\n  input &lt;- liftIO T.getLine\n  liftEither (getDomain input)\n</code></pre>\n\n<p>Using my version of the <code>&gt;&gt;=</code> operator, GHCi would hang after I provided some input. Then even after I interrupt via <code>^C</code>, GHCi would start acting strangely, hanging for a second or two while I'm typing. I'd have to kill GHCi to restart. When I replaced the <code>&gt;&gt;=</code> definition with the tutorial definition, everything worked.</p>\n\n<p>My full file is <a href=\"https://gist.github.com/anonymous/2daef0e73aa627725197\" rel=\"nofollow\">here</a>.</p>\n\n<p>So:</p>\n\n<ol>\n<li><p>What is wrong with my definition?</p></li>\n<li><p>Why would GHCi typecheck and then behave like it did? Is this a GHCi bug?</p></li>\n</ol>\n"}, {"tags": ["haskell", "cabal"], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 4232796, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/42912716b8f59e0f6cfd0cbbe6a74bdf?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle McKean", "link": "https://stackoverflow.com/users/4232796/kyle-mckean"}, "edited": false, "score": 0, "creation_date": 1424637865, "post_id": 28662725, "comment_id": 45621075, "body": "Yes this fix worked I also sent an email to the maintainer to update the packages accordingly :)"}], "tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": false, "score": 1, "last_activity_date": 1424636550, "last_edit_date": 1424636550, "creation_date": 1424636208, "answer_id": 28662725, "question_id": 28662294, "link": "https://stackoverflow.com/questions/28662294/cabal-failing-to-install-vector-space-package/28662725#28662725", "title": "Cabal failing to install vector-space package", "body": "<p>As far as I can see from browsing on Hackage, <code>spacepart</code> is fixed to use a <em>very</em> old version of <code>vector-space</code> (0.5.*), and that version's <code>Data.LinearMap</code> contains the suspicious import line</p>\n\n<pre><code>import Data.MemoTrie      ((:-&gt;:)(..))\n</code></pre>\n\n<p>which simply <em>doesn't</em> import <code>HasTrie</code>.  My guess is that at some time in the past, this actually worked, because <code>(:-&gt;:)</code> is a data family defined inside <code>HasTrie</code>, but that GHC has since been changed so it doesn't.</p>\n\n<p><em>Possible</em> dirty fix: I note that until 0.5.2, it simply says</p>\n\n<pre><code>import Data.MemoTrie\n</code></pre>\n\n<p>I just tried installing with</p>\n\n<pre><code>cabal install spacepart vector-space-0.5.2\n</code></pre>\n\n<p>and it seemed to work.</p>\n"}], "owner": {"reputation": 375, "user_id": 4232796, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/42912716b8f59e0f6cfd0cbbe6a74bdf?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle McKean", "link": "https://stackoverflow.com/users/4232796/kyle-mckean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1424636550, "creation_date": 1424633543, "last_edit_date": 1495541188, "question_id": 28662294, "link": "https://stackoverflow.com/questions/28662294/cabal-failing-to-install-vector-space-package", "title": "Cabal failing to install vector-space package", "body": "<p>When I try to install the spacepart package using cabal install it tries to compile a dependency vector-space but when vector-space tries to compile a module it exports \"Data.LinearMap\" I get the error \"Not in scope type constructor or class \"HasTrie\". After I did some digging HasTrie is a class exported by the MemoTrie package. Thing is I have MemoTrie installed and MemoTrie exports \"HasTrie\". What is wrong here? \nAlso this stack overflow post doesnt help so this isnt a duplicate question: <a href=\"https://stackoverflow.com/questions/22397892/haskell-package-vector-space-fails-at-compile-time\">Haskell package vector-space fails at compile time</a>\n-Thank you for your time</p>\n"}, {"tags": ["haskell", "syntax"], "answers": [{"comments": [{"owner": {"reputation": 4976, "user_id": 204851, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/fc2292d408e831e2d3ed77b8964e5ccf?s=128&d=identicon&r=PG", "display_name": "Wickoo", "link": "https://stackoverflow.com/users/204851/wickoo"}, "edited": false, "score": 1, "creation_date": 1424630887, "post_id": 28661588, "comment_id": 45618707, "body": "Thanks! I think from the Happy&#39;s grammar I can figure it out what&#39;s going on, but these LALR grammars are so painful. Very surprising that that a Language designed by academics doesn&#39;t have a BNF grammar for its extensions!"}], "tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": true, "score": 7, "last_activity_date": 1424630122, "last_edit_date": 1424630122, "creation_date": 1424629775, "answer_id": 28661588, "question_id": 28661475, "link": "https://stackoverflow.com/questions/28661475/what-is-the-grammar-rule-for-this-haskell-code/28661588#28661588", "title": "What is the grammar rule for this Haskell code?", "body": "<p>That's an <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/type-families.html#assoc-decl\">associated type family declaration</a>, part of the <code>TypeFamilies</code> extension.</p>\n\n<p>It's basically used inside a class declaration to tell that the class has a type associated to each instance of it.</p>\n\n<p>I don't remember any place that has nicely laid out BNF grammar for extensions, although I did once find <a href=\"https://github.com/ghc/ghc/blob/master/compiler/parser/Parser.y\">GHC's Happy grammar</a> in its repository.</p>\n"}], "owner": {"reputation": 4976, "user_id": 204851, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/fc2292d408e831e2d3ed77b8964e5ccf?s=128&d=identicon&r=PG", "display_name": "Wickoo", "link": "https://stackoverflow.com/users/204851/wickoo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 28661588, "answer_count": 1, "score": 5, "last_activity_date": 1424630122, "creation_date": 1424629206, "question_id": 28661475, "link": "https://stackoverflow.com/questions/28661475/what-is-the-grammar-rule-for-this-haskell-code", "title": "What is the grammar rule for this Haskell code?", "body": "<p>I have basic knowledge of Haskell (so forgive me if my question looks trivial for Haskellers here) and recently have been looking into the syntax of Haskell. In the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch10.html#x17-18000010.5\">Haskell 2010 report</a> there is only one place that keyword \"type\" is used:</p>\n\n<pre><code>topdecl ::=  \"type\" simpletype \"=\" type\n</code></pre>\n\n<p>And as can be seen, there is always a <code>\"=\"</code> is required. In one Haskell file, I see this piece of code:</p>\n\n<pre><code>type Key m :: *\n</code></pre>\n\n<p>taken from <a href=\"https://github.com/ghc/ghc/blob/master/compiler/coreSyn/TrieMap.hs\">TrieMap.hs</a> line 61.</p>\n\n<p>which doesn't comply to the rule. I suspect this is a GHC extension or something\nsimilar. Can someone point out to me which grammar rule this piece of code conforms to?\nBTW, I didn't find the grammar rules for extensions and had to guess many of them, are there documented somewhere?</p>\n"}, {"tags": ["validation", "parsing", "haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1424629041, "post_id": 28661248, "comment_id": 45618104, "body": "Have you tried one of the tutorials for the common parser combinator libraries, or for the standard Haskell lexer/parser generators alex and happy? More to the point: what have you tried, and where did it go wrong?"}, {"owner": {"reputation": 1494, "user_id": 1188670, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/HEXZx.png?s=128&g=1", "display_name": "Vektorweg", "link": "https://stackoverflow.com/users/1188670/vektorweg"}, "edited": false, "score": 1, "creation_date": 1424647716, "post_id": 28661248, "comment_id": 45624148, "body": "In <code>parsec</code> its checked by something like <code>Prelude Text.Parsec Control.Monad&gt; parse (liftM2 (:) letter (many alphaNum)) &quot;&quot; &quot;123costumer&quot;</code> . I recommend not to build a storable format, because its likely that it isn&#39;t worth the trouble. Just use a parser combinator or a simple function in place. Like <code>isAlpha (head xs) &amp;&amp; all isAlphaNum xs</code>."}], "answers": [{"comments": [{"owner": {"reputation": 463, "user_id": 2976251, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efe393a6e3c9fe3857dc7b27ff5db473?s=128&d=identicon&r=PG&f=1", "display_name": "hasufell", "link": "https://stackoverflow.com/users/2976251/hasufell"}, "reply_to_user": {"reputation": 1589, "user_id": 669105, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/0a6e558303511ebdeb147dab1867529b?s=128&d=identicon&r=PG", "display_name": "oazabir", "link": "https://stackoverflow.com/users/669105/oazabir"}, "edited": false, "score": 0, "creation_date": 1425070637, "post_id": 28664448, "comment_id": 45826515, "body": "The only difficult part about parser is to understand how the types actually work together. That&#39;s why the above assignment from cis194 is so helpful. It deeply explains the core idea behind the parser data structure and how the record syntax is used to &quot;run&quot; the parser (actually that design pattern is also used for state monads and other things, so it&#39;s useful to understand)."}], "tags": [], "owner": {"reputation": 463, "user_id": 2976251, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efe393a6e3c9fe3857dc7b27ff5db473?s=128&d=identicon&r=PG&f=1", "display_name": "hasufell", "link": "https://stackoverflow.com/users/2976251/hasufell"}, "is_accepted": false, "score": 1, "last_activity_date": 1424646249, "creation_date": 1424646249, "answer_id": 28664448, "question_id": 28661248, "link": "https://stackoverflow.com/questions/28661248/haskell-grammar-to-validate-a-string-in-specific-format/28664448#28664448", "title": "Haskell grammar to validate a string in specific format", "body": "<p>I'd start with a simple parser and see if that satisfies your needs, unless you can explain why this is not enough for your use case. Parsers are pretty straightforward. I'll give a very simple (and maybe incomplete) example with <a href=\"https://hackage.haskell.org/package/attoparsec-0.12.1.3/docs/Data-Attoparsec-ByteString-Char8.html\" rel=\"nofollow\">attoparsec</a>:</p>\n\n<pre><code>import Control.Applicative\nimport Data.Attoparsec.ByteString.Char8\nimport qualified Data.ByteString.Char8 as B\n\n\nvalidateVar :: B.ByteString -&gt; Bool\nvalidateVar bstr = case parseOnly variableP bstr of\n  Right _ -&gt; True\n  Left  _ -&gt; False\n\nvariableP :: Parser String\nvariableP =\n  (++)\n  &lt;$&gt; many1 letter_ascii            -- must start with one or more letters\n  &lt;*&gt; many (digit &lt;|&gt; letter_ascii) -- then can have any combination of letters/digits\n  &lt;* endOfInput                     -- make sure we don't ignore invalid trailing chars\n</code></pre>\n\n<p>variableP combines parsers via <code>&lt;*&gt;</code> and will require you to handle both results of <code>many1 letter_ascii</code> and <code>many (digit &lt;|&gt; letter_ascii)</code>. In this case we just concatenate both results via <code>(++)</code>, check the types of <code>many1</code>, <code>many</code>, <code>letter_ascii</code> and <code>digit</code>. The <code>&lt;*</code> says \"parse this, but discard the result of the right hand parser\" (otherwise you'd have to handle 3 results).</p>\n\n<p>That means if you run the parser on \"abc123\" you'll get back \"abc123\". If you parse \"1abc\" the parser will fail.</p>\n\n<p>Check the type of parseOnly:</p>\n\n<pre><code>parseOnly :: Parser a -&gt; ByteString -&gt; Either String a\n</code></pre>\n\n<p>We pass it our parser and the bytestring it should parse. If the parser fails we'll get <code>Left &lt;something went wrong&gt;</code>. If the parser succeeds, we'll get <code>Right &lt;our string&gt;</code>. The cool thing is... instead of just giving a string on success, we could do pretty much anything with the results in variableP, as in: use something different than <code>(++)</code>, convert the types and whatnot (mind that the Parser type might also have to change then).</p>\n\n<p>Since we only care if the parser succeeded in <code>validateVar</code>, we can just ignore the result in either case.</p>\n\n<p>So instead of defining GADTs for your grammar, you just define Parsers.</p>\n\n<p>You might also find this link useful for a tutorial: <a href=\"http://www.seas.upenn.edu/~cis194/fall14/spring13/lectures.html\" rel=\"nofollow\">http://www.seas.upenn.edu/~cis194/fall14/spring13/lectures.html</a> (week 10 and 11, including the assignments where you basically write your own little parser library)</p>\n"}, {"tags": [], "owner": {"reputation": 23, "user_id": 1939225, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8add8ebb50f1af2aea0dfd3de57800d?s=128&d=identicon&r=PG&f=1", "display_name": "Oleg Tsybulskyi", "link": "https://stackoverflow.com/users/1939225/oleg-tsybulskyi"}, "is_accepted": false, "score": 0, "last_activity_date": 1451971875, "creation_date": 1451971875, "answer_id": 34604791, "question_id": 28661248, "link": "https://stackoverflow.com/questions/28661248/haskell-grammar-to-validate-a-string-in-specific-format/34604791#34604791", "title": "Haskell grammar to validate a string in specific format", "body": "<p>I've taken this from <a href=\"https://github.com/feuerbach/regex-applicative/wiki/Examples\" rel=\"nofollow\">examples of regex-applicative</a></p>\n\n<pre><code>import Text.Regex.Applicative\nimport Data.Char\nimport Data.Maybe\n\nvarNameFormat :: RE Char String\nvarNameFormat = (:) &lt;$&gt; psym isAlpha &lt;*&gt; many (psym isAlphaNum)\n\nvalidate :: RE Char String -&gt; String -&gt; Bool\nvalidate re str = isJust $ str =~ re\n</code></pre>\n\n<p>You will have</p>\n\n<pre><code>*Main&gt; validate varNameFormat \"a123\"\nTrue\n*Main&gt; validate varNameFormat \"1a23\"\nFalse\n</code></pre>\n"}], "owner": {"reputation": 1589, "user_id": 669105, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/0a6e558303511ebdeb147dab1867529b?s=128&d=identicon&r=PG", "display_name": "oazabir", "link": "https://stackoverflow.com/users/669105/oazabir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 693, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1451971875, "creation_date": 1424628079, "question_id": 28661248, "link": "https://stackoverflow.com/questions/28661248/haskell-grammar-to-validate-a-string-in-specific-format", "title": "Haskell grammar to validate a string in specific format", "body": "<p>I would like to define a grammar in Haskell that matches a string in format \"XY12XY\"  (some alpha followed by some numerics), eg variable names in programming languages. </p>\n\n<p><code>customer123</code> is a valid variable name, but '123customer' is not a valid variable name.</p>\n\n<p>I am at a loss how to define the grammar and write a validator function that would validate whether a given string is valid variable name. I have been trying to understand and adapt the parser example at: <a href=\"https://wiki.haskell.org/GADT\" rel=\"nofollow\">https://wiki.haskell.org/GADT</a> but I just can't get my head around how to tweak it to make it work for my need. </p>\n\n<p>If any kind fellow Haskell gurus would help me define this please:</p>\n\n<pre><code>validate :: ValidFormat -&gt; String -&gt; Bool\nvalidate f [] = False\nvalidate f s = ...\n</code></pre>\n\n<p>I would like to define the ValidFormat grammar as:</p>\n\n<pre><code>varNameFormat = Concat Alpha $ Concat Alpha Numeric \n</code></pre>\n"}, {"tags": ["haskell", "set"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1424624851, "post_id": 28660565, "comment_id": 45616718, "body": "You can use <code>deriving (Show, Ord, Eq)</code> to derive the needed instances, so the <code>Ord</code> requirement is not a big deal."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1424624871, "post_id": 28660565, "comment_id": 45616724, "body": "@chi, I&#39;m thinking a trie would be more appropriate."}, {"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1424641031, "post_id": 28660565, "comment_id": 45622053, "body": "Another common approach to implementing sets is to use a hash map. Of course, this requires specifying a hashing function. For a generic implementation, see how the Hashable class is defined <a href=\"https://hackage.haskell.org/package/hashable-1.1.2.2/docs/Data-Hashable.html#t:Hashable\" rel=\"nofollow noreferrer\">(link)</a> and how (pure) hash maps are implemented <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.5.1/docs/Data-HashMap-Lazy.html\" rel=\"nofollow noreferrer\">(link)</a>"}], "answers": [{"comments": [{"owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "edited": false, "score": 0, "creation_date": 1424633767, "post_id": 28660652, "comment_id": 45619677, "body": "Could you say please explain, <code>Having only Eq will give you a horrifyingly inefficient one.</code>?"}, {"owner": {"reputation": 1679, "user_id": 1722752, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef35ad86b627ba3176b6aea8a184f51c?s=128&d=identicon&r=PG", "display_name": "MigMit", "link": "https://stackoverflow.com/users/1722752/migmit"}, "edited": false, "score": 1, "creation_date": 1424635081, "post_id": 28660652, "comment_id": 45620145, "body": "Basically, if you want to, say, check whether an element is in this set or not, your only option is to check all elements in the set. With <code>Ord</code> you&#39;d be able to use binary search, which is MUCH faster."}, {"owner": {"reputation": 3521, "user_id": 658087, "user_type": "registered", "accept_rate": 18, "profile_image": "https://i.stack.imgur.com/hvS4q.png?s=128&g=1", "display_name": "JD\u0142ugosz", "link": "https://stackoverflow.com/users/658087/jd%c5%82ugosz"}, "edited": false, "score": 0, "creation_date": 1424652077, "post_id": 28660652, "comment_id": 45625377, "body": "Doesn&#39;t sometjing like <i>scrap your boilerplate</i> allow a generic structure based implementation on <i>any</i> data types? Or is the Arr too opaque and need explicit support added for the generic decomposition traversal?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 3521, "user_id": 658087, "user_type": "registered", "accept_rate": 18, "profile_image": "https://i.stack.imgur.com/hvS4q.png?s=128&g=1", "display_name": "JD\u0142ugosz", "link": "https://stackoverflow.com/users/658087/jd%c5%82ugosz"}, "edited": false, "score": 0, "creation_date": 1424652668, "post_id": 28660652, "comment_id": 45625529, "body": "@jdlugosz, I don&#39;t actually know. I know approximately nothing about GHC generics. As far as I can <i>tell</i>, the <code>generic-trie</code> package does not support that, but I <i>imagine</i> specialized <code>Array</code> support could be added without any theoretical difficulties."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 9, "last_activity_date": 1424648255, "last_edit_date": 1592644375, "creation_date": 1424624911, "answer_id": 28660652, "question_id": 28660565, "link": "https://stackoverflow.com/questions/28660565/set-like-data-structure-without-ord/28660652#28660652", "title": "Set-like Data Structure without `Ord`?", "body": "<p>You will pretty much always need at least <code>Eq</code> to implement a set (or at least the <em>ability</em> to write an <code>Eq</code> instance, whether or not one exists). Having <em>only</em> <code>Eq</code> will give you a horrifyingly inefficient one. You can improve this with <code>Ord</code> or with <code>Hashable</code>.</p>\n<p>One thing you might want to do here is use a trie, which will let you take advantage of the nested structure instead of constantly fighting it.</p>\n<p>You can start by looking at <a href=\"https://hackage.haskell.org/package/generic-trie-0.3.0.1/docs/Data-GenericTrie.html\" rel=\"nofollow noreferrer\">generic-trie</a>. This does not appear to offer anything for your <code>Array</code> pieces, so you may have to add some things.</p>\n<h3>Why <code>Eq</code> is not good enough</h3>\n<p>The simplest way to implement a set is using a list:</p>\n<pre><code>type Set a = [a]\n\nmember a [] = False\nmember (x:xs) | a == x = True\n              | otherwise = member a xs\n\ninsert a xs | member a xs = xs\n            | otherwise = a:xs\n</code></pre>\n<p>This is no good (unless there are very few elements), because you may have to traverse the entire list to see if something is a member.</p>\n<p>To improve matters, we need to use some sort of tree:</p>\n<pre><code>data Set a = Node a (Set a) (Set a) | Tip\n</code></pre>\n<p>There are a lot of different kinds of trees we can make, but in order to use them, we must be able, at each node, to decide which of the branches to take. If we only have <code>Eq</code>, there is no way to choose the right one. If we have <code>Ord</code> (or <code>Hashable</code>), that gives us a way to choose.</p>\n<p>The trie approach structures the tree based on the structure of the data. When your type is deeply nested (a list of arrays of records of lists...), either hashing or comparison can be very expensive, so the trie will probably be better.</p>\n<h3>Side note on <code>Ord</code></h3>\n<p>Although I don't think you should use the <code>Ord</code> approach here, it very often is the right one. In some cases, your particular type may not <em>have</em> a natural ordering, but there is <em>some</em> efficient way to order its elements. In this case you can play a trick with <code>newtype</code>:</p>\n<pre><code>newtype WrappedThing = Wrap Thing\n\ninstance Ord WrappedThing where\n  ....\n\nnewtype ThingSet = ThingSet (Set WrappedThing)\ninsertThing thing (ThingSet s) = ThingSet (insert (Wrap thing) s)\nmemberThing thing (ThingSet s) = member (WrapThing) s\n...\n</code></pre>\n<p>Yet another approach, in some cases, is to define a &quot;base type&quot; that is an <code>Ord</code> instance, but only export a <code>newtype</code> wrapper around it; you can use the base type for all your internal functions, but the exported type is completely abstract (and not an <code>Ord</code> instance).</p>\n"}], "owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 598, "favorite_count": 0, "accepted_answer_id": 28660652, "answer_count": 1, "score": 5, "last_activity_date": 1424648255, "creation_date": 1424624325, "question_id": 28660565, "link": "https://stackoverflow.com/questions/28660565/set-like-data-structure-without-ord", "title": "Set-like Data Structure without `Ord`?", "body": "<p>Given the following types:</p>\n\n<pre><code>import Data.Set as Set\n\n-- http://json.org/\n\ntype Key = String\n\ndata Json = JObject Key (Set JValue)\n            | JArray JArr\n            deriving Show\n\ndata JObj = JObj Key JValue\n            deriving Show\n\ndata JArr = Arr [JValue] deriving Show\n\ndata Null = Null deriving Show\n\ndata JValue = Num Double\n              | S String\n              | B Bool\n              | J JObj\n              | Array JArr\n              | N Null\n               deriving Show\n</code></pre>\n\n<p>I created a <code>JObject Key (Set Value)</code> with a single element:</p>\n\n<pre><code>ghci&gt; JObject \"foo\" (Set.singleton (B True))\nJObject \"foo\" (fromList [B True])\n</code></pre>\n\n<p>But, when I tried to create a 2-element Set, I got a compile-time error:</p>\n\n<pre><code>ghci&gt; JObject \"foo\" (Set.insert (Num 5.5) $ Set.singleton (B True))\n\n&lt;interactive&gt;:159:16:\n    No instance for (Ord JValue) arising from a use of \u2018insert\u2019\n    In the expression: insert (Num 5.5)\n    In the second argument of \u2018JObject\u2019, namely\n      \u2018(insert (Num 5.5) $ singleton (B True))\u2019\n    In the expression:\n      JObject \"foo\" (insert (Num 5.5) $ singleton (B True))\n</code></pre>\n\n<p>So I asked, \"Why is it necessary for <code>JValue</code> to implement the <code>Ord</code> typeclass?\"</p>\n\n<p>The docs on <a href=\"https://downloads.haskell.org/~ghc/7.8.2/docs/html/libraries/containers-0.5.5.1/Data-Set.html\" rel=\"noreferrer\">Data.Set</a> answer that question.</p>\n\n<blockquote>\n  <p>The implementation of Set is based on size balanced binary trees (or trees of bounded balance)</p>\n</blockquote>\n\n<p>But, is there a Set-like, i.e. non-ordered, data structure that does not require <code>Ord</code>'s implementation that I can use?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1424625357, "post_id": 28660305, "comment_id": 45616880, "body": "&quot; Is there a way to convert the sqlValues to be only &quot;String&quot;?&quot; Can you explain a little more what you&#39;re asking?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424625396, "post_id": 28660305, "comment_id": 45616890, "body": "Minor point: don&#39;t use <code>length ... == 0</code>, use <code>null ...</code> instead, or transform the <code>if</code> into a <code>case ... of [] -&gt; ... ; _ -&gt; ...</code>. The <code>length</code> function traverses the whole list, while <code>null</code> checks only the first cell."}, {"owner": {"reputation": 118, "user_id": 2714517, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/024f73dad36ad2bf54aec00e735ad6f8?s=128&d=identicon&r=PG&f=1", "display_name": "rolandvarga", "link": "https://stackoverflow.com/users/2714517/rolandvarga"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424625821, "post_id": 28660305, "comment_id": 45617003, "body": "@chi - thank you I didn&#39;t know that!"}, {"owner": {"reputation": 118, "user_id": 2714517, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/024f73dad36ad2bf54aec00e735ad6f8?s=128&d=identicon&r=PG&f=1", "display_name": "rolandvarga", "link": "https://stackoverflow.com/users/2714517/rolandvarga"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1424625907, "post_id": 28660305, "comment_id": 45617029, "body": "@jberryman - I meant is there a way to only write the records to the file instead of the column names and everything else from the result?"}], "owner": {"reputation": 118, "user_id": 2714517, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/024f73dad36ad2bf54aec00e735ad6f8?s=128&d=identicon&r=PG&f=1", "display_name": "rolandvarga", "link": "https://stackoverflow.com/users/2714517/rolandvarga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1424624929, "creation_date": 1424622935, "last_edit_date": 1424624929, "question_id": 28660305, "link": "https://stackoverflow.com/questions/28660305/saving-sqlvalue-to-file", "title": "Saving sqlValue to file", "body": "<p>I am pretty new to Haskell and try to write scripts which I have already completed in other languages. One of these is getting database connection details from a config file, running a query in that database and writing the result to a file for further analysis. I have completed it the following way: </p>\n\n<pre><code>import System.IO\nimport Data.Time\nimport Data.ConfigFile\nimport Data.Either.Utils\nimport Database.HDBC.Sqlite3 (connectSqlite3)\nimport Database.HDBC\n\ngetTableList :: String -&gt; IO ()\ngetTableList group = do\n    conn &lt;- connectSqlite3 \"/code/db_examples/microdwh.db\"\n    stmt &lt;- prepare conn \"SELECT tbl_name FROM list_of_tables WHERE group_name = ?\"\n    execute stmt [toSql group]\n    rows &lt;- fetchAllRowsAL' stmt\n\n    if length rows &lt;= 0 then putStrLn \"NO TABLES WERE FOUND FOR THE GIVEN GROUP NAME\"\n                        else writeFile \"/path/to/tables.lst\" $ show rows\n\nmain = do\n    val &lt;- readfile emptyCP \"/code/db_examples/test.cfg\"\n    let cp = forceEither val\n    let grp = forceEither $ get cp \"SECT1\" \"group\"\n    zt &lt;- getZonedTime\n    putStrLn $ show zt ++ \": GETTING TABLE LIST...\"\n    getTableList grp\n    putStrLn \"DONE\"\n</code></pre>\n\n<p>Luckily the code executes, but I would like to ask if there is a better way to do this? Is there a way to convert the sqlValues to be only \"String\"? I understand that Haskell is a functional language but this is the only approach I am so far familiar with..</p>\n"}, {"tags": ["haskell", "markdown", "ipython-notebook", "hakyll"], "answers": [{"tags": [], "owner": {"reputation": 24441, "user_id": 137794, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d4ea6148fef59dff9fa0fc8c309496a?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/137794/matt"}, "is_accepted": false, "score": 1, "last_activity_date": 1424624874, "creation_date": 1424624874, "answer_id": 28660643, "question_id": 28660234, "link": "https://stackoverflow.com/questions/28660234/ipython-notebooks-to-hakyll-posts/28660643#28660643", "title": "ipython notebooks to hakyll posts", "body": "<p>I think you will have to dig a bit in the code (maybe slighly in python).\nNbviewer is a library, so you can import it and do what the command line does, but manually to not create subfolder. Than you want to inject than into hakyll to create new pages. You then just want to inject nbviewer css into your hakyll.</p>\n\n<p>Worse case you use nbconvert to create the files in a temp directory, \nand read them again from haskell. </p>\n"}], "owner": {"reputation": 2355, "user_id": 1219701, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/gZhx7.png?s=128&g=1", "display_name": "alberto", "link": "https://stackoverflow.com/users/1219701/alberto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1424905947, "creation_date": 1424622623, "last_edit_date": 1424905947, "question_id": 28660234, "link": "https://stackoverflow.com/questions/28660234/ipython-notebooks-to-hakyll-posts", "title": "ipython notebooks to hakyll posts", "body": "<p>I have a static blog made with hakyll, and some ipython notebooks -I'd like to share. </p>\n\n<p><strong>My solution</strong></p>\n\n<pre><code>ipython nbconvert --to markdown notebook.ipynb\n</code></pre>\n\n<p>Gives me:</p>\n\n<pre><code>notebook.md\n/notebook_files/\n</code></pre>\n\n<p><code>notebook_files</code> contains:</p>\n\n<pre><code>notebook_1.png\nnotebook_2.png\nnotebook_3.png\n</code></pre>\n\n<p>I move the .png files into my <code>/images</code> folder.</p>\n\n<p>I copy the <code>notebook.md</code> to the <code>/posts</code> folder.</p>\n\n<p>In <code>notebook.md</code> I search:</p>\n\n<pre><code>![png](notebook_files/notebook_1.png)\n</code></pre>\n\n<p>and replace it by: </p>\n\n<pre><code>![png](/images/notebook_1.png)\n</code></pre>\n\n<p>Also, I need to add python prefixes to the code so that it detects python syntax:</p>\n\n<pre><code>```phyton\ncode\n```\n</code></pre>\n\n<p>So, doable, but painful if I have to repeat it for evert post. </p>\n\n<p><strong>Question:</strong></p>\n\n<p>Is there some way, either standard or smarter, to do this?</p>\n"}, {"tags": ["haskell", "monads"], "answers": [{"comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1424650696, "post_id": 28660214, "comment_id": 45624983, "body": "As an aside, I would argue that defining this function isn&#39;t even worth it, because it isn&#39;t obvious by the name what it does, and <code>either fail</code> is only 1 character longer than <code>liftEither</code>."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424650808, "post_id": 28660214, "comment_id": 45625024, "body": "@user2407038 Agree with that. I would just directly use <code>either</code>. :)"}, {"owner": {"reputation": 1998, "user_id": 79475, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/a7d29c825581e5a220b2ae0c27e4cdce?s=128&d=identicon&r=PG", "display_name": "The_Ghost", "link": "https://stackoverflow.com/users/79475/the-ghost"}, "edited": false, "score": 0, "creation_date": 1424781555, "post_id": 28660214, "comment_id": 45682402, "body": "Yes, I agree too! I just wrote the question as a function to be more precise. Thanks for the simplification and the answer!"}], "tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 5, "last_activity_date": 1424622532, "creation_date": 1424622532, "answer_id": 28660214, "question_id": 28660135, "link": "https://stackoverflow.com/questions/28660135/lifting-from-either-to-io/28660214#28660214", "title": "Lifting from Either to IO", "body": "<p>Something like this using the <code>either</code> function from <code>Data.Either</code>:</p>\n\n<pre><code>liftEither :: Monad m =&gt; (t -&gt; m a) -&gt; Either String t -&gt; m a\nliftEither f xs = either fail f xs\n</code></pre>\n\n<p>Or even simpler:</p>\n\n<pre><code>liftEither :: Monad m =&gt; (t -&gt; m a) -&gt; Either String t -&gt; m a\nliftEither = either fail\n</code></pre>\n"}], "owner": {"reputation": 1998, "user_id": 79475, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/a7d29c825581e5a220b2ae0c27e4cdce?s=128&d=identicon&r=PG", "display_name": "The_Ghost", "link": "https://stackoverflow.com/users/79475/the-ghost"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1248, "favorite_count": 0, "accepted_answer_id": 28660214, "answer_count": 1, "score": 2, "last_activity_date": 1424622532, "creation_date": 1424621997, "question_id": 28660135, "link": "https://stackoverflow.com/questions/28660135/lifting-from-either-to-io", "title": "Lifting from Either to IO", "body": "<p>I would like to convert from Either monad into IO without any clues from Either. Is there more elegant way to do it?</p>\n\n<p>I have written this function, but I would like to use something from a library or Prelude:</p>\n\n<pre><code>liftEither :: forall t (m :: * -&gt; *) a. Monad m =&gt; (t -&gt; m a) -&gt; Either String t -&gt; m a\nliftEither f (Right a)  = f a\nliftEither _ (Left msg) = fail msg\n</code></pre>\n"}, {"tags": ["multithreading", "performance", "haskell", "parallel-processing", "ghc"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1424631370, "post_id": 28660035, "comment_id": 45618867, "body": "I played with this for a bit, and was able to get some decent concurrency, but I think it was still slower than single-threaded execution on 7.8.3. I would suggest using deepseq or the like to force evaluation, rather than <code>print</code>ing anything (this was <i>really</i> skewing runtime for me), and also start from a base with a <code>Particle</code> type with strict fields, compiling with <code>-funbox-strict-fields</code>"}, {"owner": {"reputation": 327, "user_id": 1179127, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oxV4A.jpg?s=128&g=1", "display_name": "Alex Beal", "link": "https://stackoverflow.com/users/1179127/alex-beal"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1424635414, "post_id": 28660035, "comment_id": 45620261, "body": "@jberryman Thanks for taking a look! I&#39;ll give these suggestions a try. Did printing the output skew the runtime even when the output was redirected to /dev/null?"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1424636682, "post_id": 28660035, "comment_id": 45620655, "body": "Yes, although I&#39;m sorry I wasn&#39;t very methodical so some of that might be off base"}], "owner": {"reputation": 327, "user_id": 1179127, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oxV4A.jpg?s=128&g=1", "display_name": "Alex Beal", "link": "https://stackoverflow.com/users/1179127/alex-beal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 115, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1424629266, "creation_date": 1424621485, "last_edit_date": 1424629266, "question_id": 28660035, "link": "https://stackoverflow.com/questions/28660035/slowdown-when-using-ghc-parallel-strategies", "title": "Slowdown when using ghc parallel strategies", "body": "<p>In order to learn about GHC's parallel strategies, I've written a simple particle simulator, that, given a particle's position, velocity, and acceleration, will project that particle's path forward.</p>\n\n<pre><code>import Control.Parallel.Strategies\n\n-- Use phantom a to store axis.\nnewtype Pos a = Pos Double deriving Show\nnewtype Vel a = Vel Double deriving Show\nnewtype Acc a = Acc Double deriving Show\nnewtype TimeStep = TimeStep Double deriving Show\n\n-- Phantom axis\ndata X\ndata Y\n\n-- Position, velocity, acceleration for a particle.\ndata Particle = Particle (Pos X) (Pos Y) (Vel X) (Vel Y) (Acc X) (Acc Y) deriving (Show)\n\nstepParticle :: TimeStep -&gt; Particle -&gt; Particle\nstepParticle ts (Particle x y xv yv xa ya) =\n  Particle x' y' xv' yv' xa' ya'\n  where\n    (x', xv', xa') = step ts x xv xa\n    (y', yv', ya') = step ts y yv ya\n\n-- Given a position, velocity, and accel, calculate the pos, vel, acc after\n-- a given TimeStep.\nstep :: TimeStep -&gt; Pos a -&gt; Vel a -&gt; Acc a -&gt; (Pos a, Vel a, Acc a)\nstep (TimeStep ts) (Pos p) (Vel v) (Acc a) = (Pos p', Vel v', Acc a)\n  where\n    v' = ts * a + v\n    p' = ts * v + p\n\n-- Build a list of lazy infinite lists of a particles' travel\n-- with each update a TimeStep apart. Evaluate each inner list in\n-- parallel.\nsimulateParticlesPar :: TimeStep -&gt; [Particle] -&gt; [[Particle]]\nsimulateParticlesPar ts = withStrategy (parList (parBuffer 250 particleStrategy))\n                          . fmap (simulateParticle ts)\n\n-- Build a lazy infinite list of the particle's travel with each\n-- update being a TimeStep apart.\nsimulateParticle :: TimeStep -&gt; Particle -&gt; [Particle]\nsimulateParticle ts m = m' : simulateParticle ts m'\n  where\n    m' = stepParticle ts m\n\nparticleStrategy :: Strategy Particle\nparticleStrategy (Particle (Pos x) (Pos y) (Vel xv) (Vel yv) (Acc xa) (Acc ya)) = do\n  x' &lt;-  rseq x\n  y' &lt;-  rseq y\n  xv' &lt;- rseq xv\n  yv' &lt;- rseq yv\n  xa' &lt;- rseq xa\n  ya' &lt;- rseq ya\n  return $ Particle (Pos x') (Pos y') (Vel xv') (Vel yv') (Acc xa') (Acc ya')\n\nmain :: IO ()\nmain = do\n  let world = replicate 100 (Particle (Pos 0) (Pos 0) (Vel 1) (Vel 1) (Acc 0) (Acc 0))\n      ts = TimeStep 0.1\n  print $ fmap (take 10000) (simulateParticlesPar ts world)\n</code></pre>\n\n<p>For each particle, I create a lazy infinite list projecting the particle's path into the future. I start out with 100 of these particles and project these all forward, my intention being to project each of these forward in parallel (roughly a spark per infinite list). If I project these lists forward long enough, I'd expect a significant speedup. Unfortunately, I see a slight slow down.</p>\n\n<p>Compilation: <code>ghc phys.hs -rtsopts -threaded -eventlog -O2</code></p>\n\n<p>With 1 thread:</p>\n\n<pre><code>$ ./phys +RTS -N1 -sstderr -ls &gt; /dev/null\n  24,264,983,224 bytes allocated in the heap\n     441,881,088 bytes copied during GC\n       1,942,848 bytes maximum residency (104 sample(s))\n          75,880 bytes maximum slop\n               7 MB total memory in use (0 MB lost due to fragmentation)\n\n                                    Tot time (elapsed)  Avg pause  Max pause\n  Gen  0     46820 colls,     0 par    0.82s    0.88s     0.0000s    0.0039s\n  Gen  1       104 colls,     0 par    0.23s    0.23s     0.0022s    0.0037s\n\n  TASKS: 4 (1 bound, 3 peak workers (3 total), using -N1)\n\n  SPARKS: 1025000 (25 converted, 0 overflowed, 0 dud, 28680 GC'd, 996295 fizzled)\n\n  INIT    time    0.00s  (  0.00s elapsed)\n  MUT     time    9.90s  ( 10.09s elapsed)\n  GC      time    1.05s  (  1.11s elapsed)\n  EXIT    time    0.00s  (  0.00s elapsed)\n  Total   time   10.95s  ( 11.20s elapsed)\n\n  Alloc rate    2,451,939,648 bytes per MUT second\n\n  Productivity  90.4% of total user, 88.4% of total elapsed\n\ngc_alloc_block_sync: 0\nwhitehole_spin: 0\ngen[0].sync: 0\ngen[1].sync: 0\n</code></pre>\n\n<p>With 2 threads:</p>\n\n<pre><code>$ ./phys +RTS -N2 -sstderr -ls &gt; /dev/null\n  24,314,635,280 bytes allocated in the heap\n     457,603,240 bytes copied during GC\n       1,962,152 bytes maximum residency (104 sample(s))\n         119,824 bytes maximum slop\n               7 MB total memory in use (0 MB lost due to fragmentation)\n\n                                    Tot time (elapsed)  Avg pause  Max pause\n  Gen  0     46555 colls, 46555 par    1.40s    0.85s     0.0000s    0.0048s\n  Gen  1       104 colls,   103 par    0.42s    0.25s     0.0024s    0.0043s\n\n  Parallel GC work balance: 16.85% (serial 0%, perfect 100%)\n\n  TASKS: 6 (1 bound, 5 peak workers (5 total), using -N2)\n\n  SPARKS: 1025000 (1023572 converted, 0 overflowed, 0 dud, 1367 GC'd, 61 fizzled)\n\n  INIT    time    0.00s  (  0.00s elapsed)\n  MUT     time   11.07s  ( 11.20s elapsed)\n  GC      time    1.82s  (  1.10s elapsed)\n  EXIT    time    0.00s  (  0.00s elapsed)\n  Total   time   12.89s  ( 12.30s elapsed)\n\n  Alloc rate    2,196,259,905 bytes per MUT second\n\n  Productivity  85.9% of total user, 90.0% of total elapsed\n\ngc_alloc_block_sync: 9222\nwhitehole_spin: 0\ngen[0].sync: 0\ngen[1].sync: 2393\n</code></pre>\n\n<p>I have an Intel i5 with 2 cores and 4 threads, and with -N4 it's 2x slower than -N1 (total time ~20 sec).</p>\n\n<p>I've spent quite a bit of time trying different strategies, such as chunking the outer list (so each spark gets more than one stream to project forward) and using rpar for each field in particleStrategy, but I've yet to get any speed up at all.</p>\n\n<p>Below is a zoomed in section of the eventlog under threadscope. As you can see, I'm getting almost no concurrency. Most of the work is being done by HEC0, with some activity from HEC1 interleaved in, but only one HEC is doing work at a time. This is pretty representative of all the strategies I've tried.\n<img src=\"https://i.stack.imgur.com/XnnhA.png\" alt=\"-N2 under threadscope\"></p>\n\n<p>As a sanity check, I've run a few of the example programs from \"Parallel and Concurrent Programming in Haskell\" and also see slow downs on these programs, even though I'm using the same params that give them significant speeds ups in the book! I'm beginning to think there's something wrong with my ghc.</p>\n\n<pre><code>$ ghc --version\nThe Glorious Glasgow Haskell Compilation System, version 7.8.3\n</code></pre>\n\n<p>Installed from: <a href=\"https://ghcformacosx.github.io/\" rel=\"nofollow noreferrer\">https://ghcformacosx.github.io/</a></p>\n\n<p>OS X 10.10.2</p>\n\n<p><strong>Update:</strong></p>\n\n<p>I've found this thread in the ghc tracker on an OS X threaded RTS performance regression: <a href=\"https://ghc.haskell.org/trac/ghc/ticket/7602\" rel=\"nofollow noreferrer\">https://ghc.haskell.org/trac/ghc/ticket/7602</a>. I'm hesitant to blame the compiler, but my -N4 outputs supports this hypothesis. The \"parallel gc word balance\" is terrible:</p>\n\n<pre><code>$ ./phys +RTS -N4 -sstderr -ls &gt; /dev/null\n  24,392,146,832 bytes allocated in the heap\n     481,001,648 bytes copied during GC\n       1,989,272 bytes maximum residency (104 sample(s))\n         181,208 bytes maximum slop\n               8 MB total memory in use (0 MB lost due to fragmentation)\n\n                                    Tot time (elapsed)  Avg pause  Max pause\n  Gen  0     46555 colls, 46555 par    4.80s    1.98s     0.0000s    0.0055s\n  Gen  1       104 colls,   103 par    0.99s    0.39s     0.0037s    0.0048s\n\n  Parallel GC work balance: 7.59% (serial 0%, perfect 100%)\n\n  TASKS: 10 (1 bound, 9 peak workers (9 total), using -N4)\n\n  SPARKS: 1025000 (1023640 converted, 0 overflowed, 0 dud, 1331 GC'd, 29 fizzled)\n\n  INIT    time    0.00s  (  0.01s elapsed)\n  MUT     time   14.85s  ( 13.12s elapsed)\n  GC      time    5.79s  (  2.36s elapsed)\n  EXIT    time    0.00s  (  0.00s elapsed)\n  Total   time   20.65s  ( 15.49s elapsed)\n\n  Alloc rate    1,642,170,155 bytes per MUT second\n\n  Productivity  71.9% of total user, 95.9% of total elapsed\n\ngc_alloc_block_sync: 61429\nwhitehole_spin: 0\ngen[0].sync: 1\ngen[1].sync: 617\n</code></pre>\n\n<p>On the other hand, I don't know if this explains my threadscope output, which shows a lack of any concurrency at all.</p>\n"}, {"tags": ["haskell", "constants", "pattern-synonyms"], "comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1424621755, "post_id": 28659903, "comment_id": 45615664, "body": "&quot;For this solution, I must take care that constructors don&#39;t overlap&quot; Couldn&#39;t you just change the name of the constructors, ASCII_NUL instead of NUL ?"}, {"owner": {"reputation": 1657, "user_id": 4183787, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/XedpJ.png?s=128&g=1", "display_name": "zigazou", "link": "https://stackoverflow.com/users/4183787/zigazou"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1424622701, "post_id": 28659903, "comment_id": 45615997, "body": "It wouldn&#39;t be better than using qualified imports: <code>ASCII ASCII.NUL</code> would be replaced by <code>ASCII\u00a0ASCII_NUL</code> (the ASCII type must be encapsulated in the Mini type if I want to create lists combining many types)"}], "answers": [{"comments": [{"owner": {"reputation": 1657, "user_id": 4183787, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/XedpJ.png?s=128&g=1", "display_name": "zigazou", "link": "https://stackoverflow.com/users/4183787/zigazou"}, "edited": false, "score": 0, "creation_date": 1424623604, "post_id": 28660336, "comment_id": 45616294, "body": "I&#39;d prefer not to use template Haskell. I both am not used to TH and believe (wrongly or not) that TH should be reserved for more complex matter. <a href=\"http://stackoverflow.com/questions/6000511/better-way-to-define-an-enum-in-haskell#6000818\">There&#39;s a solution here</a> allowing you to reduce the amount of code one should write."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1424623112, "creation_date": 1424623112, "answer_id": 28660336, "question_id": 28659903, "link": "https://stackoverflow.com/questions/28659903/how-to-handle-lots-of-constants-in-haskell/28660336#28660336", "title": "How to handle lots of constants in Haskell?", "body": "<p>The second thing that comes to mind (after something too ugly to think about) is to <em>use</em> <code>Enum</code> without always <em>deriving</em> it. So you could use the same <code>ASCII</code> you described, but</p>\n\n<pre><code>instance Enum ASCII where\n  fromEnum a = case a of\n    NUL -&gt; 0x00\n    ...\n    US -&gt; 0x1f\n  toEnum a = case a of\n    0x -&gt; NUL\n    0x1f -&gt; US\n</code></pre>\n\n<p>I'm not familiar with Template Haskell, but I would venture to guess that you could almost certainly write something using it that would let you convert a one-way conversion table into a <code>fromEnum</code> and a <code>toEnum</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424623319, "post_id": 28660344, "comment_id": 45616197, "body": "Nice. Is it possible to use them with view patterns or similar?"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424623832, "post_id": 28660344, "comment_id": 45616377, "body": "@dfeuer The proposal says so. <a href=\"https://ghc.haskell.org/trac/ghc/wiki/PatternSynonyms#Uni-directionalpattern-onlysynonyms\" rel=\"nofollow noreferrer\">&quot;Together with <code>ViewPatterns</code> we can now create patterns that look like regular patterns to match on existing (perhaps abstract) types in new ways&quot;</a>. I haven&#39;t tried it. This is in the same section that says we can declare the types for pattern synonyms with e.g. <code>pattern NUL :: Int; pattern NUL = 0x00</code>, but that didn&#39;t work."}, {"owner": {"reputation": 1657, "user_id": 4183787, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/XedpJ.png?s=128&g=1", "display_name": "zigazou", "link": "https://stackoverflow.com/users/4183787/zigazou"}, "edited": false, "score": 0, "creation_date": 1424637593, "post_id": 28660344, "comment_id": 45620985, "body": "Pattern Synonyms adopted ! &lt;3"}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 6, "last_activity_date": 1424623160, "creation_date": 1424623160, "answer_id": 28660344, "question_id": 28659903, "link": "https://stackoverflow.com/questions/28659903/how-to-handle-lots-of-constants-in-haskell/28660344#28660344", "title": "How to handle lots of constants in Haskell?", "body": "<p>If you have ghc 7.8, a new language extension <a href=\"https://downloads.haskell.org/~ghc/7.8.4/docs/html/users_guide/syntax-extns.html\">pattern synonyms</a> (see section 7.3.8) elegantly solves this problem. Pattern synonyms are enabled with a <a href=\"https://downloads.haskell.org/~ghc/7.8.4/docs/html/users_guide/pragmas.html\">LANGUAGE pragma</a> or the <code>-XPatternSynonyms</code> flag.</p>\n\n<pre><code>{-# LANGUAGE PatternSynonyms #-}\n</code></pre>\n\n<p>Pattern synonyms definitions are prefixed by <code>pattern</code></p>\n\n<pre><code>pattern NUL = 0x00\npattern SSC = 0x19\npattern ESC = 0x1b\npattern US  = 0x1f\npattern CSI = 0x5b\n</code></pre>\n\n<p>We can write your example in terms of these patterns.</p>\n\n<pre><code>type MString = [Int]\n\ncompleteReturn :: MString -&gt; Bool\ncompleteReturn []                 = False\ncompleteReturn [SSC]              = False -- eSS2\ncompleteReturn [ESC , CSI , 0x32] = False -- eESC, eCSI, 0x32\ncompleteReturn [ESC , CSI , 0x34] = False -- eESC, eCSI, 0x34\ncompleteReturn [SSC , 0x4b]       = False -- eSS2, 0x4b ; cedilla\ncompleteReturn _                  = True\n</code></pre>\n\n<p>Pattern synonyms are bidirectional, so we can also use them to construct expressions.</p>\n\n<pre><code>completeReturn [SSC]\n</code></pre>\n\n<p>You can write pattern synonyms that capture variables.</p>\n\n<pre><code>pattern EscCsi x = [ESC , CSI , x]\n</code></pre>\n\n<p>And use them like a constructor for both pattern matching</p>\n\n<pre><code>completeReturn :: MString -&gt; Bool\ncompleteReturn []                 = False\ncompleteReturn [SSC]              = False -- eSS2\ncompleteReturn (EscCsi 0x32)      = False -- eESC, eCSI, 0x32\ncompleteReturn (EscCsi 0x34)      = False -- eESC, eCSI, 0x34\ncompleteReturn [SSC , 0x4b]       = False -- eSS2, 0x4b ; cedilla\ncompleteReturn _                  = True\n</code></pre>\n\n<p>and for constructing expressions.</p>\n\n<pre><code>completeReturn (EscCsi 0x7e)\n</code></pre>\n"}], "owner": {"reputation": 1657, "user_id": 4183787, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/XedpJ.png?s=128&g=1", "display_name": "zigazou", "link": "https://stackoverflow.com/users/4183787/zigazou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 2, "accepted_answer_id": 28660344, "answer_count": 2, "score": 5, "last_activity_date": 1452955499, "creation_date": 1424620661, "last_edit_date": 1452955499, "question_id": 28659903, "link": "https://stackoverflow.com/questions/28659903/how-to-handle-lots-of-constants-in-haskell", "title": "How to handle lots of constants in Haskell?", "body": "<p>I\u2019m working on a library allowing a developper to control a Minitel (the french\nvideotex terminal).</p>\n\n<p>I have a lot of constant values and I would like to know the best way to manage\nthem with Haskell. It's a common question among beginners but I haven't found a\nsatisfying answer.</p>\n\n<p><a href=\"https://github.com/Zigazou/HaMinitel/blob/master/src/Minitel/Constants/Constants.hs\" rel=\"nofollow\">You can have a look at my project</a>\n(Note: yes, there are too many constants in only one module, that's what I'm working on ;-) )</p>\n\n<p>I currently have modules keeping them as <code>name = value</code>. Though it works, I\nwould like to know if it can be perfected or if I'm doing right.</p>\n\n<pre><code>aNUL = 0x00 -- Null\n-- ...\naUS  = 0x1f -- Unit Separator\n</code></pre>\n\n<p>This method has a minor drawback: you cannot use pattern matching, you need to\nuse guards if you want to keep the names:</p>\n\n<pre><code>completeReturn :: MString -&gt; Bool\ncompleteReturn []                 = False\ncompleteReturn [0x19]             = False -- eSS2\ncompleteReturn [0x1b, 0x5b, 0x32] = False -- eESC, eCSI, 0x32\ncompleteReturn [0x1b, 0x5b, 0x34] = False -- eESC, eCSI, 0x34\ncompleteReturn [0x19, 0x4b]       = False -- eSS2, 0x4b ; cedilla\ncompleteReturn _                  = True\n</code></pre>\n\n<p>You must also use GHC options if you don't want GHC to yell at you for the\nmissing signatures or the type defaults:</p>\n\n<pre><code>{-# OPTIONS_GHC -fno-warn-missing-signatures -fno-warn-type-defaults #-}\n</code></pre>\n\n<p>I once tried it with <code>data deriving Enum</code> using the trick to compensate\nundefined values but it becomes ugly as soon as the value does not start at 0.\nIt is also error prone, if you omit or add one value, the following names will\nhave their values plus or minus one:</p>\n\n<pre><code>data ASCII = NUL -- ^ 0x00, Null\n           -- ... \n           | US  -- ^ 0x1f, Unit Separator\n           deriving (Enum, Show, Eq, Ord)\n\ndata C0 = NUL   -- ^ 0x00, NULl\n        | Res01 -- ^ 0x01, undefined value\n        -- ...\n        | APA   -- ^ 0x1f, Activate Position Address\n        deriving (Enum, Show, Eq, Ord)\n\ndata SSCFS = Res00 | Res01 | Res02 | Res03 | Res04 | Res05 | Res06 | Res07\n           -- ...\n           | Res38 | Res39 | Res3A | Res3B | Res3C | Res3D | Res3E | Res3F\n           | ABK -- ^ 0x40, Alpha BlacK\n           -- ...\n           | RMS -- ^ 0x5f\n           deriving (Enum, Show, Eq, Ord)\n</code></pre>\n\n<p>This solution has a drawback: you cannot easily mix the values in a list\nbecause they are of different types:</p>\n\n<pre><code>codes = [ASCII.NUL, ASCII.SOH, C0.APB, C0.APF, 0x24] -- Error!\n</code></pre>\n\n<p>I thought of another solution:</p>\n\n<pre><code>class Value a where\n    value :: a -&gt; Int\n\n-- ASCII\u00a0codes\ndata ASCII = NUL | SOH | STX | ETX {- ... -} deriving Show\n\ninstance Value ASCII where\n    value NUL = 0\n    value SOH = 1\n    -- ...\n\n-- C0\u00a0codes\ndata C0 = APB | APF | APD | APU {- ... -} deriving Show\n\ninstance Value C0 where\n    value APB = 10\n    value APF = 11\n    -- ...\n\n-- Mini type\ndata Mini = ASCII ASCII | C0 C0 | Literal Int deriving Show\n\ninstance Value Mini where\n    value (ASCII code)  = value code\n    value (C0 code)     = value code\n    value (Literal int) = int\n\ncodes = [ASCII NUL, C0 APB, Literal 0x20]\n\nmain = do\n    print (fmap value codes)\n</code></pre>\n\n<p>For this solution, I must take care that constructors don't overlap. For\nexample, NUL, SO and SI exist in both ASCII and C0 (They fortunately give the\nsame values :-) ). I can handle the case by only defining them in ASCII for\nexample. Using qualified import would make things uglier (<code>ASCII ASCII.NUL</code>).</p>\n\n<p>Do you see other better ways to handle this case ?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424626492, "post_id": 28659802, "comment_id": 45617243, "body": "I would suggest breaking that <code>depthFirstSearch</code> function up into a few. Not because it&#39;s wrong (I believe it is right), but because it&#39;s confusing. I would probably use <code>unfoldTree</code> from <code>Data.Tree</code> to build a tree, prune the tree at the goal nodes, and then extract all the leaves. Unfortunately, <code>Data.Tree</code> is missing a lot of the functions that would make this really easy; they may be added in the next version."}], "answers": [{"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": true, "score": 3, "last_activity_date": 1424623819, "creation_date": 1424623819, "answer_id": 28660493, "question_id": 28659802, "link": "https://stackoverflow.com/questions/28659802/same-thing-freezes-or-works-in-an-instant/28660493#28660493", "title": "Same thing freezes or works in an instant", "body": "<p>The assumption:</p>\n\n<pre><code>let roots = [(i,i^10) | i &lt;- [1..1000], i^10 &lt;= 1000] -- [(1,1)]\n</code></pre>\n\n<p>for Ints is not true due to overflow. You can fix this by performing the comparisons using Integers and converting:</p>\n\n<pre><code>let roots = [(b,b^10) | a &lt;- [(1::Integer)..1000], a^1000 &lt;= 1000, let b = fromInteger a ]\n</code></pre>\n\n<p>You probably didn't spot this problem because ghci defaults to Integers in the REPL, but in your code <code>roots</code> has type <code>[Int]</code>.</p>\n"}], "owner": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 28660493, "answer_count": 1, "score": 1, "last_activity_date": 1424625664, "creation_date": 1424620140, "last_edit_date": 1424625664, "question_id": 28659802, "link": "https://stackoverflow.com/questions/28659802/same-thing-freezes-or-works-in-an-instant", "title": "Same thing freezes or works in an instant", "body": "<p>The code below solves this <a href=\"https://www.hackerrank.com/challenges/functional-programming-the-sums-of-powers\" rel=\"nofollow\">challenge</a>:</p>\n\n<blockquote>\n  <p>Find the number of ways in which a given integer, X, can be expressed as the sum of the the Nth power of unique natural numbers. </p>\n</blockquote>\n\n<pre><code>import Control.Monad (guard)\nimport qualified Data.Map.Strict as Map\nimport Data.Map ((!),fromList,Map(..),member)\n\n-- depth first search higher order function\ndepthFirstSearch :: (node -&gt; [node]) -&gt; -- successor node generator\n                   (node -&gt; Bool) -&gt; -- is goal checker\n                   [node] -&gt; -- starting root nodes\n                   [node] -- goal nodes\ndepthFirstSearch succ goal roots = search' roots\n  where search' [] = []\n        search' (x:xs) | goal x = x : search' xs\n                       | otherwise = search' (succ x ++ xs)\n\n\ntype Degree = Int\ntype CurrentSum = Int\ntype CurrentNumber = Int\ntype Node = (CurrentNumber,CurrentSum)\ntype Goal = Int\n\n-- generates valid successor nodes\nsuccN :: Goal -&gt; Map Int Int -&gt; Node -&gt; [Node]\nsuccN goal _map (i,sum) = do\n  i' &lt;- [(i+1)..goal]\n  guard (member i' _map)\n  let sum' = sum + _map!i'\n  guard (sum' &lt;= goal)\n  return (i',sum')\n-- checks if the node is the goal\ngoalN :: Goal -&gt; Node -&gt; Bool\ngoalN goal (_,sum) = goal == sum\n\n-- counts solutions\nsolCount :: Degree -&gt; Goal -&gt; Int\nsolCount d goal =\n  let roots = [(i,i^d) | i &lt;- [1..goal], i^d &lt;= goal]\n      _map = Map.fromList roots\n      nodes = depthFirstSearch (succN goal _map) (goalN goal) roots\n      c = length nodes\n  in c\n</code></pre>\n\n<p>Strange thing is happening. It freezes on <code>solCount 10 1000</code>. If I run the <code>solCount</code> manually in <code>ghci</code> it freezes as expected</p>\n\n<pre><code>let roots = [(i,i^10) | i &lt;- [1..1000], i^10 &lt;= 1000] -- [(1,1)]\nlet _map = Map.fromList roots \nlet nodes = depthFirstSearch (succN 1000 _map) (goalN 1000) roots\nnodes\n</code></pre>\n\n<p>But when it is replaced with the \"same\" thing like this</p>\n\n<pre><code>let nodes = depthFirstSearch (succN 1000 $ Map.fromList [(1,1)]) (goalN 1000) [(1,1)]\nnodes\n</code></pre>\n\n<p>it prints the result instantly. I have no idea why it's freezing and not freezing.</p>\n"}, {"tags": ["performance", "haskell", "vector", "fusion"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424894505, "post_id": 28659049, "comment_id": 45743239, "body": "I note that you have neither accepted nor commented on either of the existing answers. Is there something in particular that makes them unsatisfactory, or do you just want to see if someone comes up with a better one?"}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424894923, "post_id": 28659049, "comment_id": 45743456, "body": "@dfeuer I just haven&#39;t had enough time to study the solutions properly."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424895036, "post_id": 28659049, "comment_id": 45743524, "body": "That&#39;s fair! Seriously, if you have any questions about mine, I will be very happy to answer them."}], "answers": [{"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 3, "last_activity_date": 1424619814, "creation_date": 1424619814, "answer_id": 28659740, "question_id": 28659049, "link": "https://stackoverflow.com/questions/28659049/how-to-insert-a-value-into-a-sorted-vector-in-a-single-pass/28659740#28659740", "title": "How to insert a value into a sorted Vector in a single pass?", "body": "<p>The best tool that seems to be available is <code>unfoldr</code>, e.g.:</p>\n\n<pre><code>import qualified Data.Vector as V\nimport Data.Vector (Vector)\n\ninsertElem :: Int -&gt; Vector Int -&gt; Vector Int\ninsertElem e v = V.unfoldrN (len+1) go (0,False)\n  where\n    len = V.length v\n    go (i,found)\n      | i &gt;= len  = if found then Nothing else Just (e, (i+1, True))\n      | found     = Just (x, (i+1, True))\n      | x &lt;= e    = Just (x, (i+1, False))\n      | otherwise = Just (e, (i, True))\n      where x = v V.! i\n\n\ntest1 = insertElem 3 (V.fromList [1,2,4,5])\ntest2 = insertElem 0 (V.fromList [1,2,4,5])\ntest3 = insertElem 6 (V.fromList [1,2,4,5])\n</code></pre>\n\n<p>I didn't try very hard to de-dup the logic in the <code>go</code> function.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424895200, "post_id": 28665345, "comment_id": 45743607, "body": "Note: this solution works for the version of <code>vector</code> that shipped with GHC 7.8.  Things have changed a bit in the latest version, necessitating some (fairly minor) changes. If you need details, I can give them."}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1424895313, "post_id": 28665345, "comment_id": 45743675, "body": "Could you please explain why it&#39;s needed to give stages <code>[1]</code> and <code>[0]</code> to <code>INLINE</code> in this case?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1424897678, "post_id": 28665345, "comment_id": 45745005, "body": "@PetrPudl&#225;k, I&#39;m not really sure, but that seems to be the way it&#39;s generally done in <code>vector</code>. It surely has something to do with the timing of the various rewrite rules."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 3, "last_activity_date": 1424720958, "last_edit_date": 1592644375, "creation_date": 1424652243, "answer_id": 28665345, "question_id": 28659049, "link": "https://stackoverflow.com/questions/28659049/how-to-insert-a-value-into-a-sorted-vector-in-a-single-pass/28665345#28665345", "title": "How to insert a value into a sorted Vector in a single pass?", "body": "<p><a href=\"https://stackoverflow.com/a/28659740/1477667\">user5402's answer</a> is quite a pretty way to do it, but it falls prey to an efficiency problem described in the <code>Data.Vector</code> <a href=\"https://hackage.haskell.org/package/vector-0.10.12.2/docs/Data-Vector.html#g:5\" rel=\"nofollow noreferrer\">documentation</a>. Specifically, once it has found the insertion spot, and is copying blindly, it no longer forces the values to actually be read from the source vector. Instead, it fills up the destination vector with thunks that, when forced, read from the source vector.</p>\n<h3>Original solution</h3>\n<p>Note: This is the first solution I came up with. It is pretty easy to understand, but it does not play well with the stream fusion system in <code>vector</code>, which can lead to relatively poor performance. The solutions below are better in general.</p>\n<p>One solution, as explained in the documentation, is to use the monadic <code>indexM</code> operation to perform these blind reads. This forces the read to be performed, but does not force the read value. Thus it copies a pointer (possibly a pointer to a thunk) from the source vector to the destination vector. For greatest efficiency, everything below should be replaced with its <code>unsafe</code> variant (<code>unsafeIndexM</code>, <code>unsafeIndex</code>, and <code>unsafeWrite</code> in particular).</p>\n<pre><code>{-# Language ScopedTypeVariables #-}\nmodule Insert where\nimport qualified Data.Vector as V\nimport Data.Vector (Vector)\nimport qualified Data.Vector.Mutable as MV\nimport Data.Vector.Mutable (MVector)\nimport Control.Monad.ST\n\ninsertElem :: forall a . Ord a =&gt; a -&gt; Vector a -&gt; Vector a\ninsertElem e v = V.create act\n where\n  act :: forall s . ST s (MVector s a)\n  act = do\n    mv &lt;- MV.new (V.length v + 1)\n    let\n      start :: Int -&gt; ST s (MVector s a)\n      start i\n        | i == V.length v ||\n          e &lt;= v V.! i = MV.write mv i e &gt;&gt; finish i\n        | otherwise = MV.write mv i (v V.! i) &gt;&gt; start (i+1)\n      finish :: Int -&gt; ST s (MVector s a)\n      finish i\n        | i == V.length v = return mv\n        | otherwise = do\n             V.indexM v i &gt;&gt;= MV.write mv (i+1)\n             finish (i+1)\n      in start 0\n\ninsertElemInt :: Int -&gt; Vector Int -&gt; Vector Int\ninsertElemInt = insertElem\n</code></pre>\n<p>Note that naming the <code>act</code> action and using <code>ScopedTypeVariables</code> should not actually be necessary, but I found them tremendously helpful in tracking down my mistakes.</p>\n<h2>Stream-based solutions</h2>\n<p>The above code won't work well with stream fusion, because indices fly all over the place. The following approach should fuse properly, and still avoid creating unnecessary thunks. This is the first time I've ever touched stream fusion code, so it may be that some things could be improved. The only problem with this first stream-based version is that if it <em>does</em> fuse, then the step function for the input stream will be run twice on one of the elements. This is normally not a problem, but if the step function is extremely expensive (rare), it could be. I therefore give an alternative that should work better in that case. I'm not sure just when which of these will be better in practice, so I'm including both.</p>\n<p>With either of these stream-based solutions, the code</p>\n<pre><code>testEnum :: Word -&gt; Word -&gt; Word -&gt; Word\ntestEnum ins low high = V.product $\n  insertElem ins $ V.enumFromStepN low 1 (fromIntegral high)\n</code></pre>\n<p>will compile into loops that run in constant space, never actually creating a vector at all.</p>\n<h3>Step one seed twice</h3>\n<pre><code>{-# Language ScopedTypeVariables #-}\nmodule Insert where\n\nimport Data.Vector (Vector)\nimport Data.Word (Word)\nimport qualified Data.Vector.Fusion.Stream.Monadic as S\nimport qualified Data.Vector.Generic as G\nimport Data.Vector.Fusion.Util (Id(..))\n\n-- To check on unboxing and such\ninsertElemWord :: Word -&gt; Vector Word -&gt; Vector Word\ninsertElemWord = insertElem\n\n{-# INLINE insertElem #-}\ninsertElem :: forall a . Ord a =&gt; a -&gt; Vector a -&gt; Vector a\ninsertElem a v = G.unstream (insertElemS a (G.stream v))\n\n{-# INLINE [1] insertElemS #-}\ninsertElemS :: forall a . Ord a =&gt; a -&gt; S.Stream Id a -&gt; S.Stream Id a\ninsertElemS e (S.Stream step (state::s) size) = S.Stream step' (state, False) (size + 1)\n  where\n    {-# INLINE [0] step' #-}\n    step' :: (s, Bool) -&gt; Id (S.Step (s, Bool) a)\n    step' (s, True) = Id $ case unId (step s) of\n       S.Yield a s' -&gt; S.Yield a (s', True)\n       S.Skip s' -&gt; S.Skip (s', True)\n       S.Done -&gt; S.Done\n    step' (s, False) = Id $ case unId (step s) of\n       S.Yield a s' -&gt;\n          if e &lt;= a\n          then S.Yield e (s, True)\n          else S.Yield a (s', False)\n       S.Skip s' -&gt; S.Skip (s', False)\n       S.Done -&gt; S.Yield e (s, True)\n</code></pre>\n<h3>One pass exactly, never repeating a lookup/step</h3>\n<pre><code>{-# Language ScopedTypeVariables #-}\nmodule Insert where\n\nimport Data.Vector (Vector)\nimport Data.Word (Word)\nimport qualified Data.Vector.Fusion.Stream.Monadic as S\nimport qualified Data.Vector.Generic as G\nimport Data.Vector.Fusion.Util (Id(..))\n\ndata Status s a = Pre s | During s a | Post s | End\n\ninsertElemWord :: Word -&gt; Vector Word -&gt; Vector Word\ninsertElemWord = insertElem\n\n{-# INLINE insertElem #-}\ninsertElem :: forall a . Ord a =&gt; a -&gt; Vector a -&gt; Vector a\ninsertElem a v = G.unstream (insertElemS a (G.stream v))\n\n{-# INLINE [1] insertElemS #-}\ninsertElemS :: forall a . Ord a =&gt; a -&gt; S.Stream Id a -&gt; S.Stream Id a\ninsertElemS e (S.Stream step (state::s) size) = S.Stream step' (Pre state) (size+1)\n  where\n    {-# INLINE [0] step' #-}\n    step' :: Status s a -&gt; Id (S.Step (Status s a) a)\n    step' (Post s) = Id $ case unId (step s) of\n      S.Yield a s' -&gt; S.Yield a (Post s')\n      S.Skip s' -&gt; S.Skip (Post s')\n      S.Done -&gt; S.Done\n    step' (Pre s) = Id $ case unId (step s) of\n      S.Yield a s'\n        | e &lt;= a    -&gt; S.Yield e (During s' a)\n        | otherwise -&gt; S.Yield a (Pre s')\n      S.Skip s' -&gt; S.Skip (Pre s')\n      S.Done -&gt; S.Yield e End\n    step' (During s a) = Id (S.Yield a (Post s))\n    step' End = Id S.Done\n</code></pre>\n"}], "owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "accepted_answer_id": 28665345, "answer_count": 2, "score": 4, "last_activity_date": 1424720958, "creation_date": 1424615893, "question_id": 28659049, "link": "https://stackoverflow.com/questions/28659049/how-to-insert-a-value-into-a-sorted-vector-in-a-single-pass", "title": "How to insert a value into a sorted Vector in a single pass?", "body": "<p>I have a <a href=\"https://hackage.haskell.org/package/vector-0.10.12.2/docs/Data-Vector.html#t:Vector\" rel=\"nofollow\"><code>Vector</code></a> of sorted values, for example</p>\n\n<pre><code>fromList [1, 2, 4, 5]\n</code></pre>\n\n<p>Now I'd like to insert another value, let's say <code>3</code> and create a new vector. In an imperative language I'd allocate an array of size 5, loop over the original vector, copy the old values, and insert the new one at the proper point, so that I obtain</p>\n\n<pre><code>fromList [1, 2, 3, 4, 5]\n</code></pre>\n\n<p>I can do it using <em>vector</em> API as</p>\n\n<pre><code>let (pre, post) = span (&lt; x) n\nin V.concat [pre, pure x, post]\n</code></pre>\n\n<p>which works, but traverses the original vector twice: Once when searching for the split and once when combining it. Is there a way how to do it in just one  pass? (Another solution would be to search for the splitting point using a binary search, but I'm interested if it's possible to create a genuine single-pass solution.)</p>\n"}, {"tags": ["haskell", "canvas", "threepenny-gui"], "answers": [{"comments": [{"owner": {"reputation": 35, "user_id": 3406537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/068367243d57c9eae3ee4b6bf787bed7?s=128&d=identicon&r=PG&f=1", "display_name": "clem niem", "link": "https://stackoverflow.com/users/3406537/clem-niem"}, "edited": false, "score": 0, "creation_date": 1424717759, "post_id": 28670448, "comment_id": 45655192, "body": "Thanks a lot for the quick reply! I was able to get it working (see EDIT in post above). Although it might not be perfect, right now its good enough for me :) threepenny-gui is really awesome, thanks for that, too."}, {"owner": {"reputation": 11009, "user_id": 403805, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bcf3c21ce05cfb6788e25dcc3821b3c7?s=128&d=identicon&r=PG", "display_name": "Heinrich Apfelmus", "link": "https://stackoverflow.com/users/403805/heinrich-apfelmus"}, "reply_to_user": {"reputation": 35, "user_id": 3406537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/068367243d57c9eae3ee4b6bf787bed7?s=128&d=identicon&r=PG&f=1", "display_name": "clem niem", "link": "https://stackoverflow.com/users/3406537/clem-niem"}, "edited": false, "score": 1, "creation_date": 1424729002, "post_id": 28670448, "comment_id": 45661540, "body": "My pleasure. :-) If you&#39;re feeling fancy, you can also try <code>Value</code> as the return type to marshal from, this is a JavaScript object thing from the <code>aeson</code> library; I think the Graphics.UI.Threepenny.Event modules has some examples for that. But since your code works, there&#39;s no need to change it."}], "tags": [], "owner": {"reputation": 11009, "user_id": 403805, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bcf3c21ce05cfb6788e25dcc3821b3c7?s=128&d=identicon&r=PG", "display_name": "Heinrich Apfelmus", "link": "https://stackoverflow.com/users/403805/heinrich-apfelmus"}, "is_accepted": true, "score": 1, "last_activity_date": 1424683538, "creation_date": 1424683538, "answer_id": 28670448, "question_id": 28658485, "link": "https://stackoverflow.com/questions/28658485/haskell-threepenny-gui-reading-color-from-canvas-at-specific-point/28670448#28670448", "title": "Haskell Threepenny Gui: Reading Color from Canvas at specific Point?", "body": "<p>(Author here)</p>\n\n<p>As of threepenny-gui-0.5.0.0, there is currently no predefined function that can do this. However, you can use the included JavaScript FFI to call a JavaScript function that returns the value you need. For example, here is the source code for the <code>drawImage</code> function:</p>\n\n<pre><code>drawImage :: Element -&gt; Vector -&gt; Canvas -&gt; UI ()\ndrawImage image (x,y) canvas =\n    runFunction $ ffi \"%1.getContext('2d').drawImage(%2,%3,%4)\" canvas image x y\n</code></pre>\n\n<p>The <code>ffi</code> function allows you to call an arbitrary JavaScript function. The only trouble is that you will have to marshal the result to the type <code>Color</code>; at the moment, only a couple of types like <code>Int</code> or <code>String</code> are supported as return values. Have a look at the source code for examples.</p>\n"}], "owner": {"reputation": 35, "user_id": 3406537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/068367243d57c9eae3ee4b6bf787bed7?s=128&d=identicon&r=PG&f=1", "display_name": "clem niem", "link": "https://stackoverflow.com/users/3406537/clem-niem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 1, "accepted_answer_id": 28670448, "answer_count": 1, "score": 2, "last_activity_date": 1424717682, "creation_date": 1424612604, "last_edit_date": 1424717682, "question_id": 28658485, "link": "https://stackoverflow.com/questions/28658485/haskell-threepenny-gui-reading-color-from-canvas-at-specific-point", "title": "Haskell Threepenny Gui: Reading Color from Canvas at specific Point?", "body": "<p>Is there a way to read the Color of a specific Point of a Canvas?</p>\n\n<p>Something like:</p>\n\n<pre><code>getColor :: Canvas -&gt; Point -&gt; Color\n</code></pre>\n\n<p>I checked the Documentation at <a href=\"http://hackage.haskell.org/package/threepenny-gui-0.5.0.0/docs/src/Graphics-UI-Threepenny-Canvas.html#Canvas\" rel=\"nofollow\">Graphics.UI.Threepenny.Canvas</a>, but couldn't find any function for that. Maybe I just didn't see it, for I am not that long using Haskell.</p>\n\n<p>If you have any hints for me, please let me know.</p>\n\n<p>Thanks a lot in advance,\nClem</p>\n\n<p>EDIT: Thanks to Heinrich Apfelmus' answer I was able to write a working solution and wanted to share it in case someone needs the same function. Of course if you use it and make adjustments feel free to share it :) </p>\n\n<pre><code>import qualified Graphics.UI.Threepenny as UI\nimport Graphics.UI.Threepenny.Core\nimport Codec.Picture.Types\n\n-- to UI (PixelRGB8) is also possible just change from fst to snd after the return\ngetCanvCol :: UI.Canvas -&gt; UI.Point -&gt; UI (UI.Color) \ngetCanvCol canvas (x,y) = do  \n-- str returns a string with comma separated values i.e. \"255,0,255\"  \nstr &lt;- callFunction $ ffi (\"(%1.getContext('2d').getImageData(%2,%3,1,1).data[0])+\\\n                            \\\\\",\\\"+(%1.getContext('2d').getImageData(%2,%3,1,1).data[1])+\\\n                            \\\\\",\\\"+(%1.getContext('2d').getImageData(%2,%3,1,1).data[2])\") \n                            canvas x y\n  return $ fst $ tripleToCol $ lsToRGB $ wordsWhen (==',') str\n   where\n   -- could also use splitOn\n   wordsWhen     :: (Char -&gt; Bool) -&gt; String -&gt; [String]\n   wordsWhen p s =  case dropWhile p s of\n                         \"\" -&gt; []\n                         s' -&gt; w : wordsWhen p s''\n                               where (w, s'') = break p s'\n   -- take a list of strings and make a triple of ints \n   lsToRGB :: [String] -&gt; (Int,Int,Int)\n   lsToRGB (a:b:c:xs) = (read a, read b, read c)\n   lsToRGB _          = (0,0,0) \n   -- make a triple of Int to Color needed\n   tripleToCol :: (Int,Int,Int) -&gt; (UI.Color, PixelRGB8)\n   tripleToCol (r,g,b) = ((UI.RGB r g b),(PixelRGB8 r' g' b'))\n     where (r',g',b') = (fromIntegral r,fromIntegral g,fromIntegral b)\n</code></pre>\n"}, {"tags": ["haskell", "functional-programming", "functor"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1424608773, "post_id": 28657765, "comment_id": 45611665, "body": "There&#39;s some confusion here. A function is a value, while a functor is a type-level object which maps types to types. The application <code>(.)(.)(.)</code> can be understood without thinking about functors."}], "answers": [{"tags": [], "owner": {"reputation": 10320, "user_id": 453616, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f5c35ad8a6275273c50d1274fd549d84?s=128&d=identicon&r=PG", "display_name": "gspr", "link": "https://stackoverflow.com/users/453616/gspr"}, "is_accepted": true, "score": 7, "last_activity_date": 1424617253, "last_edit_date": 1424617253, "creation_date": 1424616880, "answer_id": 28659232, "question_id": 28657765, "link": "https://stackoverflow.com/questions/28657765/composition-of-compositions-in-haskell/28659232#28659232", "title": "Composition of compositions in Haskell", "body": "<p>Ignore the <code>Functor</code> instance for <code>((-&gt;) r)</code>; it is irrelevant. Only two tings matter here: The type of <code>(.)</code>, namely</p>\n\n<pre><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>, and the fact that function application is <em>left associative</em>. The latter means that <code>(.) (.) (.)</code> is the same as <code>((.) (.)) (.)</code>.</p>\n\n<p>Let us first try to find the type of <code>(.) (.)</code> (the leftmost ones, if you will). Let us write the type of the first <code>(.)</code> as <code>(b1 -&gt; c1) -&gt; (a1 -&gt; b1) -&gt; a1 -&gt; c1</code> and the second as <code>(b2 -&gt; c2) -&gt; (a2 -&gt; b2) -&gt; a2 -&gt; c2</code>. We apply the first to the second, which gives us that <code>b1</code> is <code>(b2 -&gt; c2)</code> and <code>c1</code> is <code>(a2 -&gt; b2) -&gt; a2 -&gt; c2</code>. Thus we have</p>\n\n<pre><code>(.) (.) :: (a1 -&gt; (b2 -&gt; c2)) -&gt; a1 -&gt; ((a2 -&gt; b2) -&gt; a2 -&gt; c2)\n</code></pre>\n\n<p>which can be simplified to</p>\n\n<pre><code>(.) (.) :: (a1 -&gt; b2 -&gt; c2) -&gt; a1 -&gt; (a2 -&gt; b2) -&gt; a2 -&gt; c2\n</code></pre>\n\n<p>Let's now apply this to to the last <code>(.)</code> (the rightmost one, if you will). If it has signature <code>(b3 -&gt; c3) -&gt; (a3 -&gt; b3) -&gt; a3 -&gt; c3</code>, then we see that <code>a1</code> must be <code>(b3 -&gt; c3)</code>, <code>b2</code> must be <code>(a3 -&gt; b3)</code> and <code>c2</code> must be <code>a3 -&gt; c3</code>. Thus,</p>\n\n<pre><code>((.) (.)) (.) :: (b3 -&gt; c3) -&gt; (a2 -&gt; (a3 -&gt; b3)) -&gt; a2 -&gt; a3 -&gt; c3\n</code></pre>\n\n<p>which is the same as</p>\n\n<pre><code>((.) (.)) (.) :: (b3 -&gt; c3) -&gt; (a2 -&gt; a3 -&gt; b3) -&gt; (a2 -&gt; a3 -&gt; c3)\n</code></pre>\n\n<p>This is the same as what you have in your question if you do some renaming.</p>\n"}], "owner": {"reputation": 1682, "user_id": 1137470, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/UdtsO.jpg?s=128&g=1", "display_name": "shar", "link": "https://stackoverflow.com/users/1137470/shar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 279, "favorite_count": 3, "accepted_answer_id": 28659232, "answer_count": 1, "score": 4, "last_activity_date": 1424617253, "creation_date": 1424607889, "question_id": 28657765, "link": "https://stackoverflow.com/questions/28657765/composition-of-compositions-in-haskell", "title": "Composition of compositions in Haskell", "body": "<p>I am learning Haskell recently, and I was reading Functors in Learn You a Haskell from which I came to know</p>\n\n<ol>\n<li>Functions <code>((-&gt;)r)</code> which take one parameter, are also in a way Functors.</li>\n<li>Composition <code>(.)</code> is equivalent to <code>fmap</code></li>\n</ol>\n\n<p>So with what I have understood, fmap takes two parameters. First is the function to be applied, and the second one is the functor.</p>\n\n<p>However, I am confused with this expression <code>(.) (.) (.)</code>. This is a composition of two composition, with the type <code>(b -&gt; c) -&gt; (a1 -&gt; a2 -&gt; b) -&gt; (a1 -&gt; a2 -&gt; c)</code></p>\n\n<p>So here is my doubt arising. The first <code>(.)</code> has two parameters, first one being composition function itself. The second parameter also being the composition function. And composition function as such is not a functor. So how is this a valid expression?</p>\n\n<p>I am sure that I am missing something here. Could someone fill in the gaps and help me get how the expression is correct?</p>\n"}, {"tags": ["java", "c", "haskell", "quicksort"], "answers": [{"comments": [{"owner": {"reputation": 940, "user_id": 1275256, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/5cd12beabbb9d483c03d843cc504e5c0?s=128&d=identicon&r=PG", "display_name": "gxtaillon", "link": "https://stackoverflow.com/users/1275256/gxtaillon"}, "edited": false, "score": 1, "creation_date": 1424581330, "post_id": 28654400, "comment_id": 45606296, "body": "Haskell is usually on par with java, performance wise, according to the benchmark games. <a href=\"http://benchmarksgame.alioth.debian.org/u64q/performance.php?test=nbody\" rel=\"nofollow noreferrer\">benchmarksgame.alioth.debian.org/u64q/&hellip;</a>"}, {"owner": {"reputation": 628808, "user_id": 139985, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG", "display_name": "Stephen C", "link": "https://stackoverflow.com/users/139985/stephen-c"}, "reply_to_user": {"reputation": 940, "user_id": 1275256, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/5cd12beabbb9d483c03d843cc504e5c0?s=128&d=identicon&r=PG", "display_name": "gxtaillon", "link": "https://stackoverflow.com/users/1275256/gxtaillon"}, "edited": false, "score": 0, "creation_date": 1424582061, "post_id": 28654400, "comment_id": 45606405, "body": "@gxtaillon - I read it as 1/2 to 1 times the speed.  But I&#39;ve updated my answer anyhow.  Thanks."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 7, "creation_date": 1424582200, "post_id": 28654400, "comment_id": 45606430, "body": "It depends tremendously on the skill of the programmer, and the techniques they choose. It is entirely possible to write a procedure for sorting unboxed mutable vectors in Haskell that&#39;s as fast as the best in C. However, most Haskell programmers don&#39;t <i>like</i> writing that sort of code much, and don&#39;t have much use for it anyway."}], "tags": [], "owner": {"reputation": 628808, "user_id": 139985, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG", "display_name": "Stephen C", "link": "https://stackoverflow.com/users/139985/stephen-c"}, "is_accepted": false, "score": 5, "last_activity_date": 1424581959, "last_edit_date": 1424581959, "creation_date": 1424577808, "answer_id": 28654400, "question_id": 28654341, "link": "https://stackoverflow.com/questions/28654341/sorting-algorithm-efficiency/28654400#28654400", "title": "Sorting Algorithm Efficiency", "body": "<p>There is no \"theoretical\" answer to this.  There is no sound \"theory\" that will allow you to make accurate predictions.</p>\n\n<p>Besides, the whole idea of a \"theoretical\" comparison of program language performance is nonsensical.  Performance comparisons are about actual (non-theoretical) programs compiled with actual (non-theoretical) compilers running on actual (non-theoretical) machines on actual (non-theoretical) data sets.</p>\n\n<hr>\n\n<p>If you are asking for a \"rule of thumb\" guess, based on typical applications, typical compilers, equivalent levels of programmer skill, and as much programmer time as is required, then:</p>\n\n<ul>\n<li>C is probably fastest</li>\n<li>Java is probably 1/3 to 1 times the speed of C</li>\n<li>Haskell is probably 1/2 to 1 times the speed of Java.</li>\n</ul>\n\n<p>(Based on what the \"benchmark game\" site says as of 22/2/2015.)</p>\n\n<p><strong>However</strong> ... this may be different for some applications, and it depends hugely on the maturity of the compilers and the skills of the programmer in the respective languages.</p>\n\n<p><strong>Besides</strong> ... a mature software engineer / project manager does not choose the programming language for a project solely on which one gives the fastest results.  Other factors are usually more important than raw speed.</p>\n"}, {"comments": [{"owner": {"reputation": 628808, "user_id": 139985, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG", "display_name": "Stephen C", "link": "https://stackoverflow.com/users/139985/stephen-c"}, "edited": false, "score": 0, "creation_date": 1424578703, "post_id": 28654413, "comment_id": 45605809, "body": "Yes ... but a properly implemented quicksort (in Java for example) is unlikely to need either garbage collection or dynamic typing."}], "tags": [], "owner": {"reputation": 8450, "user_id": 2842375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef25280992c96f51e2b09f71beb360ef?s=128&d=identicon&r=PG&f=1", "display_name": "shauryachats", "link": "https://stackoverflow.com/users/2842375/shauryachats"}, "is_accepted": false, "score": 0, "last_activity_date": 1424577929, "last_edit_date": 1495540259, "creation_date": 1424577929, "answer_id": 28654413, "question_id": 28654341, "link": "https://stackoverflow.com/questions/28654341/sorting-algorithm-efficiency/28654413#28654413", "title": "Sorting Algorithm Efficiency", "body": "<p>Quoting <a href=\"https://stackoverflow.com/a/418956/2842375\">@coobird's</a> answer,</p>\n\n<blockquote>\n  <p><strong>There isn't much that's special about C. That's one of the reasons why it's fast.</strong></p>\n  \n  <p>Newer languages which have support for <a href=\"http://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\" rel=\"nofollow noreferrer\">garbage collection</a>,\n  <a href=\"http://en.wikipedia.org/wiki/Type_system#Dynamic_typing\" rel=\"nofollow noreferrer\">dynamic typing</a> and other facilities which make it easier for the\n  programmer to write programs. </p>\n  \n  <p>The catch is, there is additional processing overhead which will\n  degrade the performance of the application. C doesn't have any of\n  that, which means that there is no overhead, but that means that the\n  programmer needs to be able to allocate memory and free them to\n  prevent <a href=\"http://en.wikipedia.org/wiki/Memory_leak\" rel=\"nofollow noreferrer\">memory leaks</a>, and must deal with static typing of\n  variables.</p>\n  \n  <p>That said, many languages and platforms, such as Java (with its Java\n  Vitual Machine) and .NET (with its Common Language Runtime) have\n  improved performance over the years with advents such as <a href=\"http://en.wikipedia.org/wiki/Just-in-time_compilation\" rel=\"nofollow noreferrer\">just-in-time\n  compilation</a> which produces native machine code from bytecode to\n  achieve higher performance.</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 2652, "user_id": 4564515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90733097a656c664a472c437678aad42?s=128&d=identicon&r=PG&f=1", "display_name": "jschultz410", "link": "https://stackoverflow.com/users/4564515/jschultz410"}, "is_accepted": false, "score": 2, "last_activity_date": 1424578975, "last_edit_date": 1424578975, "creation_date": 1424577944, "answer_id": 28654414, "question_id": 28654341, "link": "https://stackoverflow.com/questions/28654341/sorting-algorithm-efficiency/28654414#28654414", "title": "Sorting Algorithm Efficiency", "body": "<p>Theoretically, they will all be executing the same algorithm, so you are really only dealing with the vagaries of the different languages' implementations, which is a practical -- not a theoretical -- question.  </p>\n\n<p>The only way to answer your practical question is to choose concrete implementations (language, compiler, architecture, program, input, etc.) and benchmark them against one another comprehensively.</p>\n"}], "owner": {"reputation": 1, "user_id": 4544559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a33e4fa1f6f3ed61c02d5007eef73cb?s=128&d=identicon&r=PG&f=1", "display_name": "user6623512", "link": "https://stackoverflow.com/users/4544559/user6623512"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "closed_date": 1424656504, "answer_count": 3, "score": -5, "last_activity_date": 1424581959, "creation_date": 1424577322, "last_edit_date": 1424580699, "question_id": 28654341, "link": "https://stackoverflow.com/questions/28654341/sorting-algorithm-efficiency", "closed_reason": "Opinion-based", "title": "Sorting Algorithm Efficiency", "body": "<p>I would like to ask a general question.</p>\n\n<p>I am comparing the run time of sorting on C, Java and Haskell. Which language, provided the same level of optimization (thought that may vary, of course), should come out to have the fastest run time, and which one the slowest (theoretically)?\nThey will all be reading the same text file and sorting words in alphabetical order.\nIf I can get an in depth explanation that would be great, and much appreciated.</p>\n\n<p>Thanks~</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 1, "creation_date": 1424576241, "post_id": 28654090, "comment_id": 45605387, "body": "change order? <code>myfunc = let x = let x = 4 in x + 1 in x</code>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424601077, "post_id": 28654090, "comment_id": 45609893, "body": "Horrible non-recursive-let-desugaring in lambdas follows: <code>(\\x -&gt; (\\x -&gt; x) (x+1)) 4</code>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424590984, "post_id": 28654131, "comment_id": 45607734, "body": "See rampion&#39;s comment. Also, lambda forms introduce non-recursive bindings."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1424575331, "creation_date": 1424575331, "answer_id": 28654131, "question_id": 28654090, "link": "https://stackoverflow.com/questions/28654090/scoping-issue-in-haskell/28654131#28654131", "title": "Scoping issue in Haskell", "body": "<p>You can't. All bindings introduced with <code>=</code> in Haskell are recursive. (Other languages do sometimes offer non-recursive binding forms, but not Haskell.)</p>\n\n<p>You could do something like</p>\n\n<pre><code>myfunc = do\n    x &lt;- Identity 4\n    x &lt;- Identity (x+1)\n    Identity x\n</code></pre>\n\n<p>...but at that point, just renaming <code>x</code> to <code>x'</code> or something looks pretty attractive in terms of the amount of required finger-typing.</p>\n\n<p>P.S. Calling this <code>myfunc</code> is a bit odd -- it's not a function!</p>\n"}], "owner": {"reputation": 273, "user_id": 3724417, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4cbf080175ab5964b7b524a61422b8d1?s=128&d=identicon&r=PG&f=1", "display_name": "user3724417", "link": "https://stackoverflow.com/users/3724417/user3724417"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 28654131, "answer_count": 1, "score": 1, "last_activity_date": 1424575331, "creation_date": 1424574935, "question_id": 28654090, "link": "https://stackoverflow.com/questions/28654090/scoping-issue-in-haskell", "title": "Scoping issue in Haskell", "body": "<p>I wrote a simple program to try to understand the scoping rules in Haskell:</p>\n\n<pre><code>myfunc =\nlet x = 4 in\nlet x = x + 1 in\nx\n</code></pre>\n\n<p>When called, this function will lazily evaluate the x on 4th line, and then we notice that it tries to evaluate x on the third line, which then tries to evaluate the x again on the third line, creating an infinite loop. How can I fix this without renaming the x in x + 1 on the third line?</p>\n"}, {"tags": ["haskell", "io"], "owner": {"reputation": 3179, "user_id": 869895, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd11f7a6ccc63150f72c564a90e2083e?s=128&d=identicon&r=PG", "display_name": "alexp", "link": "https://stackoverflow.com/users/869895/alexp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 87, "favorite_count": 0, "closed_date": 1424561943, "answer_count": 0, "score": 1, "last_activity_date": 1424561632, "creation_date": 1424561632, "question_id": 28652686, "link": "https://stackoverflow.com/questions/28652686/why-is-this-haskell-io-code-so-slow", "closed_reason": "Duplicate", "title": "Why is this Haskell IO Code so slow?", "body": "<p>I'm just starting to try to figure out IO and lazy IO in Haskell, and this example I wrote is really slow. It just reads a file of 10M integers and computes the maximum.</p>\n\n<pre><code>import System.IO\n\nmaxNum :: [String] -&gt; Int\nmaxNum = maximum . map getInt\n    where getInt x = read x :: Int\n\nmain = do\n    inh &lt;- openFile \"randints.txt\" ReadMode\n    contents &lt;- hGetContents inh\n    let myMax = maxNum $ lines contents\n    putStrLn $ show myMax\n</code></pre>\n\n<p>The simple Python version I wrote runs about 6 times faster:</p>\n\n<pre><code>inh = open('randints.txt', 'r')\n\nmy_max = max(int(line) for line in inh)\n\nprint my_max\n</code></pre>\n\n<p>hGetContents is supposed to be lazy, so I don't think it's reading the whole file into memory first. The profiler shows that 93% of the time is spent in maxNum.getInt, but I'm not experienced enough (or at all) profiling Haskell to figure out whether that's a red herring because of lazy evaluation.</p>\n\n<p>Did I do something wrong that broke the laziness somehow? Or do regular Strings in Haskell just perform that poorly?</p>\n"}, {"tags": ["haskell", "data-structures", "functional-programming", "unfold"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424560290, "post_id": 28652452, "comment_id": 45602087, "body": "Um ... this looks like about the only sane thing you can do."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424560334, "post_id": 28652452, "comment_id": 45602096, "body": "Really? I was pretty sure I was doing something stupid here, but if it is correct I might just delete the question."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424598854, "post_id": 28652452, "comment_id": 45609347, "body": "The question is non trivial, and it might be useful to others."}], "answers": [{"comments": [{"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 1, "creation_date": 1424567264, "post_id": 28653008, "comment_id": 45603706, "body": "Thanks for explaining the reason behind the algorithm, it is very enlightening to see how my &quot;Drive&quot; and &quot;Tree&quot; datatypes are linked and how concise a generic unfold can be. I wonder why this is not how it is defined on Prelude?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1424567408, "post_id": 28653008, "comment_id": 45603731, "body": "Defining all of your recursive datatypes with Fix makes pattern matching quite ugly, and also has a (perhaps non-negligible) performance cost."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1424598665, "post_id": 28653008, "comment_id": 45609307, "body": "@user2407038 To that aim, it would be very nice if we had a <code>Coercible [a] (Fix (ListF a))</code> instance, allowing us to move between plain recursive types and their fixed point sibling. This would have zero runtime cost, and allow pattern match on both types. (I am assuming that they have identical runtime representation since <code>Fix</code> is a newtype -- I might be wrong on this, though)."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1424607020, "post_id": 28653008, "comment_id": 45611254, "body": "@user2407038 pattern synonyms to the rescue! <a href=\"https://ghc.haskell.org/trac/ghc/wiki/PatternSynonyms\" rel=\"nofollow noreferrer\">ghc.haskell.org/trac/ghc/wiki/PatternSynonyms</a>"}], "tags": [], "owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "is_accepted": true, "score": 8, "last_activity_date": 1424564179, "creation_date": 1424564179, "answer_id": 28653008, "question_id": 28652452, "link": "https://stackoverflow.com/questions/28652452/what-is-the-correct-definition-of-unfold-for-an-untagged-tree/28653008#28653008", "title": "What is the correct definition of `unfold` for an untagged tree?", "body": "<p>If you think of a datatype as the fixpoint of a functor then you can see that your definition is the sensible generalisation of the list case.</p>\n\n<pre><code>module Unfold where\n</code></pre>\n\n<p>Here we start by definition the fixpoint of a functor <code>f</code>: it's a layer of <code>f</code> followed by some more fixpoint:</p>\n\n<pre><code>newtype Fix f = InFix { outFix :: f (Fix f) }\n</code></pre>\n\n<p>To make things slightly clearer, here are the definitions of the functors corresponding to lists and trees. They have basically the same shape as the datatypes except that we have replace the recursive calls by an extra parameter. In other words, they describe what <em>one layer</em> of list / tree looks like and are generic over the possible substructures <code>r</code>.</p>\n\n<pre><code>data ListF a r = LNil | LCons a r\ndata TreeF a r = TNil | TLeaf a | TBranch r r\n</code></pre>\n\n<p>Lists and trees are then respectively the fixpoints of ListF and TreeF:</p>\n\n<pre><code>type List a = Fix (ListF a)\ntype Tree a = Fix (TreeF a)\n</code></pre>\n\n<p>Anyways, hopping you now have a better intuition about this fixpoint business, we can see that there is a generic way of defining an <code>unfold</code> function for these.</p>\n\n<p>Given an original seed as well as a function taking a seed and building <em>one layer</em> of <code>f</code> where the recursive structure are new seeds, we can build a whole structure:</p>\n\n<pre><code>unfoldFix :: Functor f =&gt; (s -&gt; f s) -&gt; s -&gt; Fix f\nunfoldFix node = go\n  where go = InFix . fmap go . node\n</code></pre>\n\n<p>This definition specialises to the usual <code>unfold</code> on list or your definition for trees. In other words: your definition was indeed the right one.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 430, "favorite_count": 0, "accepted_answer_id": 28653008, "answer_count": 1, "score": 7, "last_activity_date": 1424564179, "creation_date": 1424560011, "question_id": 28652452, "link": "https://stackoverflow.com/questions/28652452/what-is-the-correct-definition-of-unfold-for-an-untagged-tree", "title": "What is the correct definition of `unfold` for an untagged tree?", "body": "<p>I've been thinking in how to implement the equivalent of <code>unfold</code> for the following type:</p>\n\n<pre><code>data Tree a = Node (Tree a) (Tree a) | Leaf a | Nil\n</code></pre>\n\n<p>It was not immediately obvious since the standard <code>unfold</code> for lists returns a value and the next seed. For this datatype, it doesn't make sense, since there is no \"value\" until you reach a leaf node. This way, it only really makes sense to return new seeds or stop with a value. I'm using this definition:</p>\n\n<pre><code>data Drive s a = Stop | Unit a | Branch s s deriving Show\n\nunfold :: (t -&gt; Drive t a) -&gt; t -&gt; Tree a\nunfold fn x = case fn x of\n    Branch a b -&gt; Node (unfold fn a) (unfold fn b)\n    Unit a     -&gt; Leaf a\n    Stop       -&gt; Nil\n\nmain = print $ unfold go 5 where\n    go 0 = Stop\n    go 1 = Unit 1\n    go n = Branch (n - 1) (n - 2)\n</code></pre>\n\n<p>While this seems to work, I'm not sure this is how it is supposed to be. So, that is the question: what is the correct way to do it?</p>\n"}, {"tags": ["haskell", "yesod", "yesod-forms"], "comments": [{"owner": {"reputation": 7297, "user_id": 1176156, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/89604545aa57aa3d14306af60126e193?s=128&d=identicon&r=PG", "display_name": "MaxGabriel", "link": "https://stackoverflow.com/users/1176156/maxgabriel"}, "edited": false, "score": 0, "creation_date": 1424630107, "post_id": 28652271, "comment_id": 45618435, "body": "So, it seems that <code>pure</code> doesn&#39;t create form fields. Instead it seems to use whatever argument you give it in <code>runFormPost</code> to create the <code>Order</code>. Is your goal to have a text field to enter an email, filling it with a default value of &quot;email&quot; (same question for the price field)? If you could describe what you want your form be like I think I can answer your question."}, {"owner": {"reputation": 7297, "user_id": 1176156, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/89604545aa57aa3d14306af60126e193?s=128&d=identicon&r=PG", "display_name": "MaxGabriel", "link": "https://stackoverflow.com/users/1176156/maxgabriel"}, "edited": false, "score": 0, "creation_date": 1424641237, "post_id": 28652271, "comment_id": 45622135, "body": "They don&#39;t apply directly to your question, but since you said you&#39;re new, it might be worth checking out the <a href=\"http://www.yesodweb.com/book/forms\" rel=\"nofollow noreferrer\">Yesod book chapter on forms</a> or the forms portion of <a href=\"http://youtu.be/SadfV-qbVg8?t=12m7s\" rel=\"nofollow noreferrer\">this screencast</a>."}], "owner": {"reputation": 307, "user_id": 1757181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c6e20b0cf21e31df0cb8c861f23c918?s=128&d=identicon&r=PG", "display_name": "Zuzana", "link": "https://stackoverflow.com/users/1757181/zuzana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 74, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1424591152, "creation_date": 1424558614, "last_edit_date": 1424591152, "question_id": 28652271, "link": "https://stackoverflow.com/questions/28652271/what-are-the-correct-attributes-for-runformpost-in-post-handler", "title": "What are the correct attributes for runFormPost in POST handler?", "body": "<p>I am new to Yesod and Haskell and I do not understand how should I treat the runFormPost function when my form takes multiple attributes. I will give an example:</p>\n\n<p>This is my form:</p>\n\n<pre><code>orderForm :: [Entity Food] -&gt; Int -&gt; Maybe Order -&gt; Text -&gt; Form Order\norderForm foods price order email = renderBootstrap3 BootstrapBasicForm $ Order\n  &lt;$&gt; pure email\n  &lt;*&gt; areq (selectFieldList foodList) \"Food\" (orderFood &lt;$&gt; order)\n  &lt;*&gt; pure price\n  &lt;*  bootstrapSubmit (BootstrapSubmit (\"Send\" :: Text) \"btn-info\" [])\n</code></pre>\n\n<p>When I am rendering it in get handler, I am using it like this:</p>\n\n<pre><code>(form, _) &lt;- generateFormPost $ orderForm foods defaultFoodPrice Nothing email\n</code></pre>\n\n<p>Now I want to run the form in post handler and I am not sure if I need to pass the same arguments even though I do not need? is the correct approach to just pass empty values? </p>\n\n<pre><code>((res, form), _) &lt;- runFormPost $ orderForm [] 0 Nothing \"\"\n</code></pre>\n\n<p>If I understand it, the form now gets the value from the input from the user so I do not need to pass it any arguments, it should have everything what it needs, right? \nThanks for clarification. </p>\n"}, {"tags": ["haskell", "functional-programming", "binary-search-tree"], "answers": [{"tags": [], "owner": {"reputation": 497, "user_id": 3979725, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mj52I.jpg?s=128&g=1", "display_name": "David Lilue", "link": "https://stackoverflow.com/users/3979725/david-lilue"}, "is_accepted": true, "score": 2, "last_activity_date": 1424554809, "last_edit_date": 1424554809, "creation_date": 1424554445, "answer_id": 28651627, "question_id": 28651327, "link": "https://stackoverflow.com/questions/28651327/haskell-foldr-on-list/28651627#28651627", "title": "Haskell foldr on list", "body": "<p><code>foldr</code> recieve 3 arguments. A binary function (operator), the accumulator (neutral operand of the operator) and the structure (List). </p>\n\n<p>And you call function could be: </p>\n\n<p><code>foldr (&amp;&amp;) true $ map (member mBST) myList</code></p>\n\n<pre><code>:t member mBST\n member mBST :: (Ord a) =&gt; a -&gt; Bool\n</code></pre>\n\n<p><code>map</code> function aplied an unary operator (or a function that recieve one argument) on the elements of the array. After you aplied <code>member</code> with <code>mBST</code> on every member is on your structure (a list) then check if all are <code>true</code> using <code>foldr</code>.</p>\n"}], "owner": {"reputation": 65, "user_id": 3251433, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4b2452e822f36024bcae904449031545?s=128&d=identicon&r=PG&f=1", "display_name": "user062495", "link": "https://stackoverflow.com/users/3251433/user062495"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 337, "favorite_count": 0, "accepted_answer_id": 28651627, "answer_count": 1, "score": 0, "last_activity_date": 1424554809, "creation_date": 1424552840, "question_id": 28651327, "link": "https://stackoverflow.com/questions/28651327/haskell-foldr-on-list", "title": "Haskell foldr on list", "body": "<p>I have a member function in Haskell for a BST. I am trying to use foldr to check if every element in the list is in the BST. My member functions works for single elements and the first line looks like this. </p>\n\n<pre><code>member ::(Ord a) =&gt;  BST a -&gt; a -&gt; Bool\n</code></pre>\n\n<p>and when I have: </p>\n\n<pre><code>let val = foldr mBST my_list \n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>Couldn't match expected type `a0 -&gt; b0 -&gt; b0'\n            with actual type `BST Int'\nIn the first argument of `foldr', namely `mBST'\nIn the expression: foldr mBST my_list\n</code></pre>\n\n<p>I know foldr has type foldr :: (a -> b -> b) -> b -> [a] -> b, so my types are not matching but I don't know how to fix it or if it even possible to use foldr in this situation. But I need to check to see if every element in the list is in my BST. </p>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 1089, "user_id": 3681109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d676ca6572e75e842ca0fa3e9e82d1bb?s=128&d=identicon&r=PG&f=1", "display_name": "genisage", "link": "https://stackoverflow.com/users/3681109/genisage"}, "edited": false, "score": 0, "creation_date": 1424552643, "post_id": 28651214, "comment_id": 45600007, "body": "It&#39;s a simple conversion error, probably due to their dumb argument names. It should be <code>((+) 3 (head [0])) : [0]</code>. The accumulator is the second input to <code>foldr</code>&#39;s function but they call the accumulator argument <code>xs</code> for some crazy reason."}], "answers": [{"comments": [{"owner": {"reputation": 497, "user_id": 3979725, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mj52I.jpg?s=128&g=1", "display_name": "David Lilue", "link": "https://stackoverflow.com/users/3979725/david-lilue"}, "edited": false, "score": 0, "creation_date": 1424557430, "post_id": 28652051, "comment_id": 45601380, "body": "Obviously you must apply <code>reverse</code> because the returned list is backwards"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424560018, "post_id": 28652051, "comment_id": 45602024, "body": "I don&#39;t think it is backwards. This is a <i>right</i> scan, after all. Also, you renamed <code>x</code> to <code>b</code>, and I think leaving it as <code>x</code> would have made more sense."}, {"owner": {"reputation": 497, "user_id": 3979725, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mj52I.jpg?s=128&g=1", "display_name": "David Lilue", "link": "https://stackoverflow.com/users/3979725/david-lilue"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424561481, "post_id": 28652051, "comment_id": 45602360, "body": "You&#39;re right. I mistook :/ its <code>scanr</code> but i renamed both to show that, <code>f&#39;</code> is not directly related to the variable on <code>myscanl f acc xs = foldr f&#39; [acc] xs</code> (they could be name as you wish) Of course, its good name <code>b</code> as <code>x</code> and create more semantic."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424561648, "post_id": 28652051, "comment_id": 45602400, "body": "I wouldn&#39;t call it <code>myscanl</code> when it&#39;s <code>scanr</code>!"}, {"owner": {"reputation": 21, "user_id": 4592278, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cb90b9f55f37a54f73682fc604de62a?s=128&d=identicon&r=PG&f=1", "display_name": "0penStack", "link": "https://stackoverflow.com/users/4592278/0penstack"}, "edited": false, "score": 0, "creation_date": 1424565205, "post_id": 28652051, "comment_id": 45603273, "body": "Thank you for this. I can trace the working on paper even though I cannot grok it mentally just yet. Looking forward to when it&#39;s no longer inscrutable alien symbolism of enigmatic meaning. :)"}, {"owner": {"reputation": 497, "user_id": 3979725, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mj52I.jpg?s=128&g=1", "display_name": "David Lilue", "link": "https://stackoverflow.com/users/3979725/david-lilue"}, "edited": false, "score": 0, "creation_date": 1424566858, "post_id": 28652051, "comment_id": 45603630, "body": "The beginning is difficult, to switch context (imperative -&gt; functional). I guess thats your case, like others and me included. But later, the functional paradigm is more natural. And Haskell&#39;s type system is beautiful. If it compiles, runs"}], "tags": [], "owner": {"reputation": 497, "user_id": 3979725, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mj52I.jpg?s=128&g=1", "display_name": "David Lilue", "link": "https://stackoverflow.com/users/3979725/david-lilue"}, "is_accepted": false, "score": 3, "last_activity_date": 1424561715, "last_edit_date": 1424561715, "creation_date": 1424557118, "answer_id": 28652051, "question_id": 28651214, "link": "https://stackoverflow.com/questions/28651214/how-does-the-definition-of-scanr-in-terms-of-foldr-work/28652051#28652051", "title": "How does the definition of scanr in terms of foldr work?", "body": "<p>The matter on the function you found is:</p>\n\n<ol>\n<li>The <code>xs</code> on <code>myscan2 f acc xs = foldr f' [acc] xs</code> is not the same on<br>\n<code>f' x xs = (f x (head xs)) : xs</code>.</li>\n</ol>\n\n<p>They are completly diferent. Maybe you could understand better if it looks like:</p>\n\n<pre><code>myscanr f acc xs = foldr f' [acc] xs\n     where f' b a = (f b (head a)) : a\n</code></pre>\n\n<p>What it does, change the accumulator to a list, because scanl accumlate but it keep all the path going through the original list. So, <code>f'</code> <code>cons (:)</code> a new head applying the function <code>f</code> to the actual element of the list and the <code>head</code> of accumulator.</p>\n"}], "owner": {"reputation": 21, "user_id": 4592278, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cb90b9f55f37a54f73682fc604de62a?s=128&d=identicon&r=PG&f=1", "display_name": "0penStack", "link": "https://stackoverflow.com/users/4592278/0penstack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1000, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1424561715, "creation_date": 1424552057, "last_edit_date": 1424559772, "question_id": 28651214, "link": "https://stackoverflow.com/questions/28651214/how-does-the-definition-of-scanr-in-terms-of-foldr-work", "title": "How does the definition of scanr in terms of foldr work?", "body": "<p>Exercise 1 at page 102 of the Haskell Wikibook asks \"Write your own definition of scanr, first using recursion, and then using foldr.\" I wrote a recursive one:</p>\n\n<pre><code>myscan f acc []     = [acc]\nmyscan f acc (x:xs) = val : rest where\n    val  = f x (head rest)\n    rest = myscan f acc xs\n</code></pre>\n\n<p>...but couldn't figure out a foldr version. I eventually Googled and found this answer:</p>\n\n<pre><code>myscan2 f acc xs = foldr f' [acc] xs where\n    f' x xs = (f x (head xs)) : xs\n</code></pre>\n\n<p>Obviously it works but it doesn't make sense to me. Using parameters</p>\n\n<pre><code>(+) 0 [1,2,3]\n</code></pre>\n\n<p>...it becomes something like this:</p>\n\n<pre><code>myscan2 (+) 0 [1,2,3] = foldr f' [0] [1,2,3] where\n    f' [0] [1,2,3] = ((+) [0] (head [1,2,3])) : [1,2,3]\n</code></pre>\n\n<p>...but ((+) [0] (head [1,2,3])) part is not type compatible for (+). Yet, the function works, so what am I reading or converting incorrectly?</p>\n"}, {"tags": ["haskell", "types", "metaprogramming"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 4, "creation_date": 1424545560, "post_id": 28649854, "comment_id": 45597462, "body": "If you have several instances and don&#39;t want to use <code>newtype</code>s everywhere you can <a href=\"http://channel9.msdn.com/posts/MDCC-TechTalk-Classes-Jim-but-not-as-we-know-them\" rel=\"nofollow noreferrer\">pass a &quot;<code>Monoid</code>&quot; dictionary around manually</a> as <code>data RTMonoid a = { empty :: RT a, append :: RT a -&gt; RT a -&gt; RT a}</code> and <code>rt1 :: RTMonoid a; rt1 = RTMonoid ...</code>; <code>rt2 :: RTMonoid a; rt2 = RTMonoid ...</code>, then you can write your functions to accept an <code>RTMonoid a</code> parameter that you use instead.  It&#39;s a little clunkier having to pass it around manually, but it makes it more extensible.  If you only have 2 instances, use newtypes."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424546904, "post_id": 28649854, "comment_id": 45597961, "body": "You don&#39;t <i>have</i> to pick a default at all\u2014it may be better to force the user to choose using a newtype. You can also use separate functions to <code>mergeThisWay</code> and <code>mergeThatWay</code>."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 2, "creation_date": 1424561499, "post_id": 28649854, "comment_id": 45602365, "body": "You might use the typeclasses in <a href=\"http://hackage.haskell.org/package/lattices\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/lattices</a> Personally, I wish lattices were used more frequently in Haskell. They&#39;re such a useful structure."}], "answers": [{"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424557575, "post_id": 28651952, "comment_id": 45601428, "body": "An example of how to use <code>withMonoid</code> would add greatly to the introductory literature on <code>Data.Reflection</code>."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1424564511, "post_id": 28651952, "comment_id": 45603116, "body": "@Cirdec Another good example would be to  dynamically generate <code>FromJSON</code>/<code>ToJSON</code> instances for a type, depending on information obtained at runtime. Like, asking the user for a prefix to be added to each field name."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 3, "last_activity_date": 1424563922, "last_edit_date": 1424563922, "creation_date": 1424556589, "answer_id": 28651952, "question_id": 28649854, "link": "https://stackoverflow.com/questions/28649854/function-from-mappend-function-to-monoid-instance/28651952#28651952", "title": "Function from `mappend` function to `Monoid` instance?", "body": "<p>You <em>can</em> create \"local\" instances of <code>Monoid</code> on the fly, using the tools in the <a href=\"http://hackage.haskell.org/package/reflection\" rel=\"nofollow\">reflection</a> package. There's a <a href=\"https://github.com/ekmett/reflection/blob/master/examples/Monoid.hs\" rel=\"nofollow\">ready-made example</a> in the repository. This answer explains it a little.</p>\n\n<p>This is a newtype wrapper over values of type <code>a</code>, on which we will define our <code>Monoid</code> instance.</p>\n\n<pre><code>newtype M a s = M { runM :: a } deriving (Eq,Ord)\n</code></pre>\n\n<p>Notice that there is a phantom type <code>s</code> that does not appear in the right hand side. It will carry extra information necessary for the local <code>Monoid</code> instance to work.</p>\n\n<p>This is a record whose fields represent the two operation of the <code>Monoid</code> class:</p>\n\n<pre><code>data Monoid_ a = Monoid_ { mappend_ :: a -&gt; a -&gt; a, mempty_ :: a }\n</code></pre>\n\n<p>The following is the <code>Monoid</code> instance definition for <code>M</code>:</p>\n\n<pre><code>instance Reifies s (Monoid_ a) =&gt; Monoid (M a s) where\n    mappend a b        = M $ mappend_ (reflect a) (runM a) (runM b)\n    mempty = a where a = M $ mempty_ (reflect a)\n</code></pre>\n\n<p>It says: \"whenever <code>s</code> is a type-level representation of our <code>Monoid</code> dictionary <code>Monoid_</code>, we can reflect it back to obtain the dictionary, and use the fields to implement the <code>Monoid</code> operations for <code>M</code>\".</p>\n\n<p>Notice that the actual value <code>a</code> passed to <a href=\"http://hackage.haskell.org/package/reflection-1.5.1.1/docs/Data-Reflection.html#v:reflect\" rel=\"nofollow\"><code>reflect</code></a> is not used, it is passed only as a \"proxy\" of type <code>M a s</code> that tells <code>reflect</code> which type (<code>s</code>) to use to \"bring back the record\".</p>\n\n<p>The actual local instance is constructed using the <a href=\"http://hackage.haskell.org/package/reflection-1.5.1.1/docs/Data-Reflection.html#v:reify\" rel=\"nofollow\"><code>reify</code></a> function:</p>\n\n<pre><code>withMonoid :: (a -&gt; a -&gt; a) -&gt; a -&gt; (forall s. Reifies s (Monoid_ a) =&gt; M a s) -&gt; a\nwithMonoid f z v = reify (Monoid_ f z) (runM . asProxyOf v)\n\nasProxyOf :: f s -&gt; Proxy s -&gt; f s\nasProxyOf a _ = a\n</code></pre>\n\n<p>The <code>asProxyOf</code> function is a trick to convince the compiler that the phantom type used in the monoid is the same as the one in the <code>Proxy</code> supplied by <code>reify</code>.</p>\n"}], "owner": {"reputation": 679, "user_id": 1038984, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8ccdd2690efb42463e1e6587e17fad2?s=128&d=identicon&r=PG", "display_name": "jcc333", "link": "https://stackoverflow.com/users/1038984/jcc333"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 370, "favorite_count": 1, "accepted_answer_id": 28651952, "answer_count": 1, "score": 3, "last_activity_date": 1424563922, "creation_date": 1424544541, "question_id": 28649854, "link": "https://stackoverflow.com/questions/28649854/function-from-mappend-function-to-monoid-instance", "title": "Function from `mappend` function to `Monoid` instance?", "body": "<p>I have a data structure (it's a specific subclass of rose-tree that forms a lattice with greatest-lower bound and lowest-upper bound functions), and it supports two perfectly reasonable functions to serve as the <code>Monoid</code> class's <code>mappend</code>. </p>\n\n<p>Is there any way to support anonymous <code>Monoid</code> instances in haskell? Is this an instance where I should consider using something like Template-Haskell to generate my typeclasses for me?</p>\n\n<p>What I'd love is a <code>makeMonoid :: (RT a -&gt; RT a -&gt; RT a) -&gt; Monoid a</code> to let me create the instance on the fly, but I understand that that's incoherent with the stock typesystem as I understand it.\nI'm okay with it if I just need to pick a default merge function and write <code>newtype</code>s for other merges, just curious</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1424537443, "post_id": 28648000, "comment_id": 45594294, "body": "It might be better to sort it using <code>Data.List.sort</code>, then you can use <code>Data.List.group</code>, followed by <code>map (\\w -&gt; (head w, length w))</code>."}, {"owner": {"reputation": 223, "user_id": 4427395, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b20f770db92d1e5cfabb43a307ded6b4?s=128&d=identicon&r=PG&f=1", "display_name": "Abgo80", "link": "https://stackoverflow.com/users/4427395/abgo80"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1424537908, "post_id": 28648000, "comment_id": 45594471, "body": "Data.List will do what I am looking for but really want to do with standard prelude functions only."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424539161, "post_id": 28648000, "comment_id": 45594931, "body": "In order to do it recursively, you&#39;ll also have to keep track of which names you&#39;ve already seen.  It might be best to emulate the <code>Data.Map.Map</code> structure using <code>[(String, Int)]</code>, you can use <code>lookup</code> and you could write a custom <code>update</code> function to work with it as well."}], "answers": [{"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": false, "score": 1, "last_activity_date": 1424541129, "creation_date": 1424541129, "answer_id": 28649135, "question_id": 28648000, "link": "https://stackoverflow.com/questions/28648000/haskell-how-to-count-and-group-strings-in-a-list/28649135#28649135", "title": "Haskell How to count and group strings in a list", "body": "<p>To do this with just <code>Prelude</code> functions and recursion, you can emulate a <code>Map</code> structure using a list of tuples.  This will be less efficient, but it avoids having to use other modules.  The core of the algorithm is just writing a function that updates a value in a <code>Map</code>:</p>\n\n<pre><code>type Map k v = [(k, v)]  -- Simulate Data.Map.Map\n\nupdate :: Eq k =&gt; k -&gt; (Maybe v -&gt; v) -&gt; Map k v -&gt; Map k v\nupdate k fv [] = [(k, fv Nothing)]\nupdate k fv ((k', v'):rest)\n    = if k == k'\n        then (k', fv $ Just v') :             rest\n        else (k',           v') : update k fv rest\n</code></pre>\n\n<p>This function just says to walk down the <code>Map</code>, if it finds the element then update it and stop, otherwise keep trying.  If it hits the end of the <code>Map</code> then call the updating function with <code>Nothing</code> to produce a default value.</p>\n\n<p>Next, we can use this to build up a <code>Map k Int</code> for this specific case:</p>\n\n<pre><code>countOccurs :: Eq k =&gt; [k] -&gt; Map k Int\ncountOccurs = foldr go []\n    where\n        go k = update k updtr\n        updtr Nothing  = 1\n        updtr (Just i) = i + 1\n</code></pre>\n\n<p>But we can inline <code>updtr</code> to be just <code>maybe 1 (+1)</code>:</p>\n\n<pre><code>countOccurs = foldr go []\n    where\n        go k = update k (maybe 1 (+1))\n</code></pre>\n\n<p>And since <code>go</code> is simple enough, let's just inline it using <code>flip</code>, or equivalently using backticks to make <code>update</code> infix:</p>\n\n<pre><code>countOccurs = foldr (`update` maybe 1 (+1)) []\n</code></pre>\n\n<p>We don't even need to put parens around <code>maybe 1 (+1)</code> since it is now seen as an argument to an operator.</p>\n\n<hr>\n\n<p>As a demo:</p>\n\n<pre><code>&gt; countOccurs $ words \"Abhi Stack how Abhi\"\n[(\"Abhi\", 2), (\"how\", 1), (\"Stack\", 1)]\n\n&gt; countOccurs [1, 1, 2, 3, 2, 2, 1, 1]\n[(1, 4), (2, 3), (3, 1)]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 223, "user_id": 4427395, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b20f770db92d1e5cfabb43a307ded6b4?s=128&d=identicon&r=PG&f=1", "display_name": "Abgo80", "link": "https://stackoverflow.com/users/4427395/abgo80"}, "edited": false, "score": 0, "creation_date": 1424651806, "post_id": 28658646, "comment_id": 45625301, "body": "I fixed it afterwards."}, {"owner": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "reply_to_user": {"reputation": 223, "user_id": 4427395, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b20f770db92d1e5cfabb43a307ded6b4?s=128&d=identicon&r=PG&f=1", "display_name": "Abgo80", "link": "https://stackoverflow.com/users/4427395/abgo80"}, "edited": false, "score": 0, "creation_date": 1424652105, "post_id": 28658646, "comment_id": 45625389, "body": "@AbhinavGogna you mean in your answer? cool! Should I leave my remark since it refers to your posted code and could be helpful to someone?"}, {"owner": {"reputation": 223, "user_id": 4427395, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b20f770db92d1e5cfabb43a307ded6b4?s=128&d=identicon&r=PG&f=1", "display_name": "Abgo80", "link": "https://stackoverflow.com/users/4427395/abgo80"}, "edited": false, "score": 0, "creation_date": 1424653011, "post_id": 28658646, "comment_id": 45625622, "body": "Please leave it. It can be useful for someone else. Thanks!"}], "tags": [], "owner": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "is_accepted": false, "score": 0, "last_activity_date": 1424652155, "last_edit_date": 1424652155, "creation_date": 1424613547, "answer_id": 28658646, "question_id": 28648000, "link": "https://stackoverflow.com/questions/28648000/haskell-how-to-count-and-group-strings-in-a-list/28658646#28658646", "title": "Haskell How to count and group strings in a list", "body": "<p>One problem in your code is the snippet, <code>countList xs</code> - it means you are not counting occurrences of each <code>x</code> in the full list but rather one that diminishes with each call of <code>countList</code>. </p>\n\n<p>Why not add a parameter to your original <code>countList</code> of the form <code>[(Int,String)]</code>- let's call it, <code>result</code>. </p>\n\n<p>As you traverse the list to count, pass <code>x</code> and <code>result</code> to the <code>checkCount</code> function, which in this case will traverse <code>result</code>. If it finds a match for <code>x</code>, it will increase the count for that <code>x</code> in <code>result</code>. If it does not find <code>x</code>, it will insert <code>(1,x)</code> in <code>result</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 223, "user_id": 4427395, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b20f770db92d1e5cfabb43a307ded6b4?s=128&d=identicon&r=PG&f=1", "display_name": "Abgo80", "link": "https://stackoverflow.com/users/4427395/abgo80"}, "is_accepted": false, "score": 0, "last_activity_date": 1424648444, "creation_date": 1424648444, "answer_id": 28664807, "question_id": 28648000, "link": "https://stackoverflow.com/questions/28648000/haskell-how-to-count-and-group-strings-in-a-list/28664807#28664807", "title": "Haskell How to count and group strings in a list", "body": "<p>bheklilr - Thanks for your awesome answer and explanation. Since I am a newb in Haskell it was little over my head in the beginning.</p>\n\n<p>Anyway, I found another way to do it. I changed my approach to list recursion with index. It may not be optimal but at least works. Here it goes</p>\n\n<p>Initially I was iterating using list values, so, I couldn't account for values that were removed. I decided to keep the list as is and iterate using indices. </p>\n\n<p>countList' is a wrapper, so, I don't have to pass list with its length.</p>\n\n<pre><code>countList' :: [String] -&gt; [(Int,String)]\ncountList' [] = []\ncountList' lst = countListWithIndex (length' lst) lst\n</code></pre>\n\n<p>CheckCount function was unchanged</p>\n\n<pre><code>checkCount :: String -&gt; [String] -&gt; Int\ncheckCount _ [] = 0\ncheckCount str (x:xs) | str == x = 1 + checkCount str xs\n                      | otherwise = 0 + checkCount str xs\n</code></pre>\n\n<p>This function gets the number of repetitions in the list based on the index.</p>\n\n<pre><code>countListWithIndex :: Int -&gt; [String] -&gt; [(Int, String)]\ncountListWithIndex 0 _ = []\ncountListWithIndex n str = (checkCount string str, string) : countListWithIndex (n-1) str\n                             where string = dataAt (n-1) str\n</code></pre>\n\n<p>Function to find data in a list using index</p>\n\n<pre><code>dataAt :: Int -&gt; [a] -&gt; a\ndataAt _ [] = error \"Empty List!\"\ndataAt y (x:xs)  | y &lt;= 0 = x\n                 | otherwise = dataAt (y-1) xs\n</code></pre>\n\n<p>Simple function to calculate length of a list </p>\n\n<pre><code>length' :: [a] -&gt; Int\nlength' [] = 0\nlength' (_:xs) = 1 + length' xs\n</code></pre>\n\n<p>Also, I know the list still has duplicate values. I may have to write another function to remove them. Baby steps :)</p>\n\n<p>Anyway would love to know feedback.</p>\n"}, {"comments": [{"owner": {"reputation": 223, "user_id": 4427395, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b20f770db92d1e5cfabb43a307ded6b4?s=128&d=identicon&r=PG&f=1", "display_name": "Abgo80", "link": "https://stackoverflow.com/users/4427395/abgo80"}, "edited": false, "score": 0, "creation_date": 1424652827, "post_id": 28665255, "comment_id": 45625573, "body": "Nice! you passed the same list twice in the function."}], "tags": [], "owner": {"reputation": 497, "user_id": 3979725, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mj52I.jpg?s=128&g=1", "display_name": "David Lilue", "link": "https://stackoverflow.com/users/3979725/david-lilue"}, "is_accepted": false, "score": 0, "last_activity_date": 1424651579, "creation_date": 1424651579, "answer_id": 28665255, "question_id": 28648000, "link": "https://stackoverflow.com/questions/28648000/haskell-how-to-count-and-group-strings-in-a-list/28665255#28665255", "title": "Haskell How to count and group strings in a list", "body": "<p>What happen on your function <code>countList</code> (checkCount is fine) is on this line <code>countList xss@(x:xs) = (x,checkCount x xss) : countList xs</code>. When you call recursivly to <code>countList</code> you lost the head <code>x</code>. So, the first recursive call will be like:</p>\n\n<pre><code>(\"Abni\",2) : countList [\"Stack\",\"how\", \"Abhi\"]\n</code></pre>\n\n<p>When it get to the next <code>\"Abni\"</code>, there will be just one.</p>\n\n<p>You need to keep the original list. Try this:</p>\n\n<pre><code>countList' :: [String] -&gt; [(String, Int)]\ncountList' [] = []\ncountList' (s:ss) = fun s ss (s:ss) []\n    where fun s ss sss acc\n        | null ss   = (s, checkCount' s sss):acc\n        | otherwise = fun (head ss) (tail ss) sss $ (s, checkCount' s sss):acc \n</code></pre>\n\n<p>The above is with tail recursion. More simple:</p>\n\n<pre><code>countList :: [String] -&gt; [(String, Int)]\ncountList [] = []\ncountList ss = hack ss ss\n    where hack (x:xs) sss\n        | null xs   = [(x, checkCount x sss)]\n        | otherwise = (x, checkCount x sss) : (hack xs sss)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 62908, "user_id": 567620, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/g8HIM.jpg?s=128&g=1", "display_name": "ely", "link": "https://stackoverflow.com/users/567620/ely"}, "is_accepted": false, "score": 0, "last_activity_date": 1424653512, "last_edit_date": 1424653512, "creation_date": 1424653085, "answer_id": 28665455, "question_id": 28648000, "link": "https://stackoverflow.com/questions/28648000/haskell-how-to-count-and-group-strings-in-a-list/28665455#28665455", "title": "Haskell How to count and group strings in a list", "body": "<p>Here is one way to do it with a series of helper functions. I assume that extra verbosity is OK since the solution needs to use only Prelude ... a concise solution would be a direct application of helper functions that already exist in either <code>Data.Map</code> or <code>Data.List</code>. Probably some of what I have can be made shorter using <code>fold</code> and so on...</p>\n\n<pre><code>countByGroup :: (Eq a) =&gt; [a] -&gt; [(a, Int)]\ncountByGroup [] = []\ncountByGroup xs = let (c:cs) = toCounts xs\n                  in mergeCounts [c] cs\n\ntoCounts :: [a] -&gt; [(a, Int)]\ntoCounts xs = [(x, 1) | x &lt;- xs]\n\nmergeCounts :: (Eq a) =&gt; [(a, Int)] -&gt; [(a, Int)] -&gt; [(a, Int)]\nmergeCounts = mergeCounts' []\n\nmergeCounts' :: (Eq a) =&gt; [(a, Int)] -&gt; [(a, Int)] -&gt; [(a, Int)] -&gt; [(a, Int)]\nmergeCounts' acc [] [] = acc\nmergeCounts' acc (l:ls) [] = case ls of\n    [] -&gt; acc ++ [l]\n    otherwise -&gt; acc ++ mergeCounts [l] ls\nmergeCounts' acc [] (r:rs) = case rs of\n    [] -&gt; acc ++ [r]\n    otherwise -&gt; acc ++ mergeCounts [r] rs\nmergeCounts' acc (l:ls) rs = \n    let rSum   = sum [snd r | r &lt;- rs, fst r == fst l]\n        lSum   = sum [snd x | x &lt;- ls, fst x == fst l]\n        newAcc = acc ++ [(fst l, snd l + rSum + lSum)]\n        newRs  = [r | r &lt;- rs, fst r /= fst l]\n        newLs  = [x | x &lt;- ls, fst x /= fst l]\n    in  mergeCounts' newAcc newLs newRs\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>*Main&gt; countByGroup [\"a\", \"b\", \"a\", \"b\"]\n[(\"a\",2),(\"b\",2)]\n*Main&gt; countByGroup [\"Abhi\", \"Stack\",\"how\", \"Abhi\"]\n[(\"Abhi\",2),(\"Stack\",1),(\"how\",1)]\n*Main&gt; countByGroup [\"Abhi\", \"Stack\",\"how\", \"Abhi\", \"how\"]\n[(\"Abhi\",2),(\"Stack\",1),(\"how\",2)]\n*Main&gt; countByGroup [\"Abhi\", \"Abhi\"]\n[(\"Abhi\",2)]\n*Main&gt; countByGroup []\n[]\n*Main&gt; countByGroup [\"how\", \"Abhi\", \"Abhi\", \"how\", \"how\"]\n[(\"how\",3),(\"Abhi\",2)]\n</code></pre>\n"}], "owner": {"reputation": 223, "user_id": 4427395, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b20f770db92d1e5cfabb43a307ded6b4?s=128&d=identicon&r=PG&f=1", "display_name": "Abgo80", "link": "https://stackoverflow.com/users/4427395/abgo80"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1601, "favorite_count": 0, "answer_count": 5, "score": 2, "last_activity_date": 1424653512, "creation_date": 1424535603, "question_id": 28648000, "link": "https://stackoverflow.com/questions/28648000/haskell-how-to-count-and-group-strings-in-a-list", "title": "Haskell How to count and group strings in a list", "body": "<p>I am learning haskell and need some help in figuring out logic for this function. I only want to do the problem using functions in standard prelude and recursion if possible.</p>\n\n<p>So I have a list of things eg: </p>\n\n<pre><code>[\"Abhi\", \"Stack\",\"how\", \"Abhi\"]\n</code></pre>\n\n<p>Goal is to convert this into list of pair with a count and list item\noutput : <code>[(\"Abhi\", 2), (\"Stack\",1)..]</code></p>\n\n<p>I came up with the following functions</p>\n\n<pre><code>countList :: [String] -&gt; [(Int,String)]\ncountList [] = []\ncountList xss@(x:xs) = (x,checkCount x xss) : countList xs\n\ncheckCount :: String -&gt; [String] -&gt; Int\ncheckCount _ [] = 0\ncheckCount str (x:xs) | str == x = 1 + checkCount str xs\n                      | otherwise = 0 + checkCount str xs\n</code></pre>\n\n<p>The output I get from this is :</p>\n\n<pre><code>[(\"Abhi\",2), (\"Stack\",1), (\"how\",1),(\"Abhi\",1)]\n</code></pre>\n\n<p>Notice how the last item is Abhi, 1. I can't find a recursive way to fix it.</p>\n"}, {"tags": ["haskell", "io", "monads", "state-monad"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424534655, "post_id": 28647563, "comment_id": 45593231, "body": "The code is very confusing. Could you explain what it is that you&#39;re trying to do? It kind of sounds to me like you&#39;re trying to build something like <code>StateT s IO a</code>. You can find variants of that in <code>Control.Monad.Trans.State.Strict</code> and <code>Control.Monad.Trans.State.Lazy</code>. But I can&#39;t say for sure because I don&#39;t understand your code."}, {"owner": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424574655, "post_id": 28647563, "comment_id": 45605087, "body": "@dfeuer I would liket to separate the monad action and the state record in the two parts of a tuple: (monad, state), so that I can call fst and snd when needed to separate them and perform some suitable actions. I don&#39;t know how to explain it explicitly, maybe after I complete the code I can show the usage of this monad, and then it will be clear what I am trying to build here."}], "answers": [{"comments": [{"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424572216, "post_id": 28648950, "comment_id": 45604622, "body": "<code>S -&gt; (m a, S)</code> doesn&#39;t work, it gives no way for the inner monad to affect the state. You need <code>S -&gt; m (a, S)</code>."}, {"owner": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424574462, "post_id": 28648950, "comment_id": 45605044, "body": "@&#216;rjanJohansen I don&#39;t want the inner monad to affect the state either, but still thanks for the suggestion."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424575160, "post_id": 28648950, "comment_id": 45605177, "body": "@&#216;rjanJohansen That&#39;s certainly another choice; and it&#39;s more general. Thanks for pointing it out."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 1, "creation_date": 1424576211, "post_id": 28648950, "comment_id": 45605378, "body": "What I mean is that unless the inner monad is placed such that it can affect the state, I don&#39;t see how to make the combined type a monad. The problem is that with <code>bind :: (S -&gt; (m a, S)) -&gt; (a -&gt; (S -&gt; (m b, S)) -&gt; (S -&gt; (m b, S))</code> you have no chance to thread the states in such a way that you get the final <code>S</code> purely, because you only get it by using <code>a</code>, which you only get from inside the <code>m</code> monad."}, {"owner": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424576673, "post_id": 28648950, "comment_id": 45605474, "body": "@&#216;rjanJohansen Thanks! I was going to comment about such a problem, and wondering if I should somehow define a function m a -&gt; a. But how is the approach S -&gt; m (a, S) going to solve this problem? Can I get a out of m (a, S)?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424576845, "post_id": 28648950, "comment_id": 45605506, "body": "@&#216;rjanJohansen Ack, of course you are right. I will fix the answer in a moment."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "edited": false, "score": 0, "creation_date": 1424576902, "post_id": 28648950, "comment_id": 45605517, "body": "@awllower The point is that you don&#39;t need to get the <code>a</code> out of the <code>m (a, S)</code> -- since the final action you need to return is also in the <code>m</code> monad."}, {"owner": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424577232, "post_id": 28648950, "comment_id": 45605567, "body": "@&#216;rjanJohansen I don&#39;t understand how exactly I can get this to work: now c1 s0 is of type m(a, S), and then I don&#39;t know what to apply fc2 to. Could you specify your solution to this problem? Thanks in any case for the attention."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "reply_to_user": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "edited": false, "score": 0, "creation_date": 1424577981, "post_id": 28648950, "comment_id": 45605722, "body": "@awllower It needs a slight change to your original code to use the inner monad bind instead of one of the <code>let</code>s: <code>SMT c1 &gt;&gt;= fc2 = SMT (\\s0 -&gt; c1 s0 &gt;&gt;= \\(r, s1) -&gt; let SMT c2 = fc2 r in c2 s1)</code>"}, {"owner": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 0, "creation_date": 1424578574, "post_id": 28648950, "comment_id": 45605789, "body": "@&#216;rjanJohansen Thanks for the great help you provide for a Haskell newbie like me! Thanks also go to DanielWagner. :)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424579325, "post_id": 28648950, "comment_id": 45605934, "body": "Isn&#39;t this just <code>StateT S m a</code>?"}, {"owner": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424579983, "post_id": 28648950, "comment_id": 45606083, "body": "@dfeuer I didn&#39;t know about the monad transformers, in particular, StateT. But still thanks for pointing this fact out!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1424576862, "last_edit_date": 1424576862, "creation_date": 1424540306, "answer_id": 28648950, "question_id": 28647563, "link": "https://stackoverflow.com/questions/28647563/a-monad-of-tuples-monad-state/28648950#28648950", "title": "A monad of tuples (monad, state)?", "body": "<p>The type of <code>(&gt;&gt;=)</code> is:</p>\n\n<pre><code>Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>Since you are writing an instance for <code>SM</code>, the type of bind in your instance is therefore</p>\n\n<pre><code>SM a -&gt; (a -&gt; SM b) -&gt; SM b\n</code></pre>\n\n<p>Notice that both <code>a</code> and <code>b</code> are completely unrestricted type variables. That means whatever implementation you give <em>must</em> work no matter what types I choose to put in there. In particular, I could choose, say, <code>Int</code> for both <code>a</code> and <code>b</code>:</p>\n\n<pre><code>SM Int -&gt; (Int -&gt; SM Int) -&gt; SM Int\n</code></pre>\n\n<p>And now it is clear why your implementation is no good: it will attempt to treat an <code>Int</code> as if it were a monadic action and call <code>(&gt;&gt;=)</code> on it.</p>\n\n<p>If you want to be able to do monadic actions inside your bind, you will have to talk about the monad in your type somehow; for example, one standard way is to define</p>\n\n<pre><code>data SMT m a = SMT (S -&gt; m (a, S))\n</code></pre>\n\n<p>and give an instance like:</p>\n\n<pre><code>instance Monad m =&gt; Monad (SMT m) where -- ...\n</code></pre>\n\n<p>The normal <code>SM</code> can then be recovered, if you like, by using the <a href=\"https://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-Identity.html\" rel=\"nofollow\"><code>Identity</code></a> monad as the nested monad.</p>\n"}], "owner": {"reputation": 571, "user_id": 3429327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/uPy6Z.jpg?s=128&g=1", "display_name": "awllower", "link": "https://stackoverflow.com/users/3429327/awllower"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 308, "favorite_count": 1, "accepted_answer_id": 28648950, "answer_count": 1, "score": 1, "last_activity_date": 1424576862, "creation_date": 1424533034, "question_id": 28647563, "link": "https://stackoverflow.com/questions/28647563/a-monad-of-tuples-monad-state", "title": "A monad of tuples (monad, state)?", "body": "<p>I am trying to write a Haskell \"number-guessing\" game program, using Monads, but I am stucked:<br>\nI tried the simple state monad:  </p>\n\n<pre><code>data SM a = SMN (S -&gt; (a, S))\ninstance Monad SM where\n SMN c1 &gt;&gt;= fc2 = SMN (\\s0 -&gt; let (r, s1) = c1 s0 in\n                                let SMN c2 = fc2 r in\n                                  c2 s1)\n</code></pre>\n\n<p>And I need to perform the IO tasks on the \"IO-side\" of the tuple (a, S), that is, I tried doing something like:  </p>\n\n<pre><code>SMN c1 &gt;&gt;= fc2 = SMN (\\s0 -&gt; let (r, s1) = c1 s0 in\n                               let SMN c2 = fc2 r in\n                                 let (r1, s2) = c2 s1 in\n                                   let r2 = r1 &gt;&gt;= (\\_ -&gt; r) in\n                                     (r2, s2))\n</code></pre>\n\n<p>In short, the bind operator I would like to define is the same as the original state monad, except that we bind r1 and the constant function that takes an argument to r (so that the two actions are chained together). But the ghc tells me that a is a rigid type variable... What does that mean? I cannot use another bind operator inside one bind operator?<br>\nIf so, then is there a way to implement such a bind operator? How?<br>\nAs I am new to Haskell(I think I might have had a notational error concerning the function  </p>\n\n<pre><code>\\_ -&gt; r\n</code></pre>\n\n<p>), any opinion and reference are welcomed, thanks in advance.<br>\nP.S. I used different notations for the data type SM and the type constructor SMN, so as to differentiate them.</p>\n"}, {"tags": ["haskell", "vim", "emacs", "editor"], "comments": [{"owner": {"reputation": 1548, "user_id": 3368845, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/wCXhp.jpg?s=128&g=1", "display_name": "EvergreenTree", "link": "https://stackoverflow.com/users/3368845/evergreentree"}, "edited": false, "score": 1, "creation_date": 1424545814, "post_id": 28647526, "comment_id": 45597562, "body": "You could use tagbar with hasktags suport: <a href=\"https://github.com/majutsushi/tagbar/wiki#haskell\" rel=\"nofollow noreferrer\">github.com/majutsushi/tagbar/wiki#haskell</a>"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1424539648, "creation_date": 1424539648, "answer_id": 28648799, "question_id": 28647526, "link": "https://stackoverflow.com/questions/28647526/plugins-or-editors-for-haskell-source-code-navigation/28648799#28648799", "title": "Plugins or editors for Haskell source code navigation", "body": "<p>In vim, you can <code>:set foldmethod=indent</code> to approximate the first. Use <a href=\"http://hackage.haskell.org/package/hasktags\" rel=\"nofollow\"><code>hasktags</code></a> together with vim's builtin tags support for the second (see especially <code>Ctrl-]</code>, <code>Ctrl-T</code>, and in larger projects, <code>:tnext</code> and <code>:tprevious</code>).</p>\n"}, {"tags": [], "owner": {"reputation": 101, "user_id": 4211172, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5n7vP.jpg?s=128&g=1", "display_name": "Rik", "link": "https://stackoverflow.com/users/4211172/rik"}, "is_accepted": false, "score": 1, "last_activity_date": 1424540128, "creation_date": 1424540128, "answer_id": 28648901, "question_id": 28647526, "link": "https://stackoverflow.com/questions/28647526/plugins-or-editors-for-haskell-source-code-navigation/28648901#28648901", "title": "Plugins or editors for Haskell source code navigation", "body": "<p>See IntelliJ plugin for Haskell:\n<a href=\"https://github.com/rikvdkleij/intellij-haskell\" rel=\"nofollow\">https://github.com/rikvdkleij/intellij-haskell</a></p>\n\n<p>Available in Jetbrains plugins repo</p>\n"}], "owner": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "closed_date": 1424597101, "answer_count": 2, "score": 0, "last_activity_date": 1424540128, "creation_date": 1424532798, "last_edit_date": 1424533487, "question_id": 28647526, "link": "https://stackoverflow.com/questions/28647526/plugins-or-editors-for-haskell-source-code-navigation", "closed_reason": "Not suitable for this site", "title": "Plugins or editors for Haskell source code navigation", "body": "<p>I'm looking for Vim/Emacs plugins or other editors for handily going through Haskell source code with two major built-in features:</p>\n\n<ul>\n<li>code fold/unfold per function/type/typeclass;</li>\n<li>jump to function/type/typeclass definition in the dependent module.</li>\n</ul>\n\n<p>(Haskell website and Hoogle are nice but not what I really pursue.)</p>\n"}, {"tags": ["list", "haskell", "intersection"], "comments": [{"owner": {"reputation": 9978, "user_id": 2986537, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff296a622eb6993b28017005d1f7e2c1?s=128&d=identicon&r=PG&f=1", "display_name": "Razib", "link": "https://stackoverflow.com/users/2986537/razib"}, "edited": false, "score": 0, "creation_date": 1424525464, "post_id": 28646327, "comment_id": 45590356, "body": "You need all possible intersections. So I think you may produce the power set of your intersection. You may use Guava -<a href=\"http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Sets.html\" rel=\"nofollow noreferrer\">docs.guava-libraries.googlecode.com/git/javadoc/com/google/&zwnj;&#8203;&hellip;</a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 9978, "user_id": 2986537, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff296a622eb6993b28017005d1f7e2c1?s=128&d=identicon&r=PG&f=1", "display_name": "Razib", "link": "https://stackoverflow.com/users/2986537/razib"}, "edited": false, "score": 1, "creation_date": 1424525500, "post_id": 28646327, "comment_id": 45590369, "body": "@Razib, isn&#39;t Guava a <i>Java</i> library?"}, {"owner": {"reputation": 3, "user_id": 4591266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8dffe48a4b2d211c9f379602af43199?s=128&d=identicon&r=PG&f=1", "display_name": "hques12", "link": "https://stackoverflow.com/users/4591266/hques12"}, "edited": false, "score": 0, "creation_date": 1424525558, "post_id": 28646327, "comment_id": 45590380, "body": "Sorry - what is Guava?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1424525698, "post_id": 28646327, "comment_id": 45590432, "body": "hques12, if I&#39;m not mistaken it&#39;s completely irrelevant. Can you explain better what you mean by &quot;all possible intersections&quot;?"}, {"owner": {"reputation": 3, "user_id": 4591266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8dffe48a4b2d211c9f379602af43199?s=128&d=identicon&r=PG&f=1", "display_name": "hques12", "link": "https://stackoverflow.com/users/4591266/hques12"}, "edited": false, "score": 1, "creation_date": 1424526053, "post_id": 28646327, "comment_id": 45590539, "body": "So if I have a list1 where order matters - here [2,4,1,5,4] and a list2 which can be in any order [2,4,5,1] then I wish to have a function that will produce  the subsequences of list1 that contain all the elements in list 2. But if an element is in list1 twice then it will need to be in list 2 twice in order to be included twice."}, {"owner": {"reputation": 3, "user_id": 4591266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8dffe48a4b2d211c9f379602af43199?s=128&d=identicon&r=PG&f=1", "display_name": "hques12", "link": "https://stackoverflow.com/users/4591266/hques12"}, "edited": false, "score": 0, "creation_date": 1424526096, "post_id": 28646327, "comment_id": 45590548, "body": "Now I&#39;ve written that I think that maybe I could use the subsequences function in some way?"}, {"owner": {"reputation": 3, "user_id": 4591266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8dffe48a4b2d211c9f379602af43199?s=128&d=identicon&r=PG&f=1", "display_name": "hques12", "link": "https://stackoverflow.com/users/4591266/hques12"}, "edited": false, "score": 0, "creation_date": 1424526896, "post_id": 28646327, "comment_id": 45590778, "body": "<code>intersect&#39;&#39; xs ys = [x | x &lt;- subsequences xs, length x == length ys, intersect&#39; x ys == x]</code> might work I think"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424528468, "post_id": 28646327, "comment_id": 45591233, "body": "hques12, are you only looking for ways you can rearrange one list so that it becomes a subsequence of the other? Or are you also interested in more general things where neither is a submultiset of the other?"}], "answers": [{"comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1424532061, "post_id": 28646848, "comment_id": 45592380, "body": "note that this will be quadratic, as we&#39;re doing repeated linear searches using <code>elem</code>."}], "tags": [], "owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "is_accepted": false, "score": 0, "last_activity_date": 1424529967, "last_edit_date": 1424529967, "creation_date": 1424528567, "answer_id": 28646848, "question_id": 28646327, "link": "https://stackoverflow.com/questions/28646327/finding-all-possible-intersections-of-two-lists/28646848#28646848", "title": "Finding all possible intersections of two lists", "body": "<blockquote>\n  <p>The built in intersect will give me [4,2,1,5,4].</p>\n</blockquote>\n\n<p>And from <code>[4,2,1,5,4]</code> you can get <code>[[2,4,1,5], [2,1,5,4]]</code> using this function:</p>\n\n<pre><code>uniqs :: Eq a =&gt; [a] -&gt; [[a]]\nuniqs  []    = [[]]\nuniqs (x:xs)\n    | x `elem` xs = map (x:) (uniqs (filter (/= x) xs)) ++ uniqs xs\n    | otherwise   = map (x:) (uniqs xs)\n</code></pre>\n\n<p>Then your <code>intersections</code> is simply</p>\n\n<pre><code>intersections :: Eq a =&gt; [a] -&gt; [a] -&gt; [[a]]\nintersections xs ys = uniqs (intersect xs ys)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": true, "score": 0, "last_activity_date": 1424531950, "creation_date": 1424531950, "answer_id": 28647391, "question_id": 28646327, "link": "https://stackoverflow.com/questions/28646327/finding-all-possible-intersections-of-two-lists/28647391#28647391", "title": "Finding all possible intersections of two lists", "body": "<p>Since you're using your second list like a multi-set, let's make that explicit in the type:</p>\n\n<pre><code>intersections :: Ord a =&gt; [a] -&gt; MultiSet a -&gt; [[a]]\n</code></pre>\n\n<p>The only intersection of a list and an empty multi-set is the empty list</p>\n\n<pre><code>intersections _ m | M.null m = [[]]\n</code></pre>\n\n<p>There's no intersections of an empty list and a non-empty multi-set</p>\n\n<pre><code>intersections [] _ = []\n</code></pre>\n\n<p>Given a non-empty list and a non-empty multiset, we have all the intersections that use the first item, and all the intersections that don't</p>\n\n<pre><code>intersections (a:as) m = with ++ without\n</code></pre>\n\n<p>If the first item in the list isn't in the multiset, then there's no intersections that use it</p>\n\n<pre><code>  where with = case M.lookup a m of\n          Nothing -&gt; []\n</code></pre>\n\n<p>If it is in the multi-set, then then the intersections that use that item are just extensions of the intersections of the rest of the list and the multi-set after removing one instance of that item,</p>\n\n<pre><code>          Just n -&gt; map (a:) . intersections as $ update a (n-1) m\n</code></pre>\n\n<p>The intersections that don't use the item are easily defined by recursion</p>\n\n<pre><code>        without = intersections as m\n</code></pre>\n\n<p>And for completeness, a definition of multi-set:</p>\n\n<pre><code>import qualified Data.Map as M\nimport qualified Data.List as L\n\ntype MultiSet a = M.Map a Int\n\nfromList :: Ord a =&gt; [a] -&gt; MultiSet a\nfromList = L.foldl' (\\m a -&gt; M.insertWith' (+) a 1 m) M.empty\n\ntoList :: MultiSet a -&gt; [a]\ntoList = concatMap (uncurry $ flip replicate) . M.toList\n\nupdate :: Ord a =&gt; a -&gt; Int -&gt; MultiSet a -&gt; MultiSet a\nupdate a 0 = M.delete a\nupdate a n = M.insert a n\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 4591266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8dffe48a4b2d211c9f379602af43199?s=128&d=identicon&r=PG&f=1", "display_name": "hques12", "link": "https://stackoverflow.com/users/4591266/hques12"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1115, "favorite_count": 0, "accepted_answer_id": 28647391, "answer_count": 2, "score": 0, "last_activity_date": 1424531950, "creation_date": 1424525246, "question_id": 28646327, "link": "https://stackoverflow.com/questions/28646327/finding-all-possible-intersections-of-two-lists", "title": "Finding all possible intersections of two lists", "body": "<p>Say I have a list [2,4,1,5,4] and a list [2,4,5,1] then I wish to have an intersect function that will give me all possible intersections. So the function will output a list of [[2,4,1,5], [2,1,5,4]] in this case. </p>\n\n<p>The built in intersect will give me [4,2,1,5,4]. </p>\n\n<p>I have tried to start by making a function </p>\n\n<p><code>intersect' xs ys = xs \\\\ (xs \\\\ ys)</code></p>\n\n<p>This only gives me one of the possibilities -  [2,1,5,4].</p>\n\n<p>I would appreciate any help with this.</p>\n"}, {"tags": ["haskell", "readline"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424523072, "post_id": 28645656, "comment_id": 45589677, "body": "Maybe using <code>rl_insert_text</code> aka <code>insertText</code> you can get the wanted effect?"}, {"owner": {"reputation": 1510, "user_id": 1576064, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/47c868b652ffdc287498a8c604a30013?s=128&d=identicon&r=PG", "display_name": "Lubom&#237;r Sedl&#225;\u0159", "link": "https://stackoverflow.com/users/1576064/lubom%c3%adr-sedl%c3%a1%c5%99"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424523321, "post_id": 28645656, "comment_id": 45589742, "body": "@chi that function can be used to prefill the text, but I don&#39;t know how to use it to erase the text on any key press."}], "answers": [{"tags": [], "owner": {"reputation": 1510, "user_id": 1576064, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/47c868b652ffdc287498a8c604a30013?s=128&d=identicon&r=PG", "display_name": "Lubom&#237;r Sedl&#225;\u0159", "link": "https://stackoverflow.com/users/1576064/lubom%c3%adr-sedl%c3%a1%c5%99"}, "is_accepted": true, "score": 0, "last_activity_date": 1424593092, "creation_date": 1424593092, "answer_id": 28655888, "question_id": 28645656, "link": "https://stackoverflow.com/questions/28645656/how-to-erase-a-line-in-terminal-on-any-keypress-with-readline-in-haskell/28655888#28655888", "title": "How to erase a line in terminal on any keypress with readline in Haskell?", "body": "<p>Finally I figured out a way to do it, but it is not nice and feels like a bit of a hack.</p>\n\n<p>It works by rebinding all keys to a custom function that first erases the line, then resets all these handlers to actually insert the character again. In order not to lose the triggering keypress it is pushed back to input.</p>\n\n<pre><code>main :: IO ()\nmain = do\n    -- create a copy of current keymap\n    keymap &lt;- getKeymap &gt;&gt;= copyKeymap\n    -- bind (hopefully all) regular keys to a helper function\n    forM_ (map toEnum [32..256]) $ \\key -&gt;\n        bindKey key $ \\ _ _ -&gt; do\n            -- delete all text on line\n            getEnd &gt;&gt;= deleteText 0\n            -- set cursor to start of line\n            setPoint 0\n            redisplay\n            -- reset keymap to the original one\n            setKeymap keymap\n            -- push pressed key back to input\n            setPendingInput key\n            return 0\n    setStartupHook (Just $ insertText \"prefilled text\")\n    readline \"prompt&gt; \"\n</code></pre>\n\n<p>The major pain point of this is determining which keys to rebind. I used a scientific method of trial and error: the lower bound is space (anything less than that is non-printable, may have some special function and I don't want to mess with it). The upper bound is set to 256 \u2013 anything more resulted in segfault, using lesser number left the function not working on some unicode input.</p>\n\n<p>Even with this range, it might not work if the user starts typing something in  <a href=\"https://en.wikipedia.org/wiki/CJK_characters\" rel=\"nofollow\">CJK</a>. It definitely does not work correctly if the user types something by using a <a href=\"https://en.wikipedia.org/wiki/Dead_key\" rel=\"nofollow\">dead key</a>.</p>\n"}], "owner": {"reputation": 1510, "user_id": 1576064, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/47c868b652ffdc287498a8c604a30013?s=128&d=identicon&r=PG", "display_name": "Lubom&#237;r Sedl&#225;\u0159", "link": "https://stackoverflow.com/users/1576064/lubom%c3%adr-sedl%c3%a1%c5%99"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 2, "accepted_answer_id": 28655888, "answer_count": 1, "score": 3, "last_activity_date": 1424593092, "creation_date": 1424520764, "question_id": 28645656, "link": "https://stackoverflow.com/questions/28645656/how-to-erase-a-line-in-terminal-on-any-keypress-with-readline-in-haskell", "title": "How to erase a line in terminal on any keypress with readline in Haskell?", "body": "<p>I am using the <a href=\"http://hackage.haskell.org/package/readline-1.0.3.0\" rel=\"nofollow\">Haskell bindings</a> to <code>readline</code> library for reading input from the user.</p>\n\n<p>What I want to achieve is to offer a prefilled value that can be submitted by just hitting the return key, but if the user starts typing, I would like to erase the prefilled text automatically. (So that user does not have to care about erasing prefilled value.)</p>\n\n<p>I think it could be done by using the <code>rl_getc_function</code> hook. However, the Haskell bindings do not expose this function.</p>\n\n<p>Is there some way how to get the desired behaviour?</p>\n"}, {"tags": ["haskell", "functional-programming", "monads"], "comments": [{"owner": {"reputation": 7030, "user_id": 3032349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3cd8d19756aa9bc73d8045ae988ae728?s=128&d=identicon&r=PG&f=1", "display_name": "ThreeFx", "link": "https://stackoverflow.com/users/3032349/threefx"}, "edited": false, "score": 1, "creation_date": 1424520475, "post_id": 28645505, "comment_id": 45588937, "body": "I see it as a great tool to explain monads to people with no former knowledge on this kind of stuff and as a valuable exercise for anybody learning how to implement monads."}], "answers": [{"tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": false, "score": 4, "last_activity_date": 1424520595, "creation_date": 1424520595, "answer_id": 28645630, "question_id": 28645505, "link": "https://stackoverflow.com/questions/28645505/why-is-identity-monad-useful/28645630#28645630", "title": "Why is Identity monad useful?", "body": "<p>One real use-case is to be a (pure) base of monad transformers stack, e.g.</p>\n\n<pre><code>type Reader r = ReaderT r Identity\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424527997, "post_id": 28645634, "comment_id": 45591075, "body": "<code>Identity</code> is joining base in 4.8 anyway, so that may soon be a historical artifact. <code>Data.Sequence</code> uses an internal <code>Elem</code> type (also isomorphic to <code>Identity</code>) in these ways."}], "tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": false, "score": 9, "last_activity_date": 1424528816, "last_edit_date": 1424528816, "creation_date": 1424520620, "answer_id": 28645634, "question_id": 28645505, "link": "https://stackoverflow.com/questions/28645505/why-is-identity-monad-useful/28645634#28645634", "title": "Why is Identity monad useful?", "body": "<p>One use of it is as a base monad for monad transformer stacks: instead of having to provide two types <code>Some :: * -&gt;*</code> and <code>SomeT :: (* -&gt; *) -&gt; * -&gt; *</code>, it is enough to provide just a latter by setting <code>type Some = SomeT Identity</code>. </p>\n\n<p>Another, somewhat similar use case (but completely detached from the whole monad business) is when you need to refer to tuples: we can say <code>()</code> is a nullary tuple, <code>(a, b)</code> is a binary tuple, <code>(a, b, c)</code> is a ternary tuple, and so on, but what does that leave for the unary case? Saying <code>a</code> is a unary tuple for any choice of <code>a</code> is often not satisfactory, for example when we are building some typeclass instances like  <a href=\"https://hackage.haskell.org/package/tuple-0.3.0.2/docs/Data-Tuple-Select.html\"><code>Data.Tuple.Select</code></a>, some type constructor is needed to act as the unambiguous key. So by adding e.g. <code>Sel1</code> instances to <code>Identity a</code>, it forces us to distinguish between <code>(a, b)</code> (a two-tuple containing an <code>a</code> and a <code>b</code>), and <code>Identity (a, b)</code> (a one-tuple containing a single <code>(a, b)</code> value).</p>\n\n<p>(Note that <code>Data.Tuple.Select</code> defines its own type called <a href=\"https://hackage.haskell.org/package/OneTuple-0.2.1/docs/Data-Tuple-OneTuple.html#t:OneTuple\"><code>OneTuple</code></a> instead of reusing <code>Identity</code>, but it is isomorphic to <code>Identity</code>\u2014in fact, it's just a rename away\u2014and I think it only exists to avoid a non-<code>base</code> dependency.)</p>\n"}, {"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 11, "last_activity_date": 1424522831, "last_edit_date": 1424522831, "creation_date": 1424522366, "answer_id": 28645904, "question_id": 28645505, "link": "https://stackoverflow.com/questions/28645505/why-is-identity-monad-useful/28645904#28645904", "title": "Why is Identity monad useful?", "body": "<p>Sometimes I work with records whose fields are optional in some contexts (like when parsing the record from JSON) but mandatory in others.</p>\n\n<p>I solve that by parametrizing the record with a functor, and using <code>Maybe</code> or <code>Identity</code> in each case.</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE StandaloneDeriving #-}\n\ndata Query f = Query\n    {\n        _viewName :: String\n    ,   _target :: f Server -- Server is some type, it doesn't matter which\n    }\n    deriving (Generic)\n</code></pre>\n\n<p>The server field is optional when parsing JSON:</p>\n\n<pre><code>instance FromJSON (Query Maybe)\n</code></pre>\n\n<p>But then I have a function like</p>\n\n<pre><code>withDefaultServer :: Server -&gt; Query Maybe -&gt; Query Identity \nwithDefaultServer = undefined\n</code></pre>\n\n<p>that returns a record in which the <code>_target</code> field is mandatory.</p>\n\n<p>(This answer doesn't use anything monadic about <code>Identity</code>, though.)</p>\n"}, {"tags": [], "owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "is_accepted": true, "score": 22, "last_activity_date": 1424528112, "last_edit_date": 1424528112, "creation_date": 1424526240, "answer_id": 28646493, "question_id": 28645505, "link": "https://stackoverflow.com/questions/28645505/why-is-identity-monad-useful/28646493#28646493", "title": "Why is Identity monad useful?", "body": "<p><code>Identity</code> is to monads, functors and applicative functors as 0 is to numbers. On its own it seems useless, but it's often needed in places where one expects a monad or an (applicative) functor that actually doesn't do anything.</p>\n\n<p>As already mentioned, <code>Identity</code> allows us to define just monad transformers and then define their corresponding monads just as <code>SomeT Identity</code>.</p>\n\n<p>But that's not all. It's often convenient to also define other concepts in terms of monads, which usually adds a lot of flexibility. For example <a href=\"http://hackage.haskell.org/package/conduit-1.2.4/docs/Data-Conduit.html#t:Conduit\"><code>Conduit i m o</code></a> (also see <a href=\"https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/conduit-overview\">this tutorial</a>) defines an element in a pipeline that can request data of type <code>i</code>, can produce data of type <code>o</code>, and uses monad <code>m</code> for internal processing. Then such a pipeline can be run in the given monad using</p>\n\n<pre><code>($$) :: Monad m =&gt; Source m a -&gt; Sink a m b -&gt; m b\n</code></pre>\n\n<p>(where <code>Source</code> is an alias for <code>Conduit</code> with no input and <code>Sink</code> for <code>Conduit</code> with no output). And when no effectful computations are needed in the pipeline, just pure code, we just specialize <code>m</code> to <code>Identity</code> and run such a pipeline as</p>\n\n<pre><code>runIdentity (source $$ sink)\n</code></pre>\n\n<hr>\n\n<p><code>Identity</code> is also the \"empty\" functor and applicative functor: <code>Identity</code> composed with another functor or applicative functor is isomorphic to the original. For example, <a href=\"http://hackage.haskell.org/package/lens-4.7/docs/Control-Lens-Type.html#t:Lens-39-\"><code>Lens'</code></a> is defined as a function polymorphic in a <code>Functor</code>:</p>\n\n<pre><code>Functor f =&gt; (a -&gt; f a) -&gt; s -&gt; f s\n</code></pre>\n\n<p>roughly speaking, such a lens allows to read or manipulate something of type <code>a</code> inside <code>s</code>, for example a field inside a record (for an introduction to lenses see <a href=\"http://www.haskellforall.com/2012/01/haskell-for-mainstream-programmers_28.html\">this post</a>). If we specialize <code>f</code> to <code>Identity</code>, we get</p>\n\n<pre><code>(a -&gt; Identity a) -&gt; s -&gt; Identity s\n</code></pre>\n\n<p>which is isomorphic to</p>\n\n<pre><code>(a -&gt; a) -&gt; s -&gt; s\n</code></pre>\n\n<p>so given an updating function on <code>a</code>, return an updating function on <code>s</code>. (For completeness: If we specialize <code>f</code> to <code>Const a</code>, we get <code>(a -&gt; Const b a) -&gt; s -&gt; Const b s</code>, which is isomorphic to <code>(a -&gt; b) -&gt; (s -&gt; b)</code>, that is, given a reader on <code>a</code>, return a reader on <code>s</code>.)</p>\n"}], "owner": {"reputation": 11971, "user_id": 1100135, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/e7b273722f4261cd61c3256374da73cc?s=128&d=identicon&r=PG", "display_name": "piotrek", "link": "https://stackoverflow.com/users/1100135/piotrek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4679, "favorite_count": 3, "accepted_answer_id": 28646493, "answer_count": 4, "score": 15, "last_activity_date": 1424528816, "creation_date": 1424519911, "last_edit_date": 1424520479, "question_id": 28645505, "link": "https://stackoverflow.com/questions/28645505/why-is-identity-monad-useful", "title": "Why is Identity monad useful?", "body": "<p>I often read that </p>\n\n<blockquote>\n  <p>It seem that identity monad is useless. It's not... but that's another\n  topic.</p>\n</blockquote>\n\n<p>So can anyone tell my how is it useful? </p>\n"}, {"tags": ["haskell", "typeclass"], "answers": [{"comments": [{"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "edited": false, "score": 1, "creation_date": 1424530452, "post_id": 28647059, "comment_id": 45591864, "body": "My use case for <code>Functor</code> is to do e.g. <code>fromIntegral &lt;$&gt; s</code>. And I guess changing something in <code>base</code> isn&#39;t just about submitting a patch: <a href=\"https://wiki.haskell.org/Library_submissions\" rel=\"nofollow noreferrer\">wiki.haskell.org/Library_submissions</a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "edited": false, "score": 1, "creation_date": 1424530757, "post_id": 28647059, "comment_id": 45591957, "body": "@phadej, what I meant to say is that you&#39;re right; you need to email the libraries list. But it&#39;s almost certain to be approved. There&#39;s a general view that if there&#39;s exactly one sensible way to make a type an instance of a class, then that should be done at the definition point to avoid orphans."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1424542921, "post_id": 28647059, "comment_id": 45596413, "body": "I bet this is intentional. It kind of goes against the spirit of <code>Functor</code> if it only makes sense to end up with a <code>Num</code> instance inside and there is no way to express that restriction with the <code>Functor</code> type class that <code>base</code> comes with."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 1, "creation_date": 1424544172, "post_id": 28647059, "comment_id": 45596881, "body": "@DavidYoung, it only needs to be that way once you want to use the <code>Monoid</code> instance. Before that, anything really is allowed, and makes sense in context. You might even want something like <code>f &lt;$&gt; s1 &lt;*&gt; s2</code> to combine two numbers that have already been packaged up, in which case you&#39;ll briefly have a <code>Sum (m -&gt; n)</code>. How often you might want such a thing I don&#39;t really know. But the only time I&#39;ve seen &quot;no one will want that&quot; get in the way of sensible class instances is <code>KProxy</code>, and we&#39;ll see how long that lasts."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 8, "last_activity_date": 1424530671, "last_edit_date": 1424530671, "creation_date": 1424529949, "answer_id": 28647059, "question_id": 28645159, "link": "https://stackoverflow.com/questions/28645159/why-sum-and-product-arent-functors/28647059#28647059", "title": "Why Sum and Product aren&#39;t Functors", "body": "<p>I believe the main reason these are not <code>Functor</code> instances is that you have not yet submitted a code review to make them so. You can file a ticket on <a href=\"https://ghc.haskell.org/trac/ghc\">Trac</a>, then submit a code review on <a href=\"https://phabricator.haskell.org/\">Phabricator</a>. The preferred Phabricator workflow (using Arcanist), along with other details, can be found <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Phabricator\">here</a>.</p>\n\n<p>While you're doing that, you should probably also make them instances of <code>Applicative</code>, and <code>Monad</code>. You should also add <code>Foldable</code> and <code>Traversable</code> instances for them in <code>Data.Foldable</code> and <code>Data.Traversable</code>, respectively.</p>\n\n<p>If you want me to guess why nobody else did this:</p>\n\n<p>While <code>Sum</code> and <code>Product</code> can hold things of any type, the <code>Monoid</code> instances only make sense for <code>Num</code> instances. The type of <code>fmap</code> thus feels a bit oddly general. This, however, is not really a good reason not to make them <code>Functor</code> instances.</p>\n"}], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 358, "favorite_count": 0, "accepted_answer_id": 28647059, "answer_count": 1, "score": 9, "last_activity_date": 1424530671, "creation_date": 1424517672, "question_id": 28645159, "link": "https://stackoverflow.com/questions/28645159/why-sum-and-product-arent-functors", "title": "Why Sum and Product aren&#39;t Functors", "body": "<p><a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Data-Monoid.html#t:Sum\"><code>Sum</code></a> defined in base 4.7.0.2 doesn't have <code>Functor</code> instance. Why?</p>\n\n<p>For example types defined in <code>semigroups</code> package have <code>Functor</code>, <code>Applicative</code> and <code>Monad</code> on e.g. <code>Min</code>, which behave likeIdentity` - makes sense to me.</p>\n"}, {"tags": ["haskell", "yesod"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424540681, "post_id": 28644554, "comment_id": 45595531, "body": "It doesn&#39;t make sense to automatically create an instance for PathPiece because toPathPiece should output a path with a meaning corresponding to your application. There is no way that the compiler can read your mind. Is TemperatureSensor going to be /tmpSensor or /tmprSnsr or /temperatureSensor ?"}, {"owner": {"reputation": 329, "user_id": 971883, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ab5062317cc23f37e24ff80f0b6261e8?s=128&d=identicon&r=PG", "display_name": "Bet", "link": "https://stackoverflow.com/users/971883/bet"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424633149, "post_id": 28644554, "comment_id": 45619489, "body": "toPathPiece TemperatureSensor should be (in my undestanding) default show. Path looks like <code>&#47;TemperatureSensor</code>, because deriving Show instance map TemperatureSensor to <code>&quot;TemperatureSensor&quot;</code>. Similarly, for Read instance."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424650088, "post_id": 28644554, "comment_id": 45624792, "body": "Right, but the choice to make TemperatureSensor map to the path &quot;TemperatureSensor&quot; is a <i>design</i> decision."}], "answers": [{"comments": [{"owner": {"reputation": 329, "user_id": 971883, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ab5062317cc23f37e24ff80f0b6261e8?s=128&d=identicon&r=PG", "display_name": "Bet", "link": "https://stackoverflow.com/users/971883/bet"}, "edited": false, "score": 0, "creation_date": 1424521328, "post_id": 28645658, "comment_id": 45589193, "body": "Ok. Is it possible automatically derive <code>PathPiece</code> for <code>data</code>s?"}], "tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": false, "score": 3, "last_activity_date": 1424520790, "creation_date": 1424520790, "answer_id": 28645658, "question_id": 28644554, "link": "https://stackoverflow.com/questions/28644554/automatically-deriving-pathpiece/28645658#28645658", "title": "Automatically deriving PathPiece", "body": "<p><code>GeneralizedNewtypeDeriving</code>, as its name implies, is only useful for deriving instances for <code>newtype</code>s. It works by lifting instances of the underlying type over the newtype wrapper. </p>\n\n<p>Your type is not a <code>newtype</code> so there is no <code>PathPiece</code> instance to lift.</p>\n"}, {"tags": [], "owner": {"reputation": 7297, "user_id": 1176156, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/89604545aa57aa3d14306af60126e193?s=128&d=identicon&r=PG", "display_name": "MaxGabriel", "link": "https://stackoverflow.com/users/1176156/maxgabriel"}, "is_accepted": false, "score": 3, "last_activity_date": 1424587099, "creation_date": 1424587099, "answer_id": 28655251, "question_id": 28644554, "link": "https://stackoverflow.com/questions/28644554/automatically-deriving-pathpiece/28655251#28655251", "title": "Automatically deriving PathPiece", "body": "<p>It doesn't look like that's possible, based on the <a href=\"https://github.com/yesodweb/path-pieces\" rel=\"nofollow\">path-pieces package</a> not doing anything like that or any code I can find <a href=\"https://github.com/search?l=haskell&amp;p=1&amp;q=instance+PathPiece&amp;type=Code&amp;utf8=%E2%9C%93\" rel=\"nofollow\">on Github</a>. I would implement the <code>PathPiece</code> typeclass like this (using <code>tshow</code> and <code>readMay</code> from classy prelude):</p>\n\n<pre><code>instance PathPiece SensorType where\n    toPathPiece = tshow\n    fromPathPiece = readMay\n</code></pre>\n"}], "owner": {"reputation": 329, "user_id": 971883, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ab5062317cc23f37e24ff80f0b6261e8?s=128&d=identicon&r=PG", "display_name": "Bet", "link": "https://stackoverflow.com/users/971883/bet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1424587099, "creation_date": 1424513391, "last_edit_date": 1495541571, "question_id": 28644554, "link": "https://stackoverflow.com/questions/28644554/automatically-deriving-pathpiece", "title": "Automatically deriving PathPiece", "body": "<p>In my Yesod web-application I have following data type:</p>\n\n<pre><code>data SensorType = TemperatureSensor | HumiditySensor deriving (Eq, Show, Read, PathPiece, PersistField)\n</code></pre>\n\n<p>I enable <code>GeneralizedNewtypeDeriving</code></p>\n\n<p>The answer about automatically deriving <code>PathPiece</code>:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/20751415/what-typeclasses-need-to-be-defined-for-a-yesod-path\">What typeclasses need to be defined for a Yesod path?</a></p>\n\n<p>But I get ghc-error:</p>\n\n<pre><code>Can't make a derived instance of `PathPiece SensorType\n  `PathPiece' is not a derivable class\n</code></pre>\n\n<p>Is it possible automatically derive <code>PathPiece</code>? What I do wrong?</p>\n\n<p>For <code>PersistField</code> exists <code>derivePersistField</code>. What about <code>PathPiece</code>?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 9, "last_activity_date": 1424510070, "creation_date": 1424510070, "answer_id": 28644084, "question_id": 28643914, "link": "https://stackoverflow.com/questions/28643914/abs-beginner-haskell-pattern-matching/28644084#28644084", "title": "Abs beginner Haskell pattern matching", "body": "<p>The problem with <code>x &lt;- [1..], y &lt;- [1..]</code> is that <code>x=2</code> will be tried only after all the possible pairs <code>(1,y)</code> have been tried, for each <code>y&gt;=1</code>. However, if no such pair matches your criterion, trying all such pairs requires an infinite amount of time. In that case, we never get to <code>x=2</code> or any larger value for <code>x</code>.</p>\n\n<p>What you need is a \"fair\" scheduler of all the pairs which does not get stuck on a strict subset of the cases. Mathematically, this is called a <a href=\"http://en.wikipedia.org/wiki/Dovetailing_%28computer_science%29\">dovetailing</a> function. This is essentially a <em>bijective</em> function from naturals to pairs of naturals. Or, if you prefer, it is a way of enumerating all the possible pairs: here's such an enumeration</p>\n\n<pre><code>(1,1) (2,1) (1,2) (3,1) (2,2) (1,3) (4,1) (3,2) (2,3) (1,4) ...\n</code></pre>\n\n<p>The trick is to list all the pairs having sum 2, then those having sum 3, and so on. In Haskell those pairs can be coded as</p>\n\n<pre><code>-- pair components start from 1 as in the OP's code\nallPairs :: [(Integer, Integer)]\nallPairs = [ (x,y) | s &lt;- [2..] , x &lt;- [1..s] , let y = s - x ]\n</code></pre>\n\n<p>Indeed, this chooses the sum <code>s</code> first (infinitely many choices here), and then proceeds to lists the (finitely many) pairs having that sum.</p>\n\n<p>Once you have done this, your code simply becomes:</p>\n\n<pre><code>equation :: [(Integer, Integer)]\nequation = [ (x,y) | (x,y) &lt;- allPairs, y == 2*x-4, x == 2*y-4]\n</code></pre>\n\n<p>And, if you just want the first element</p>\n\n<pre><code>firstSolution :: Integer\nfirstSolution = head equation\n</code></pre>\n\n<p>That's it!</p>\n\n<p>(Keep in mind that evaluating <code>firstSolution</code> may not terminate if no solution exists.)</p>\n"}, {"comments": [{"owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "edited": false, "score": 0, "creation_date": 1424532700, "post_id": 28647313, "comment_id": 45592572, "body": "Well, I am not sure if it is a serious answer. I think the OP expects to understand how the equation can be solved with Haskell."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "edited": false, "score": 0, "creation_date": 1424533025, "post_id": 28647313, "comment_id": 45592662, "body": "@thefourtheye, I recognize that. I&#39;m trying to demonstrate that one aspect of the Haskell way is to try to understand and simplify the problem as much as possible before writing any code."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 1, "last_activity_date": 1424531455, "creation_date": 1424531455, "answer_id": 28647313, "question_id": 28643914, "link": "https://stackoverflow.com/questions/28643914/abs-beginner-haskell-pattern-matching/28647313#28647313", "title": "Abs beginner Haskell pattern matching", "body": "<p>We're looking at two equations here:</p>\n\n<pre><code>y = 2*x-4\nx = 2*y-4\n</code></pre>\n\n<p>Substituting the first equation into the second,</p>\n\n<pre><code>x = 2*(2*x-4)-4\n</code></pre>\n\n<p>Expanding,</p>\n\n<pre><code>x = 4*x-12\n</code></pre>\n\n<p>So <code>x = 4</code>.</p>\n\n<p>Substituting back in to the first equation, <code>y = 4</code>.</p>\n\n<p>Thus the first and only solution is <code>x = y = 4</code>. You can solve this most simply in Haskell by defining</p>\n\n<pre><code>firstSolution = (4,4)\n</code></pre>\n\n<p>You can (and should) then write a HUnit test for the solution, to check that it really is a solution, and a QuickCheck property for the solution to check that it is the first one.</p>\n"}], "owner": {"reputation": 717, "user_id": 1754290, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/WG1Wc.jpg?s=128&g=1", "display_name": "MikeKlemin", "link": "https://stackoverflow.com/users/1754290/mikeklemin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 1, "accepted_answer_id": 28644084, "answer_count": 2, "score": 3, "last_activity_date": 1502633856, "creation_date": 1424508857, "last_edit_date": 1502633856, "question_id": 28643914, "link": "https://stackoverflow.com/questions/28643914/abs-beginner-haskell-pattern-matching", "title": "Abs beginner Haskell pattern matching", "body": "<p>I just managed to install Haskell and EclipseFP in the way that it all works under ubuntu! :)  It took me really long to make it all work with no --force :)\nI starting explore learnyouahaskell and that pattern thing looks really fun... But I have question, for example I would like to calculate an equation like this:</p>\n\n<pre><code>equation :: [(Integer, Integer)]\nequation = [ (x,y) | x &lt;- [1..100],y&lt;-[1..100], y == 2*x-4, x == 2*y-4]\n</code></pre>\n\n<p>I have to put limits on x and y ranges, but is it possible to use x&lt;-[1..] and y&lt;-[1..] and make the function stop after it finds first pair of x and y?</p>\n"}, {"tags": ["list", "haskell", "non-exhaustive-patterns"], "comments": [{"owner": {"reputation": 1089, "user_id": 3681109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d676ca6572e75e842ca0fa3e9e82d1bb?s=128&d=identicon&r=PG&f=1", "display_name": "genisage", "link": "https://stackoverflow.com/users/3681109/genisage"}, "edited": false, "score": 1, "creation_date": 1424497590, "post_id": 28642569, "comment_id": 45583638, "body": "you detect the end of a list by pattern-matching on <code>[]</code> (e.g. <code>myFunc [] = 0; myFunc (x:xs) = x + myFunc xs</code>)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424497654, "post_id": 28642569, "comment_id": 45583655, "body": "The first thing to do is to tell GHC <code>-fwarn-incomplete-patterns</code>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424497612, "post_id": 28642600, "comment_id": 45583644, "body": "This still has incomplete patterns!"}, {"owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424497682, "post_id": 28642600, "comment_id": 45583658, "body": "@dfeuer I think in OP&#39;s case both the lists will be of equal size."}, {"owner": {"reputation": 1083, "user_id": 2117589, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/IE1qb.png?s=128&g=1", "display_name": "Lord Rixuel", "link": "https://stackoverflow.com/users/2117589/lord-rixuel"}, "edited": false, "score": 0, "creation_date": 1424497786, "post_id": 28642600, "comment_id": 45583677, "body": "Yes, in my case, both lists are equal size.  Thank you thefourtheye, really nice explanation. It works."}, {"owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424497851, "post_id": 28642600, "comment_id": 45583692, "body": "@dfeuer Okay, I am missing something then. Can you please give an example?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1424497955, "post_id": 28642600, "comment_id": 45583708, "body": "@thefourtheye, I just mean that incomplete patterns are bad, even if you think they&#39;ll never cause a problem. May I suggest you nix all the <code>::Double</code> annotations? GHC can infer all those by itself."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1424500256, "post_id": 28642600, "comment_id": 45584135, "body": "As an alternative solution that handles lists of unequal size in a reasonable way, <code>pairwiseSum xs ys = sum (zipWith (+) xs ys)</code>."}, {"owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1424503378, "post_id": 28642600, "comment_id": 45584845, "body": "@ReinHenrichs Thanks :-) Included that suggestion in the answer."}, {"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1424508139, "post_id": 28642600, "comment_id": 45585811, "body": "(or just <code>pairwiseSum = (sum .) . zipWith (+)</code>)"}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 1, "creation_date": 1424557206, "post_id": 28642600, "comment_id": 45601314, "body": "@Dogbert I specifically avoided that pointfree version because it reduces readability for no gain. It&#39;s a perfect example of pointless pointfree."}], "tags": [], "owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "is_accepted": true, "score": 3, "last_activity_date": 1424503363, "last_edit_date": 1495542509, "creation_date": 1424497581, "answer_id": 28642600, "question_id": 28642569, "link": "https://stackoverflow.com/questions/28642569/how-to-detect-the-end-of-a-list-in-haskell/28642600#28642600", "title": "How to detect the end of a list in Haskell?", "body": "<p>You don't need the first guard in your function. You can simply write it as the following (I just dropped <code>::Double</code> because Haskell can infer it)</p>\n\n<pre><code>listSum :: ([Integer], [Integer]) -&gt; Double\nlistSum ([], []) = 0.0\nlistSum ((x:xs),(y:ys)) = fromIntegral x + fromIntegral y + listSum (xs, ys)\n</code></pre>\n\n<p>Now, whenever the arguments passed to <code>listSum</code> are empty lists, the result will be <code>0.0</code>, otherwise the recursive function will be called.</p>\n\n<p><strong>Note:</strong> The above function will work only if both the lists are of equal size. Otherwise, you need to write it like this</p>\n\n<pre><code>listSum::([Integer],[Integer])-&gt;Double\nlistSum ([], []) = 0.0\nlistSum ((x:xs), []) = fromIntegral x + listSum(xs, [])\nlistSum ([], (y:ys)) = fromIntegral y + listSum(ys, [])\nlistSum ((x:xs),(y:ys)) = fromIntegral x + fromIntegral y + listSum (xs, ys)\n</code></pre>\n\n<p><strong>Note:</strong> Even simpler, the entire code can be written, <a href=\"https://stackoverflow.com/questions/28642569/how-to-detect-the-end-of-a-list-in-haskell/28642600?noredirect=1#comment45584135_28642600\">as suggested by Rein Henrichs</a>, like this</p>\n\n<pre><code>pairwiseSum xs ys = sum (zipWith (+) xs ys)\n</code></pre>\n"}], "owner": {"reputation": 1083, "user_id": 2117589, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/IE1qb.png?s=128&g=1", "display_name": "Lord Rixuel", "link": "https://stackoverflow.com/users/2117589/lord-rixuel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 740, "favorite_count": 0, "accepted_answer_id": 28642600, "answer_count": 1, "score": 1, "last_activity_date": 1424505136, "creation_date": 1424497411, "last_edit_date": 1424505136, "question_id": 28642569, "link": "https://stackoverflow.com/questions/28642569/how-to-detect-the-end-of-a-list-in-haskell", "title": "How to detect the end of a list in Haskell?", "body": "<p>I'm writting a recursive function that use specific formulas to calculate 2 lists.\nBut I will simplify the function so you can understand the problem I'm having because the point here is to detect [] of the list.</p>\n\n<p>So I've the following code:</p>\n\n<pre><code>listSum::([Integer],[Integer])-&gt;Double\nlistSum ((x:xs),(y:ys)) \n    | ((x:xs),(y:ys))==(x:[],y:[])=0.0\n    | otherwise = (((fromIntegral x)::Double)+((fromIntegral y)::Double)) + listSum ((xs),(ys))\n</code></pre>\n\n<p>Output I'm having right now</p>\n\n<pre><code>listSum([1,2],[1,2])\n2.0\n\nlistSum([1],[1])\n0.0\n\nlistSum([],[])\n*** Exception: file.hs: .....: Non-exhaustive patterns in function ListSum\n</code></pre>\n\n<p>And the output I wish to have</p>\n\n<pre><code>listSum([1,2],[1,2])\n6.0\n\nlistSum([1],[1])\n2.0\n\nlistSum([],[])\n0.0\n</code></pre>\n\n<p>What did I miss? Or did I write too much?</p>\n"}, {"tags": ["haskell", "function-composition"], "comments": [{"owner": {"reputation": 229185, "user_id": 251311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b6b0ca5d4ef200ec8e3cd1fa2aefd836?s=128&d=identicon&r=PG", "display_name": "zerkms", "link": "https://stackoverflow.com/users/251311/zerkms"}, "edited": false, "score": 2, "creation_date": 1424495473, "post_id": 28642362, "comment_id": 45583282, "body": "<code>foobar ab bc cd = cd . bc . ab</code>"}, {"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1424495475, "post_id": 28642362, "comment_id": 45583283, "body": "Hint: you can compose functions that you received as parameters."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 9, "creation_date": 1424495546, "post_id": 28642362, "comment_id": 45583294, "body": "Or <code>(flip (.) .) . flip (.)</code>, if you&#39;re insane."}, {"owner": {"reputation": 229185, "user_id": 251311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b6b0ca5d4ef200ec8e3cd1fa2aefd836?s=128&d=identicon&r=PG", "display_name": "zerkms", "link": "https://stackoverflow.com/users/251311/zerkms"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1424495671, "post_id": 28642362, "comment_id": 45583324, "body": "@DietrichEpp OH MY GOD (in a good way)"}, {"owner": {"reputation": 2024, "user_id": 3026489, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/42eefce716334b3baef26625220fb7a0?s=128&d=identicon&r=PG&f=1", "display_name": "Yosh", "link": "https://stackoverflow.com/users/3026489/yosh"}, "edited": false, "score": 0, "creation_date": 1424504009, "post_id": 28642362, "comment_id": 45584996, "body": "The asker says &quot;lost as to what the question is asking&quot;, probably not seeking for the answers?"}, {"owner": {"reputation": 229185, "user_id": 251311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b6b0ca5d4ef200ec8e3cd1fa2aefd836?s=128&d=identicon&r=PG", "display_name": "zerkms", "link": "https://stackoverflow.com/users/251311/zerkms"}, "reply_to_user": {"reputation": 2024, "user_id": 3026489, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/42eefce716334b3baef26625220fb7a0?s=128&d=identicon&r=PG&f=1", "display_name": "Yosh", "link": "https://stackoverflow.com/users/3026489/yosh"}, "edited": false, "score": 0, "creation_date": 1424509108, "post_id": 28642362, "comment_id": 45586042, "body": "@Yosh actually OP hasn&#39;t asked anything, hence it&#39;s not possible to answer &quot;it&quot;"}, {"owner": {"reputation": 53, "user_id": 4250127, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/504427691/picture?type=large", "display_name": "Amr Hamada", "link": "https://stackoverflow.com/users/4250127/amr-hamada"}, "edited": false, "score": 0, "creation_date": 1424560244, "post_id": 28642362, "comment_id": 45602076, "body": "no its not, its a practice question"}], "answers": [{"tags": [], "owner": {"reputation": 3183, "user_id": 3025453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ecaade2979d70e6fa61d1f8bca6f27e1?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Karcher", "link": "https://stackoverflow.com/users/3025453/michael-karcher"}, "is_accepted": false, "score": 1, "last_activity_date": 1424509281, "creation_date": 1424509281, "answer_id": 28643977, "question_id": 28642362, "link": "https://stackoverflow.com/questions/28642362/how-can-i-define-a-function-that-applies-the-composition-of-three-functions-to-a/28643977#28643977", "title": "How can I define a function that applies the composition of three functions to a value?", "body": "<p>You are requested to write a function <code>trifecta</code> which accepts a function taking a value of type <code>a</code> returning a value of type <code>b</code>, written as <code>(a -&gt; b)</code>, a function taking a value of type <code>b</code> and returning a value of type <code>c</code>, written as <code>(b -&gt; c)</code>, and finally a function taking a value of type <code>c</code>, and returning a value of type <code>d</code>. If you apply those functions one after the other, you can see there is a way to get a value of type <code>d</code> from a value of type <code>a</code> by using all these three functions.</p>\n\n<p>If you get the implementation of <code>trifecta</code> correct, this should work:</p>\n\n<pre><code>Prelude&gt; trifecta show reverse read 15 :: Double\n51.0\n</code></pre>\n\n<p>The value 15 is converted to a string (by <code>show</code>), then <code>reverse</code>d, obtaining \"51\", and finally converted to a floating point variable (by <code>read</code>). In this case, the type <code>a</code> is <code>Integer</code>, <code>b</code> is <code>String</code>, <code>c</code> is <code>String</code> and <code>d</code> is <code>Double</code>, so this is not solving the task of having <em>all</em> types different completely, as <code>b</code> and <code>c</code> are the same type.</p>\n"}, {"comments": [{"owner": {"reputation": 53, "user_id": 4250127, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/504427691/picture?type=large", "display_name": "Amr Hamada", "link": "https://stackoverflow.com/users/4250127/amr-hamada"}, "edited": false, "score": 0, "creation_date": 1424754021, "post_id": 28644124, "comment_id": 45669031, "body": "after installing djinn how do u run it , by typing djinn on my command line , i get &quot;command not found @Aadit M Shah"}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "reply_to_user": {"reputation": 53, "user_id": 4250127, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/504427691/picture?type=large", "display_name": "Amr Hamada", "link": "https://stackoverflow.com/users/4250127/amr-hamada"}, "edited": false, "score": 0, "creation_date": 1424784384, "post_id": 28644124, "comment_id": 45684177, "body": "Make sure that the cabal bin directory is in your path environment variable. I&#39;m currently away from my desktop hence you&#39;ll need to google how to do that on your OS."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1432746917, "post_id": 28644124, "comment_id": 49056316, "body": "I don&#39;t really see how djinn will help attain understanding. The human needs to learn to read types; showing how the computer can do it seems a little sideways."}], "tags": [], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "is_accepted": false, "score": 3, "last_activity_date": 1424510392, "creation_date": 1424510392, "answer_id": 28644124, "question_id": 28642362, "link": "https://stackoverflow.com/questions/28642362/how-can-i-define-a-function-that-applies-the-composition-of-three-functions-to-a/28644124#28644124", "title": "How can I define a function that applies the composition of three functions to a value?", "body": "<p>Have you ever used <a href=\"http://hackage.haskell.org/package/djinn\" rel=\"nofollow\">djinn</a>? It's a <a href=\"https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\" rel=\"nofollow\">theorem prover</a> for intuitionistic propositional logic. In simple words, given a <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system\" rel=\"nofollow\">simple type signature</a> it generates a Haskell expression that satisfies that type.</p>\n\n<p>You can install djinn using the command <code>cabal install djinn</code>. After that run the <code>djinn</code> command line program:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ djinn\nWelcome to Djinn version 2011-07-23.\nType :h to get help.\nDjinn&gt; trifecta ? (a -&gt; b) -&gt; (b -&gt; c) -&gt; (c -&gt; d) -&gt; a -&gt; d\ntrifecta :: (a -&gt; b) -&gt; (b -&gt; c) -&gt; (c -&gt; d) -&gt; a -&gt; d\ntrifecta a b c d = c (b (a d))\n</code></pre>\n\n<p>As you can see, given the command to find a proof of the function <code>trifecta ? (a -&gt; b) -&gt; (b -&gt; c) -&gt; (c -&gt; d) -&gt; a -&gt; d</code>, djinn came up with the solution:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>trifecta :: (a -&gt; b) -&gt; (b -&gt; c) -&gt; (c -&gt; d) -&gt; a -&gt; d\ntrifecta a b c d = c (b (a d))\n</code></pre>\n\n<p>Hopefully, if you use djinn you'll be able to find answers to trivial problems by yourself and by studying the output you should be able to grok the basic essence of functional programming.</p>\n"}], "owner": {"reputation": 53, "user_id": 4250127, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/504427691/picture?type=large", "display_name": "Amr Hamada", "link": "https://stackoverflow.com/users/4250127/amr-hamada"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1433339433, "creation_date": 1424495355, "last_edit_date": 1592644375, "question_id": 28642362, "link": "https://stackoverflow.com/questions/28642362/how-can-i-define-a-function-that-applies-the-composition-of-three-functions-to-a", "title": "How can I define a function that applies the composition of three functions to a value?", "body": "<p>I've got the following question, and I have no idea where to start:</p>\n<blockquote>\n<p>Write a function</p>\n<pre><code>trifecta :: (a -&gt; b) -&gt; (b -&gt; c) -&gt; (c -&gt; d) -&gt; a -&gt; d\n</code></pre>\n<p>that takes 3 functions and composes them into a function that takes a value and produces a value. When writing tests, include some that have all the types different.</p>\n</blockquote>\n<p>How can I do that?</p>\n"}, {"tags": ["haskell", "data-structures", "functional-programming", "induction", "coinduction"], "answers": [{"comments": [{"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1424489817, "post_id": 28640482, "comment_id": 45582373, "body": "I didn&#39;t think in using numbers like that. Makes total sense. Also, you&#39;re the reason the internet is awesome. Thank you."}, {"owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 1, "creation_date": 1424552374, "post_id": 28640482, "comment_id": 45599918, "body": "@Viclib Also, I was able to get recursive types working for <code>annah</code>, and I&#39;ve updated my answer so that you can see what <code>replicate Nat Two Three</code> would get normalized to."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1424556651, "post_id": 28640482, "comment_id": 45601143, "body": "Great work! I can understand all of this post. There are still some things I can&#39;t figure out how to implement... and some doubts... but I will keep exercising my neurons before bothering you. Thanks @Gabriel!"}, {"owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1424557121, "post_id": 28640482, "comment_id": 45601287, "body": "You&#39;re welcome!  A good starting point is to try to implement it in Haskell first and then translate that to Annah"}], "tags": [], "owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "is_accepted": true, "score": 5, "last_activity_date": 1424552324, "last_edit_date": 1424552324, "creation_date": 1424478095, "answer_id": 28640482, "question_id": 28640252, "link": "https://stackoverflow.com/questions/28640252/how-to-create-the-enumfromto-function-on-morte/28640482#28640482", "title": "How to create the `enumFromTo` function on Morte?", "body": "<p>In Morte, a natural number is encoded as a value of type:</p>\n\n<pre><code>forall (Nat : *) -&gt; (Nat -&gt; Nat) -&gt; Nat -&gt; Nat\n</code></pre>\n\n<p>So, for example, <code>0</code>, <code>1</code>, and <code>2</code> in Morte would be represented as:</p>\n\n<pre><code>(   \\(Nat : *)\n-&gt;  \\(zero : Nat)\n-&gt;  \\(one  : Nat)\n-&gt;  \\(two  : Nat)\n-&gt;  \\(foldNat : Nat -&gt; forall (x : *) -&gt; (x -&gt; x) -&gt; x -&gt; x)\n-&gt;  ...\n)\n\n-- Nat\n(forall (Nat : *) -&gt; (Nat -&gt; Nat) -&gt; Nat -&gt; Nat)\n\n-- zero\n(\\(Nat : *) -&gt; \\(Succ : Nat -&gt; Nat) -&gt; \\(Zero : Nat) -&gt; Zero)\n\n-- one\n(\\(Nat : *) -&gt; \\(Succ : Nat -&gt; Nat) -&gt; \\(Zero : Nat) -&gt; Succ Zero)\n\n-- two\n(\\(Nat : *) -&gt; \\(Succ : Nat -&gt; Nat) -&gt; \\(Zero : Nat) -&gt; Succ (Succ Zero))\n\n-- foldNat\n(\\(n : forall (Nat : *) -&gt; (Nat -&gt; Nat) -&gt; Nat -&gt; Nat) -&gt; n)\n</code></pre>\n\n<p>With that encoding, then you can start writing simple things like <code>replicate</code>:</p>\n\n<pre><code>-- Assuming you also defined:\n-- List : * -&gt; *\n-- Cons : forall (a : *) -&gt; a -&gt; List a -&gt; List a\n-- Nil  : forall (a : *) -&gt; List a\n-- foldList : forall (a : *)\n--          -&gt; List a -&gt; forall (x : *) -&gt; (a -&gt; x -&gt; x) -&gt; x -&gt; x\n\n-- replicate : forall (a : *) -&gt; Nat -&gt; a -&gt; List a\nreplicate =\n        \\(a : *)\n    -&gt;  \\(n : Nat)\n    -&gt;  \\(va : a)\n    -&gt;  foldNat n (List a) (\\(as : List a) -&gt; Cons a va as) (Nil a)\n</code></pre>\n\n<p>Doing <code>enumFromTo</code> would be a little more complex but it would still be possible.  You will still use <code>foldNat</code>, but your accumulator would be more complex than <code>List Nat</code>.  It would be more like <code>(Nat, List Nat)</code> and then you'd extract the second element of the tuple at the end of the fold.  That would, of course, require encoding tuples in Morte, too.</p>\n\n<p>That exceeds my ability to hand-write Morte code on the fly, so I will omit that.  However, right now I'm working on a medium-level language that compiles to Morte as we speak and it's only a few lines of code away from supporting recursive types (and non-recursive types are ready).  You can check it out here:</p>\n\n<p><a href=\"https://github.com/Gabriel439/Haskell-Annah-Library\" rel=\"nofollow\">https://github.com/Gabriel439/Haskell-Annah-Library</a></p>\n\n<p>Once that code is ready you'd then just be able to write:</p>\n\n<pre><code>type Nat : *\ndata Succ (pred : Nat) : Nat\ndata Zero              : Nat\nin\n\ntype List (a : *) : *\ndata Cons (head : a) (tail : List a) : List a\ndata Nil                             : List a\nin\n\nlet One : Nat = Succ Zero\nlet Two : Nat = Succ (Succ Zero)\nlet Three : Nat = Succ (Succ (Succ Zero))\nlet replicate (a : *) (n : Nat) (va : a) : List a =\n        foldNat n (List a) (\\(as : List a) -&gt; Cons a va as) (Nil a)\nin\n\nreplicate Nat Two Three\n</code></pre>\n\n<p>It's medium-level in the sense that you'd still have to deal with explicitly writing out a fold and figuring out the correct intermediate state to use as the accumulator, but one of the things it simplifies are <code>let</code> and data type declarations.  It will also eventually support built-in decimal syntax for <code>Nat</code>, but I haven't started that yet.</p>\n\n<p>Edit: Now <code>annah</code> supports recursive types, and the above <code>annah</code> code normalizes to:</p>\n\n<pre><code>$ annah &lt; replicate.an\n\u2200(List : * \u2192 *) \u2192 ((\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat) \u2192 List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat) \u2192 List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat)) \u2192 List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat) \u2192 List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat)\n\n\u03bb(List : * \u2192 *) \u2192 \u03bb(Cons : (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat) \u2192 List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat) \u2192 List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat)) \u2192 \u03bb(Nil : List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat)) \u2192 Cons (\u03bb(Nat : *) \u2192 \u03bb(Succ : Nat \u2192 Nat) \u2192 \u03bb(Zero : Nat) \u2192 Succ (Succ (Succ Zero))) (Cons (\u03bb(Nat : *) \u2192 \u03bb(Succ : Nat \u2192 Nat) \u2192 \u03bb(Zero : Nat) \u2192 Succ (Succ (Succ Zero))) Nil)\n</code></pre>\n\n<p>... which I will format to make it slightly more readable:</p>\n\n<pre><code>    \u03bb(List : * \u2192 *)\n\u2192   \u03bb(  Cons\n    :   (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat)\n    \u2192   List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat)\n    \u2192   List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat)\n    )\n\u2192   \u03bb(Nil : List (\u2200(Nat : *) \u2192 (Nat \u2192 Nat) \u2192 Nat \u2192 Nat))\n\u2192   Cons\n        (   \u03bb(Nat : *)\n        \u2192   \u03bb(Succ : Nat \u2192 Nat)\n        \u2192   \u03bb(Zero : Nat)\n        \u2192   Succ (Succ (Succ Zero))\n        )\n        (Cons\n            (   \u03bb(Nat : *)\n            \u2192   \u03bb(Succ : Nat \u2192 Nat)\n            \u2192   \u03bb(Zero : Nat)\n            \u2192   Succ (Succ (Succ Zero))\n            )\n            Nil\n        )\n</code></pre>\n\n<p>If you look closely, it produced a list with two elements, each of which is a church-encoded number three.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 321, "favorite_count": 0, "accepted_answer_id": 28640482, "answer_count": 1, "score": 3, "last_activity_date": 1424552324, "creation_date": 1424476613, "question_id": 28640252, "link": "https://stackoverflow.com/questions/28640252/how-to-create-the-enumfromto-function-on-morte", "title": "How to create the `enumFromTo` function on Morte?", "body": "<p><a href=\"https://github.com/Gabriel439/Haskell-Morte-Library\" rel=\"nofollow\">Morte</a> was designed to serve as an intermediate language for super-optimizing functional programs. In order to preserve strong normalization it has no direct recursion, so, inductive types such as lists are represented as folds, and conductive types such as infinite lists are represented as streams:</p>\n\n<pre><code>finiteList :: List Int\nfiniteList = \\cons nil -&gt; cons 0 (cons 1 (cons 2 nil))\n\ninfiniteList :: Stream Int\ninfiniteList = Stream 0 (\\n -&gt; (n, n + 1))\n</code></pre>\n\n<p>I want to rewrite Haskell's <code>enumFromTo</code> on Morte, so that:</p>\n\n<pre><code>enumFromTo 0 2\n</code></pre>\n\n<p>normalizes to:</p>\n\n<pre><code>\\cons nil \u2192 cons 0 (cons 1 (cons 2 nil))\n</code></pre>\n\n<p>Is that possible?</p>\n"}, {"tags": ["list", "haskell", "ghc", "ghci"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1424473224, "post_id": 28639613, "comment_id": 45578627, "body": "&quot;Where does this difference come from? I thought it might be because my stupid useless little function is (eventually) repeating, so the compiler can &quot;predict&quot; the output better?&quot; - The compiler is not magic, that is not your solution.  I would recommend reducing some of the noise in your code by reformatting it, you&#39;re doing some strange things in there.  <code>div a a</code> is just <code>2</code>, <code>div a 1</code> is just a, <code>div (b-3) (-1)</code> is just <code>negate (b-3)</code>.  Also, it&#39;s good style to not use tuples for multiple function arguments, just use spaces <code>h a b c = ... else h b (negate (b-3)) 1</code> for example."}, {"owner": {"reputation": 1723, "user_id": 1178663, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/aee59e011d5f1e561052f8516125a286?s=128&d=identicon&r=PG", "display_name": "okdewit", "link": "https://stackoverflow.com/users/1178663/okdewit"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424473573, "post_id": 28639613, "comment_id": 45578727, "body": "I did those noisy things only to make the types match. The useless div operators force the type to become Integral. And normally I don&#39;t use tuples like that, but the <a href=\"http://stackoverflow.com/a/1560768/1178663\">existing pi function</a> did so I just matched that.  And, again: I didn&#39;t write down that function for mathematical functionality, or to be elegant or logical -- just to be similarly structured &amp; equally typed."}, {"owner": {"reputation": 1723, "user_id": 1178663, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/aee59e011d5f1e561052f8516125a286?s=128&d=identicon&r=PG", "display_name": "okdewit", "link": "https://stackoverflow.com/users/1178663/okdewit"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424474030, "post_id": 28639613, "comment_id": 45578858, "body": "I&#39;ve tried solving it from both sides: writing a function from the bottom up until it stops &quot;blocking&quot; the output, and removing things &quot;top-down&quot; from the pi function until it starts showing the output as a stream of characters... but I just can&#39;t pinpoint the part where it breaks down."}, {"owner": {"reputation": 1723, "user_id": 1178663, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/aee59e011d5f1e561052f8516125a286?s=128&d=identicon&r=PG", "display_name": "okdewit", "link": "https://stackoverflow.com/users/1178663/okdewit"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424474116, "post_id": 28639613, "comment_id": 45578882, "body": "@bheklilr: Thanks for the input btw!"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 3, "creation_date": 1424475646, "post_id": 28639613, "comment_id": 45579322, "body": "I can not repeat your behavior - the compiled program outputs characters immediately.  I suspect this is a buffering issue so try <code>import System.IO</code> and in main <code>hSetBuffering stdout NoBuffering</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1424479780, "post_id": 28639613, "comment_id": 45580448, "body": "I challenge this claim: &quot;If I compile: ghc pi.hs, and run my program: ./pi, the output stays blank forever&quot;. In particular, I assert that the output stays blank until it has computed a large enough chunk of pi, then you get that chunk all at once. I think you just didn&#39;t wait long enough. If so, the difference between the two programs is just what you pointed out: your contrived example computes more digits more quickly."}, {"owner": {"reputation": 1723, "user_id": 1178663, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/aee59e011d5f1e561052f8516125a286?s=128&d=identicon&r=PG", "display_name": "okdewit", "link": "https://stackoverflow.com/users/1178663/okdewit"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1424508852, "post_id": 28639613, "comment_id": 45585989, "body": "@Thomas &amp; @Daniel: Turns out you were both right. I was impatient (it does start showing in large chunks), and <code>hSetBuffering stdout NoBuffering</code> resolves it! Updated my question for those who search."}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1424670891, "post_id": 28639613, "comment_id": 45629725, "body": "@Feroxium since you have the answer, you should write it as an answer to your own question and accept it, for the record :-)"}], "answers": [{"tags": [], "owner": {"reputation": 1723, "user_id": 1178663, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/aee59e011d5f1e561052f8516125a286?s=128&d=identicon&r=PG", "display_name": "okdewit", "link": "https://stackoverflow.com/users/1178663/okdewit"}, "is_accepted": true, "score": 2, "last_activity_date": 1424898126, "creation_date": 1424898126, "answer_id": 28729487, "question_id": 28639613, "link": "https://stackoverflow.com/questions/28639613/haskell-odd-difference-between-compiled-vs-interpreted-functions-which-print-co/28729487#28729487", "title": "Haskell: odd difference between compiled vs interpreted functions which print concatenated infinite lists", "body": "<p>Provided by Thomas &amp; Daniel in the comments, it turned out I was:</p>\n\n<ol>\n<li>Impatient. Large chunks eventually show up with the pi function, it's just a bit slow on my simple old coding machine.</li>\n<li>Not handling buffering in any way.</li>\n</ol>\n\n<p>So after rewriting the main function:</p>\n\n<pre><code>import System.IO\n\nmain :: IO ()\nmain =  do hSetBuffering stdout NoBuffering\n           putStrLn pi'\n</code></pre>\n\n<p>It was fixed!</p>\n"}], "owner": {"reputation": 1723, "user_id": 1178663, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/aee59e011d5f1e561052f8516125a286?s=128&d=identicon&r=PG", "display_name": "okdewit", "link": "https://stackoverflow.com/users/1178663/okdewit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 1, "accepted_answer_id": 28729487, "answer_count": 1, "score": 5, "last_activity_date": 1424898126, "creation_date": 1424472694, "last_edit_date": 1424509182, "question_id": 28639613, "link": "https://stackoverflow.com/questions/28639613/haskell-odd-difference-between-compiled-vs-interpreted-functions-which-print-co", "title": "Haskell: odd difference between compiled vs interpreted functions which print concatenated infinite lists", "body": "<p>I'm just exploring Haskell for fun, and to learn about the language. I thought the following behavior was interesting, and I can't find the reason why this happens.</p>\n\n<p>This is an often quoted piece of Haskell code which keeps calculating pi until interrupted, slightly modified to give a concatenated list of chars instead of a list of integers:</p>\n\n<pre><code>main :: IO ()\nmain =  do putStrLn pi'\n\npi' :: [Char]\npi' = concat . map show $ g(1,0,1,1,3,3) where\n   g(q,r,t,k,n,l) =\n      if 4*q+r-t&lt;n*t\n      then n : g(10*q,10*(r-n*t),t,k,div(10*(3*q+r))t-10*n,l)\n      else g(q*k,(2*q+r)*l,t*l,k+1,div(q*(7*k+2)+r*l)(t*l),l+2)\n</code></pre>\n\n<p>If I run it from prelude, it starts concatenating a string resembling the digits of pi:</p>\n\n<p><code>\u03bb&gt; putStrLn pi'\n31415926535897932384626433832795028841971</code> ...etc</p>\n\n<p>Works as expected, it instantly starts spewing out digits.</p>\n\n<p>Now this is a piece of code I just quickly wrote which has the same structure. It's completely useless from a mathematical point of view, I was just messing around to find out how Haskell works. The operations are much simpler, but it does have the same type, and so does the sub function (except for the smaller tuple).</p>\n\n<pre><code>main :: IO ()\nmain =  do putStrLn func\n\nfunc :: [Char]\nfunc = concat . map show $ h(1,2,1) where\n   h(a,b,c) =\n     if a &lt;= 1000\n     then a : h((div a 1)+2*b,b,1)\n     else h(b,div (b-3) (-1),div a a)\n</code></pre>\n\n<p>Same type of result from prelude:</p>\n\n<p><code>\u03bb&gt; putStrLn func\n1591317212529333741454953576165697377818589</code> ...etc</p>\n\n<p>Works as expected, although much faster than the pi function of course, because the calculations are less complex. </p>\n\n<h2>Now for the part which confuses me:</h2>\n\n<p>If I compile: <code>ghc pi.hs</code>, and run my program: <code>./pi</code>, the output stays blank forever, until I send an interrupt signal. At that moment, the whole calculated string of pi is instantly displayed. It doesn't \"stream\" the output into stdout, like GHCI does. OK, I know they don't always behave in the same way.</p>\n\n<p>But next I run: <code>ghc func.hs</code>, and run my program: <code>./func</code>... and it immediately starts printing the list of characters.</p>\n\n<p>Where does this difference come from? I thought it might be because my stupid useless little function is (eventually) repeating, so the compiler can \"predict\" the output better? </p>\n\n<p>Or is there another fundamental difference between the way the functions work? Or am I doing something utterly stupid?</p>\n\n<h2>Solution / Answer</h2>\n\n<p>Provided by Thomas &amp; Daniel below, I was:</p>\n\n<ol>\n<li>Impatient. Large chunks eventually show up with the pi function, it's just a bit slow on my simple old coding machine.</li>\n<li>Not handling buffering in any way.</li>\n</ol>\n\n<p>So after rewriting the main function:</p>\n\n<pre><code>import System.IO\n\nmain :: IO ()\nmain =  do hSetBuffering stdout NoBuffering\n           putStrLn pi'\n</code></pre>\n\n<p>It was fixed!</p>\n"}, {"tags": ["haskell", "io", "monads"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1424465176, "post_id": 28637146, "comment_id": 45575341, "body": "On the same topic: <a href=\"http://conal.net/blog/posts/the-c-language-is-purely-functional\" rel=\"nofollow noreferrer\">The C language is purely functional</a> by Conal Elliot"}, {"owner": {"reputation": 2133, "user_id": 2494576, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69dcf21a7cf379c1f25476d80a73338f?s=128&d=identicon&r=PG", "display_name": "felix-eku", "link": "https://stackoverflow.com/users/2494576/felix-eku"}, "edited": false, "score": 1, "creation_date": 1424465469, "post_id": 28637146, "comment_id": 45575463, "body": "Well the IO type contains desciptions of actions &quot;inside&quot; the language whereas code generate from a C program is &quot;outside&quot; of the language itself (so the code is &quot;pure&quot; but not the language.)"}, {"owner": {"reputation": 271, "user_id": 3574479, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ef0ae971aa925ec2f6c2ff12cc99c822?s=128&d=identicon&r=PG", "display_name": "joeA", "link": "https://stackoverflow.com/users/3574479/joea"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1424465965, "post_id": 28637146, "comment_id": 45575721, "body": "@chi Thanks for the great link! I hadn&#39;t seen that before."}, {"owner": {"reputation": 16267, "user_id": 1346276, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Tu8Re.jpg?s=128&g=1", "display_name": "phipsgabler", "link": "https://stackoverflow.com/users/1346276/phipsgabler"}, "edited": false, "score": 0, "creation_date": 1424595077, "post_id": 28637146, "comment_id": 45608514, "body": "For getting the grasp of how this all plays together, I found reading the &quot;original paper&quot;, <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.53.2504\" rel=\"nofollow noreferrer\">Imperative Functional Programming</a> by Wadler/Peyton Jones, quite helpful (and understandable)."}, {"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 0, "creation_date": 1475555639, "post_id": 28637146, "comment_id": 66977662, "body": "The main thing that makes it different from C++ is that <i>things are not in the IO monad by default</i>."}], "answers": [{"comments": [{"owner": {"reputation": 271, "user_id": 3574479, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ef0ae971aa925ec2f6c2ff12cc99c822?s=128&d=identicon&r=PG", "display_name": "joeA", "link": "https://stackoverflow.com/users/3574479/joea"}, "edited": false, "score": 0, "creation_date": 1424468057, "post_id": 28638260, "comment_id": 45576744, "body": "This seems to be arguing why haskell and functional programming are good, and contrasting with imperative programming. I agree, but that is not the question. I want to understand how haskell remains &quot;pure&quot; with monads (e.g. IO). In fact, it sounds like your #1 is saying that the IO monad is impure. I think haskell is great just with the weak claim that impurities are confined to monads like the IO monad. However, I <i>think</i> the claim of those smarter than me is that all of haskell, including monads like IO, is &quot;pure&quot;. Maybe I don&#39;t know exactly what pure means here, or maybe it is ill-defined."}], "tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": false, "score": 2, "last_activity_date": 1424466685, "creation_date": 1424466685, "answer_id": 28638260, "question_id": 28637146, "link": "https://stackoverflow.com/questions/28637146/monads-in-haskell-and-purity/28638260#28638260", "title": "Monads in Haskell and Purity", "body": "<p>I see two main differences here:</p>\n\n<p>1) In haskell, you can do things that are not in the IO monad. Why is this good? Because if you have a function <code>definitelyDoesntLaunchNukes :: Int -&gt; IO Int</code> you don't know that the resulting IO action doesn't launch nukes, it might for all you know. <code>cantLaunchNukes :: Int -&gt; Int</code> will definitely not launch any nukes (barring any ugly hacks that you should avoid in nearly all circumstances).</p>\n\n<p>2) In haskell, it's not just a cute analogy: IO actions are first class values. You can put them in lists, and leave them there for as long as you want, they won't do anything unless they somehow become part of the <code>main</code> action. The closest that C has to that are function pointers, which are quite a bit more cumbersome to use. In C++ (and most modern imperative languages really) you have closures which technically could be used for this purpose, but rarely are - mainly because Haskell is pure and they aren't. </p>\n\n<p>Why does that distinction matter here? Well, where are you going to get your other IO actions/closures from? Probably, functions/methods of some description. Which, in an impure language, can themselves have side effects, rendering the attempt of isolating them in these languages pointless.</p>\n"}, {"comments": [{"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "edited": false, "score": 0, "creation_date": 1424471880, "post_id": 28639458, "comment_id": 45578214, "body": "Also, if you&#39;re curious to read more, I wrote a longer <a href=\"http://jelv.is/blog/Haskell-Monads-and-Purity\" rel=\"nofollow noreferrer\">article</a> on this a while back which dives into more or less the same idea in more depth. By pure coincidence, it has almost the same title as this question :)."}], "tags": [], "owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "is_accepted": true, "score": 12, "last_activity_date": 1439573059, "last_edit_date": 1439573059, "creation_date": 1424471835, "answer_id": 28639458, "question_id": 28637146, "link": "https://stackoverflow.com/questions/28637146/monads-in-haskell-and-purity/28639458#28639458", "title": "Monads in Haskell and Purity", "body": "<p>It's hard to argue conclusively in either direction because \"pure\" is not particularly well-defined. Certainly, <em>something</em> makes Haskell fundamentally different from other languages, and it's deeply related to managing side-effects and the <code>IO</code> type\u00b9, but it's not clear <em>exactly</em> what that <em>something</em> is. Given a concrete definition to refer to we could just check if it applies, but this isn't easy: such definitions will tend to either not match everyone's expectations or be too broad to be useful.</p>\n\n<p>So what makes Haskell special, then? In my view, it's the separation between <strong>evaluation</strong> and <strong>execution</strong>.</p>\n\n<p>The base language\u2014closely related to the \u03bb-caluclus\u2014is all about the former. You work with expressions that evaluate to other expressions, <code>1 + 1</code> to <code>2</code>. No side-effects here, not because they were suppressed or removed but simply because they don't make sense in the first place. They're not part of the model\u00b2 any more than, say, backtracking search is part of the model of Java (as opposed to Prolog).</p>\n\n<p>If we just stuck to this base language with no added facilities for <code>IO</code>, I think it would be fairly uncontroversial to call it \"pure\". It would still be useful as, perhaps, a replacement for Mathematica. You would write your program as an expression and then get the result of evaluating the expression at the REPL. Nothing more than a fancy calculator, and nobody accuses the expression language you use in a calculator of being impure\u00b3!</p>\n\n<p>But, of course, this is too limiting. We want to use our language to read files and serve web pages and draw pictures and control robots and interact with the user. So the question, then, is how to preserve everything we like about evaluating expressions while extending our language to do everything we want.</p>\n\n<p>The answer we've come up with? <code>IO</code>. A special type of expression that our calculator-like language can evaluate which corresponds to doing some effectful actions. Crucially, evaluation still works just as before, even for things in <code>IO</code>. The effects get executed in the order specified by the resulting <code>IO</code> value, not based on how it was evaluated. <code>IO</code> is what we use to introduce and manage effects into our otherwise-pure expression language.</p>\n\n<p>I think that's enough to make describing Haskell as \"pure\" meaningful. </p>\n\n<h3>footnotes</h3>\n\n<p>\u00b9 Note how I said <code>IO</code> and not monads in general: the concept of a monad is immensely useful for dozens of things unrelated to input and output, and the <code>IO</code> types has to be more than <em>just</em> a monad to be useful. I feel the two are linked too closely in common discourse.</p>\n\n<p>\u00b2 This is why <code>unsafePerformIO</code> is so, well, unsafe: it breaks the core abstraction of the language. This is the same as, say, putzing with specific registers in C: it can both cause weird behavior and stop your code from being portable because it goes below C's level of abstraction.</p>\n\n<p>\u00b3 Well, mostly, as long as we ignore things like generating random numbers.</p>\n"}, {"tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 5, "last_activity_date": 1439614622, "last_edit_date": 1439614622, "creation_date": 1424472601, "answer_id": 28639600, "question_id": 28637146, "link": "https://stackoverflow.com/questions/28637146/monads-in-haskell-and-purity/28639600#28639600", "title": "Monads in Haskell and Purity", "body": "<p>A function with type, for example, <code>a -&gt; IO b</code> always returns an identical IO action when given the same input; it is pure in that it cannot possibly inspect the environment, and obeys all the usual rules for pure functions. This means that, among other things, the compiler can apply all of its usual optimization rules to functions with an <code>IO</code> in their type, because it knows they are still pure functions. </p>\n\n<p>Now, the IO action returned may, <em>when run</em>, look at the environment, read files, modify global state, whatever, all bets are off once you run an action. But you don't necessarily have to run an action; you can put five of them into a list and then run them in reverse of the order in which you created them, or never run some of them at all, if you want; you couldn't do this if IO actions implicitly ran themselves when you created them. </p>\n\n<p>Consider this silly program:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  inputs &lt;- take 5 . lines &lt;$&gt; getContents\n  let [line1,line2,line3,line4,line5] = map print inputs\n  line3\n  line1\n  line2\n  line5\n</code></pre>\n\n<p>If you run this, and then enter 5 lines, you will see them printed back to you but in a different order, and with one omitted, even though our haskell program runs <code>map print</code> over them in the order they were received. You couldn't do this with C's <code>printf</code>, because it immediately performs its IO when called; haskell's version just returns an IO action, which you can still manipulate as a first-class value and do whatever you want with.</p>\n"}, {"tags": [], "owner": {"reputation": 243, "user_id": 13679816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b02acae66c6a347786eb93e8cbead85?s=128&d=identicon&r=PG", "display_name": "atravers", "link": "https://stackoverflow.com/users/13679816/atravers"}, "is_accepted": false, "score": 1, "last_activity_date": 1593127201, "creation_date": 1593127201, "answer_id": 62585703, "question_id": 28637146, "link": "https://stackoverflow.com/questions/28637146/monads-in-haskell-and-purity/62585703#62585703", "title": "Monads in Haskell and Purity", "body": "<hr />\n<p>fiction-mode: <strong>Active</strong></p>\n<p>It was quite a challenge, and I think a <a href=\"https://www.britannica.com/science/wormhole\" rel=\"nofollow noreferrer\">wormhole</a> could be forming in the neighbour's backyard, but I managed to grab part of a Haskell I/O implementation from an <a href=\"https://plato.stanford.edu/entries/qm-manyworlds\" rel=\"nofollow noreferrer\">alternate reality</a>:</p>\n<pre><code>class Kleisli k where\n    infixr 1 &gt;=&gt;\n    simple :: (a -&gt; b) -&gt; (a -&gt; k b)\n    (&gt;=&gt;)  :: (a -&gt; k b) -&gt; (b -&gt; k c) -&gt; a -&gt; k c\n\ninstance Kleisli IO where\n    simple = primSimpleIO\n    (&gt;=&gt;)  = primPipeIO\n\nprimitive primSimpleIO :: (a -&gt; b) -&gt; (a -&gt; IO b)\nprimitive primPipeIO   :: (a -&gt; IO b) -&gt; (b -&gt; IO c) -&gt; a -&gt; IO c\n</code></pre>\n<p>Back in our slightly-mutilated reality (sorry!), I have used this other form of Haskell I/O to define <em>our</em> form of Haskell I/O:</p>\n<pre><code>instance Monad IO where\n    return x = simple (const x) ()\n    m &gt;&gt;= k  = (const m &gt;=&gt; k) ()\n</code></pre>\n<p><strong>and it works!</strong></p>\n<p>fiction-mode: <strong>Offline</strong></p>\n<hr />\n<blockquote>\n<p>My question is whether monads in Haskell actually maintain Haskell's purity, and if so how.</p>\n</blockquote>\n<p>The monadic <em>interface</em>, by itself, doesn't maintain purity - it is only an interface, albeit a jolly-versatile one. As my little work of fiction shows, there are other possible interfaces for the job - it's just a matter of how convenient they are to use in practice.</p>\n<p>For an implementation of Haskell I/O, what maintains the purity is that all the pertinent entities, be they:</p>\n<ul>\n<li><code>IO</code>, <code>simple</code>, <code>(&gt;=&gt;)</code> etc</li>\n</ul>\n<p>or:</p>\n<ul>\n<li><code>IO</code>, <code>return</code>, <code>(&gt;&gt;=)</code> etc</li>\n</ul>\n<p>are <em>abstract</em> - how the implementation defines those is <em>kept private</em>.</p>\n<p>Otherwise, you would be able to devise &quot;novelties&quot; <a href=\"https://hackage.haskell.org/package/acme-realworld\" rel=\"nofollow noreferrer\">like this</a>:</p>\n<pre><code>what_the_heck =\n  do spare_world &lt;- getWorld  -- how easy was that?\n     launchMissiles           -- let's mess everything up,\n     putWorld spare_world     -- because undoing it is just so easy :-D\n     what_the_heck            -- that was fun; let's do it again!\n</code></pre>\n<p>(Aren't you glad our reality isn't quite so pliable? ;-)</p>\n<p>This observation extends to types like <code>ST</code> (encapsulated state) and <code>STM</code> (concurrency) and their stewards (<code>runST</code>, <code>atomically</code> etc). For types like lists, <code>Maybe</code> and <code>Either</code>, their orthodox definitions in Haskell ensures purity.</p>\n<p>So when you see an <em>interface</em> - monadic, applicative, etc - for certain abstract types, purity is maintained by keeping its <em>implementation</em> private; safe from being used in aberrant ways.</p>\n"}], "owner": {"reputation": 271, "user_id": 3574479, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ef0ae971aa925ec2f6c2ff12cc99c822?s=128&d=identicon&r=PG", "display_name": "joeA", "link": "https://stackoverflow.com/users/3574479/joea"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 874, "favorite_count": 1, "accepted_answer_id": 28639458, "answer_count": 4, "score": 4, "last_activity_date": 1606581491, "creation_date": 1424462095, "last_edit_date": 1606581491, "question_id": 28637146, "link": "https://stackoverflow.com/questions/28637146/monads-in-haskell-and-purity", "title": "Monads in Haskell and Purity", "body": "<p>My question is whether monads in Haskell actually maintain Haskell's purity, and if so how. Frequently I have read about how side effects are impure but that side effects are needed for useful programs (e.g. I/O). In the next sentence it is stated that Haskell's solution to this is monads. Then monads are explained to some degree or another, but not really how they solve the side-effect problem.</p>\n<p>I have seen <a href=\"https://stackoverflow.com/questions/4063778/in-what-sense-is-the-io-monad-pure\">this</a> and <a href=\"https://stackoverflow.com/questions/3117583/is-haskell-truly-pure-is-any-language-that-deals-with-input-and-output-outside\">this</a>, and my interpretation of the answers is actually one that came to me in my own readings -- the &quot;actions&quot; of the IO monad are not the I/O themselves but objects that, when executed, perform I/O. But it occurs to me that one could make the same argument for any code or perhaps any compiled executable. Couldn't you say that a C++ program only produces side effects when the compiled code is executed? That all of C++ is inside the IO monad and so C++ is pure? I doubt this is true, but I honestly don't know in what way it is not. In fact, didn't Moggi (sp?) initially use monads to model the denotational semantics of imperative programs?</p>\n<p>Some background: I am a fan of Haskell and functional programming and I hope to learn more about both as my studies continue. I understand the benefits of referential transparency, for example. The motivation for this question is that I am a grad student and I will be giving 2 1-hour presentations to a programming languages class, one covering Haskell in particular and the other covering functional programming in general. I suspect that the majority of the class is not familiar with functional programming, maybe having seen a bit of scheme. I hope to be able to (reasonably) clearly explain how monads solve the purity problem without going into category theory and the theoretical underpinnings of monads, which I wouldn't have time to cover and anyway I don't fully understand myself -- certainly not well enough to present.</p>\n<p>I wonder if &quot;purity&quot; in this context is not really well-defined?</p>\n"}, {"tags": ["performance", "haskell", "parallel-processing", "threadscope"], "comments": [{"owner": {"reputation": 4815, "user_id": 2579220, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j2xmH.jpg?s=128&g=1", "display_name": "mvw", "link": "https://stackoverflow.com/users/2579220/mvw"}, "edited": false, "score": 1, "creation_date": 1424458297, "post_id": 28636047, "comment_id": 45572018, "body": "Parallelization (distributing tasks, collecting results) comes with some overhead, perhaps you need a problem instance that needs more computing to reap benefits?"}, {"owner": {"reputation": 660, "user_id": 1598002, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/39de6ca47e17259ed444ea7318be9689?s=128&d=identicon&r=PG", "display_name": "ipsec", "link": "https://stackoverflow.com/users/1598002/ipsec"}, "edited": false, "score": 0, "creation_date": 1424458646, "post_id": 28636047, "comment_id": 45572193, "body": "I cannot reproduce this. <code>-N2</code> is nearly twice as fast on my machine."}, {"owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "reply_to_user": {"reputation": 4815, "user_id": 2579220, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j2xmH.jpg?s=128&g=1", "display_name": "mvw", "link": "https://stackoverflow.com/users/2579220/mvw"}, "edited": false, "score": 1, "creation_date": 1424460179, "post_id": 28636047, "comment_id": 45572939, "body": "@mvw That&#39;s what I thought at first, but since the example I&#39;m using is an example specifically created to show the benefit of parallelization I would be surprised if it didn&#39;t work."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1424460517, "post_id": 28636047, "comment_id": 45573116, "body": "Are you sure you&#39;re comparing wall clock time and not CPU time?  I had mistakenly looked at CPU time when trying to reproduce.  Using *nix <code>time</code> command should give a slightly clearer English result.  EDIT: It appears <code>-s</code> gives wall clock time too and you&#39;re output does indeed show <code>-N2</code> is slower, odd.  Can not reproduce with ghc 7.8.x on Linux x86_64."}, {"owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "edited": false, "score": 0, "creation_date": 1424460692, "post_id": 28636047, "comment_id": 45573207, "body": "You can measure Haskell programs using the -s RTS option (<code>.&#47;foo +RTS -s</code>). It does measure both wall clock time and CPU time. Since I pasted the raw results you can look them up both. (I guess the elapsed value is the wall clock time.)"}, {"owner": {"reputation": 4815, "user_id": 2579220, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j2xmH.jpg?s=128&g=1", "display_name": "mvw", "link": "https://stackoverflow.com/users/2579220/mvw"}, "edited": false, "score": 0, "creation_date": 1424464316, "post_id": 28636047, "comment_id": 45574945, "body": "<a href=\"https://wiki.haskell.org/ThreadScope_Tour/Spark\" rel=\"nofollow noreferrer\">wiki.haskell.org/ThreadScope_Tour/Spark</a> seems to give hints on measuring."}], "answers": [{"comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1424472525, "post_id": 28638246, "comment_id": 45578411, "body": "-_- Well ya. That&#39;ll do it."}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 2, "creation_date": 1424509296, "post_id": 28638246, "comment_id": 45586080, "body": "It&#39;s a good idea to run tasks like video conversion with the lowest CPU+disk priority. I usually call <code>ionice -c3 schedtool -D -n15 -e command args</code>."}], "tags": [], "owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "is_accepted": true, "score": 2, "last_activity_date": 1424466647, "creation_date": 1424466647, "answer_id": 28638246, "question_id": 28636047, "link": "https://stackoverflow.com/questions/28636047/haskell-is-slower-in-parallel/28638246#28638246", "title": "Haskell is slower in parallel", "body": "<p>I just did the test again and like expected the parallel version is faster.</p>\n\n<p>It turns out, it is a bad idea to measure performance, while the CPU is 100% busy converting videos.</p>\n"}], "owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 408, "favorite_count": 1, "accepted_answer_id": 28638246, "answer_count": 1, "score": 4, "last_activity_date": 1424466647, "creation_date": 1424457899, "last_edit_date": 1424460523, "question_id": 28636047, "link": "https://stackoverflow.com/questions/28636047/haskell-is-slower-in-parallel", "title": "Haskell is slower in parallel", "body": "<p>I've been experimenting with parallelizing Haskell programs. To my surprise most of my attempts made my examples run slower, so I decided to dig into Threadscope and started following the tutorial <a href=\"https://wiki.haskell.org/ThreadScope_Tour\" rel=\"nofollow\">here</a>.</p>\n\n<p>In <a href=\"https://wiki.haskell.org/ThreadScope_Tour/Profile2\" rel=\"nofollow\">part 5</a> the example program sudoku3 is introduced, which is suppoed to be an example of a well-parallelized Haskell program. So I compiled it like described in the tutorial with</p>\n\n<pre><code>ghc -O2 sudoku3.hs -threaded -rtsopts -eventlog\n</code></pre>\n\n<p>and (not like described in the tutorial) measured how fast it is with and without parallelism. The results were surprising:</p>\n\n<pre><code>$ ./sudoku3 sudoku17.1000.txt +RTS -s -N1\n   1,181,490,684 bytes allocated in the heap\n      13,247,408 bytes copied during GC\n       1,094,432 bytes maximum residency (5 sample(s))\n          35,556 bytes maximum slop\n               3 MB total memory in use (0 MB lost due to fragmentation)\n\n                                    Tot time (elapsed)  Avg pause  Max pause\n  Gen  0      2282 colls,     0 par    0.07s    0.08s     0.0000s    0.0061s\n  Gen  1         5 colls,     0 par    0.01s    0.01s     0.0012s    0.0044s\n\n  TASKS: 3 (1 bound, 2 peak workers (2 total), using -N1)\n\n  SPARKS: 1000 (0 converted, 0 overflowed, 0 dud, 0 GC'd, 1000 fizzled)\n\n  INIT    time    0.00s  (  0.00s elapsed)\n  MUT     time    2.51s  (  2.90s elapsed)\n  GC      time    0.08s  (  0.08s elapsed)\n  EXIT    time    0.00s  (  0.00s elapsed)\n  Total   time    2.59s  (  2.98s elapsed)\n\n  Alloc rate    469,886,714 bytes per MUT second\n\n  Productivity  97.0% of total user, 84.3% of total elapsed\n\ngc_alloc_block_sync: 0\nwhitehole_spin: 0\ngen[0].sync: 0\ngen[1].sync: 0\n</code></pre>\n\n<p>Here the run with two cores:</p>\n\n<pre><code>$ ./sudoku3 sudoku17.1000.txt +RTS -s -N2\n   1,207,033,704 bytes allocated in the heap\n      23,422,808 bytes copied during GC\n       1,066,716 bytes maximum residency (22 sample(s))\n          47,524 bytes maximum slop\n               5 MB total memory in use (0 MB lost due to fragmentation)\n\n                                    Tot time (elapsed)  Avg pause  Max pause\n  Gen  0      1488 colls,  1488 par    0.40s    0.40s     0.0003s    0.0147s\n  Gen  1        22 colls,    21 par    0.07s    0.06s     0.0026s    0.0087s\n\n  Parallel GC work balance: 39.57% (serial 0%, perfect 100%)\n\n  TASKS: 4 (1 bound, 3 peak workers (3 total), using -N2)\n\n  SPARKS: 1000 (968 converted, 0 overflowed, 0 dud, 0 GC'd, 32 fizzled)\n\n  INIT    time    0.00s  (  0.00s elapsed)\n  MUT     time    3.45s  (  2.96s elapsed)\n  GC      time    0.47s  (  0.45s elapsed)\n  EXIT    time    0.00s  (  0.00s elapsed)\n  Total   time    3.93s  (  3.41s elapsed)\n\n  Alloc rate    349,389,354 bytes per MUT second\n\n  Productivity  88.0% of total user, 101.4% of total elapsed\n\ngc_alloc_block_sync: 913\nwhitehole_spin: 0\ngen[0].sync: 25\ngen[1].sync: 0\n</code></pre>\n\n<p>Surprisingly the run with two cores was slower. Why is this?</p>\n\n<p>My GHC version is 7.6.3<br>\nOperating System: Debian Jessie Linux/GNU i386 (i686)</p>\n"}, {"tags": ["haskell", "where-clause"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1424550546, "last_edit_date": 1424550546, "creation_date": 1424456191, "answer_id": 28635605, "question_id": 28635401, "link": "https://stackoverflow.com/questions/28635401/haskell-does-referencing-a-list-defined-using-where-create-the-list-just-once/28635605#28635605", "title": "Haskell - Does referencing a list defined using where, create the list just once, or every time the is referenced?", "body": "<p>The Haskell report does not say how it is evaluated: it merely specifies what the result is.</p>\n\n<p>However, GHC will calculate such list only once. This can have a positive effect on peformance if the list is expensive to produce, since it will be produced only once. Mind that, in some cases, it can also have a <em>negative</em> effect on performance: for instance, (silly example)</p>\n\n<pre><code>let bigList = [1..1000000]\nin  foldl' (+) 0 bigList + foldl' (-) 0 bigList\n</code></pre>\n\n<p>will keep the large list in memory until both folds are computed. Instead,</p>\n\n<pre><code>foldl' (+) 0 [1..1000000] + foldl' (-) 0 [1..1000000]\n</code></pre>\n\n<p>can run in constant space, since the list elements can be garbage collected as soon as they are produced.</p>\n\n<p>For instance, using a 50M list, the first makes GHCi spike to 2.5GB resident memory, and then to return to 100MB. The second has no noticeable effect.</p>\n"}], "owner": {"reputation": 729, "user_id": 3255571, "user_type": "registered", "accept_rate": 10, "profile_image": "https://i.stack.imgur.com/IRrQA.jpg?s=128&g=1", "display_name": "Wolff", "link": "https://stackoverflow.com/users/3255571/wolff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1424550546, "creation_date": 1424455467, "question_id": 28635401, "link": "https://stackoverflow.com/questions/28635401/haskell-does-referencing-a-list-defined-using-where-create-the-list-just-once", "title": "Haskell - Does referencing a list defined using where, create the list just once, or every time the is referenced?", "body": "<p>I can't post the my function that is giving me bother, but basically, I'm having run time problems in my implementation of an A* Search using a heuristic which applies the ceiling function onto the straight line distance between two points. Throughout the function I refer to a list I define at the end using \"where\", and I believe it is a function within this list causing the runtime problems (as when I remove it, it runs quickly), but I don't understand why because it isn't a complicated function at all. This leads me to believe that the function may be trying to recreate the list every time it is referenced, instead of just once and using the already formed list each time which may be slowing it down, and causing runtimes to increase exponentionally.</p>\n\n<p>i.e. As a basic example, I have referenced \"myList\" 3 times in the function.</p>\n\n<pre><code>function :: Int -&gt; [Int]\nfunction x = head (myList) : (maximum (myList) : minimum (myList))\n           where myList = [snd pair | pair &lt;- (zip [0..] [sortBy compare [5*x,3-x,99*x]])]\n</code></pre>\n\n<p>Does this take the same computational time as...</p>\n\n<pre><code>function 5 = head ([snd pair | pair &lt;- (zip [0..] [sortBy compare [5*5,3-5,99*5]])]) \n             : (maximum ([snd pair | pair &lt;- (zip [0..] [sortBy compare [5*5,3-5,99*5]])]) \n             : minimum ([snd pair | pair &lt;- (zip [0..] [sortBy compare [5*5,3-5,99*5]])]))\n</code></pre>\n\n<p>i.e. it forms the list from scratch three times throughout the function, even though the result would always be the same.</p>\n\n<p>Or does it calculate it once, and use that value whenever the function is called?</p>\n\n<p>I don't know quite what it would look like otherwise, but as a bit of a muddle of pseudocode and Haskell, I imagine it would go something like this.</p>\n\n<pre><code>function 5...\n-- First step, Calculate myList\nMyList = [snd pair | pair &lt;- (zip [0..] [sortBy compare [5*5,3-5,99*5]])]\n       = [-2,25,495]\n\n--Second step, calculate function using myList = [-2,25,495]\nfunction 5 = head (myList) : (maximum (myList) : minimum (myList))\n           = head [-2,25,495] : maximum [-2,25,495] : minimum [-2,25,495]\n           = -2 : (495 : -2)\n           = [-2,495,-2]\n</code></pre>\n\n<p>I hope it's not too difficult to understand what I am trying to ask here.</p>\n\n<p>Any assistance would be much appreciated, thanks!</p>\n"}, {"tags": ["haskell", "cabal", "cabal-install"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1424444446, "post_id": 28631925, "comment_id": 45563871, "body": "If the <code>diagrams</code> package isn&#39;t specified as a dependency in your <code>.cabal</code> file it won&#39;t be available from <code>cabal repl</code> (a mis-feature, IMO).  You can get around this with <code>ghci -no-user-package-db -package-db=.&#47;.cabal-sandbox&#47;i386-windows-ghc-7.6.3-packages&zwnj;&#8203;.conf.d</code>, which I&#39;ve made an alias for in my install of cygwin bash."}, {"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424461894, "post_id": 28631925, "comment_id": 45573762, "body": "Thanks - but ignoring cabal-repl approach, it seems like ghci -package-db=... should be enough for ghc/i to find it. I have the same application on an adjacent machine, and it works fine, finds any/all installed packages. So teh Question is why the -db argument should not be enough to find it, when cabal install does."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424462054, "post_id": 28631925, "comment_id": 45573836, "body": "When you use <code>cabal repl</code>, it loads the dependencies you&#39;ve specified for your project.  You can definitely install other packages into a sandbox, but that doesn&#39;t mean they&#39;re available to import.  The <code>-package-db</code> flag adds an additional package database to scan when simply ghci is looking for packages, but I prefer the <code>-no-user-package-db</code> flag as well since it prevents conflicts with my system install of cabal."}], "answers": [{"comments": [{"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "edited": false, "score": 0, "creation_date": 1424494449, "post_id": 28637125, "comment_id": 45583110, "body": "Hmm, not sure if this really answers the issue - I am running ghc/ghci directly, not via cabal. and to have it find packages in the sandbox I added the -package-db=./.cabal-sandbox... option. I have a single pgm.hs file, and no .cabal file, and should not need one. This same procedure works on the adjacent machine, so the procedure seems correct - but the result fails on this machine."}, {"owner": {"reputation": 660, "user_id": 1598002, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/39de6ca47e17259ed444ea7318be9689?s=128&d=identicon&r=PG", "display_name": "ipsec", "link": "https://stackoverflow.com/users/1598002/ipsec"}, "reply_to_user": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "edited": false, "score": 0, "creation_date": 1424509917, "post_id": 28637125, "comment_id": 45586237, "body": "Yes, it should be possible to give some flags to <code>ghci</code> to find the packages in the sandbox. I don&#39;t know, why it does not work in this case. But I find it easier to use <code>cabal exec</code> if you are using a Cabal sandbox. This is also more robust in regard to future changes to the sandbox structure."}, {"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "edited": false, "score": 0, "creation_date": 1424527504, "post_id": 28637125, "comment_id": 45590959, "body": "Thanks - I did not know about &quot;<i>cabal exec ghc</i>&quot;, will look more at that, but it looks to me like there is something messed up with my cabal databases in general. I find that 80% of problems and time wastes and failures with Haskell are cabal related, and I have to just periodically rebuild and reinstall all libraries, and even then lots of things fail (xxHaskell, gtk+, ...)."}], "tags": [], "owner": {"reputation": 660, "user_id": 1598002, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/39de6ca47e17259ed444ea7318be9689?s=128&d=identicon&r=PG", "display_name": "ipsec", "link": "https://stackoverflow.com/users/1598002/ipsec"}, "is_accepted": false, "score": 6, "last_activity_date": 1424461991, "creation_date": 1424461991, "answer_id": 28637125, "question_id": 28631925, "link": "https://stackoverflow.com/questions/28631925/haskell-package-installed-but-not-found/28637125#28637125", "title": "Haskell package installed but not found", "body": "<p>As bheklilr said, if <code>ghci</code> is started with <code>cabal repl</code>, it will only find packages specified as a dependency in the <code>.cabal</code> file.</p>\n\n<p>However you can start it with <code>cabal exec ghci</code>, then it will find all packages installed in the sandbox.</p>\n\n<p>The same is true for invoking <code>ghc</code> (<code>cabal build</code> vs. <code>cabal exec ghc</code>), but note that if you want to pass flags you have to use <code>--</code>, like in <code>cabal exec ghc -- -O2 Main.hs</code>. Alternatively you can use <code>cabal exec bash</code> and launch <code>ghci</code> or <code>ghc</code> in the new shell.</p>\n\n<p><code>cabal exec</code> was added with Cabal 1.20.</p>\n"}], "owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1784, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1424495336, "creation_date": 1424444241, "last_edit_date": 1424495336, "question_id": 28631925, "link": "https://stackoverflow.com/questions/28631925/haskell-package-installed-but-not-found", "title": "Haskell package installed but not found", "body": "<p>I installed diagrams, and it seems to be there, but GHCi doesn\u2019t find it. I tried adding the local sandbox to the command line (-package-db),  but still no luck.\nAny suggestions?</p>\n\n<pre><code>   C:\\Users\\guthrie&gt;\n   C:\\Users\\guthrie&gt;cabal install diagrams\n    Resolving dependencies...\n    All the requested packages are already installed:\n   diagrams-1.2\n   Use --reinstall if you want to reinstall anyway.\n</code></pre>\n\n<p>I find it in:</p>\n\n<pre><code>  C:\\Users\\guthrie\\.cabal-sandbox\\i386-windows-ghc-7.6.3-packages.conf.d\n        (diagrams-1.2, diagrams-contrib, -core, -lib, -svg) \n</code></pre>\n\n<p>But running: \u201ccabal repl\u201d or using the GHC(i) flag \u201c<em>-package-db=\u2026</em>\u201d\nfail to find it:</p>\n\n<pre><code>C:\\Users\\guthrie&gt;cabal repl\nGHCi, version 7.6.3: http://www.haskell.org/ghc/  :? for help\nLoading package ghc-prim ... linking ... done.\nLoading package integer-gmp ... linking ... done.\nLoading package base ... linking ... done.\nPrelude&gt; :m + Diagrams.Prelude\n\n&lt;no location info&gt;:\n    Could not find module `Diagrams.Prelude'\n   It is not a module in the current program, or in any known package.\nPrelude&gt;\n</code></pre>\n\n<hr>\n\n<p>To clarify; ignoring the cabal invocations, using GHC/i directly, and the program diagramsDemo.hs:</p>\n\n<pre><code>--  http://projects.haskell.org/diagrams/doc/quickstart.html\n--\nimport Diagrams.Prelude\nimport Diagrams.Backend.SVG.CmdLine\n\nmain = mainWith (circle 1 :: Diagram B R2)\n</code></pre>\n\n<p>Gives:</p>\n\n<pre><code>C:\\Users\\guthrie\\Desktop\\xFer\\Graphics&gt;ghc --make diagramsDemo.hs\n\ndiagramsDemo.hs:7:8:\n    Could not find module `Diagrams.Backend.SVG.CmdLine'\n    Use -v to see a list of the files searched for.\n\nC:\\Users\\guthrie\\Desktop\\xFer\\Graphics&gt;ghc --make diagramsDemo.hs -package-db=C:\\Users\\guthrie\\.cabal-sandbox\\i386-windows-ghc-7.6.3-packages.conf.d\n\ndiagramsDemo.hs:7:8:\n    Could not find module `Diagrams.Backend.SVG.CmdLine'\n    Use -v to see a list of the files searched for.\n</code></pre>\n"}, {"tags": ["haskell", "aeson"], "answers": [{"tags": [], "owner": {"reputation": 5992, "user_id": 74497, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0d4a7e6c8edd88e835508df8397592e5?s=128&d=identicon&r=PG", "display_name": "ocharles", "link": "https://stackoverflow.com/users/74497/ocharles"}, "is_accepted": true, "score": 2, "last_activity_date": 1424442961, "creation_date": 1424442961, "answer_id": 28631456, "question_id": 28631065, "link": "https://stackoverflow.com/questions/28631065/is-there-an-asvalue-instance-for-nested-vectors-of-aeson-values/28631456#28631456", "title": "Is there an AsValue instance for nested Vectors of Aeson Values?", "body": "<p>You're using <code>nth</code> which is a combinator designed to make it easier to work when you are directly traversing a JSON value. However, you're working with a vector of values. In this case, you should use <code>ix 0</code> rather than <code>nth 0</code>.</p>\n"}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 28631456, "answer_count": 1, "score": 0, "last_activity_date": 1424442961, "creation_date": 1424441768, "question_id": 28631065, "link": "https://stackoverflow.com/questions/28631065/is-there-an-asvalue-instance-for-nested-vectors-of-aeson-values", "title": "Is there an AsValue instance for nested Vectors of Aeson Values?", "body": "<p>I'm trying to get the feel of <code>aeson</code> package. Am I using its <code>Lens</code> API incorrectly?</p>\n\n<pre><code>&gt; :t bt ^? _Array\nbt ^? _Array :: Maybe (vector-0.10.12.2:Data.Vector.Vector Value)\n\n&gt; :t bt ^? _Array . nth 0 . _Array\n\n&lt;interactive&gt;:1:16:\n    No instance for (AsValue\n                       (vector-0.10.12.2:Data.Vector.Vector Value))\n      arising from a use of \u2018nth\u2019\n    In the first argument of \u2018(.)\u2019, namely \u2018nth 0\u2019\n    In the second argument of \u2018(.)\u2019, namely \u2018nth 0 . _Array\u2019\n    In the second argument of \u2018(^?)\u2019, namely \u2018_Array . nth 0 . _Array\u2019\n</code></pre>\n"}, {"tags": ["haskell", "types", "expression", "terminology"], "answers": [{"comments": [{"owner": {"reputation": 18456, "user_id": 1198559, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/bOjLe.png?s=128&g=1", "display_name": "jhegedus", "link": "https://stackoverflow.com/users/1198559/jhegedus"}, "edited": false, "score": 0, "creation_date": 1424440680, "post_id": 28630391, "comment_id": 45561358, "body": "Thanks for your answer, so in this sense <code>a</code> and <code>b</code> are two different polymorphic type expressions but they refer to the same polymorphic type (namely the any type), is that right ?"}, {"owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "reply_to_user": {"reputation": 18456, "user_id": 1198559, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/bOjLe.png?s=128&g=1", "display_name": "jhegedus", "link": "https://stackoverflow.com/users/1198559/jhegedus"}, "edited": false, "score": 0, "creation_date": 1424449268, "post_id": 28630391, "comment_id": 45567021, "body": "That question is a bit more complex. The type expressions <code>a</code> and <code>b</code> are certainly different as expressions but actually may be interpreted as malformed (&quot;open&quot;) expressions and therefore represent no actual type. What you might prefer to write is <code>forall a . a</code> and <code>forall b . b</code> which now are well-formed type expressions which both denote the same type. Now, however, it&#39;s unclear whether it&#39;s proper to call them distinct expressions! You can clearly say that they have different written forms, but since we usually only classify expressions up to alpha-equivalence we may not distinguish them."}, {"owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "reply_to_user": {"reputation": 18456, "user_id": 1198559, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/bOjLe.png?s=128&g=1", "display_name": "jhegedus", "link": "https://stackoverflow.com/users/1198559/jhegedus"}, "edited": false, "score": 0, "creation_date": 1424449498, "post_id": 28630391, "comment_id": 45567184, "body": "Another way of seeing this is to go from &quot;written expression -&gt; abstract binding tree -&gt; type&quot; instead of straight &quot;written expression -&gt; type&quot;. The ABT midpoint is nice as it&#39;s a good kind of object for doing lots of work in computer science\u2014you can see ABTs as trees annotated with good notions of &quot;binding&quot; and &quot;variables&quot;. ABTs have &quot;built in&quot; alpha equivalence, e.g. two ABTs which differ only in valid renamings of bound variables are the same, so the failure to distinguish <code>forall a . a</code> and <code>forall b . b</code> has a more explicit cauase."}, {"owner": {"reputation": 18456, "user_id": 1198559, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/bOjLe.png?s=128&g=1", "display_name": "jhegedus", "link": "https://stackoverflow.com/users/1198559/jhegedus"}, "edited": false, "score": 0, "creation_date": 1424463750, "post_id": 28630391, "comment_id": 45574682, "body": "Thanks for the explanation, now I am trying to find an example such that two expressions ( or ABTs) are different but then they refer to the same type. I have read TAPL, what is a type expression for example in the simply typed lambda calculus or in System F (page 323, TAP) ? Is there such a thing in these systems ?"}, {"owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "reply_to_user": {"reputation": 18456, "user_id": 1198559, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/bOjLe.png?s=128&g=1", "display_name": "jhegedus", "link": "https://stackoverflow.com/users/1198559/jhegedus"}, "edited": false, "score": 1, "creation_date": 1424468685, "post_id": 28630391, "comment_id": 45577015, "body": "The Haskell type of STLC type expressions is <code>data Type = Arr Type Type</code>, or, more interestingly, something like <code>data Type = Arr Type Type | Star</code> if you have some basic types. System F augments this type language with variables and binding much like I discussed above. Harper&#39;s PFPL talks about ABTs and type languages very nicely and I would suggest taking a look into."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424475599, "post_id": 28630391, "comment_id": 45579310, "body": "I think that the types <code>a</code> and <code>b</code> alone are valid types - not malformed - (albeit types which are not valid top level type signatures in Haskell). They would appear internally when types are skolemized by the typechecker, or when you have a local binding with a type signature (<code>f :: forall a . a -&gt; a; f x = y where y :: a; y = x</code>). <code>a</code> and <code>b</code> signify different types, much like <code>\\x . x</code> and <code>\\y . y</code> are the same term up to alpha equivalence, but <code>x</code> and <code>y</code> are not."}, {"owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "edited": false, "score": 0, "creation_date": 1424478906, "post_id": 28630391, "comment_id": 45580232, "body": "I was being a little strict to call them malformed, perhaps. In Haskell notation, <code>a</code> is shorthand for <code>forall a . a</code>, or we could talk about the meaning of <code>a</code> &quot;in context&quot; and have it stand in for whatever the contextual meaning of the free variable actually is. But as a bare term it certainly doesn&#39;t denote any type!"}, {"owner": {"reputation": 18456, "user_id": 1198559, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/bOjLe.png?s=128&g=1", "display_name": "jhegedus", "link": "https://stackoverflow.com/users/1198559/jhegedus"}, "edited": false, "score": 0, "creation_date": 1424497890, "post_id": 28630391, "comment_id": 45583699, "body": "Thanks for the tip on Harper&#39;s PFPL."}], "tags": [], "owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "is_accepted": true, "score": 3, "last_activity_date": 1424439755, "creation_date": 1424439755, "answer_id": 28630391, "question_id": 28629620, "link": "https://stackoverflow.com/questions/28629620/terminology-what-is-the-precise-definition-of-type-expression-in-haskell-as/28630391#28630391", "title": "Terminology: what is the precise definition of &quot;type expression&quot; in Haskell, as used in Thompson&#39;s book?", "body": "<p>If you want to think of types as \"things\", then one can talk about the words we write to describe them, words like <code>Int</code> and <code>Cont (r -&gt; a) (Maybe q)</code> as a language to describe those things. A similar distinction lies between the number 3 and the Haskell code fragment <code>3</code>.</p>\n\n<p>In the same way that <code>3</code> is a (value) expression denoting the number 3, <code>Integer</code> is a type expression denoting the type of integers.</p>\n"}], "owner": {"reputation": 18456, "user_id": 1198559, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/bOjLe.png?s=128&g=1", "display_name": "jhegedus", "link": "https://stackoverflow.com/users/1198559/jhegedus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 780, "favorite_count": 0, "accepted_answer_id": 28630391, "answer_count": 1, "score": 1, "last_activity_date": 1424441868, "creation_date": 1424437283, "last_edit_date": 1592644375, "question_id": 28629620, "link": "https://stackoverflow.com/questions/28629620/terminology-what-is-the-precise-definition-of-type-expression-in-haskell-as", "title": "Terminology: what is the precise definition of &quot;type expression&quot; in Haskell, as used in Thompson&#39;s book?", "body": "<p>What is the precise definition of the term &quot;type expression&quot; as used in Thompson's &quot;Haskell - the craft of functional programming&quot; book ? It seems that this term is not defined in the book.</p>\n<p>It is for example not listed in the index. Also, I tried to search for a clear explicit definition in the book but found nothing.</p>\n<p>Related question: is a <code>type variable</code> a <code>type expression</code>?</p>\n<p>Let's consider for example the following type (expression?):</p>\n<p><code>a-&gt;b</code></p>\n<p>Now, if I replace <code>a</code> with <code>c</code>, then will <code>c-&gt;b</code> be an instance of <code>a-&gt;b</code> ?</p>\n<p>The terminology &quot;type expression&quot; is used for example on page 314 (third edition of the book):</p>\n<blockquote>\n<p>As sets of types, we look for the intersection of the sets given by\n(a, [Char] ) and  (Int, [b] ) . How can we work out a description of\nthis intersection? Before we do this,  we revise and introduce some\nterminology.</p>\n<p>Recall that an instance of a type is given by replacing\na type variable or variables  by type expressions. A type expression\nis a common instance of two type expressions if it  is an instance of\neach expression.</p>\n<p>The most general common instance of two expressions\nis a common instance mgci with the property that every other common\ninstance is an  instance of mgci.</p>\n<p>Now we can describe the\nintersection of the sets given by two type expressions. It  is called\nthe unification of the two, which is the most general common instance\nof the  two type expressions.</p>\n</blockquote>\n"}, {"tags": ["haskell", "aeson"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1424438817, "post_id": 28629290, "comment_id": 45560262, "body": "Maybe something like this <code>&quot;find_this&quot; </code>isInfixOf`  $ show bt&quot;` ?"}, {"owner": {"reputation": 9139, "user_id": 773228, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/baaecdda322cf4462a0dd018d7959b1e?s=128&d=identicon&r=PG&f=1", "display_name": "Justin Wood", "link": "https://stackoverflow.com/users/773228/justin-wood"}, "edited": false, "score": 0, "creation_date": 1424442126, "post_id": 28629290, "comment_id": 45562266, "body": "Do you know the structure of the data before you are parsing it?"}, {"owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "reply_to_user": {"reputation": 9139, "user_id": 773228, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/baaecdda322cf4462a0dd018d7959b1e?s=128&d=identicon&r=PG&f=1", "display_name": "Justin Wood", "link": "https://stackoverflow.com/users/773228/justin-wood"}, "edited": false, "score": 0, "creation_date": 1424442488, "post_id": 28629290, "comment_id": 45562518, "body": "@JustinWood No, It&#39;s a large object that I know nothing about. Some elements have content I expect and I&#39;m interested in their neighborhood only. I can <code>grep</code> them, but I&#39;m hoping that GHCI is better tool to find its path than text editor after pretty printing the content."}], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 4, "last_activity_date": 1424515347, "last_edit_date": 1424515347, "creation_date": 1424467450, "answer_id": 28638474, "question_id": 28629290, "link": "https://stackoverflow.com/questions/28629290/how-to-inspect-parsed-aeson-value/28638474#28638474", "title": "How to inspect parsed Aeson Value?", "body": "<p>The <code>lens</code> package has useful functions for inspecting tree-like structures like JSON <code>Value</code>s. There's also the <code>lens-aeson</code> package with extra JSON-specific functions.</p>\n\n<pre><code>import Data.Text\nimport Data.Aeson\nimport Data.Aeson.Lens (_Value,_String) -- this is from lens-aeson\nimport Data.Foldable (toList)\n\nimport Control.Lens (Fold,folding,universeOf,toListOf,paraOf,preview)\n</code></pre>\n\n<p>We can begin by defining a lens <a href=\"http://hackage.haskell.org/package/lens-4.7/docs/Control-Lens-Fold.html#t:Fold\" rel=\"nofollow\"><code>Fold</code></a> that extracts the immediate child <code>Values</code> of a given JSON <code>Value</code>:</p>\n\n<pre><code>vchildren :: Fold Value Value\nvchildren = folding $ \\v -&gt; case v of\n    Object o -&gt; toList o\n    Array a -&gt; toList a\n    _ -&gt; []\n</code></pre>\n\n<p><a href=\"http://hackage.haskell.org/package/lens-4.7/docs/Control-Lens-Fold.html#v:folding\" rel=\"nofollow\"><code>folding</code></a> is a function from <code>lens</code> that creates a <code>Fold</code> out a function that returns a list. A list of <code>Value</code>s, in our case.</p>\n\n<p>We can combine <code>vchildren</code> with the <a href=\"http://hackage.haskell.org/package/lens-4.7/docs/Control-Lens-Plated.html#v:universeOf\" rel=\"nofollow\"><code>universeOf</code></a> function from <a href=\"http://hackage.haskell.org/package/lens-4.7/docs/Control-Lens-Plated.html\" rel=\"nofollow\"><code>Control.Lens.Plated</code></a> to get a function that extracts <em>all</em> the transitive descendants of a <code>Value</code>, including itself:</p>\n\n<pre><code>allValues :: Value -&gt; [Value]\nallValues = universeOf vchildren\n</code></pre>\n\n<p>And this function extracts all the texts contained in a <code>Value</code>. It uses the <a href=\"http://hackage.haskell.org/package/lens-aeson-1.0.0.3/docs/Data-Aeson-Lens.html#v:_String\" rel=\"nofollow\"><code>_String</code></a> prism from <a href=\"http://hackage.haskell.org/package/lens-aeson-1.0.0.3/docs/Data-Aeson-Lens.html\" rel=\"nofollow\"><code>Data.Aeson.Lens</code></a> (a <a href=\"http://hackage.haskell.org/package/lens-4.6/docs/Control-Lens-Prism.html\" rel=\"nofollow\"><code>Prism</code></a> is a bit like a \"reified\" pattern that can be passed around):</p>\n\n<pre><code>allTexts :: Value -&gt; [Text]\nallTexts = toListOf (folding allValues . _String)\n</code></pre>\n\n<p><code>Control.Lens.Plated</code> also has interesting functions like <a href=\"http://hackage.haskell.org/package/lens-4.7/docs/Control-Lens-Plated.html#v:paraOf\" rel=\"nofollow\"><code>paraOf</code></a>, that let you build \"paramorphims\". A paramorphism is a \"controlled destruction\" of a tree-like structure starting from the leaves, and building the results upward. For example, this function</p>\n\n<pre><code>vpara :: (Value -&gt; [r] -&gt; r) -&gt; Value -&gt; r\nvpara = paraOf vchildren\n</code></pre>\n\n<p>takes as its first parameter another function that receives the \"current node\" along with the intermediate results for the nodes below, and builds the intermediate result for the current node. </p>\n\n<p><code>vpara</code> will start consuming the JSON value from the leaves (the intermediate result list for those nodes is simply <code>[]</code>) and proceeds upwards.</p>\n\n<p>One possible use of <code>vpara</code> is obtaining the list of paths in the JSON that end in a text that matches some condition, like this:</p>\n\n<pre><code>type Path = [Value]\n\npathsThatEndInText :: (Text -&gt; Bool) -&gt; Value -&gt; [Path]\npathsThatEndInText pred = vpara func\n  where\n    func :: Value -&gt; [[Path]] -&gt; [Path]\n    func v@(String txt) _ | pred txt = [[v]]\n    func v l@(_:_) = Prelude.map (v:) (Prelude.concat l)\n    func _ _ = []\n</code></pre>\n\n<p>To obtain a somewhat readable description of one of the paths returned by <code>pathsThatEndInText</code>:</p>\n\n<pre><code>import qualified Data.HashMap.Strict as HM\nimport qualified Data.Vector as V\n\ndescribePath :: Path -&gt; [String]\ndescribePath (v:vs) = Prelude.zipWith step (v:vs) vs\n  where\n    step (Object o) next = (unpack . Prelude.head . HM.keys . HM.filter (==next)) o\n    step (Array a) next = (show . maybe (error \"not found\") id) (V.elemIndex next a)\n    step _ _ = error \"should not happen\"\n</code></pre>\n\n<p>Finally, here's an example JSON value for testing the above functions in ghci:</p>\n\n<pre><code>exampleJSON :: Value\nexampleJSON = maybe Null id (preview _Value str)\n  where\n    str = \"[{ \\\"k1\\\" : \\\"aaa\\\" },{ \\\"k2\\\" : \\\"ccc\\\" }, { \\\"k3\\\" : \\\"ddd\\\" }]\"\n</code></pre>\n\n<p>And here's the <a href=\"https://gist.github.com/danidiaz/3a80eac809a56ae3df59\" rel=\"nofollow\">gist</a>.</p>\n"}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 363, "favorite_count": 1, "accepted_answer_id": 28638474, "answer_count": 1, "score": 2, "last_activity_date": 1424515347, "creation_date": 1424436139, "question_id": 28629290, "link": "https://stackoverflow.com/questions/28629290/how-to-inspect-parsed-aeson-value", "title": "How to inspect parsed Aeson Value?", "body": "<p>How can I browse large <code>Aeson</code> <code>Values</code>? I know there should be a string I'm interested in nested somewhere in the structure. How can I find it?</p>\n\n<p>So far I only know how to query constructor and found out it's an Array. How can I dig deeper than that?</p>\n\n<pre><code>&gt; take 20 $ show bt\n\"Array (fromList [Obj\"\n</code></pre>\n"}, {"tags": ["haskell", "testing", "quickcheck"], "answers": [{"comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1424425097, "post_id": 28625716, "comment_id": 45552356, "body": "Nope. That only causes the <code>Pass</code> messages to appear even for fully-passing runs. But the messages are still only printed after the whole process finishes."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1424425206, "post_id": 28625716, "comment_id": 45552410, "body": "Interestingly, the linked Cabal doc mentions <code>--show-details=streaming</code> but that is neither real-time nor does it show passes..."}], "tags": [], "owner": {"reputation": 903, "user_id": 2393937, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/d35b1ec2432fbea0b75940a605a3d962?s=128&d=identicon&r=PG", "display_name": "DanielM", "link": "https://stackoverflow.com/users/2393937/danielm"}, "is_accepted": false, "score": 0, "last_activity_date": 1424424985, "creation_date": 1424424985, "answer_id": 28625716, "question_id": 28625494, "link": "https://stackoverflow.com/questions/28625494/progress-output-with-distribution-testsuite-quickcheck/28625716#28625716", "title": "Progress output with Distribution.TestSuite.QuickCheck", "body": "<p>Try</p>\n\n<pre><code>cabal test --show-details=always\n</code></pre>\n\n<p>(See the <a href=\"https://www.haskell.org/cabal/users-guide/installing-packages.html\" rel=\"nofollow\">Cabal User Guide</a> for more information)</p>\n"}], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 115, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1424424985, "creation_date": 1424424251, "question_id": 28625494, "link": "https://stackoverflow.com/questions/28625494/progress-output-with-distribution-testsuite-quickcheck", "title": "Progress output with Distribution.TestSuite.QuickCheck", "body": "<p>I am using <code>Distribution.TestSuite.QuickCheck</code> to run QuickCheck tests via <code>cabal test</code>. My test module exports a single definition:</p>\n\n<pre><code>module MOS6502.Tests.Main (tests) where\n\nimport Distribution.TestSuite.QuickCheck as QC\n\nimport MOS6502.Tests\nimport MOS6502.Tests.Framework\n\ntests :: IO [QC.Test]\ntests = return [ testProperty (testLabel test) (runTest test) | test &lt;- allTests ]\n</code></pre>\n\n<p>Whenever I have a failing test, I get the output that I'd expect anyway, e.g.</p>\n\n<pre><code>Running 1 test suites...\nTest suite tests: RUNNING...\nTest case BEQ: Fail \"(after 91 tests): Branch correctly taken\"\nTest case BNE: Pass\nTest case BVS: Fail \"(after 75 tests): Branch correctly taken\"\nTest case JMP abs: Fail \"(after 1 test): PC\"\nTest case JMP ind: Fail \"(after 1 test): PC\"\nTest case STA zp: Pass\nTest case STA zp,X: Pass\nTest case STA abs: Pass\nTest case STA abs,X: Pass\nTest case STA abs,Y: Pass\nTest case STA (zp,X): Pass\nTest case STA (zp),Y: Pass\nTest suite tests: FAIL\nTest suite logged to: dist/test/mos6502-kansas-lava-0.0.0.0-tests.log\n0 of 1 test suites (8 of 12 test cases) passed.\n</code></pre>\n\n<p>However, while the tests are running, I am getting no output (and I also only get minimal output at the end when all tests pass). </p>\n\n<p>Is there a way to have <code>cabal test</code> print out these <code>Test case Foo</code> messages to give me an idea of the progress?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 11, "creation_date": 1424421392, "post_id": 28624408, "comment_id": 45550389, "body": "You need to understand Monad de-sugaring to get an actual idea of how this fits."}, {"owner": {"reputation": 44721, "user_id": 546084, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/wMoWk.jpg?s=128&g=1", "display_name": "Chris Taylor", "link": "https://stackoverflow.com/users/546084/chris-taylor"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 6, "creation_date": 1424425794, "post_id": 28624408, "comment_id": 45552732, "body": "@Sibi that&#39;s technically true but I feel it should be possible to answer this question without mentioning the M-word. After all, m***ds are just one way of dealing with IO in a pure language. Haskell would still have a separation between pure and impure code even if it didn&#39;t have m****ds built into the language, and this problem (or one like it) would still exist."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 44721, "user_id": 546084, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/wMoWk.jpg?s=128&g=1", "display_name": "Chris Taylor", "link": "https://stackoverflow.com/users/546084/chris-taylor"}, "edited": false, "score": 1, "creation_date": 1424426378, "post_id": 28624408, "comment_id": 45553054, "body": "@ChrisTaylor While it&#39;s possible to answer this question without explaining Monad, I really doubt if it will help the OP in grasping the concept. That being said, there are lot of good answers down here."}], "answers": [{"comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1424475828, "post_id": 28624445, "comment_id": 45579367, "body": "Saying <code>let x = y in f x</code> (which really <i>is</i> equivalent to the 2nd do expression) is &quot;equivalent&quot; to <code>f y</code> is dangerous, mainly because it may not be obvious to the reader what &quot;equivalent&quot; means; the values of these two expressions are the same, but their semantics may be different."}, {"owner": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 11, "creation_date": 1424476020, "post_id": 28624445, "comment_id": 45579420, "body": "@user2407038 no, they are exactly the same thing. There isn&#39;t a single difference."}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1574870633, "post_id": 28624445, "comment_id": 104385879, "body": "this give me a hard time (simplified version) <code>testF box = do a &lt;- box; let b = do x &lt;- Just &quot;from let&quot;; return x; return (fmap (++ box) b)</code> the let smuggle a monad without any additional return, b is put <code>silently</code> in the box. In the same time I tried with <code>... b &lt;- do x &lt;- Just &quot;from let&quot;; return x ...&quot;</code> here it compiles but I didn&#39;t find what to give to testF to run it:-)"}], "tags": [], "owner": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "is_accepted": false, "score": 58, "last_activity_date": 1424420495, "creation_date": 1424420495, "answer_id": 28624445, "question_id": 28624408, "link": "https://stackoverflow.com/questions/28624408/equal-vs-left-arrow-symbols-in-haskell/28624445#28624445", "title": "Equal (=) Vs left arrow (&lt;-) symbols in haskell", "body": "<pre><code>do\n    x &lt;- y\n    f x\n</code></pre>\n\n<p>is equivalent to:</p>\n\n<pre><code>y &gt;&gt;= \\x -&gt; f x\n</code></pre>\n\n<hr>\n\n<pre><code>do\n    let x = y\n    f x\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>f y\n</code></pre>\n\n<p>i.e. <code>let</code>/<code>=</code> does no monadic bind whereas <code>&lt;-</code> does.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 112, "last_activity_date": 1581183153, "last_edit_date": 1581183153, "creation_date": 1424424984, "answer_id": 28625714, "question_id": 28624408, "link": "https://stackoverflow.com/questions/28624408/equal-vs-left-arrow-symbols-in-haskell/28625714#28625714", "title": "Equal (=) Vs left arrow (&lt;-) symbols in haskell", "body": "<p>To understand the real difference, you have to understand monads, and the  desugaring described by @rightfold in their answer.</p>\n\n<p>For the specific case of the IO monad, as in your <code>getArgs</code> example, a rough but useful intuition can be made as follows:</p>\n\n<ul>\n<li><code>x &lt;- action</code> <em>runs</em> the IO <code>action</code>, gets its result, and binds it to <code>x</code></li>\n<li><code>let x = action</code> defines <code>x</code> to be equivalent to <code>action</code>, but does not run anything. Later on, you can use <code>y &lt;- x</code> meaning <code>y &lt;- action</code>.</li>\n</ul>\n\n<p>Programmers coming from imperative languages which allow closures, may draw this rough parallel comparison with JavaScript:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>var action = function() { print(3); return 5; }\n\n// roughly equivalent to x &lt;- action\nprint('test 1')\nvar x = action()  // output:3\n// x is 5\n\n// roughly equivalent to let y = action\nprint('test 2')\nvar y = action    // output: nothing\n// y is a function\n\n// roughly equivalent to z &lt;- y\nprint('test 3')\nvar z = y()       // output:3\n// z is 5\n</code></pre>\n\n<p>Again: this comparison focuses on IO, only. For other monads, you need to check what <code>&gt;&gt;=</code> actually is, and think about the desugaring of <code>do</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1473827135, "post_id": 28625806, "comment_id": 66283654, "body": "The OP&#39;s code has a <i>syntax error</i>. It seems that should probably be addressed before the type error that hides behind it."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1525879289, "post_id": 28625806, "comment_id": 87531578, "body": "it could be stressed that having to go through the <code>&lt;-</code> to get to the computed result <i>forces</i> one to do this <i>inside</i> the IO <code>do</code> block, to be able to do this. thus enforcing the separation of impure IO from pure code."}], "tags": [], "owner": {"reputation": 44721, "user_id": 546084, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/wMoWk.jpg?s=128&g=1", "display_name": "Chris Taylor", "link": "https://stackoverflow.com/users/546084/chris-taylor"}, "is_accepted": false, "score": 22, "last_activity_date": 1424425763, "last_edit_date": 1424425763, "creation_date": 1424425307, "answer_id": 28625806, "question_id": 28624408, "link": "https://stackoverflow.com/questions/28624408/equal-vs-left-arrow-symbols-in-haskell/28625806#28625806", "title": "Equal (=) Vs left arrow (&lt;-) symbols in haskell", "body": "<p>The code doesn't compile because the types don't match. Let's load up a GHCI session and look at the types of the functions you're using -</p>\n\n<pre><code>&gt; :t writeFile\nwriteFile :: FilePath -&gt; String -&gt; IO ()\n&gt;\n&gt; :t readFile\nreadFile :: FilePath -&gt; IO String\n</code></pre>\n\n<p>So <code>writeFile</code> wants a <code>FilePath</code> and a <code>String</code>. You want to get the <code>String</code> from <code>readFile</code> - but <code>readFile</code> returns <code>IO String</code> instead of <code>String</code>.</p>\n\n<p>Haskell is a very principled language. It has a distinction between <em>pure</em> functions (which give the same outputs every time they are called with the same arguments) and <em>impure</em> code (which may give different results, e.g. if the function depends on some user input). Functions that deal with input/output (IO) always have a return type which is marked with <code>IO</code>. The type system ensures that you cannot use impure <code>IO</code> code inside pure functions - for example, instead of returning a <code>String</code> the function <code>readFile</code> returns an <code>IO String</code>.</p>\n\n<p>This is where the <code>&lt;-</code> notation is important. It allows you to get at the <code>String</code> inside the <code>IO</code> and it ensures that whatever you do with that string, the function you are defining will always be marked with <code>IO</code>. Compare the following -</p>\n\n<pre><code>&gt; let x = readFile \"tmp.txt\"\n&gt; :t x\nx :: IO String\n</code></pre>\n\n<p>which isn't what we want, to this</p>\n\n<pre><code>&gt; y &lt;- readFile \"tmp.txt\"\n&gt; :t y\ny :: String\n</code></pre>\n\n<p>which is what we want. If you ever have a function that returns an <code>IO a</code> and you want to access the <code>a</code> , you need to use <code>&lt;-</code> to assign the result to a name. If your function doesn't return <code>IO a</code> , or if you don't want to get at the <code>a</code> inside the <code>IO</code> then you can just use <code>=</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": false, "score": 18, "last_activity_date": 1424425402, "creation_date": 1424425402, "answer_id": 28625835, "question_id": 28624408, "link": "https://stackoverflow.com/questions/28624408/equal-vs-left-arrow-symbols-in-haskell/28625835#28625835", "title": "Equal (=) Vs left arrow (&lt;-) symbols in haskell", "body": "<pre><code>let x = readFile file1\n</code></pre>\n\n<p>This takes the action \"<code>readFile file1</code>\" and stores <em>the action</em> in <code>x</code>.</p>\n\n<pre><code>x &lt;- readFile file1\n</code></pre>\n\n<p>This <em>executes</em> the action \"<code>readFile file1</code>\" and stores <em>the result</em> of the action in <code>x</code>.</p>\n\n<p>In the first example, <code>x</code> is an unexecuted I/O action object. In the second example, <code>x</code> is the contents of a file on disk.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user2879704"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 25612, "favorite_count": 28, "accepted_answer_id": 28625714, "answer_count": 4, "score": 63, "last_activity_date": 1581183153, "creation_date": 1424420357, "last_edit_date": 1473822101, "question_id": 28624408, "link": "https://stackoverflow.com/questions/28624408/equal-vs-left-arrow-symbols-in-haskell", "title": "Equal (=) Vs left arrow (&lt;-) symbols in haskell", "body": "<p>Working code:</p>\n\n<pre><code>import System\nmain = do\n     [file1, file2] &lt;- getArgs\n     --copy file contents\n     str &lt;- readFile file1\n     writeFile file2 str\n</code></pre>\n\n<p>Crashing code:</p>\n\n<pre><code>import System\nmain = do\n       [file1, file2] = getArgs\n       str = readFile file1\n       writeFile file2 str\n</code></pre>\n\n<p>When I tried, it threw an error as:</p>\n\n<blockquote>\n  <p>a.hs:6:18: parse error on input '='</p>\n</blockquote>\n\n<p>So, how different is <code>&lt;-</code> from <code>=</code>?</p>\n"}, {"tags": ["linux", "haskell", "cabal", "glib", "cairo"], "comments": [{"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 0, "creation_date": 1424415279, "post_id": 28622357, "comment_id": 45548030, "body": "Why are you using <code>runhaskell Setup.hs configure</code> rather than <code>cabal configure</code>? The latter is quite a bit more clever when it comes to setting package db paths; in particular if any sandboxes are involved."}, {"owner": {"reputation": 1313, "user_id": 3419661, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/2954a37ef4adf4d1ae5b9497d00ea855?s=128&d=identicon&r=PG&f=1", "display_name": "hbak", "link": "https://stackoverflow.com/users/3419661/hbak"}, "reply_to_user": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 0, "creation_date": 1424417615, "post_id": 28622357, "comment_id": 45548806, "body": "@kosmikus actually I dont know haskell but I have to use it for installing a driver, I have work with your suggestions, and it&#39;s give me the following output : ` <code>SetupWrapper.hs:12:39:     Module     </code> ` Distribution.Simple.Configure&#39;     does not export     <code>configCompilerEx&#39; </code> ,"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1424457478, "creation_date": 1424457478, "answer_id": 28635919, "question_id": 28622357, "link": "https://stackoverflow.com/questions/28622357/dependenacy-libraries-when-installing-svgcairo/28635919#28635919", "title": "dependenacy libraries when installing svgcairo", "body": "<p><code>cabal install</code> defaults to installing to the local package database. <code>Setup.hs</code> defaults to installing to the global package database (hence will ignore anything installed in the local package database when trying to satisfy dependencies). You can change the behavior of either by passing <code>--local</code> or <code>--global</code> to the appropriate stage -- <code>configure</code> for <code>Setup.hs</code>, and <code>configure</code> or <code>install</code> for <code>cabal</code>.</p>\n"}], "owner": {"reputation": 1313, "user_id": 3419661, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/2954a37ef4adf4d1ae5b9497d00ea855?s=128&d=identicon&r=PG&f=1", "display_name": "hbak", "link": "https://stackoverflow.com/users/3419661/hbak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1424457478, "creation_date": 1424410870, "question_id": 28622357, "link": "https://stackoverflow.com/questions/28622357/dependenacy-libraries-when-installing-svgcairo", "title": "dependenacy libraries when installing svgcairo", "body": "<p>I want to run a Setup.hs file to install svgcairo library, So I run first the command <code>runhaskell Setup.hs configure --prefix=/usr/local</code> but it's give me the following error : <br><br>\n<code>Configuring svgcairo-0.13.0.1...\nsetup: At least the following dependencies are missing:\ncairo &gt;=0.13.0.0 &amp;&amp; &lt;0.14, glib &gt;=0.13.0.0 &amp;&amp; &lt;0.14\n</code> <br>\nThis is confused me, since both cairo and glib are installed with the correct versions ! <br>\nto make it convince, I have run the commands <code>cabal install cairo</code> and <code>cabal install glib</code>, and the following output appear: <br> <br>\n <code>Resolving dependencies...\nAll the requested packages are already installed:\ncairo-0.13.0.6\nUse --reinstall if you want to reinstall anyway.\n</code>\n<br></p>\n\n<p><code>Resolving dependencies...\nAll the requested packages are already installed:\nglib-0.13.0.7\nUse --reinstall if you want to reinstall anyway.\n</code>\n<br>Note : I tried to run the Setup.hs file with <code>runhaskell Setup.hs</code> but its tell me that <code>no command given (try --help)</code></p>\n"}, {"tags": ["haskell", "recursion"], "answers": [{"comments": [{"owner": {"reputation": 111, "user_id": 4586632, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/1ef8a257abcede4daee9fba747dad5cc?s=128&d=identicon&r=PG&f=1", "display_name": "brander", "link": "https://stackoverflow.com/users/4586632/brander"}, "edited": false, "score": 0, "creation_date": 1424564765, "post_id": 28622209, "comment_id": 45603176, "body": "Thanks. That helped.  I used zipWith.. but what I came up with seems suboptimal since there is a second input on nextpascal function created which is not really used..  nextpascal [] _ =[] nextpascal (x:xs) _=1:(zipWith (+) (x:xs) xs) ++ [1] allpascal::[[Integer]] allpascal = ([1,1]):zipWith (nextpascal) allpascal (repeat []) square n = head (drop n (last (take (2*n) allpascal)))"}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": false, "score": 4, "last_activity_date": 1424410104, "last_edit_date": 1495541190, "creation_date": 1424410104, "answer_id": 28622209, "question_id": 28621656, "link": "https://stackoverflow.com/questions/28621656/haskell-recursion-performance-calculating-central-binomial-coefficients/28622209#28622209", "title": "Haskell recursion performance calculating central binomial coefficients", "body": "<p>Notably, there's not caching or memoization in your algorithm.  GHC does not do magic and will not optimize away problems like that.  For a 5x5 grid you're calling <code>grid</code> 139 times, for a 6x6 503, for a 7x7 it's 1847, and for 10x10 it's 97239 times.  By the time you get to 20x20 you're making so many recursive calls that it's just not feasible.  It's the same concept as doing</p>\n\n<pre><code>fib 0 = 1\nfib 1 = 1\nfib n = fib (n - 1) + fib (n - 2)\n</code></pre>\n\n<p>You're going to have an exponential number of calls as you increase <code>n</code>, slowing you down.  Instead, you can approach this problem similarly to how it's solved in the case of the Fibonacci sequence, using lists and memoization:</p>\n\n<pre><code>fibs = 1 : 1 : zipWith (+) fibs (tail fibs)\n</code></pre>\n\n<p>Except here you want it to calculate the binomial coefficients.  As for the implementation of such an algorithm, you'll have to figure that out yourself ;)  I can point you at <a href=\"https://stackoverflow.com/questions/27233133/pascal-triangle-in-haskell/27233941#27233941\">a previous answer of mine</a> that solved the problem for generating Pascal's triangle.</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 4586570, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/958371b97e89ebd98ad39e6e252ecb33?s=128&d=identicon&r=PG&f=1", "display_name": "mortrax", "link": "https://stackoverflow.com/users/4586570/mortrax"}, "is_accepted": false, "score": 1, "last_activity_date": 1424418126, "last_edit_date": 1424418126, "creation_date": 1424415822, "answer_id": 28623351, "question_id": 28621656, "link": "https://stackoverflow.com/questions/28621656/haskell-recursion-performance-calculating-central-binomial-coefficients/28623351#28623351", "title": "Haskell recursion performance calculating central binomial coefficients", "body": "<p>The reason why the execution of this function grinds to a crawl is that it utilizes multiple recursion e.g. the function calls itself twice upon each recursive call. That means that there are repeated computations taking place during the execution of this recursive function, and that the time complexity of the computation increases exponentially as the size of the inputs increase.</p>\n\n<p>The effects of this are more noticeable with larger input values like 20.</p>\n\n<p>Let's look at a call to grid(5, 5).</p>\n\n<p>This expands as follows.</p>\n\n<pre><code>grid(5, 5)\n\ngrid(4, 5) + grid(5, 4)\n\n(grid(3, 5) + grid(4, 4)) + (grid(4, 4) + grid(5, 3))\n\n((grid(2, 5) + grid(3, 4)) + (grid(4, 3) + grid(3, 4))) + \n((grid(3, 4) + grid(4, 3)) + (grid(4, 3) + grid(5, 2)))\n\n...and so on\n</code></pre>\n\n<p>As you can see things get out of hand quickly even with small values of x and y, grid(3, 4) and grid(4, 3) are calculated multiple times. As stated previously, a solution that utilizes zipWith will be much more efficient.</p>\n"}, {"tags": [], "owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "is_accepted": false, "score": 0, "last_activity_date": 1424423222, "creation_date": 1424423222, "answer_id": 28625152, "question_id": 28621656, "link": "https://stackoverflow.com/questions/28621656/haskell-recursion-performance-calculating-central-binomial-coefficients/28625152#28625152", "title": "Haskell recursion performance calculating central binomial coefficients", "body": "<p>As explained in the other answers, the problem with your implementation is that the number of recursive calls is exponential, even though the number of distinct values of <code>grid (x,y)</code> that need to be computed is just quadratic.</p>\n\n<p>The solution to the problem is called <a href=\"https://wiki.haskell.org/Memoization\" rel=\"nofollow\">memoization</a>, which basically means caching values that have been computed before. I definitely recommend you to write your own implementation based on lists, as recommended by @bheklilr.</p>\n\n<p>There is however a quick solution offered by existing libraries such as <a href=\"http://hackage.haskell.org/package/MemoTrie\" rel=\"nofollow\">MemoTrie</a>:</p>\n\n<pre><code>import Data.MemoTrie\n\ngrid :: (Integer, Integer) -&gt; Integer\ngrid = memo grid'\n\ngrid' :: (Integer, Integer) -&gt; Integer\ngrid' (1, x)  = 1 + x\ngrid' (x, 1)  = 1 + x\ngrid' (x, y)  = grid (x - 1, y) + grid (x , y - 1)\n</code></pre>\n\n<p>Notice that now <code>grid</code> is defined as a <em>value</em> - it's not polymorphic and it takes no arguments (although it's value is a function). The call to <code>memo</code> creates a single instance of a <a href=\"https://en.wikipedia.org/wiki/Trie\" rel=\"nofollow\">trie</a> that caches all values and uses <code>grid'</code> to compute values not present in the cache.</p>\n"}, {"comments": [{"owner": {"reputation": 111, "user_id": 4586632, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/1ef8a257abcede4daee9fba747dad5cc?s=128&d=identicon&r=PG&f=1", "display_name": "brander", "link": "https://stackoverflow.com/users/4586632/brander"}, "edited": false, "score": 0, "creation_date": 1424730296, "post_id": 28632614, "comment_id": 45662161, "body": "I had not seen the iterate function before.  I&#39;ll be using that in the future for sure.  Thanks."}], "tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 0, "last_activity_date": 1424446370, "creation_date": 1424446370, "answer_id": 28632614, "question_id": 28621656, "link": "https://stackoverflow.com/questions/28621656/haskell-recursion-performance-calculating-central-binomial-coefficients/28632614#28632614", "title": "Haskell recursion performance calculating central binomial coefficients", "body": "<p>Alternative to memoization is generating rows iteratively, reducing the number of computations.  </p>\n\n<pre><code>central :: [Integer] -&gt; [Integer]\ncentral x = zipWith (+) x (0:central x)\n</code></pre>\n\n<p>For example, to generate the next row from previous</p>\n\n<pre><code>&gt; central [1,2,3]\n[1,3,6]\n</code></pre>\n\n<p>or for your grid function</p>\n\n<pre><code>grid x y = (iterate central [1..]) !! x !! y\n</code></pre>\n\n<p>and for zero based index </p>\n\n<pre><code>&gt; grid 2 4\n35\n</code></pre>\n"}], "owner": {"reputation": 111, "user_id": 4586632, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/1ef8a257abcede4daee9fba747dad5cc?s=128&d=identicon&r=PG&f=1", "display_name": "brander", "link": "https://stackoverflow.com/users/4586632/brander"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 403, "favorite_count": 0, "answer_count": 4, "score": 1, "last_activity_date": 1424446370, "creation_date": 1424406689, "last_edit_date": 1424410263, "question_id": 28621656, "link": "https://stackoverflow.com/questions/28621656/haskell-recursion-performance-calculating-central-binomial-coefficients", "title": "Haskell recursion performance calculating central binomial coefficients", "body": "<p>I am new to Haskell and learning how to properly use recursion.</p>\n\n<p>The following function (which uses a formula to calculate <a href=\"http://mathworld.wolfram.com/CentralBinomialCoefficient.html\" rel=\"nofollow\">central binomial coefficients</a>) is extremely slow; for instance, <code>grid (20,20)</code> crashes my laptop. Can you help me understand why?  </p>\n\n<pre><code>grid::(Integer,Integer)-&gt;Integer\n\ngrid (1, x)  = 1 + x\n\ngrid (x, 1)  = 1 + x\n\ngrid (x, y)  = grid ((x-1),y) + grid ((x),(y-1))\n</code></pre>\n"}, {"tags": ["haskell", "ubuntu", "cabal", "supercollider"], "answers": [{"comments": [{"owner": {"reputation": 53, "user_id": 4050505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78afd09c6888587065ef88c6f6fce4b2?s=128&d=identicon&r=PG&f=1", "display_name": "RockMan", "link": "https://stackoverflow.com/users/4050505/rockman"}, "edited": false, "score": 0, "creation_date": 1424408545, "post_id": 28621869, "comment_id": 45545923, "body": "That&#39;s strange, considering I only installed GHC the other day (last week). Is there a way I can make sure this doesn&#39;t happen if I start with a clean slate?"}, {"owner": {"reputation": 53, "user_id": 4050505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78afd09c6888587065ef88c6f6fce4b2?s=128&d=identicon&r=PG&f=1", "display_name": "RockMan", "link": "https://stackoverflow.com/users/4050505/rockman"}, "edited": false, "score": 0, "creation_date": 1424409308, "post_id": 28621869, "comment_id": 45546142, "body": "Bummer, I&#39;m on 7.4.1. Luckily, I&#39;m still pretty new to the language, so I haven&#39;t gotten &#39;settled&#39; yet. I&#39;ll try to reinstall and report back. Thanks for you help!"}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "reply_to_user": {"reputation": 53, "user_id": 4050505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78afd09c6888587065ef88c6f6fce4b2?s=128&d=identicon&r=PG&f=1", "display_name": "RockMan", "link": "https://stackoverflow.com/users/4050505/rockman"}, "edited": false, "score": 0, "creation_date": 1424409483, "post_id": 28621869, "comment_id": 45546181, "body": "@RockMan Ubuntu tries to give you &quot;stable&quot; versions of programs. This does not work well with Haskell where many (not all!) developers only cater to the latest versions of GHC and other libraries. If you want to try out new versions of stuff, you might have better luck installing GHC directly from <code>haskell.org</code>."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "reply_to_user": {"reputation": 53, "user_id": 4050505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78afd09c6888587065ef88c6f6fce4b2?s=128&d=identicon&r=PG&f=1", "display_name": "RockMan", "link": "https://stackoverflow.com/users/4050505/rockman"}, "edited": false, "score": 0, "creation_date": 1424409718, "post_id": 28621869, "comment_id": 45546240, "body": "BTW it&#39;s pretty hotly debated in the Haskell community what actually <i>is</i> the best way to install and use GHC. It depends a lot on how much you want to be able to use the newest packages, and how much you want to avoid trouble when installing stuff."}, {"owner": {"reputation": 53, "user_id": 4050505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78afd09c6888587065ef88c6f6fce4b2?s=128&d=identicon&r=PG&f=1", "display_name": "RockMan", "link": "https://stackoverflow.com/users/4050505/rockman"}, "edited": false, "score": 0, "creation_date": 1424465147, "post_id": 28621869, "comment_id": 45575321, "body": "Getting a newer GHC fixed it! Thanks for your help!"}], "tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": true, "score": 0, "last_activity_date": 1424408150, "creation_date": 1424408150, "answer_id": 28621869, "question_id": 28621620, "link": "https://stackoverflow.com/questions/28621620/cannot-cabal-install-hs3-for-haskell-supercollider/28621869#28621869", "title": "Cannot cabal install hs3 (for haskell-supercollider)", "body": "<p>You appear to have reached \"Cabal Hell\".</p>\n\n<p>It looks to me like <code>hsc3</code> for versions later than 0.13 depends on GHC being at least version 7.6 (the version which added the <code>lookupEnv</code> function), while Ubuntu 12.0.4 provides 7.4.  This shows up as a compilation error because <code>hsc3</code> has a badly set version bound on the <code>base</code> package.</p>\n\n<p>You might try either of:</p>\n\n<ul>\n<li>Installing a later version of GHC. It's currently at 7.8 with 7.10 expected out next month.</li>\n<li>Using the older <code>haskore-supercollider</code> version 0.2, which uses <code>hsc3</code> 0.13. (Alas, when I try this with <code>--dry-run</code>, cabal fails to find an installation plan, but perhaps it works better if you <em>actually</em> have GHC 7.4.)</li>\n</ul>\n"}], "owner": {"reputation": 53, "user_id": 4050505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78afd09c6888587065ef88c6f6fce4b2?s=128&d=identicon&r=PG&f=1", "display_name": "RockMan", "link": "https://stackoverflow.com/users/4050505/rockman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 28621869, "answer_count": 1, "score": 2, "last_activity_date": 1424408150, "creation_date": 1424406443, "question_id": 28621620, "link": "https://stackoverflow.com/questions/28621620/cannot-cabal-install-hs3-for-haskell-supercollider", "title": "Cannot cabal install hs3 (for haskell-supercollider)", "body": "<p>(Ubuntu 12.04)</p>\n\n<p>Hello!\nI'm trying to get hs3 installed to my haskell platform so that I can use the <strong>haskore-supercollider package</strong> (it's a required dependency). However, when I attempt <strong>cabal install</strong>, it crashes on the some files I believe to be related to hosc. Here's a text readout of the error:</p>\n\n<p>Sound/SC3/UGen/Help.hs:26:46: Not in scope: `lookupEnv'\ncabal: Error: some packages failed to install:\nhsc3-0.15 failed during the building phase. The exception was:\nExitFailure 1</p>\n\n<p>I've attempted a number of things including updating cabal, reinstalling hosc, and throwing some flags on the install, or getting the install from a different source (slavepianos.org). Still though, I keep getting the same error. Here's an image of the error for reference:</p>\n\n<p><a href=\"http://i.stack.imgur.com/dGEKx.png\" rel=\"nofollow\">http://i.stack.imgur.com/dGEKx.png</a></p>\n\n<p>Thanks for your help!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 1, "creation_date": 1424404010, "post_id": 28621084, "comment_id": 45544840, "body": "I don&#39;t see any such complaint from HLint with <code>hlint-1.9.16</code>. I think those first two are fine and I&#39;ve also seen <code>import Prelude ()</code> suggested. I&#39;m more skeptical about a global pragma because it means the source file doesn&#39;t say clearly what it imports."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1424405713, "post_id": 28621084, "comment_id": 45545249, "body": "Voting to close as &quot;opinion-based&quot;: &quot;best way&quot; is ambiguous and too open to interpretation to encourage helpful answers. It is generally considered good form to ask for &quot;a way&quot; instead; and since you have a way already, then you will need to say what you don&#39;t like about that way."}, {"owner": {"reputation": 4185, "user_id": 15467, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a89c04ada36efa853c7f5be0a96b6dd9?s=128&d=identicon&r=PG", "display_name": "ja.", "link": "https://stackoverflow.com/users/15467/ja"}, "edited": false, "score": 1, "creation_date": 1424434645, "post_id": 28621084, "comment_id": 45557832, "body": "Also, be aware that there are, coming very soon, some major changes in GHC&#39;s Prelude; but it&#39;s controversial.  GHC 7.10, whose release is imminent (they&#39;re on RC2), was slated to change from a <code>List</code> based Prelude, to a more generalized Prelude, and the implementors apparently thought they had buy-in from the Haskell community, but now that change is being reconsidered. <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Prelude710\" rel=\"nofollow noreferrer\">https://ghc.haskell.org/trac/ghc/wiki/Prelude710</a>"}, {"owner": {"reputation": 4318, "user_id": 1382925, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6831bb8d29306532c9c511d144bdf4e2?s=128&d=identicon&r=PG", "display_name": "Profpatsch", "link": "https://stackoverflow.com/users/1382925/profpatsch"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1424438248, "post_id": 28621084, "comment_id": 45559945, "body": "@DanielWagner I should have asked about the pros and cons, will change my question accordingly."}], "answers": [{"tags": [], "owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "is_accepted": false, "score": 0, "last_activity_date": 1457748982, "creation_date": 1457748982, "answer_id": 35952963, "question_id": 28621084, "link": "https://stackoverflow.com/questions/28621084/what-are-the-pros-and-cons-about-the-ways-to-import-an-alternative-prelude/35952963#35952963", "title": "What are the pros and cons about the ways to import an alternative Prelude?", "body": "<p>If you actually want to import a distinct prelude, then not importing the standard prelude is correct, and hence</p>\n\n<pre><code>{-# LANGUAGE NoImplicitPrelude #-}\nimport MyPrelude\n</code></pre>\n\n<p>is the standard way.</p>\n"}], "owner": {"reputation": 4318, "user_id": 1382925, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6831bb8d29306532c9c511d144bdf4e2?s=128&d=identicon&r=PG", "display_name": "Profpatsch", "link": "https://stackoverflow.com/users/1382925/profpatsch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 209, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1457748982, "creation_date": 1424402051, "last_edit_date": 1424438348, "question_id": 28621084, "link": "https://stackoverflow.com/questions/28621084/what-are-the-pros-and-cons-about-the-ways-to-import-an-alternative-prelude", "title": "What are the pros and cons about the ways to import an alternative Prelude?", "body": "<p>There are quite a few alternatives that (subjectively) improve on the standard Haskell Prelude. When developing applications it makes sense to use them, but how to best tell your compiler that?</p>\n\n<p>My ideas:</p>\n\n<pre><code>import qualified Prelude\nimport MyPrelude\n</code></pre>\n\n<p>But then HLint complains that importing Prelude qualified is redundant.</p>\n\n<pre><code>{-# LANGUAGE NoImplicitPrelude #-}\nimport MyPrelude\n</code></pre>\n\n<p>This seems to work but is rather verbose.</p>\n\n<pre><code>Some kind of global LANGUAGE pragma in the cabal file\n</code></pre>\n\n<p>Are there other ways? Is there a generally agreed on standard?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 1, "creation_date": 1424398435, "post_id": 28620587, "comment_id": 45543560, "body": "Surely you mean <code>unwords</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 4, "creation_date": 1424398492, "post_id": 28620587, "comment_id": 45543580, "body": "@&#216;rjanJohansen, yes, indeed, or possibly <code>intercalate</code>."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 5, "last_activity_date": 1424398331, "creation_date": 1424398331, "answer_id": 28620587, "question_id": 28620531, "link": "https://stackoverflow.com/questions/28620531/haskell-how-do-i-strip-trailing-spaces/28620587#28620587", "title": "Haskell - how do I strip trailing spaces", "body": "<p>You probably want to use <code>Data.Text.unwords</code> instead of all that. Or, if you're using <code>String</code> instead of <code>Text</code>, <code>Data.List.unwords</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 876, "user_id": 4537511, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbb4bbc2836b3dcb6564ce5f4b3f4f2c?s=128&d=identicon&r=PG", "display_name": "Adam Sosnowski", "link": "https://stackoverflow.com/users/4537511/adam-sosnowski"}, "is_accepted": false, "score": 0, "last_activity_date": 1424399569, "creation_date": 1424399569, "answer_id": 28620749, "question_id": 28620531, "link": "https://stackoverflow.com/questions/28620531/haskell-how-do-i-strip-trailing-spaces/28620749#28620749", "title": "Haskell - how do I strip trailing spaces", "body": "<p>Stripping trailing space makes sense if one processes given input strings.  If one produces strings, its better just not to append the space in the first place.  Especially that given the nature of Haskell lists, removing element from the end equals rebuilding the list.</p>\n\n<p>Here's one way to achieve desired effect:</p>\n\n<pre><code>ar2str :: Show a =&gt; String -&gt; [a] -&gt; String\nar2str _ [x] = show x\nar2str sep (x:x':xs) = show x ++ sep ++ ar2str sep (x':xs)\n</code></pre>\n"}], "owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 0, "accepted_answer_id": 28620587, "answer_count": 2, "score": 1, "last_activity_date": 1424399569, "creation_date": 1424397883, "last_edit_date": 1424398322, "question_id": 28620531, "link": "https://stackoverflow.com/questions/28620531/haskell-how-do-i-strip-trailing-spaces", "title": "Haskell - how do I strip trailing spaces", "body": "<p>I want to convert [1,2,3] to \"1 2 3\". at the moment I get \"1 2 3 \".\nI import strip function using</p>\n\n<pre><code>import Data.Text (strip)\n</code></pre>\n\n<p>My code look like this:</p>\n\n<pre><code>ar2str ar = (concatMap (\\x -&gt; (show x)++\" \" ) ar)\n</code></pre>\n\n<p>How do I modify ar2str so that it works with strip?</p>\n\n<h2>Found it</h2>\n\n<p><a href=\"http://rosettacode.org/wiki/Strip_whitespace_from_a_string/Top_and_tail#Haskell\" rel=\"nofollow\">http://rosettacode.org/wiki/Strip_whitespace_from_a_string/Top_and_tail#Haskell</a></p>\n\n<p>Rosetta Code to the rescue :-)</p>\n"}, {"tags": ["haskell", "c2hs"], "comments": [{"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1424425985, "post_id": 28618137, "comment_id": 45552839, "body": "As I understand it, compilation to C is no longer the <i>default</i>, but it still <i>works</i> &amp;mdash; to allow cross-compiling GHC to other platforms. (It turns off all optimisations though.)"}], "answers": [{"comments": [{"owner": {"reputation": 965, "user_id": 229255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/588fe10267b620e1c0d0d188a8db2621?s=128&d=identicon&r=PG", "display_name": "Ian Ross", "link": "https://stackoverflow.com/users/229255/ian-ross"}, "edited": false, "score": 0, "creation_date": 1429470179, "post_id": 28621930, "comment_id": 47601981, "body": "Just to confirm, C2HS doesn&#39;t provide any special support for this case."}], "tags": [], "owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "is_accepted": true, "score": 2, "last_activity_date": 1424408523, "creation_date": 1424408523, "answer_id": 28621930, "question_id": 28618137, "link": "https://stackoverflow.com/questions/28618137/how-to-declare-a-callback-to-haskell-land/28621930#28621930", "title": "how to declare a callback to Haskell land", "body": "<p>I don't know whether c2hs has any special support for this, but it sounds like what you want is a 'foreign import \"wrapper\"'. See under \"Dynamic wrapper\" in the Haskell 2010 report <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch8.html#x15-1610008.5\" rel=\"nofollow\">here</a>.</p>\n\n<p>Specifically, if you have</p>\n\n<pre><code>foreign import ccall \"c_name\" c_function_that_takes_a_callback ::\n    FunPtr (Ptr Foo -&gt; IO Int) -&gt; IO () -- or whatever the whole type is\n</code></pre>\n\n<p>then you want</p>\n\n<pre><code>foreign import ccall \"wrapper\" makeFooWrapper ::\n    (Ptr Foo -&gt; IO Int) -&gt; IO (FunPtr (PtrFoo -&gt; IO Int))\n</code></pre>\n\n<p>Then you can implement your callback in Haskell as a function <code>Ptr Foo -&gt; IO Int</code>, pass that to <code>makeFooWrapper</code> and then pass the result to <code>c_function_that_takes_a_callback</code>.</p>\n"}], "owner": {"reputation": 2501, "user_id": 2868481, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/d32920192c6bebcffb83fffd557b9553?s=128&d=identicon&r=PG&f=1", "display_name": "d8d0d65b3f7cf42", "link": "https://stackoverflow.com/users/2868481/d8d0d65b3f7cf42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 340, "favorite_count": 0, "accepted_answer_id": 28621930, "answer_count": 1, "score": 2, "last_activity_date": 1424408523, "creation_date": 1424384373, "last_edit_date": 1424385025, "question_id": 28618137, "link": "https://stackoverflow.com/questions/28618137/how-to-declare-a-callback-to-haskell-land", "title": "how to declare a callback to Haskell land", "body": "<p>I am interfacing to a C library, and there's a function\nthat has a callback argument of type <code>(int (*fun) (void *))</code>.</p>\n\n<p>How would I handle this with <code>c2hs</code>? I don't see callbacks mentioned in\n<a href=\"https://github.com/haskell/c2hs/wiki/Implementation-of-Haskell-Binding-Modules\" rel=\"nofollow\">https://github.com/haskell/c2hs/wiki/Implementation-of-Haskell-Binding-Modules</a> or <a href=\"http://www.cse.unsw.edu.au/~chak/papers/Cha99b.html\" rel=\"nofollow\">http://www.cse.unsw.edu.au/~chak/papers/Cha99b.html</a> .</p>\n\n<p>In my actual application, the callback does not do any computation - it just needs to check whether some flag was set meanwhile, and I want to set it from a Haskell thread. (So the obvious work-around is to declare the callback, and the flag, in C land, and have a Haskell function just set the flag.)</p>\n\n<p>(Edit) I also checked <a href=\"https://wiki.haskell.org/Calling_Haskell_from_C\" rel=\"nofollow\">https://wiki.haskell.org/Calling_Haskell_from_C</a> but rejected it because of \"ghc -c ... will create Safe_stub.c ...\" and I was sure that compilation to C was long gone. But indeed I get a stub.h (do I need it?) and the object file. </p>\n"}, {"tags": ["haskell", "monads", "predicate"], "comments": [{"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 5, "creation_date": 1424372722, "post_id": 28614431, "comment_id": 45532663, "body": "See <a href=\"https://hackage.haskell.org/package/monad-loops-0.3.0.2/docs/Control-Monad-Loops.html\" rel=\"nofollow noreferrer\">Control.Monad.Loops</a> which contains a lot of useful monadic functions."}], "answers": [{"comments": [{"owner": {"reputation": 4318, "user_id": 1382925, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6831bb8d29306532c9c511d144bdf4e2?s=128&d=identicon&r=PG", "display_name": "Profpatsch", "link": "https://stackoverflow.com/users/1382925/profpatsch"}, "edited": false, "score": 0, "creation_date": 1424374613, "post_id": 28614737, "comment_id": 45533715, "body": "Thanks! If you mention monad-loops this is a perfect answer."}], "tags": [], "owner": {"reputation": 44721, "user_id": 546084, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/wMoWk.jpg?s=128&g=1", "display_name": "Chris Taylor", "link": "https://stackoverflow.com/users/546084/chris-taylor"}, "is_accepted": true, "score": 4, "last_activity_date": 1424372881, "last_edit_date": 1424372881, "creation_date": 1424372515, "answer_id": 28614737, "question_id": 28614431, "link": "https://stackoverflow.com/questions/28614431/looping-over-a-monadic-predicate/28614737#28614737", "title": "Looping over a monadic predicate", "body": "<p>You can define a \"monadic until\" function yourself, for example</p>\n\n<pre><code>untilM :: Monad m =&gt; (a -&gt; m Bool) -&gt; (a -&gt; m a) -&gt; a -&gt; m a\nuntilM p f = go\n  where\n    go x = do r &lt;- p x\n              if r\n                then return x\n                else do a &lt;- f x\n                        go a\n</code></pre>\n\n<p>or perhaps, if your predicate doesn't need an argument,</p>\n\n<pre><code>untilM :: Monad m =&gt; m Bool -&gt; (a -&gt; m a) -&gt; a -&gt; m a\nuntilM p f = go\n  where\n    go x = do r &lt;- p\n              if r\n                then return x\n                else do a &lt;- f x\n                        go a\n</code></pre>\n\n<p>or even, you don't want any arguments at all,</p>\n\n<pre><code>untilM :: Monad m =&gt; m Bool -&gt; m a -&gt; m ()\nuntilM p f = do r &lt;- p\n                if r\n                  then return ()\n                  else do f\n                          untilM p f\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4318, "user_id": 1382925, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6831bb8d29306532c9c511d144bdf4e2?s=128&d=identicon&r=PG", "display_name": "Profpatsch", "link": "https://stackoverflow.com/users/1382925/profpatsch"}, "edited": false, "score": 0, "creation_date": 1424389500, "post_id": 28617769, "comment_id": 45541272, "body": "Thanks for the great strategy! Actually <code>whileM</code> was what I needed, but I\u2019ll keep those things in mind when I next refactor."}], "tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 3, "last_activity_date": 1424383056, "creation_date": 1424383056, "answer_id": 28617769, "question_id": 28614431, "link": "https://stackoverflow.com/questions/28614431/looping-over-a-monadic-predicate/28617769#28617769", "title": "Looping over a monadic predicate", "body": "<p>Let's refactor your code until we arrive at such a combinator.</p>\n\n<pre><code>let readH :: IO [Either String Task] -&gt; IO [Either String Task]\n    readH l = do eof &lt;- hIsEOF stdout\n                 if eof\n                   then l\n                   else do line &lt;- hGetLine stdout\n                           l' &lt;- l\n                           readH.return $ (eitherDecodeStrict' line) : l'\nout &lt;- readH $ return []\n</code></pre>\n\n<p>First I want to point out the superfluous <code>return</code>s. In this code you never call <code>readH</code> without an accompanying <code>return</code>. The argument to <code>readH</code> can actually be pure by simply removing the unnecessary returns. Notice that we had to add <code>return l</code> on the <code>then</code> branch, and no longer have to \"perform\" <code>l' &lt;- l</code> on the else branch.</p>\n\n<pre><code>let readH :: [Either String Task] -&gt; IO [Either String Task]\n    readH l = do eof &lt;- hIsEOF stdout\n                 if eof\n                   then return l\n                   else do line &lt;- hGetLine stdout\n                           readH $ (eitherDecodeStrict' line) : l\nout &lt;- readH []\n</code></pre>\n\n<p>Okay, now I'm going to rename a few things for clarity and slightly reformat.</p>\n\n<pre><code>let -- how to check the stop condition\n    condition :: IO Bool\n    condition = hIsEOF stdout\nlet -- what IO to do at each iteration\n    takeOneStep :: IO ByteString\n    takeOneStep = hGetLine stdout\nlet -- what pure work to do at each iteration\n    pureTransform :: ByteString -&gt; Either String Task\n    pureTransform = eitherDecodeStrict'\n\nlet readH :: [Either String Task] -&gt; IO [Either String Task]\n    readH theRest = do\n      isDone &lt;- condition\n      if isDone\n        then return theRest\n        else do\n          raw &lt;- takeOneStep\n          readH (pureTransform raw : theRest)\n\nout &lt;- readH []\n</code></pre>\n\n<p>Make sure you understand how this version of the code is the same as the last version; it just has a few expressions renamed and factored out.</p>\n\n<p><code>pureTransform</code> is a bit of a red herring here. We can bundle it with <code>takeOneStep</code> instead.</p>\n\n<pre><code>let -- how to check the stop condition\n    condition :: IO Bool\n    condition = hIsEOF stdout\nlet -- what IO to do at each iteration\n    takeOneStep :: IO (Eiter String Task)\n    takeOneStep = do\n      line &lt;- hGetLine stdout\n      return (eitherDecodeStrict' line)\n\nlet readH :: [Either String Task] -&gt; IO [Either String Task]\n    readH theRest = do\n      isDone &lt;- condition\n      if isDone\n        then return theRest\n        else do\n          thisStep &lt;- takeOneStep\n          readH (thisStep : theRest)\n\nout &lt;- readH []\n</code></pre>\n\n<p>Re-read the body of <code>readH</code> at this point. Notice that none of it is specific to this particular task anymore. It now describes a general sort of looping over <code>takeOneStep</code> until <code>condition</code> holds. In fact, it had that generic structure the whole time! It's just that the generic structure can be seen now that we've renamed the task-specific bits. By making <code>takeOneStep</code> and <code>condition</code> arguments of the function, we arrive at the desired combinator.</p>\n\n<pre><code>untilIO :: IO Bool -&gt; IO (Either String Task) -&gt; [Either String Task] -&gt; IO [Either String Task]\nuntilIO condition takeOneStep theRest = do\n  isDone &lt;- condition\n  if isDone\n    then return theRest\n    else do\n      thisStep &lt;- takeOneStep\n      untilIO (thisStep : theRest)\n</code></pre>\n\n<p>Notice that this combinator, as implemented, doesn't have to be constrained to <code>Either String Task</code>; it can work for any type <code>a</code> instead of <code>Either String Task</code>.</p>\n\n<pre><code>untilIO :: IO Bool -&gt; IO a -&gt; [a] -&gt; IO [a]\n</code></pre>\n\n<p>Notice that this combinator, as implemented, doesn't have to even be constrained to <code>IO</code>. It can work for any Monad <code>m</code> instead of <code>IO</code>.</p>\n\n<pre><code>untilM :: Monad m =&gt; m Bool -&gt; m a -&gt; [a] -&gt; m [a]\n</code></pre>\n\n<p>The moral of the story is this: by figuring how to write \"looping over a monadic predicate\" via explicit recursion for your particular use case, you have already written the general combinator! It's right there in the structure of your code, waiting to be discovered.</p>\n\n<p>There are a couple ways this could be cleaned up further, such as removing the <code>[]</code> argument and building up the list in order (currently the list comes out reversed, you'll notice), but those are beyond the point I'm trying to make right now, and so are left as exercises to the reader. Assuming you've done both of those things, you end up with</p>\n\n<pre><code>untilM :: m Bool -&gt; m a -&gt; m [a]\n</code></pre>\n\n<p>Which I would use in your example like so:</p>\n\n<pre><code>(_, (Just stdout), _, _) &lt;- createProcess (proc \"task\" (args fl)){ std_out = CreatePipe }\nout &lt;- untilM (hIsEof stdout) $ do\n  line &lt;- hGetLine stdout\n  return (eitherDecodeStrict' line)\n</code></pre>\n\n<p>Looks a lot like an imperative-style \"until\" loop!</p>\n\n<p>If you swap the argument order, then you end up with something nearly equivalent to <code>Control.Monad.Loops.untilM</code>. Note that unlike our solution here, <code>Control.Monad.Loops.untilM</code> (annoyingly!) always performs the action before checking the condition, so it's not quite safe for use in this case if you might be dealing with empty files. They apparently expect you to use <code>untilM</code> infix, which makes it look like a <code>do-while</code>, hence the flipped arguments and \"body then condition\" nonsense.</p>\n\n<pre><code>(do ...\n    ...\n) `untilM` someCondition\n</code></pre>\n"}], "owner": {"reputation": 4318, "user_id": 1382925, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6831bb8d29306532c9c511d144bdf4e2?s=128&d=identicon&r=PG", "display_name": "Profpatsch", "link": "https://stackoverflow.com/users/1382925/profpatsch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 328, "favorite_count": 1, "accepted_answer_id": 28614737, "answer_count": 2, "score": 3, "last_activity_date": 1424383056, "creation_date": 1424371483, "question_id": 28614431, "link": "https://stackoverflow.com/questions/28614431/looping-over-a-monadic-predicate", "title": "Looping over a monadic predicate", "body": "<p>For looping over a function until a predicate holds there is</p>\n\n<pre><code>until :: (a -&gt; Bool) -&gt; (a -&gt; a) -&gt; a -&gt; a\n</code></pre>\n\n<p>Yet, this falls short once the predicate has the form</p>\n\n<pre><code>Monad m =&gt; (a -&gt; m b)\n</code></pre>\n\n<p>The only way I found out of this is via explicit recursion, e.g. when reading from a handle until <code>EOF</code> is reached:</p>\n\n<pre><code>  (_, (Just stdout), _, _) &lt;- createProcess (proc \"task\" (args fl)){ std_out = CreatePipe }\n  let readH :: IO [Either String Task] -&gt; IO [Either String Task]\n      readH l = do eof &lt;- hIsEOF stdout\n                   if eof\n                     then l\n                     else do line &lt;- hGetLine stdout\n                             l' &lt;- l\n                             readH.return $ (eitherDecodeStrict' line) : l'\n  out &lt;- readH $ return []\n</code></pre>\n\n<p>Is there a higher order function that simplifies this? Maybe together with <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Prelude.html#v:sequence\" rel=\"nofollow\">sequence</a>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1424369288, "post_id": 28613651, "comment_id": 45530758, "body": "Another thing is whether it&#39;s really worthwile to provide such elaborate signature, where the user can simply convert to the preferrable way, just like the instance does. I think there&#39;s no reason why that boilerplate shouldn&#39;t be avoided/taken off  the user."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1424375024, "post_id": 28613651, "comment_id": 45533958, "body": "You could use the <code>MonadReader</code> constraint, for which there already exists an instance for functions.  If you write <code>f = do { a &lt;- ask; return $ 2 * a + 3 * a }</code>, then you can use it as a function as <code>f 1 == 5</code> or in any <code>Reader</code> function where <code>f :: MonadReader Int m =&gt; m Int</code>.  This can specialize to <code>Int -&gt; Int</code> or <code>Reader Int Int</code>."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424375343, "post_id": 28613651, "comment_id": 45534136, "body": "@bheklilr <i>for which there already exists an instance for functions.</i> THIS. This was what I was missing the whole time! Write this as an answer so I can upvote it! :) (and yes <code>Callback</code> is just <code>MyState -&gt; MyState</code>, and <code>MyState ~ Int</code>)"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424375386, "post_id": 28613651, "comment_id": 45534161, "body": "Good to know!  Glad it was a simple solution.  Turns out you were definitely reinventing the wheel."}], "answers": [{"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 10, "last_activity_date": 1424378898, "creation_date": 1424378898, "answer_id": 28616581, "question_id": 28613651, "link": "https://stackoverflow.com/questions/28613651/is-there-any-standard-way-to-utilize-the-equivalence-of-reader-and-a-normal-fu/28616581#28616581", "title": "Is there any &quot;standard&quot; way to utilize the equivalence of Reader and a normal function?", "body": "<p>You can simply use the fact that the function monad <code>(-&gt;) r</code> already has an instance for <code>MonadReader r</code> defined in <code>Control.Monad.Reader</code>.  You can write functions using just the <code>MonadReader</code> constraint and use them either as normal functions or in other <code>ReaderT</code> monads:</p>\n\n<pre><code>f :: MonadReader Int m =&gt; m Int\nf = do\n    a &lt;- ask\n    return $ 2 * a + 3 * a\n\nnormally :: Int\nnormally = f 1\n-- normally == 5\n\nreaderly :: Reader Int Int\nreaderly = do\n    result &lt;- f\n    return $ 2 * result\n\n&gt; runReader f 1\n5\n&gt; runReader readerly 1\n10\n</code></pre>\n"}], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 28616581, "answer_count": 1, "score": 7, "last_activity_date": 1424378898, "creation_date": 1424369001, "question_id": 28613651, "link": "https://stackoverflow.com/questions/28613651/is-there-any-standard-way-to-utilize-the-equivalence-of-reader-and-a-normal-fu", "title": "Is there any &quot;standard&quot; way to utilize the equivalence of Reader and a normal function?", "body": "<p>I am writing a framework, where the main function asks user about the function of type <code>a -&gt; [b]</code>.</p>\n\n<p>However, because that function can be quite complex, its implementation can often look like this:</p>\n\n<pre><code>fn a = extractPartOfAAndConvert a ++ extractAnotherPartofAAndConvert a\n</code></pre>\n\n<p>That's why I figured using <code>Reader</code> might be a nice, idiomatic idea to fight that. However, at the same time I realize that some people might not want to use a monad.</p>\n\n<p>While experimenting, I've crafted this solution:</p>\n\n<pre><code>class Iso a b where\n    isoFrom :: a -&gt; b\n    isoTo :: b -&gt; a\n\ninstance Iso a a where\n    isoFrom = id\n    isoTo = id\n\ninstance Iso (a -&gt; b) (Reader a b) where\n    isoFrom f = reader f\n    isoTo m = runReader m\n</code></pre>\n\n<p>Which in turn allows me to do:</p>\n\n<pre><code>testCallback :: MyState -&gt; Callback -&gt; MyState\ntestCallback myState cb = cb myState\n\n-- The important signature\ntestCallbackGeneric :: Iso Callback a =&gt; MyState -&gt; a -&gt; MyState\ntestCallbackGeneric myState cb = (isoTo cb) myState\n\ncallbackFunction :: Callback\ncallbackFunction s = s + 10\n\ncallbackMonad :: Reader MyState MyState\ncallbackMonad = do\n    x &lt;- ask\n    return $ x - 10\n\n-----------\n\nlet myStateA = testCallback myState callbackFunction\n-- let myStateB = testCallback myState callbackMonad -- won't work, obviously\nlet myStateC = testCallbackGeneric myState callbackFunction\nlet myStateD = testCallbackGeneric myState callbackMonad\n</code></pre>\n\n<p>However, I feel very much like I'm reinventing the wheel.</p>\n\n<p><strong>Is there a way to express the equivalence of Reader to easily write such generic functions without resorting to creating my own type class?</strong></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3606, "user_id": 3780766, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IYKly.jpg?s=128&g=1", "display_name": "knuhol", "link": "https://stackoverflow.com/users/3780766/knuhol"}, "edited": false, "score": 0, "creation_date": 1424363720, "post_id": 28611709, "comment_id": 45527126, "body": "possible duplicate of <a href=\"http://stackoverflow.com/questions/1918486/convert-list-of-integers-into-one-int-like-concat-in-haskell\">Convert list of Integers into one Int (like concat) in haskell</a>"}, {"owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "reply_to_user": {"reputation": 3606, "user_id": 3780766, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IYKly.jpg?s=128&g=1", "display_name": "knuhol", "link": "https://stackoverflow.com/users/3780766/knuhol"}, "edited": false, "score": 2, "creation_date": 1424363958, "post_id": 28611709, "comment_id": 45527309, "body": "it&#39;s not an obvious duplicate. I was after a string."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 3606, "user_id": 3780766, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IYKly.jpg?s=128&g=1", "display_name": "knuhol", "link": "https://stackoverflow.com/users/3780766/knuhol"}, "edited": false, "score": 2, "creation_date": 1424363973, "post_id": 28611709, "comment_id": 45527316, "body": "@Akarienta Not a duplicate, OP here wants to create a string, as stated explicitly in the question, while in the question you linked the goal was to create a new <code>Int</code> out of individual digits, the solutions are quite different (although both can be implemented with folds)"}, {"owner": {"reputation": 3606, "user_id": 3780766, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IYKly.jpg?s=128&g=1", "display_name": "knuhol", "link": "https://stackoverflow.com/users/3780766/knuhol"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424364163, "post_id": 28611709, "comment_id": 45527426, "body": "@bheklilr Well, so <a href=\"http://stackoverflow.com/questions/4324621/haskell-int-list-to-string\">this one</a> fore example. SO is full of these questions, author hasn&#39;t used searching."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 3606, "user_id": 3780766, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IYKly.jpg?s=128&g=1", "display_name": "knuhol", "link": "https://stackoverflow.com/users/3780766/knuhol"}, "edited": false, "score": 0, "creation_date": 1424364693, "post_id": 28611709, "comment_id": 45527816, "body": "@Akarienta That&#39;s also not the same problem.  I&#39;m not doubting that this question has been asked before on SO, linking to somewhat similar but more complex problems is not going to help someone who is new to the language.  If you can find an actual duplicate then I&#39;ll close it as such with my duphammer abilities, but I wouldn&#39;t consider either of those similar enough to mark this question as a dup."}, {"owner": {"reputation": 3606, "user_id": 3780766, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IYKly.jpg?s=128&g=1", "display_name": "knuhol", "link": "https://stackoverflow.com/users/3780766/knuhol"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424365345, "post_id": 28611709, "comment_id": 45528287, "body": "@bheklilr Programmers have to think about the problems and be able to adapt very similar problem to his own. If he asks and gets the answer directly, he learns nothing and will be a beginner forever."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 3606, "user_id": 3780766, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IYKly.jpg?s=128&g=1", "display_name": "knuhol", "link": "https://stackoverflow.com/users/3780766/knuhol"}, "edited": false, "score": 1, "creation_date": 1424365775, "post_id": 28611709, "comment_id": 45528592, "body": "@Akarienta This is true, but it doesn&#39;t help when someone simply doesn&#39;t know the functions to use yet. This could have been a two word solution of <code>concatMap show</code>, it&#39;s simply learning the API. The actual problem solved here was learning about previously unknown functions in Prelude. It&#39;s not that OP needed to adapt a more complex problem to fit his needs, it&#39;s merely ignorance of an existing solution. Yes, programmers need to learn how to read documentation and follow similar problems, but I&#39;m going to wager that you didn&#39;t know about <code>concatMap</code> when you first started using Haskell."}, {"owner": {"reputation": 3606, "user_id": 3780766, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IYKly.jpg?s=128&g=1", "display_name": "knuhol", "link": "https://stackoverflow.com/users/3780766/knuhol"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1424366607, "post_id": 28611709, "comment_id": 45529164, "body": "@bheklilr Of course, I didn&#39;t. But had been searching and had found the solution. It was few years ago and I suppose that if it was possible then it is still possible today. I don&#39;t like to see somthing like &quot;I don&#39;t seem to be able to find the answer elsewhere&quot; if it is (obviously!) possible and quite easy to find."}], "answers": [{"comments": [{"owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "edited": false, "score": 0, "creation_date": 1424363828, "post_id": 28611752, "comment_id": 45527210, "body": "Thank you very much. This is what I was looking for."}, {"owner": {"reputation": 34889, "user_id": 86604, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/329af917389e6cf8e146c03012f5319a?s=128&d=identicon&r=PG", "display_name": "Ingo", "link": "https://stackoverflow.com/users/86604/ingo"}, "edited": false, "score": 2, "creation_date": 1424364385, "post_id": 28611752, "comment_id": 45527586, "body": "In the future, <code>foldMap show</code> could be the preferred way to say this."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 34889, "user_id": 86604, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/329af917389e6cf8e146c03012f5319a?s=128&d=identicon&r=PG", "display_name": "Ingo", "link": "https://stackoverflow.com/users/86604/ingo"}, "edited": false, "score": 1, "creation_date": 1424365466, "post_id": 28611752, "comment_id": 45528371, "body": "@Ingo We&#39;ll have to see how the FTP goes for the GHC 7.10 release first.  Personally, I&#39;m in favor of the burning bridges proposal, I think integrating Foldable and Traversable into Prelude would be great, but I do understand that it would make the initial learning curve a bit more difficult for Haskell."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1424370655, "post_id": 28611752, "comment_id": 45531526, "body": "It might be a good idea to mention that <code>(&gt;&gt;=) = flip foldMap</code> for the list Monad instance, so one can write <code>[1, 2, 3] &gt;&gt;= show</code>."}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 10, "last_activity_date": 1424380782, "last_edit_date": 1424380782, "creation_date": 1424363699, "answer_id": 28611752, "question_id": 28611709, "link": "https://stackoverflow.com/questions/28611709/haskell-how-to-convert-1-2-3-to-123/28611752#28611752", "title": "Haskell - how to convert [1,2,3] to &quot;123&quot;", "body": "<p>The best way would be to use <code>show</code> and <code>concatMap</code>, which is just a combination of <code>concat</code> and <code>map</code>:</p>\n\n<pre><code>&gt; concatMap show [1, 2, 3]\n\"123\"\n</code></pre>\n\n<p>This also works for numbers with more than one digit:</p>\n\n<pre><code>&gt; concatMap show [10, 20, 30]\n\"102030\"\n</code></pre>\n\n<hr>\n\n<p>Since <code>type String = [Char]</code>, we can just treat this as a list processing problem  The first part is to convert each number to its <code>String</code> representation, which is done simply using <code>show</code>.  Since we want to apply this to a list of numbers, <code>map</code> is the tool of choice.  Finally, we want to join all the string representations (list of <code>Char</code> representations) into a single string (list of <code>Char</code>), so <code>concat</code> is appropriate:</p>\n\n<pre><code>&gt; concat $ map show [1, 2, 3]\n\"123\"\n</code></pre>\n\n<p>Whenever you see <code>concat $ map f some_list</code>, you can always use the pre-defined tool <code>concatMap</code>, since this is precisely its definition:</p>\n\n<pre><code>&gt; concatMap show [1, 2, 3]\n\"123\"\n</code></pre>\n\n<hr>\n\n<p>As pointed out in the comments, you can use <code>foldMap</code> from the <code>Data.Foldable</code> module that generalizes the whole \"map then combine\" functionality.  The <code>Foldable</code> typeclass basically just means that you can use <code>fold</code>s on it, and it also uses <code>Monoid</code>, which basically just means you have a way to combine two elements, such as concatenation for lists or addition for numbers.  Alternatively, you can also use the fact that lists form a <code>Monad</code> and use the <code>&gt;&gt;=</code> operator as</p>\n\n<pre><code>&gt; [1, 2, 3] &gt;&gt;= show\n\"123\"\n</code></pre>\n\n<p>In the end, all of these operations pretty much boil down to applying a function to each element, then combining those results together using some other function.  It's a very general pattern and can be applied in a lot of cases, hence why there's generalizations of it.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1424390020, "post_id": 28618613, "comment_id": 45541423, "body": "Another way that avoids the import: <code>map ( (toEnum::Int-&gt;Char) . (fromEnum &#39;0&#39; +) ) [1,2,3,4]</code>"}], "tags": [], "owner": {"reputation": 1958, "user_id": 3217013, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/8fe4c19ed2edcb4fe6e661a5faed0205?s=128&d=identicon&r=PG&f=1", "display_name": "Emil", "link": "https://stackoverflow.com/users/3217013/emil"}, "is_accepted": false, "score": 1, "last_activity_date": 1424386546, "creation_date": 1424386546, "answer_id": 28618613, "question_id": 28611709, "link": "https://stackoverflow.com/questions/28611709/haskell-how-to-convert-1-2-3-to-123/28618613#28618613", "title": "Haskell - how to convert [1,2,3] to &quot;123&quot;", "body": "<p>Alternatively, you could use </p>\n\n<pre><code>map (chr . (ord '0' +)) [1,2,3,4]\n</code></pre>\n\n<p>if all of your integers are single digits (you would need to import <code>chr</code> and <code>ord</code> from <code>Data.Char</code>).</p>\n\n<p>This works because <code>String</code> is just a type synonym of <code>[Char]</code> in Haskell, so all we are doing is just mapping each <code>Int</code> in your list to the appropriate <code>Char</code>.</p>\n"}], "owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 987, "favorite_count": 0, "accepted_answer_id": 28611752, "answer_count": 2, "score": 0, "last_activity_date": 1424386546, "creation_date": 1424363594, "question_id": 28611709, "link": "https://stackoverflow.com/questions/28611709/haskell-how-to-convert-1-2-3-to-123", "title": "Haskell - how to convert [1,2,3] to &quot;123&quot;", "body": "<p>How do I convert a list of integers [1,2,3] to a string \"123\"</p>\n\n<p>Sorry for asking the obvious, but I don't seem to be able to find the answer elsewhere.</p>\n"}, {"tags": ["haskell", "tree", "nested-lists", "algebraic-data-types"], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1424363372, "last_edit_date": 1424363372, "creation_date": 1424362989, "answer_id": 28611472, "question_id": 28610955, "link": "https://stackoverflow.com/questions/28610955/flatten-a-tree-nested-list-up-to-a-certain-depth/28611472#28611472", "title": "Flatten a tree (nested list) up to a certain depth", "body": "<p>I would write a function that flattens once, then iterate it. Like this:</p>\n\n<pre><code>values (N x) = [N x]\nvalues (L ts) = ts\n\nflattenOnce (L ts) = L (concatMap values ts)\nflattenOnce t = t\n\nflattenN n t = iterate flattenOnce t !! n\n</code></pre>\n\n<p>If you're feeling cryptic, you might also implement <code>flattenOnce</code> as</p>\n\n<pre><code>flattenOnce t = L (concatMap values (values t))\n</code></pre>\n"}], "owner": {"reputation": 15620, "user_id": 596361, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b7219254970581e53d3b2b162f7f50f8?s=128&d=identicon&r=PG", "display_name": "Mirzhan Irkegulov", "link": "https://stackoverflow.com/users/596361/mirzhan-irkegulov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 388, "favorite_count": 0, "accepted_answer_id": 28611472, "answer_count": 1, "score": 4, "last_activity_date": 1424363372, "creation_date": 1424361646, "question_id": 28610955, "link": "https://stackoverflow.com/questions/28610955/flatten-a-tree-nested-list-up-to-a-certain-depth", "title": "Flatten a tree (nested list) up to a certain depth", "body": "<p>I have a recursive algebraic data type to implement Lisp-like nested lists:</p>\n\n<pre><code>data T a = N a | L [T a] deriving (Show, Eq)\n</code></pre>\n\n<p><code>L [N 1, L [N 2, L [N 3, L [N 4], N 5], N 6], N 7]</code> is equivalent to Lisp's <code>(1 (2 (3 (4) 5) 6) 7)</code>. Now I want to partially flatten this nested list, i.e. down to a certain level but no more:</p>\n\n<pre><code>flattenN 0 t -- L [N 1,L [N 2,L [N 3,L [N 4],N 5],N 6],N 7]\nflattenN 1 t -- L [N 1,N 2,L [N 3,L [N 4],N 5],N 6,N 7]\nflattenN 2 t -- L [N 1,N 2,N 3,L [N 4],N 5,N 6,N 7]\nflattenN 3 t -- L [N 1,N 2,N 3,N 4,N 5,N 6,N 7]\n</code></pre>\n\n<p>I implemented this function as a tree recursion, where elements are unpacked from a type constructor, concatenated, then packed back in <code>L</code>:</p>\n\n<pre><code>flattenN :: Int -&gt; T a -&gt; T a\nflattenN 0 x = x\nflattenN n (N x) = N x\nflattenN n (L []) = L []\nflattenN n (L (x:xs)) = flattenN (n-1) x +++ flattenN n (L xs)\n  where N  x +++ N  y = L [N x, N y]\n        N  x +++ L ys = L (N x:ys)\n        L xs +++ N  y = L (xs++[N y])\n        L xs +++ L ys = L (xs++ys)\n</code></pre>\n\n<p>To me this looks a little bit ugly and it should be simpler than that. Do you have any ideas how to implement the partial flattening of a nested list function in a different way? I would be glad to receive any answer, from minimalistic and elegant to clever and convoluted, with any feature that Haskell provides.</p>\n"}, {"tags": ["haskell", "cabal"], "answers": [{"comments": [{"owner": {"reputation": 2501, "user_id": 2868481, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/d32920192c6bebcffb83fffd557b9553?s=128&d=identicon&r=PG&f=1", "display_name": "d8d0d65b3f7cf42", "link": "https://stackoverflow.com/users/2868481/d8d0d65b3f7cf42"}, "edited": false, "score": 1, "creation_date": 1424371172, "post_id": 28611737, "comment_id": 45531832, "body": "&quot;point of sandbox is to ignore&quot; -- I thought the point is that you get local build environments, similar as blocks (in programming languages) allow for local declarations. So the point is locality, but why should that prohibit nesting (accessing something from an outer scope)? Of course if &quot;access&quot; = &quot;change&quot; then it gets messy, and indeed I&#39;m inclined to &quot;sandbox add source&quot; now. -- BTW, not &quot;half dozen&quot;, more like &quot;two dozen&quot;."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1424363662, "creation_date": 1424363662, "answer_id": 28611737, "question_id": 28609349, "link": "https://stackoverflow.com/questions/28609349/how-to-make-cabal-sandbox-aware-of-installed-packages-in-other-locations/28611737#28611737", "title": "how to make cabal sandbox aware of (installed) packages in other locations?", "body": "<p>The whole point of the sandbox is that it ignores your local package database.</p>\n\n<p>If you want to share installations across many sandboxes, you may install to the global database; but then you should be <em>very</em> careful, as fixing the badness of a broken package is much more difficult. Keep it to really core packages that you expect to be widely shared across many, many projects -- not just the half dozen you're stressing out about right now for your job.</p>\n\n<p>Alternately, you may share one sandbox between the builds of many packages; simply set the <code>CABAL_SANDBOX_CONFIG</code> variable to an absolute path pointing to the appropriate <code>cabal.sandbox.config</code> file. This is significantly safer, and much more flexible, as you can choose how widely your installed packages are shared (and in bad cases, simply nuke the sandbox and start over).</p>\n"}, {"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 1, "last_activity_date": 1424364215, "creation_date": 1424364215, "answer_id": 28611947, "question_id": 28609349, "link": "https://stackoverflow.com/questions/28609349/how-to-make-cabal-sandbox-aware-of-installed-packages-in-other-locations/28611947#28611947", "title": "how to make cabal sandbox aware of (installed) packages in other locations?", "body": "<p>Here is something you can try - copy (or symlink) the files from ~/.ghc/{arch-os-ghc-version}/package.conf.d to the sandbox's {arch-os-ghc-version}-packages.conf.d directory.</p>\n\n<p>There is a question about the <code>package.cache</code> file. The following procedure seems to be a safe way to proceed:</p>\n\n<ol>\n<li>Start with an empty sandbox</li>\n<li>Copy the package.conf.d files from ~/.ghc to the sandbox (including package.cache)</li>\n<li>Add packages to the sandbox via <code>cabal install --only-dependencies</code></li>\n</ol>\n\n<p>I don't know if the package.cache file is required or if there is a way to rebuild it.</p>\n\n<p>One disadvantage is that <code>cabal install --only-deps</code> seems to reinstall broken packages in the sandbox even if they are not required by your application. Maybe there is work-around for this.</p>\n"}], "owner": {"reputation": 2501, "user_id": 2868481, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/d32920192c6bebcffb83fffd557b9553?s=128&d=identicon&r=PG&f=1", "display_name": "d8d0d65b3f7cf42", "link": "https://stackoverflow.com/users/2868481/d8d0d65b3f7cf42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 202, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1424364215, "creation_date": 1424357405, "question_id": 28609349, "link": "https://stackoverflow.com/questions/28609349/how-to-make-cabal-sandbox-aware-of-installed-packages-in-other-locations", "title": "how to make cabal sandbox aware of (installed) packages in other locations?", "body": "<p>When I have a sandbox, it seems <code>cabal install</code> ignores packages in <code>$HOME/.ghc/x86_64-linux-7.8.4/package.conf.d</code>. </p>\n\n<p>How can I configure the sandbox such that these packages become visible?\nI am seeing a vague reference to <code>--package-db=db</code> in <a href=\"https://www.haskell.org/cabal/users-guide/installing-packages.html#sandboxes-advanced-usage\" rel=\"nofollow\">https://www.haskell.org/cabal/users-guide/installing-packages.html#sandboxes-advanced-usage</a>\nbut I understand neither how nor when to use it. (with sandbox init? configure? install? none seems to work - none gives any error message either.)</p>\n\n<p>I know about <code>add-source</code> but my question refers to installed packages.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1424364277, "post_id": 28609023, "comment_id": 45527492, "body": "As far as I know, the linked proposal is neither implemented nor planned for GHC; and I can&#39;t think of any other tricks that would let you completely avoid adding a type annotation. <a href=\"https://ghc.haskell.org/trac/ghc/wiki/ExplicitTypeApplication\" rel=\"nofollow noreferrer\">Explicit type application</a>, which I understand is planned (but undermanned) might get you some lighter-weight syntax. But I&#39;m not sure &quot;I couldn&#39;t think of anything&quot; really qualifies as an answer..."}], "answers": [{"tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 1, "last_activity_date": 1424384888, "creation_date": 1424384888, "answer_id": 28618270, "question_id": 28609023, "link": "https://stackoverflow.com/questions/28609023/generic-defaulting-in-haskell/28618270#28618270", "title": "Generic defaulting in Haskell", "body": "<p>Stupid non-answer:</p>\n\n<pre><code>asT :: T -&gt; T\nasT = id\n\nh = g . asT . f\n</code></pre>\n\n<p>Lack of \"defaulting\" is one of the pains of Haskell's flavor of generics. Things get too generic and Haskell doesn't know which instance to pick. The status quo is that \"the programmer needs to explicitly resolve ambiguity.\" Rather than specifying top-level rules for defaulting, you just have to select the appropriate instance on a case-by-case basis. <code>Num</code> defaulting is a hacky exception to this rule.</p>\n\n<p>The proposal you linked has a good example of why choosing defaults isn't trivial when multiple classes are involved.</p>\n\n<pre><code>default A (Int, String, ())\ndefault B (String, Int, ())\n(A t, B t) =&gt; t -- defaults to what?\n</code></pre>\n"}], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "answer_count": 1, "score": 8, "last_activity_date": 1424384888, "creation_date": 1424356540, "question_id": 28609023, "link": "https://stackoverflow.com/questions/28609023/generic-defaulting-in-haskell", "title": "Generic defaulting in Haskell", "body": "<p>Given two functions:</p>\n\n<pre><code>f :: (A a, B b) =&gt; a -&gt; b\ng :: (B b, C c) =&gt; b -&gt; c\n</code></pre>\n\n<p>Is there any way (in GHC) I can make it possible to write:</p>\n\n<pre><code>h x = g (f x)\n</code></pre>\n\n<p>Without having to add a type signature for <code>f x</code>, e.g.</p>\n\n<pre><code>h x = g ((f x) :: T)\n</code></pre>\n\n<p>By having some \"default type\" that <code>f x</code> takes if none is specified?</p>\n\n<p>I suspect I need something like <a href=\"https://ghc.haskell.org/trac/haskell-prime/wiki/Defaulting\">Defaulting in Haskell Prime</a> but has this been implemented in GHC (or in GHC head)?</p>\n"}, {"tags": ["javascript", "haskell", "iteration", "reduce", "fold"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1424350752, "post_id": 28607020, "comment_id": 45518101, "body": "I don&#39;t think <code>foldr</code> function in haskell traverses from right-to-left ?"}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1424350927, "post_id": 28607020, "comment_id": 45518209, "body": "@Sibi You&#39;re right. It&#39;s not possible to traverse a list from right-to-left in Haskell because of the way a list is defined (i.e. <code>data [a] = [] | a : [a]</code>). The <code>foldr</code> function in Haskell only accumulates a result from right-to-left. However, this question really isn&#39;t about Haskell per se."}, {"owner": {"reputation": 245145, "user_id": 1348195, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f6dca2295546af21e1cde8e68f2d49bd?s=128&d=identicon&r=PG", "display_name": "Benjamin Gruenbaum", "link": "https://stackoverflow.com/users/1348195/benjamin-gruenbaum"}, "edited": false, "score": 1, "creation_date": 1424357763, "post_id": 28607020, "comment_id": 45522765, "body": "I have literally never used <code>reduceRight</code> in code. I&#39;ve used <code>reduce</code> at least a thousand times."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1424389794, "post_id": 28607020, "comment_id": 45541357, "body": "Hm, maybe implement some kind of <code>reverse</code> with it?"}, {"owner": {"reputation": 14671, "user_id": 2317490, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ypoen.png?s=128&g=1", "display_name": "dandavis", "link": "https://stackoverflow.com/users/2317490/dandavis"}, "edited": false, "score": 0, "creation_date": 1424976800, "post_id": 28607020, "comment_id": 45782831, "body": "i recently did a code survey of all the cdn.js scripts. it found 144 uses of reduceRight compared to 654 uses of reduce. sadly, i threw away the data (took 2 hours to delete all the scripts on a fast box) or else i would find you specifics, but they should be out there if reduceRight is 1/4th as used..."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "edited": false, "score": 0, "creation_date": 1487420272, "post_id": 28607020, "comment_id": 71783753, "body": "@Aadit I added another use case for nested computations/data structures"}], "answers": [{"tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 4, "last_activity_date": 1424387059, "creation_date": 1424387059, "answer_id": 28618734, "question_id": 28607020, "link": "https://stackoverflow.com/questions/28607020/real-world-examples-of-using-reduceright-in-javascript/28618734#28618734", "title": "Real world examples of using reduceRight in JavaScript", "body": "<p>You are absolutely correct, to the point where I'm not entirely sure this is even a real question. Laziness and fusion are both <em>huge</em> reasons why <code>foldr</code> is preferred in Haskell. Both of these things are absent in JavaScript's arrays, so there is literally no reason to use reduceRight in real world JavaScript. I mean, you could contrive a case where you've constructed an array by pushing things onto the end, and then you want to iterate over them from newest to oldest while accumulating a result. But imo that's very contrived.</p>\n\n<hr>\n\n<p>Just to illustrate the Haskell side of things. Note that in Haskell, a right fold does <em>not</em> actually <em>perform</em> evaluation from right to left. You can <em>think</em> about <em>grouping</em> evaluation from right to left, but due to laziness, that's not what is <em>computed</em>. Consider:</p>\n\n<pre><code>foldr (\\a _ -&gt; Just a) undefined [1..]\n</code></pre>\n\n<p>I've supplied an <code>undefined</code> starting value for the accumulator, and the infinite list of natural numbers to fold over. Oh dear. Yet this matters not one bit. This expression happily evaluates to <code>Just 1</code>.</p>\n\n<p>Conceptually, the grouping works like this:</p>\n\n<pre><code>let step a _ = Just a\nlet foldTheRest = foldr step undefined [2..]\nstep 1 foldTheRest\n</code></pre>\n\n<p>Thinking about the grouping, we \"fold the rest\", then we apply the <code>step</code> function to two arguments: the \"first element of the list\", and \"whatever we got from folding the rest of the list.\" However, since the stepping function doesn't even need it's accumulator argument, that part of the computation is never evaluated. All we needed to evaluate this particular fold was the \"first element of the list.\"</p>\n\n<hr>\n\n<p>To reiterate, JavaScript arrays retain <em>none</em> of the benefits of <code>foldr</code> that Haskell enjoys, so there is literally no reason to use <code>reduceRight</code>. (In contrast, there are sometimes good reasons in Haskell to use a strict left fold.)</p>\n\n<p>n.b. I disagree with your other question where you conclude that \"the native implementation of reduceRight is wrong.\" I agree that it's <em>annoying</em> that they have chosen the argument order that they did, but it's not inherently <em>wrong</em>.</p>\n"}, {"comments": [{"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 0, "creation_date": 1424433089, "post_id": 28618895, "comment_id": 45556956, "body": "Indeed, function composition reads from right-to-left and hence it makes sense to use <code>reduceRight</code> in that case. However, you can just as easily make function composition read from left-to-right and use <code>reduce</code> instead. I guess that it&#39;s just a matter of preference. Personally, if I were to implement the <code>compose</code> function then I would use neither <code>reduce</code> nor <code>reduceRight</code> for performance reasons. I wouldn&#39;t want <a href=\"http://jsperf.com/compose-fold-vs-direct\" rel=\"nofollow noreferrer\">twice the number of function call overheads</a> for a composite function. As you said, there may be better examples. Hence I&#39;ll wait for it."}, {"owner": {"reputation": 4571, "user_id": 2535541, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/2c8f0b38e4fb35c54e2fada3f2cd4ecb?s=128&d=identicon&r=PG", "display_name": "Elise Chant", "link": "https://stackoverflow.com/users/2535541/elise-chant"}, "edited": false, "score": 2, "creation_date": 1424635715, "post_id": 28618895, "comment_id": 45620344, "body": "@[Jamie Dixon] you&#39;re correct, it&#39;s a convenience utility which acts in proxy of Array.reverse"}], "tags": [], "owner": {"reputation": 49470, "user_id": 90678, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/D2Lfc.jpg?s=128&g=1", "display_name": "Jamie Dixon", "link": "https://stackoverflow.com/users/90678/jamie-dixon"}, "is_accepted": true, "score": 8, "last_activity_date": 1424387920, "creation_date": 1424387920, "answer_id": 28618895, "question_id": 28607020, "link": "https://stackoverflow.com/questions/28607020/real-world-examples-of-using-reduceright-in-javascript/28618895#28618895", "title": "Real world examples of using reduceRight in JavaScript", "body": "<p>To answer your first question, <code>reduceRight</code> comes in pretty handy when you want to specify items in a left-to-right manner but execute them in a right-to-left manner.</p>\n\n<p>Consider this naive implementation of a compose function that takes arguments left-to-right but is read and executed right-to-left:</p>\n\n<pre><code>var compose = function () {\n    var args = [].slice.call(arguments);\n\n    return function (initial) {\n        return args.reduceRight(function (prev, next) {\n            return next(prev);\n        }, initial);\n    }\n}\n</code></pre>\n\n<p>Rather than take up time/space with a call to <code>reverse</code> on the array, it's simpler and easier to make sense of a <code>reduceRight</code> call.</p>\n\n<p>An example of using this <code>compose</code> function would looks something like:</p>\n\n<pre><code>var square = function (input) {\n    return input * input;\n};\n\nvar add5 = function (input) {\n    return input + 5;\n};\n\nvar log = function (input) {\n    console.log(input);\n};\n\nvar result = compose(log, square, add5)(1); // -&gt; 36\n</code></pre>\n\n<p>I'm certain there are many more technical examples of <code>reduceRight</code> being useful and this is just one.</p>\n"}, {"comments": [{"owner": {"reputation": 49470, "user_id": 90678, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/D2Lfc.jpg?s=128&g=1", "display_name": "Jamie Dixon", "link": "https://stackoverflow.com/users/90678/jamie-dixon"}, "edited": false, "score": 0, "creation_date": 1424642708, "post_id": 28662793, "comment_id": 45622618, "body": "Nice examples, Elise."}, {"owner": {"reputation": 28104, "user_id": 128595, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/74530a34228bb8fa1f87ae92c78909b7?s=128&d=identicon&r=PG", "display_name": "Eli Barzilay", "link": "https://stackoverflow.com/users/128595/eli-barzilay"}, "edited": false, "score": 0, "creation_date": 1455655473, "post_id": 28662793, "comment_id": 58583101, "body": "These are both bad examples, since they&#39;re both abusing the fold operation: in the first, you&#39;re changing a single <code>accumulator</code> value, and in the second you&#39;re printing stuff.  That means that neither case actually does a <i>fold</i>, they&#39;re just iterations."}], "tags": [], "owner": {"reputation": 4571, "user_id": 2535541, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/2c8f0b38e4fb35c54e2fada3f2cd4ecb?s=128&d=identicon&r=PG", "display_name": "Elise Chant", "link": "https://stackoverflow.com/users/2535541/elise-chant"}, "is_accepted": false, "score": 2, "last_activity_date": 1424637228, "last_edit_date": 1424637228, "creation_date": 1424636599, "answer_id": 28662793, "question_id": 28607020, "link": "https://stackoverflow.com/questions/28607020/real-world-examples-of-using-reduceright-in-javascript/28662793#28662793", "title": "Real world examples of using reduceRight in JavaScript", "body": "<p>Use <code>reduceRight</code> when you are trying to create a new array of tail items from a given array:</p>\n\n<pre><code>var arr = [1,2,2,32,23,4,5,66,22,35,78,8,9,9,4,21,1,1,3,4,4,64,46,46,46,4,6,467,3,67];\n\nfunction tailItems(num) {\n    var num = num + 1 || 1;\n    return arr.reduceRight(function(accumulator, curr, idx, arr) {\n        if (idx &gt; arr.length - num) {\n            accumulator.push(curr);\n        }\n        return accumulator;\n    }, []);\n}\n\nconsole.log(tailItems(5));\n\n//=&gt; [67, 3, 467, 6, 4]\n</code></pre>\n\n<p>Another interesting thing that is useful about reduceRight is that since it reverses the array which it is performing on, the index parameter of the projection function provides array indexes starting from arr.length, such as: </p>\n\n<pre><code>var arr = [1,2,2,32,23];\n\narr.reduceRight(function(accumulator, curr, idx, arr) {\n    console.log(idx);\n}, '');\n\n// =&gt; 4,3,2,1,0\n</code></pre>\n\n<p>This could be useful if you are trying to find a particular array item by its index ie <code>arr[idx]</code> that is toward the tail of an array, which obviously becomes more practical the larger the array - think thousands of items.</p>\n\n<p>Perhaps a good in the wild example would be a social media feed which shows the latest 10 items at first and may load more on demand. Consider how <code>reduceRight</code> might be practical in this instance to organise collections of arrays in reverse order to suit this example.</p>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "is_accepted": false, "score": 1, "last_activity_date": 1487420094, "last_edit_date": 1487420094, "creation_date": 1469653449, "answer_id": 38623155, "question_id": 28607020, "link": "https://stackoverflow.com/questions/28607020/real-world-examples-of-using-reduceright-in-javascript/38623155#38623155", "title": "Real world examples of using reduceRight in JavaScript", "body": "<p>Additionally you can utilize <code>reduceRight</code>, if you need to construct a nested computation/data structure inside out. Instead of manually writing</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const compk = f =&gt; g =&gt; x =&gt; k =&gt; f(x) (x =&gt; g(x) (k));\r\n\r\nconst compk3 = (f, g, h) =&gt; x =&gt; k =&gt; f(x) (x =&gt; g(x) (y =&gt; h(y) (k)));\r\n\r\nconst inck = x =&gt; k =&gt; setTimeout(k, 0, x + 1);\r\n\r\nconst log = prefix =&gt; x =&gt; console.log(prefix, x);\r\n\r\ncompk3(inck, inck, inck) (0) (log(\"manually\")); // 3</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>I want to apply a programmatic solution that builds the recursive structure:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const compkn = (...fs) =&gt; k =&gt; fs.reduceRight((chain, f) =&gt; x =&gt; f(x) (chain), k);\r\n\r\nconst inc = x =&gt; x + 1;\r\n\r\nconst lift = f =&gt; x =&gt; k =&gt; k(f(x));\r\n\r\nconst inck = x =&gt; k =&gt; setTimeout(k, 0, x + 1);\r\n\r\nconst log = prefix =&gt; x =&gt; console.log(prefix, x);\r\n\r\ncompkn(inck, lift(inc), inck) (log(\"programmatically\")) (0); // 0</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}, {"tags": [], "owner": {"reputation": 6380, "user_id": 2520800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/60edc4072807728bf0f69a8af73f716c?s=128&d=identicon&r=PG", "display_name": "Danny &#39;365CSI&#39; Engelman", "link": "https://stackoverflow.com/users/2520800/danny-365csi-engelman"}, "is_accepted": false, "score": 0, "last_activity_date": 1485079564, "creation_date": 1485079564, "answer_id": 41789603, "question_id": 28607020, "link": "https://stackoverflow.com/questions/28607020/real-world-examples-of-using-reduceright-in-javascript/41789603#41789603", "title": "Real world examples of using reduceRight in JavaScript", "body": "<p><code>Array.reduceRight()</code> is great when:   </p>\n\n<ul>\n<li>you need to iterate over an Array of items to create HTML  </li>\n<li>AND need a counter in HTML <strong><em>prior</em></strong> to the items</li>\n</ul>\n\n<p>.</p>\n\n<pre><code>var bands = {\n    Beatles: [\n        {name: \"John\", instruments: \"Guitar\"},\n        {name: \"Paul\", instruments: \"Guitar\"},\n        {name: \"George\", instruments: \"Guitar\"},\n        {name: \"Ringo\", instruments: \"Drums\"}]\n};\nfunction listBandplayers(bandname, instrument) {\n    var bandmembers = bands[bandname];\n    var arr = [  \"&lt;B&gt;\" , 0 , ` of ${bandmembers.length} ${bandname} play ` , instrument , \"&lt;/B&gt;\",\n                \"\\n&lt;UL&gt;\" , ...bandmembers , \"\\n&lt;/UL&gt;\" ];\n    var countidx = 1;\n    return arr.reduceRight((html, item, idx, _array) =&gt; {\n            if (typeof item === 'object') {\n                if (item.instruments.contains(instrument)) _array[countidx]++;\n                item = `\\n\\t&lt;LI data-instruments=\"${item.instruments}\"&gt;` + item.name + \"&lt;/LI&gt;\";\n            }\n            return item + html;\n    });\n}\nconsole.log( listBandplayers('Beatles', 'Drums') );\n/*\n&lt;B&gt;1 of 4 Beatles play Drums&lt;/B&gt;\n&lt;UL&gt;\n    &lt;LI data-instruments=\"Guitar\"&gt;John&lt;/LI&gt;\n    &lt;LI data-instruments=\"Guitar\"&gt;Paul&lt;/LI&gt;\n    &lt;LI data-instruments=\"Guitar\"&gt;George&lt;/LI&gt;\n    &lt;LI data-instruments=\"Drums\"&gt;Ringo&lt;/LI&gt;\n&lt;/UL&gt;\n*/\nconsole.log( listBandplayers('Beatles', 'Guitar') );\n/*\n&lt;B&gt;3 of 4 Beatles play Guitar&lt;/B&gt;\n&lt;UL&gt;\n    &lt;LI data-instruments=\"Guitar\"&gt;John&lt;/LI&gt;\n    &lt;LI data-instruments=\"Guitar\"&gt;Paul&lt;/LI&gt;\n    &lt;LI data-instruments=\"Guitar\"&gt;George&lt;/LI&gt;\n    &lt;LI data-instruments=\"Drums\"&gt;Ringo&lt;/LI&gt;\n&lt;/UL&gt;\n*/\n</code></pre>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "is_accepted": false, "score": 0, "last_activity_date": 1497262312, "last_edit_date": 1497262312, "creation_date": 1497261557, "answer_id": 44496626, "question_id": 28607020, "link": "https://stackoverflow.com/questions/28607020/real-world-examples-of-using-reduceright-in-javascript/44496626#44496626", "title": "Real world examples of using reduceRight in JavaScript", "body": "<p><code>Array.prototype.reduceRight</code> is actually useful in Javascript even with strict evaluation. In order to see why let's look at the map transducer in Javascript and a trivial example. Since I am a functional programmer my version mainly relies on curried functions:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const mapper = f =&gt; g =&gt; x =&gt; y =&gt; g(x) (f(y));\r\n\r\nconst foldl = f =&gt; acc =&gt; xs =&gt; xs.reduce((acc, x) =&gt; f(acc) (x), acc);\r\n\r\nconst add = x =&gt; y =&gt; x + y;\r\n\r\nconst get = k =&gt; o =&gt; o[k];\r\n\r\nconst len = get(\"length\");\r\n\r\nconst concatLen = foldl(mapper(len) (add)) (0);\r\n\r\nconst xss = [[1], [1,2], [1,2,3]];\r\n\r\nconsole.log(concatLen(xss)); // 6</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p><code>mapper</code> (<code>f =&gt; g =&gt; x =&gt; y =&gt; g(x) (f(y))</code>) is essentially function composition in the second argument. And when we recall that a right fold (<code>(a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code>) has flipped arguments inside the reducer, we can replace <code>mapper</code> with normal function composition. Due to abstraction over arity we also can compose a binary function with an unary one easily.</p>\n\n<p>Unfortunately, the argument order of <code>Array.prototype.reducdeRight</code> is broken, because it expects the accumulator as the first argument of the reducer. So we need to fix that with a weird looking lambda:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const foldr = f =&gt; acc =&gt; xs =&gt; xs.reduceRight((acc, x) =&gt; f(x) (acc), acc);\r\n\r\nconst comp = (f, g) =&gt; x =&gt; f(g(x));\r\n\r\nconst add = x =&gt; y =&gt; x + y;\r\n\r\nconst len = xs =&gt; xs.length;\r\n\r\nconst concatLen = foldr(comp(add, len)) (0);\r\n\r\nconst xss = [[1], [1,2], [1,2,3]];\r\n\r\nconsole.log(concatLen(xss));</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>I think this is a significant improvement since we lower the mental burden to actually understand the code (<code>comp</code> is more common than <code>mapper</code>) and are even more DRY.</p>\n"}], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1536, "favorite_count": 6, "accepted_answer_id": 28618895, "answer_count": 6, "score": 14, "last_activity_date": 1497262312, "creation_date": 1424350616, "last_edit_date": 1495540406, "question_id": 28607020, "link": "https://stackoverflow.com/questions/28607020/real-world-examples-of-using-reduceright-in-javascript", "title": "Real world examples of using reduceRight in JavaScript", "body": "<p>A while ago, I posted a question on StackOverflow showing that the <a href=\"https://stackoverflow.com/q/27252657/783743\">native implementation of <code>reduceRight</code> in JavaScript is annoying</a>. Hence, I created a Haskell-style <code>foldr</code> function as a remedy:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function foldr(array, callback, initial) {\n    var length = array.length;\n\n    if (arguments.length &lt; 3) {\n        if (length &gt; 0) var result = array[--length];\n        else throw new Error(\"Reduce of empty array with no initial value\");\n    } else var result = initial;\n\n    while (length &gt; 0) {\n        var index = --length;\n        result = callback(array[index], result, index, array);\n    }\n\n    return result;\n}\n</code></pre>\n\n<p>However, I never used this <code>foldr</code> function simply because I never needed to iterate over an array from right-to-left. This got me thinking, why don't I use <code>foldr</code> in JavaScript as much as I do in Haskell and what are some real world examples of using <code>foldr</code> in JavaScript?</p>\n\n<p>I could be wrong, but I believe that the <code>foldr</code> function is used widely in Haskell because of:</p>\n\n<ol>\n<li>Lazy Evaluation (<a href=\"https://stackoverflow.com/q/3429634/783743\">foldl is tail recursive, so how come foldr runs faster than foldl?</a>)</li>\n<li>Short cut fusion using <code>foldr</code>/<code>build</code> (<a href=\"https://wiki.haskell.org/Correctness_of_short_cut_fusion#foldr.2Fbuild\" rel=\"nofollow noreferrer\">Correctness of short cut fusion: <code>foldr</code>/<code>build</code></a>)</li>\n</ol>\n\n<p>This would explain why <code>foldr</code> or <code>reduceRight</code> are not widely used in JavaScript. I have yet to see a real world use of <code>foldr</code> only for its right-to-left iteration order.</p>\n\n<p>This brings me to my two questions:</p>\n\n<ol>\n<li>What are some real world examples of using <code>reduceRight</code> in JavaScript? Perhaps you have used it in an npm package. It would be great if you could link me to your code and explain why you needed to use <code>reduceRight</code> instead of <code>reduce</code>.</li>\n<li>Why is <code>reduceRight</code> not used as widely as <code>reduce</code> is in JavaScript? I already provided my two cents on this matter. I believe that <code>foldr</code> is primarily used only for its laziness, which is why <code>reduceRight</code> is not very useful in JavaScript. However, I could be wrong.</li>\n</ol>\n\n<p>For the first question, I tried to find some real world examples for using <code>reduceRight</code> in JavaScript. However, I didn't find any satisfactory answers. The only examples I found were trivial and theoretical:</p>\n\n<p><a href=\"https://stackoverflow.com/q/20753527/783743\">when to use reduce and reduceRight?</a></p>\n\n<p>What I am looking for is a practical example. When is it practical to use <code>reduceRight</code> in JavaScript instead of <code>reduce</code>?</p>\n\n<p>For the second question, I understand that it is primarily opinion based which is why it's alright if you don't answer it. The main focus of this post is on the first question, not the second.</p>\n"}, {"tags": ["haskell", "monads", "alternative-functor", "monadplus"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1424354941, "post_id": 28606722, "comment_id": 45520740, "body": "Incidentally, there&#39;s no such thing as <i>type inequality</i> in Haskell. There&#39;s just type equality <code>a ~ ()</code>, and like with all constraints, it is assumed that this could in principle be true even if the compiler can&#39;t proove it \u2013 so you can never negate constraints. In fact is <i>is</i> true here, <code>a ~ ()</code> is precisely what the compiler infers for that <code>mzero</code>!"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 11, "last_activity_date": 1424385373, "last_edit_date": 1424385373, "creation_date": 1424350096, "answer_id": 28606848, "question_id": 28606722, "link": "https://stackoverflow.com/questions/28606722/how-does-mzero-match-guard-type-signature/28606848#28606848", "title": "How does mzero match guard type signature?", "body": "<p>Yes, <code>mzero</code> <em>is</em> capable of returning some <code>m a</code> where <code>a /= ()</code>. But it's also capable of returning <code>m ()</code>. <code>guard</code> uses it in this second case.</p>\n\n<p>It's similar to this:</p>\n\n<pre><code>n :: Int\nn = 5\n</code></pre>\n\n<p><code>5</code> can be a <code>Float</code> or <code>Double</code>, but can also be an <code>Int</code>. The compiler chooses the needed interpretation of <code>5</code> during type checking.</p>\n\n<p>Similarly, the compiler chooses the right type for <code>mzero</code> in the original example during type checking. More precisely, it sees that a <code>m ()</code> is needed, so it chooses that type.</p>\n\n<p>The important bit here is that</p>\n\n<pre><code>mzero :: MonadPlus m =&gt; m a\n</code></pre>\n\n<p>actually means</p>\n\n<pre><code>mzero :: forall m a . MonadPlus m =&gt; m a\n</code></pre>\n\n<p>which states that the <em>caller</em> of <code>mzero</code> gets to choose the actual values for <code>m</code> and <code>a</code> (as long as <code>m</code> is a <code>MonadPlus</code>). Hence, the caller can choose <code>a=()</code> to make things type check. This choice can be made by the user through a type annotation, otherwise the compiler will try to <em>infer</em> the correct choice during type checking.</p>\n"}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 28606848, "answer_count": 1, "score": 2, "last_activity_date": 1613970773, "creation_date": 1424349715, "last_edit_date": 1613970773, "question_id": 28606722, "link": "https://stackoverflow.com/questions/28606722/how-does-mzero-match-guard-type-signature", "title": "How does mzero match guard type signature?", "body": "<p>I have trouble understanding how <code>guard</code> works. Why does it type check? Isn't <code>mzero</code> capable of returning some <code>m a</code> where <code>a /= ()</code>?</p>\n\n<pre><code>guard           :: (MonadPlus m) =&gt; Bool -&gt; m ()\nguard True      =  return ()\nguard False     =  mzero\n\nmzero :: m a \n</code></pre>\n"}, {"tags": ["haskell", "state-monad"], "answers": [{"comments": [{"owner": {"reputation": 391, "user_id": 480146, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/bfe2f5f477cb68954d1aed04194485f1?s=128&d=identicon&r=PG", "display_name": "agreif", "link": "https://stackoverflow.com/users/480146/agreif"}, "edited": false, "score": 0, "creation_date": 1424351357, "post_id": 28603685, "comment_id": 45518483, "body": "is it an optimization in the GHC compiler?"}, {"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "reply_to_user": {"reputation": 391, "user_id": 480146, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/bfe2f5f477cb68954d1aed04194485f1?s=128&d=identicon&r=PG", "display_name": "agreif", "link": "https://stackoverflow.com/users/480146/agreif"}, "edited": false, "score": 1, "creation_date": 1424366316, "post_id": 28603685, "comment_id": 45528967, "body": "@agreif nope. Calling <code>bar</code> automatically would be <i>wrong</i>. It&#39;s actually a function which accepts a state and returns a new state + value (which in this case is <code>Bar</code>, and we&#39;re discarding it by storing it in <code>_</code>). If you duplicate the <code>_ &lt;- bar</code> line, you&#39;ll see that it appends <code>&quot;bar&quot;</code> that many times."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "reply_to_user": {"reputation": 391, "user_id": 480146, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/bfe2f5f477cb68954d1aed04194485f1?s=128&d=identicon&r=PG", "display_name": "agreif", "link": "https://stackoverflow.com/users/480146/agreif"}, "edited": false, "score": 0, "creation_date": 1424374809, "post_id": 28603685, "comment_id": 45533824, "body": "@agreif No, just lazy evaluation. Arguments to functions are never automatically evaluated. This is why, e.g., <code>const &quot;foo&quot; undefined</code> does not throw a runtime error."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1424383408, "post_id": 28603685, "comment_id": 45538713, "body": "@ReinHenrichs Not even lazy evaluation. Evaluating <code>bar</code> fully would not cause it to run; <code>foo</code> has to say how the effects of <code>bar</code> are incorporated into <code>foo</code>&#39;s effects (basically by where a <code>... &lt;- bar</code> line appears). In the OP&#39;s version of <code>foo</code> it specified that the effects of <code>bar</code> should be incorporated &quot;not at all&quot; (by not including a bind with <code>bar</code>), and so those effects don&#39;t happen. Lazy evaluation <i>must</i> give the same result as strict evaluation if both terminate, so it&#39;s never the explanation for a change in behavior."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 8, "last_activity_date": 1424341189, "last_edit_date": 1424341189, "creation_date": 1424340876, "answer_id": 28603685, "question_id": 28603585, "link": "https://stackoverflow.com/questions/28603585/haskell-state-monad-in-function-and-argument/28603685#28603685", "title": "haskell state monad in function and argument", "body": "<p>The problem is that you're not actually <em>calling</em> <code>bar</code> inside <code>foo</code>.</p>\n\n<p>You can do that using <code>_ &lt;- bar</code>.</p>\n\n<p>This appends <code>\"foobar\"</code> to the state:</p>\n\n<pre><code>foo :: MyStateMonadT Bar -&gt; MyStateMonadT Foo\nfoo bar = do\n  modify (++\"foo\")\n  _ &lt;- bar\n  return Foo\n</code></pre>\n\n<p>and this appends <code>\"barfoo\"</code>:</p>\n\n<pre><code>foo :: MyStateMonadT Bar -&gt; MyStateMonadT Foo\nfoo bar = do\n  _ &lt;- bar\n  modify (++\"foo\")\n  return Foo\n</code></pre>\n"}], "owner": {"reputation": 391, "user_id": 480146, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/bfe2f5f477cb68954d1aed04194485f1?s=128&d=identicon&r=PG", "display_name": "agreif", "link": "https://stackoverflow.com/users/480146/agreif"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 28603685, "answer_count": 1, "score": 3, "last_activity_date": 1424342800, "creation_date": 1424340598, "last_edit_date": 1424342800, "question_id": 28603585, "link": "https://stackoverflow.com/questions/28603585/haskell-state-monad-in-function-and-argument", "title": "haskell state monad in function and argument", "body": "<p>I have a question regarding the usage of the state monad if a function and its argument, that is also a function, both change the state.</p>\n\n<p>here is the short info:<br/>\nfunction <code>foo</code> changes the state<br/>\nfunction <code>bar</code> changes the state</p>\n\n<p>I want to call:</p>\n\n<pre><code>foo bar\n</code></pre>\n\n<p>if I call <code>bar</code> alone, the the state is set to \"bar\"<br/>\nif I call <code>foo bar</code> then the state is only \"foo\" instead of \"foobar\", so it seems that <code>bar</code> did not change the state, and I don't understand why.</p>\n\n<p>Any clarification is appreciated.<br/></p>\n\n<p>Here is the full code:</p>\n\n<pre><code>module Main where\n\nimport Control.Monad.State\n\nmain :: IO ()\nmain = do\n  a &lt;- execStateT test1 \"\"\n  print a\n  a &lt;- execStateT test2 \"\"\n  print a\n\ntype MyState = String\ntype MyStateMonadT = StateT MyState IO\n\ntest1 :: MyStateMonadT ()\ntest1 = do\n  bar\n  return ()\n\ntest2 :: MyStateMonadT ()\ntest2 = do\n  foo bar\n  return ()\n\ndata Foo = Foo\ndata Bar = Bar\n\nfoo :: MyStateMonadT Bar -&gt; MyStateMonadT Foo\nfoo bar = do\n  modify (++\"foo\")\n  return Foo\n\nbar :: MyStateMonadT Bar\nbar = do\n  modify (++\"bar\")\n  return Bar\n</code></pre>\n"}]