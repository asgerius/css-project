[{"tags": ["haskell", "functional-programming"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1567632008, "last_edit_date": 1567632008, "creation_date": 1567631691, "answer_id": 57795720, "question_id": 57795685, "link": "https://stackoverflow.com/questions/57795685/map-the-min-command-to-a-multilevel-list-in-haskell/57795720#57795720", "title": "map the min command to a multilevel list in haskell", "body": "<p><a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:min\" rel=\"noreferrer\"><strong><code>min :: Ord a =&gt; a -&gt; a -&gt; a</code></strong></a> works on two items to return the minimum of the two. You are probably looking for <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:minimum\" rel=\"noreferrer\"><strong><code>minimum :: (Foldable f, Ord a) =&gt; f a -&gt; a</code></strong></a> instead:</p>\n\n<pre><code>Prelude&gt; map <b>minimum</b> [[1, 3], [2, 7],[9, 6]]\n[1,2,6]</code></pre>\n\n<p>Here the items are not wrapped in individual sublists, but that would only result in an (unnecessary) extra layer of indirection.</p>\n"}], "owner": {"reputation": 2690, "user_id": 948397, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b1cdf616876083f7c5ec1a49fc357530?s=128&d=identicon&r=PG", "display_name": "pluke", "link": "https://stackoverflow.com/users/948397/pluke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 57795720, "answer_count": 1, "score": 3, "last_activity_date": 1567632008, "creation_date": 1567631473, "question_id": 57795685, "link": "https://stackoverflow.com/questions/57795685/map-the-min-command-to-a-multilevel-list-in-haskell", "title": "map the min command to a multilevel list in haskell", "body": "<p>I want to find the smallest values in a set of lists</p>\n\n<pre><code>map min [[1, 3], [2, 7],[9, 6]]\n</code></pre>\n\n<p>I would like this to output</p>\n\n<pre><code>[[1],[2],[6]]\n</code></pre>\n\n<p>It gives the error:</p>\n\n<pre><code>* No instance for (Show ([Integer] -&gt; [Integer]))\narising from a use of `print'\n(maybe you haven't applied a function to enough arguments?)\n* In a stmt of an interactive GHCi command: print it\n</code></pre>\n"}, {"tags": ["haskell", "either"], "answers": [{"comments": [{"owner": {"reputation": 83, "user_id": 651675, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8a28197e32791ec583624aff7318f98?s=128&d=identicon&r=PG", "display_name": "Sebastian Sipos", "link": "https://stackoverflow.com/users/651675/sebastian-sipos"}, "edited": false, "score": 0, "creation_date": 1567630195, "post_id": 57795442, "comment_id": 102024050, "body": "Cool. I&#39;ve tried writing <code>fuu</code> as <code>fuu :: Bool -&gt; Error -&gt; Either Error a</code> but it errored. Also I&#39;ve searched hoogle for <code>Bool -&gt; e -&gt; Either e a</code>. Never crossed my mind to use the &quot;empty tuple&quot;. Thanks a lot!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1567670786, "post_id": 57795442, "comment_id": 102034096, "body": "<code>fail s</code> is not <code>Left s</code>, though."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1567700631, "post_id": 57795442, "comment_id": 102050636, "body": "<code>fail</code> is for handling pattern-match failures; it&#39;s not meant to signal an arbitrary error."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 4, "last_activity_date": 1567789388, "last_edit_date": 1567789388, "creation_date": 1567630067, "answer_id": 57795442, "question_id": 57795257, "link": "https://stackoverflow.com/questions/57795257/how-to-sequence-conditions-when-using-either/57795442#57795442", "title": "How to sequence conditions when using either", "body": "<p>The definition of <code>fuu</code> that you're looking for is:</p>\n\n<pre><code>fuu :: Bool -&gt; Error -&gt; Either Error ()\nfuu True e = Left e\nfuu False _ = Right ()\n</code></pre>\n\n<p>Here's why...  The operator <code>(*&gt;)</code> has type:</p>\n\n<pre><code>(*&gt;) :: (Applicative f) =&gt; f a -&gt; f b -&gt; f b\n</code></pre>\n\n<p>In this context, <code>f</code> is specialized to <code>Either Error</code>, so it's actually:</p>\n\n<pre><code>(*&gt;) :: Either Error a -&gt; Either Error b -&gt; Either Error b\n</code></pre>\n\n<p>If you want to write <code>fuu p \"xxx\" *&gt; other_action</code>, the type of the result will be the type of <code>other_action</code> (namely, <code>Either Error b</code> for some <code>b</code>).  You need to define <code>fuu</code> so that the supplied <code>fuu p \"xxx\"</code> has type <code>Either Error a</code> for some type <code>a</code>, where it doesn't matter what type <code>a</code> is:</p>\n\n<pre><code>fuu :: Bool -&gt; Error -&gt; Either Error ???\nfuu True err = Left err\nfuu False _ = Right ???\n</code></pre>\n\n<p>If you find yourself in a situation where you need to supply a <code>???</code> where the value and the type don't matter, the value/type <code>()</code> is always a good bet:</p>\n\n<pre><code>fuu :: Bool -&gt; Error -&gt; Either Error ()\nfuu True err = Left err\nfuu False _ = Right ()\n</code></pre>\n\n<p>Note that it's common to write:</p>\n\n<pre><code>when (n &lt; 0) (Left \"Must be a strict positive, bruh!\")\n</code></pre>\n\n<p>using <code>when</code> from <code>Control.Monad</code>, instead of bothering to define <code>fuu</code>.</p>\n\n<p>Also, you may find your function looks a little more natural when rewritten in do-notation:</p>\n\n<pre><code>import Control.Monad\n\nupdateTodoAt' :: Int -&gt; (Todo -&gt; Either Error Todo) \n     -&gt; [Todo] -&gt; Either Error [Todo]\nupdateTodoAt' position fn todos = do\n  when (n &lt; 0) $ Left \"Must be a strict positive, bruh!\"\n  when (n &gt; length todos) $ Left \"Out of bounds?\"\n  todo &lt;- fn (todos !! n)\n  return $ take n todos ++ [todo] ++ drop (n+1) todos\n  where n = position - 1\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 83, "user_id": 651675, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8a28197e32791ec583624aff7318f98?s=128&d=identicon&r=PG", "display_name": "Sebastian Sipos", "link": "https://stackoverflow.com/users/651675/sebastian-sipos"}, "edited": false, "score": 0, "creation_date": 1567630645, "post_id": 57795533, "comment_id": 102024209, "body": "Code works fine, I was just trying to rewrite it without using a guard.At this point, I have a lot of helper functions or case statements because of how I&#39;ve written it. I&#39;m trying to understand how to chain and nest <code>Either</code>s."}], "tags": [], "owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "is_accepted": false, "score": 0, "last_activity_date": 1567630543, "creation_date": 1567630543, "answer_id": 57795533, "question_id": 57795257, "link": "https://stackoverflow.com/questions/57795257/how-to-sequence-conditions-when-using-either/57795533#57795533", "title": "How to sequence conditions when using either", "body": "<p>You only need to use <code>fmap</code> here:</p>\n\n<pre><code>updateTodoAt :: Int -&gt; (Todo -&gt; Either Error Todo) -&gt; [Todo] -&gt; Either Error [Todo]\nupdateTodoAt n fn todos\n  | n &lt; 0 = Left \"Must be a strict positive, bruh!\"\n  | n &gt;= length todos = Left \"Out of bounds?\"\n  | otherwise = let (l, (todo:r)) = splitAt n todos\n        in fmap (\\todo -&gt; l ++ [todo] ++ r) (fn todo)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 0, "last_activity_date": 1567701172, "creation_date": 1567701172, "answer_id": 57809689, "question_id": 57795257, "link": "https://stackoverflow.com/questions/57795257/how-to-sequence-conditions-when-using-either/57809689#57809689", "title": "How to sequence conditions when using either", "body": "<p>Don't use <code>!!</code>. There are really only two error conditions:</p>\n\n<ol>\n<li><code>n</code> is negative</li>\n<li>The input list is empty (which implies the non-negative <code>n</code> is too large)</li>\n</ol>\n\n<p>Given a non-negative <code>n</code> and an non-empty list, you'll either apply the function to the first list element, or recurse.</p>\n\n<pre><code>updateTodoAt n _ xs\n    | n &lt; 0 = Left \"negative index\"\n    | null xs = Left \"index too large\"\nupdateTodoAt 0 fn (x:xs) = (: xs) &lt;$&gt; (fn x)\nupdateTodoAt n fn (x:xs) = (x :) &lt;$&gt; updateTodoAt (n-1) fn xs\n</code></pre>\n"}], "owner": {"reputation": 83, "user_id": 651675, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8a28197e32791ec583624aff7318f98?s=128&d=identicon&r=PG", "display_name": "Sebastian Sipos", "link": "https://stackoverflow.com/users/651675/sebastian-sipos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 57795442, "answer_count": 3, "score": 0, "last_activity_date": 1567789388, "creation_date": 1567628895, "question_id": 57795257, "link": "https://stackoverflow.com/questions/57795257/how-to-sequence-conditions-when-using-either", "title": "How to sequence conditions when using either", "body": "<p>So I'm building this CLI todos app to learn some Haskell and I am trying to streamline error handling (I feel that there's too much code using my current approach).</p>\n\n<p>And so I've written this function to update a task at a specific position by applying a function over it:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>  updateTodoAt :: Int -&gt; (Todo -&gt; Either Error Todo) -&gt; [Todo] -&gt; Either Error [Todo]\n  updateTodoAt position fn todos\n                  | n &lt; 0 = Left \"Must be a strict positive, bruh!\"\n                  | n &gt;= length todos = Left \"Out of bounds?\"\n                  | otherwise = fn (todos!!n)\n                                &gt;&gt;= (\\todo -&gt; Right(take n todos ++ [todo] ++ drop (n+1) todos))\n</code></pre>\n\n<p>This works fine, however I feel that I'm missing something and there should be a way to write this using some <code>*&gt;</code> or <code>&gt;&gt;</code> or <code>&gt;&gt;=</code>, but I can't seem to be able find the combination. I've just started grasping how to chain these together... :)\nThe reasoning for trying to accomplish this is because this function is being called within another that does it's own pre-validations and the code already is messy.</p>\n\n<p>I've tried various permutations in the lines of the next block (it's just an example), but from the first moment I felt this approach can't work because this isn't the way to \"cast\" from Maybe to Either.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>  updateTodoAt position fn todos = fuu n &lt; 0 \"Must be a strict positive, bruh!\"\n                    *&gt; fuu (n &gt;= length todos) \"Out of bounds?\"\n                    *&gt; fn (todos!!n)\n                    &gt;&gt;= (\\todo -&gt; Right(take n todos ++ [todo] ++ drop (n+1) todos)) \n                  where n = position - 1\n\n  fuu :: Bool -&gt; Error -&gt; Maybe Error\n  fuu True e = Just e\n  fuu False _ = Nothing\n\n</code></pre>\n\n<p>My intuition tells me that there should be a function that can be chained like this.</p>\n\n<p>Fyi: <code>type Error = Text</code>, I'm using Protolude and OverloadedStrings</p>\n\n<p>The code is up at <a href=\"https://github.com/ssipos90/todos-hs\" rel=\"nofollow noreferrer\">https://github.com/ssipos90/todos-hs</a> but it's a bit 'dated. I've started working on parsing the \"database\" file using megaparsec, but I think error handling is more important.</p>\n"}, {"tags": ["haskell", "types", "traversal", "typeclass", "parametric-polymorphism"], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1567658936, "post_id": 57794569, "comment_id": 102029752, "body": "I redirected the links so they don&#39;t just go into the enormous pile of <code>Control.Lens.Combinators</code>. Hope that&#39;s okay."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 6, "last_activity_date": 1567658877, "last_edit_date": 1567658877, "creation_date": 1567624480, "answer_id": 57794569, "question_id": 57794397, "link": "https://stackoverflow.com/questions/57794397/is-there-something-in-between-traversable-and-monotraversable/57794569#57794569", "title": "Is there something in between Traversable and MonoTraversable?", "body": "<p>The lens package would call this a <a href=\"http://hackage.haskell.org/package/lens-4.17.1/docs/Control-Lens-Traversal.html#t:Traversal\" rel=\"nofollow noreferrer\"><code>Traversal</code></a>:</p>\n\n<pre><code>almostTraverse :: Traversal (Foo a) (Foo b) (Bar a) (Bar b)\n</code></pre>\n\n<p>You could consider making an instance of the <a href=\"http://hackage.haskell.org/package/lens-4.17.1/docs/Control-Lens-Each.html#t:Each\" rel=\"nofollow noreferrer\"><code>Each</code></a> typeclass, as in</p>\n\n<pre><code>instance Each (Foo a) (Foo b) (Bar a) (Bar b) where\n    each f (MkFoo x y) = liftA2 MkFoo (f x) (f y)\n</code></pre>\n"}], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 57794569, "answer_count": 1, "score": 3, "last_activity_date": 1567658877, "creation_date": 1567623635, "question_id": 57794397, "link": "https://stackoverflow.com/questions/57794397/is-there-something-in-between-traversable-and-monotraversable", "title": "Is there something in between Traversable and MonoTraversable?", "body": "<p>I have a datatype and accompanying function that looks very much like some sort of traversal. Here\u2019s a simplified example:</p>\n\n<pre><code>data Foo x = MkFoo (Bar x) (Bar x)\n\nalmostTraverse :: Applicative f =&gt; (Bar a -&gt; f (Bar b)) -&gt; Foo a -&gt; f (Foo b)\nalmostTraverse f (MkFoo x y) = MkFoo &lt;$&gt; f x &lt;*&gt; f y\n</code></pre>\n\n<p>Assume that <code>Bar</code> is some opaque type, and isn\u2019t necessarily a functor. Is there some typeclass that\u2019s a generalization of <code>almostTraverse</code>? It\u2019s not <code>otraverse</code> from <code>MonoTraversable</code>, because the result type inside the applicative doesn\u2019t have to be exactly the same as the input type, and it\u2019s not <code>traverse</code> from <code>Traversable</code> either, because the function passed in needs to be aware of the <code>Bar</code> despite it not being in the type parameter.</p>\n"}, {"tags": ["haskell", "cabal", "haskell-stack", "ghci"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567626566, "post_id": 57792516, "comment_id": 102023018, "body": "Does your test suite include your library in its <code>build-depends</code>, or does it just import stuff and share the same <code>hs-source-dirs</code>? (If you don&#39;t know, include your cabal file in the question; the answer is in there, and I know how to extract it.)"}, {"owner": {"reputation": 58948, "user_id": 857807, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/297e4dba223f5103614030100eab78ca?s=128&d=identicon&r=PG", "display_name": "dcastro", "link": "https://stackoverflow.com/users/857807/dcastro"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567666418, "post_id": 57792516, "comment_id": 102032110, "body": "@DanielWagner Yes, the test suite depends on the library. I&#39;ve uploaded the cabal file here: <a href=\"https://gist.github.com/dcastro/7efac2b2db024451eea26687bf135890\" rel=\"nofollow noreferrer\">gist.github.com/dcastro/7efac2b2db024451eea26687bf135890</a>"}, {"owner": {"reputation": 58948, "user_id": 857807, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/297e4dba223f5103614030100eab78ca?s=128&d=identicon&r=PG", "display_name": "dcastro", "link": "https://stackoverflow.com/users/857807/dcastro"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567666441, "post_id": 57792516, "comment_id": 102032123, "body": "If it helps, the actual project is here: <a href=\"https://github.com/dcastro/haskell-flatbuffers\" rel=\"nofollow noreferrer\">github.com/dcastro/haskell-flatbuffers</a>"}], "answers": [{"tags": [], "owner": {"reputation": 58948, "user_id": 857807, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/297e4dba223f5103614030100eab78ca?s=128&d=identicon&r=PG", "display_name": "dcastro", "link": "https://stackoverflow.com/users/857807/dcastro"}, "is_accepted": true, "score": 0, "last_activity_date": 1568385734, "creation_date": 1568385734, "answer_id": 57925752, "question_id": 57792516, "link": "https://stackoverflow.com/questions/57792516/ghci-ghc-options-for-test-suite-overriding-ghc-options-for-library/57925752#57925752", "title": "GHCI: ghc-options for test suite overriding ghc-options for library", "body": "<p>I ended up just removing the flag from the test suite and adding it on a per-module basis:</p>\n\n<pre><code>{-# OPTIONS_GHC -Wno-incomplete-patterns #-}\n</code></pre>\n\n<p>Not a proper fix, but worked for this simple scenario.</p>\n"}], "owner": {"reputation": 58948, "user_id": 857807, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/297e4dba223f5103614030100eab78ca?s=128&d=identicon&r=PG", "display_name": "dcastro", "link": "https://stackoverflow.com/users/857807/dcastro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 57925752, "answer_count": 1, "score": 4, "last_activity_date": 1568385734, "creation_date": 1567614634, "question_id": 57792516, "link": "https://stackoverflow.com/questions/57792516/ghci-ghc-options-for-test-suite-overriding-ghc-options-for-library", "title": "GHCI: ghc-options for test suite overriding ghc-options for library", "body": "<p>I have a library being compiled with <code>-Wall</code>, and I have a test suite with <code>-Wall -Wno-incomplete-patterns</code></p>\n\n<p>When I fire up ghci with <code>stack ghci --test</code>, it seems ghci picks the ghc options from the test suite and applies them to both projects.\nIn other words, it applies <code>-Wno-incomplete-patterns</code> to the library code as well.</p>\n\n<p>Is there a way of stopping ghci from doing that?</p>\n"}, {"tags": ["haskell", "lazy-evaluation", "ghci"], "answers": [{"comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1567613486, "post_id": 57790845, "comment_id": 102017743, "body": "I am just unsure about &quot;instead of call-by-need, you get call-by-name\u2013semantics&quot;: it gives the same result as if <code>foo</code> were call-by-name, but not because it actually is (AFAIU)."}, {"owner": {"reputation": 173, "user_id": 6314970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d80d49d0a88e5888da7e50f5a512ebd?s=128&d=identicon&r=PG&f=1", "display_name": "andre_c", "link": "https://stackoverflow.com/users/6314970/andre-c"}, "edited": false, "score": 0, "creation_date": 1567615943, "post_id": 57790845, "comment_id": 102018797, "body": "In Update 1 both wrappers are polymorphic though, yet one evaluates <code>foo</code> only once (the computation is worth sharing) while the other evaluates <code>foo</code> twice. Any thoughts on this?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 173, "user_id": 6314970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d80d49d0a88e5888da7e50f5a512ebd?s=128&d=identicon&r=PG&f=1", "display_name": "andre_c", "link": "https://stackoverflow.com/users/6314970/andre-c"}, "edited": false, "score": 2, "creation_date": 1567623803, "post_id": 57790845, "comment_id": 102021937, "body": "@andre_c You are incorrect: <code>let foo = trace &quot;eval foo&quot; x</code> is not a polymorphic binding. It is monomorphic; <code>foo</code> must have the exact type chosen by the caller for <code>x</code>. (N.B. the whole function is polymorphic, but that subterm is not!) For example, <code>let foo = trace &quot;eval foo&quot; 5; y :: Int; y = foo; z :: Double; z = foo</code> is fine because <code>foo</code> is a polymorphic binding in that; but <code>let foo = trace &quot;eval foo&quot; x; y :: Int; y = foo; z :: Double; z = foo</code> is a type error."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 14, "last_activity_date": 1567608231, "creation_date": 1567608231, "answer_id": 57790845, "question_id": 57789663, "link": "https://stackoverflow.com/questions/57789663/a-point-free-function-is-shared-yet-evaluated-twice/57790845#57790845", "title": "A point-free function is shared, yet evaluated twice", "body": "<blockquote>\n  <p>As expected, <code>foo</code> is evaluated only once (CSE probably kicks in)</p>\n</blockquote>\n\n<p>No, this has nothing to do with CSE, it's just how lazy evaluation (aka <em>call by need</em>) works: <code>foo</code> is a <a href=\"https://wiki.haskell.org/Constant_applicative_form\" rel=\"noreferrer\">constant applicative form</a>, as such it just needs to be computed (forced from a thunk to WHNF) once and can then simply be reused without any further computation. The reason that this doesn't work in GHCi-8 anymore is that 7.8 has removed the <a href=\"https://wiki.haskell.org/Monomorphism_restriction\" rel=\"noreferrer\">monomorphism restriction</a> in GHCi. Why is this relevant? Well, <code>trace \"eval foo\" 5</code> is a polymorphic expression of type <code>Num a -&gt; a</code>. And polymorphic expressions can <em>not</em> be CAFs. Thus instead of call-by-need, you get call-by-name\u2013semantics.</p>\n\n<p>The simplest way to get sharing again is to enforce CAF by making the type monomorphic, by adding an explicit signature:</p>\n\n<pre><code>Prelude Debug.Trace&gt; let foo = trace \"eval foo\" 5 :: Int in foo + foo\neval foo\n10\n</code></pre>\n"}], "owner": {"reputation": 173, "user_id": 6314970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d80d49d0a88e5888da7e50f5a512ebd?s=128&d=identicon&r=PG&f=1", "display_name": "andre_c", "link": "https://stackoverflow.com/users/6314970/andre-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 3, "accepted_answer_id": 57790845, "answer_count": 1, "score": 15, "last_activity_date": 1567615688, "creation_date": 1567604311, "last_edit_date": 1567615688, "question_id": 57789663, "link": "https://stackoverflow.com/questions/57789663/a-point-free-function-is-shared-yet-evaluated-twice", "title": "A point-free function is shared, yet evaluated twice", "body": "<p>I've been trying to understand how shared computation works in Haskell. According to my understanding, point-free shared computation should be evaluated only once (courtesy to <a href=\"https://wiki.haskell.org/GHC_optimisations#Common_subexpression_elimination\" rel=\"noreferrer\">CSE</a>). </p>\n\n<p>(A) For example, consider the following code and its output:</p>\n\n<pre><code>*Main&gt; let foo = trace \"eval foo\" 5 in foo + foo\neval foo\n10\n\n*Main&gt; let foo' = \\x -&gt; trace \"eval foo'\" x in (foo' 5) + (foo' 5)\neval foo'\neval foo'\n10\n</code></pre>\n\n<p>As expected, <code>foo</code> is evaluated only once (CSE probably kicks in), while <code>foo'</code> is evaluated lazily twice. That is fine. I tried the above using GHCi, version 7.6.3. Next, I tried the same code in GHCi, version 8.6.5, yielding this result instead:</p>\n\n<pre><code>*Main&gt; let foo = trace \"eval foo\" 5 in foo + foo\neval foo\neval foo\n10\n</code></pre>\n\n<p>Notice that <code>foo</code> is evaluated twice now.</p>\n\n<p>(B) Similarly, with GHCi, version 7.6.3:</p>\n\n<pre><code>*Main&gt; let goo = const (trace \"eval goo\" 5) in goo () + goo ()\neval goo\n10\n</code></pre>\n\n<p>but, GHCi, version 8.6.5 evaluates <code>goo</code> twice:</p>\n\n<pre><code>*Main&gt; let goo = const (trace \"eval goo\" 5) in goo () + goo ()\neval goo\neval goo\n10\n</code></pre>\n\n<p>(C) Finally, both versions yield the same result for the below:</p>\n\n<pre><code>*Main&gt; let foo_wrapper x = let foo = trace \"eval foo\" x in foo + foo\n*Main&gt; foo_wrapper 5\neval foo\n10\n</code></pre>\n\n<p>I wonder if some optimizations have been turned off by default in GHCi-8 or if the side effects of <code>trace</code> force <code>foo</code> to be evaluated somehow twice? Or was there an issue in GHCi-7? How is GHCi supposed to behave with expressions like (A) and (B)? </p>\n\n<h1>(Update 1)</h1>\n\n<p>For scenario (C) consider the following runs in GHCi-8 (with the main difference in the second argument of <code>trace</code>):</p>\n\n<pre><code>*Main&gt; let foo_wrapper x = let foo = trace \"eval foo\" x in foo + foo \n*Main&gt; foo_wrapper 5\neval foo\n10\n*Main&gt; :t (foo_wrapper 5)\n(foo_wrapper 5) :: Num a =&gt; a\n\n*Main&gt; let foo_wrapper' x = let foo = trace \"eval foo\" 5 in foo + foo \n*Main&gt; foo_wrapper' ()\neval foo\neval foo\n10\n*Main&gt; :t (foo_wrapper' ())\n(foo_wrapper' ()) :: Num a =&gt; a\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 6, "creation_date": 1567585174, "post_id": 57784025, "comment_id": 102002134, "body": "I think in your <a href=\"https://stackoverflow.com/questions/57762867/instrumented-state-monad\">last question</a> you were told by a comment, that: &quot;See also <a href=\"https://stackoverflow.com/questions/54281543/monad-to-also-measure-side-effects\">Monad to also measure side effects</a>. In short: you cannot make a law-abiding instance that does what you want. [...]&quot;"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 0, "last_activity_date": 1567591508, "creation_date": 1567591508, "answer_id": 57786114, "question_id": 57784025, "link": "https://stackoverflow.com/questions/57784025/function-that-runs-a-state-monadic-computation-in-the-instrumented-state-monad/57786114#57786114", "title": "Function that runs a state monadic computation in the instrumented state monad", "body": "<p>You probably need to generate an initial \"zero counter\", and call <code>runState'</code> accordingly, then discard the final state.</p>\n\n<pre><code>run :: State' s a -&gt; s -&gt; (a, Counts)\nrun action st = case runState' action (st, mempty) of\n   (x, _st', count) -&gt; (x, count)\n</code></pre>\n\n<p>Note that your monad will not satisfy the monad laws, unless the laws are taken \"up to the counters\". It can still be a nice exercise to experiment with this, though.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10696742"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 57786114, "answer_count": 1, "score": -3, "last_activity_date": 1567591508, "creation_date": 1567584256, "question_id": 57784025, "link": "https://stackoverflow.com/questions/57784025/function-that-runs-a-state-monadic-computation-in-the-instrumented-state-monad", "title": "Function that runs a state monadic computation in the instrumented state monad", "body": "<p>I need to write a function</p>\n\n<pre><code>run :: State' s a -&gt; s -&gt; (a, Counts)\n</code></pre>\n\n<p>that runs a state monadic computation in the instrumented state monad, given some initial state of type s, and returns the computed value and the number of operations counted. For example, this: \n    let tree = Branch (Branch Leaf \"B\" Leaf) \"A\" Leaf in  run (label tree) 42\nshould evaluate to this:<br>\n    ( Branch (Branch Leaf (42, \"B\") Leaf) (43, \"A\") Leaf, Counts { binds = 10, returns = 5, gets = 4, puts = 2 } )</p>\n\n<p>Here is what I already have: </p>\n\n<pre><code>data Counts = Counts { binds   :: Int,\n                   returns :: Int,\n                   gets    :: Int,\n                   puts    :: Int\n                 } deriving (Eq, Show)\n\n\noneBind   = Counts 1 0 0 0\noneReturn = Counts 0 1 0 0\noneGet    = Counts 0 0 1 0\nonePut    = Counts 0 0 0 1\n\n\ninstance Monoid Counts where\n  mempty  = Counts 0 0 0 0\n  mappend (Counts x1 x2 x3 x4) (Counts y1 y2 y3 y4) = Counts (x1+y1) (x2+y2) (x3+y3) (x4+y4)\n\n\ninstance Semigroup Counts where\n  (Counts x1 x2 x3 x4) &lt;&gt; (Counts y1 y2 y3 y4) = Counts (x1+y1) (x2+y2) (x3+y3) (x4+y4)\n\n\nnewtype State' s a = State' { runState' :: (s, Counts) -&gt; (a, s, Counts) }\n\ninstance Monad (State' s) where\n  return a   = State' $ \\(s, count) -&gt; (a, s, (count &lt;&gt; oneReturn)) \n  (&gt;&gt;=) st f = State' $ \\(s, count) -&gt; let (x, s', count') = runState' st (s, count) in runState' (f x) (s', (count' &lt;&gt; oneBind) ) \n\n\ninstance MonadState s (State' s) where\n  get    = State' $ \\(s, count) -&gt; (s, s, (count &lt;&gt; oneGet))\n  put st = State' $ \\(s, count) -&gt; ((), st, (count &lt;&gt; onePut))\n</code></pre>\n\n<p>I have Monad and MonadState instances for State'</p>\n\n<p>I feel like I already have everything that I need to write that run function, but I don't know how to put it all together.</p>\n"}, {"tags": ["haskell", "haskell-stack", "haskero"], "comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 2, "creation_date": 1567577384, "post_id": 57782279, "comment_id": 101998640, "body": "I believe that these issues are due to a <a href=\"https://github.com/commercialhaskell/stack/releases/tag/v2.1.1\" rel=\"nofollow noreferrer\">recent update of <code>stack</code></a>. The <code>stty</code> message comes from <a href=\"https://github.com/commercialhaskell/stack/issues/4901\" rel=\"nofollow noreferrer\">this issue</a>, which I am currently trying to fix. I\u2019m not sure about the garbled outputs with <code>[</code>, but I was able to fix it by passing <code>--color=never</code> to Stack (although I use Emacs so this may not work for you)."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1567578002, "post_id": 57782279, "comment_id": 101998887, "body": "That <code>[&lt;number&gt;m</code> stuff is the printable portion of the ansi escape code for setting the terminal color.  There&#39;s a non-printable <code>ESC</code> character before the <code>[</code>, which is why they&#39;re called &quot;escape codes&quot;."}], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 93, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1567576653, "creation_date": 1567576653, "question_id": 57782279, "link": "https://stackoverflow.com/questions/57782279/garbled-target-names-in-haskero", "title": "Garbled target names in Haskero", "body": "<p>For some time, I've been using <a href=\"https://marketplace.visualstudio.com/items?itemName=Vans.haskero\" rel=\"nofollow noreferrer\">Haskero</a> on Windows 10 for Haskell programming, and it's been great for a long time. Recently, however, I repaved my laptop, and since then, the functionality that enables switching targets contains garbled output:</p>\n\n<p><a href=\"https://i.stack.imgur.com/T5iJf.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/T5iJf.png\" alt=\"Switch-target UI\"></a></p>\n\n<p>This isn't just a display issue. It effectively prevents me from being able to switch targets:</p>\n\n<pre><code>Spawning process 'stack' with command 'stack ghci --with-ghc intero \"--ghci-options=-ignore-dot-ghci -Wall\" --no-build --no-load RestaurantReservation:test:RestaurantReservation-test[0m'\n[Error - 07:52:52] Change targets failed. Stopping Haskero for this target. Switch to another target or 'Default targets'.\nHint : try running a build command to get missing dependencies (&gt; stack build RestaurantReservation:test:RestaurantReservation-test[0m)\nError details:\n\n  Message: Request changeTargets failed unexpectedly without providing any details.\n  Code: -32603 \n</code></pre>\n\n<p>Notice that when I try to switch to the test target, it issues a command to <code>stack</code> that includes those non-printable characters. Among other issues, this means that I get absolutely no value from the add-in for my unit tests.</p>\n\n<p>The presence of those non-printable characters, as well as <code>stty: 'standard input': Inappropriate ioctl for device</code> looks to me like an issue with with how standard output is interpreted.</p>\n\n<p>As far as I can tell, from <a href=\"https://gitlab.com/vannnns/haskero/blob/master/client/src/utils/stack.ts#L12\" rel=\"nofollow noreferrer\">perusing the Haskero code base</a>, it looks as though the list of targets comes from <code>stack ide targets</code>. If, however, I issue this command on the command line, all looks good:</p>\n\n<pre><code>$ stack ide targets\nRestaurantReservation:lib\nRestaurantReservation:exe:RestaurantReservation\nRestaurantReservation:test:RestaurantReservation-test\n</code></pre>\n\n<p>This used to work on Windows 10 before I repaved the machine, but now it doesn't.</p>\n\n<p>Since it worked before re-installation, I'm hoping that there's some environment setting I can tweak to get the functionality back, but if there is, it's not clear to me what it'd be.</p>\n\n<p>How do I make the <em>targets</em> dialogue use clean target names, so that switching among them is possible?</p>\n"}, {"tags": ["haskell", "cabal", "hunit"], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 4, "last_activity_date": 1567646995, "last_edit_date": 1567646995, "creation_date": 1567577921, "answer_id": 57782506, "question_id": 57781735, "link": "https://stackoverflow.com/questions/57781735/cant-cabal-install-hunit/57782506#57782506", "title": "Can&#39;t cabal install hunit", "body": "<p>This message is telling you two different things.  \"Install\" is a legacy command and \"hunit\" does not exist.</p>\n\n<p>Your short solution is <code>cabal v2-install --lib HUnit</code>.\nFor a legacy behavior consider <code>cabal v1-install HUnit</code>.</p>\n\n<p><strong>install is legacy: The big paragraph</strong></p>\n\n<p>Cabal used to install everything into a single store, either user or system wide, and if any package ever disagreed on package version then good luck.  The v2 commands move to a \"nix style build\" where different versions can co-exist in the store and projects can continue to benefit by sharing builds for common packages.  The v2 commands are literally the commands prefixed with <code>v2-</code>, such as <code>v2-install</code>, <code>v2-build</code> and <code>v2-configure</code>.</p>\n\n<p><strong>hunit does not exist</strong></p>\n\n<p>Hackage is case sensitive.  The tool already informed you that you might have intended to install <code>HUnit</code> instead of <code>hunit</code>.</p>\n\n<p><strong>Epilog: Use <code>--lib</code></strong></p>\n\n<p>The <code>v2-install</code> does not expose the built libraries unless installed explicitly via <code>--lib</code>.  This reduces namespace clutter at some expensive of us programmers needing to retrain.  To use HUnit as a library and play with it in the repl, add <code>--lib</code> as shown at the beginning.</p>\n"}], "owner": {"reputation": 3991, "user_id": 6378530, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/5325e39f6f9f2d12029b11d4f8e56a69?s=128&d=identicon&r=PG&f=1", "display_name": "doctopus", "link": "https://stackoverflow.com/users/6378530/doctopus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1100, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1567646995, "creation_date": 1567573102, "question_id": 57781735, "link": "https://stackoverflow.com/questions/57781735/cant-cabal-install-hunit", "title": "Can&#39;t cabal install hunit", "body": "<p>Very new to the Haskell ecosystem here. I'm trying to install hunit but when I run <code>cabal install hunit</code> I get the following message:</p>\n\n<pre><code>Warning: The install command is a part of the legacy v1 style of cabal usage.\n\nPlease switch to using either the new project style and the new-install\ncommand or the legacy v1-install alias as new-style projects will become the\ndefault in the next version of cabal-install. Please file a bug if you cannot\nreplicate a working v1- use case with the new-style commands.\n\nFor more information, see: https://wiki.haskell.org/Cabal/NewBuild\n\ncabal: There is no package named 'hunit'. However, the following package name\nexists: 'HUnit'.\n</code></pre>\n"}, {"tags": ["c", "haskell", "opengl", "glfw"], "comments": [{"owner": {"reputation": 6058, "user_id": 3871028, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfbe44ff5c56628e85683c8918602c96?s=128&d=identicon&r=PG&f=1", "display_name": "Ripi2", "link": "https://stackoverflow.com/users/3871028/ripi2"}, "edited": false, "score": 0, "creation_date": 1567553487, "post_id": 57779502, "comment_id": 101994270, "body": "Does de C version works for OGL3.3? You can also try adding <code>glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</code>"}, {"owner": {"reputation": 846, "user_id": 4904534, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh3.googleusercontent.com/-SY_kYs8we_U/AAAAAAAAAAI/AAAAAAAAAZY/7Ljb0wVhmuA/photo.jpg?sz=128", "display_name": "Ace shinigami", "link": "https://stackoverflow.com/users/4904534/ace-shinigami"}, "reply_to_user": {"reputation": 6058, "user_id": 3871028, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfbe44ff5c56628e85683c8918602c96?s=128&d=identicon&r=PG&f=1", "display_name": "Ripi2", "link": "https://stackoverflow.com/users/3871028/ripi2"}, "edited": false, "score": 1, "creation_date": 1567561256, "post_id": 57779502, "comment_id": 101995500, "body": "no, it doesn&#39;t. Also I&#39;ve tried adding and removing <code>glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</code> and the Haskell equivalent from their respective programs with no success"}, {"owner": {"reputation": 6058, "user_id": 3871028, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfbe44ff5c56628e85683c8918602c96?s=128&d=identicon&r=PG&f=1", "display_name": "Ripi2", "link": "https://stackoverflow.com/users/3871028/ripi2"}, "edited": false, "score": 0, "creation_date": 1567600431, "post_id": 57779502, "comment_id": 102010306, "body": "Old driver may accept only OGL <b>3.2</b> version, and not 3.3 one."}], "answers": [{"comments": [{"owner": {"reputation": 6058, "user_id": 3871028, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfbe44ff5c56628e85683c8918602c96?s=128&d=identicon&r=PG&f=1", "display_name": "Ripi2", "link": "https://stackoverflow.com/users/3871028/ripi2"}, "edited": false, "score": 0, "creation_date": 1567600559, "post_id": 57785760, "comment_id": 102010366, "body": "I frequently  see recomending <code>GLFW_OPENGL_FORWARD_COMPAT</code> on OSX. But the <a href=\"https://developer.apple.com/documentation/appkit/nsopenglpixelformat/1436146-opengl_profiles\" rel=\"nofollow noreferrer\">Apple docs</a> and <a href=\"https://developer.apple.com/documentation/appkit/nsopenglpixelformat/1436213-opengl_pixel_format_attributes\" rel=\"nofollow noreferrer\">Apple docs</a> have not this context flag"}, {"owner": {"reputation": 18062, "user_id": 2579738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oXata.png?s=128&g=1", "display_name": "BDL", "link": "https://stackoverflow.com/users/2579738/bdl"}, "reply_to_user": {"reputation": 6058, "user_id": 3871028, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfbe44ff5c56628e85683c8918602c96?s=128&d=identicon&r=PG&f=1", "display_name": "Ripi2", "link": "https://stackoverflow.com/users/3871028/ripi2"}, "edited": false, "score": 0, "creation_date": 1567601452, "post_id": 57785760, "comment_id": 102010821, "body": "@Ripi2: As far as I know, macOS core profiles are always forward compatible (they don&#39;t implemented non forward compatible profiles). But I have never check it in detail. The glfw doc states: &quot;The OS only supports forward-compatible core profile contexts for OpenGL versions 3.2 and later.  Before creating an OpenGL context of version 3.2 or later you must set the GLFW_OPENGL_FORWARD_COMPAT&quot; (Source: <a href=\"https://github.com/glfw/glfw/blob/a4d910b4a72f3a85d7be42ea2f91162cdfd28375/include/GLFW/glfw3.h\" rel=\"nofollow noreferrer\">glfw3.h:2583</a>)"}], "tags": [], "owner": {"reputation": 18062, "user_id": 2579738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oXata.png?s=128&g=1", "display_name": "BDL", "link": "https://stackoverflow.com/users/2579738/bdl"}, "is_accepted": true, "score": 3, "last_activity_date": 1567590362, "creation_date": 1567590362, "answer_id": 57785760, "question_id": 57779502, "link": "https://stackoverflow.com/questions/57779502/unable-to-create-window-with-opengl-3-3-context-macos-with-glfw-installed-throug/57785760#57785760", "title": "unable to create window with OpenGL 3.3 context macOS with GLFW installed through brew", "body": "<p>When requesting an OpenGL context on MacOS, two additional flags have to be set:</p>\n\n<pre><code>glfwWindowHint (GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);\nglfwWindowHint (GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);\n</code></pre>\n"}], "owner": {"reputation": 846, "user_id": 4904534, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh3.googleusercontent.com/-SY_kYs8we_U/AAAAAAAAAAI/AAAAAAAAAZY/7Ljb0wVhmuA/photo.jpg?sz=128", "display_name": "Ace shinigami", "link": "https://stackoverflow.com/users/4904534/ace-shinigami"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 331, "favorite_count": 0, "accepted_answer_id": 57785760, "answer_count": 1, "score": 1, "last_activity_date": 1567590362, "creation_date": 1567550458, "last_edit_date": 1567553735, "question_id": 57779502, "link": "https://stackoverflow.com/questions/57779502/unable-to-create-window-with-opengl-3-3-context-macos-with-glfw-installed-throug", "title": "unable to create window with OpenGL 3.3 context macOS with GLFW installed through brew", "body": "\n\n<p>I am unable to create GLFW windows with versions past 2.1 after install glfw through brew using the command <code>brew install glfw</code>.</p>\n\n<p>basically my problem is that this code works:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import qualified Graphics.UI.GLFW as GLFW\n\nconfigAndCreateWindow :: IO (Maybe GLFW.Window)\nconfigAndCreateWindow = do              \n    GLFW.windowHint (GLFW.WindowHint'ContextVersionMajor 2)\n    GLFW.windowHint (GLFW.WindowHint'ContextVersionMinor 1)\n    GLFW.createWindow 100 100 \"test\" Nothing Nothing\n\nmain :: IO ()\nmain = do\n    GLFW.init\n    maybeWindow &lt;- configAndCreateWindow\n    case maybeWindow of\n        Nothing -&gt; putStrLn \"Failure :(\"\n        Just _ -&gt; putStrLn \"Success!\"\n</code></pre>\n\n<p>but if I change</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>GLFW.windowHint (GLFW.WindowHint'ContextVersionMajor 2)\nGLFW.windowHint (GLFW.WindowHint'ContextVersionMinor 1)\n</code></pre>\n\n<p>to</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>GLFW.windowHint (GLFW.WindowHint'ContextVersionMajor 3)\nGLFW.windowHint (GLFW.WindowHint'ContextVersionMinor 3)\n</code></pre>\n\n<p>it breaks.</p>\n\n<p>Just to make sure it didn't have to do with GLFW-b I also wrote a c program:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#define GLFW_INCLUDE_GL_3\n#include &lt;GLFW/glfw3.h&gt;\n#include &lt;stdio.h&gt;\n\nint main ()\n{\n    glfwInit();\n\n    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);\n    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);\n\n    GLFWwindow* window = glfwCreateWindow(800, 600, \"GLFW test\", NULL, NULL);\n    if (window == NULL) {\n        printf(\"Success!\");\n    } else {\n        printf(\"Failure :(\");\n    }\n}\n</code></pre>\n\n<p>and if I change context version number it works just like with the Haskell example.</p>\n"}, {"tags": ["haskell", "quickcheck", "io-monad", "servant", "haskell-wai"], "answers": [{"comments": [{"owner": {"reputation": 45723, "user_id": 18243, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/607cfd4a5b41fe6c886c978128b9c03e?s=128&d=identicon&r=PG", "display_name": "Jean-Paul Calderone", "link": "https://stackoverflow.com/users/18243/jean-paul-calderone"}, "edited": false, "score": 0, "creation_date": 1567539561, "post_id": 57777704, "comment_id": 101990567, "body": "This would create one Backend before the spec is run and then re-use it for all tests, I think, which is a behavior I want to avoid since Backend is and the tests mutate it."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 45723, "user_id": 18243, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/607cfd4a5b41fe6c886c978128b9c03e?s=128&d=identicon&r=PG", "display_name": "Jean-Paul Calderone", "link": "https://stackoverflow.com/users/18243/jean-paul-calderone"}, "edited": false, "score": 0, "creation_date": 1567540030, "post_id": 57777704, "comment_id": 101990745, "body": "I think <code>openBackend</code> is <i>too</i> simplified then."}, {"owner": {"reputation": 45723, "user_id": 18243, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/607cfd4a5b41fe6c886c978128b9c03e?s=128&d=identicon&r=PG", "display_name": "Jean-Paul Calderone", "link": "https://stackoverflow.com/users/18243/jean-paul-calderone"}, "edited": false, "score": 0, "creation_date": 1567540652, "post_id": 57777704, "comment_id": 101990943, "body": "I thought making it return an IO plus writing some prose in the question would make it clear enough.  I am trying to change it incorporate this important requirement into the code but the necessary changes aren&#39;t trivial for me."}, {"owner": {"reputation": 45723, "user_id": 18243, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/607cfd4a5b41fe6c886c978128b9c03e?s=128&d=identicon&r=PG", "display_name": "Jean-Paul Calderone", "link": "https://stackoverflow.com/users/18243/jean-paul-calderone"}, "edited": false, "score": 0, "creation_date": 1567541325, "post_id": 57777704, "comment_id": 101991190, "body": "I modified the code so that each iteration of the property should mutate the Backend while the assertion still requires that it receive an unmutated Backend.  Hopefully this captures the intent more precisely."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1567538926, "creation_date": 1567538926, "answer_id": 57777704, "question_id": 57777451, "link": "https://stackoverflow.com/questions/57777451/how-do-i-quickcheck-a-servant-application-that-is-constructed-from-an-io/57777704#57777704", "title": "How do I QuickCheck a Servant Application that is constructed from an IO?", "body": "<p>Define <code>spec_g :: Background -&gt; Spec</code>, then take advantage of <code>IO</code>'s <code>Functor</code> and <code>Monad</code> instances.</p>\n\n<pre><code>main = do\n    spec &lt;- fmap spec_g (openBackend 16) -- fmap spec_g :: IO Background -&gt; IO Spec\n    hspec spec\n</code></pre>\n\n<p>or more concisely,</p>\n\n<pre><code>main = spec_g &lt;$&gt; openBackend 16 &gt;&gt;= hspec\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 45723, "user_id": 18243, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/607cfd4a5b41fe6c886c978128b9c03e?s=128&d=identicon&r=PG", "display_name": "Jean-Paul Calderone", "link": "https://stackoverflow.com/users/18243/jean-paul-calderone"}, "edited": false, "score": 0, "creation_date": 1567597032, "post_id": 57778887, "comment_id": 102008402, "body": "Cool.  I&#39;d like to see that blog post when it&#39;s ready. :)  Regarding <code>with</code>, I definitely saw that and have written a bunch of Servant-using tests in that way.  But I also think I determined that it is just an alias for <code>before</code> and I couldn&#39;t see how using it or not would matter.  In the light of a new day it seems pretty obvious that without <code>app</code> in the property <i>somewhere</i> this isn&#39;t going to work...  I will read through your properties carefully today and see what I can make of them.  Thanks."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 45723, "user_id": 18243, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/607cfd4a5b41fe6c886c978128b9c03e?s=128&d=identicon&r=PG", "display_name": "Jean-Paul Calderone", "link": "https://stackoverflow.com/users/18243/jean-paul-calderone"}, "edited": false, "score": 0, "creation_date": 1567621477, "post_id": 57778887, "comment_id": 102021005, "body": "@Jean-PaulCalderone I&#39;m currently thinking that I might be publishing that article on September 23, and I&#39;ll try to remember adding a link here when I do so. If you want a copy of the raw code before that, please <a href=\"https://blog.ploeh.dk/about/#contact\" rel=\"nofollow noreferrer\">send me an email</a>."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 45723, "user_id": 18243, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/607cfd4a5b41fe6c886c978128b9c03e?s=128&d=identicon&r=PG", "display_name": "Jean-Paul Calderone", "link": "https://stackoverflow.com/users/18243/jean-paul-calderone"}, "edited": false, "score": 1, "creation_date": 1569221009, "post_id": 57778887, "comment_id": 102511054, "body": "@Jean-PaulCalderone FWIW, <a href=\"https://blog.ploeh.dk/2019/09/23/unit-testing-wai-applications\" rel=\"nofollow noreferrer\">the article is now online</a>."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 0, "last_activity_date": 1567545659, "creation_date": 1567545659, "answer_id": 57778887, "question_id": 57777451, "link": "https://stackoverflow.com/questions/57777451/how-do-i-quickcheck-a-servant-application-that-is-constructed-from-an-io/57778887#57778887", "title": "How do I QuickCheck a Servant Application that is constructed from an IO?", "body": "<p>IIRC, you're supposed to run each spec or property with the <a href=\"http://hackage.haskell.org/package/hspec-wai-0.9.2/docs/Test-Hspec-Wai.html#v:with\" rel=\"nofollow noreferrer\">with</a> function. Here's a few properties I wrote some time ago:</p>\n\n<pre><code>  with app $ describe \"/reservations/\" $ do\n    it \"responds with 404 when no reservation exists\" $ WQC.property $ \\rid -&gt;\n      get (\"/reservations/\" &lt;&gt; toASCIIBytes rid) `shouldRespondWith` 404\n\n    it \"responds with 200 after reservation is added\" $ WQC.property $ \\\n      (ValidReservation r) -&gt; do\n      _ &lt;- postJSON \"/reservations\" $ encode r\n      let actual = get $ \"/reservations/\" &lt;&gt; toASCIIBytes (reservationId r)\n      actual `shouldRespondWith` 200\n</code></pre>\n\n<p>The <code>app</code> value serves the service, and as far as I recall, it runs the <code>IO</code> action for each test. I did it with an in-memory database using an <code>IORef</code>, and that seems to be working just fine:</p>\n\n<pre><code>app :: IO Application\napp = do\n  ref &lt;- newIORef Map.empty\n  return $\n    serve api $\n    hoistServer api (Handler . runInFakeDBAndIn2019 ref) $\n    server 150 []\n</code></pre>\n\n<p>The <code>WQC.property</code> function is from a qualified import:</p>\n\n<pre><code>import qualified Test.Hspec.Wai.QuickCheck as WQC\n</code></pre>\n\n<p>I wasn't too happy, however, with the way I had to structure my tests and properties with HSpec, so I ultimately rewrote all the tests to be driven by HUnit. I've an upcoming blog post that describes this, but I haven't published it yet.</p>\n"}], "owner": {"reputation": 45723, "user_id": 18243, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/607cfd4a5b41fe6c886c978128b9c03e?s=128&d=identicon&r=PG", "display_name": "Jean-Paul Calderone", "link": "https://stackoverflow.com/users/18243/jean-paul-calderone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1567545750, "creation_date": 1567537629, "last_edit_date": 1567545750, "question_id": 57777451, "link": "https://stackoverflow.com/questions/57777451/how-do-i-quickcheck-a-servant-application-that-is-constructed-from-an-io", "title": "How do I QuickCheck a Servant Application that is constructed from an IO?", "body": "<p>I am writing an API server using Servant.  The server includes persistent state.  I would like to use QuickCheck to write tests for the server.</p>\n\n<p>The implementation of various endpoints that make up the Servant Application require a database value.  Unsurprisingly, creation of the database value is in the <code>IO</code> monad.</p>\n\n<p>I don't understand how to combine the pieces from Hspec, Wai, QuickCheck, and Servant in a way that satisfies them all.</p>\n\n<p>I see that I can perform an IO as part of creating the Hspec Spec itself and I see that I can specify that an IO be performed before each item in the Hspec Spec.  Neither of these capabilities seems helpful in this case.  The IO needs to be performed for each QuickCheck iteration of the property.  Without this, the database accumulates state from each iteration which invalidates the definition of the property (or at least makes it greatly more complicated).</p>\n\n<p>Below is my attempt to create a minimal, self-contained example of this scenario.</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE FlexibleContexts #-}\n\nmodule Main where\n\nimport Data.IORef\nimport Test.QuickCheck\nimport Test.QuickCheck.Monadic\nimport qualified Test.Hspec.Wai.QuickCheck as QuickWai\nimport Test.Hspec\nimport Test.Hspec.Wai\nimport Text.Printf\nimport Servant\nimport Servant.API\nimport Data.Aeson\nimport Data.Text.Encoding\nimport Data.ByteString.UTF8\n  ( fromString\n  )\n\ndata Backend = Backend (IORef Integer)\n\nopenBackend :: Integer -&gt; IO Backend\nopenBackend n = Backend &lt;$&gt; newIORef n\n\ndata Acknowledgement = Ok Integer\n\ninstance ToJSON Acknowledgement where\n  toJSON (Ok n) = object [ \"value\" .= n ]\n\nserveSomeNumber :: Backend -&gt; Integer -&gt; IO Acknowledgement\nserveSomeNumber (Backend a) b = do\n  a' &lt;- readIORef a\n  modifyIORef a (\\n -&gt; n + 1)\n  return $ Ok (a' + b)\n\ntype TheAPI = Capture \"SomeNumber\" Integer :&gt; Post '[JSON] Acknowledgement\n\ntheServer :: Backend -&gt; Server TheAPI\ntheServer backend = liftIO . serveSomeNumber backend\n\ntheAPI :: Proxy TheAPI\ntheAPI = Proxy\n\napp :: Backend -&gt; Application\napp backend = serve theAPI (theServer backend)\n\npost' n =\n  let\n    url = printf \"/%d\" (n :: Integer)\n    encoded = fromString url\n  in\n    post encoded \"\"\n\nspec_g :: Backend -&gt; Spec\nspec_g (Backend expectedResult) =\n  describe \"foo\" $\n  it \"bar\" $ property $ \\genN -&gt; monadicIO $ do\n  n &lt;- run genN\n  m &lt;- run $ readIORef expectedResult\n  post' n `shouldRespondWith` ResponseMatcher { matchStatus = fromInteger (n + m) }\n\nmain :: IO ()\nmain = do\n  spec_g' &lt;- spec_g `fmap` openBackend 16\n  hspec spec_g'\n</code></pre>\n\n<p>This doesn't type check:</p>\n\n<pre><code>/home/exarkun/Scratch/QuickCheckIOApplication/test/Spec.hs:119:3: error:\n    * Couldn't match type `WaiSession' with `PropertyM IO'\n      Expected type: PropertyM IO ()\n        Actual type: WaiExpectation\n    * In a stmt of a 'do' block:\n        post' n\n          `shouldRespondWith`\n            ResponseMatcher {matchStatus = fromInteger (n + m)}\n      In the second argument of `($)', namely\n        `do n &lt;- run genN\n            m &lt;- run $ readIORef expectedResult\n            post' n\n              `shouldRespondWith`\n                ResponseMatcher {matchStatus = fromInteger (n + m)}'\n      In the expression:\n        monadicIO\n          $ do n &lt;- run genN\n               m &lt;- run $ readIORef expectedResult\n               post' n\n                 `shouldRespondWith`\n                   ResponseMatcher {matchStatus = fromInteger (n + m)}\n    |\n119 |   post' n `shouldRespondWith` ResponseMatcher { matchStatus = fromInteger (n + m) }\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I don't know if there is a way to fit a <code>WaiExpectation</code> into a <code>PropertyM IO ()</code> at all.  I don't even know if <code>monadicIO</code> is helpful here at all.</p>\n\n<p>How can I fit these pieces together?</p>\n"}, {"tags": ["haskell", "recursion", "order-of-execution", "recursion-schemes"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1567532889, "post_id": 57776420, "comment_id": 101988107, "body": "<code>unfoldr</code>? <code>ana</code>?"}, {"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567533040, "post_id": 57776420, "comment_id": 101988169, "body": "@chi I might have expressed myself too broadly - let&#39;s just focus on the <code>cata</code> part of the family"}], "answers": [{"comments": [{"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1567537950, "post_id": 57776713, "comment_id": 101989991, "body": "Could you perhaps add an example of such manipulation of <code>cata</code>?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1567540031, "post_id": 57776713, "comment_id": 101990747, "body": "@Welperooni <code>foldr = cata</code>, so there already is an example in this answer."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1567540413, "post_id": 57776713, "comment_id": 101990864, "body": "Indeed, <code>foldr</code> is <code>cata</code>, though I also added another example with trees, hope that helps."}, {"owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "edited": false, "score": 0, "creation_date": 1567543920, "post_id": 57776713, "comment_id": 101992086, "body": "it&#39;s a correct answer, but the problem is that it requires us to remove clarity from a solution that gave us above all a very clear way to express business logic and I hoped we could preserve that. <i>sigh</i>"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 11, "last_activity_date": 1567540363, "last_edit_date": 1567540363, "creation_date": 1567533841, "answer_id": 57776713, "question_id": 57776420, "link": "https://stackoverflow.com/questions/57776420/top-down-recursion-schemes/57776713#57776713", "title": "Top-down recursion schemes", "body": "<p>Although it's a common belief that <code>cata</code> works \"bottom-up\", it can actually express many \"top-down\" constructions, by instantiating the carrier with a function whose parameter is the information being passed \"top-down\":</p>\n\n<pre><code>cata :: (F  c       -&gt;  c      ) -&gt; Fix F -&gt; c       -- general signature\n     :: (F (i -&gt; d) -&gt; (i -&gt; d)) -&gt; Fix F -&gt; i -&gt; d  -- with  c = (i -&gt; d)\n</code></pre>\n\n<hr>\n\n<p>That's how you can implement <code>foldl</code> or <code>reverse</code> using <code>foldr</code> (which is <code>cata</code> for lists).</p>\n\n<pre><code>--   foldl :: (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; b\n-- using\n--   foldr :: (a -&gt; (b -&gt; b) -&gt; (b -&gt; b)) -&gt; (b -&gt; b) -&gt; [a] -&gt; b -&gt; b\n\nfoldl f b xs = foldr (\\x go z -&gt; go (f z x)) id xs b\n</code></pre>\n\n<hr>\n\n<p>Here's another example to label a tree by depth, counting from the root:</p>\n\n<pre><code>data Tree a = Node (Tree a) a (Tree a) | Leaf\n\nmakeBaseFunctor ''Tree  -- recursion-schemes\n\nbyDepth :: Tree a -&gt; Tree Integer\nbyDepth t = cata byDepthF t 0 where\n  byDepthF :: TreeF a (Integer -&gt; Tree Integer) -&gt; Integer -&gt; Tree Integer\n  byDepthF (NodeF u _ v) !d = Node (u (d + 1)) d (v (d + 1))\n  byDepthF LeafF = Leaf\n</code></pre>\n"}], "owner": {"reputation": 611, "user_id": 9367559, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mgpFwCPW8cw/AAAAAAAAAAI/AAAAAAAAAH4/EdHgRBgrxoE/photo.jpg?sz=128", "display_name": "Welperooni", "link": "https://stackoverflow.com/users/9367559/welperooni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 239, "favorite_count": 0, "accepted_answer_id": 57776713, "answer_count": 1, "score": 1, "last_activity_date": 1567540363, "creation_date": 1567532266, "question_id": 57776420, "link": "https://stackoverflow.com/questions/57776420/top-down-recursion-schemes", "title": "Top-down recursion schemes", "body": "<p>Can we define a recursion scheme (without losing any of their generality) that <strong><em>constructs the value top-down</em></strong>, instead of bottom-up?</p>\n\n<p>This would be quite helpful as I've seen plenty of times where the function, defined internally with a recursion scheme was first applying <code>reverse</code> to its input, clearly signalling the need for a <code>foldl</code>-like \"front to back\" execution.</p>\n"}, {"tags": ["haskell", "lambda", "syntax", "function-composition"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1567518719, "post_id": 57772488, "comment_id": 101981366, "body": "Maybe it&#39;s easier to read that type as <code>(.) :: Fun1 -&gt; Fun2 -&gt; Fun3</code>, i.e. <code>(.)</code> takes an argument of type <code>Fun1</code> (a function), then another argument of type <code>Fun2</code> (another function), and returns a value of type <code>Fun3</code> (yet another function, the &quot;composed&quot; one). Concretely, <code>Fun1 = (b-&gt;c)</code>, <code>Fun2=(a-&gt;b)</code>, and <code>Fun3 = (a-&gt;c)</code>. Indeed, you can add parentheses around <code>a-&gt;c</code> in your type -- they are implicit."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1567600959, "post_id": 57772488, "comment_id": 102010546, "body": "to your syntactical question, there is no <code>\\ x -&gt;</code> on its own; there&#39;s an implied pair of parentheses there that go to the right as far as possible, so <code>f . g = \\ x -&gt; f (g x)</code> is actually <code>f . g = (\\ x -&gt; f (g x) )</code>, a lambda (notation for a) function."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1567614274, "post_id": 57772597, "comment_id": 102018101, "body": "The reason it&#39;s defined using an explicit lambda has to do with fine details of program optimization in the GHC compiler. You definitely don&#39;t have to worry about that stuff as a beginner, but it&#39;s helpful that the people writing critical library functions <i>do</i> think about it so your code goes faster."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 7, "last_activity_date": 1567522877, "last_edit_date": 1567522877, "creation_date": 1567516673, "answer_id": 57772597, "question_id": 57772488, "link": "https://stackoverflow.com/questions/57772488/how-does-function-composition-work-from-within/57772597#57772597", "title": "How does function composition (.) work from within?", "body": "<p><code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; c</code> would be a function that takes two functions <code>f :: b -&gt; c</code> and <code>g :: a -&gt; b</code>, and somehow call <code>g</code> without an initial argument of type <code>a</code>. </p>\n\n<p>For the second question, consider how you would define <code>(.)</code> using prefix notation instead. (It might be easier to see if we use a \"regular\" name for the function; I'll include that as a comment after each snippet of code):</p>\n\n<pre><code>(.) f g x = f (g x)    -- compose f g x = f (g x)\n</code></pre>\n\n<p><code>x</code> is the \"third argument\" for <code>(.)</code>, or more precisely the argument for the function returned by <code>(.) f g</code>. This is equivalent to defining <code>(.) f g</code> as a function directly, by putting a function on the right-hand side instead of the ultimate return value of that function:</p>\n\n<pre><code>(.) f g x =       f (g x)  -- Implicit function def: compose f g x =       f (g x)\n(.) f g   = \\x -&gt; f (g x)  -- Explicit function def: compose f g   = \\x -&gt; f (g x)\n</code></pre>\n\n<p>You can also use parentheses to define the function implicitly:</p>\n\n<pre><code>(f . g) x = f (g x)\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 11755504, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-iT-mTYzBHoA/AAAAAAAAAAI/AAAAAAAAACo/WKRj-Dvz0MQ/photo.jpg?sz=128", "display_name": "Mitrael Kankan", "link": "https://stackoverflow.com/users/11755504/mitrael-kankan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 57772597, "answer_count": 1, "score": 4, "last_activity_date": 1567601045, "creation_date": 1567516314, "last_edit_date": 1567601045, "question_id": 57772488, "link": "https://stackoverflow.com/questions/57772488/how-does-function-composition-work-from-within", "title": "How does function composition (.) work from within?", "body": "<p>I am studying Haskell. Currently, I am studying function composition. I understand (at least on a basic level) how function <code>(.)</code> can be used, but there are two things to it that I understand not.</p>\n\n<p>So the function looks as follows:</p>\n\n<pre><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\nf . g = \\x -&gt; f (g x)\n</code></pre>\n\n<p>First, the type declaration. <code>(b -&gt; c) -&gt; (a -&gt; b)</code> essentially means that function <code>f</code> takes an argument from resulting value (<code>b</code>) of function <code>g</code> (which takes value <code>a</code>) and returns value of type <code>c</code>. I don't understand the following part <code>-&gt; a -&gt; c</code>, why should there be <code>-&gt; a</code> there? Why is <code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; c</code> wrong? From my point of view (which is obviously wrong), function <code>g</code> is already taking <code>a</code> as an argument.</p>\n\n<p>Second, the body of the function <code>f . g = \\x -&gt; f (g x)</code>. What does <code>\\x -&gt;</code> do here? Lambda is pretty straightforward. For example <code>filter (\\(a,b) -&gt; a + b &gt; 4) [(1,2),(3,4)]</code>, but a simple <code>\\x -&gt;</code> makes me stuck. I would probably write the body like this <code>f . (g x) = f (g x)</code> (which is obviously wrong again).</p>\n"}, {"tags": ["haskell", "fibonacci", "zipwith"], "comments": [{"owner": {"reputation": 25661, "user_id": 430766, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ee7e736eeb33c4b03d4a5e6e813a9abc?s=128&d=identicon&r=PG", "display_name": "bitmask", "link": "https://stackoverflow.com/users/430766/bitmask"}, "edited": false, "score": 2, "creation_date": 1567506265, "post_id": 57769712, "comment_id": 101974511, "body": "Your <code>[b]</code> list is not shorter. Both sides have infinite length."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1567506766, "post_id": 57769712, "comment_id": 101974806, "body": "Related: <a href=\"https://stackoverflow.com/q/37243102/4942760\">stackoverflow.com/q/37243102/4942760</a> and <a href=\"https://stackoverflow.com/q/26843529/4942760\">stackoverflow.com/q/26843529/4942760</a>"}], "answers": [{"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": false, "score": 3, "last_activity_date": 1567506525, "creation_date": 1567506525, "answer_id": 57769834, "question_id": 57769712, "link": "https://stackoverflow.com/questions/57769712/elegant-way-in-haskell-to-output-fibonacci-numbers-using-zipwith/57769834#57769834", "title": "Elegant way in Haskell to output Fibonacci numbers using zipWith", "body": "<p>The lists don\u2019t have changing lengths. The length is always infinity, we just don\u2019t know about most of the elements.</p>\n\n<p>First recall that the following are equivalent:</p>\n\n<pre><code>[1,2,3]\n1:2:3:[]\n</code></pre>\n\n<p>In this case we will write <code>...</code> for the tail of the list which has not yet been evaluated. So initially we have</p>\n\n<pre><code>fibs = 0 : 1 : ...\n</code></pre>\n\n<p>And to inspect the <code>...</code> (to see if it is <code>[]</code> or something that looks like <code>n : ...</code>), we evaluate some of the call to <code>zipWith</code></p>\n\n<p>Now consider what <code>zipWith</code> will do:</p>\n\n<pre><code>fibs = 0 : 1 : zipWith (+) fibs (tail fibs)\n  = 0 : 1 : zipWith (+) (0 : 1 : ...) (1 : ...)\n  = 0 : 1 : (0+1) : zipWith (+) (1 : (0+1) : ...) ((0+1) : ...)\n</code></pre>\n\n<p>But note, of course, that these evaluation steps only happen as one iterates through the elements of fibs (e.g. evaluating <code>take 5 fibs</code> will evaluate the first steps)</p>\n"}, {"comments": [{"owner": {"reputation": 25661, "user_id": 430766, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ee7e736eeb33c4b03d4a5e6e813a9abc?s=128&d=identicon&r=PG", "display_name": "bitmask", "link": "https://stackoverflow.com/users/430766/bitmask"}, "edited": false, "score": 1, "creation_date": 1567510115, "post_id": 57769902, "comment_id": 101976572, "body": "Phenomenal answer."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1567507929, "last_edit_date": 1567507929, "creation_date": 1567506787, "answer_id": 57769902, "question_id": 57769712, "link": "https://stackoverflow.com/questions/57769712/elegant-way-in-haskell-to-output-fibonacci-numbers-using-zipwith/57769902#57769902", "title": "Elegant way in Haskell to output Fibonacci numbers using zipWith", "body": "<p>The <em>entire</em> list is added eventually. In Haskell you do <em>not</em> assign a value to a variable. You <em>declare</em> a variable, and you can not change the value of a variable since these are immutable. The list is thus <em>not</em> <code>[0, 1]</code>, it is <code>[0, 1, &hellip;]</code>, with <code>&hellip;</code> something that is at that moment not evaluated yet.</p>\n\n<p>Initially the list thus looks like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n    \u25bc           \u25bc                     | \u2502\n\u250c---\u253c---\u2510   \u250c---\u253c---\u2510   \u250c-----------\u2510 | \u2502\n| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6|  zipWith  | | \u2502\n\u2514-\u2502-\u2534---\u2518   \u2514-\u2502-\u2534---\u2518   \u251c-----------\u2524 | \u2502\n  \u25bc           \u25bc         |(+)| \u2219 | \u2219 | | \u2502\n  0           1         \u2514-----\u2502---\u2502-\u2518 | \u2502\n                              \u2502   \u2514\u2500\u2500\u2500\u2518 \u2502\n                              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>\n\n<p>If you later decide to evaluate the next item of the list, <code>zipWith</code> will calculate the sum of the heads of the lists to which it refers, so <code>[0,1,&hellip;]</code> and <code>[1,&hellip;]</code>, which is one. It will thus emit <code>1</code>, and recurse on the tails of the two lists:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>                \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                \u2502           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n                \u25bc           \u25bc                     | \u2502\n\u250c---\u252c---\u2510   \u250c---\u253c---\u2510   \u250c---\u253c---\u2510   \u250c-----------\u2510 | \u2502\n| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6|  zipWith  | | \u2502\n\u2514-\u2502-\u2534---\u2518   \u2514-\u2502-\u2534---\u2518   \u2514-\u2502-\u2534---\u2518   \u251c-----------\u2524 | \u2502\n  \u25bc           \u25bc           \u25bc         |(+)| \u2219 | \u2219 | | \u2502\n  0           1           1         \u2514-----\u2502---\u2502-\u2518 | \u2502\n                                          \u2502   \u2514\u2500\u2500\u2500\u2518 \u2502\n                                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>\n\n<p>So now the list is <code>[0,1,1,&hellip;]</code>. If we then force the system to evaluate the next item, it will again sum up the heads of the lists, so <code>[1,1,&hellip;]</code> and <code>[1,&hellip;]</code>, which is <code>2</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>                            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                            \u2502           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n                            \u25bc           \u25bc                     | \u2502\n\u250c---\u252c---\u2510   \u250c---\u252c---\u2510   \u250c---\u253c---\u2510   \u250c---\u253c---\u2510   \u250c-----------\u2510 | \u2502\n| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6| \u2219 | \u2219\u2500\u2500\u2500\u2500\u25b6|  zipWith  | | \u2502\n\u2514-\u2502-\u2534---\u2518   \u2514-\u2502-\u2534---\u2518   \u2514-\u2502-\u2534---\u2518   \u2514-\u2502-\u2534---\u2518   \u251c-----------\u2524 | \u2502\n  \u25bc           \u25bc           \u25bc           \u25bc         |(+)| \u2219 | \u2219 | | \u2502\n  0           1           1           2         \u2514-----\u2502---\u2502-\u2518 | \u2502\n                                                      \u2502   \u2514\u2500\u2500\u2500\u2518 \u2502\n                                                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>\n\n<p>and so on. The list is thus an infinite list, but the tail is evaluated lazily.</p>\n"}], "owner": {"reputation": 491, "user_id": 5567931, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/95opM.jpg?s=128&g=1", "display_name": "Jan Kreischer", "link": "https://stackoverflow.com/users/5567931/jan-kreischer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "closed_date": 1567508239, "accepted_answer_id": 57769902, "answer_count": 2, "score": 1, "last_activity_date": 1567508305, "creation_date": 1567506069, "question_id": 57769712, "link": "https://stackoverflow.com/questions/57769712/elegant-way-in-haskell-to-output-fibonacci-numbers-using-zipwith", "closed_reason": "Duplicate", "title": "Elegant way in Haskell to output Fibonacci numbers using zipWith", "body": "<p>I saw this implementation of the Fibonacci numbers in Haskell and I am still trying to figure out why this works properly. So apperently, the Fibonacci numbers can be written in a very compact way using the <strong>zipWith</strong> function. The implementation looks like the following</p>\n\n<pre><code>fibs = 0 : 1 : zipWith (+) fibs (tail fibs)\n</code></pre>\n\n<p>To understand better what is happening here I looked at the documentation of the <strong>zipWith</strong> function. This function adds two lists [a], [b] together using the given function (a -> b -> c). In our case the function is a simple addition. If the two lists [a] and [b] have different length (in our case list [b] is always one element shorted than list [a]) zipWith simply starts at the beginning of both lists and adds them. If the end of one list is reached it just stops no matter if the end of the other list is already reached.</p>\n\n<p>In the first step of the recursion zipWith is called with [0,1] and tail[0,1] = [1]. This leads to another 1 => [0, 1, 1]. In the second step of the recursion zipWith gets called with [0,1,1] and [1,1] resulting in [0+1,1+1] = [1,2]. So for me it is clear that the recursion creates the right fibonacci numbers but I don't fully understand why only the last number after the zipWith step is added to the result and not the whole list. Maybe someone can explain it to me. That would be super helpful. Thank you very much.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 12013546, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mA-ndxtE7Ntla1w0G_EPZj-ftz3E2xa1oAqSunLkA=k-s128", "display_name": "Kevin Lee", "link": "https://stackoverflow.com/users/12013546/kevin-lee"}, "edited": false, "score": 0, "creation_date": 1567539163, "post_id": 57768372, "comment_id": 101990403, "body": "Ah, okay I understand. Thanks for enlightening me."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1572075549, "last_edit_date": 1572075549, "creation_date": 1567501348, "answer_id": 57768372, "question_id": 57768299, "link": "https://stackoverflow.com/questions/57768299/couldnt-match-expected-type-a1-with-actual-type-a1-a1/57768372#57768372", "title": "Couldn&#39;t match expected type `[a1]&#39; with actual type `([a1], [a1])&#39;", "body": "<p>This is logical, since here your <code>deal xs</code> and <code>deal ys</code> will return, given the signature a 2-tuple of lists, and <code>xs</code> has type <code>[a]</code>. Note that by using the same name, you here made a recursive expression, which will not work. Using the same name multiple times is not a good idea. If you turn on warnings, the compiler will normally warn against that.</p>\n\n<p>You probably want to call <code>deal</code> on the <code>rest</code> of the list, and then retrieve the two lists that you use as tails:</p>\n\n<pre><code>deal :: [a] -&gt; ([a],[a])\ndeal [] = ([], [])\ndeal [x] = ([x], [])\ndeal (x:y:<b>rest</b>) = (x:xs, y:ys)\n    where <b>(xs, ys)</b> = deal <b>rest</b></code></pre>\n\n<p>or we can make use of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Arrow.html#v:-42--42--42-\" rel=\"nofollow noreferrer\"><strong><code>(***) :: a b c -&gt; a b' c' -&gt; a (b, b') (c, c')</code></strong></a>:</p>\n\n<pre><code>import Control.Arrow((***))\n\ndeal :: [a] -&gt; ([a],[a])\ndeal [] = ([], [])\ndeal [x] = ([x], [])\ndeal (x:y:rest) = ((x:) *** (y:)) (deal rest)</code></pre>\n\n<p>an alternative is to each time swap the tuple, and append to the other side:</p>\n\n<pre><code>import Control.Arrow(first)\nimport Data.Tuple(swap)\n\ndeal :: [a] -&gt; ([a],[a])\ndeal [] = ([], [])\ndeal (x:xs) = first (x:) (swap (deal xs))</code></pre>\n\n<p>we can thus define this as a <code>foldr</code> pattern:</p>\n\n<pre><code>import Control.Arrow(first)\nimport Data.Tuple(swap)\n\ndeal :: Foldable f =&gt; f a -&gt; ([a],[a])\ndeal [] = foldr ((. swap) . first . (:)) ([], [])</code></pre>\n\n<p>This gives us the expected result:</p>\n\n<pre><code>Prelude&gt; deal [1,2,3,4,5,6,7]\n([1,3,5,7],[2,4,6])\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 12013546, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mA-ndxtE7Ntla1w0G_EPZj-ftz3E2xa1oAqSunLkA=k-s128", "display_name": "Kevin Lee", "link": "https://stackoverflow.com/users/12013546/kevin-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 57768372, "answer_count": 1, "score": 1, "last_activity_date": 1572075549, "creation_date": 1567501046, "last_edit_date": 1567502820, "question_id": 57768299, "link": "https://stackoverflow.com/questions/57768299/couldnt-match-expected-type-a1-with-actual-type-a1-a1", "title": "Couldn&#39;t match expected type `[a1]&#39; with actual type `([a1], [a1])&#39;", "body": "<p>I am new to coding with Haskell and am stuck on this code that my professor wanted us to write. I am supposed to deal a single list into a pair of lists like so:</p>\n\n<pre><code>deal [1,2,3,4,5,6,7] = ([1,3,5,7], [2,4,6])\n</code></pre>\n\n<p>but I am getting this error on my 'xs' and also 'ys'</p>\n\n<pre><code>* Couldn't match expected type `[a1]'\n                  with actual type `([a1], [a1])'\n    * In the expression: deal xs\n      In an equation for `xs': xs = deal xs\n      In an equation for `deal':\n          deal (x : y : xs : ys)\n            = (x : xs, y : ys)\n            where\n                xs = deal xs\n                ys = deal ys\n    * Relevant bindings include xs :: [a1] (bound at lab2.hs:16:17)\n   |\n   |                 xs = deal xs\n   |                      ^^^^^^^\n</code></pre>\n\n<p>Here is my code:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>deal :: [a] -&gt; ([a],[a])\ndeal [] = ([], [])\ndeal [x] = ([x], [])\ndeal (x:y:xs:ys) = (x:xs,y:ys)\n    where\n        xs = deal xs\n        ys = deal ys\n</code></pre>\n"}, {"tags": ["haskell", "conduit", "haskell-warp", "typed-process"], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 0, "last_activity_date": 1567778822, "last_edit_date": 1567778822, "creation_date": 1567630659, "answer_id": 57795555, "question_id": 57765173, "link": "https://stackoverflow.com/questions/57765173/how-to-pipe-typed-process-to-wai-conduits-responsesource/57795555#57795555", "title": "How to Pipe Typed Process to wai-conduit&#39;s responseSource?", "body": "<p><code>responseSource</code> has type</p>\n\n<blockquote>\n  <p>responseSource :: Status -> ResponseHeaders -> Source IO (Flush\n  Builder) -> Response</p>\n</blockquote>\n\n<p>and the definition of <a href=\"https://www.stackage.org/haddock/nightly-2019-08-17/conduit-1.3.1.1/Data-Conduit.html#t:Flush\" rel=\"nofollow noreferrer\"><code>Flush</code></a> is </p>\n\n<blockquote>\n  <p>data Flush a = Chunk a | Flush</p>\n</blockquote>\n\n<p>That is, a value of type <code>Flush Builder</code> is either a <code>Builder</code> or a command that instructs <em>warp</em> to flush the output stream.</p>\n\n<p><a href=\"https://www.stackage.org/haddock/nightly-2019-08-17/binary-0.8.6.0/Data-Binary-Builder.html#t:Builder\" rel=\"nofollow noreferrer\"><code>Builder</code></a> is from the <a href=\"https://www.stackage.org/haddock/nightly-2019-08-17/binary-0.8.6.0/Data-Binary-Builder.html#t:Builder\" rel=\"nofollow noreferrer\">binary</a> package. It's basically a representation of a chunk of bytes, optimized for efficient concatenation. And it can be constructed from a <code>ByteString</code>, using the <a href=\"https://www.stackage.org/haddock/nightly-2019-08-17/binary-0.8.6.0/Data-Binary-Builder.html#v:fromByteString\" rel=\"nofollow noreferrer\"><code>fromByteString</code></a> function.</p>\n\n<p>Knowing that, and using <a href=\"https://www.stackage.org/haddock/nightly-2019-08-17/conduit-1.3.1.1/Conduit.html#v:mapC\" rel=\"nofollow noreferrer\"><code>mapC</code></a> from <em>conduit</em>, we can define this adapter:</p>\n\n<pre><code>adapter :: :: Monad m =&gt; ConduitT ByteString (Flush Builder) m ()\nadapter = mapC (Chunk . fromByteString) \n</code></pre>\n\n<p>There's a problem though, the adapter never flushes. But we can intersperse flusing commands by means of <a href=\"https://www.stackage.org/haddock/nightly-2019-08-17/conduit-1.3.1.1/Conduit.html#v:intersperseC\" rel=\"nofollow noreferrer\"><code>intersperseC</code></a>:</p>\n\n<pre><code>adapter :: :: Monad m =&gt; ConduitT ByteString (Flush Builder) m ()\nadapter = mapC (Chunk . fromByteString) .| intersperseC Flush\n</code></pre>\n\n<p>And what if we don't want to flush after every chunk? Perhaps we could use <a href=\"https://www.stackage.org/haddock/nightly-2019-08-17/conduit-1.3.1.1/Conduit.html#v:chunksOfCE\" rel=\"nofollow noreferrer\"><code>chunksOfCE</code></a> to group the byte chunks before converting them into <code>Flush</code> values.</p>\n"}], "owner": {"reputation": 29, "user_id": 3795789, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/677e5b544c304e55b745c1c130543325?s=128&d=identicon&r=PG&f=1", "display_name": "0xnick1chandoke", "link": "https://stackoverflow.com/users/3795789/0xnick1chandoke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 57795555, "answer_count": 1, "score": 0, "last_activity_date": 1576320065, "creation_date": 1567485971, "last_edit_date": 1576320065, "question_id": 57765173, "link": "https://stackoverflow.com/questions/57765173/how-to-pipe-typed-process-to-wai-conduits-responsesource", "title": "How to Pipe Typed Process to wai-conduit&#39;s responseSource?", "body": "<p>I want to have warp run a process, then respond with that process' output. The output is assumed to be larger than the server's RAM; loading the entire output then responding is not an option. I'd thought that I could accomplish this using something like</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>withProcessWait_ (setStdout createSource \"cat largefile\") (pure . responseSource ok200 [] . getStdout)\n</code></pre>\n\n<p>but <a href=\"https://www.stackage.org/haddock/nightly-2019-08-17/wai-conduit-3.0.0.4/Network-Wai-Conduit.html#v:responseSource\" rel=\"nofollow noreferrer\"><code>responseSource</code></a> uses <code>ConduitT i (Flush Builder) IO ()</code> and <a href=\"https://hackage.haskell.org/package/conduit-extra-1.3.4/docs/Data-Conduit-Process-Typed.html#v:createSource\" rel=\"nofollow noreferrer\"><code>createSource</code></a> uses <code>ConduitT i ByteString m ()</code>. I could not figure how to convert a <code>ByteString</code> conduit to a <code>Flush Builder</code> conduit.</p>\n\n<hr>\n\n<p>So I devised a solution that seems to work, but it's regrettably less simply defined:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>responseProcess :: Status -&gt; ResponseHeaders -&gt; ProcessConfig in out err -&gt; Response\nresponseProcess s hs cfg = responseStream s hs $ \\send flush -&gt;                                                                                                                                \n     withProcessWait_ (setStdout createPipe cfg) $ \\p@(getStdout -&gt; h) -&gt;\n         let loop = do\n             bs &lt;- hGetSome h defaultChunkSize\n             unless (BS.null bs) (send (byteString bs) *&gt; flush *&gt; loop)\n         in loop *&gt; hClose h \n</code></pre>\n\n<p>. Is this necessary, even if I may try prettying-it-up by wrapping in <a href=\"https://hackage.haskell.org/package/typed-process-0.2.6.0/docs/System-Process-Typed.html#v:mkStreamSpec\" rel=\"nofollow noreferrer\"><code>mkStreamSpec</code></a> or something? Or is there a simpler method I'm missing?</p>\n\n<hr>\n\n<p><strong>edit</strong>: comments on the solution:</p>\n\n<p><code>intersperseC</code> lets me use <code>Chunk</code> and <code>Flush</code> together. That solves the <code>Flush Builder</code>/<code>ByteString</code> conversion problem. I haven't tested it, but it looks right and I trust it's been used.</p>\n\n<p>However, I found that</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>withProcessWait_ (setStdout createSource \"cat largefile\") $ \\p -&gt;\n    responseSource ok200 [] (getStdout p .| mapC (Chunk . byteString) .| intersperseC Flush)\n</code></pre>\n\n<p>closes the process handle too early. Thus I need to manage the pipe myself: using <code>createPipe</code> instead of <code>createSource</code>. But this means that I need to call <code>hClose</code> at the end, which means that I need a response handler that returns <code>IO ()</code>; the only one that does (excepting <code>responseRaw</code>) is <code>responseStream</code>, which uses <code>StreamingBody</code> as an <em>alternative</em> to Conduit. Thus I conclude that my original solution is needed and that Conduit cannot be used for streaming processes. Feel free to correct this if it's incorrect.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 7, "creation_date": 1567460038, "post_id": 57762867, "comment_id": 101961551, "body": "See also <a href=\"https://stackoverflow.com/q/54281543/791604\">Monad to also measure side effects</a>. In short: you cannot make a law-abiding instance that does what you want. (That is not related to the errors you are getting, though.)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1567460084, "post_id": 57762867, "comment_id": 101961561, "body": "You should define the instance as <code>instance Monad (State&#39; s)</code>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user10696742"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567460812, "post_id": 57762867, "comment_id": 101961693, "body": "@WillemVanOnsem, thank you! Now I have      &quot;Expecting one more argument to \u2018m\u2019     Expected a type, but \u2018m\u2019 has kind \u2018* -&gt; *\u2019 &quot;"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user10696742"}, "edited": false, "score": 1, "creation_date": 1567463361, "post_id": 57763104, "comment_id": 101962201, "body": "If I write like this I am being told to use FlexibleInstances, then MultiParamTypeClasses, and then I get a lot of errors. Do I really need Flexible Instances for this?"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1567464052, "post_id": 57763104, "comment_id": 101962325, "body": "I believe so. <code>Control.Monad.State.Class</code> uses these as well (and even more)."}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 1, "creation_date": 1567464616, "post_id": 57763104, "comment_id": 101962411, "body": "After reminding \u2013 you need <code>MultiParamTypeClasses</code> for obvious reasons (<code>MonadState</code> is such a class). <code>FlexibleInstances</code> are required because the <code>s</code> type is not in a form &quot;Typeconstructor [arguments]&quot; \u2013 which is banned by default and enabled by this extension."}], "tags": [], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "is_accepted": true, "score": 4, "last_activity_date": 1567462578, "last_edit_date": 1567462578, "creation_date": 1567462184, "answer_id": 57763104, "question_id": 57762867, "link": "https://stackoverflow.com/questions/57762867/instrumented-state-monad/57763104#57763104", "title": "Instrumented State monad", "body": "<p>The point is in the sentence </p>\n\n<p><code>Expected kind \u2018* -&gt; *\u2019, but \u2018State'\u2019 has kind \u2018* -&gt; * -&gt; *\u2019</code></p>\n\n<p>If you check the kind of <code>State'</code> with GHCi using <code>:k</code> command you will see that <code>State'</code> has kind <code>* -&gt; * -&gt; *</code> which simply speaking means that it requires to be parametrized by two types of kind <code>*</code> to produce finalized <code>*</code> type. <code>Monad</code>s are as you see restricted to <code>* -&gt; *</code>. For instance <code>Maybe</code> is a <code>Monad</code>, while <code>Maybe Int</code> is not.</p>\n\n<p>To fix your case you will need to apply the state type to <code>State'</code> and then you will be able to declare it as a Monad:</p>\n\n<pre><code>instance Monad (State' s) where\n</code></pre>\n\n<hr>\n\n<p>The error in the second part is a bit conceptual \u2013 what is <code>m</code> in your declaration? <code>MonadState</code> is a subclass of <code>Monad</code>, so every instance of <code>MonadState</code> is also instance of <code>Monad</code>. With this in mind the correct notation should make some sense:</p>\n\n<pre><code>instance MonadState s (State' s) where\n</code></pre>\n\n<p>You don't want to mention this <code>Monad</code> \u2013 it is derivable from the class declaration.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10696742"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 57763104, "answer_count": 1, "score": 3, "last_activity_date": 1567492961, "creation_date": 1567459983, "last_edit_date": 1567492961, "question_id": 57762867, "link": "https://stackoverflow.com/questions/57762867/instrumented-state-monad", "title": "Instrumented State monad", "body": "<p>I am trying to give <code>Monad</code> and <code>MonadState</code> instances for <code>State'</code> that counts the number of <code>(&gt;&gt;=), return, get</code> and <code>put</code> operations.</p>\n\n<pre><code>data Counts = Counts { binds   :: Int\n                 , returns :: Int\n                 , gets    :: Int\n                 , puts    :: Int\n                 }\n\nnewtype State' s a = State' { runState' :: (s, Counts) -&gt; (a, s, Counts) }\n</code></pre>\n\n<p>That's what I have already done, and as far as I understand what is going on, this code should work:</p>\n\n<pre><code>instance Monad State' where\n  return     = State' ( \\(s, counts) -&gt; (x, s, counts mappend oneReturn))\n  (&gt;&gt;=) st f = State' ( \\(s, counts) -&gt; let (x, s', counts') = runState' (s, counts) in runState' ((f x), (s', counts' mappend oneBind)) )\n\ninstance Monad m =&gt; MonadState m State' where\n   get    = State' ( \\(s, counts) -&gt; (s, s, counts mappend oneGet) )\n   put st = State' ( \\(s, counts) -&gt; ((), st, counts mappend onePut) )\n</code></pre>\n\n<p>But I get this error message: </p>\n\n<blockquote>\n  <p>Expecting one more argument to <code>\u2018State'\u2019</code><br>\n  Expected kind <code>\u2018* -&gt; *\u2019</code>, but <code>\u2018State'\u2019</code> has kind <code>\u2018* -&gt; * -&gt; *\u2019</code></p>\n</blockquote>\n\n<p>Why?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 2, "creation_date": 1567450754, "post_id": 57761601, "comment_id": 101959249, "body": "Due to indentation, possibly?"}, {"owner": {"reputation": 160, "user_id": 4727552, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/10153727001570558/picture?type=large", "display_name": "Patrik Gustafsson", "link": "https://stackoverflow.com/users/4727552/patrik-gustafsson"}, "reply_to_user": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1567451017, "post_id": 57761601, "comment_id": 101959320, "body": "Indention where? If i don&#39;t indent checkGuess I get parse error (possibly incorrect indentation or mismatched brackets) instead."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1567451114, "post_id": 57761601, "comment_id": 101959351, "body": "Not only is your indentation messed up, you also have the type signature of <code>main</code> floating way above the body of the function, with a totally different function in between. Not sure what you were trying to achieve with that. Plus your <code>if</code> expression is missing an <code>else</code> clause (and has a <code>return</code> which is definitely an error), and there are at least 2 type errors in the last line of your <code>main</code> function."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567451153, "post_id": 57761601, "comment_id": 101959360, "body": "@PatrikGustafsson: please do not just indent to get rid of one error, since then likely (like here) another error will pop up."}], "answers": [{"comments": [{"owner": {"reputation": 160, "user_id": 4727552, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/10153727001570558/picture?type=large", "display_name": "Patrik Gustafsson", "link": "https://stackoverflow.com/users/4727552/patrik-gustafsson"}, "edited": false, "score": 1, "creation_date": 1567451532, "post_id": 57761680, "comment_id": 101959472, "body": "Thank you! A lot to think about for me :)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567454283, "post_id": 57761680, "comment_id": 101960191, "body": "To be pedantic: technically 1) is not an error, but it&#39;s very recommended nonetheless."}, {"owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "edited": false, "score": 0, "creation_date": 1567627787, "post_id": 57761680, "comment_id": 102023301, "body": "Shouldn&#39;t we also change the first <code>print</code> to <code>putStr</code> or <code>putStrLn</code>? I believe that <code>print :: Show a =&gt; a -&gt; IO ()</code> is not intended."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1567628313, "last_edit_date": 1567628313, "creation_date": 1567451094, "answer_id": 57761680, "question_id": 57761601, "link": "https://stackoverflow.com/questions/57761601/why-do-i-get-parse-error-on-input-here/57761680#57761680", "title": "Why do I get Parse error on input`:: here", "body": "<p>There are several things that are wrong here:</p>\n\n<ol>\n<li>you do not define the function <em>directly</em> after you wrote the signature of the function. You thus should first write the signature, and <em>then</em> write its binding, strictly speaking this is not an error as <a href=\"https://stackoverflow.com/questions/57761601/why-do-i-get-parse-error-on-input-here/57761680?noredirect=1#comment101960191_57761680\">@chi says</a>, but it is nevertheless strongly recommended;</li>\n<li>In Haskell <em>indentation</em> matters: entering and leaving an indentation level says that you start or end a code block, for example for a <code>where</code> clause;</li>\n<li>your <code>checkGuess</code> is supposed to return a <code>Bool</code>, but with <code>return True</code>, you make it a <code>Monad m =&gt; m Bool</code>;</li>\n<li>in Haskell an <code>if ... then ... else ...</code> without an <code>else</code> does <em>not</em> exist. That is logical since a function should always return something;</li>\n<li><code>getLine</code> has as type <code>IO String</code>, so <code>guess</code> has type <code>String</code>, not <code>Int</code>, <code>Integer</code>, so you can not use <code>guess</code> directly to compare with a number; and</li>\n<li>as <a href=\"https://stackoverflow.com/questions/57761601/why-do-i-get-parse-error-on-input-here/57761680?noredirect=1#comment102023301_57761680\">@Krantz</a> pointed out, the <code>print</code> here should probably be a <code>putStrLn</code>, since otherwise we print a string literal, not the string content.</li>\n</ol>\n\n<p>In general it looks like you are writing an <em>imperative</em> program in a (pure) function language. A quick fix is the following:</p>\n\n<pre><code>checkGuess :: (Eq a, Num a) =&gt; a -&gt; Bool\ncheckGuess = <b>(9 ==)</b>\n\nmain :: IO()\nmain = do\n   <b>putStrLn</b> &quot;Guess the number?&quot;\n   guess &lt;- <b>readLn :: IO Int</b>\n   <b>print (</b>checkGuess guess<b>)</b></code></pre>\n"}], "owner": {"reputation": 160, "user_id": 4727552, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/10153727001570558/picture?type=large", "display_name": "Patrik Gustafsson", "link": "https://stackoverflow.com/users/4727552/patrik-gustafsson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "accepted_answer_id": 57761680, "answer_count": 1, "score": 1, "last_activity_date": 1567628313, "creation_date": 1567450526, "last_edit_date": 1567479394, "question_id": 57761601, "link": "https://stackoverflow.com/questions/57761601/why-do-i-get-parse-error-on-input-here", "title": "Why do I get Parse error on input`:: here", "body": "<p>I am trying to make a guess the number game. </p>\n\n<p>`</p>\n\n<pre><code>main :: IO()\n\n   checkGuess :: (Integral a) =&gt; a -&gt; Bool\n   checkGuess b = if b == 9 then return True \n\nmain = do\n   print \"Guess the number?\"\n   guess &lt;- getLine\n   checkGuess guess\n</code></pre>\n\n<p>but I get parse error on input '::' at the function checkGuess</p>\n"}, {"tags": ["haskell", "functional-programming", "monads"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1567435999, "post_id": 57758951, "comment_id": 101954156, "body": "Did you visit the links in the readme?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567436004, "post_id": 57758951, "comment_id": 101954160, "body": "More examples are on <a href=\"http://okmij.org/ftp/Haskell/extensible/more.pdf\" rel=\"nofollow noreferrer\">the related paper</a>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 13, "creation_date": 1567439294, "post_id": 57758951, "comment_id": 101955561, "body": "In short: a free monad turns any functor into a monad. A freer monad turns anything with kind <code>Type -&gt; Type</code> into a monad, whether that thing is a functor or not."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1567449250, "post_id": 57758951, "comment_id": 101958790, "body": "Importantly, freer is used to provide an effect system as a library - a potential replacement for MTL style monad transformers and classes which are great but required N^2 instances and a full set of N new instances for every new monad."}, {"owner": {"reputation": 14830, "user_id": 3757232, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/kLzML.jpg?s=128&g=1", "display_name": "Jared Smith", "link": "https://stackoverflow.com/users/3757232/jared-smith"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1567511283, "post_id": 57758951, "comment_id": 101977175, "body": "@chepner you should post that as an answer, unless you&#39;re the close vote."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1567511452, "post_id": 57758951, "comment_id": 101977283, "body": "I am; this is too broad a question. (Also, that pithy comment is the pretty much the extent of my understanding of freer monads, and by itself it doesn&#39;t really answer any <i>one</i> of the 4 questions, let alone <i>all</i> 4.)"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1567515345, "post_id": 57758951, "comment_id": 101979458, "body": "Should I edit out the question and leave just the &quot;what is&quot; part?"}, {"owner": {"reputation": 473, "user_id": 4137443, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2123d4798a0a7a331ba33b6dd14ef01f?s=128&d=identicon&r=PG&f=1", "display_name": "Random dude", "link": "https://stackoverflow.com/users/4137443/random-dude"}, "edited": false, "score": 0, "creation_date": 1594166098, "post_id": 57758951, "comment_id": 111029757, "body": "Freer Monads are an alternative to Monad transformer stacks. Effects are defined as data which could have multiple &quot;interpretations&quot;. An interpretation performs the task and converts the Effect to the Freer monad. For example, a ReadText effect could read text from memory, file, database etc depending on the interpretation being used. This makes testing effortless. This also decouples business logic from implementation details neatly. Also different effects compose together beautifully when implemented with Freer monads."}], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 503, "favorite_count": 4, "answer_count": 0, "score": 16, "last_activity_date": 1600691032, "creation_date": 1567435718, "last_edit_date": 1577054424, "question_id": 57758951, "link": "https://stackoverflow.com/questions/57758951/what-are-freer-monads", "title": "What are freer monads?", "body": "<p>I heard this term few times, but I still don't know what certainly is a so-called \"Freer Monad\". The name makes me think about Free Monads, but I don't see how are they actually related. There is some library I found on hackage: <a href=\"http://hackage.haskell.org/package/freer\" rel=\"noreferrer\">http://hackage.haskell.org/package/freer</a>, but the example out there didn't help me a lot.</p>\n\n<p>I don't think I understand the idea at all and therefore I don't see any good usecases for them. I also wonder what advantages do they provide over free monads and classic mtl stacks.</p>\n"}, {"tags": ["haskell", "memoization"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1567434842, "post_id": 57757798, "comment_id": 101953617, "body": "It wouldn&#39;t be too difficult to define a <code>HasTrie Double</code> instance, but it would probably not be useful in practice, at least not with acceptable memory consumption. The problem is that <code>Double</code> usually represents real numbers, which have uncountable cardinality, making memoisation of general functions on it impractical. What <i>can</i> be memoised is <i>continuous</i> functions on \u211d <i>approximately</i>. I don&#39;t know if that&#39;s applicable to your use case, but you could check out <a href=\"https://icfp19.sigplan.org/details/FHPNC-2019-papers/3/Lazy-Evaluation-in-Infinite-Dimensional-Function-Spaces-with-Wavelet-Basis\" rel=\"nofollow noreferrer\">icfp19.sigplan.org/details/FHPNC-2019-papers/3/&hellip;</a>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1567434912, "post_id": 57757798, "comment_id": 101953649, "body": "Maybe best show the code in which you actually want to use this memoised function."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1567522883, "post_id": 57757798, "comment_id": 101983795, "body": "@leftaroundabout <code>Double</code> is usually only 64 bits or so -- far from uncountable. I don&#39;t see why the memory consumption of a <code>Double</code> trie should be any worse than that for a <code>Word64</code> trie, and the libraries almost always offer those."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1567525450, "post_id": 57757798, "comment_id": 101985098, "body": "Just use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:decodeFloat\" rel=\"nofollow noreferrer\"><code>decodeFloat</code>/<code>encodeFloat</code></a>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567527023, "post_id": 57757798, "comment_id": 101985859, "body": "@DanielWagner the problem <i>in practice</i> is that a computation that looks up \u201cthe same\u201d <code>Double</code> value over and over again will usually actually end up looking up lots of different, merely nearby values. So not only does it take a long time before the memoisation actually accomplishes anything (because many values need to be computed before you hit one that&#39;s actually stored already), also you waste lots of space storing essentially redundant values."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1567527108, "post_id": 57757798, "comment_id": 101985894, "body": "...granted, that&#39;s not the case for <i>all</i> applications that use floating values, but those that actually have exact values should probably be using <code>Rational</code> in the first place. Whereas the <i>interesting</i> uses of floats are inherently in-exact."}], "owner": {"reputation": 798, "user_id": 9223023, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/RTmMa.png?s=128&g=1", "display_name": "Petras Purlys", "link": "https://stackoverflow.com/users/9223023/petras-purlys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 74, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1567430790, "creation_date": 1567430790, "question_id": 57757798, "link": "https://stackoverflow.com/questions/57757798/memoizing-a-data-structure-containing-a-double-in-haskell", "title": "Memoizing a data structure containing a Double in Haskell", "body": "<p>I would like to memoize a function that takes a data structure that contains a Double (amongst other things). Neither <a href=\"http://hackage.haskell.org/package/MemoTrie-0.6.1/docs/Data-MemoTrie.html\" rel=\"nofollow noreferrer\">MemoTrie</a>, nor <a href=\"https://hackage.haskell.org/package/memoize-0.8.1/docs/Data-Function-Memoize.html\" rel=\"nofollow noreferrer\">Memoize</a> supports Double memoization (probably because it's hard to define a complete domain for Double values).  <a href=\"http://hackage.haskell.org/package/uglymemo-0.1.0.1/docs/Data-MemoUgly.html\" rel=\"nofollow noreferrer\">UglyMemo</a> works but I'd like to explore a trully pure and lazy Haskell'ish approach. I'm not considering <a href=\"http://hackage.haskell.org/package/stable-memo-0.3.1/docs/Data-StableMemo.html\" rel=\"nofollow noreferrer\">StableMemo</a> since it uses pointer comparison under the hood instead of lazy evaluation and lookup.</p>\n"}, {"tags": ["haskell", "haskell-prelude"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1567426559, "post_id": 57756785, "comment_id": 101949956, "body": "<code>show</code> here will print the <i>tuple</i>, so <code>(5,&quot;somestring&quot;)</code> for example. That string can contain a tuple as well here."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 2, "creation_date": 1567426648, "post_id": 57756785, "comment_id": 101949996, "body": "Yes: Don&#39;t use <code>show</code>."}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 12009806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84fc89a303ab16fe108ddf7fa965fac3?s=128&d=identicon&r=PG&f=1", "display_name": "mfergusson", "link": "https://stackoverflow.com/users/12009806/mfergusson"}, "edited": false, "score": 1, "creation_date": 1567427189, "post_id": 57756822, "comment_id": 101950241, "body": "Thanks buddy, saved me a lot of bloody hassle!"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1567426817, "last_edit_date": 1567426817, "creation_date": 1567426679, "answer_id": 57756822, "question_id": 57756785, "link": "https://stackoverflow.com/questions/57756785/show-returns-what-i-want-alongside-a-weird-string/57756822#57756822", "title": "&#39;show&#39; returns what I want alongside a weird String", "body": "<p>You basically here want to filter the characters that are digits. So you can implement this as:</p>\n\n<pre><code>import Data.Char(isDigit)\n\nmultDigitsRecTest :: String -&gt; String\nmultDigitsRecTest = <b>filter isDigit</b></code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude Data.Char&gt; multDigitsRecTest \"Beans 1.29\"\n\"129\"\n</code></pre>\n\n<p>The reason it is printing noise, is because you call <code>show (digitToInt x, multDigitsRecTest xs)</code>. This is a 2-tuple <code>(Int, String)</code>. Since both <code>Int</code> and <code>String</code> are members of the <code>Show</code> typeclass. The tuple is as well. It will thus print <code>(2, \"(5, \\\"\\\")\")</code> for example.</p>\n"}], "owner": {"reputation": 21, "user_id": 12009806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84fc89a303ab16fe108ddf7fa965fac3?s=128&d=identicon&r=PG&f=1", "display_name": "mfergusson", "link": "https://stackoverflow.com/users/12009806/mfergusson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "accepted_answer_id": 57756822, "answer_count": 1, "score": 1, "last_activity_date": 1567426817, "creation_date": 1567426503, "last_edit_date": 1567426527, "question_id": 57756785, "link": "https://stackoverflow.com/questions/57756785/show-returns-what-i-want-alongside-a-weird-string", "title": "&#39;show&#39; returns what I want alongside a weird String", "body": "<p>I have a function that needs to get all of the Integers in a list and display them as a string, I.E \"Beans 1.29\" should return 129. My function is as follows</p>\n\n<pre><code>multDigitsRecTest :: String -&gt; String\nmultDigitsRecTest [] = \"\"\nmultDigitsRecTest (x:xs)\n  | isDigit x = show (digitToInt (x), multDigitsRecTest xs)\n  | otherwise = multDigitsRecTest xs\n</code></pre>\n\n<p>It seems to return the integer with other weird stuff. Is there a way I can just return the int as the string?</p>\n"}, {"tags": ["haskell", "dll", "ghc"], "owner": {"reputation": 251, "user_id": 298138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cea81305807e3fea0f901d91f227f00c?s=128&d=identicon&r=PG", "display_name": "Bj&#246;rn Buckwalter", "link": "https://stackoverflow.com/users/298138/bj%c3%b6rn-buckwalter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 229, "favorite_count": 1, "answer_count": 0, "score": 12, "last_activity_date": 1567412266, "creation_date": 1567411809, "last_edit_date": 1567412266, "question_id": 57753468, "link": "https://stackoverflow.com/questions/57753468/how-can-i-reduce-the-number-of-symbols-in-my-haskell-dll-export-ordinal-too-l", "title": "How can i reduce the number of symbols in my Haskell DLL? (&quot;export ordinal too large&quot;)", "body": "<p>I'm building a DLL in Haskell for use on both macOS and Windows and am having a problem with the latter. Specifically, the number of symbols in the DLL becomes too great (\u201cexport ordinal too large\u201d):</p>\n\n<pre><code>Linking mydll.dll ...\nC://Users//bjorn//AppData//Local//Programs//stack//i386-windows//ghc-8.6.5//mingw//bin/ld.exe: Error: export ordinal too large: 73799\ncollect2.exe: error: ld returned 1 exit status\n`gcc.exe' failed in phase `Linker'. (Exit code: 1)\n</code></pre>\n\n<p>This is closely related to the problem described at <a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/windows-dynamic-linking\" rel=\"noreferrer\">https://gitlab.haskell.org/ghc/ghc/wikis/windows-dynamic-linking</a>, which describes the ordinal limit I am running into:</p>\n\n<blockquote>\n  <p>The primary reason for this is a limitation in the <code>PE</code> specification which uses for the <code>ordinal</code> value (a unique number/index associated with a exported symbol) a 16bit int. Which limits the amount of symbols we can export to <code>2^16-1 (~65k)</code> symbols.</p>\n</blockquote>\n\n<p>Unfortunately I lack the expertise of @Phyx and am a bit stumped as how to solve/work around the problem for my case.</p>\n\n<h1>Investigation</h1>\n\n<p>By some trial an error I replaced some code using attoparsec with <code>undefined</code> which from what I understand prevented attoparsec (and probably some of its dependencies) from being linked in. This brought the number of symbols down to 60232 (counted using <code>nm -g mydll.dll | wc -l</code>). This is not to say that attoparsec is the problem, but just to provide an example of how the DLL grows with dependencies.</p>\n\n<h2>Symbols</h2>\n\n<p>The end-user API for the DLL consists of a number of <a href=\"https://wiki.haskell.org/Foreign_Function_Interface\" rel=\"noreferrer\">FFI</a> <code>foreign export ccall</code> functions. As an example there is the function/action <code>logStarted</code> (<code>foreign export ccall logStarted :: IO ()</code>). Grepping for <code>logStarted</code> in the output of <code>nm -g</code> I find:</p>\n\n<pre><code>6b6910d0 D _FFI_logStarted_closure\n6af817fc T _FFI_logStarted_info\n6b6910d8 D _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted_closure\n6af81810 T _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted_info\n6b6910c0 D _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted1_closure\n6af817c8 T _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted1_info\n6b6910b0 D _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted2_closure\n6af81780 T _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted2_info\n6b76509e R _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted3_bytes\n6b691098 D _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted4_closure\n6af816d8 T _FFI_zdfstableZZC0ZZCmainZZCFFIZZClogStarted4_info\n6af87522 T _logStarted\n</code></pre>\n\n<p>This is a lot of symbols when the only one I need is <code>_logStarted</code>. Similarly several symbols are defined for each haskell functions linked into the DLL (regardless of what package they are from and the vast majority which are of course not part of the end-user API).</p>\n\n<h1>What have I tried</h1>\n\n<ol>\n<li><p>Passing <code>--discard-all</code> to <code>ld</code> (with <code>ld-options: -Wl,--discard-all</code>) reduces the number of symbols by about 100, so it isn't very useful.</p></li>\n<li><p>Using the <code>--retain-symbols-file=api.txt</code> option of <code>ld</code> (mentioned in <a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/windows-dynamic-linking\" rel=\"noreferrer\">https://gitlab.haskell.org/ghc/ghc/wikis/windows-dynamic-linking</a>). This is not a very attractive solution in the first place since I would have to maintain <code>api.txt</code> to be consistent with my FFI exports.Anyway, it does not work since it (appears to) assemble the DLL first and afterwards strip symbols. The assembling step still fails. (Similar results when trying <code>--strip-all</code>.)</p></li>\n</ol>\n\n<h1>Thoughts</h1>\n\n<p>Can I somehow ask <code>ghc</code> to be more restrictive in what symbols to export? In the end all I want exported is the FFI exports</p>\n\n<p>Could the <a href=\"https://gitlab.haskell.org/ghc/ghc/blob/master/utils/gen-dll/Main.hs\" rel=\"noreferrer\"><code>gen-dll</code></a> tool used for building GHC DLLs help? It seems it could but I am not sure what arguments are appropriate.</p>\n\n<h2>Relevant, maybe?</h2>\n\n<p>(Is the solution staring me in the face?)</p>\n\n<ul>\n<li><a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/windows-dynamic-linking\" rel=\"noreferrer\">https://gitlab.haskell.org/ghc/ghc/wikis/windows-dynamic-linking</a></li>\n<li><a href=\"https://gitlab.haskell.org/ghc/ghc/blob/master/utils/gen-dll/Main.hs\" rel=\"noreferrer\">https://gitlab.haskell.org/ghc/ghc/blob/master/utils/gen-dll/Main.hs</a></li>\n<li><a href=\"https://phabricator.haskell.org/D3883\" rel=\"noreferrer\">https://phabricator.haskell.org/D3883</a></li>\n<li><a href=\"https://gitlab.haskell.org/ghc/ghc/issues/5987\" rel=\"noreferrer\">https://gitlab.haskell.org/ghc/ghc/issues/5987</a></li>\n<li><a href=\"https://github.com/Mistuke/ghc/pull/5\" rel=\"noreferrer\">https://github.com/Mistuke/ghc/pull/5</a></li>\n</ul>\n\n<h1>Note on current build process</h1>\n\n<p>I'm building the DLL with stack and a <a href=\"https://www.haskell.org/cabal/users-guide/developing-packages.html#foreign-libraries\" rel=\"noreferrer\"><code>foreign-library</code></a> stanza in the cabal file. However, I get the same results when compiling by hand (using, e.g., <code>ghc -o mydll.dll -shared -static [files]</code>). If necessary (e.g. to integrate <code>gen-dll</code> in the flow) I  will change to a hand-rolled build script.</p>\n\n<p>Right now I am building on 32-bit Windows, but intend to produce a 64-bit version of the DLL too.</p>\n"}, {"tags": ["haskell", "io", "state", "monads"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1567408181, "post_id": 57752413, "comment_id": 101942179, "body": "You could certainly change the implementation of <code>getInput</code> so that it modifies the state in some way after the <code>get</code>. But it would have to be in some determinate, fixed way. You can&#39;t make a program truly interactive without involving <code>IO</code>."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1567408850, "post_id": 57752413, "comment_id": 101942396, "body": "Yeah, determinate and fixed way is what I am going for. Ideally I&#39;d like to be able to run the program with a fixed set of inputs via <code>runState</code> and then when it needs to be interactive, just run it in the IO monad."}, {"owner": {"reputation": 2695, "user_id": 1924798, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/1ba7bffbe41ca39353b6f8bbfd4624a8?s=128&d=identicon&r=PG", "display_name": "Marco Faustinelli", "link": "https://stackoverflow.com/users/1924798/marco-faustinelli"}, "edited": false, "score": 0, "creation_date": 1571046961, "post_id": 57752413, "comment_id": 103097809, "body": "The similarities between the IO and State monads are striking. This allows to mimick and sequence user interactions in any language using pure functions. If you&#39;re curious about a JavaScript implementation, you can find it <a href=\"https://faustinelli.wordpress.com/2014/06/01/state-monad-goes-to-js-town-and-starts-swinging/\" rel=\"nofollow noreferrer\">here</a>"}], "answers": [{"comments": [{"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567409518, "post_id": 57752935, "comment_id": 101942633, "body": "I started playing around with this idea just as you suggested it! Thanks!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567409595, "post_id": 57752935, "comment_id": 101942658, "body": "@CameronBall I changed it to use two lists, because it looks better to me. Otherwise, outputs are used for the next inputs, which feels wrong (IMO)."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567410464, "post_id": 57752935, "comment_id": 101943028, "body": "Can you elaborate on the last edit a bit? It&#39;s not so clear how I would implement and run that."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567413826, "post_id": 57752935, "comment_id": 101944372, "body": "@CameronBall I added a small real-IO interpreter."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567479476, "post_id": 57752935, "comment_id": 101964702, "body": "Cool! Getting off topic I guess... But I don&#39;t really get what writing interpreters gives me. In your example, if I wanted to run my IOpure without real IO, I would have to write something like <code>runIOpureState :: IOpure a -&gt; State String a</code> - how is that better than having a typeclass which <code>State String</code> implements?"}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567482999, "post_id": 57752935, "comment_id": 101965286, "body": "Further... writing the <code>Interaction</code> instances in terms of <code>IOpure</code> makes my <code>interactiveProgram</code> function not compile, since there&#39;s no monad instance for <code>IOpure</code>. But if the implementation is in the typeclass instance (rather than some <code>runIOpure</code> function), I get the monad instance for free for things like <code>IO</code> and <code>State</code>. I see a lot of people use this interpreter style though, so what am I missing that makes it so useful?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567496566, "post_id": 57752935, "comment_id": 101969523, "body": "@CameronBall We can&#39;t use <code>State String</code> for that, since it models true interaction, where the user can see the outputs and provide inputs accordingly. There was a typo in the instance, which should have been for <code>IOpure</code> instead. There is no obvious way to write a truly general <code>runIOpure</code> I can see. I can give you one example of a less general one."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567499440, "post_id": 57752935, "comment_id": 101970924, "body": "I get that a specific implementation of <code>runIOpure</code> is require to run an <code>IOpure</code> in to a specific monad, that makes sense. What I don&#39;t understand is why it&#39;s good to put the implementation of that in to a specific <code>runIOpure</code> function vs just putting the implementation directly in the instance implementation. More precisely, why would I prefer to write a <code>runIOpure</code> function when I can just put the implementation directly  in to the <code>IO</code> instance of <code>Interaction</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567501423, "post_id": 57752935, "comment_id": 101971968, "body": "@CameronBall An IO action can do anything, IOpure can only use the specific operations <code>Output</code> and <code>Input</code> -- no disk/network access, mutable variables, etc. But that&#39;s not necessarily &quot;good&quot;. I only wanted to show another way to implement <code>Interaction</code>, without claiming it&#39;s better or worse. Ultimately, it depends on your goals."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1567739991, "post_id": 57752935, "comment_id": 102061614, "body": "Makes sense! Thanks for the comprehensive answers :)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1567497687, "last_edit_date": 1567497687, "creation_date": 1567409334, "answer_id": 57752935, "question_id": 57752413, "link": "https://stackoverflow.com/questions/57752413/can-i-mock-an-interactive-program-using-the-state-monad/57752935#57752935", "title": "Can I mock an interactive program using the state monad?", "body": "<p>You could use two lists of strings instead. One for the inputs, one for the outputs.</p>\n\n<pre><code>instance Interaction (State ([String],[String])) where\n  getInput = do\n     (x:xs,o) &lt;- get\n     put (xs,o)\n     return x\n  produceOutput x = do\n     (i,o) &lt;- get\n     put (i,x:o)\n</code></pre>\n\n<p>This assumes that the initial state contains a large enough list of input strings. It that's too short, <code>getInput</code> will crash.</p>\n\n<p>Further, this only models inputs which are known at startup. It does not model an interactive user who can see the outputs and answers accordingly.</p>\n\n<p>Finally, a properly interactive program can be modeled by the recursive type</p>\n\n<pre><code>data IOpure a \n  = Return a\n  | Output String (IOpure a)\n  | Input (String -&gt; IOpure a)\n  deriving Functor\n\ninstance Applicative IOpure where\n   pure = Return\n   (&lt;*&gt;) = ap\n\ninstance Monad IOpure where\n   Return x &gt;&gt;= f = f x\n   Output s io &gt;&gt;= f = Output s (io &gt;&gt;= f)\n   Input k &gt;&gt;= f = Input (\\s -&gt; k s &gt;&gt;= f)\n\ninstance Interaction IOpure where\n  getInput = Input Return\n  produceOutput x = Output x (Return ())\n</code></pre>\n\n<p>To run this using actual IO, you can use</p>\n\n<pre><code>runIOpure :: IOpure a -&gt; IO a\nrunIOpure (Return x)    = return x\nrunIOpure (Output x io) = putStrLn x &gt;&gt; runIOpure io\nrunIOpure (Input k)     = getLine &gt;&gt;= runIOpure . k\n</code></pre>\n\n<p>Another example: this models a user which, when prompted for an input, echoes the last output (or \"no output\", at the very beginning). This is just one possible way of consuming an <code>IOpure a</code> value.</p>\n\n<pre><code>echoingUser :: IOpure a -&gt; a\nechoingUser = go \"no output\"\n   where\n   go _ (Return x)    = x\n   go _ (Output o io) = go o io\n   go o (Input k)     = go o (k o)\n</code></pre>\n\n<p>You could try using <code>echoingUser</code> on</p>\n\n<pre><code>interactiveProgram :: Interaction m =&gt; m (String, String)\ninteractiveProgram = do\n  produceOutput \"Jeff\"\n  name &lt;- getInput\n  produceOutput \"Bob\"\n  name2 &lt;- getInput\n  return (name, name2)\n</code></pre>\n\n<p>Try the <a href=\"https://ideone.com/ImMQCv\" rel=\"nofollow noreferrer\">ideone example</a> with all the code above.</p>\n"}], "owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 1, "accepted_answer_id": 57752935, "answer_count": 1, "score": 2, "last_activity_date": 1567497687, "creation_date": 1567406392, "last_edit_date": 1567406791, "question_id": 57752413, "link": "https://stackoverflow.com/questions/57752413/can-i-mock-an-interactive-program-using-the-state-monad", "title": "Can I mock an interactive program using the state monad?", "body": "<p>Based on an answer <a href=\"https://stackoverflow.com/a/7374754/1556475\">here</a> I was inspired to try and make a program where the state monad could be swapped for the IO monad and it would still work. So far I came up with:</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\n\nimport Control.Monad.State\n\nclass Monad m =&gt; Interaction m where\n  getInput :: m String\n  produceOutput :: String -&gt; m ()\n\ninstance Interaction IO where\n  getInput = getLine\n  produceOutput = putStrLn\n\ninstance Interaction (State String) where\n  getInput = get\n  produceOutput = put\n\ninteractiveProgram :: Interaction m =&gt; m ()\ninteractiveProgram = do\n  name &lt;- getInput\n  produceOutput $ \"Hey \" ++ name\n</code></pre>\n\n<p>This works fine if I run it in GHCi, and I can also run <code>interactiveProgram</code> like so: <code>runState interactiveProgram \"Jeff\"</code>. It gets messy when I add extra <code>getInput</code> calls though:</p>\n\n<pre><code>interactiveProgram :: Interaction m =&gt; m ()\ninteractiveProgram = do\n  name &lt;- getInput\n  name2 &lt;- getInput\n  produceOutput $ \"Hey \" ++ name ++ \" and \" ++ name2\n</code></pre>\n\n<p>In the case of the IO monad, the user is prompted for another name and the output is something like \"Hey Jeff and Geoff\". But in the state monad example, I have no way to provide that second name. Instead I get <code>((),\"Hey Jeff and Jeff)</code> (the provided name repeated twice).</p>\n\n<p>Is it possible to come up with an implementation for the <code>State String</code> instance that allows arbitrarily many \"inputs\" that get fed to the <code>getInput</code> calls?</p>\n"}, {"tags": ["string", "list", "haskell", "char"], "answers": [{"comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1567378236, "post_id": 57749991, "comment_id": 101937271, "body": "To expand on this (I had just started on my own answer, now redundant, but I believe this point may be helpful to the OP): as the error message says, the <code>..</code> syntax is only defined for members of the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" rel=\"nofollow noreferrer\">Enum</a>  typeclass. Specifically it&#39;s syntactic sugar for the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:enumFromTo\" rel=\"nofollow noreferrer\">enumFromTo</a> function. And there&#39;s a very good reason why <code>Char</code> is an instance of <code>Enum</code> while <code>String</code> isn&#39;t. What would you say the &quot;next&quot; string after say &quot;hello&quot; is?"}], "tags": [], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "is_accepted": true, "score": 5, "last_activity_date": 1567377897, "creation_date": 1567377897, "answer_id": 57749991, "question_id": 57749964, "link": "https://stackoverflow.com/questions/57749964/how-to-properly-generate-a-list-of-string-through-list-comprehension-in-haskell/57749991#57749991", "title": "How to properly generate a list of String through list comprehension in Haskell?", "body": "<p>You can't use the <code>..</code> syntax to build a list of strings. Luckily, you're using it for single-character strings here, so you can just use it to build a list of characters instead: <code>[ \"A\" ++ x : \"BB\" | x &lt;- ['a' .. 'g']]</code></p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 0, "last_activity_date": 1567424522, "last_edit_date": 1567424522, "creation_date": 1567424174, "answer_id": 57756256, "question_id": 57749964, "link": "https://stackoverflow.com/questions/57749964/how-to-properly-generate-a-list-of-string-through-list-comprehension-in-haskell/57756256#57756256", "title": "How to properly generate a list of String through list comprehension in Haskell?", "body": "<p><code>String</code>s are not an instance of the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" rel=\"nofollow noreferrer\"><strong><code>Enum</code></strong> typeclass</a>. Stricly speaking one <em>could</em> make it an instance, but that would likely not be beneficial much. Since that would yield <code>\"a\"</code>, <code>\"a\\NUL\"</code>, <code>\"a\\NUL\\NUL\"</code>, etc. if we yield these in lexicographical order.</p>\n\n<p>You probably want to use a <code>Char</code>acter here, like <a href=\"https://stackoverflow.com/a/57749991/67579\">@JosephSible</a> wrote in his answer:</p>\n\n<pre><code>[ 'A': x : \"BB\" | x &lt;- [<b>'a'</b> .. <b>'g'</b>]]</code></pre>\n\n<p>or we can make use of a functor map here:</p>\n\n<pre><code>('A':) . (:\"BB\") &lt;$&gt; ['a' .. 'g']</code></pre>\n\n<p>This gives us:</p>\n\n<pre><code>Prelude&gt; ('A':) . (:\"BB\") &lt;$&gt; ['a' .. 'g']\n[\"AaBB\",\"AbBB\",\"AcBB\",\"AdBB\",\"AeBB\",\"AfBB\",\"AgBB\"]\n</code></pre>\n"}], "owner": {"reputation": 81, "user_id": 11042609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e2139b66b36b8cb251ef2e3f5d5daf4f?s=128&d=identicon&r=PG&f=1", "display_name": "chrometic", "link": "https://stackoverflow.com/users/11042609/chrometic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "accepted_answer_id": 57749991, "answer_count": 2, "score": 2, "last_activity_date": 1567425297, "creation_date": 1567377614, "last_edit_date": 1567425297, "question_id": 57749964, "link": "https://stackoverflow.com/questions/57749964/how-to-properly-generate-a-list-of-string-through-list-comprehension-in-haskell", "title": "How to properly generate a list of String through list comprehension in Haskell?", "body": "<p>I need to use List Comprehension to generate a list like this one: [\"AaBB\", \"AbBB\", \"AcBB\", \"AdBB\", \"AeBB\", \"AfBB\",\"AgBB\"]. But I've been running into some problems creating a expression to do it</p>\n\n<p>I've tried to create a list which every element would be a string concatenation, something like this \"A\" + x + \"BB\" where x is a element from a range of letters starting with \"a\" and ending with \"g\"</p>\n\n<pre><code>module C where\n    genList :: [String]\n    genList = [ \"A\" ++ x ++ \"BB\" | x &lt;- [\"a\" .. \"g\"]] \n</code></pre>\n\n<p>So, I was expecting to generate a list similar to the one asked in the problem. But instead I just got this compiling error:</p>\n\n<pre><code>Prelude&gt; :l exC\n[1 of 1] Compiling C                ( exC.hs, interpreted )\n\nexC.hs:3:41: error:\n    \u2022 No instance for (Enum [Char])\n        arising from the arithmetic sequence \u2018\"a\" .. \"g\"\u2019\n    \u2022 In the expression: [\"a\" .. \"g\"]\n      In a stmt of a list comprehension: x &lt;- [\"a\" .. \"g\"]\n      In the expression: [\"A\" ++ x ++ \"BB\" | x &lt;- [\"a\" .. \"g\"]]\n  |\n3 |     genList = [ \"A\" ++ x ++ \"BB\" | x &lt;- [\"a\" .. \"g\"]] \n  |                                         ^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n"}, {"tags": ["haskell", "conditional-statements", "bind", "monads", "do-notation"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1567366378, "post_id": 57748720, "comment_id": 101935227, "body": "You wrote <code>if ... then ... then</code>, not <code>if ... then ... else</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567368855, "post_id": 57748720, "comment_id": 101935774, "body": "<code>if isJust maybeVar then Just (f (fromJust maybeVar)) else Nothing</code> is much better spelled <code>f &lt;$&gt; maybeVar</code>."}], "answers": [{"comments": [{"owner": {"reputation": 962, "user_id": 490815, "user_type": "registered", "accept_rate": 24, "profile_image": "https://www.gravatar.com/avatar/366f7b0d571e7811680c53984c34c966?s=128&d=identicon&r=PG", "display_name": "sinoTrinity", "link": "https://stackoverflow.com/users/490815/sinotrinity"}, "edited": false, "score": 0, "creation_date": 1567366137, "post_id": 57748736, "comment_id": 101935163, "body": "I added more context to be more precise. Please advise on what I&#39;m doing wrong."}, {"owner": {"reputation": 962, "user_id": 490815, "user_type": "registered", "accept_rate": 24, "profile_image": "https://www.gravatar.com/avatar/366f7b0d571e7811680c53984c34c966?s=128&d=identicon&r=PG", "display_name": "sinoTrinity", "link": "https://stackoverflow.com/users/490815/sinotrinity"}, "edited": false, "score": 0, "creation_date": 1567366821, "post_id": 57748736, "comment_id": 101935325, "body": "U just made my day. I still have to think more on why your solution works, but it definitely works like a charm!"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1567371394, "post_id": 57748736, "comment_id": 101936230, "body": "\u201cdue to Haskell&#39;s laziness\u201d \u2013 that&#39;s a bit of a red herring. Even if they were <i>evaluated</i> eagerly, that still wouldn&#39;t mean they would be <i>executed</i> as well."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1567372401, "post_id": 57748736, "comment_id": 101936424, "body": "@leftaroundabout: yes I agree. I rewrote that part."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1567372930, "post_id": 57748736, "comment_id": 101936511, "body": "BTW the second example can be written <code>n0 &lt;- traverse f maybeVar</code> (though I like that you showed it the way you did for pedagogical reasons)"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 12, "last_activity_date": 1567374758, "last_edit_date": 1567374758, "creation_date": 1567364794, "answer_id": 57748736, "question_id": 57748720, "link": "https://stackoverflow.com/questions/57748720/how-do-i-conditionally-bind-in-a-do-block/57748736#57748736", "title": "How do I conditionally bind in a do block?", "body": "<p>You can \"<em>inline</em>\" the condition:</p>\n\n<pre><code>do \n  n0 &lt;- <b>if condition then expr0 else expr0'</b>\n  n1 &lt;- expr1\n  n2 &lt;- expr2\n  return (T n0 n1 n2)</code></pre>\n\n<p>You likely should use brackets in the <code>return</code> expression, so <code>return (T n0 n1 n2)</code>.</p>\n\n<p>You can then rewrite the expression with <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#v:liftM3\" rel=\"noreferrer\"><strong><code>liftM3 :: Monad m =&gt; (a1 -&gt; a2 -&gt; a3 -&gt; r) -&gt; m a1 -&gt; m a2 -&gt; m a3 -&gt; m r</code></strong></a> to:</p>\n\n<pre><code><b>liftM3</b> T (if condition then expr0 else expr0') expr1 expr2</code></pre>\n\n<p>Since Haskell is a pure language evaluating expressions has no side-effects. But here the <code>if</code>...<code>then</code>...<code>else</code> will at most evaluate one of the two expression. An <code>IO a</code> itself has no side-effects either, since it is a \"recipe\" to generate an <code>a</code>.</p>\n\n<p><strong>EDIT</strong>: For your second example, it is more complicated.</p>\n\n<pre><code>do \n    n0 &lt;- if isJust maybeVar then <b>Just &lt;$&gt;</b> (f (fromJust maybeVar)) else <b>pure Nothing</b>\n    n1 &lt;- expr1\n    n2 &lt;- expr2\n    return (T n0 n1 n2)</code></pre>\n\n<p>So here we use <code>pure Nothing</code> to \"wrap\" <code>Nothing</code> in the monadic context, and <code>Just &lt;$&gt;</code> to apply <code>Just</code> on the value(s) inside the monadic context.</p>\n\n<p>Or as <a href=\"https://stackoverflow.com/questions/57748720/how-to-conditionally-bind-in-do-block/57748736?noredirect=1#comment101936511_57748736\">@luqui</a> says, we can here use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:traverse\" rel=\"noreferrer\"><strong><code>traverse :: (Traversable t, Applicative f) =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)</code></strong></a>:</p>\n\n<pre><code>do \n    n0 &lt;- traverse f maybeVar\n    n1 &lt;- expr1\n    n2 &lt;- expr2\n    return (T n0 n1 n2)</code></pre>\n\n<p>This works since a <code>Maybe</code> is traversable: for a <code>Just</code> we traverse the single element, for <code>Nothing</code> it will return <code>Nothing</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": false, "score": 5, "last_activity_date": 1567387449, "creation_date": 1567387449, "answer_id": 57750569, "question_id": 57748720, "link": "https://stackoverflow.com/questions/57748720/how-do-i-conditionally-bind-in-a-do-block/57750569#57750569", "title": "How do I conditionally bind in a do block?", "body": "<p>Since the OP says \"I still have to think more on why your solution works\" in a comment, I thought I would add some explanation as a complementary answer.</p>\n\n<p>Haskell's <code>if condition then x else y</code> syntax is actually <em>not</em> an analogue for the standard if/then/else statement seen in almost every imperative language. It is much more closely analogous to conditional expression syntax (seen in C as <code>condition ? x : y</code>, or in Python as <code>x if condition else y</code>). Once you remember that, everything else about it follows naturally.</p>\n\n<p><code>if condition then x else y</code> in Haskell is an expression for a <strong>value</strong>, not a <strong>statement</strong>. <code>x</code> and <code>y</code> are not \"things to do\" based on whether <code>condition</code> is true or not, but simply 2 different values; the whole if/then/else expression is a value that is either equivalent to <code>x</code> or equivalent to <code>y</code> (depending on the condition).</p>\n\n<p>So with that in mind, lets take a look at the working version suggested by Willem Van Onsem:</p>\n\n<pre><code>do \n  n0 &lt;- if condition then expr0 else expr0'\n  n1 &lt;- expr1\n  n2 &lt;- expr2\n  return (T n0 n1 n2)\n</code></pre>\n\n<p>Here the <code>if condition then expr0 else expr0'</code> is entirely on the right hand side of a single <code>&lt;-</code> statement. So it's an expression for a value, just like <code>expr1</code> and <code>expr2</code> are on the following lines. It doesn't say to either bind <code>n0</code> from <code>expr0</code> or bind <code>n0</code> from <code>expr0'</code>, it just <strong>is</strong> either <code>expr0</code> or <code>expr0'</code>. The <code>&lt;-</code> statement that contains the if/then/else is what says to bind <code>n0</code>, and it binds it <em>unconditionally</em> from the <em>single</em> value computed by the whole if/then/else.</p>\n\n<p>We can easily see this by the fact that we could declare a top-level variable equal to the if/then/else totally independently of the do block (assuming that <code>condition</code>, <code>expr0</code>, and <code>expr0'</code> are globally available) and replace the if/then/else by a reference to this variable.</p>\n\n<pre><code>foo = do \n  n0 &lt;- z\n  n1 &lt;- expr1\n  n2 &lt;- expr2\n  return (T n0 n1 n2)\n\nz = if condition then expr0 else expr0'\n</code></pre>\n\n<p>Here it's very clear that the if/then/else has nothing at all to do with the binding of <code>n0</code> in the do block.</p>\n\n<p>Let's compare that to the original non-working version:</p>\n\n<pre><code>do \n  if condition then\n    n0 &lt;- expr0\n  else\n    n0 &lt;- expr0'\n  n1 &lt;- expr1\n  n2 &lt;- expr2\n  return (T n0 n1 n2)\n</code></pre>\n\n<p>This is using an if/then/else with <strong>statements</strong> as the then and else parts. Instead of just \"being\" one value or another, this is saying to \"do\" one thing or another. That's not how Haskell's if/then/else works. The whole if/then/else needs to be able to be understood as an expression for a single value.</p>\n\n<p>Again this should be clear if we imagine trying to factor out the if/then/else into a separate declaration:</p>\n\n<pre><code>foo = do\n  z\n  n1 &lt;- expr1\n  n2 &lt;- expr2\n  return (T n0 n1 n2)\n\nz = if condition then\n      n0 &lt;- expr0\n    else\n      n0 &lt;- expr0'\n</code></pre>\n\n<p>It should be clear that this doesn't make any sense. The then and else parts aren't independent value-expressions, they only make sense inside a do block. And they need to be inside the <em>particular</em> do block in <code>foo</code>, so that <code>n0</code> is bound for later use in <code>return (T n0 n1 n2)</code>. </p>\n\n<p>Since the statements of do blocks are transformed into expressions anyway, you might think that putting statements as the then/else parts of an if expression <em>should</em> work. However the transformation of do blocks into expressions \"cuts across\" statements, so this doesn't work. For example this:</p>\n\n<pre><code>do  n &lt;- expr\n    rest\n</code></pre>\n\n<p>is equivalent to this:</p>\n\n<pre><code>expr &gt;&gt;= (\\n -&gt; rest)\n</code></pre>\n\n<p>I won't get into a full technical explanation of that if you don't already understand it, but hopefully you can see that the <code>n</code> ends up more closely connected to <code>rest</code> than it does with the <code>expr</code> it was bound from in the statement (<code>rest</code> represents the entire remaining contents of the do block, in more complicated examples). There is no single expression that represents just the <code>n &lt;- expr</code> part, which you could put inside the then or else part of an if/then/else expression.</p>\n"}], "owner": {"reputation": 962, "user_id": 490815, "user_type": "registered", "accept_rate": 24, "profile_image": "https://www.gravatar.com/avatar/366f7b0d571e7811680c53984c34c966?s=128&d=identicon&r=PG", "display_name": "sinoTrinity", "link": "https://stackoverflow.com/users/490815/sinotrinity"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 334, "favorite_count": 0, "accepted_answer_id": 57748736, "answer_count": 2, "score": 6, "last_activity_date": 1567430636, "creation_date": 1567364657, "last_edit_date": 1567430636, "question_id": 57748720, "link": "https://stackoverflow.com/questions/57748720/how-do-i-conditionally-bind-in-a-do-block", "title": "How do I conditionally bind in a do block?", "body": "<p>I want to achieve the following in a do block:</p>\n\n<pre><code>do \n  if condition then\n    n0 &lt;- expr0\n  else\n    n0 &lt;- expr0'\n  n1 &lt;- expr1\n  n2 &lt;- expr2\n  return T n0 n1 n2\n</code></pre>\n\n<p>But Haskell gives a compile error unless I do:</p>\n\n<pre><code>do \n  if condition then\n    n0 &lt;- expr0\n    n1 &lt;- expr1\n    n2 &lt;- expr2\n    return T n0 n1 n2  \n  else\n    n0 &lt;- expr0'\n    n1 &lt;- expr1\n    n2 &lt;- expr2\n    return T n0 n1 n2 \n</code></pre>\n\n<p>It looks very verbose, especially when there are many shared binding expressions. How do I make it more concise?</p>\n\n<p>Actually, I am trying to do the following:</p>\n\n<pre><code>do \n  if isJust maybeVar then\n    n0 &lt;- f (fromJust maybeVar)\n    n1 &lt;- expr1\n    n2 &lt;- expr2\n    return (T (Just n0) n1 n2)\n  else\n    n1 &lt;- expr1\n    n2 &lt;- expr2\n    return (T Nothing n1 n2)\n</code></pre>\n\n<p>The following still fails to compile:</p>\n\n<pre><code>do \n  n0 &lt;- if isJust maybeVar then Just (f (fromJust maybeVar)) else Nothing\n  n1 &lt;- expr1\n  n2 &lt;- expr2\n  return (T n0 n1 n2)\n</code></pre>\n"}, {"tags": ["haskell", "gadt", "type-families", "data-kinds", "rank-n-types"], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 3, "creation_date": 1567371756, "post_id": 57749088, "comment_id": 101936316, "body": "Probably best to add a <code>MyEnumCheck &#39;[] _ = _SomeKindOfFailure</code> instance, just to keep it from being stuck."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1567368128, "creation_date": 1567368128, "answer_id": 57749088, "question_id": 57747925, "link": "https://stackoverflow.com/questions/57747925/specifying-a-dependent-type-via-type-family-in-a-gadt-data-constructor/57749088#57749088", "title": "Specifying a dependent type via type family in a GADT data constructor", "body": "<p>I substituted your <code>Type</code></p>\n\n<pre><code>type family MyEnumChoice (l :: [MyEnum]) (e :: MyEnum) :: Type\n</code></pre>\n\n<p>with a <code>Constraint</code></p>\n\n<pre><code>type family MyEnumCheck (l :: [MyEnum]) (e :: MyEnum) :: Constraint where\n</code></pre>\n\n<p>to check membership, and adapted your GADT accordingly. I don't know if this is general enough for you, but it might be a starting point.</p>\n\n<pre><code>{-# LANGUAGE DataKinds                 #-}\n{-# LANGUAGE PartialTypeSignatures     #-}\n{-# LANGUAGE GADTs                     #-}\n{-# LANGUAGE RankNTypes                #-}\n{-# LANGUAGE TypeFamilies              #-}\n{-# LANGUAGE TypeOperators             #-}\n\nimport Data.Kind (Type, Constraint)\n\ndata MyEnum = ThingA\n            | ThingB\n            | ThingC\n            | ThingD\n\ndata family SMyEnum (e :: MyEnum)\ndata instance SMyEnum ThingA = SThingA\ndata instance SMyEnum ThingB = SThingB\ndata instance SMyEnum ThingC = SThingC\ndata instance SMyEnum ThingD = SThingD\n\ntype family MyEnumCheck (l :: [MyEnum]) (e :: MyEnum) :: Constraint where\n  MyEnumCheck (e ': ls) e = ()\n  MyEnumCheck (f ': ls) e = MyEnumCheck ls e\n\ndata ComplexThing :: [(MyEnum,MyEnum)] -&gt; Type where\n  Simple :: ComplexThing [ '(ThingA, ThingA), '(ThingA, ThingB), '(ThingC, ThingB) ]\n  NotSimple :: forall x. MyEnumCheck '[ ThingB, ThingC ] x =&gt; \n     SMyEnum x -&gt; ComplexThing '[ '(ThingA, x), '(x, ThingD) ]\n\ntest3 :: ComplexThing '[ '(ThingA, ThingB), '(ThingB, ThingD) ]\ntest3 = NotSimple SThingB\n-- Checks!\n\ntest3_2 :: ComplexThing '[ '(_, ThingB), _]\ntest3_2 = NotSimple SThingB\n-- Checks!\n\ntest4 = NotSimple SThingB\n-- Checks!\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 8213595, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/012373e3ab2992309dd2717950da8ba4?s=128&d=identicon&r=PG&f=1", "display_name": "tgduckworth", "link": "https://stackoverflow.com/users/8213595/tgduckworth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 1, "accepted_answer_id": 57749088, "answer_count": 1, "score": 3, "last_activity_date": 1567368128, "creation_date": 1567357151, "question_id": 57747925, "link": "https://stackoverflow.com/questions/57747925/specifying-a-dependent-type-via-type-family-in-a-gadt-data-constructor", "title": "Specifying a dependent type via type family in a GADT data constructor", "body": "<p>I've been trying to implement what seems to be a fairly straightforward type. Below is a contrived example that demonstrates the problem. At the core of it, I want to implement some <code>ComplexThing</code> type, which is a GADT parameterized by a much simpler type, <code>MyEnum</code>. There are many constructors of <code>ComplexThing</code>, though, that are only valid when applied to certain (possibly many) members of <code>MyEnum</code>.</p>\n\n<p>One way to address this problem is to break these constructors into simpler variants. Below I have one such constructor, <code>NotSimple</code>, which might be recast as <code>NotSimple_B</code> or <code>NotSimple_C</code>. In general this seems like a less elegant solution.</p>\n\n<p>What I would prefer is that the user of this type should be able to write something like <code>NotSimple ThingB</code> or <code>NotSimple ThingC</code>, and that <code>NotSimple ThingA</code> should not type check. For the purposes of defining <code>ComplexThing</code>, I also want the specification of the allowable subset of <code>MyEnum</code> to be fairly general (i.e. it should be OK to repeat elements in the specification, order should not matter, and it should be flexible in terms of the number of allowed elements). For this reason I've pursued the use of a type-level list, and a type family that walks that list, with the help of a singleton type <code>SMyEnum</code>.</p>\n\n<p>I've come pretty close to getting what I want. I can actually use what I've set up, but full <em>usability</em> isn't there. In particular, writing <code>NotSimple SThingB</code> by itself is too much for the type checker. With the appropriate type signatures, it becomes tenable, but my view is that this is too much of a burden to put on potential users.</p>\n\n<p>See my implementation below, along with a few tests and their results.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE DataKinds                 #-}\n{-# LANGUAGE PartialTypeSignatures     #-}\n{-# LANGUAGE GADTs                     #-}\n{-# LANGUAGE RankNTypes                #-}\n{-# LANGUAGE TypeFamilies              #-}\n{-# LANGUAGE TypeOperators             #-}\n\nimport Data.Kind (Type)\n\ndata MyEnum = ThingA\n            | ThingB\n            | ThingC\n            | ThingD\n\ndata family SMyEnum (e :: MyEnum)\ndata instance SMyEnum ThingA = SThingA\ndata instance SMyEnum ThingB = SThingB\ndata instance SMyEnum ThingC = SThingC\ndata instance SMyEnum ThingD = SThingD\n\ntype family MyEnumChoice (l :: [MyEnum]) (e :: MyEnum) :: Type where\n  MyEnumChoice (e ': ls) e = SMyEnum e\n  MyEnumChoice (f ': ls) e = MyEnumChoice ls e\n\ndata ComplexThing :: [(MyEnum,MyEnum)] -&gt; Type where\n  Simple :: ComplexThing [ '(ThingA, ThingA), '(ThingA, ThingB), '(ThingC, ThingB) ]\n  NotSimple :: forall x. MyEnumChoice '[ ThingB, ThingC ] x -&gt; ComplexThing '[ '(ThingA, x), '(x, ThingD) ]\n\ntest3 :: ComplexThing '[ '(ThingA, ThingB), '(ThingB, ThingD) ]\ntest3 = NotSimple SThingB\n-- Checks!\n\ntest3_2 :: ComplexThing '[ '(_, ThingB), _]\ntest3_2 = NotSimple SThingB\n-- Checks!\n\ntest4 = NotSimple SThingB\n-- \u2022 Couldn't match expected type \u2018MyEnumChoice\n--                                   '[ 'ThingB, 'ThingC] x0\u2019\n--               with actual type \u2018SMyEnum 'ThingB\u2019\n--   The type variable \u2018x0\u2019 is ambiguous\n-- \u2022 In the first argument of \u2018NotSimple\u2019, namely \u2018SThingB\u2019\n--   In the expression: NotSimple SThingB\n--   In an equation for \u2018test4\u2019: test4 = NotSimple SThingB\n-- \u2022 Relevant bindings include\n--     test4 :: ComplexThing '[ '( 'ThingA, x0), '(x0, 'ThingD)]\n</code></pre>\n\n<p>I think I understand the <em>why</em> behind this type checking failure. My hope was that <code>x0</code> could be magically unified with the argument to <code>NotSimple</code>, but what the type checker sees instead is that it must unify the final type that would be produced by that type family (the argument, <code>SThingB</code>) with the general, universally-quantified specification of that constructor's argument. I'm not sure, however, what the best way to work around this limitation is.</p>\n\n<p>Any suggestions as to how I might approach this are appreciated! If I've demonstrated any conceptual or terminological misunderstandings, commentary on that is welcome as well.</p>\n"}, {"tags": ["haskell", "haskell-spock", "haskell-lucid"], "answers": [{"tags": [], "owner": {"reputation": 722, "user_id": 6629569, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/eec30cf8d13a1de12bde3a38dd18d483?s=128&d=identicon&r=PG&f=1", "display_name": "Abby", "link": "https://stackoverflow.com/users/6629569/abby"}, "is_accepted": true, "score": 1, "last_activity_date": 1567413577, "creation_date": 1567413577, "answer_id": 57753828, "question_id": 57744682, "link": "https://stackoverflow.com/questions/57744682/how-to-serve-static-files-using-spock-and-lucid/57753828#57753828", "title": "How to serve static files using Spock and Lucid?", "body": "<p>Make sure your <code>static</code> folder is in the root directory of your <strong>project</strong>, and not of your main file, i.e., the <code>static</code> folder should live next to (and not in) your <code>app</code> and/or <code>src</code> folder.</p>\n\n<p>In this case that would be </p>\n\n<pre><code>\u251c\u2500\u2500 app\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Main.hs\n\u251c\u2500\u2500 static\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 css\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 main.css\n</code></pre>\n"}], "owner": {"reputation": 722, "user_id": 6629569, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/eec30cf8d13a1de12bde3a38dd18d483?s=128&d=identicon&r=PG&f=1", "display_name": "Abby", "link": "https://stackoverflow.com/users/6629569/abby"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 1, "accepted_answer_id": 57753828, "answer_count": 1, "score": 5, "last_activity_date": 1567413772, "creation_date": 1567329055, "last_edit_date": 1567413772, "question_id": 57744682, "link": "https://stackoverflow.com/questions/57744682/how-to-serve-static-files-using-spock-and-lucid", "title": "How to serve static files using Spock and Lucid?", "body": "<p>Getting started with web development using Haskell, Spock, and Lucid, I can't figure out how to serve my static files. In the directory of <code>Main.hs</code> I have <code>/static/css/main.css</code>, which contains just a background colour to see if the css is indeed applied. So my directory tree looks like</p>\n\n<pre><code>app\n\u251c\u2500\u2500 Main.hs\n\u2514\u2500\u2500 static\n \u00a0\u00a0 \u2514\u2500\u2500 css\n \u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 main.css\n</code></pre>\n\n<p>However, with the below configuration, the <code>main.css</code> file is not found (it contains a 404 when inspecting it with Firefox). Other than that, the site shows fine.</p>\n\n<p>I have tried to mimick the <a href=\"https://github.com/agrafix/funblog\" rel=\"nofollow noreferrer\">funblog</a> example when it comes to serving these files (with Wai), altered for Lucid instead of Blaze. In particular the <code>middleware $ staticPolicy (addBase \"static\")</code> from <a href=\"https://github.com/agrafix/funblog/blob/65c2b41019ae3a3bd04a2ffb92e028f167295c7d/src/Web/Blog.hs#L87\" rel=\"nofollow noreferrer\"><code>Web/Blog.hs</code></a> and the line where we link the css from <a href=\"https://github.com/agrafix/funblog/blob/65c2b41019ae3a3bd04a2ffb92e028f167295c7d/src/Web/Views/Site.hs#L28\" rel=\"nofollow noreferrer\"><code>Web/Views/Site.hs</code></a>.</p>\n\n<pre><code>module Main where    \n\nimport           Network.Wai.Middleware.Static\nimport           Lucid\nimport           Web.Spock\nimport           Web.Spock.Config\nimport           Web.Spock.Lucid         (lucid)\n\ntype Server a = SpockM () () () a\n\nmain :: IO ()\nmain = do\n  cfg &lt;- defaultSpockCfg () PCNoDatabase ()\n  runSpock 8080 (spock cfg app)\n\napp :: Server ()\napp = do\n  middleware $ staticPolicy (addBase \"static\")\n  get root $ do\n    lucid $ do\n        head_ $ link_ [ rel_ \"stylesheet\"\n                      , type_ \"text/css\"\n                      , href_ \"/css/main.css\" \n                      ]\n        body_ $ h1_ \"Hello.\"\n</code></pre>\n\n<p><hr>\n<strong>Edit/Addition</strong> Translating the Lucid to Blaze gives the same result (translation as below), so I must be missing something somewhere else. </p>\n\n<pre><code>-- Additional imports\nimport           Text.Blaze.XHtml5             ((!))\nimport qualified Text.Blaze.XHtml5             as H\nimport qualified Text.Blaze.XHtml5.Attributes  as A\nimport           Control.Monad.Trans           (MonadIO)\nimport           Text.Blaze.Html.Renderer.Utf8 (renderHtml)\n\n-- The main function did not change. \n\nblaze :: MonadIO m =&gt; H.Html -&gt; ActionCtxT ctx m a\nblaze = lazyBytes . renderHtml\n\napp :: Server ()\napp = do\n  middleware $ staticPolicy (addBase \"static\")\n  get root $\n    blaze $ do \n      H.head $\n        H.link ! A.href \"/css/main.css\" ! A.rel \"stylesheet\"\n      H.body $\n        H.h1 \"Hello Blaze.\"\n</code></pre>\n"}, {"tags": ["haskell", "arrows", "mutual-recursion", "default-implementation", "infinite-recursion"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567327192, "post_id": 57744404, "comment_id": 101927179, "body": "Hint: <code>(&gt;&gt;&gt;) = flip (.)</code>. Note that <code>(&gt;&gt;&gt;)</code> is here the &quot;outer&quot; function. Due to laziness it is not said that the operands are evaluated."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 6, "creation_date": 1567329471, "post_id": 57744404, "comment_id": 101927621, "body": "I may be missing something, but having checked the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Arrow.html#t:Arrow\" rel=\"nofollow noreferrer\">documentation</a>, the minimal complete definition of the <code>Arrow</code> class requires <code>arr</code> and either one of <code>first</code> and <code>(***)</code>. So these definitions aren&#39;t truly recursive, they just define either method in terms of the other. It&#39;s just like the two defining methods of the <code>Eq</code> class, or <code>traverse</code> and <code>sequenceA</code> in <code>Traversable</code>. You have to give the definition of one method, then the other is provided for you."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567329556, "post_id": 57744404, "comment_id": 101927640, "body": "I would be happy to give the above as an answer, but I know @WillemVanOnsem is far more knowledgeable than me, and his comment has me thinking there must be something else I&#39;m missing"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1567329856, "post_id": 57744404, "comment_id": 101927698, "body": "it&#39;s not implementation, but <i>default</i> definition. see <a href=\"https://stackoverflow.com/questions/57744404/arrow-first-implementation-in-arrow-lib#comment101927621_57744404\">comment</a> by @RobinZigmond."}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1567338643, "post_id": 57744404, "comment_id": 101929365, "body": "Willem, you mean that an &#39;evaluation&#39; of (&gt;&gt;&gt;) (?) will force to stop the recursion at the &#39;first level&#39;? Because id is determined at the first-level of evaluation (what I mean is that Haskell doesn&#39;t need to &#39;dig&#39; further to have a evaluable expression and it stops the recursion)"}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 3, "creation_date": 1567344058, "post_id": 57744404, "comment_id": 101930337, "body": "@user3680029 look at any instance definition, there will be an implementation for (at least) one of the functions and so no infinite recursion. Those are default definitions so that you don&#39;t need to write out all the functions if they can be implemented in terms of each other - you write one and get the others for free."}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1567365126, "post_id": 57744404, "comment_id": 101934939, "body": "But nevertheless the default implementation looks recursive. I wouldn&#39;t have this problem if first was defined as \\f (x,y) -&gt; (f x,y) (first specialised to function) it&#39;s a stand alone definition w/o any (****) [less polymorphic as Id is a method of the Category Class from which functions are also instances..]"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1567368368, "post_id": 57744404, "comment_id": 101935678, "body": "But any valid instance will have either <code>first</code> or <code>(***)</code> defined in a way that doesn&#39;t depend on the other, just as you observe the instance for <code>(-&gt;)</code> has."}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1567374558, "post_id": 57744404, "comment_id": 101936770, "body": "Not necesseraly I can leave the default and then the recursion will take place by definition. specific implementation are not the question here..."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1567377756, "post_id": 57744404, "comment_id": 101937213, "body": "Sure, but it&#39;s clearly not <i>intended</i> for neither of these methods to be given implementations in an instance - precisely because you then indeed run into recursion. As i said earlier, try defining an <code>Eq</code> instance without implementing either <code>(==)</code> or <code>(&#47;=)</code> - that&#39;s clearly not what&#39;s intended, but is totally analogous to what you are suggesting here, as each has a default implementation in terms of the other."}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1567399181, "post_id": 57744404, "comment_id": 101939822, "body": "Yes.... but as far as I can see (in hackage) Eq hasn&#39;t a default implementation... thanks to the cross reference I have to define only one method (==) or (/=)"}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1567401453, "post_id": 57744404, "comment_id": 101940238, "body": "Sorry on Wiki they are telling that Eq has a definition  of (==) and (/=) in terms of each other. With the same reasoning we can imagine a infinite recursion of the type (==) = not (not (not .... (/=...(... . But here may be because it&#39;s more intuitive the recursion &#39;naturally&#39; broke at the first step (/=) is simply not (==) and not an infinite thunk of not(not(... coming back to Willem comment may here laziness is more easy to grasp in this scenario...."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1567426116, "post_id": 57744404, "comment_id": 101949737, "body": "@user3680029 go by the answer. the answer is good. ignore anything that contradicts it. the &quot;implementations&quot; you refer to are not implementations, they are default definitions that are used in case there&#39;s no implementation. but there must be <i>some</i> implementation given, and the infinite recursion <i>will</i> be broken because when the implementation is given by the user, <i>it</i> is used by Haskell, <i>not</i> the default definition that is used <i>only</i> when there is no implementation for that method. in Eq as in Arrow as well. a given type&#39;s instance must implement <i>some</i> method(s), if not all of them."}], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1567427398, "post_id": 57751035, "comment_id": 101950351, "body": "Ok. Perfect I understand it was tedious but I can accept that I can have here a &quot;virtual&quot; recursion due to that each time the specific implementation will eliminate the recursive pattern... nevertheless I will create an arrow datatype and check all of this (with an implementation of first and with leaving the default one).  Thank you all for your help ."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 3, "last_activity_date": 1567394615, "last_edit_date": 1567394615, "creation_date": 1567393919, "answer_id": 57751035, "question_id": 57744404, "link": "https://stackoverflow.com/questions/57744404/implementation-of-first-in-arrow-library/57751035#57751035", "title": "Implementation of `first` in Arrow library", "body": "<p>You are correct, if you implement an arrow like this:</p>\n\n<pre><code>instance Arrow MyType where\n    arr f = ...\n</code></pre>\n\n<p>and then try to use <code>first</code> or <code>(***)</code>, you will get an infinite loop since the implementations refer to each other non-productively.  However, defining the default methods this way allows you to instantiate <code>Arrow</code> as either</p>\n\n<pre><code>instance Arrow MyType where\n    arr f = ...\n    first t = ...\n</code></pre>\n\n<p>or</p>\n\n<pre><code>instance Arrow MyType where\n    arr f = ...\n    t *** t' = ...\n</code></pre>\n\n<p>whichever is more convenient/efficient (depending on what you care about), and the missing method will be defined automatically in terms of the one you did specify.</p>\n\n<p>If we try to instantiate <code>Arrow</code> without giving an implementation of <code>first</code> or <code>(***)</code>, we will get the following warning:</p>\n\n<pre><code>warning: [-Wmissing-methods]\n\u2022 No explicit implementation for\n    either \u2018first\u2019 or \u2018***\u2019\n\u2022 In the instance declaration for \u2018Arrow MyType\u2019\n</code></pre>\n\n<p>This is because the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/Control.Arrow.html#line-89\" rel=\"nofollow noreferrer\">source</a> comes with a <a href=\"https://downloads.haskell.org/~ghc/7.8.4/docs/html/users_guide/pragmas.html#minimal-pragma\" rel=\"nofollow noreferrer\"><code>MINIMAL</code> pragma</a>:</p>\n\n<pre><code>{-# MINIMAL arr, (first | (***)) #-}\n</code></pre>\n\n<p>which tells the compiler that, even though defaults are supplied, an instance is not complete unless it specifies <code>arr</code> and one of <code>first</code> or <code>(***)</code>.  So the requirement is encoded and checked.</p>\n\n<hr>\n\n<p>As for your comment:</p>\n\n<blockquote>\n  <p>Not necesseraly I can leave the default and then the recursion will take place by definition. specific implementation are not the question here... </p>\n</blockquote>\n\n<p>You can't use methods of a typeclass without an instance.  It's seldom even possible to <em>try</em>, because the types of methods always refer to the type, e.g. </p>\n\n<pre><code>class Arrow k where\n    first :: k a b -&gt; k (a,c) (b,c)\n    ...\n</code></pre>\n\n<p>When you use <code>first</code>, you have to have a specific <code>k</code> in mind in order to use the result, e.g.</p>\n\n<pre><code>print $ first (arr id) (1,2)                -- using it at k ~ (-&gt;)\nprint =&lt;&lt; runKleisli (first (arr id)) (1,2) -- using it at Kleisli IO\n</code></pre>\n\n<p>At some point the type constraints of the program will pin <code>k</code> down to be something concrete, and that is the instance that is used.  You can't use a class without an instance.</p>\n\n<p>(And even in the cases where things line up in such a way that a specific instance is not determined, the classic example being</p>\n\n<pre><code>show . read :: String -&gt; String\n</code></pre>\n\n<p>The compiler will just yell at you</p>\n\n<pre><code>\u2022 Ambiguous type variable \u2018a0\u2019 arising from a use of \u2018read\u2019\n   prevents the constraint \u2018(Read a0)\u2019 from being solved.\n   Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.\n</code></pre>\n\n<p>No infinite recursion if the program doesn't compile!)</p>\n"}], "owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1567417516, "creation_date": 1567326587, "last_edit_date": 1567417516, "question_id": 57744404, "link": "https://stackoverflow.com/questions/57744404/implementation-of-first-in-arrow-library", "title": "Implementation of `first` in Arrow library", "body": "<p>I don't understand the implementation of <code>first</code> in the library.</p>\n\n<p><code>first</code> seems to be defined recursively with <code>***</code> -- I don't see when the recursion shall end!?</p>\n\n<pre><code>first :: a b c -&gt; a (b,d) (c,d)\nfirst = (*** id)\n</code></pre>\n\n<p>and </p>\n\n<pre><code>(***) :: a b c -&gt; a b' c' -&gt; a (b,b') (c,c')\nf *** g = first f &gt;&gt;&gt; arr swap &gt;&gt;&gt; first g &gt;&gt;&gt; arr swap\n    where swap ~(x,y) = (y,x)\n</code></pre>\n\n<p><code>first f</code> is <code>(f *** id)</code> which is <code>(first f &gt;&gt;&gt; arr swap &gt;&gt;&gt; first id...)</code> and the new <code>first</code> will be another <code>(*** id)</code> and so on...</p>\n"}, {"tags": ["haskell", "functional-programming", "factorial", "arrows"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1567290224, "post_id": 57741786, "comment_id": 101922941, "body": "Remember: <code>d</code> can be a function type"}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1567291005, "post_id": 57741786, "comment_id": 101923020, "body": "@luqui True. I tried creating a composition of products with the <code>id</code> as the terminating value, yet, the problem with accumulation still holds. Or did you mean something else by that?"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1567291341, "post_id": 57741786, "comment_id": 101923049, "body": "Using <code>ArrowCircuit</code> and <code>newtype SF a b = SF { runSF :: [a] -&gt; [b] }</code> from \u201cProgramming with Arrows\u201d, this could be written as <code>fact = last . runSF factA . enumFromTo 1 . succ where factA = proc x -&gt; do { rec { acc &lt;- delay 1 -&lt; x * acc }; returnA -&lt; acc }</code>, which I\u2019m pretty sure does essentially the same thing as <code>fact = product . enumFromTo 1</code> but with a bit more allocation."}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "reply_to_user": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1567292215, "post_id": 57741786, "comment_id": 101923157, "body": "@JonPurdy since <code>Arrow.loop</code> underlies <code>rec</code>, it means, it should be possible indeed. Now we simply need to rewrite the recursive notation, using <code>Arrow.loop</code>."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1567295109, "post_id": 57741786, "comment_id": 101923453, "body": "@ZhiltsoffIgor do you know how to write factorial using <code>fix</code>?  BTW this can be done using just <code>ArrowLoop</code>, we don&#39;t actually require anything like <code>delay</code>."}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1567316205, "post_id": 57741786, "comment_id": 101925507, "body": "@luqui <code>fact = fix $ \\ f n -&gt; if n &gt; 1 then n * f (n - 1) else 1</code>, as far as I can tell. I should\u2019ve thought about it, right."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1567348175, "post_id": 57741786, "comment_id": 101931218, "body": "@ZhiltsoffIgor also, <code>fact = fix (\\ f acc i -&gt; if i &gt; 1 then f (i*acc) (i-1) else acc) 1</code>."}], "answers": [{"comments": [{"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 0, "creation_date": 1567320452, "post_id": 57742566, "comment_id": 101926072, "body": "Can you recommend something to read about the fixed point to get a better grasp of this concept, please?"}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 1, "creation_date": 1567328498, "post_id": 57742566, "comment_id": 101927451, "body": "I read about fixed points, and I can&#39;t see how they are used in your solution with <code>loop</code>. It seems that we simply bind the 2nd element of the pair (<code>f</code>) with some recursive definition which has a terminating branch and then we simply apply it to the argument, which gives us a result as the 1st element of the pair, which doesn&#39;t depend on the function anymore since the recursion has terminated. The Fibonacci sequence is pretty much the same:   <code>fib = loop $ \\(n, f) -&gt; (f n (0, 1), \\i (p, q) -&gt; if i == 0 then p else f (i - 1) (q, p + q))</code> Am I missing the point of fixed points?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 1, "creation_date": 1567336035, "post_id": 57742566, "comment_id": 101928872, "body": "@ZhiltsoffIgor, but the <code>f</code> we bind in the pair is precisely what makes the definition recursive -- this is the sense in which fixed points are used.   When factorial recurses, it calls <code>f (i - 1) (i * acc)</code>, not &quot;itself&quot;.  It&#39;s only the fixed point in <code>loop</code> which ties the knot, which makes <code>f</code> equal to <code>\\i acc -&gt; ...</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 1, "creation_date": 1567349559, "post_id": 57742566, "comment_id": 101931543, "body": "@ZhiltsoffIgor AFAICT, yes, you&#39;re right. looking at the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/Control.Arrow.html#line-379\" rel=\"nofollow noreferrer\">loop source</a> for the <code>-&gt;</code> ArrowLoop instance, it <i>is</i> a simple <code>let</code> binding, and those are recursive in Haskell by themselves of course. So there&#39;s no explicit <code>fix</code> there, just <code>fact n === loop (\\(n, f) -&gt; (f n 1, G[f])) n === let (c,d) = (\\(n, f) -&gt; (f n 1, G[f])) (n,d) in c === let (c,f) = (\\(n, f) -&gt; (f n 1, G[f])) (n,f) in c === let (c,f) = (f n 1, G[f]) in c === let f = G[f] in f n 1</code> where <code>G[f] = \\i acc -&gt; ...f....</code>."}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1567350925, "post_id": 57742566, "comment_id": 101931865, "body": "@WillNess got it, thank you. Can you recommend any depository of problems of such sort to get a better understanding of the overall theme (or any other literature on that topic)?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 0, "creation_date": 1567358441, "post_id": 57742566, "comment_id": 101933541, "body": "@ZhiltsoffIgor sadly, no. do you mean <code>fix</code>, or <code>loop</code>? I know next to nothing about the latter. for the former, there&#39;s google, wikipedia, and  <a href=\"https://stackoverflow.com/questions/tagged/y-combinator\">y-combinator</a>. :)  ----  do notice that <i>implicitly</i> the <code>fix</code> <i>is</i> there, since it is defined as <code>fix g = let {f = g f} in f</code> and this is what we have there. also, have you seen this trick: (in pseudocode) <code>let_rec fact = (\\n -&gt; ...fact...) ==&gt; let_rec fact = (\\f -&gt; (\\n -&gt; ...f...)) fact ==&gt; let_nonrec fact = fix (\\f -&gt; (\\n -&gt; ...f...))</code>."}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1567359059, "post_id": 57742566, "comment_id": 101933662, "body": "@WillNess, yes, I&#39;ve seen a pretty interesting paper about such a trick. Maybe someone would also like to take a look, so here it is - <a href=\"http://www.vex.net/~trebla/haskell/fix.xhtml\" rel=\"nofollow noreferrer\">vex.net/~trebla/haskell/fix.xhtml</a>."}, {"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "reply_to_user": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 1, "creation_date": 1567361644, "post_id": 57742566, "comment_id": 101934217, "body": "@ZhiltsoffIgor I expended the answer a bit with the hope that it will provide more intuition into what&#39;s going on. I don&#39;t know of any resources of top of my head, since I learned about this stuff back in college, therefore the answer above is just my understanding of this topic."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1567373916, "post_id": 57742566, "comment_id": 101936673, "body": "some (very) old lisp and ml stuff on Y is for instance <a href=\"https://www.dreamsongs.com/Files/WhyOfY.pdf\" rel=\"nofollow noreferrer\">dreamsongs.com/Files/WhyOfY.pdf</a>, and <a href=\"http://lambda-the-ultimate.org/classic/message5463.html\" rel=\"nofollow noreferrer\">lambda-the-ultimate.org/classic/message5463.html</a> (the archived pdf of that article is linked <a href=\"http://web.archive.org/web/20030106145736/http://www.scms.rgu.ac.uk/staff/bjm/doc/#fics2001\" rel=\"nofollow noreferrer\">here</a>) (the last one I think also goes by the name of &quot;open recursion&quot; fwiw)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "edited": false, "score": 0, "creation_date": 1567374528, "post_id": 57742566, "comment_id": 101936765, "body": "@ZhiltsoffIgor ah right, thanks for the link. I tried googling &quot;could reinvent y combinator&quot; but that found nothing pertinent."}], "tags": [], "owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "is_accepted": true, "score": 5, "last_activity_date": 1567361836, "last_edit_date": 1567361836, "creation_date": 1567300437, "answer_id": 57742566, "question_id": 57741786, "link": "https://stackoverflow.com/questions/57741786/how-to-implement-factorial-via-control-arrow-loop/57742566#57742566", "title": "How to implement Factorial via Control.Arrow.loop?", "body": "<p>I've never actually used <code>ArrowLoop</code> before, <code>loop</code> is pretty cool.</p>\n\n<p>Here is a factorial implemented using <code>loop</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fact :: Integer -&gt; Integer\nfact =\n  loop $ \\(n, f) -&gt;\n    ( f n 1\n    , \\i acc -&gt;\n        if i &gt; 0\n          then f (i - 1) (i * acc)\n          else acc)\n</code></pre>\n\n<p>Let's give it a try:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; fact &lt;$&gt; [1..11]\n[1,2,6,24,120,720,5040,40320,362880,3628800,39916800]\n</code></pre>\n\n<p>I don't know if I can answer the first question you have, but for the 3rd one it's obviously possible. For the concepts that could help you, I think the fix point is the one you are looking for. For example you can start by trying this ;)</p>\n\n<pre><code>\u03bb&gt; import Data.Function\n\u03bb&gt; fix error\n</code></pre>\n\n<p>Once you press enough <code>Ctrl+C</code> you can write factorial using fix point:</p>\n\n<pre><code>\u03bb&gt; let fact = fix $ \\ f i -&gt; if i &gt; 1 then i * f (i - 1) else i\n\u03bb&gt; fact &lt;$&gt; [1..11]\n[1,2,6,24,120,720,5040,40320,362880,3628800,39916800]\n</code></pre>\n\n<p><strong>Edit</strong></p>\n\n<p>It seems like a bit of expansion on the answer could be helpful.</p>\n\n<p>First of all let's look at an alternative and better (due to tail recursion) implementation of <code>fact</code> using <code>fix</code>, so we can see how it compares with our implementation using <code>loop</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>factFix :: Integer -&gt; Integer\nfactFix n =\n  fix\n    (\\f -&gt;\n       \\i acc -&gt;\n         if i &gt; 0\n           then f (i - 1) (i * acc)\n           else acc)\n    n\n    1\n</code></pre>\n\n<p>We can see it is not far off. In both cases we get <code>f</code> as an argument and we return back a function that uses that <code>f</code>, in fact, the returned non-recursive function is identical in both cases. Just for clarity let's extract it an reuse in both places:</p>\n\n<pre><code>factNoRec :: (Ord p, Num p) =&gt; (p -&gt; p -&gt; p) -&gt; p -&gt; p -&gt; p\nfactNoRec f i acc =\n  if i &gt; 0\n    then f (i - 1) (i * acc)\n    else acc\n\nfactLoop :: Integer -&gt; Integer\nfactLoop n = loop (\\(k, f) -&gt; (f k 1, factNoRec f)) n\n\nfactFix :: Integer -&gt; Integer\nfactFix n = fix (\\f -&gt; factNoRec f) n 1\n</code></pre>\n\n<p>Hopefully now it is much more apparent that they are really related concepts.</p>\n\n<p>Looking into implementations of <code>fix</code> and <code>loop</code> (at least for functions, cause there are also <code>mfix</code> and loop for <code>Kleisli</code>) provides even more insight into their relation:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; fix f = let x = f x in x\n\u03bb&gt; loop f b = let (c,d) = f (b,d) in c\n</code></pre>\n\n<p>They are really close to each other.</p>\n\n<p>How about type signatures:</p>\n\n<pre><code>\u03bb&gt; :t fix\nfix :: (t -&gt; t) -&gt; t\n\u03bb&gt; :t loop\nloop :: ((b, d) -&gt; (c, d)) -&gt; b -&gt; c\n</code></pre>\n\n<p>Those look different. But if you do a bit of unification in the <code>fact</code> case you'll see that <code>fix</code> and <code>loop</code> acquire types:</p>\n\n<pre><code>\u03bb&gt; :t fix :: ((a -&gt; b -&gt; c) -&gt; (a -&gt; b -&gt; c)) -&gt; a -&gt; b -&gt; c\n\u03bb&gt; :t loop :: ((b, a -&gt; b -&gt; c) -&gt; (c, a -&gt; b -&gt; c)) -&gt; b -&gt; c\n</code></pre>\n\n<p>All of <code>a</code> <code>b</code> and <code>c</code> become all <code>Integer</code> in the end, but looking at type variables instead gives a better insight into what's going on. And really what's going on is just recursion by the means of fixed point combinators.</p>\n"}], "owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 57742566, "answer_count": 1, "score": 6, "last_activity_date": 1589387870, "creation_date": 1567287990, "last_edit_date": 1589387870, "question_id": 57741786, "link": "https://stackoverflow.com/questions/57741786/how-to-implement-factorial-via-control-arrow-loop", "title": "How to implement Factorial via Control.Arrow.loop?", "body": "<p>I wonder whether it is possible to implement factorial using Control.Arrow.loop. </p>\n\n<p><code>loop :: ArrowLoop a =&gt; a (b, d) (c, d) -&gt; a b c</code></p>\n\n<p>One of the evident ideas is to implement a somehow terminating branch (a branch where the first element of the pair (type <code>c</code>) wouldn't depend on the second element of the pair (type <code>d</code>)).\nIt seems to me that it can't be done since we can't apply any boolean function to the second element of the pair (type <code>d</code>) during the first iteration because it would cause infinite recursion, so it only leaves us with the argument (type <code>b</code>), but the result of any boolean function wouldn't differ depending on the iteration (the argument doesn't change), thus, it would either terminate instantly or never terminate at all.\nThe other idea I had is to create an endless stream of factorials, but this doesn't seem real either, since, once again, the argument can't be changed.\nSo, I have 3 questions:</p>\n\n<ol>\n<li>Am I right about the points above?</li>\n<li>Am I missing any other concept which would help to implement factorial via <code>Control.Arrow.loop</code>?</li>\n<li>What is the correct idea behind this implementation?</li>\n</ol>\n"}, {"tags": ["haskell", "byte", "heap-memory"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567264537, "post_id": 57739123, "comment_id": 101917569, "body": "A <code>String</code> is a <i>linked list</i> of <code>Char</code>s, so you have the data (in the <code>Char</code>s) but the linked list structure will occupy space as well. Furthermore note that due to laziness, it is not said that the <code>String</code> <i>at that moment</i> takes the size of the sum of the size of the caracters."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567265261, "post_id": 57739123, "comment_id": 101917759, "body": "Related: <a href=\"https://stackoverflow.com/q/44876904/67579\">stackoverflow.com/q/44876904/67579</a>"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1567272179, "post_id": 57739521, "comment_id": 101919413, "body": "<code>Char</code> is defined pretty much like that in <a href=\"http://hackage.haskell.org/package/ghc-prim-0.5.3/docs/GHC-Types.html#t:Char\" rel=\"nofollow noreferrer\"><code>GHC.Types</code></a>. The only extra bit is a <code>CTYPE</code> annotation."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1567272543, "post_id": 57739521, "comment_id": 101919478, "body": "Does GHC preallocate common ASCII <code>Char</code> values the way it does small <code>Int</code> values?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1567273879, "post_id": 57739521, "comment_id": 101919782, "body": "@dfeuer Ah, I bet it does! And the reason I bet this is that I found on another question (which I am having trouble finding now) that the estimate constructed as in this answer was too high compared to my observations of max residency; sharing of small <code>Char</code>s could perhaps have explained that discrepancy."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1567274156, "post_id": 57739521, "comment_id": 101919847, "body": "@dfeuer Some simple testing seems to support that hypothesis: <code>readFile &quot;foo&quot; &gt;&gt;= \\s -&gt; print (length s) &gt;&gt; print (length s)</code> takes about double the max residency if <code>foo</code> has <code>&#39;\\1114111&#39;</code>s in it than if it has <code>&#39;a&#39;</code>s in it."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1567295054, "post_id": 57739521, "comment_id": 101923446, "body": "(...and &quot;about double max residency&quot; is consistent with saving 2 words out of 5 for each character, which is what you would predict if the <code>C#</code> constructor and <code>Char#</code> content cost nothing.)"}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 2, "creation_date": 1567312780, "post_id": 57739521, "comment_id": 101925115, "body": "Yes, ghc does preallocate ASCII Chars and ensure sharing during GC. Both that and the small Int trick is stuff it inherited from hbc."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 14, "last_activity_date": 1567266787, "creation_date": 1567266787, "answer_id": 57739521, "question_id": 57739123, "link": "https://stackoverflow.com/questions/57739123/can-we-write-a-function-in-haskell-to-measure-the-number-of-bytes-that-a-string/57739521#57739521", "title": "Can we write a function in Haskell to measure the number of bytes that a string of n characters occupies?", "body": "<p>It's complicated.</p>\n\n<p>Let's talk about GHC, and about <code>String</code> specifically, and let's assume the thing has been fully evaluated, so we didn't get to use it iteratively in a GC-friendly way and we didn't get to delay evaluation and store a tiny thunk representing an enormous data structure.</p>\n\n<p>After making all those simplifying assumptions, we're gonna need to know some definitions.</p>\n\n<pre><code>type String = [Char]\ndata [a] = [] | a : [a] -- pseudosyntax\ndata Char = C# Char# -- I'm guessing, couldn't find a canonical source\n</code></pre>\n\n<p>Now we're going to use a few rules of thumb. First: unboxed stuff (like <code>Char#</code>) is generally stored in a machine word. We live in a world of 64-bit machines, so <code>Char#</code> is probably 8 bytes, even though it likely only uses the bottom 4 bytes of it. Second: data constructors are a word to say which constructor, plus a word to point at each of the fields.</p>\n\n<p>Now we're ready to tot it up.</p>\n\n<p>Empty strings are <code>[]</code>, one word for the constructor, no words for fields, so one word total.</p>\n\n<p>Nonempty strings are <code>c : cs</code>, so one word for the <code>:</code> constructor, one word to point to <code>c</code>, one word to point to <code>cs</code>, one word for the <code>C#</code> constructor, one word for the <code>Char#</code>.  That's 5 words plus however many we need for <code>cs</code>.</p>\n\n<p>So for a <code>String</code> of length n, we've got 5*n words to represent the body of the <code>String</code> and one extra for the terminating <code>[]</code>. Practically speaking that's 40 bytes per character! Yikes.</p>\n\n<p>And now you know why packed representations like <code>Text</code> (or, when appropriate, <code>ByteString</code>) are such a big deal.</p>\n"}, {"comments": [{"owner": {"reputation": 30852, "user_id": 15441, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f5fdef7fa815d59023c2eaa95f274c3f?s=128&d=identicon&r=PG&f=1", "display_name": "hawkeye", "link": "https://stackoverflow.com/users/15441/hawkeye"}, "edited": false, "score": 0, "creation_date": 1567311169, "post_id": 57741257, "comment_id": 101924962, "body": "Could you expand on the link of the example?"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 30852, "user_id": 15441, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f5fdef7fa815d59023c2eaa95f274c3f?s=128&d=identicon&r=PG&f=1", "display_name": "hawkeye", "link": "https://stackoverflow.com/users/15441/hawkeye"}, "edited": false, "score": 0, "creation_date": 1567313758, "post_id": 57741257, "comment_id": 101925217, "body": "@hawkeye I&#39;ve added an example."}], "tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": true, "score": 4, "last_activity_date": 1567313743, "last_edit_date": 1567313743, "creation_date": 1567281644, "answer_id": 57741257, "question_id": 57739123, "link": "https://stackoverflow.com/questions/57739123/can-we-write-a-function-in-haskell-to-measure-the-number-of-bytes-that-a-string/57741257#57741257", "title": "Can we write a function in Haskell to measure the number of bytes that a string of n characters occupies?", "body": "<p>There's a Haskell package called <code>ghc-datasize</code> which allows you to calculate <strong>real</strong> occupied memory by every Haskell value. You can even see an example of how to calculate string size in the official Hackage documentation:</p>\n\n<ul>\n<li><a href=\"http://hackage.haskell.org/package/ghc-datasize\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/ghc-datasize</a></li>\n</ul>\n\n<p>To calculate the length of the <code>String</code> you need to use the following function:</p>\n\n<pre><code>recursiveSize :: a -&gt; IO Word\n</code></pre>\n\n<p>It looks like this:</p>\n\n<pre><code>ghci&gt; recursiveSize $!! \"foobar\"\n240\n</code></pre>\n"}], "owner": {"reputation": 30852, "user_id": 15441, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f5fdef7fa815d59023c2eaa95f274c3f?s=128&d=identicon&r=PG&f=1", "display_name": "hawkeye", "link": "https://stackoverflow.com/users/15441/hawkeye"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 0, "accepted_answer_id": 57741257, "answer_count": 2, "score": 4, "last_activity_date": 1567313743, "creation_date": 1567263861, "last_edit_date": 1567281639, "question_id": 57739123, "link": "https://stackoverflow.com/questions/57739123/can-we-write-a-function-in-haskell-to-measure-the-number-of-bytes-that-a-string", "title": "Can we write a function in Haskell to measure the number of bytes that a string of n characters occupies?", "body": "<p>Suppose I have the string</p>\n\n<pre><code>\"abc\"\n</code></pre>\n\n<p>and I want to calculate the number of bytes it occupies in memory. </p>\n\n<p>I could do: </p>\n\n<pre><code>import Data.Bits\nfiniteBitSize (\"abc\" :: [Char])\n</code></pre>\n\n<p>but that breaks because <code>[Char]</code> is not a type supported by the function. (Also it is bits not bytes, but the point was to paint a picture of what I'm looking for). </p>\n\n<p>My question is: <strong>Can we write a function in Haskell to measure the number of bytes that a string of n characters occupies?</strong></p>\n"}, {"tags": ["haskell", "switch-statement"], "answers": [{"comments": [{"owner": {"reputation": 19222, "user_id": 789186, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/9d232cc5abe46092d3972d4f85833e42?s=128&d=identicon&r=PG", "display_name": "user4035", "link": "https://stackoverflow.com/users/789186/user4035"}, "edited": false, "score": 0, "creation_date": 1567262151, "post_id": 57738675, "comment_id": 101916976, "body": "Can you also  check that age string is in number format?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 19222, "user_id": 789186, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/9d232cc5abe46092d3972d4f85833e42?s=128&d=identicon&r=PG", "display_name": "user4035", "link": "https://stackoverflow.com/users/789186/user4035"}, "edited": false, "score": 1, "creation_date": 1567285963, "post_id": 57738675, "comment_id": 101922337, "body": "Sure, write a function <code>verify :: String -&gt; Either Error Int</code>, then use <code>(get &quot;age&quot; kv &gt;&gt;= verify)</code>."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1567287427, "last_edit_date": 1567287427, "creation_date": 1567260208, "answer_id": 57738675, "question_id": 57738540, "link": "https://stackoverflow.com/questions/57738540/additional-pattern-matching-inside-case/57738675#57738675", "title": "Additional pattern matching inside case", "body": "<p>You have an association list; use <code>lookup</code> to get each name, or produce an <code>IncompleteDataError</code> if the lookup fails. <code>maybe</code> converts each <code>Nothing</code> to a <code>Left</code> value and each <code>Just value</code> to <code>Right value</code>.</p>\n\n<pre><code>-- lookup :: Eq a =&gt; a -&gt; [(a,b)] -&gt; Maybe b\n-- maybe :: b -&gt; (a -&gt; b) -&gt; Maybe a -&gt; b\n\nverifyInt :: String -&gt; Either Error Int\nverifyInt x = ... -- E.g. verify \"3\" == Right 3\n                  --      verify \"foo\" == Left IncorrectDataError\n\n\nfillPerson kv = Person\n                &lt;$&gt; (get \"firstName\" kv)\n                &lt;*&gt; (get \"lastName\" kv)\n                &lt;*&gt; (get \"age\" kv &gt;&gt;= verifyInt)\n    where get key kv = maybe (Left IncompleteDataError) Right $ lookup key kv\n</code></pre>\n\n<p>Since <code>get :: String -&gt; [(String, String)] -&gt; Either Error String</code>, the <code>Applicative</code> instance for functions ensures that <code>fillPerson :: [(String, String)] -&gt; Either Error Person</code>. If any call to <code>get</code> returns <code>Left IncompleteDataError</code>, the result of <code>Person &lt;$&gt; ...</code> will do so as well; otherwise, you'll get a <code>Right (Person ...)</code> value.</p>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 2, "last_activity_date": 1567289714, "last_edit_date": 1567289714, "creation_date": 1567288062, "answer_id": 57741791, "question_id": 57738540, "link": "https://stackoverflow.com/questions/57738540/additional-pattern-matching-inside-case/57741791#57741791", "title": "Additional pattern matching inside case", "body": "<p>The problem that you have is trying to do all the things at once in a single recursive function, interleaving several different concerns. It\u2019s possible to write that way, but better to follow the format of @chepner\u2019s answer and break things down into pieces. This is a supplement to their answer re. the verification of <code>age</code>. With the addition of an import:</p>\n\n<pre><code>-- readMaybe :: Read a =&gt; String -&gt; Maybe a\nimport Text.Read (readMaybe)\n</code></pre>\n\n<p>And a helper function to turn <code>Maybe</code> \u201cfailures\u201d (<code>Nothing</code>) into the corresponding <code>Either</code> (<code>Left</code>):</p>\n\n<pre><code>maybeToEither :: a -&gt; Maybe b -&gt; Either a b\nmaybeToEither x = maybe (Left x) Right\n</code></pre>\n\n<p>Here is a solution that does all the verification you describe:</p>\n\n<pre><code>fillPerson store = do  -- Either monad\n\n  -- May fail with \u2018IncompleteDataError\u2019\n  f &lt;- string \"firstName\"\n  l &lt;- string \"lastName\"\n\n  -- May fail with \u2018IncompleteDataError\u2019 *or* \u2018IncorrectDataError\u2019\n  a &lt;- int \"age\"\n\n  pure Person\n    { firstName = f\n    , lastName = l\n    , age = a\n    }\n\n  where\n\n    string :: String -&gt; Either Error String\n    string key = maybeToEither IncompleteDataError (lookup key store)\n\n    int :: String -&gt; Either Error Int\n    int key = do\n      value &lt;- string key  -- Reuse error handling from \u2018string\u2019\n      maybeToEither (IncorrectDataError value) (readMaybe value)\n</code></pre>\n\n<p>You can make this more compact using <code>RecordWildCards</code>, although this is less advisable because it\u2019s not explicit, so it\u2019s sensitive to renaming of fields in <code>Person</code>.</p>\n\n<pre><code>fillPerson store = do\n  firstName &lt;- string \"firstName\"\n  lastName &lt;- string \"lastName\"\n  age &lt;- int \"age\"\n  pure Person{..}  -- Implicitly, \u2018firstName = firstName\u2019 &amp;c.\n  where\n    \u2026\n</code></pre>\n\n<p><code>Applicative</code> operators are more common for this type of thing, and preferable in most cases as they avoid unnecessary intermediate names. However, one caveat of using positional arguments rather than named fields is that it\u2019s possible to mix up the order of fields that have the same type (here, <code>firstName</code> and <code>lastName</code>).</p>\n\n<pre><code>fillPerson store = Person\n  &lt;$&gt; string \"firstName\"\n  &lt;*&gt; string \"lastName\"\n  &lt;*&gt; int \"age\"\n  where\n    \u2026\n</code></pre>\n\n<p>It\u2019s also possible to make this definition point-free, omitting <code>store</code> from the parameters of <code>fillPerson</code> and making it instead a parameter of <code>string</code> and <code>int</code>, using <code>liftA3 Person &lt;$&gt; string \"firstName\" &lt;*&gt; \u2026</code> (the <code>(r -&gt;)</code> applicative); in this particular case I wouldn\u2019t choose that style, but it may be a worthy exercise to try to rewrite it yourself.</p>\n\n<hr>\n\n<p>As to your question:</p>\n\n<pre><code>    -- I need to store reads value :: [(Int, String)]\n    -- if the String is not empty, return Left IncorrectDataError value\n    -- but how to write this?\n</code></pre>\n\n<p>You can write:</p>\n\n<pre><code>\"age\" -&gt; case reads value of\n  [(value', \"\")] -&gt; helper xs p{age=value'} (n + 1)\n  _ -&gt; Left (IncorrectValueError value)\n</code></pre>\n\n<p>However there are a number of problems with your code:</p>\n\n<ul>\n<li><p>It starts with a <code>Person</code> whose fields are undefined, and will raise exceptions if accessed, which would be fine if you guaranteed that they were all filled in, but\u2026</p></li>\n<li><p>It tracks the <em>number</em> of fields set but not <em>which fields</em>, so you can set <code>firstName</code> three times and end up returning an invalid <code>Person</code>.</p></li>\n</ul>\n\n<p>So if you want to do this in a single definition, here\u2019s how I would restructure it\u2014keep the recursive helper, but make each equation handle one condition, using an accumulator with <code>Maybe</code>s for each of the fields, updating them from <code>Nothing</code> to <code>Just</code> as you find each field.</p>\n\n<pre><code>fillPerson' :: [(String, String)] -&gt; Either Error Person\nfillPerson' = fillFields (Nothing, Nothing, Nothing)\n  where\n\n    fillFields\n      -- Accumulator of firstName, lastName, and age.\n      :: (Maybe String, Maybe String, Maybe Int)\n      -- Remaining input keys to check.\n      -&gt; [(String, String)]\n      -- Final result.\n      -&gt; Either Error Person\n\n    -- Set firstName if not set.\n    fillFields (Nothing, ml, ma) ((\"firstName\", f) : kvs)\n      = fillFields (Just f, ml, ma) kvs\n\n    -- Set lastName if not set.\n    fillFields (mf, Nothing, ma) ((\"lastName\", l) : kvs)\n      = fillFields (mf, Just l, ma) kvs\n\n    -- Set age if not set, failing immediately if not a valid number.\n    fillFields (mf, ml, Nothing) ((\"age\", a) : kvs)\n      | all (`elem` ['0'..'9']) a\n      = fillFields (mf, ml, Just (read a)) kvs\n      | otherwise\n      = Left (IncorrectDataError a)\n\n    -- Ignore redundant firstName.\n    fillFields acc@(Just{}, ml, ma) ((\"firstName\", _) : kvs)\n      = fillFields acc kvs\n\n    -- Ignore redundant lastName.\n    fillFields acc@(mf, Just{}, ma) ((\"lastName\", _) : kvs)\n      = fillFields acc kvs\n\n    -- Ignore redundant age.\n    fillFields acc@(mf, ml, Just{}) ((\"age\", _) : kvs)\n      = fillFields acc kvs\n\n    -- Ignore extra fields.\n    fillFields acc (_ : kvs)\n      = fillFields acc kvs\n\n    -- If all fields are present anywhere in the input,\n    -- we can finish early and successfully.\n    fillFields (Just f, Just l, Just a) _\n      = Right Person\n        { firstName = f\n        , lastName = l\n        , age = a\n        }\n\n    -- If any field is missing at the end, fail.\n    fillFields __ []\n      = Left IncompleteDataError\n</code></pre>\n\n<p>Note how the structure of the code is very brittle: if we change <code>Person</code> at all, many lines of this definition will have to change. That\u2019s why it\u2019s better to break the problem down into smaller composable parts and put them together.</p>\n\n<p>This does, however, serve as an example of how to translate an \u201cimperative\u201d loop into Haskell: write a recursive function with an accumulator for your \u201cmutable\u201d state, make a recursive call (possibly updating the accumulator) to loop, and stop the recursion to exit the loop. (In fact, if you squint, this is essentially a translation of an imperative program into an explicit control graph.)</p>\n"}], "owner": {"reputation": 19222, "user_id": 789186, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/9d232cc5abe46092d3972d4f85833e42?s=128&d=identicon&r=PG", "display_name": "user4035", "link": "https://stackoverflow.com/users/789186/user4035"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 57741791, "answer_count": 2, "score": 1, "last_activity_date": 1567289714, "creation_date": 1567259069, "question_id": 57738540, "link": "https://stackoverflow.com/questions/57738540/additional-pattern-matching-inside-case", "title": "Additional pattern matching inside case", "body": "<p>Hopefully, the code is commented well enough.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- I have 2 data types:\n\ndata Person = Person { firstName :: String, lastName :: String, age :: Int }\n  deriving (Show)\n\ndata Error = IncompleteDataError | IncorrectDataError String\n  deriving (Show)\n\n-- This function should take a list a pairs like:\n-- fillPerson [(\"firstName\",\"John\"), (\"lastName\",\"Smith\"), (\"dbdf\", \"dff\"), (\"age\",\"30\"), (\"age\", \"40\")]\n-- And fill the record with values of the fields with corresponding names.\n-- It ignores the redundant fields.\n-- If there are less then 3 meaningful fields, it should throw an error IncompleteDataError\n-- If the field age doesn't have a number, if should return IncorrectDataError str, where str \u2014 is the value of age.\n\nfillPerson :: [(String, String)] -&gt; Either Error Person\n\nfillPerson [] = Left IncompleteDataError\nfillPerson (x:xs) = let\n\n  -- Int stores number of fields\n  helper :: [(String, String)] -&gt; Person -&gt; Int -&gt; Either Error Person\n  helper _ p 3 = Right p\n  helper [] _ _ = Left IncompleteDataError\n  helper ((key, value):xs) p n = case key of\n    \"firstName\" -&gt; helper xs p{firstName=value} (n + 1)\n    \"lastName\" -&gt; helper xs p{lastName=value} (n + 1)\n    -- how to return IncorrectDataError str here?\n    -- I need to store reads value :: [(Int, String)]\n    -- if the String is not empty, return Left IncorrectDataError value\n    -- but how to write this?\n    \"age\" -&gt; helper xs p{age=read value::Int} (n + 1)\n    _ -&gt; helper xs p n\n  in\n    helper (x:xs) Person{} 0\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2966, "user_id": 3014199, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/72332b0ac6ee78bc829c378c6c747e0e?s=128&d=identicon&r=PG", "display_name": "peer", "link": "https://stackoverflow.com/users/3014199/peer"}, "edited": false, "score": 1, "creation_date": 1567250560, "post_id": 57737556, "comment_id": 101914192, "body": "Never used the library, so I can&#39;t offer an in depth explanation but this works for me: <code>decode (encode (5 :: Int)) :: Either String Int</code> so I guess type inference can&#39;t reach the <code>5</code> through both <code>decode</code> and <code>encode</code>."}, {"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "edited": false, "score": 6, "creation_date": 1567250794, "post_id": 57737556, "comment_id": 101914226, "body": "<code>encode 5</code> Likely defaults to <code>5 :: Integer</code>, which means serialization will be different from <code>Int</code>, therefore deserialization fails."}, {"owner": {"reputation": 2966, "user_id": 3014199, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/72332b0ac6ee78bc829c378c6c747e0e?s=128&d=identicon&r=PG", "display_name": "peer", "link": "https://stackoverflow.com/users/3014199/peer"}, "reply_to_user": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "edited": false, "score": 0, "creation_date": 1567251018, "post_id": 57737556, "comment_id": 101914272, "body": "@lehins You are correct! <code>decode (encode 5) :: Either String Integer</code> works!"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1567267358, "creation_date": 1567267358, "answer_id": 57739590, "question_id": 57737556, "link": "https://stackoverflow.com/questions/57737556/data-serialize-cannot-decode-encoded-bytes/57739590#57739590", "title": "Data.Serialize cannot decode encoded bytes", "body": "<p>The type of <code>5</code> is ambiguous, and you are being hit by defaulting. You can either change the type you try to deserialize to to match the default chosen:</p>\n\n<pre><code>&gt; decode (encode 5) :: Either String Integer\n</code></pre>\n\n<p>Change the defaulting rules to pick the type you like:</p>\n\n<pre><code>&gt; default (Int)\n&gt; decode (encode 5) :: Either String Int\n</code></pre>\n\n<p>Or prevent defaulting from happening by making its type unambiguous:</p>\n\n<pre><code>&gt; decode (encode (5 :: Int)) :: Either String Int\n</code></pre>\n\n<p>You can read more about defaulting in <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-790004.3.4\" rel=\"nofollow noreferrer\">the Report</a>. Normally this particular ambiguous type would not be defaultable according to the Report, so if you were to stick this in a file and try to load that file you would get an error instead of this subtly incorrect behavior, but in ghci there are <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#extension-ExtendedDefaultRules\" rel=\"nofollow noreferrer\">extended defaulting rules</a> that make defaulting happen more often.</p>\n"}], "owner": {"reputation": 1220, "user_id": 3711976, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/d83e1776e6d29a6e86818109b8ac2104?s=128&d=identicon&r=PG&f=1", "display_name": "Kakaji", "link": "https://stackoverflow.com/users/3711976/kakaji"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1567267358, "creation_date": 1567250275, "question_id": 57737556, "link": "https://stackoverflow.com/questions/57737556/data-serialize-cannot-decode-encoded-bytes", "title": "Data.Serialize cannot decode encoded bytes", "body": "<p>Why does the simple encode/decode test fail in GHCI as shown below? I am using the <a href=\"https://hackage.haskell.org/package/cereal-0.5.8.1\" rel=\"nofollow noreferrer\">cereal</a> library.</p>\n\n<pre><code>\u03bb&gt; import Data.Serialize\n\u03bb&gt; decode (encode 5) :: Either String Int\nLeft \"too few bytes\\nFrom:\\tdemandInput\\n\\n\"\n</code></pre>\n"}, {"tags": ["haskell", "recursion", "numbers", "catalan"], "comments": [{"owner": {"reputation": 8806, "user_id": 257418, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/97Mb4.png?s=128&g=1", "display_name": "Lynn", "link": "https://stackoverflow.com/users/257418/lynn"}, "edited": false, "score": 2, "creation_date": 1567200334, "post_id": 57733258, "comment_id": 101906682, "body": "Your <code>c</code> function doesn&#39;t compile, for what it&#39;s worth. But, supposing you do tweak it into a working form, I don&#39;t think it&#39;s totally clear what you are looking for. What does &quot;better&quot; mean \u2014 is it just speed you&#39;re after? What do you take &quot;lazy&quot; to mean in the context of this question?"}], "answers": [{"comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1567265940, "post_id": 57733342, "comment_id": 101917901, "body": "@WillNess: but this is not a direct formula, since we do not calculate <code>c</code> for <code>n+1</code> without calculating <code>c</code> for <code>n</code> :)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1567266737, "post_id": 57733342, "comment_id": 101918085, "body": "@WillNess: I honestly do not read that in the question, it says they want to <i>avoid</i> an explicit formula, so something like <code>c n = div (nCr (2*n) n) (n+1)</code>. Where do you read other non-explicit ones should be avoided?"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 9, "last_activity_date": 1567200089, "creation_date": 1567200089, "answer_id": 57733342, "question_id": 57733258, "link": "https://stackoverflow.com/questions/57733258/lazy-catalan-numbers-in-haskell/57733342#57733342", "title": "Lazy Catalan Numbers in Haskell", "body": "<p>The <a href=\"https://en.wikipedia.org/wiki/Catalan_number#Properties\" rel=\"noreferrer\"><em>Catalan numbers</em> [wiki]</a> can be defined inductively with:</p>\n\n<p><em>C<sub>0</sub> = 1</em> and <em>C<sub>n+1</sub>=(4n+2)&times;C<sub>n</sub>/(n+2)</em>.</p>\n\n<p>So we can implement this as:</p>\n\n<pre><code>catalan :: Integral i =&gt; [i]\ncatalan = xs\n    where xs = 1 : zipWith f [0..] xs\n          f n cn = div ((4*n+2) * cn) (n+2)</code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude&gt; take 10 catalan\n[1,1,2,5,14,42,132,429,1430,4862]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 3, "last_activity_date": 1567211530, "creation_date": 1567211530, "answer_id": 57734376, "question_id": 57733258, "link": "https://stackoverflow.com/questions/57733258/lazy-catalan-numbers-in-haskell/57734376#57734376", "title": "Lazy Catalan Numbers in Haskell", "body": "<p>I'm guessing you're looking for a lazy, infinite, self-referential list of all the Catalan numbers using one of the basic recurrence relations.  That's a common thing to do with the Fibonacci numbers after all.  But it would help to specify the recurrence relation you mean, if you want answers to your specific question.  I'm guessing this is the one you mean:</p>\n\n<pre><code>cat :: Integer -&gt; Integer\ncat 1 = 1\ncat n = sum [ cat i * cat (n - i) | i &lt;- [1 .. n - 1] ]\n</code></pre>\n\n<p>If so, the conversion to a self-referential form looks like this:</p>\n\n<pre><code>import Data.List (inits)\n\ncats :: [Integer]\ncats = 1 : [ sum (zipWith (*) pre (reverse pre)) | pre &lt;- tail (inits cats) ]\n</code></pre>\n\n<p>This is quite a lot more complex than the fibonacci examples, because the recurrence refers to all previous entries in the list, not just a fixed small number of the most recent.  Using <code>inits</code> from <code>Data.List</code> is the easiest way to get the prefix at each position.  I used <code>tail</code> there because its first result is the empty list, and that's not helpful here. The rest is a straight-forward rewrite of the recurrence relation that I don't have much to say about.  Except...</p>\n\n<p>It's going to perform pretty badly.  I mean, it's better than the exponential recursive calls of my <code>cat</code> function, but there's a lot of list manipulation going on that's allocating and then throwing away a lot of memory cells. That recurrence relation is not a very good fit for the recursive structure of the list data type.  You can explore a lot of ways to make it more efficient, but they'll all be pretty bad in the end.  For this particular case, going to a closed-form solution is the way to go if you want performance.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1567264519, "creation_date": 1567264519, "answer_id": 57739212, "question_id": 57733258, "link": "https://stackoverflow.com/questions/57733258/lazy-catalan-numbers-in-haskell/57739212#57739212", "title": "Lazy Catalan Numbers in Haskell", "body": "<p><a href=\"https://stackoverflow.com/a/57734376/849891\">Apparently</a>, what you wanted is</p>\n\n<pre><code>&gt; cats = 1 : unfoldr (\\ fx -&gt; let x = sum $ zipWith (*) fx cats in Just (x, x:fx)) [1]\n\n&gt; take 10 cats\n[1,1,2,5,14,42,132,429,1430,4862]\n</code></pre>\n\n<p>This avoids the repeated reversing of the prefixes (as in the linked answer), by unfolding with the state being a reversed prefix while consing onto the state as well as producing the next element. </p>\n\n<p>The non-reversed prefix we don't have to maintain, as zipping the reversed prefix with the catalans list itself takes care of the catalans prefix's length.</p>\n\n<p>You did say you wanted to avoid the direct formula.</p>\n"}], "owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 373, "favorite_count": 0, "accepted_answer_id": 57733342, "answer_count": 3, "score": 3, "last_activity_date": 1567264519, "creation_date": 1567199573, "question_id": 57733258, "link": "https://stackoverflow.com/questions/57733258/lazy-catalan-numbers-in-haskell", "title": "Lazy Catalan Numbers in Haskell", "body": "<p>How might I go about efficiently generating an infinite list of Catalan numbers? What I have now works reasonably quickly, but it seems to me that there should be a better way.</p>\n\n<pre><code>c 1 = 1\nc n = sum (zipWith (*) xs (reverse xs)) : xs\n    where xs = c (n-1)\n\ncatalan = map (head . c) [1..]\n</code></pre>\n\n<p>I made an attempt at using <code>fix</code> instead, but the lambda isn't lazy enough for the computation to terminate:</p>\n\n<pre><code>catalan = fix (\\xs -&gt; xs ++ [zipWith (*) xs (reverse xs)])\n</code></pre>\n\n<p><sup>I realize <code>(++)</code> isn't ideal</sup></p>\n\n<p>Does such a better way exist? Can that function be made sufficiently lazy? There's an explicit formula for the n<sup>th</sup>, I know, but I'd rather avoid it.</p>\n"}, {"tags": ["haskell", "aeson"], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1567195204, "last_edit_date": 1567195204, "creation_date": 1567194892, "answer_id": 57732549, "question_id": 57732410, "link": "https://stackoverflow.com/questions/57732410/parsing-nested-arrays-and-objects-with-aeson/57732549#57732549", "title": "Parsing nested arrays and objects with Aeson", "body": "<p>I would write</p>\n\n<pre><code>newtype Family = Family {unFamily :: [Person]}\n</code></pre>\n\n<p>instead. Then</p>\n\n<pre><code>instance FromJSON Family where\n    parseJSON (Object o) = Family &lt;$&gt; (o .: \"family\")\n    parseJSON v = typeMismatch \"family\" v\ninstance ToJSON Family where\n    toJSON (Family c) = \"family\" .= c\n</code></pre>\n\n<p>should do the trick for the instances, and the <code>FromJSON</code>/<code>ToJSON</code> instances you get for free for <code>[Family]</code> will decode the example JSON you showed us/encode the example family you showed us as you want.</p>\n"}, {"comments": [{"owner": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "edited": false, "score": 0, "creation_date": 1567199139, "post_id": 57732576, "comment_id": 101906346, "body": "After understanding the types used in <code>aeson</code>, I tried doing it something like this, but I used regular <code>map</code> and <code>Vector.toList</code>. It didn&#39;t work. In the end, monads were the answer."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 1, "last_activity_date": 1567194997, "creation_date": 1567194997, "answer_id": 57732576, "question_id": 57732410, "link": "https://stackoverflow.com/questions/57732410/parsing-nested-arrays-and-objects-with-aeson/57732576#57732576", "title": "Parsing nested arrays and objects with Aeson", "body": "<p>You can make a function that parses a sublist, and then use <code>mapM</code> to convert the sublists:</p>\n\n<pre><code>import Data.Foldable(toList)\n\ninstance FromJSON Family where\n    parseJSON (Array arr) = Family &lt;$&gt; mapM parseSubList (toList arr)\n        where parseSubList (Object o) = o .:? \"family\" .!= []\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude Data.Aeson Data.Foldable&gt; decode \"[{\\\"family\\\":[{\\\"age\\\":45,\\\"name\\\":\\\"Julia\\\"},{\\\"age\\\":45,\\\"name\\\":\\\"Julia\\\"}]},{\\\"family\\\":[{\\\"age\\\":45,\\\"name\\\":\\\"Julia\\\"}]}]\" :: Maybe Family\nJust (Family {unFamily = [[Person {name = \"Julia\", age = 45},Person {name = \"Julia\", age = 45}],[Person {name = \"Julia\", age = 45}]]})\n</code></pre>\n"}], "owner": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 0, "accepted_answer_id": 57732549, "answer_count": 2, "score": 1, "last_activity_date": 1567195204, "creation_date": 1567193872, "question_id": 57732410, "link": "https://stackoverflow.com/questions/57732410/parsing-nested-arrays-and-objects-with-aeson", "title": "Parsing nested arrays and objects with Aeson", "body": "<p>I am having problems writing a <code>FromJSON</code> instance to parse a JSON file containing an array of objects nested within another array of objects. The file is of the form:</p>\n\n<pre><code>[{\"family\":[{\"name\":\"Jane\",\"age\":31,}\n           ,{\"name\":\"Ana\",\"age\":15,}]}\n,{\"family\":[{\"name\":\"Julia\",\"age\":45}\n           ,{\"name\":\"Chris\",\"age\":47}]}]\n</code></pre>\n\n<p>For that I created two new types:</p>\n\n<pre><code>-- A person\ndata Person = Person { name :: String\n                     , age  :: Int} deriving (Show, Eq)\n\n-- A family is a list of list of Person\nnewtype Family = Family {unFamily :: [[Person]]} deriving (Show, Eq)\n</code></pre>\n\n<p>And their instances are these (using <code>XOverloadedStrings</code>, <code>aeson</code> and <code>text</code>):</p>\n\n<pre><code>instance ToJSON Person where\n  toJSON (Person n a) = object [ \"name\" .= n\n                               , \"age\"  .= a]\ninstance FromJSON Person where\n  parseJSON (Object o) = Person\n    &lt;$&gt; o .:? \"name\" .!= \"\"\n    &lt;*&gt; o .:? \"age\"  .!= 0\n  parseJSON _ = mzero\n\ninstance ToJSON Family where\n  toJSON (Family c) = toJSON . map (\\v -&gt; object $ (\"family\",v):[]) \n                             $ map toJSON c\n</code></pre>\n\n<p>I can make some tests like (with <code>bytestring</code> and <code>maybe</code> loaded)</p>\n\n<pre><code>&gt; julia = Person \"Julia\" 45\n&gt; (== julia) . fromMaybe (Person \"\" 0) . decode . encode $ julia\nTrue\n&gt; BS.putStrLn . BL.toStrict . encode $ Family [[julia,julia],[julia]]\n[{\"family\":[{\"age\":45,\"name\":\"Julia\"},{\"age\":45,\"name\":\"Julia\"}]},{\"family\":[{\"age\":45,\"name\":\"Julia\"}]}]\n</code></pre>\n\n<p>and everything works as I wanted. But as I said, I couldn't write <code>FromJSON Family</code>, so I can't test like <code>decode . encode</code> as I did to <code>julia</code>.</p>\n\n<p>I looked at the many types involved in <code>aeson</code> trying to find a way to make it work, but I simply couldn't do it. I could at least write <code>toJSON</code> for <code>ToJSON Family</code> because I learned that <code>type Pair = (Text, Value)</code>.</p>\n\n<p>Can anyone point me in a direction here? And is there a better way to write   <code>ToJSON Family</code>?</p>\n"}, {"tags": ["linux", "haskell", "root"], "comments": [{"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 4, "creation_date": 1567184439, "post_id": 57730504, "comment_id": 101901593, "body": "Don&#39;t. The user might have configured their machine using permissions, kernel capabilities or ACLs so that your program can run as a normal user without actually requiring to be root. I&#39;ve never heard of something that can only be granted by modifying the effective id. So your approach is naive."}, {"owner": {"reputation": 23, "user_id": 6551178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e37dd59c9539d45988b2801e6cf8255?s=128&d=identicon&r=PG&f=1", "display_name": "The Sign Painter", "link": "https://stackoverflow.com/users/6551178/the-sign-painter"}, "reply_to_user": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 0, "creation_date": 1567187098, "post_id": 57730504, "comment_id": 101902585, "body": "I wasn&#39;t aware of this, thank you!"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1567184416, "creation_date": 1567184416, "answer_id": 57730659, "question_id": 57730504, "link": "https://stackoverflow.com/questions/57730504/checking-root-permissions-from-haskell/57730659#57730659", "title": "Checking root permissions from Haskell", "body": "<p>From the <code>unix</code> package, <code>System.Posix.User</code>:</p>\n\n<pre><code>getRealUserID :: IO UserID\ngetEffectiveUserID :: IO UserID\n</code></pre>\n\n<p>When run under <code>sudo</code>, I think they should both report <code>0</code> (root).</p>\n\n<p>When run as a setuid, only the second one should report <code>0</code> (if I remember correctly).</p>\n\n<p>The man pages for <code>getuid / geteuid</code> should clarify, I hope.</p>\n"}], "owner": {"reputation": 23, "user_id": 6551178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e37dd59c9539d45988b2801e6cf8255?s=128&d=identicon&r=PG&f=1", "display_name": "The Sign Painter", "link": "https://stackoverflow.com/users/6551178/the-sign-painter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 57730659, "answer_count": 1, "score": 2, "last_activity_date": 1567184416, "creation_date": 1567183613, "question_id": 57730504, "link": "https://stackoverflow.com/questions/57730504/checking-root-permissions-from-haskell", "title": "Checking root permissions from Haskell", "body": "<p>My program requires elevated permissions and hence it crashes when run without these.</p>\n\n<p>Is there a way of checking whether a Haskell program has been run as the root on Linux?</p>\n\n<p>I.e., differentiating between</p>\n\n<pre><code>sudo ./myProgram\n</code></pre>\n\n<p>and</p>\n\n<pre><code>./myprogram\n</code></pre>\n"}, {"tags": ["haskell", "number-formatting", "numeric"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1567181375, "post_id": 57729995, "comment_id": 101900391, "body": "You are converting to base 26, where the digits are the letters A-Z."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1567181777, "post_id": 57729995, "comment_id": 101900548, "body": "What, no zero?  Positives only?"}, {"owner": {"reputation": 2337, "user_id": 3595992, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a8fc8a00391b1282338f66de57e3fea0?s=128&d=identicon&r=PG&f=1", "display_name": "JeanJouX", "link": "https://stackoverflow.com/users/3595992/jeanjoux"}, "edited": false, "score": 0, "creation_date": 1567182741, "post_id": 57729995, "comment_id": 101900943, "body": "Yes this function is to reproduce the numerotation used in Office calc columns, LaTeX/HTML chapter numbering (<code>counter(subsection,upper-alpha)</code>)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1567182817, "post_id": 57729995, "comment_id": 101900977, "body": "This is easy to get wrong, since it is very similar to converting to base 26, but with a subtle difference on the first letter. In base 26, the first digit ranges from <code>1</code> to <code>25</code>, while all the others range from <code>0</code> to <code>25</code>. Instead, in the enumeration above all the letters range from <code>A</code> to <code>Z</code>."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567197758, "post_id": 57729995, "comment_id": 101905972, "body": "@chi You&#39;re right, I didn&#39;t realize this subtlety. I would have gotten it wrong."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 4, "last_activity_date": 1567186990, "last_edit_date": 1567186990, "creation_date": 1567186100, "answer_id": 57730979, "question_id": 57729995, "link": "https://stackoverflow.com/questions/57729995/haskell-function-to-convert-int-to-alpha-numerotation/57730979#57730979", "title": "Haskell function to convert Int to alpha numerotation", "body": "<p>We can here first convert the number to a sequence of numbers by each time dividing it by 26, and calculating the modulo:</p>\n\n<pre><code>import Data.List(unfoldr)\n\ntoColumnName :: Int -&gt; String\ntoColumnName = reverse . fmap (toEnum . (64+)) . unfoldr f\n    where f 0 = Nothing\n          f n = Just ((mod (n-1) 26)+1, div (n-1) 26)</code></pre>\n\n<p>or shorter:</p>\n\n<pre><code>import Data.List(unfoldr)\nimport Data.Tuple(swap)\n\ntoColumnName :: Int -&gt; String\ntoColumnName = reverse . fmap (toEnum . (65+)) . unfoldr f\n    where f 0 = Nothing\n          f n = Just (swap (divMod (n-1) 26))</code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude Data.List&gt; map toColumnName [1..100]\n[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"AA\",\"AB\",\"AC\",\"AD\",\"AE\",\"AF\",\"AG\",\"AH\",\"AI\",\"AJ\",\"AK\",\"AL\",\"AM\",\"AN\",\"AO\",\"AP\",\"AQ\",\"AR\",\"AS\",\"AT\",\"AU\",\"AV\",\"AW\",\"AX\",\"AY\",\"AZ\",\"BA\",\"BB\",\"BC\",\"BD\",\"BE\",\"BF\",\"BG\",\"BH\",\"BI\",\"BJ\",\"BK\",\"BL\",\"BM\",\"BN\",\"BO\",\"BP\",\"BQ\",\"BR\",\"BS\",\"BT\",\"BU\",\"BV\",\"BW\",\"BX\",\"BY\",\"BZ\",\"CA\",\"CB\",\"CC\",\"CD\",\"CE\",\"CF\",\"CG\",\"CH\",\"CI\",\"CJ\",\"CK\",\"CL\",\"CM\",\"CN\",\"CO\",\"CP\",\"CQ\",\"CR\",\"CS\",\"CT\",\"CU\",\"CV\"]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1567205502, "last_edit_date": 1567205502, "creation_date": 1567186296, "answer_id": 57731009, "question_id": 57729995, "link": "https://stackoverflow.com/questions/57729995/haskell-function-to-convert-int-to-alpha-numerotation/57731009#57731009", "title": "Haskell function to convert Int to alpha numerotation", "body": "<p>It's pretty easy with modular arithmetic. We'll write a function that returns the letters in reverse order; we can fix it up at the top-level afterwards. The basic idea is to repeatedly divide by 26. So:</p>\n\n<pre><code>rawCellName :: Int -&gt; String\nrawCellName x | x &lt;= 0 = []\nrawCellName x = toEnum (fromEnum 'A' + r) : rawCellName q where\n    (q, r) = (x-1) `quotRem` 26\n</code></pre>\n\n<p>Then at the top level we just fix up the API oddity:</p>\n\n<pre><code>cellName :: Int -&gt; String\ncellName = reverse . rawCellName\n</code></pre>\n\n<p>Try it out in ghci:</p>\n\n<pre><code>&gt; map cellName [1..5]\n[\"A\",\"B\",\"C\",\"D\",\"E\"]\n&gt; map cellName [25..30]\n[\"Y\",\"Z\",\"AA\",\"AB\",\"AC\",\"AD\"]\n</code></pre>\n"}], "owner": {"reputation": 2337, "user_id": 3595992, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a8fc8a00391b1282338f66de57e3fea0?s=128&d=identicon&r=PG&f=1", "display_name": "JeanJouX", "link": "https://stackoverflow.com/users/3595992/jeanjoux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 1, "closed_date": 1567198148, "accepted_answer_id": 57731009, "answer_count": 2, "score": -2, "last_activity_date": 1567211480, "creation_date": 1567180919, "last_edit_date": 1567211480, "question_id": 57729995, "link": "https://stackoverflow.com/questions/57729995/haskell-function-to-convert-int-to-alpha-numerotation", "closed_reason": "Not suitable for this site", "title": "Haskell function to convert Int to alpha numerotation", "body": "<p>I'm trying to write a Haskell function to convert an integer number into a string with a alpha numerotation. </p>\n\n<p>By alpha numerotation, I mean the numerotation matching to this conversion : </p>\n\n<pre><code>1 -&gt; A\n2 -&gt; B\n3 -&gt; C\n..\n25 -&gt; Y\n26 -&gt; Z\n27 -&gt; AA\n28 -&gt; AB\n29 -&gt; AC\n..\n</code></pre>\n\n<p>I found this <a href=\"https://codereview.stackexchange.com/questions/5550/converting-to-roman-numerals\">function</a> to convert a decimal number to a Roman number and tryed to modify it to do what I want. But I didn' managed to have the correct result. The problem is that in alpha numerotation, the \"A\" have not the same \"weight\" when used as a unit or a multiple (it can be worth 1 or 0).</p>\n\n<p><strong>Do you know how to obtain the correct conversion ?</strong></p>\n"}, {"tags": ["string", "haskell"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1567164310, "last_edit_date": 1567164310, "creation_date": 1567163751, "answer_id": 57725731, "question_id": 57725700, "link": "https://stackoverflow.com/questions/57725700/haskell-lucid-overloadedstring/57725731#57725731", "title": "Haskell Lucid OverloadedString", "body": "<p>You can do the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#v:fromString\" rel=\"nofollow noreferrer\"><strong><code>fromString :: IsString s =&gt; String -&gt; s</code></strong></a> conversion yourself, which is basically what <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-OverloadedStrings\" rel=\"nofollow noreferrer\"><strong><code>OverloadedStrings</code></strong> [ghc-doc]</a> does for you. For example:</p>\n\n<pre><code>import Data.String(<b>fromString</b>)\n\np_ (<b>fromString</b> (reverse &quot;hello world&quot;))</code></pre>\n\n<p>If you enable <code>OverloadedStrings</code>, then you could say that the compiler implicitly uses a <code>fromString</code> for each string <em>literal</em>, here we will make the conversion ourself explicitly.</p>\n\n<p>Given that here <code>\"hello world\"</code> is (likely) a <a href=\"https://hackage.haskell.org/package/text-1.2.3.0/docs/Data-Text.html#t:Text\" rel=\"nofollow noreferrer\"><strong><code>Text</code></strong></a>, you can do the reversing in the <code>Text</code> world:</p>\n\n<pre><code>{-# OverloadedStrings #-}\n\nimport qualified Data.Text as <b>T</b>\n\np_ (<b>T.reverse</b> &quot;hello world&quot;)</code></pre>\n"}], "owner": {"reputation": 639, "user_id": 10654293, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3y4b1ilweA/AAAAAAAAAAI/AAAAAAAAAAQ/nO5VTzQiUu0/photo.jpg?sz=128", "display_name": "McBear Holden", "link": "https://stackoverflow.com/users/10654293/mcbear-holden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 57725731, "answer_count": 1, "score": 1, "last_activity_date": 1567164310, "creation_date": 1567163605, "last_edit_date": 1567163863, "question_id": 57725700, "link": "https://stackoverflow.com/questions/57725700/haskell-lucid-overloadedstring", "title": "Haskell Lucid OverloadedString", "body": "<p>I'm using Lucid in a small Scotty project.</p>\n\n<p>In below program:</p>\n\n<pre><code>p_ \"hello world\"\n</code></pre>\n\n<p>I want to run some string functions such as:</p>\n\n<pre><code>p_ (reverse \"hello world\")\n</code></pre>\n\n<p>Of course I got a type error.</p>\n\n<p>Could anyone help how I can make this work?</p>\n"}, {"tags": ["haskell", "cabal", "nix"], "answers": [{"comments": [{"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1568036298, "post_id": 57854640, "comment_id": 102136572, "body": "Thanks, sounds exactly what I&#39;m looking for! How would I put this in an overlay like <code>~&#47;.config&#47;nixpkgs&#47;overlays&#47;haskell-packages.nix</code>? I see that the expressions you wrote would probably be arguments to <code>packageOverrides</code>. But IIUC, that&#39;s kind of deprecated in favor of overlays."}], "tags": [], "owner": {"reputation": 1596, "user_id": 6605742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/541e05b738eac1c7923d85279df2a4b3?s=128&d=identicon&r=PG&f=1", "display_name": "Silvan Mosberger", "link": "https://stackoverflow.com/users/6605742/silvan-mosberger"}, "is_accepted": true, "score": 2, "last_activity_date": 1568037656, "last_edit_date": 1568037656, "creation_date": 1568034214, "answer_id": 57854640, "question_id": 57725045, "link": "https://stackoverflow.com/questions/57725045/disable-building-and-running-tests-for-all-haskell-dependencies-in-a-nix-build/57854640#57854640", "title": "Disable building and running tests for all Haskell dependencies in a Nix build", "body": "<p>There is indeed! To change something recursively for all packages, you can override the thing that generates all packages, and that's <code>haskellPackages.mkDerivation</code>. So this is doable with a Haskell package overlay like this:</p>\n\n<pre><code>hself: hsuper: {\n  mkDerivation = args: hsuper.mkDerivation (args // {\n    doCheck = false;\n  });\n}\n</code></pre>\n\n<p>You can also override other arguments from <a href=\"https://github.com/NixOS/nixpkgs/blob/c51eaf4398a7c2f82d7d31d217191b06342571dc/pkgs/development/haskell-modules/generic-builder.nix#L12\" rel=\"nofollow noreferrer\">here</a> like this. For example you can disable library profiling builds, which commonly halves the build time:</p>\n\n<pre><code>hself: hsuper: {\n  mkDerivation = args: hsuper.mkDerivation (args // {\n    enableLibraryProfiling = false;\n  });\n}\n</code></pre>\n\n<p>See <a href=\"https://nixos.org/nixpkgs/manual/#miscellaneous-topics\" rel=\"nofollow noreferrer\">this section</a> in the manual for more info.</p>\n\n<p>Edit: If you want to use this as a user overlay, you can put the following in <code>~/.config/nixpkgs/overlays/haskell-no-check.nix</code>:</p>\n\n<pre><code>self: super: {\n  haskell = super.haskell // {\n    packageOverrides = hself: hsuper: {\n      mkDerivation = args: hsuper.mkDerivation (args // {\n        doCheck = false;\n      });\n    };\n  };\n}\n</code></pre>\n\n<p>Note that this uses <code>haskell.packageOverrides</code>, not the somewhat deprecated <code>packageOverrides</code> in <code>config.nix</code>.</p>\n\n<p>There are other ways of doing it, but I think in this case this is the best because it applies the change to all Haskell package sets.  Unfortunately due to how overriding works, this would clear previous <code>packageOverrides</code>, which often isn't a problem, but can be. If you need to persist previous ones, then you can do this:</p>\n\n<pre><code>self: super: {\n  haskell = super.haskell // {\n    packageOverrides = super.lib.composeExtensions super.haskell.packageOverrides\n      (hself: hsuper: {\n        mkDerivation = args: hsuper.mkDerivation (args // {\n          doCheck = false;\n        });\n      });\n  };\n}\n</code></pre>\n"}], "owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 417, "favorite_count": 0, "accepted_answer_id": 57854640, "answer_count": 1, "score": 2, "last_activity_date": 1568037656, "creation_date": 1567160970, "question_id": 57725045, "link": "https://stackoverflow.com/questions/57725045/disable-building-and-running-tests-for-all-haskell-dependencies-in-a-nix-build", "title": "Disable building and running tests for all Haskell dependencies in a Nix build", "body": "<p>Disabling the testsuite for my own cabal project is easy with <code>cabal2nix</code>, just supply <code>--no-check</code>. What about my project's dependencies? How can I disable compiling and running their testuites while building them?</p>\n\n<p>Overriding each dependency (recursively!) with <code>noCheck = false</code> seems tedious. Is there some kind of overlay mechanism available?</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1567120450, "post_id": 57718684, "comment_id": 101879024, "body": "Your definition of <code>myMerge</code> surely won&#39;t compile - the arguments should be <code>MyType x</code> and <code>MyType y</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1567122035, "post_id": 57718684, "comment_id": 101879344, "body": "The error should point to some Haskell extensions that should be enabled for the instance to work. Modern Haskell heavily uses many GHC extensions."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1567122079, "post_id": 57718684, "comment_id": 101879356, "body": "It&#39;s unclear what you are actually trying to achieve. Do you just want a type which represents strictly positive integers? The idiomatic way to do this is to define an abstract type with a function <code>toMyType :: Int -&gt; Maybe MyType</code> which returns <code>Nothing</code> iff the argument is less than 0. Otherwise, I would suggest not trying to fit your type into an interface it doesn&#39;t support - it would be idiomatic to define this simply as a free function. (Finally note your <code>&lt;&gt;</code> definition is simply <code>liftA2 myMerge</code> - it might be easier to just write that inline where needed)"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1567123347, "post_id": 57718684, "comment_id": 101879560, "body": "@user2407038 I don&#39;t think this is <code>liftA2 myMerge</code>. That would require <code>myMerge</code> to have the signature <code>MyType -&gt; MyType -&gt; MyType</code>. But <code>myMerge</code> can choose to return a Nothing even when given two Justs, which is quite a different kettle of fish."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1567127886, "post_id": 57718684, "comment_id": 101880316, "body": "@amalloy Indeed, my mistake. It is actually <code>\\x y -&gt; join $ liftA2 myMerge x y</code> - not quite suitable to inline."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 4, "creation_date": 1567132299, "post_id": 57718684, "comment_id": 101880990, "body": "If you always deal with <code>MyType</code> when it is wrapped in <code>Maybe</code>, maybe <code>Maybe</code> may be better as part of <code>MyType</code>?"}, {"owner": {"reputation": 639, "user_id": 2786866, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/83d20464b8b297e4b289187bbfbd62c7?s=128&d=identicon&r=PG", "display_name": "crosser", "link": "https://stackoverflow.com/users/2786866/crosser"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1567149337, "post_id": 57718684, "comment_id": 101884955, "body": "@luqui indeed, though in other parts of the code I need it unwrapped. So I would essentially need another type wrapper like amalloy suggest in his answer."}, {"owner": {"reputation": 639, "user_id": 2786866, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/83d20464b8b297e4b289187bbfbd62c7?s=128&d=identicon&r=PG", "display_name": "crosser", "link": "https://stackoverflow.com/users/2786866/crosser"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1567149965, "post_id": 57718684, "comment_id": 101885240, "body": "@RobinZigmond, you are right, corrected."}], "answers": [{"comments": [{"owner": {"reputation": 639, "user_id": 2786866, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/83d20464b8b297e4b289187bbfbd62c7?s=128&d=identicon&r=PG", "display_name": "crosser", "link": "https://stackoverflow.com/users/2786866/crosser"}, "edited": false, "score": 0, "creation_date": 1567148856, "post_id": 57718806, "comment_id": 101884758, "body": "I had a feeling that a type wrapper would do the job, though it looks clunky. But your explanation about me trying to define a second instance for the same type makes sense."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 639, "user_id": 2786866, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/83d20464b8b297e4b289187bbfbd62c7?s=128&d=identicon&r=PG", "display_name": "crosser", "link": "https://stackoverflow.com/users/2786866/crosser"}, "edited": false, "score": 0, "creation_date": 1567173797, "post_id": 57718806, "comment_id": 101896640, "body": "It&#39;s really a simplification: even if Maybe had no Semigroup instance this would be illegal, because you can&#39;t define instances for some specializations of a parameterized type but not others. Also I agree with luqui&#39;s comment to just include the maybe-ness in your type, if you always work with it that way. Define it as a newtype wrapper over Maybe Int, or make your own equivalent <code>data</code> definition."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": true, "score": 9, "last_activity_date": 1567121474, "creation_date": 1567121474, "answer_id": 57718806, "question_id": 57718684, "link": "https://stackoverflow.com/questions/57718684/defining-an-instance-for-a-composite-type-in-haskell/57718806#57718806", "title": "Defining an instance for a composite type in Haskell", "body": "<p>The instance you defined is illegal because it is basically trying to define a different (partial) Semigroup instance for Maybe, but Maybe already has one. Instead, use a newtype wrapper:</p>\n\n<pre><code>newtype MaybeMyType = MaybeMyType (Maybe MyType)\n\ninstance Semigroup MaybeMyType where\n  ...\n</code></pre>\n\n<p>You will have to interact with your type through this MaybeMyType wrapper in the cases where you want to use its Semigroup instance.</p>\n"}], "owner": {"reputation": 639, "user_id": 2786866, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/83d20464b8b297e4b289187bbfbd62c7?s=128&d=identicon&r=PG", "display_name": "crosser", "link": "https://stackoverflow.com/users/2786866/crosser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 1, "accepted_answer_id": 57718806, "answer_count": 1, "score": 7, "last_activity_date": 1567208164, "creation_date": 1567120177, "last_edit_date": 1567208164, "question_id": 57718684, "link": "https://stackoverflow.com/questions/57718684/defining-an-instance-for-a-composite-type-in-haskell", "title": "Defining an instance for a composite type in Haskell", "body": "<p>I have a type that has a <code>mappend</code>-like function but not a real <code>mappend</code>, so it is not a <code>Semigroup</code>. For instance:</p>\n\n<pre><code>data MyType = MyType Int deriving Show\n\nmyMerge :: MyType -&gt; MyType -&gt; Maybe MyType\nmyMerge (MyType x) (MyType y)\n  | (x &lt; 0) || (y &lt; 0) = Nothing\n  | otherwise          = Just $ MyType $ x + y\n</code></pre>\n\n<p>I always deal with <code>MyType</code> when it is wrapped in <code>Maybe</code>. I need semantics that would be perfectly represented if I could define a <code>Semigroup</code> instance on the \"combined\" type <code>Maybe MyType</code> like this:</p>\n\n<pre><code>instance Semigroup (Maybe MyType) where\n  (Just x) &lt;&gt; (Just y) = myMerge x y\n  Nothing  &lt;&gt; Nothing  = Nothing\n  Nothing  &lt;&gt; (Just _) = Nothing\n  (Just _) &lt;&gt; Nothing  = Nothing\n</code></pre>\n\n<p>I.e. when both parameters are <code>Just</code>'s, I can get either a <code>Just</code> or <code>Nothing</code>, otherwise I always get <code>Nothing</code>. But this is not possible, I get an error:</p>\n\n<pre><code>All instance types must be of the form (T a1 ... an)\n</code></pre>\n\n<p>How can I represent the semantics that I need?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1567094922, "post_id": 57713787, "comment_id": 101870156, "body": "<code>[succ, id] !! r $ acc</code> is the standout to me: it looks needlessly expensive to build a list just to index into it. Why not replace with a case on <code>r</code>, or use <code>== 0</code> like the other version?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 5, "creation_date": 1567095355, "post_id": 57713787, "comment_id": 101870369, "body": "Also, timing and performance in ghci does not correlate with performance of the compiled code.  When you care about performance be sure you compile and run tests via machine code preferably with <code>-O2</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567095355, "post_id": 57713787, "comment_id": 101870371, "body": "Make <code>go</code> strict on the accumulator, to avoid building large thunks."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 3, "creation_date": 1567095539, "post_id": 57713787, "comment_id": 101870449, "body": "The implementation of <code>replicateM</code> somehow matters. Replacing it with a local implementation (but identical to the library one) makes the fast version just as slow. I think it may just be that GHCi doesn&#39;t optimize as well as the library code is optimized."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1567097358, "post_id": 57713787, "comment_id": 101871241, "body": "@amalloy it is not that expensive. At least not to the point to make a difference here. Nevertheless I have changed it  and it makes no difference."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567099168, "post_id": 57713787, "comment_id": 101872023, "body": "@chi how do I do that?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567099421, "post_id": 57713787, "comment_id": 101872134, "body": "Perhaps the simplest way is to add <code>go _ acc | seq acc False = undefined</code> right after <code>go :: Int -&gt; Int -&gt; IO Int</code>."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567100409, "post_id": 57713787, "comment_id": 101872552, "body": "@chi that does not compile..."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1567103654, "post_id": 57713787, "comment_id": 101873810, "body": "try <code>go x !acc = do ...</code>. you might need to add <a href=\"https://ocharles.org.uk/posts/2014-12-05-bang-patterns.html\" rel=\"nofollow noreferrer\"><code>{-# LANGUAGE BangPatterns #-}</code></a> at the top of your source file."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1567103933, "post_id": 57713787, "comment_id": 101873923, "body": "@WillNess I have tried that... made no difference :("}], "answers": [{"comments": [{"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1567097581, "post_id": 57714157, "comment_id": 101871340, "body": "The <code>if then else</code> version has little or no impact in these timings. I have changed it because someone else also commented about it. Would it be possible for you to write an efficient way to do what I am doing?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1567105794, "post_id": 57714157, "comment_id": 101874665, "body": "@matthias the smallest change is enabling BangPatterns and throwing a ! on <code>acc</code> in the second pattern match. Probably good enough to get ghc to generate the best code, at least when you&#39;re working outside of ghci so you can enable optimizations."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 2, "last_activity_date": 1567095318, "creation_date": 1567095318, "answer_id": 57714157, "question_id": 57713787, "link": "https://stackoverflow.com/questions/57713787/why-is-recursion-slower-than-filter-with-this-random-number-counter/57714157#57714157", "title": "Why is recursion slower than filter with this Random number counter", "body": "<p>These actually work in different ways from each other, at a level that matters. And both are slow. </p>\n\n<p>The version using <code>replicateM</code> is bad because <code>replicateM</code> in <code>IO</code> can't stream its results. The entire list will be constructed at once, before <code>filter</code> and <code>length</code> get to start operating on it. The reason it's faster is that <code>length</code> is strict in its accumulator, so it doesn't generate a massive nested chain of thinks the way your other version does. And that's even worse for performance.</p>\n\n<p>The recursive version doesn't use a strict accumulator. This means that the value it returns is a giant chain of nested thunks, holding on to all the generated entries and a bunch of indirect calls via list indexing. This is even more memory used than the filter version, because it's holding on to a bunch of closures as well as all the values. But even with that fixed, it would still be slow. Using <code>!!</code> just wrecks performance. It's recursive when a simple if would do the same job much more efficiently. </p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1567423343, "last_edit_date": 1567423343, "creation_date": 1567110665, "answer_id": 57717390, "question_id": 57713787, "link": "https://stackoverflow.com/questions/57713787/why-is-recursion-slower-than-filter-with-this-random-number-counter/57717390#57717390", "title": "Why is recursion slower than filter with this Random number counter", "body": "<p>With <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#bang-patterns-informal\" rel=\"nofollow noreferrer\">bang patterns</a>, and proper compilation with <code>-O2</code>, the \"prime\" function is faster:</p>\n\n<pre><code>{-# LANGUAGE BangPatterns #-}\nmodule Main where\n\nimport System.Random\nimport Control.Monad\nimport System.Environment\n\ncountZeros :: Int -&gt; IO Int\ncountZeros n = (length . filter (==0)) &lt;$&gt; (replicateM n $ randomRIO (0,1 :: Int))\n\ncountZeros' :: Int -&gt; IO Int\ncountZeros' n = go n 0 \n  where\n    go :: Int -&gt; Int -&gt; IO Int\n    go !x !acc = do\n      r  &lt;- randomRIO (0,1 :: Int)\n      case x of\n        0 -&gt; pure acc\n        _ -&gt; let acc' = if r == 0 then succ acc else acc\n             in  go (pred x) acc'\n\nmain :: IO ()\nmain = do\n   [what] &lt;- getArgs\n   let n = 1000 * 1000 * 10\n       fun = case what of\n          \"1\" -&gt; countZeros\n          \"2\" -&gt; countZeros'\n          _   -&gt; error \"arg not a number\"\n   putStrLn \"----\"\n   print =&lt;&lt; fun n\n   putStrLn \"----\"\n</code></pre>\n\n<p>Compiled with</p>\n\n<pre><code>$ stack ghc -- RandomPerf.hs -O2 -Wall\n$ stack ghc -- --version\nThe Glorious Glasgow Haskell Compilation System, version 8.6.3\n</code></pre>\n\n<p>Tests:</p>\n\n<pre><code>$ time ./RandomPerf.exe 1\n----\n4999482\n----\n\nreal    0m3.329s\nuser    0m0.000s\nsys     0m0.031s\n$ time ./RandomPerf.exe 2\n----\n5001089\n----\n\nreal    0m2.338s\nuser    0m0.000s\nsys     0m0.046s\n</code></pre>\n\n<p>Repeating the tests gives comparable results, so this is not a fluke.</p>\n\n<p>Result: the <code>countZeros'</code> function is significantly faster.</p>\n\n<p>Using Criterion and running a proper benchmark is left as an exercise.</p>\n\n<p>You probably used GHCi to assess performance, which prevents the optimizer to do its job. GHCi sacrifices proper optimization to load files faster, and be more usable in an interactive way.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 57717390, "answer_count": 2, "score": 1, "last_activity_date": 1567423343, "creation_date": 1567093829, "last_edit_date": 1567423219, "question_id": 57713787, "link": "https://stackoverflow.com/questions/57713787/why-is-recursion-slower-than-filter-with-this-random-number-counter", "title": "Why is recursion slower than filter with this Random number counter", "body": "<p>I am writing a function that generates a million random numbers of 1 or 0 and then counts how many 0s were generated.</p>\n\n<pre><code>import System.Random\nimport Control.Monad\n\ncountZeros :: Int -&gt; IO Int\ncountZeros n = (length . filter (==0)) &lt;$&gt; (replicateM n $ randomRIO (0,1 :: Int))\n\ncountZeros' :: Int -&gt; IO Int\ncountZeros' n = go n 0 \n  where\n    go :: Int -&gt; Int -&gt; IO Int\n    go x acc = do\n      r  &lt;- randomRIO (0,1 :: Int)\n      case x of\n        0 -&gt; pure acc\n        _ -&gt; let acc' = if r == 0 then succ acc else acc\n             in  go (pred x) acc'\n</code></pre>\n\n<p>when I run the functions with an input of 1000000</p>\n\n<pre><code>&gt;\u03bb= countZeros 1000000\n499716\n(0.93 secs, 789,015,080 bytes)\n\n&gt;\u03bb= countZeros' 1000000\n500442\n(2.02 secs, 1,109,569,560 bytes)\n</code></pre>\n\n<p>I don't understand why the prime function is twice as slow as the other. I assumed that they are essentially doing the same thing behind the scenes.</p>\n\n<p>I am using GHCi.</p>\n\n<p>What am I missing?</p>\n"}, {"tags": ["haskell", "comonad"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1567086074, "post_id": 57711476, "comment_id": 101865206, "body": "Perhaps you are looking for a <code>RandT</code> (random monad transformer): <a href=\"https://hackage.haskell.org/package/MonadRandom-0.1.3/docs/Control-Monad-Random.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/MonadRandom-0.1.3/docs/&hellip;</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567091125, "post_id": 57711476, "comment_id": 101868283, "body": "Slightly off topic: you can simplify your code to <code>shiftRight x@X{..} = let i&#39; = i - 1 in i&#39; `isInRange` x &amp;&amp; xs !! i&#39;</code>. No need for guards here."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567109175, "post_id": 57711476, "comment_id": 101875890, "body": "I suspect it will be tricky if you want to select uniformly at random from among the possible ending configurations. Certainly you can&#39;t just pick an ordering on the dwarves and then just pick a direction uniformly at random from among the legal moves for that dwarf; for example, the configuration <code>*-*</code> can evolve to three valid next configurations, and for each dwarf there are two configurations where they step away from the other and only one where they step towards."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567110533, "post_id": 57711476, "comment_id": 101876364, "body": "@DanielWagner Yes, I know that. If we pick a random total ordering on dwarves, we may let the first dwarf choose freely and then restrict the choices of the second dwarf according to whether the first dwarf decided to occupy the contested middle location. Then, if we shuffle the ordering often enough, it will be fair overall."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1567111774, "post_id": 57711476, "comment_id": 101876829, "body": "Take the 1D case for a moment. Consider just the even positions. For each run of n consecutive dwarves, there are exactly n+1 outcomes: the leftmost 0 &lt;= i &lt;= n step left, and the remaining n-i step right. Each maximal consecutive run may choose independently. How the dwarves on odd positions move may also be chosen independently, by the same mechanism. This should get you exactly the right distribution for 1D dwarves; but it isn&#39;t clear to me at all how to extend this to two dimensions."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567957274, "post_id": 57711476, "comment_id": 102114073, "body": "@DanielWagner <a href=\"https://math.stackexchange.com/a/3348444/278244\">Turns out there is a straightforward general solution through matchings on a bipartite graph between the current and the next state.</a>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1567962911, "post_id": 57711476, "comment_id": 102115443, "body": "@IgnatInsarov Hah, your idea of straightforward and mine don&#39;t agree! Solving #P-complete problems... in one sense I suppose it&#39;s straightforward in that &quot;there&#39;s nothing really clever you can do, so just brute-force it&quot;, but in another very real sense it means it&#39;s not reasonably solvable exactly."}], "answers": [{"tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": true, "score": 2, "last_activity_date": 1567132466, "creation_date": 1567132466, "answer_id": 57719820, "question_id": 57711476, "link": "https://stackoverflow.com/questions/57711476/random-walk-on-a-pointed-container/57719820#57719820", "title": "Random walk on a pointed container", "body": "<p>The easiest way to solve this is by using the <a href=\"https://hackage.haskell.org/package/MonadRandom\" rel=\"nofollow noreferrer\"><code>MonadRandom</code> library</a>, which introduces a <a href=\"https://hackage.haskell.org/package/MonadRandom-0.5.1.1/docs/Control-Monad-Random-Lazy.html#t:Rand\" rel=\"nofollow noreferrer\">new monad</a> for random computations. So let\u2019s set up a computation using random numbers:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- normal comonadic computation\ntype CoKleisli w a b = w a -&gt; b\n\n-- randomised comonadic computation\ntype RCoKleisli w a b = w a -&gt; Rand b\n</code></pre>\n\n<p>Now, how to apply this thing? It\u2019s easy enough to <code>extend</code> it:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>halfApply :: Comonad w =&gt; (w a -&gt; Rand b) -&gt; (w a -&gt; w (Rand b))\nhalfApply = extend\n</code></pre>\n\n<p>But this doesn\u2019t quite work: it gives us a container of randomised values, whereas we want a randomised container of values. In other words, we need to find something which can do <code>w (Rand b) -&gt; Rand (w b)</code>. And in fact there does exist such a function: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:sequenceA\" rel=\"nofollow noreferrer\"><code>sequenceA</code></a>! As the documentation states, if we apply <code>sequenceA</code> to a <code>w (Rand b)</code>, it will run each <code>Rand</code> computation, then accumulate the results to get a <code>Rand (w b)</code> \u2014 which is exactly what we want! So:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fullApply :: (Comonad w, Traversible w, Applicative f)\n          =&gt; (w a -&gt; f b) -&gt; (w a -&gt; f (w b))\nfullApply c = sequenceA . extend c\n</code></pre>\n\n<p>As you can see from the type signature above, this actually works for any <code>Applicative</code> (because all we require is that each applicative computation can be run in turn), but requires <code>w</code> to be <code>Traversible</code> (so we can traverse over each value in <code>w</code>).</p>\n\n<p>(For more on this sort of thing, I recommend <a href=\"https://productivedetour.blogspot.com/2012/12/evaluating-probabilistic-cellular.html\" rel=\"nofollow noreferrer\">this</a> blog post, plus its second part. If you want to see the above technique in action, I recommend <a href=\"https://github.com/bradrn/cellular-automata/tree/6a21fdce233aa29a739c4ee81cb9e4e4ae8757f7\" rel=\"nofollow noreferrer\">my own probabilistic cellular automata library</a>, back when it still used comonads instead of <a href=\"https://www.reddit.com/r/haskell/comments/a2vnni/a_better_comonad_for_cellular_automata/\" rel=\"nofollow noreferrer\">my own typeclass</a>.)</p>\n\n<p>So that answers one half of your question; that is, how to get probabilistic behaviour using comonads. The second half is:</p>\n\n<blockquote>\n  <p>\u2026 and also it must never place two dwarves in the same place \u2026</p>\n</blockquote>\n\n<p>This I\u2019m not too sure about, but one solution could be to split your comonadic computation into three stages:</p>\n\n<ol>\n<li>Convert every dwarf probabilistically to a diff stating whether that dwarf will move left, right, or stay. Type for this operation: <code>mkDiffs :: X Dwarf -&gt; Rand (X DwarfDiff)</code></li>\n<li>Execute each diff, but keeping the original dwarf positions. Type for this operation: <code>execDiffs :: X DwarfDiff -&gt; X (DwarfDiff, [DwarfDiffed])</code>.</li>\n<li>Resolve situations where dwarfs have collided. Type for this operation: <code>resolve :: X (Dwarf, [DwarfDiffed]) -&gt; Rand (X Dwarf)</code>.</li>\n</ol>\n\n<p>Types used above:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Dwarf = Dwarf | NoDwarf\ndata DwarfDiff = MoveLeft | MoveRight | DontMove | NoDiff\ndata DwarfDiffed = MovedFromLeft | MovedFromRight | NothingMoved\n</code></pre>\n\n<p>Example of what I\u2019m talking about:</p>\n\n<pre><code>myDwarfs = X [NoDwarf                ,Dwarf                     ,NoDwarf                                ,Dwarf                    ,Dwarf                     ,Dwarf      ] 0\nmkDiffs myDwarfs\n         = X [NoDiff                 ,MoveRight                 ,NoDiff                                 ,MoveLeft                 ,MoveRight                 ,DontMove   ] 0\nexecDiffs (mkDiffs myDwarfs)\n         = X [(NoDiff,[NothingMoved]),(MoveRight,[NothingMoved]),(NoDiff,[MovedFromRight,MovedFromLeft]),(MoveLeft,[NothingMoved]),(MoveRight,[NothingMoved]),(DontMove,[MovedFromLeft])] 0\nresolve (execDiffs (mkDiffs myDwarfs))\n         = X [NoDwarf                ,NoDwarf                   ,Dwarf                                  ,Dwarf                    ,Dwarf                     , Dwarf     ] 0\n</code></pre>\n\n<hr>\n\n<p>As you can see, the above solution is pretty complicated. I have an alternate recommendation: <strong>don\u2019t use comonads for this problem</strong>! Comonads are <em>great</em> for when you need to update <strong>one</strong> value based on its context, but are <em>awful</em> at updating multiple values simultaneously. The issue is that comonads such as your <code>X</code> are <a href=\"https://wiki.haskell.org/Zipper\" rel=\"nofollow noreferrer\">zippers</a>, which store a data structure as a single \u2018focused\u2019 value plus a surrounding \u2018context\u2019. As I said, this is great for updating a focused value based on its context, but if you need to update multiple values, you have to shoehorn your computation into this value+context mould\u2026 which, as we saw above, can be pretty tricky. So possibly comonads aren\u2019t the best choice for this application.</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 1, "accepted_answer_id": 57719820, "answer_count": 1, "score": 1, "last_activity_date": 1567132466, "creation_date": 1567085932, "question_id": 57711476, "link": "https://stackoverflow.com/questions/57711476/random-walk-on-a-pointed-container", "title": "Random walk on a pointed container", "body": "<p><strong>Let us consider a dwarf wandering in a tunnel.</strong> I will define a type that represents this\nsituation thusly:</p>\n\n<pre><code>data X a = X { xs :: [a], i :: Int }\n\ndisplay :: X Bool -&gt; IO ()\ndisplay X{..} = putStrLn (concatMap f xs) where { f True = \"*\" ; f False = \"-\" }\n</code></pre>\n\n<p>Here you see a dwarf in a section of a tunnel:</p>\n\n<pre><code>\u03bb display x\n-*---\n</code></pre>\n\n<p><strong>It is discovered that <a href=\"https://danel.ahman.ee/papers/fossacs12.pdf\" rel=\"nofollow noreferrer\">a pointed container is an instance of <code>Comonad</code></a>. I can use this\ninstance here to define a function that simulates my dwarf moving right:</strong></p>\n\n<pre><code>shiftRight :: X Bool -&gt; Bool\nshiftRight x@X{..} | let i' = i - 1 in i' `isInRange` x &amp;&amp; xs !! i' = True\n                   | otherwise = False\n</code></pre>\n\n<p>See:</p>\n\n<pre><code>\u03bb traverse_ display $ scanl (&amp;) x (replicate 4 (extend shiftRight))\n-*---\n--*--\n---*-\n----*\n-----\n</code></pre>\n\n<p><strong>Spectacularly, this same operation works with any number of dwarves, in any pointed container,\nand so can be extended to a whole dwarf fortress if desired.</strong> I can similarly define a function\nthat moves a dwarf leftwards, or in any other deterministic fashion.</p>\n\n<p><strong>But now what if I want my dwarf to wander around aimlessly?</strong> Now my <em>\"shift randomly\"</em> must\nonly place a dwarf to the right if the same dwarf is not being placed to the left <em>(for that would\nmake two dwarves out of one)</em>, and also it must never place two dwarves in the same place <em>(which\nwould make one dwarf out of two)</em>. In other words, <em>\"shift randomly\"</em> must be <em>linear</em> <em>(as in</em>\n\"linear logic\"<em>)</em> when applied over a comonadic fortress.</p>\n\n<p>One approach I have in mind is to assign some sort of state to dwarves that tracks the available\nmoves for a dwarf, removing moves from every relevant dwarf when we decide that the location is\ntaken by one of them. This way, the remaining dwarves will not be able to take that move.  Or we\nmay track availability of locations. <strong>I am thinking that some sort of a <em>\"monadic\"</em> <code>extendM</code>\nmight be useful.</strong> <em>(It would compare to the usual <code>extend</code> as <code>traverse</code> compares to <code>fmap</code>.)</em>\nBut I am not aware of any prior art.</p>\n"}, {"tags": ["python", "haskell", "subprocess", "eof"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1567076044, "post_id": 57708589, "comment_id": 101859281, "body": "The <code>communicate</code> actually does that, since it passes the input, and closes its side of the input channel."}, {"owner": {"reputation": 359, "user_id": 2649762, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8574838cef0a260ea45417d364e002b6?s=128&d=identicon&r=PG", "display_name": "user2649762", "link": "https://stackoverflow.com/users/2649762/user2649762"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567076106, "post_id": 57708589, "comment_id": 101859319, "body": "What should I use instead of communicate if I want to keep interacting with the subprocess?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567076171, "post_id": 57708589, "comment_id": 101859367, "body": "you write to the <code>.stdin</code> of the process, and you read from the <code>.stdout</code> of the process."}], "answers": [{"comments": [{"owner": {"reputation": 55059, "user_id": 212858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1166c87b6f3fc2e6746da96b60fefb46?s=128&d=identicon&r=PG", "display_name": "Useless", "link": "https://stackoverflow.com/users/212858/useless"}, "reply_to_user": {"reputation": 359, "user_id": 2649762, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8574838cef0a260ea45417d364e002b6?s=128&d=identicon&r=PG", "display_name": "user2649762", "link": "https://stackoverflow.com/users/2649762/user2649762"}, "edited": false, "score": 0, "creation_date": 1567079972, "post_id": 57708666, "comment_id": 101861513, "body": "Yes, the input/output streams are both probably buffered. You can call <code>p.stdin.flush()</code> on the Python side - the doc for <code>Popen.stdin</code> links to <code>open()</code> which links to the built-in file type, which links to the <a href=\"https://docs.python.org/3/library/io.html#io.IOBase.flush\" rel=\"nofollow noreferrer\"><code>io</code></a> module. I don&#39;t know how Haskell behaves here."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 359, "user_id": 2649762, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8574838cef0a260ea45417d364e002b6?s=128&d=identicon&r=PG", "display_name": "user2649762", "link": "https://stackoverflow.com/users/2649762/user2649762"}, "edited": false, "score": 0, "creation_date": 1567109560, "post_id": 57708666, "comment_id": 101876048, "body": "@user2649762, on the Haskell side, I&#39;m not sure what the default buffering is in this case. It might be <code>LineBuffering</code>, in which case you should be okay. If you&#39;re still having trouble, you should import <code>System.IO</code>. Then you can explicitly flush stdout on the Haskell side using <code>hFlush stdout</code>, or you can call <code>hSetBuffering stdout LineBuffering</code> or <code>hSetBuffering stdout NoBuffering</code> to modify the buffering globally. You probably only want <code>NoBuffering</code> in special circumstances, since its performance will be lousy if you make many small writes."}], "tags": [], "owner": {"reputation": 55059, "user_id": 212858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1166c87b6f3fc2e6746da96b60fefb46?s=128&d=identicon&r=PG", "display_name": "Useless", "link": "https://stackoverflow.com/users/212858/useless"}, "is_accepted": true, "score": 2, "last_activity_date": 1567076184, "last_edit_date": 1592644375, "creation_date": 1567076184, "answer_id": 57708666, "question_id": 57708589, "link": "https://stackoverflow.com/questions/57708589/how-to-make-a-haskell-suprocess-called-from-python-to-not-close-after-one-use/57708666#57708666", "title": "How to make a Haskell suprocess called from Python to not close after one use?", "body": "<p>Here is the documentation for the <a href=\"https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate\" rel=\"nofollow noreferrer\"><code>subprocess.Popen.communicate</code></a> function you're calling:</p>\n<blockquote>\n<p>Popen.communicate(input=None, timeout=None)</p>\n<p>Interact with process: Send data to stdin. Read data from stdout and stderr, until end-of-file is reached. <strong>Wait for process to terminate</strong>.</p>\n</blockquote>\n<p>(my emphasis).</p>\n<p>You can just write to <code>p.stdin</code> and read from <code>p.stdout</code> if you don't want all the other stuff <code>communicate</code> does.</p>\n<blockquote>\n<p>I don't know if the fault lies with Python or Haskell</p>\n</blockquote>\n<p>This isn't intended as a criticism, but a helpful hint: the fault lies with whoever didn't read the documentation for the function they called. It's free, read it!</p>\n"}], "owner": {"reputation": 359, "user_id": 2649762, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8574838cef0a260ea45417d364e002b6?s=128&d=identicon&r=PG", "display_name": "user2649762", "link": "https://stackoverflow.com/users/2649762/user2649762"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 57708666, "answer_count": 1, "score": 0, "last_activity_date": 1567076781, "creation_date": 1567075869, "last_edit_date": 1567076781, "question_id": 57708589, "link": "https://stackoverflow.com/questions/57708589/how-to-make-a-haskell-suprocess-called-from-python-to-not-close-after-one-use", "title": "How to make a Haskell suprocess called from Python to not close after one use?", "body": "<p>I have a simple .exe file compiled from Haskell that just prints to stdout everything it receives to stdin:</p>\n\n<pre><code>module Main where\n\nmain = do\n  command &lt;- getLine\n  putStrLn command\n  main\n</code></pre>\n\n<p>And I have a Python file that tries to send two lines to the subprocess:</p>\n\n<pre><code>from subprocess import Popen, PIPE, STDOUT\n\np = Popen(['main.exe'], stdout=PIPE, stdin=PIPE, stderr=STDOUT)  \n\ndef send_command(arg):\n    print(\"Sending command: \"+arg)  \n    response = p.communicate(input=arg)[0].decode()\n    print(\"Response: \"+response+\"\\n\")\n    return response\n\nsend_command(\"Test1\")\nsend_command(\"Test2\")\n</code></pre>\n\n<p>It works the first time around, but not the second, apparently because it considers the input completed:</p>\n\n<pre><code>Sending command: Test1\nResponse: Test1\nmain.exe: &lt;stdin&gt;: hGetLine: end of file\n\n\nSending command: Test2\nTraceback (most recent call last):\n  File \".\\test.py\", line 12, in &lt;module&gt;\n    send_command(\"Test2\")\n  File \".\\test.py\", line 7, in send_command\n    response = p.communicate(input=arg)[0].decode()\n  File \"C:\\Python27\\lib\\subprocess.py\", line 483, in communicate\n    return self._communicate(input)\n  File \"C:\\Python27\\lib\\subprocess.py\", line 722, in _communicate\n    self.stdin.write(input)\nValueError: I/O operation on closed file\n</code></pre>\n\n<p>I don't know if the fault lies with Python or Haskell; other subprocesses for as expected when called from Python, and the Haskell file works as expected when called from the command line, but they just refuse to work together. How to fix this?</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>I replaced the <code>communicate</code> with direct read\\write:</p>\n\n<pre><code>from subprocess import Popen, PIPE, STDOUT\n\np = Popen(['main.exe'], stdout=PIPE, stdin=PIPE, stderr=STDOUT)  \n\ndef send_command(arg):\n    print(\"Sending command: \"+arg)  \n    p.stdin.write(arg+\"\\n\")\n    response = p.stdout.readline().decode()\n    print(\"Response: \"+response+\"\\n\")\n    return response\n\nsend_command(\"Test1\")\nsend_command(\"Test2\")\n</code></pre>\n\n<p>And made sure (just in case) that the .exe properly terminates lines:</p>\n\n<pre><code>module Main where\n\nmain = do\n  command &lt;- getLine\n  putStrLn (command ++ \"\\n\")\n  main\n</code></pre>\n\n<p>And now the program just stops and does nothing at this point:</p>\n\n<pre><code>Sending command: Test1\n</code></pre>\n\n<p>Am I supposed to somehow \"flush\" the input or what?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 4, "creation_date": 1567059554, "post_id": 57703898, "comment_id": 101850952, "body": "It is possible but only by breaking the fundamental expectations of the language, compiler and programming model. See e.g. <a href=\"https://stackoverflow.com/questions/19371636/am-i-abusing-unsafeperformio\" title=\"am i abusing unsafeperformio\">stackoverflow.com/questions/19371636/&hellip;</a>"}, {"owner": {"reputation": 9333, "user_id": 85215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56d65f736083a06748fb7816b96a3ffd?s=128&d=identicon&r=PG", "display_name": "Jonas H&#248;gh", "link": "https://stackoverflow.com/users/85215/jonas-h%c3%b8gh"}, "edited": false, "score": 2, "creation_date": 1567059723, "post_id": 57703898, "comment_id": 101851013, "body": "I highly recommend Mark Seemann&#39;s article series on how to get from thinking in terms of DI to structuring your program in a functional way: <a href=\"https://blog.ploeh.dk/2017/01/27/from-dependency-injection-to-dependency-rejection/\" rel=\"nofollow noreferrer\">blog.ploeh.dk/2017/01/27/&hellip;</a>"}, {"owner": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567059759, "post_id": 57703898, "comment_id": 101851035, "body": "Yann, so how would you model this MaritimeRoutePlanner in Haskell in a clean way?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1567065320, "post_id": 57703898, "comment_id": 101853601, "body": "Is the DB ever updated while the program is running? If it does not, does <code>ShouldAvoidLocation()</code> always return the same boolean result for the same arguments?"}, {"owner": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567066032, "post_id": 57703898, "comment_id": 101854023, "body": "It&#39;s updated 4 times/hour."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1567076458, "post_id": 57703898, "comment_id": 101859524, "body": "If the DB changes while the program is running, <code>ShouldAvoidLocation()</code> is not a pure function, so it can not have type <code>... -&gt; Bool</code>. It can have type <code>... -&gt; IO Bool</code> or some other similar monadic type which indicate the &quot;impurity&quot; of <code>ShouldAvoidLocation()</code>."}, {"owner": {"reputation": 243, "user_id": 13679816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b02acae66c6a347786eb93e8cbead85?s=128&d=identicon&r=PG", "display_name": "atravers", "link": "https://stackoverflow.com/users/13679816/atravers"}, "edited": false, "score": 0, "creation_date": 1605592588, "post_id": 57703898, "comment_id": 114690386, "body": "Related: <a href=\"https://stackoverflow.com/questions/41522491/is-there-a-way-to-place-some-impure-code-inside-pure-functions\" title=\"is there a way to place some impure code inside pure functions\">stackoverflow.com/questions/41522491/&hellip;</a> ."}], "answers": [{"comments": [{"owner": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567064883, "post_id": 57704898, "comment_id": 101853364, "body": "The problem here is that we cannot gather all data in advance. This shouldAvoidLocation is buried deeply in the logic and it can be that shouldAvoidLocation is not called at all - for example the harbour rejects all vessels so we even don&#39;t need weather data. That&#39;s why we need data-on-demand inside because the business logic dictates us which data we need in each particular case."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 1, "creation_date": 1567066414, "post_id": 57704898, "comment_id": 101854237, "body": "@StefanDorn First things first: there are ways to model <a href=\"https://blog.ploeh.dk/2017/07/10/pure-interactions\" rel=\"nofollow noreferrer\">pure interactions</a> if, for whatever reason, an impure-pure-impure sandwich isn&#39;t possible."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567066731, "post_id": 57704898, "comment_id": 101854415, "body": "@StefanDorn This is, however, a case where thinking explicitly about architecture could help. I don&#39;t know the details of the software you&#39;d like to develop, but I often hear that sort of counter-argument. It often turns out, however, that either the data is small or gets cached anyway, in which case it might not be a problem fetching it even if it isn&#39;t always used. After all, what problem are you trying to solve by sticking strictly to data-on-demand?"}, {"owner": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567075337, "post_id": 57704898, "comment_id": 101858887, "body": "I would say it like this - algorithm for the business logic depends on data from IO (in this case DB). if(get IO a == something) then if(get IO b == something) then if(get IO c == something)... and it&#39;s nested many, many levels. Each step depends on some data from DB."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567075692, "post_id": 57704898, "comment_id": 101859076, "body": "@StefanDorn I understand that, but it&#39;s often the case that it might <i>still</i> be more efficient to just fetch all of the data in bulk. Again, I may be wrong on this particular occasion. I&#39;ve never done any work with meteorological data, but I suppose that the data sets could be truly prohibitively big. In that case, I&#39;d reach for a free monad as outlined in the above link."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567075929, "post_id": 57704898, "comment_id": 101859202, "body": "@StefanDorn I do, however, fairly often run into questions like this, and once we start analysing how large the involved data sets are, it turns out that fetching everything up front (even the stuff you don&#39;t need) might be all of 1 MB. This should be contrasted with the size of average web pages or image sizes on said web pages. I don&#39;t know if your context is like that, but I often meet engineers who needlessly complicate their architecture to save fetching 100 kB of data..."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567076162, "post_id": 57704898, "comment_id": 101859360, "body": "@StefanDorn My overall point is this: the <i>impure-pure-impure sandwich</i> architecture is much simpler than free monads, so if there&#39;s any sort of trick I can pull to enable that architecture, I&#39;ll do that. If I truly can&#39;t, I&#39;ll go with free monads, but my experience is that I rarely need to do that."}, {"owner": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "edited": false, "score": 0, "creation_date": 1567076259, "post_id": 57704898, "comment_id": 101859417, "body": "thank you very much for interesting point! I will take a look at your link!"}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 13, "last_activity_date": 1567062837, "creation_date": 1567062837, "answer_id": 57704898, "question_id": 57703898, "link": "https://stackoverflow.com/questions/57703898/how-to-call-impure-functions-from-pure-ones/57704898#57704898", "title": "How to call impure functions from pure ones?", "body": "<p>The general question (<em>how to call an impure function from a pure function</em>) is a FAQ. See e.g. this question and its answers: <a href=\"https://stackoverflow.com/q/51614573/126014\">How to return a pure value from a impure method</a></p>\n\n<p>How you structure code in a more functional manner depends, like any other topic related to software architecture, on circumstances. What sort of program are you writing? A REST API? A smartphone app? A console program? A batch job? An add-in?</p>\n\n<p>In many cases, you can get away with what I call an <em>impure-pure-impure sandwich</em>:</p>\n\n<ol>\n<li>Gather all required data from impure sources</li>\n<li>Call a pure function with that data</li>\n<li>Do something impure with the return value from the pure function</li>\n</ol>\n\n<p>In Haskell you can do this because entry points are always impure. Here's a simple sketch of the weather decision problem. You start by defining the data on which you'll work. Here, I only include the <code>beaufort</code> value, but I assume that <code>WeatherData</code> would include more data than that (which is why I define it as <code>data</code> and not as a <code>newtype</code>).</p>\n\n<pre><code>data WeatherData = WeatherData { beaufort :: Int } deriving (Eq, Show)\n</code></pre>\n\n<p>You can now write the decision logic as a pure function:</p>\n\n<pre><code>shouldAvoidLocation :: WeatherData -&gt; Bool\nshouldAvoidLocation weather = beaufort weather &gt; 8\n</code></pre>\n\n<p>Loading data is an entirely concrete operation:</p>\n\n<pre><code>readWeatherFromDb :: Location -&gt; LocalTime -&gt; IO WeatherData\nreadWeatherFromDb location timestamp = -- implementation goes here...\n</code></pre>\n\n<p>There's no explicit abstraction in place here. This function reads data and returns impure data. That could be the first (impure) step in the <em>impure-pure-impure sandwich</em>.</p>\n\n<p>The entry point of the application can now be structured according to that architecture:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  w &lt;- readWeatherFromDb Berlin $ LocalTime (fromGregorian 2019 8 29) (TimeOfDay 8 55 8)\n  if shouldAvoidLocation w\n    then putStrLn \"Avoid\"\n    else putStrLn \"Go\"\n</code></pre>\n\n<p>The call to <code>shouldAvoidLocation</code> is the good, pure stuff in the middle of the sandwich, which is then followed by impure <code>putStrLn</code> calls.</p>\n"}, {"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1567186033, "post_id": 57710894, "comment_id": 101902220, "body": "The abstraction in the original code can also be included easily by way of a type alias: <code>type WeatherSource = Location -&gt; DateTime -&gt; IO WeatherData</code>. Then <code>getWeatherProvider</code> may be an <code>IO WeatherSource</code>, or better, a pure function such as <code>Options -&gt; WeatherSource</code>, and it may return <code>dbWeather</code> or another function. When you would add a method to <code>IWeatherForecast</code>, you can make <code>WeatherSource</code> a <code>data</code> type and add a field to it."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 6, "last_activity_date": 1567083972, "creation_date": 1567083972, "answer_id": 57710894, "question_id": 57703898, "link": "https://stackoverflow.com/questions/57703898/how-to-call-impure-functions-from-pure-ones/57710894#57710894", "title": "How to call impure functions from pure ones?", "body": "<p>In short, you don't pull data from an impure \"function\" (aka <em>action</em>); you <em>push</em> your pure function into a new action.</p>\n\n<pre><code>data WeatherData = WeatherData { beaufort :: Int, ... }\n\n-- getWeather is a pure function\n-- getWeather someLocation someDate is an action\ngetWeather :: Location -&gt; DateTime -&gt; IO WeatherData\ngetWeather l d = ...\n\n\n-- badWeather is a pure function\nbadWeather :: WeatherData -&gt; Bool\nbadWeather wd = beaufort wd &gt; 8\n\n-- avoidLocation is a pure function\n-- avoidLocation someLocation someDate is an action\n-- We can simply use fmap to lift (or wrap) the pure function badWeather\n-- into a new action.\navoidLocation :: Location -&gt; DateTime -&gt; IO Bool\navoidLocation l d = fmap badWeather (getWeather l d)\n</code></pre>\n\n<p><code>avoidLocation</code> doesn't actually produce a Boolean value; it creates an action that, when finally executed, <em>uses</em> <code>badWeather</code> to produce a Boolean value.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1567106078, "post_id": 57714058, "comment_id": 101874783, "body": "There&#39;s also an <code>mtl</code>-style option where you offer <code>class Monad m =&gt; WeatherMonad m where ...</code> that offers the capacity to get weather data but not to perform arbitrary <code>IO</code>. This approach is particularly useful for mocking."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1567109601, "post_id": 57714058, "comment_id": 101876057, "body": "@dfeuer Yeah, I get the impression that the record-of-functions-in-IO, free/freer and MTL-like approaches are more used in practice than this polymorphic trick. I do like it though, at least conceptually, because it feels like a somewhat &quot;natural&quot; evolution of the record-of-functions-in-IO approach."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1567110017, "post_id": 57714058, "comment_id": 101876196, "body": "To my mind, the &quot;factory&quot; approach only makes sense if there can be two <i>different</i> monads: <code>m (WeatherForecast n)</code>, separating the effect of connecting to a weather server from the event of retrieving forecasts."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 4, "last_activity_date": 1567195841, "last_edit_date": 1567195841, "creation_date": 1567094901, "answer_id": 57714058, "question_id": 57703898, "link": "https://stackoverflow.com/questions/57703898/how-to-call-impure-functions-from-pure-ones/57714058#57714058", "title": "How to call impure functions from pure ones?", "body": "<p>If the intertwining between effects and pure logic is too complex for a \"sandwich\"-based solution, one option is to parameterize your dependencies with the monad in which their effects take place, and then make your logic <em>polymorphic</em> over all monads.</p>\n\n<p>For example, here's an approximate translation of your code:</p>\n\n<pre><code>{-# LANGUAGE ExplicitForAll #-}\n\ndata WeatherData = WeatherData -- dummy type\ndata Location = Location       -- dummy type\ndata DateTime = DateTime       -- dummy type\n\nnewtype WeatherForecast m = \n    WeatherForecast { getWeather :: Location -&gt; DateTime -&gt; m WeatherData }\n\n-- simply a monadic action that creates a forecast\ntype WeatherFactory m = m (WeatherForecast m)\n\n-- A concrete factory that works in the IO monad\naWeatherFactory :: WeatherFactory IO\naWeatherFactory = \n    do putStrLn \"I'm effectfully allocating a WeatherForecast!\"\n       return \n            WeatherForecast {\n                getWeather = \\_ _ -&gt; \n                    do putStrLn \"I'm connecting to the Internet!\"\n                       return WeatherData\n            }\n\nnewtype MaritimeRoutePlanner m =\n    MaritimeRoutePlanner { shouldAvoidLocation :: m Bool }\n\n-- The logic only knows that m is a monad and nothing more. \nmakeMaritimeRoutePlanner :: forall m. Monad m \n                         =&gt; WeatherFactory m -&gt; MaritimeRoutePlanner m\nmakeMaritimeRoutePlanner forecastFactory =\n    MaritimeRoutePlanner {\n        shouldAvoidLocation =\n            do forecast &lt;- forecastFactory\n               WeatherData &lt;- getWeather forecast Location DateTime\n               return False\n    }\n</code></pre>\n\n<p>Both <code>WeatherForecast</code> and <code>WeatherFactory</code> have a type parameter for the monad in which their methods have effects. In particular, <code>aWeatherFactory</code> returns a <code>WeatherFactory</code> that works over <code>IO</code>.</p>\n\n<p>But notice the <code>forall</code> in the signature of <code>makeMaritimeRoutePlanner</code>. It forces the logic to work over <em>all</em> possible monads, which means it can't use functionality particular to any <em>concrete</em> monad.</p>\n\n<p>An example of use:</p>\n\n<pre><code>*Main&gt; let planner = makeMaritimeRoutePlanner aWeatherFactory\n*Main&gt; shouldAvoidLocation planner\nI'm effectfully allocating a WeatherForecast!\nI'm connecting to the Internet!\nFalse\n</code></pre>\n\n<p>Passing your effectful dependencies as parameters (or as the environment of a <code>Reader</code> monad) is relatively common. The further trick of making the logic polymorphic over the monad is less popular, I think. Ultimately, living in <code>IO</code> might be too convenient to forgo, or at least not problematic enough to bother putting the \"veil of polymorphism\" in place.</p>\n\n<p>(Of course, there are other possible solutions like free/freer monads and the like.)</p>\n"}], "owner": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 617, "favorite_count": 2, "answer_count": 3, "score": 6, "last_activity_date": 1567195841, "creation_date": 1567058682, "last_edit_date": 1567110524, "question_id": 57703898, "link": "https://stackoverflow.com/questions/57703898/how-to-call-impure-functions-from-pure-ones", "title": "How to call impure functions from pure ones?", "body": "<p>I have just finished reading a \"Learn You a Haskell for Great Good!\" book so my question can be very naive.\nWhat I don't understand is how to call \"impure\" IO functions from the pure code.</p>\n\n<p>Here is a working example written in C#. In our business logic we plan some actions based on weather. We do it in usual C# manner.</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>interface IWeatherForecast\n{\n    WeatherData GetWeather(Location location, DateTime timestamp);\n}\n\n// concrete implementation reading weather from DB\nclass DbWeather : IWeatherForecast\n{\n    public override WeatherData GetWeather(Location location, DateTime timestamp)\n    {...}\n}\n\nclass WeatherFactory\n{\n    public IWeatherForecast GetWeatherProvider()\n    {...}\n}\n\n// Business logic independent from any DB\nclass MaritimeRoutePlanner\n{\n    private IWeatherForecast weatherProvider = weatherFactory.GetWeatherProvider();\n\n    public bool ShouldAvoidLocation(Location location, DateTime timestamp)\n    {\n        WeatherData weather = weatherProvider.GetWeather(location, timestamp);\n        if(weather.Beaufort &gt; 8)\n            return true;\n        else...\n            ...\n    }\n}\n</code></pre>\n\n<p>How do I implement this logic in Haskell? </p>\n\n<p>In reality \"pure logical\" MaritimeRoutePlanner calls <code>weatherProvider.GetWeather()</code> which is \"impure IO\" stuff.</p>\n\n<p>Is it possible in Haskell? How would you model this in Haskell?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1567073260, "post_id": 57703774, "comment_id": 101857755, "body": "Why is <code>[(0,1), (1,4), (1,10)]</code> not a valid path?"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567087370, "post_id": 57703774, "comment_id": 101866022, "body": "@WillemVanOnsem I suppose it is not <i>minimal</i> in that some intervals <i>(namely, 1 \u2014 4)</i> may be removed safely. I think we should take it as implied that they are minimal paths that are of interest in this problem."}, {"owner": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "edited": false, "score": 0, "creation_date": 1567111396, "post_id": 57703774, "comment_id": 101876675, "body": "Yes, the end result is to look for path with minimum number of lines."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1567112460, "post_id": 57703774, "comment_id": 101877072, "body": "@phoxd: <i>minimum</i>, or <i>minimal</i>?"}, {"owner": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "edited": false, "score": 0, "creation_date": 1567491664, "post_id": 57703774, "comment_id": 101967372, "body": "Would minimum mean that there is possibility of multiple minimum paths? And minimal that there is only one minimal option?"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1567588459, "post_id": 57703774, "comment_id": 102003892, "body": "@phoxd The other way around, although it may be better to say <i>&quot;the</i> least <i>element&quot;</i> to avoid any possibility of misreading. You may consult a book on order theory, like this <a href=\"https://www.cambridge.org/core/books/introduction-to-lattices-and-order/946458CB6638AF86D85BA00F5787F4F4\" rel=\"nofollow noreferrer\">Introduction to Lattices and Order</a>, if you wish to know the precise formulations."}], "answers": [{"comments": [{"owner": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "edited": false, "score": 0, "creation_date": 1567491913, "post_id": 57748787, "comment_id": 101967471, "body": "Thanks for the solution. But I am confused as to how pattern matching with guards that do not have <code>otherwise</code> case.  In your usage of <code>paths1 (a, f) (b, c) _ | c &gt;= f = [[]]</code>, Does compiler decide to go to the next pattern below if it doesn&#39;t match?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "edited": false, "score": 0, "creation_date": 1567493895, "post_id": 57748787, "comment_id": 101968279, "body": "@phoxd: yes indeed. If the guard fails, it continues with the next patterns."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1567538560, "post_id": 57748787, "comment_id": 101990200, "body": "Your algorithm is at fault. Consider <code>paths (2, 5) [(1, 3), (2, 4), (3, 6)]</code>: it will offer, among others, <code>[(1,3),(2,4),(3,6)]</code>, which is not minimal: <code>(2, 4)</code> is extraneous. Indeed, the smaller <code>[(1,3),(3,6)]</code> is also offered."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1567538724, "post_id": 57748787, "comment_id": 101990263, "body": "@IgnatInsarov: thanks for the feedback. That was indeed a case I forgot, although I think with some changes it can be fixed :)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1567592627, "post_id": 57748787, "comment_id": 102006219, "body": "@IgnatInsarov: I hope that is now fixed :)"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1567937452, "post_id": 57748787, "comment_id": 102109724, "body": "Unfortunately, as far as I can see, <code>(0, 2) [(-2, 1), (-1, 2)]</code> still gives <code>[(-2,1),(-1,2)],[(-1,2)]]</code>, which again includes a chain that is not minimal."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1567937575, "last_edit_date": 1567937575, "creation_date": 1567365427, "answer_id": 57748787, "question_id": 57703774, "link": "https://stackoverflow.com/questions/57703774/create-list-of-paths-taken/57748787#57748787", "title": "Create list of paths taken", "body": "<p>We can generate a list of <em>minimal</em> paths: paths where we can not remove a single 2-tuple such that it is still a valid path.</p>\n\n<p>Usually it is more efficient here to work with a sorted list of fragments, since we can scan the list and append items that are necessary. When we scan, we will need two things: the range we want to cover; and the last range, such that we guarantee minimality.</p>\n\n<p>We will first construct a function where we assume we already selected a path. We thus can define a function with signature:</p>\n\n<pre><code>paths1 :: Ord a =&gt; (a, a) -&gt; (a, a) -&gt; [(a, a)] -&gt; [[(a, a)]]\n</code></pre>\n\n<p>In case the last item selected is greater than or equal to the upperbound of the range, we are done. In that case, we return a singleton list with an empty list. The recursive call can then add the selected subpath to the list:</p>\n\n<pre><code>paths1 (a, f) (b, c) _ | c &gt;= f = [[]]\n</code></pre>\n\n<p>In case the list of possible subranges is exhausted, we can not generate such path, we thus return an empty list in case the list of subranges is empty:</p>\n\n<pre><code>paths1 _ _ [] = []\n</code></pre>\n\n<p>In case we have not reached the end yet, we will need an extra subrange. Such subrange needs to satisfy two criteria: it should start <em>after</em> the previously selected subpath, and it should end <em>after</em> the previously selected subpath. We thus can skip suranges that do not satisfy that condition:</p>\n\n<pre><code>paths1 r s@(b, c) ((d, e):xs) | d &gt; c = []\n                              | d &lt;= b || e &lt;= c = paths1 r s xs\n</code></pre>\n\n<p>In case we can select the subrange, we thus can pick that one. In that case we thus update the last range selected and will the prepend all the paths that are returned:</p>\n\n<pre><code>paths1 r s@(_,sb) (x@(_, xb):xs) = map (x:) (paths1 r (sb,xb) xs) ++ paths1 r s xs\n</code></pre>\n\n<p>Now we thus have defined a complete implementation for <code>paths1</code>:</p>\n\n<pre><code>paths1 :: Ord a =&gt; (a, a) -&gt; (a, a) -&gt; [(a, a)] -&gt; [[(a, a)]]\npaths1 (a, f) (b, c) _ | c &gt;= f = [[]]\npaths1 _ _ [] = []\npaths1 r s@(b, c) ((d, e):xs) | d &gt; c = []\n                              | d &lt;= b || e &lt;= c = paths1 r s xs\npaths1 r s@(_,sb) (x@(_, xb):xs) = map (x:) (paths1 r (sb,xb) xs) ++ paths1 r s xs\n</code></pre>\n\n<p>We now need to implement a function that selects the first subrange. We can implement such function <code>path0</code>:</p>\n\n<pre><code>paths0 :: (a, a) -&gt; [(a, a)] -&gt; [[(a, a)]]\n</code></pre>\n\n<p>The first range we should select should start before on on the start of the range we want to generate, and after the start of the range. We thus can implement that as:</p>\n\n<pre><code>paths0 :: Ord a =&gt; (a, a) -&gt; [(a, a)] -&gt; [[(a, a)]]\npaths0 (a, _) ((b, c):_) | b &gt; a || c &lt;= a = []\npaths0 r@(a, _) ((_, c):xs) | c &lt;= a = paths0 r xs\npaths0 r (x:xs) = map (x:) (paths1 r x xs) ++ paths0 r xs\n</code></pre>\n\n<p>So now we can combine the two in a <code>path</code> function. We can first sort the list, or add this as a pre-condition:</p>\n\n<pre><code>import Data.List(sort)\n\npaths :: (a, a) -&gt; [(a, a)] -&gt; [[(a, a)]]\npaths = (. sort) . paths0\n</code></pre>\n\n<p>We then obtain the expected result:</p>\n\n<pre><code>Prelude Data.List&gt; paths (0,10) [(0,1), (1,10), (1,4), (3,5), (5,10)]\n[[(0,1),(1,4),(3,5),(5,10)],[(0,1),(1,10)]]\n</code></pre>\n\n<p>The above is not the most elegant solution. I leave \"<em>polishing</em>\" it further as an exercise.</p>\n"}, {"tags": [], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "is_accepted": false, "score": 3, "last_activity_date": 1567937228, "creation_date": 1567937228, "answer_id": 57840965, "question_id": 57703774, "link": "https://stackoverflow.com/questions/57703774/create-list-of-paths-taken/57840965#57840965", "title": "Create list of paths taken", "body": "<h3>This is actually a problem of some depth.</h3>\n\n<p>Or, rather, the algorithm you ask for is simple <em>(if approached with the right tools at hand)</em>;\nbut checking whether it is correct is not, and it is very easy to make a slight mistake. This is\nbecause intervals are unlike numbers in that there is no such simple notion as the usual total\norder anymore, and what relations we have instead are tenfold more complex \u2014 too far so for the\nunarmed human mind to grasp.</p>\n\n<p>Therefore, what our goals should be?</p>\n\n<ol>\n<li>We need to understand how intervals relate to each other.</li>\n<li>We need to be able to check if a given set of intervals is a solution to the problem.</li>\n</ol>\n\n<p>In this writing, I will be saying <em>\"base\"</em> meaning the interval to be covered, and <em>\"chain\"</em>\nconsisting of <em>\"links\"</em> meaning a set of intervals that may be covering it. <em>(I will eventually\njustify this latter naming.)</em></p>\n\n<h3>So, let us arm ourselves.</h3>\n\n<p>With numbers <em>(that is, single points)</em>, there are only 3 disjoint qualitative relations: <code>a &lt; b</code>\nor <code>a = b</code> or <code>a &gt; b</code>. What can we say about pairs of numbers <em>(representing intervals)</em> then?\nThere are 5 places a point can be with respect to an interval:</p>\n\n<pre><code>             on the left end\n             v\n-- before -- * == inside == * -- after --\n                            ^\n                            on the right end\n</code></pre>\n\n<p>Considering that the left end of an interval is never to the right of its right end <em>(duh)</em>, this\ngives us <code>sum [5, 4.. 1] = 15</code> disjoint qualitative relations between two intervals. Disregarding\nthe two relations where both ends of one interval are on the same end of another <em>(meaning the\ninterval is a point)</em>, that gives 13. And now there is a <a href=\"https://www.ics.uci.edu/~alspaugh/cls/shr/allen.html\" rel=\"nofollow noreferrer\">prior art</a> discussing exactly 13\ndisjoint exhaustive relations on intervals. <em>(<a href=\"https://cse.unl.edu/~choueiry/Documents/Allen-CACM1983.pdf\" rel=\"nofollow noreferrer\">Original article.</a>)</em></p>\n\n<p>Namely, there are defined these 6 relations:</p>\n\n<pre><code>precedes      =  \\ i j  -&gt;  right i &lt; left j\nmeets         =  \\ i j  -&gt;  right i == left j &amp;&amp; left i /= left j &amp;&amp; right i /= right j\noverlaps      =  \\ i j  -&gt;  left i &lt; left j  &amp;&amp; right i &lt; right j &amp;&amp; right i &gt; left j\nisFinishedBy  =  \\ i j  -&gt;  left i &lt; left j  &amp;&amp; right i == right j\ncontains      =  \\ i j  -&gt;  left i &lt; left j  &amp;&amp; right i &gt; right j\nstarts        =  \\ i j  -&gt;  left i == left j &amp;&amp; right i &lt; right j\n</code></pre>\n\n<p>\u2014 Together with their inversions <code>flip ...</code> and the equality relation.</p>\n\n<p>Whereas for numbers we can derive exactly 8 composite relations in terms of the 3 basic ones\n<em>(considering relations as a vector space over the binary field)</em>, on intervals we can define\nabout 8 <em>thousand</em>. Some of those will be of use to us within this problem:</p>\n\n<pre><code>absorbs         =  isFinishedBy `or` contains `or` flip starts `or` (==)\nisDisjointWith  =  precedes     `or` flip precedes\njoins           =  (fmap . fmap) not isDisjointWith\ntouches         =  meets        `or` overlaps\nisRightwardsOf  =  flip (precedes `or` touches)\n...\n</code></pre>\n\n<p>Given these relations, we can manipulate them to obtain all kinds of awesome devices, such as\nclosures, equivalences and orders. I will presently use some to obtain a verifier of solutions to\nour problem.</p>\n\n<ol>\n<li>A reflexive, symmetric and transitive closure of <code>joins</code> is an equivalence under which\nconsidered equivalent are those intervals that belong to a contiguous line. <em>(While not\nnecessarily being adjacent on that line.)</em></li>\n<li>A <em>normal</em> set of intervals is such in which all intervals are disjoint.\n\n<ul>\n<li>Any set may be <em>normalized</em> by gluing together intervals that join until none are left.</li>\n<li>Normalization preserves coverage: exactly when a point belongs to some of the intervals in a\nset, it will belong to some interval in its normalization.</li>\n</ul></li>\n<li>A solution is a chain such that:\n\n<ul>\n<li>Its normalization is a singleton set whose only member <code>absorbs</code> the base. <em>(Sufficient.)</em></li>\n<li>With any link removed, this condition does not anymore hold. <em>(Minimal.)</em></li>\n</ul></li>\n</ol>\n\n<p>Therefore, <code>normalize</code> is a function that divides a set of intervals into classes of equivalence\ninduced by <code>joins</code> and converts each class to an interval by taking the extrema of all the\nendpoints.</p>\n\n<pre><code>relation :: Ord a =&gt; Set a -&gt; (a -&gt; a -&gt; Bool) -&gt; Relation a\n\nclosure :: Relation a -&gt; Relation a\n\nclassifyBy :: Ord a =&gt; (a -&gt; a -&gt; Bool) -&gt; Set a -&gt; Set (Set a)\n\n(?) :: Eq a =&gt; Relation a -&gt; (a, a) -&gt; Bool\n\nbounds :: Ord a =&gt; Set a -&gt; Interval a\n\nflatten :: Ord a =&gt; Set (Interval a) -&gt; Set a\n\nnormalize :: Ord a =&gt; Set (Interval a) -&gt; Set (Interval a)\nnormalize u | Set.null u = Set.empty\n            | otherwise = let  rel = closure (relation u joins)\n                               classes = classifyBy (curry (rel ?)) u\n                          in Set.map (bounds . flatten) classes\n</code></pre>\n\n<p>In these terms, we can define the check:</p>\n\n<pre><code>isCovering :: Ord a =&gt; Interval a -&gt; [Interval a] -&gt; Bool\nisCovering base xs = case (Set.toList . normalize . Set.fromList) xs of\n                        [y] -&gt; y `absorbs` base\n                        _   -&gt; False\n\nisMinimalCovering :: Ord a =&gt; Interval a -&gt; [Interval a] -&gt; Bool\nisMinimalCovering base xs = sufficient &amp;&amp; minimal\n    where sufficient = isCovering base xs\n          minimal    = List.null . filter (isCovering base)\n                                 . fmap (`deleteAt` xs) $ [0.. length xs - 1]\n</code></pre>\n\n<p>Not only that, we can define a filter:</p>\n\n<pre><code>bruteForceCoveringChains :: forall a. (Ord a, Num a)\n                         =&gt; Interval a -&gt; [Interval a] -&gt; [[Interval a]]\nbruteForceCoveringChains base xs = filter (isMinimalCovering base) (List.subsequences xs)\n</code></pre>\n\n<p>Time complexity of these devices is crazy. Empirically, this brute force solution can munch\nthrough a set of 10 intervals, but not 20. But this much is enough to check a candidate fast\nalgorithm against.</p>\n\n<h3>Onwards now!</h3>\n\n<p>All the links in our chain must connect, like... links of a chain. One after the other. There is a\nrelation for that: the one I named <code>touches</code>. If a series of intervals consecutively touch one\nanother, we are certain that they cover the space from the beginning of the first to the ending of\nthe last one. We can use this relation to consecutively filter more and more links into our chain\nuntil it subsumes the base completely.</p>\n\n<p>Incidentally, <code>touches</code> is an antisymmetric relation, which makes its transitive and reflexive\nclosure an <em>ordering</em> of intervals, and a <em>chain</em> in order theory is exactly a totally ordered\nset. So, our naming is justified: there is a relation that is not a total ordering for arbitrary\nsets of intervals, but is a total ordering for our chains.</p>\n\n<p>This is not enough though: we must also ensure our chain is minimal. I claim that this condition\nholds exactly when <code>touches</code> is <em>nowhere transitive</em> on our chain. That means: when\n<code>x `touches` y</code> and <code>y `touches` z</code>, it is never that <code>x `touches` z</code> <em>(Otherwise, we would\nnot need <code>y</code> in our chain.)</em>.  Observe that, like links in a real chain, our <em>\"links\"</em> must only\noverlap two at a time. This requirement may be paraphrased in terms of interval relations: a link\nmust <em>be touched by</em> the interval between the end of the previous link and the one before the\nprevious. It sounds a bit baroque, but I am sure the reader may depict this situation in their\nmind or on a piece of paper.</p>\n\n<p>And this is all that is needed to give a recursive definition that we are looking for.</p>\n\n<pre><code>chainsFromTo :: Ord a =&gt; Interval a -&gt; Interval a -&gt; [Interval a] -&gt; [[Interval a]]\nchainsFromTo start end xs' = case base of\n    Point _ -&gt; (fmap pure . filter (`absorbs` base)) xs'\n    _       -&gt; baseCase ++ recursiveCase\n  where\n    base = right start ~~ left end\n\n    xs = filter (not . isDisjointWith base) xs'\n\n    baseCase = do\n        x &lt;- filter ((start `touches`) * (`touches` end)) xs\n        return [x]\n\n    recursiveCase = do\n        x &lt;- filter ((start `touches`) * not . (`touches` end)) xs\n        xs &lt;- chainsFromTo (right start ~~ right x) end (filter (`isRightwardsOf` x) xs)\n        return $ x: xs\n\ncoveringChainsFromTo :: forall a. (Ord a, Num a)\n                     =&gt; Interval a -&gt; [Interval a] -&gt; [[Interval a]]\ncoveringChainsFromTo _   [ ] = [ ]\ncoveringChainsFromTo base xs = chainsFromTo start end xs\n  where\n    start = (\\z -&gt; z - 1) (left reach) ~~ left base\n    end = right base ~~ (\\z -&gt; z + 1) (right reach)\n    reach = (bounds . flatten . Set.fromList) xs\n</code></pre>\n\n<p>Once you have it, it looks straightforward, but I tried like a dozen times to make it right, and\nonly extensive checking helped me locate and fix all the corner cases. You can see the complete\ncode in <a href=\"https://github.com/kindaro/interval-cover\" rel=\"nofollow noreferrer\">a repository</a>.</p>\n\n<h3>That is it.</h3>\n\n<p>I hope it helps. Do comment if my presentation is not clear or if I missed something.</p>\n"}], "owner": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "accepted_answer_id": 57748787, "answer_count": 2, "score": 2, "last_activity_date": 1567937575, "creation_date": 1567058045, "question_id": 57703774, "link": "https://stackoverflow.com/questions/57703774/create-list-of-paths-taken", "title": "Create list of paths taken", "body": "<p>Given range <code>(a,b)</code> and lines <code>(x,y)</code>, I want to construct all the possible ways to cover the range with the given lines.</p>\n\n<p>For example with range <code>(0,10)</code> (if we filter list to be within range then we don't have to worry about it) and the following list (sorting it makes easier to pick next value),</p>\n\n<pre><code>list = [(0,1), (1,10), (1,4), (3,5), (5,10)]\n</code></pre>\n\n<p>I want to output list of paths taken to cover the range as follows,</p>\n\n<pre><code>[\n[(0,1), (1,4), (3,5), (5,10)],\n[(0,1), (1,10)]\n]\n</code></pre>\n\n<p>I tried setting up function that would get list of next possible <code>(x,y)</code> values as follows, but it only prints a single path.</p>\n\n<pre><code>-- assume list is sorted based on first pair\nnextpaths :: (Num a, Ord a) =&gt; [(a, a)] -&gt; ([(a, a)], [(a, a)])\nnextpaths ((start, end):xs) = go xs ([], [])\n  where go [] acc = acc\n        go (y:ys) (next, rest)| fst y &lt;= end = go ys (y:next, rest)\n                              | otherwise = (next, y:ys)\n\npaths t@(x:xs) = case nextpaths t of\n  ([],_) -&gt; [[x]]\n  (n:next, rest) -&gt; map (x:) (paths (n:rest))\n</code></pre>\n\n<p>How would we make it so that <code>paths</code> functions applies to other <code>next</code> list values?</p>\n"}]