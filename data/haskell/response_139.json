[{"tags": ["haskell", "websocket", "io", "warp"], "answers": [{"tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": false, "score": 2, "last_activity_date": 1504743674, "creation_date": 1504743674, "answer_id": 46086083, "question_id": 46082867, "link": "https://stackoverflow.com/questions/46082867/terminal-io-not-working-in-warp-wai-application/46086083#46086083", "title": "Terminal IO not working in Warp / WAI application", "body": "<p><strong>The above code actually works</strong>, but not when nothing happens!  This question was the result of a <em>nasty</em> cache invalidation error, and not an error in my code.</p>\n\n<p>I wrote the client side first (using <a href=\"http://elm-lang.org/\" rel=\"nofollow noreferrer\">Elm</a>, highly recommended) and hard coded the websocket to point to <code>wss://echo.websocket.org</code> so I could test the front end.  I then got the backend to serve me the file that Elm had created (but still pointed at <code>wss://echo.websocket.org</code>). Realizing my mistake, I changed the elm script to point at localhost and added some logging to the back-end as seen above.</p>\n\n<p>I then restarted the server and pointed my browser at localhost:3000.  The browser loaded up the cached copy (no HTTP request) which still pointed at <code>wss://echo.websocket.org</code> (no websocket request).</p>\n\n<p>It looked like the front end was working, but the backend was not logging. In point of fact there were no requests coming into the back end at all.</p>\n\n<p>I came back this evening and started messing with my code to see if I could get everything to work and the first time I ran the server everything (almost) worked, but I had not made any effective changes, just added some new 'include' lines.  The cache had expired. The big tip was that everything but the HTTP request logged correctly.  \"Now why would that one request be different?\" I asked myself. Then it hit me that there was caching going on and that a stale cache could account for everything I was seeing this morning.</p>\n\n<p>Other than feeling a bit humiliated at not recognizing this earlier, everything is working now.</p>\n\n<blockquote>\n  <p>There are only two hard things in Computer Science: cache invalidation and naming things.\n  -- Phil Karlton</p>\n</blockquote>\n"}], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1506803699, "creation_date": 1504725714, "last_edit_date": 1506803699, "question_id": 46082867, "link": "https://stackoverflow.com/questions/46082867/terminal-io-not-working-in-warp-wai-application", "title": "Terminal IO not working in Warp / WAI application", "body": "<p>I'm messing around with WebSockets and I have written an \"echo server\" which I expected to log to the console as it runs:</p>\n\n<pre><code>echo = Warp.run 3000 app\n  where\n    app = WS.websocketsOr \n      WS.defaultConnectionOptions\n      wsApp\n      httpApp\n\n    httpApp _ respond = do\n      put \"HTTP Request Recieved\"\n      respond $ Wai.responseFile \n        Http.status200\n        []\n        \"web/index.html\"\n        Nothing\n\nwsApp :: WS.ServerApp\nwsApp pendingConn = do\n  conn &lt;- WS.acceptRequest pendingConn\n  WS.forkPingThread conn 30\n  put \"WebSocket Connection Open\"\n  listen conn\n\nlisten :: WS.Connection -&gt; IO ()\nlisten conn = forever $ do\n  str &lt;- WS.receiveData conn :: (IO Text.Text)\n  put $ Text.unpack str\n  WS.sendTextData conn str\n\nmain :: IO ()\nmain = do\n  put \"Echo WebSocket Running ...\"\n  echo\n\nput str = hPutStrLn stdout str &gt;&gt; hFlush stdout\n</code></pre>\n\n<p>As you can see, I've tried flushing <code>stdout</code> but with no success.  I get</p>\n\n<pre><code>$ ./echoServer\nEcho WebSocket Running ...\n</code></pre>\n\n<p>but nothing more. Even though I can successfully load \"web/index.html\" in a browser and successfully establish a connection to the WebSocket and use it, I get no feedback from the console.</p>\n\n<p>What do I need to do to get output to the console?</p>\n\n<hr>\n\n<p>Library Versions:</p>\n\n<ul>\n<li><a href=\"https://hackage.haskell.org/package/warp\" rel=\"nofollow noreferrer\">Warp</a> : 3.2.13</li>\n<li><a href=\"https://hackage.haskell.org/package/wai\" rel=\"nofollow noreferrer\">WAI</a> : 3.2.1.1</li>\n<li><a href=\"https://hackage.haskell.org/package/wai-websockets\" rel=\"nofollow noreferrer\">wai-websockets</a> : 3.0.1.1</li>\n<li>websockets : 0.12.2.0</li>\n</ul>\n"}, {"tags": ["haskell", "functional-programming", "binary-tree", "inorder", "preorder"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1504718335, "post_id": 46080845, "comment_id": 79123596, "body": "You are passing <code>leftInOrd</code>, not <code>rightInOrd</code>, to the call to <code>buildTree</code> that computes the right subtree."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1504718461, "post_id": 46081011, "comment_id": 79123677, "body": "Assuming the inputs are valid traversals of the same tree, one should be able to prove that <code>elemIndex</code> <i>won&#39;t</i> return <code>Nothing</code>. I believe it is a typo in the code that allows that case."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1504726588, "post_id": 46081011, "comment_id": 79128018, "body": "That&#39;s a big assumption, though. I think it&#39;s better to have this function return <code>Maybe (Tree a)</code> to allow for the case that it gets incorrect inputs."}], "tags": [], "owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "is_accepted": false, "score": 2, "last_activity_date": 1504718344, "creation_date": 1504718344, "answer_id": 46081011, "question_id": 46080845, "link": "https://stackoverflow.com/questions/46080845/rebuild-a-binary-tree-from-preorder-and-inorder-lists/46081011#46081011", "title": "Rebuild a binary tree from preorder and inorder lists", "body": "<p>The runtime is failing on this line:</p>\n\n<pre><code>Just rootInd = elemIndex root inOrd\n</code></pre>\n\n<p><code>elemIndex</code> is returning <code>Nothing</code> when running your example input, but your code says it will always return a <code>Just</code>, so the runtime crashes. You need to handle the case where <code>elemIndex root inOrd</code> returns <code>Nothing</code>.</p>\n\n<p>Perhaps more importantly, you should enable all warnings with the <a href=\"https://downloads.haskell.org/~ghc/7.0.3/docs/html/users_guide/options-sanity.html\" rel=\"nofollow noreferrer\"><code>-Wall</code> flag</a> to show up as compiler errors so that your code wouldn't compile to begin with.</p>\n"}, {"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 1, "last_activity_date": 1504742453, "creation_date": 1504742453, "answer_id": 46085931, "question_id": 46080845, "link": "https://stackoverflow.com/questions/46080845/rebuild-a-binary-tree-from-preorder-and-inorder-lists/46085931#46085931", "title": "Rebuild a binary tree from preorder and inorder lists", "body": "<p>@chepner has spotted the error.  If you'd like to know how to find and fix these sorts of errors yourself in the future, you may find the following answer helpful...</p>\n\n<p>First, it helps to find the smallest test case possible.  With a few tries, it's not hard to get your program to fail on a 2-node tree:</p>\n\n<pre><code>&gt; buildTree [5,2] [2,5]\nNode 5 (Node 2 Empty Empty) (Node *** Exception: Prelude.head: empty list\n</code></pre>\n\n<p>Now, try tracing the evaluation of <code>buildTree [5,2] [2,5]</code> by hand.  If you evaluate this first <code>buildTree</code> call manually, you'll find the variables involved have values:</p>\n\n<pre><code>preOrd = [5,2]\ninOrd = [2,5]\nJust rootInd = Just 1\n\nleftPreord = tail (take 2 [5,2]) = [2]\nrightPreord = tail (drop 1 [5,2]) = []\n\nleftInOrd = take 1 [2,5] = [2]\nrigthInord = drop 2 [2,5] = []\n\nroot = 5\nleft = buildTree [2] [2]\nright = buildTree [] [2]\n</code></pre>\n\n<p>Everything looks fine, except <code>right</code>, which tries to build a tree with incompatible preorder and inorder lists.  That's what causes the error, since <code>buildTree [] [2]</code> tries to take the <code>head</code> of an empty list.  (The error message is a little different for your test case, but the underlying cause is the same.)</p>\n\n<p>This pinpoints the problem as the second argument to <code>buildTree</code> in the definition of <code>right</code> -- the value <code>2</code> shouldn't be included in the (empty) right tree.  From there, it's easy to spot and fix the typo in the definition of <code>right</code> so it reads:</p>\n\n<pre><code>read = buildTree rigthPreOrd rightInOrd\n</code></pre>\n\n<p>After that fix, things seem to work okay.</p>\n"}], "owner": {"reputation": 35, "user_id": 6405230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e407329abe0e5a46c1a91f2e87e88b3?s=128&d=identicon&r=PG&f=1", "display_name": "varo2397", "link": "https://stackoverflow.com/users/6405230/varo2397"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1504742453, "creation_date": 1504717626, "last_edit_date": 1504718380, "question_id": 46080845, "link": "https://stackoverflow.com/questions/46080845/rebuild-a-binary-tree-from-preorder-and-inorder-lists", "title": "Rebuild a binary tree from preorder and inorder lists", "body": "<p>Hi I'm trying to rebuild a binary tree, I almost got it, except it throws me an error and I don't know why </p>\n\n<pre><code>buildTree :: (Ord a, Eq a) =&gt; [a] -&gt; [a] -&gt; Tree a\nbuildTree [] [] = Empty\nbuildTree preOrd inOrd = Node root left right \nwhere root  = head preOrd\n      left = buildTree leftPreOrd leftInOrd\n      right = buildTree rigthPreOrd leftInOrd\n\n      Just rootInd = elemIndex root inOrd\n      leftPreOrd   = tail (take (rootInd + 1) preOrd)\n      rigthPreOrd  = tail (drop rootInd preOrd)\n\n      leftInOrd    = take rootInd inOrd\n      rightInord   = drop (rootInd + 1) inOrd\n</code></pre>\n\n<p>When I call it using</p>\n\n<pre><code>buildTree [10,5,2,6,14,12,15] [2,5,6,10,12,14,15]\n</code></pre>\n\n<p>it throws me this: </p>\n\n<pre><code>Exception: reconstruir.hs:26:11-45: Irrefutable pattern failed for pattern Just rootInd\n</code></pre>\n"}, {"tags": ["haskell", "monad-transformers", "reader-monad"], "comments": [{"owner": {"reputation": 1030, "user_id": 521806, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/PaOw7.jpg?s=128&g=1", "display_name": "Juan Pablo Santos", "link": "https://stackoverflow.com/users/521806/juan-pablo-santos"}, "edited": false, "score": 4, "creation_date": 1504717630, "post_id": 46080752, "comment_id": 79123203, "body": "Have you seen <a href=\"https://hackage.haskell.org/package/mmorph-1.1.0/docs/Control-Monad-Morph.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/mmorph-1.1.0/docs/&hellip;</a>? If you provide <code>ReaderT r m a -&gt; ReaderT r&#39; m a</code>, <code>hoist</code> from <code>MFunctor</code> can do what you want."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 2, "creation_date": 1504730676, "post_id": 46080752, "comment_id": 79130088, "body": "Whether you can do this also depends on <code>m</code>.  For example this is not possible with <code>ContT</code>."}, {"owner": {"reputation": 1030, "user_id": 521806, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/PaOw7.jpg?s=128&g=1", "display_name": "Juan Pablo Santos", "link": "https://stackoverflow.com/users/521806/juan-pablo-santos"}, "edited": false, "score": 0, "creation_date": 1504802518, "post_id": 46080752, "comment_id": 79165307, "body": "Indeed. Checkout the instances for <code>MFunctor</code> for more details."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 5, "last_activity_date": 1504732832, "creation_date": 1504732832, "answer_id": 46084511, "question_id": 46080752, "link": "https://stackoverflow.com/questions/46080752/modifying-inner-reader-in-a-transformer-stack/46084511#46084511", "title": "Modifying inner reader in a transformer stack", "body": "<p>I don't think it's possible to write a function with signature:</p>\n\n<pre><code>changeReaderT :: (MonadTrans m)\n                 =&gt; (r -&gt; r') \n                 -&gt; m (ReaderT r IO) a \n                 -&gt; m (ReaderT r' IO) a\n</code></pre>\n\n<p>the issue being that the only operation possible, in general, on the second argument is lifting it to <code>t (m (ReaderT r IO)) a</code> for some monad transformer <code>t</code>, which doesn't buy you anything.</p>\n\n<p>That is, the <code>MonadTrans m</code> constraint alone doesn't provide enough structure to do what you want.  You either need <code>m</code> to be an instance of a typeclass like <code>MFunctor</code> in the <code>mmorph</code> package that allows you to modify an inner layer of the monad stack in a general way by providing a function like:</p>\n\n<pre><code>hoist :: Monad m =&gt; (forall a. m a -&gt; n a) -&gt; t m b -&gt; t n b\n</code></pre>\n\n<p>(which is what @Juan Pablo Santos was saying), or else you need an ability to dig into the structure of your <code>m</code> monad transformer to partially run and rebuild it (which will be transformer-specific).</p>\n\n<p>The first approach (using <code>hoist</code> from the <code>mmorph</code> package) will be most convenient if your <code>m</code> is already made up of transformers supported by the <code>mmorph</code> package.  For example, the following typechecks, and you don't have to write any instances:</p>\n\n<pre><code>type M n = MaybeT (StateT String n)\n\naction :: M (ReaderT Double IO) a\naction = undefined\n\nf :: Int -&gt; Double\nf = fromIntegral\n\ndesired :: M (ReaderT Int IO) a\ndesired = (hoist $ hoist $ withReaderT fromIntegral) action\n</code></pre>\n\n<p>You'll need a <code>hoist</code> for each layer in <code>M</code>.</p>\n\n<p>The second approach avoids <code>hoist</code> and requisite <code>MFunctor</code> instances but requires tailoring to your specific <code>M</code>.  For the above type , it looks something like:</p>\n\n<pre><code>desired' :: M (ReaderT Int IO) a\ndesired' = MaybeT $ StateT $ \\s -&gt;\n  (withReaderT fromIntegral . flip runStateT s . runMaybeT) action\n</code></pre>\n\n<p>You basically need to run the monad down to the <code>ReaderT</code> layer and then rebuild it back up, treating layers like <code>StateT</code> with care.  This is exactly what the <code>MFunctor</code> instances in <code>mmorph</code> are doing automatically.</p>\n"}], "owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 46084511, "answer_count": 1, "score": 6, "last_activity_date": 1504732832, "creation_date": 1504717273, "question_id": 46080752, "link": "https://stackoverflow.com/questions/46080752/modifying-inner-reader-in-a-transformer-stack", "title": "Modifying inner reader in a transformer stack", "body": "<p>I'm pulling together code from a number of different places, and I'm trying to deal with the following:</p>\n\n<h1>Problem</h1>\n\n<p>I have a transformer stack with the following simplified type:</p>\n\n<pre><code>action :: m (ReaderT r IO) a\n</code></pre>\n\n<p>and I'm trying to use the action in the context of a different stack, which has a different reader environment:</p>\n\n<pre><code>desired :: m (ReaderT r' IO) a\n</code></pre>\n\n<p>I can of course provide </p>\n\n<pre><code>f :: r' -&gt; r\n</code></pre>\n\n<h2>Example</h2>\n\n<pre><code>things :: m (ReaderT r' IO) ()\nthings = do\n   -- ... some stuff\n\n   -- &lt;want to use action here&gt;\n   action :: m (ReaderT r IO) a -- broken\n\n    -- ... more stuff\n   pure ()\n</code></pre>\n\n<h2>What I've considered</h2>\n\n<pre><code>withReaderT :: (r' -&gt; r) -&gt; ReaderT r m a -&gt; ReaderT r' m a\n</code></pre>\n\n<p>This has the problem that ReaderT is the outer monad, whilst I want to use it on an inner one.</p>\n\n<p>I've also considered that this might be related to MonadBase or MonadTransControl, but I'm not familiar with their workings.</p>\n"}, {"tags": ["haskell", "template-haskell", "esqueleto", "haskell-persistent"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504811863, "post_id": 46080485, "comment_id": 79170013, "body": "If you&#39;re going to do this with TH, then you don&#39;t need to write one single TH function for the entire <code>runquery</code> function - you can have just a TH function which produces a pattern. So you can have something like <code>from $ \\ $(mkInnerJoin [&quot;l&quot;, &quot;o&quot;, &quot;c&quot;]) -&gt; ...</code>. TH probably isn&#39;t the best way to do this (it&#39;s the best way to do few things...); you could start with defining a datatype to represent the structure of your query."}], "answers": [{"tags": [], "owner": {"reputation": 221, "user_id": 2849491, "user_type": "registered", "accept_rate": 38, "profile_image": "https://graph.facebook.com/948496018502300/picture?type=large", "display_name": "Nudin", "link": "https://stackoverflow.com/users/2849491/nudin"}, "is_accepted": false, "score": 0, "last_activity_date": 1505255918, "creation_date": 1505255918, "answer_id": 46186302, "question_id": 46080485, "link": "https://stackoverflow.com/questions/46080485/dynamically-build-sql-queries-wit-esqueleto-and-template-haskell/46186302#46186302", "title": "Dynamically build SQL-Queries wit Esqueleto and Template Haskell?", "body": "<p>So I found out that using sub-queries is in my case much faster than joins anyway and you can do them if needed:</p>\n\n<pre><code>runquery os license coding = runDB\n    $ select $ distinct\n    $ from $ \\p -&gt; do\n         case os of\n           Just os' -&gt;\n             where_ $ p ^. ProjectId `in_`\n               subList_select ( distinct $ from $\n                 \\(o `InnerJoin` po) -&gt; do\n                   on $ o ^. OsId       ==. po ^. ProjectOsOId\n                   where_ $ o ^. OsName ==. val (Just $ pack os') \n                   return $ po ^. ProjectOsPId\n                   )\n           Nothing -&gt; return ()\n         case license of\n           Just license' -&gt;\n             where_ $ p ^. ProjectId `in_`\n               subList_select ( distinct $ from $\n                 \\(l `InnerJoin` pl) -&gt; do\n                   on $ l ^. LicenseId      ==. pl ^. ProjectLicenseLId\n                   where_ $ l ^. LicenseName ==. val (Just $ pack license') \n                   return $ pl ^. ProjectLicensePId\n                   )\n           Nothing -&gt; return ()\n         -- ...\n         limit 50\n         return p\n</code></pre>\n\n<p>To reduce the big amount of duplicated code I then used Template-Haskell:</p>\n\n<pre><code>gencheck t = code\n  where\n    tableId       = mkName $ t ++ \"Id\"\n    crosstableId  = mkName $ \"Project\" ++ t ++ \"XId\"\n    crosstablePId = mkName $ \"Project\" ++ t ++ \"PId\"\n    tableName     = mkName $ t ++ \"Name\"\n    var           = mkName $ fmap toLower t\n    code = [|\n      case $(varE var) f of\n           Just _filter -&gt;\n             where_ $ p ^. ProjectId `in_`\n               subList_select ( distinct $ from $\n                 \\(o `InnerJoin` po) -&gt; do\n                   on     $ o  ^. $(conE tableId)   ==. po ^. $(conE crosstableId)\n                   where_ $ o  ^. $(conE tableName) ==. val (Just _filter)\n                   return $ po ^. $(conE crosstablePId)\n                   )\n           Nothing -&gt; return ()\n           |]\n\nrunquery f = runDB\n    $ select $ distinct\n    $ from $ \\p -&gt; do\n         $(gencheck \"Os\")\n         $(gencheck \"Cat\")\n         $(gencheck \"License\")\n         $(gencheck \"Coding\")\n         $(gencheck \"Gui\")\n         limit 50\n         return p\n</code></pre>\n"}], "owner": {"reputation": 221, "user_id": 2849491, "user_type": "registered", "accept_rate": 38, "profile_image": "https://graph.facebook.com/948496018502300/picture?type=large", "display_name": "Nudin", "link": "https://stackoverflow.com/users/2849491/nudin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 196, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1505255918, "creation_date": 1504716292, "question_id": 46080485, "link": "https://stackoverflow.com/questions/46080485/dynamically-build-sql-queries-wit-esqueleto-and-template-haskell", "title": "Dynamically build SQL-Queries wit Esqueleto and Template Haskell?", "body": "<p>I'm writing a webapp wit Yesod &amp; Persistent. I have a SQL-Database with several tables, containing characteristics of my \"projects\". I have a main table and for the Option with multiple values extra tables linked with the id.</p>\n\n<p>The user should be able to choose for witch of those characteristics he want's to filter and specify the filter value. If the user filters for the os, the license and the coding the SQL-Query would look like this:</p>\n\n<pre><code>runquery :: (YesodPersist site, YesodPersistBackend site ~ SqlBackend) =&gt;\n             String -&gt; String -&gt; String\n            -&gt; HandlerT site IO [Entity Project]\nrunquery os license coding = runDB\n  $ select $ distinct\n  $ from $ \\(p `InnerJoin` pl `InnerJoin` l `InnerJoin` pc\n            `InnerJoin` c `InnerJoin` o `InnerJoin` po) -&gt; do\n     on $ p ^. ProjectId ==. pl ^. ProjectLicenseFkProjectId\n     on $ p ^. ProjectId ==. pc ^. ProjectCodingFkProjectId\n     on $ p ^. ProjectId ==. po ^. ProjectOsFkProjectId\n     on $ l ^. LicenseId ==. pl ^. ProjectLicenseFkLicenseId\n     on $ o ^. OsId      ==. po ^. ProjectOsFkOsId\n     on $ c ^. CodingId  ==. pc ^. ProjectCodingFkCodingId\n     where_ ( o ^. OsName ==. val (Just (pack os)))\n     where_ ( l ^. LicenseName ==. val (Just (pack license)))\n     where_ ( c ^. CodingName ==. val (Just (pack coding)))\n     limit 50\n     return p\n</code></pre>\n\n<p>but I don't want to join always all tables, since that would be very bad for performance when there are a lot of tables but the user filters only on a few. But I also don't want to write a Query for every combination of query-able features, since that would mean writing N\u00b2 mostly identical queries.</p>\n\n<p>The 'on' and 'where'-clauses could be done dynamically depending on whether we want to filter or not. But the joins are within the parameters of the Lambda-function. I found no way to build this dependent on outer variables.</p>\n\n<p>So I thought Template Haskell might do the trick\u2026 I started learning TH and converting the core of the query to TH. But now I'm stuck and not sure whether TH can help me and whether it is the right way?</p>\n\n<p>So here is my progress with Template Haskell:</p>\n\n<pre><code>foo os license coding = lamE [pat] (code)\n    where\n        p = mkName \"p\"\n        po = mkName \"po\"\n        pl = mkName \"pc\"\n        pc = mkName \"pl\"\n        pat = pat' [os, license, coding] [varP po, varP pl, varP pc]\n        pat' []         []        = varP p\n        pat' ((Just _):ws) (q:qs) = infixP q (mkName \"InnerJoin\") (pat' ws qs)\n        pat' (Nothing:ws)  (q:qs) = pat' ws qs\n        code = do\n            case os of\n              Just _ -&gt; [|\n                  on $ $(varE p) ^. ProjectId ==. $(varE po) ^. ProjectOsFkProjectId\n                  |]\n              Nothing -&gt; [| return () |]\n            case license of\n              Just _ -&gt; [|\n                  on $ $(varE p) ^. ProjectId ==. $(varE pl) ^. ProjectLicenseFkProjectId\n                  |]\n              Nothing -&gt; [| return () |]\n            case coding of\n              Just _ -&gt; [|\n                  on $ $(varE p) ^. ProjectId ==. $(varE pc) ^. ProjectCodingFkProjectId\n                  |]\n              Nothing -&gt; [| return () |]\n            [| do\n            limit 50\n            return $(varE p) |]\n</code></pre>\n\n<p>So I'd like you're help:</p>\n\n<ul>\n<li>Can/Should I do this with Template Haskell?</li>\n<li>If so: how can I call the function foo with arguments?</li>\n<li>If not: what is the right solution?</li>\n</ul>\n"}, {"tags": ["algorithm", "haskell", "monads", "io-monad"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1504714626, "post_id": 46079371, "comment_id": 79121432, "body": "What prevents you from using <code>algo</code> on <code>IO [a]</code>, e.g. <code>algo n &lt;$&gt; generateDgf</code>?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1504716488, "post_id": 46079371, "comment_id": 79122574, "body": "Writing the signature as <code>algo :: _</code> will get GHC to tell you the type it infers for your function."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1504718243, "post_id": 46079371, "comment_id": 79123539, "body": "<code>StdGen</code> is, in fact, pure, as are most of the functions in <a href=\"https://hackage.haskell.org/package/random-1.1/docs/System-Random.html\" rel=\"nofollow noreferrer\">System.Random</a>. It&#39;s true that <code>getStdGen</code> is impure, but most of the random functions just use the <code>RandomGen</code> typeclass, which is pure. Since you can call pure functions from impure code, you just need to kick off your algorithm from impure code, like @Zeta implies. Since the entry point (<code>main</code>) is always impure, you can call <code>getStdGen</code> from there, and then pass the <code>StdGen</code> value to your pure function(s)."}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 6, "last_activity_date": 1504718959, "creation_date": 1504718959, "answer_id": 46081162, "question_id": 46079371, "link": "https://stackoverflow.com/questions/46079371/haskell-how-to-avoid-messing-pure-with-io/46081162#46081162", "title": "Haskell - how to avoid messing pure with IO", "body": "<p>One option is to take a <em>stream</em> rather than a list. If generating the values involves performing <code>IO</code>, and there may be many many values, this is often the best approach. There are several packages that offer streams of some sort, but I'll use the <code>streaming</code> package in this example.</p>\n\n<pre><code>import qualified Streaming.Prelude as S\nimport Streaming\n\nalgo :: Monad m =&gt; a -&gt; Stream (Of a) m r -&gt; Stream (Of a) m r\nalgo a = S.map (a +)\n</code></pre>\n\n<p>You can read <code>Stream (Of a) m r</code> as \"a way to use operations in <code>m</code> to produce successive values of type <code>a</code> and finally a result of type <code>r</code>\". This <code>algo</code> function doesn't commit to any particular way of generating the data; they can be created purely:</p>\n\n<pre><code>algo a (S.each [these, are, my, elements])\n</code></pre>\n\n<p>or within <code>IO</code>,</p>\n\n<pre><code>algo a $ S.takeWhile (&gt; 3) (S.readLn :: Stream (Of Int) IO ())\n</code></pre>\n\n<p>or using a randomness monad, or whatever you like.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1504751285, "post_id": 46086505, "comment_id": 79135897, "body": "Here&#39;s what I don&#39;t like about the infinite list of random numbers: it forces me to commit to a pure RNG. If I later (hypothetically) decide to do some sort of Fancy Science with a <a href=\"https://en.wikipedia.org/wiki/Hardware_random_number_generator\" rel=\"nofollow noreferrer\">hardware random number generator</a>, I have to rewrite my code, or play games with lazy <code>IO</code>. Using a stream, I can put that decision off as long as I want. I can develop and test my code using a pure generator and then just swap it out for a real one once the grant is approved or whatever."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1504751473, "post_id": 46086505, "comment_id": 79135943, "body": "One other thing: with a <i>list</i> of random numbers, it&#39;s exceedingly easy to accidentally use the same one twice. That&#39;s possible with a stream too, but I think it&#39;s a bit harder; the stream APIs don&#39;t generally encourage that sort of thing."}], "tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": true, "score": 2, "last_activity_date": 1504747580, "creation_date": 1504747580, "answer_id": 46086505, "question_id": 46079371, "link": "https://stackoverflow.com/questions/46079371/haskell-how-to-avoid-messing-pure-with-io/46086505#46086505", "title": "Haskell - how to avoid messing pure with IO", "body": "<p>For contrast, I'm going to take the opposite approach as <a href=\"https://stackoverflow.com/a/46081162/9859\">dfeuer's answer</a>.</p>\n\n<p>Just use lists.</p>\n\n<p>Consider your first example:</p>\n\n<pre><code>algo :: a -&gt; ??? -&gt; [a]\nalgo n dgf = map (\\x -&gt; x * n) $ dgf\n</code></pre>\n\n<p>You ask \"How to write function header correctly, as dgf can be any function with any number of parameters?\"</p>\n\n<p>Well, one way is to use uncurrying.</p>\n\n<p>Normally, Haskell functions are curried. If we have a function like</p>\n\n<pre><code>add :: Int -&gt; Int -&gt; Int\nadd x y = x + y\n</code></pre>\n\n<p>And we want a function that adds two to its input we can just use <code>add 2</code>.</p>\n\n<pre><code>&gt;&gt;&gt; map (add 2) [1..10]\n[3,4,5,6,7,8,9,10,11,12]\n</code></pre>\n\n<p>Because <code>add</code> is not actually a function that takes two arguments,\nit's a function of one argument that returns a function of one argument.</p>\n\n<p>We could have added parentheses to the argument of add above to make this more clear:</p>\n\n<pre><code>add :: Int -&gt; (Int -&gt; Int)\n</code></pre>\n\n<p>In Haskell, all functions are functions of one argument.</p>\n\n<p>However, we can also go the other way - <code>uncurry</code> a function\nthat returns a function to get a function that takes a pair:</p>\n\n<pre><code>&gt;&gt;&gt; :t uncurry\nuncurry :: (a -&gt; b -&gt; c) -&gt; (a, b) -&gt; c\n&gt;&gt;&gt; :t uncurry add\nuncurry add :: (Int, Int) -&gt; Int\n</code></pre>\n\n<p>This can also be useful, say if we want to find the sum of each pair in a list:</p>\n\n<pre><code>&gt;&gt;&gt; map (uncurry add) [ (1,2), (3,4), (5,6), (7,8), (9,10) ]\n[3,7,11,15,19]\n</code></pre>\n\n<p>In general, we can uncurry any function of type <code>a0-&gt; a1 -&gt; ... -&gt; aN -&gt; b</code>\ninto a function <code>(a0, a1, ..., aN) -&gt; b</code>, though there might not be\na cute library function to do it for us.</p>\n\n<p>With that in mind, we could implement <code>algo</code> by passing it an uncurried\nfunction and a tuple of values:</p>\n\n<pre><code>algo :: Num a =&gt; a -&gt; (t -&gt; [a]) -&gt; t -&gt; [a]\nalgo n f t = map (\\x -&gt; x * n) $ f t\n</code></pre>\n\n<p>And then use anonymous functions to uncurry our argument functions: </p>\n\n<pre><code>&gt;&gt;&gt; algo 2 (\\(lo,hi) -&gt; enumFromTo lo hi) (5, 10)\n[10,12,14,16,18,20]\n&gt;&gt;&gt; algo 3 (\\(a,b,c,d) -&gt; zipWith (+) [a..b] [c..d]) (1, 5, 10, 14)\n[33,39,45,51,57]\n</code></pre>\n\n<p>Now we <em>could</em> do it this way, but we don't need to.  As implemented above, \n<code>algo</code> is only using <code>f</code> and <code>t</code> once. So why not pass it the list directly?</p>\n\n<pre><code>algo' :: Num a =&gt; a -&gt; [a] -&gt; [a]\nalgo' n ns = map (\\x -&gt; x * n) ns\n</code></pre>\n\n<p>It calculates the same results:</p>\n\n<pre><code>&gt;&gt;&gt; algo' 2 $ (\\(lo,hi) -&gt; enumFromTo lo hi) (5, 10)\n[10,12,14,16,18,20]\n&gt;&gt;&gt; algo' 2 $ enumFromTo 5 10\n[10,12,14,16,18,20]\n&gt;&gt;&gt; algo' 3 $ (\\(a,b,c,d) -&gt; zipWith (+) [a..b] [c..d]) (1, 5, 10, 14)\n[33,39,45,51,57]\n&gt;&gt;&gt; algo' 3 $ zipWith (+) [1..5] [10..14]\n[33,39,45,51,57]\n</code></pre>\n\n<p>Furthermore, since haskell is non-strict, the argument to <code>algo'</code> isn't evaluated\nuntil it's actually used, so we don't have to worry about \"wasting\" time computing\narguments that won't actually be used:</p>\n\n<pre><code>algo'' :: Num a =&gt; a -&gt; [a] -&gt; [a]\nalgo'' n ns = [n,n,n,n]\n</code></pre>\n\n<p><code>algo''</code> doesn't use the list passed to it, so it's never forced, so whatever\ncomputation is used to calculate it never runs:</p>\n\n<pre><code>&gt;&gt;&gt; let isPrime n = n &gt; 2 &amp;&amp; null [ i | i &lt;- [2..n-1], n `rem` i == 0 ]\n&gt;&gt;&gt; :set +s\n&gt;&gt;&gt; isPrime 10000019\nTrue\n(6.18 secs, 2,000,067,648 bytes)\n&gt;&gt;&gt; algo'' 5 (filter isPrime [1..999999999999999])\n[5,5,5,5]\n(0.01 secs, 68,936 bytes)\n</code></pre>\n\n<p>Now to the second part of your question - what if your data is being generated within some monad?</p>\n\n<p>Rather than convince <code>algo</code> to operate on monadic values, you could take the stream\nbased approach as dfeuer explains. Or you could just use a list.</p>\n\n<p>Just because you're in a monad, doesn't mean that your values suddenly become strict.</p>\n\n<p>For example, want a infinite list of random numbers? No problem.</p>\n\n<pre><code>newRandoms :: Num a -&gt; IO [a]\nnewRandoms = unfoldr (\\g -&gt; Just (random g)) &lt;$&gt; newStdGen\n</code></pre>\n\n<p>Now I can just pass those to some algorithm:</p>\n\n<pre><code>&gt;&gt;&gt; rints &lt;- newRandoms :: IO [Int]\n(0.00 secs, 60,624 bytes)\n&gt;&gt;&gt; algo'' 5 rints\n[5,5,5,5]\n(0.00 secs, 68,920 bytes)\n</code></pre>\n\n<p>For a small program which is just reading input from a file or two, there's no problem\nwith just using <code>readFile</code> and lazy I/O to get a list to operate on.</p>\n\n<p>For example</p>\n\n<pre><code>&gt;&gt;&gt; let grep pat lines = [ line | line &lt;- lines, pat `isInfixOf` line ]\n&gt;&gt;&gt; :set +s\n&gt;&gt;&gt; dict &lt;- lines &lt;$&gt; readFile \"/usr/share/dict/words\"\n(0.01 secs, 81,504 bytes)\n&gt;&gt;&gt; grep \"poop\" dict\n[\"apoop\",\"epoophoron\",\"nincompoop\",\"nincompoopery\",\"nincompoophood\",\"nincompoopish\",\"poop\",\"pooped\",\"poophyte\",\"poophytic\",\"whisterpoop\"]\n(0.72 secs, 423,650,152 bytes)\n</code></pre>\n"}], "owner": {"reputation": 1271, "user_id": 5554930, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/75ec5e8612e63e54af86d7a9a7ee1e44?s=128&d=identicon&r=PG&f=1", "display_name": "Rahul", "link": "https://stackoverflow.com/users/5554930/rahul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 46086505, "answer_count": 2, "score": 1, "last_activity_date": 1504747580, "creation_date": 1504712490, "question_id": 46079371, "link": "https://stackoverflow.com/questions/46079371/haskell-how-to-avoid-messing-pure-with-io", "title": "Haskell - how to avoid messing pure with IO", "body": "<p>I am implementing some algorithm on haskell. This algorithm requires generating some data.</p>\n\n<p>I have a function of an algorithm which takes generation function as a parameter. For example, algorithm is just multiplying input data by n:</p>\n\n<pre><code> algo :: a -&gt; ??? -&gt; [a]\n algo n dgf = map (\\x -&gt; x * n) $ dgf\n</code></pre>\n\n<p><code>dgf</code> is used to generate data. How to write function header correctly, as <code>dgf</code> can be any function with any number of parameters?</p>\n\n<p>Another variant is accepting not the generation function but already generated data.</p>\n\n<pre><code>algo :: a -&gt; [b] -&gt; [a]\nalgo n d = (\\x -&gt; n*x) d\n</code></pre>\n\n<p>So, now let's imagine I'm generation data with <code>stdGen</code>, which uses IO. How can I make function more generic, so that it could accept both IO instance and plain values like just <code>[1,2,3]</code>. This also relates to variant with function, as it can also produce IO.</p>\n\n<p>All in all, which solution is better - having a generation function or a pre-generated data?</p>\n\n<p>Thanks in advance.</p>\n"}, {"tags": ["haskell", "type-inference", "gadt", "type-variables"], "comments": [{"owner": {"reputation": 420, "user_id": 6496011, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5da204ac4ee7e380ab27daa05996a2a?s=128&d=identicon&r=PG&f=1", "display_name": "Antisthenes", "link": "https://stackoverflow.com/users/6496011/antisthenes"}, "edited": false, "score": 0, "creation_date": 1504714610, "post_id": 46079176, "comment_id": 79121424, "body": "The easiest solution is to change signature of Eq from <code>Eq a =&gt; Expr a -&gt; Expr a -&gt; Expr Bool</code>, which allows <code>a</code> in this context to be whichever numeric type (which may or may not be instance of class show), to <code>(Eq a, Show a) =&gt; Expr a -&gt; Expr a -&gt; Expr Bool</code> which will allow to construct eq only expression only when comparing expressions of showable type."}, {"owner": {"user_type": "does_not_exist", "display_name": "user2656155"}, "reply_to_user": {"reputation": 420, "user_id": 6496011, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5da204ac4ee7e380ab27daa05996a2a?s=128&d=identicon&r=PG&f=1", "display_name": "Antisthenes", "link": "https://stackoverflow.com/users/6496011/antisthenes"}, "edited": false, "score": 0, "creation_date": 1504716462, "post_id": 46079176, "comment_id": 79122554, "body": "Thank you, this works; however a solution without this additional requirement in the type constructor would be interesting as well"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1504716992, "post_id": 46079176, "comment_id": 79122843, "body": "With the original type there is no good solution. There is just too little you can do with an existential type. Another way is to restrict <code>Val</code> to a fixed type (or to have multiple <code>Val</code>-like constructors representing a finite set of types)."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user2656155"}, "edited": false, "score": 0, "creation_date": 1504732017, "post_id": 46082199, "comment_id": 79130685, "body": "Thank you for your answer. As it seems, it indeed would be easiest, to just use concrete types. However your second solution is really interesting, too. I never heard of <code>-XConstraintKinds</code> before, so I will do some testing with that - experimenting with Haskell extensions truly feels like going down the rabbit hole sometimes!"}, {"owner": {"user_type": "does_not_exist", "display_name": "user2656155"}, "edited": false, "score": 0, "creation_date": 1504732398, "post_id": 46082199, "comment_id": 79130846, "body": "Right now I only have a (minor) - unrelated to the original - question: The (latest) GHC User&#39;s Guide states: &quot;[-XConstraintKinds] Allow types of kind Constraint to be used in contexts.&quot;, however I was under the impression, that contexts were something before &quot;=&gt;&quot;. But in your example, you used <code>Constraint</code> in the kind signature. Is that also considered a context or did they just use the term a bit more leniently?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1504732967, "post_id": 46082199, "comment_id": 79131092, "body": "I&#39;ve used \u201c<code>Constraint</code>\u201d in the kind signature, but <i>the thing of kind <code>Constraint</code></i> is <code>c</code> and that&#39;s indeed used in the <i>context</i> of the <code>Val</code> constructor."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1504791178, "post_id": 46082199, "comment_id": 79157338, "body": "I guess using <code>data Expr (c :: * -&gt; Constraint) a where</code> leads to using a lot of <code>unsafeCoerce</code> to avoid traversing the whole expression just to lift an <code>Expr c</code> into an <code>Expr d</code> whenever <code>d a</code> entails <code>c a</code> for all a. :/"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1504793166, "post_id": 46082199, "comment_id": 79158906, "body": "@gallais yes, this is totally awkward when you want to change leaf-constraints of a given tree somehow. My suggestion assumes that this will never be necessary..."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1504793824, "post_id": 46082199, "comment_id": 79159450, "body": "On second thought: <code>unsafeCoerce</code> may not even work because of the mismatch between the representations of the set of dictionaries."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 4, "last_activity_date": 1504723096, "creation_date": 1504723096, "answer_id": 46082199, "question_id": 46079176, "link": "https://stackoverflow.com/questions/46079176/haskell-gadt-show-instance-type-variable-deduction/46082199#46082199", "title": "Haskell GADT &#39;Show&#39;- instance type-variable deduction", "body": "<p>One option is <em>not</em> requiring a <code>Show a</code> superconstraint.</p>\n\n<pre><code>instance Show (Expr a) where\n  showsPrec p (Eq x y) = showParen (p&gt;9)\n       $ (\"Eq \"++) . showsPrec 10 x . (' ':) . showsPrec 10 y\n</code></pre>\n\n<p>Of course this somewhat kicks the stone down the road, because now you can <em>not</em> write</p>\n\n<pre><code>  showsPrec p (Val x) = showParen (p&gt;9) $ (\"Val \"++) . showsPrec 10 x\n</code></pre>\n\n<p>anymore \u2013 now the leaf-value is not <code>Show</code> constrained. But here you can hack your way around this by making the <code>Num</code> constraint a bit stronger:</p>\n\n<pre><code>data Expr a where\n    Val :: RealFrac a =&gt; a -&gt; Expr a\n    Eq :: Eq a =&gt; Expr a -&gt; Expr a -&gt; Expr Bool\ninstance Show (Expr a) where\n  showsPrec p (Val x) = showParen (p&gt;9) $ (\"Val \"++)\n          . showsPrec 10 (realToFrac x :: Double)\n</code></pre>\n\n<p>Well, that is a big hack, and at that point you might as well use simply</p>\n\n<pre><code>data Expr a where\n    Val :: Double -&gt; Expr Double\n    Eq :: Eq a =&gt; Expr a -&gt; Expr a -&gt; Expr Bool\n</code></pre>\n\n<p>(or whatever other single type best fits your number requirements). That's not a good solution.</p>\n\n<p>To retain the ability to store numbers of <em>any</em> type in <code>Expr</code> leaves, yet be able to constrain them to <code>Show</code> if desired, you need to be <em>polymorphic on the constraint</em>.</p>\n\n<pre><code>{-# LANGUAGE ConstraintKinds, KindSignatures #-}\n\nimport GHC.Exts (Constraint)\n\ndata Expr (c :: * -&gt; Constraint) a where\n    Val :: (Num a, c a) =&gt; a -&gt; Expr a\n    Eq :: Eq a =&gt; Expr a -&gt; Expr a -&gt; Expr Bool\n</code></pre>\n\n<p>Then you can do</p>\n\n<pre><code>instance Show (Expr Show a) where\n  showsPrec p (Val x) = showParen (p&gt;9) $ (\"Val \"++) . showsPrec 10 x\n  showsPrec p (Eq x y) = showParen (p&gt;9)\n       $ (\"Eq \"++) . showsPrec 10 x . (' ':) . showsPrec 10 y\n</code></pre>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user2656155"}, "edited": false, "score": 0, "creation_date": 1504734066, "post_id": 46083734, "comment_id": 79131565, "body": "Thanks for taking the time to answer, however just to clarify: The <i>actual</i> issue is, that we don&#39;t remember, that <code>t ~ T</code>, right? That&#39;s why we can only do something like <code>show (Eq x y) = show (x == y)</code>. Because in my example, if we remembered <code>t ~ a</code>, due to the <code>Show a</code> constraint, we then should be able to deduce <code>Show t</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1504734925, "post_id": 46083734, "comment_id": 79131906, "body": "@BenjaminRickels No, as I try to explain above, that is not sufficient in general. In your example, yes, that would suffice. However, since it is possible that someone chooses a <code>T</code> without a <code>Show</code> instance, GHC can not accept that code :-( You need to make <code>Eq x y</code> to require <code>Eq a</code> where <code>x,y::a</code>, otherwise you can craft expressions that can not be showed."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 1, "creation_date": 1504735366, "post_id": 46083734, "comment_id": 79132034, "body": "@BenjaminRickels No. The actual issue is your instance says <code>Show a =&gt; Show (Expr a)</code>. But <code>a</code> in <code>Expr a</code> is the type of the overall expression, which for <code>Eq</code> is always <code>Bool</code>. That has no connection to the type of the two arguments to <code>Eq</code>! Because presumably you want to be able to represent an equality test of two integer-expressions, which is a Boolean expression overall; the <code>a</code> in the arguments does not have to be the same type as the <code>a</code> in the overall expression. So by this design, you <b>cannot</b> constrain the arguments by putting constraints on the overall type."}, {"owner": {"user_type": "does_not_exist", "display_name": "user2656155"}, "reply_to_user": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1504776374, "post_id": 46083734, "comment_id": 79146900, "body": "@chi and @Ben, thanks for helping me out! I think I now understand; I was constantly wondering about what if GHC could theoretically retain information about which types were originally used, to construct a <code>Expr Bool</code> with the <code>Eq</code> constructor. I thought then it should surely be possible to correlate those with <code>Show a</code> upon deconstructing <code>Eq</code>. But it didn&#39;t really occur to me, that the <code>a</code> in this case actually refers to <code>Bool</code>. In hindsight the initial error message makes a lot more sense now as well!"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1504729277, "creation_date": 1504729277, "answer_id": 46083734, "question_id": 46079176, "link": "https://stackoverflow.com/questions/46079176/haskell-gadt-show-instance-type-variable-deduction/46083734#46083734", "title": "Haskell GADT &#39;Show&#39;- instance type-variable deduction", "body": "<p>I will only explain this point.</p>\n\n<blockquote>\n  <p>However I do not understand, why GHC chooses to do so.</p>\n</blockquote>\n\n<p>The issue is, one can write a custom type with a <code>Num</code> and <code>Eq</code> instance, but no <code>Show</code> one.</p>\n\n<pre><code>newtype T = T Int deriving (Num, Eq) -- no Show, on purpose!\n</code></pre>\n\n<p>Then, this type checks:</p>\n\n<pre><code>e1 :: Expr T\ne1 = Val (T 42)\n</code></pre>\n\n<p>as does this:</p>\n\n<pre><code>e2 :: Expr Bool\ne2 = Eq e1 e1\n</code></pre>\n\n<p>However, it should be clear that <code>e1</code> and <code>e2</code> can not be <code>show</code>ed. To print these, we would need <code>Show T</code>, which is missing.</p>\n\n<p>Further, the constraint</p>\n\n<pre><code>instance Show a =&gt; Show (Expr a) where\n      -- ^^^^^^\n</code></pre>\n\n<p>is useless here, since we do have <code>Show Bool</code>, but this is not enough to print <code>e2 :: Expr Bool</code>.</p>\n\n<p>This is the problem of existential types: you get what you pay for. When we construct <code>e2 = Eq e1 e2</code> we only have to \"pay\" the constraint <code>Eq T</code>. Hence, when we pattern match <code>Eq a b</code> we only get <code>Eq t</code> back (where <code>t</code> is a suitable type variable). We do not get to know whether <code>Show t</code> holds. Indeed, even if we did remember <code>t ~ T</code>, we would still lack the required <code>Show T</code> instance. </p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user2656155"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 307, "favorite_count": 0, "accepted_answer_id": 46082199, "answer_count": 2, "score": 3, "last_activity_date": 1504731059, "creation_date": 1504711880, "last_edit_date": 1504731059, "question_id": 46079176, "link": "https://stackoverflow.com/questions/46079176/haskell-gadt-show-instance-type-variable-deduction", "title": "Haskell GADT &#39;Show&#39;- instance type-variable deduction", "body": "<p>This code</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\ndata Expr a where\n    Val :: Num a =&gt; a -&gt; Expr a\n    Eq :: Eq a =&gt; Expr a -&gt; Expr a -&gt; Expr Bool\n\neval :: Expr a -&gt; a\neval (Val x) = x\neval (Eq x y) = (eval x) == (eval y)\n\ninstance Show a =&gt; Show (Expr a) where\n    show (Val x) = \"Val \" ++ (show x)\n    show (Eq x y) = \"Eq (\" ++ (show y) ++ \") (\" ++ (show x) ++ \")\"\n</code></pre>\n\n<p>fails to compile with the following error message:</p>\n\n<pre><code>Test.hs:13:32: error:\n    * Could not deduce (Show a1) arising from a use of `show'\n      from the context: Show a\n        bound by the instance declaration at test.hs:11:10-32\n      or from: (a ~ Bool, Eq a1)\n        bound by a pattern with constructor:\n                   Eq :: forall a. Eq a =&gt; Expr a -&gt; Expr a -&gt; Expr Bool,\n                 in an equation for `show'\n        at test.hs:13:11-16\n      Possible fix:\n        add (Show a1) to the context of the data constructor `Eq'\n    * In the first argument of `(++)', namely `(show y)'\n      In the second argument of `(++)', namely\n        `(show y) ++ \") (\" ++ (show x) ++ \")\"'\n      In the expression: \"Eq (\" ++ (show y) ++ \") (\" ++ (show x) ++ \")\" Failed, modules loaded: none.\n</code></pre>\n\n<p>Commenting out the last line fixes the issue and inspecting the type of <code>Expr</code> in GHCi reveals, that, instead of inferring <code>Eq</code> to be of type <code>Eq a =&gt; (Expr a) -&gt; (Expr a) -&gt; Expr Bool</code>, GHC actually infers it to be <code>Eq a1 =&gt; (Expr a1) -&gt; (Expr a1) -&gt; Expr Bool</code> for\n<code>data Expr a where ...</code>. This explains the error message, since <code>instance Show a =&gt; Show (Expr a) where ...</code> won't enforce <code>a1</code> to be an instance of <code>Show</code>.</p>\n\n<p>However I do <em>not</em> understand, <em>why</em> GHC chooses to do so. If I had to make a guess, I'd say it has something to do with <code>Eq</code> returning a value, that doesn't depend on <code>a</code> at all and thus GHC \"forgetting\" about <code>a</code>, once <code>Eq</code> returns a <code>Expr Bool</code>. Is this - at least sort of - what is happening here?</p>\n\n<p>Also, is there a clean solution to this? I tried several things, including trying to \"force\" the desired type via <code>InstanceSigs</code> and <code>ScopedTypeVariables</code> doing something like this:</p>\n\n<pre><code>instance Show a =&gt; Show (Expr a) where\n    show :: forall a. Eq a =&gt; Expr a -&gt; String\n    show (Eq x y) = \"Eq (\" ++ (show (x :: Expr a)) ++ \") (\" ++ (show (y :: Expr a)) ++ \")\"\n    ...\n</code></pre>\n\n<p>, but with no success. And since I'm still a Haskell novice, I'm not even sure, if this could somehow work anyways, due to my initial guess why GHC doesn't infer the \"correct\"/desired type in the first place.</p>\n\n<p>EDIT:</p>\n\n<p>Ok, so I decided to add a function</p>\n\n<pre><code>extract (Eq x _) = x\n</code></pre>\n\n<p>to the file (without a type signature), just to see, what return type it  would have. GHC again refused to compile, but this time, the error message contained some information about skolem type variables. A quick search yielded <a href=\"https://webcache.googleusercontent.com/search?q=cache:CcwpCsPRWIgJ:https://stackoverflow.com/questions/12719435/what-are-skolems+&amp;cd=1&amp;hl=en&amp;ct=clnk&amp;gl=de\" rel=\"nofollow noreferrer\">this question</a>, which (I think?) formalizes, what I believe the issue to be: Once <code>Eq :: Expr a -&gt; Expr a -&gt; Expr Bool</code> returns a <code>Expr Bool</code>, <code>a</code> goes \"out of scope\". Now we don't have any information left about <code>a</code>, so <code>extract</code> would have to have the signature <code>exists a. Expr Bool -&gt; a</code>, since <code>forall a. Expr Bool -&gt; a</code> won't be true for every <code>a</code>. But because GHC doesn't support <code>exists</code>, type-checking fails.</p>\n"}, {"tags": ["haskell", "ghcjs"], "answers": [{"comments": [{"owner": {"reputation": 56, "user_id": 1968694, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f708e13377c3fc2a163cb502dce8f94e?s=128&d=identicon&r=PG", "display_name": "dysinger", "link": "https://stackoverflow.com/users/1968694/dysinger"}, "edited": false, "score": 0, "creation_date": 1504732820, "post_id": 46084462, "comment_id": 79131028, "body": "detail: the way it works IIRC (it&#39;s been a year+) is that GHCJS receives the data, GHCJS calls JavaScript to decode something simple (like your big list). Way faster than Aeson for most things. Aeson is nice though when you don&#39;t have to worry about perf."}], "tags": [], "owner": {"reputation": 56, "user_id": 1968694, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f708e13377c3fc2a163cb502dce8f94e?s=128&d=identicon&r=PG", "display_name": "dysinger", "link": "https://stackoverflow.com/users/1968694/dysinger"}, "is_accepted": false, "score": 1, "last_activity_date": 1504732634, "creation_date": 1504732634, "answer_id": 46084462, "question_id": 46078878, "link": "https://stackoverflow.com/questions/46078878/performant-decoding-of-json-values-in-ghcjs-using-aeson/46084462#46084462", "title": "Performant decoding of json values in GHCJS using Aeson", "body": "<p>After using Aeson for a while, we switched to native JSON decoding in JavaScript where perf matters.</p>\n"}], "owner": {"reputation": 1242, "user_id": 3252252, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/4V81y.jpg?s=128&g=1", "display_name": "Jesuspc", "link": "https://stackoverflow.com/users/3252252/jesuspc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1504732634, "creation_date": 1504710895, "question_id": 46078878, "link": "https://stackoverflow.com/questions/46078878/performant-decoding-of-json-values-in-ghcjs-using-aeson", "title": "Performant decoding of json values in GHCJS using Aeson", "body": "<p>I found a weird behaviour while decoding a JSON list into a native [(UTCTime, Double)]. The operation takes around 2 seconds for lists with 3K elements. I've been digging into the browser's performance report but I couldn't find a clear culprit.</p>\n\n<p>I have also been testing how it behaves if I decode into other Datatypes and found that the time the operation takes is reduced by half if instead of UTCTime I use String.</p>\n\n<p>Are those numbers normal? Is there a way to improve the times? I am using GHCJS 0.2.1.9 GHC 8.0.1 with lts-7.19. </p>\n"}, {"tags": ["haskell", "functional-programming", "polyvariadic"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1504712605, "post_id": 46078682, "comment_id": 79120179, "body": "There are no zero-argument functions in Haskell. You can change the instance for <code>Integer</code> to <code>sumOf = const 0</code>, but you still need to provide some argument when you call it. If you instead change <code>sumOf :: r</code>, you can change the <code>Integer</code> instance to <code>sumOf = 0</code>, but that will mean a much bigger change to your <code>a -&gt; r</code> instance."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1504712662, "post_id": 46078682, "comment_id": 79120213, "body": "(It&#39;s not clear how <code>a -&gt; r</code> is supposed to work. <code>x</code> should be a value of type <code>a -&gt; r</code>, but you treat it as a value of type <code>Num a =&gt; a</code>."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1504740953, "post_id": 46078682, "comment_id": 79133546, "body": "Why do you want to do this? What&#39;s wrong with <code>sumOf :: [Integer] -&gt; Integer</code>?"}, {"owner": {"reputation": 2562, "user_id": 4281653, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a186247d73630d19d6090d380f72ed?s=128&d=identicon&r=PG", "display_name": "Art&#233;mis Young", "link": "https://stackoverflow.com/users/4281653/art%c3%a9mis-young"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1504766612, "post_id": 46078682, "comment_id": 79140609, "body": "@chepner yes that was my main problem : a function without arguments is not possible"}, {"owner": {"reputation": 2562, "user_id": 4281653, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a186247d73630d19d6090d380f72ed?s=128&d=identicon&r=PG", "display_name": "Art&#233;mis Young", "link": "https://stackoverflow.com/users/4281653/art%c3%a9mis-young"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1504766678, "post_id": 46078682, "comment_id": 79140649, "body": "@BenjaminHodgson , just for personnal projects and to push my Haskell&#39;s knowledge a bit further :)"}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 6, "last_activity_date": 1504733665, "last_edit_date": 1504733665, "creation_date": 1504715500, "answer_id": 46080276, "question_id": 46078682, "link": "https://stackoverflow.com/questions/46078682/haskell-polyvariadic-function-with-no-arguments/46080276#46080276", "title": "Haskell polyvariadic function with no arguments", "body": "<p>The simplest version only works for <code>Integer</code> results.</p>\n\n<h3>The easy way</h3>\n\n<p>This works off what you already wrote, taking advantage of the fact that <code>0</code> is the identity for addition.</p>\n\n<pre><code>class SumRes r where\n  sumOf' :: Integer -&gt; r\n\ninstance SumRes Integer where\n  sumOf' = toInteger\n\ninstance (Integral b, SumRes r) =&gt; SumRes (b -&gt; r) where\n  sumOf' a b = sumOf' $! a + toInteger b\n\nsumOf :: SumRes r =&gt; r\nsumOf = sumOf' 0\n</code></pre>\n\n<p>The two instances, <code>Integer</code> and <code>b -&gt; r</code>, inherently don't overlap.</p>\n\n<h3>The harder way</h3>\n\n<p>To get more general result types, you need a somewhat different approach, because the two instances described above mush together if <code>Integer</code> is replaced by a type variable. You can do this with <code>MultiParamTypeClasses</code> and <code>TypeFamilies</code>.</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables, AllowAmbiguousTypes, DataKinds,\n      KindSignatures, TypeApplications, MultiParamTypeClasses,\n      TypeFamilies, FlexibleInstances #-}\n\nmodule SumRes2 where\n\ndata Nat = Z | S Nat\nclass SumRes (c :: Nat) r where\n  sumOf' :: Integer -&gt; r\n\ntype family CountArgs a :: Nat where\n  CountArgs (_ -&gt; r) = 'S (CountArgs r)\n  CountArgs _ = 'Z\n\ninstance Num r =&gt; SumRes 'Z r where\n  sumOf' = fromInteger\n\ninstance (Integral b, SumRes n r) =&gt; SumRes ('S n) (b -&gt; r) where\n  sumOf' a b = sumOf' @n (a + toInteger b)\n\nsumOf :: forall r n. (SumRes n r, CountArgs r ~ n) =&gt; r\nsumOf = sumOf' @n 0\n</code></pre>\n\n<p>The only limitation is that if you have an <code>Integral</code> instance for a function type, you can't use <code>sumOf</code> to <em>produce</em> it. That shouldn't really be a problem though. I've used <code>TypeApplications</code> and <code>AllowAmbiguousTypes</code> for brevity, but you can certainly use proxy passing or <code>Tagged</code> instead. </p>\n"}], "owner": {"reputation": 2562, "user_id": 4281653, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a186247d73630d19d6090d380f72ed?s=128&d=identicon&r=PG", "display_name": "Art&#233;mis Young", "link": "https://stackoverflow.com/users/4281653/art%c3%a9mis-young"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 224, "favorite_count": 0, "accepted_answer_id": 46080276, "answer_count": 1, "score": 4, "last_activity_date": 1504733665, "creation_date": 1504710305, "question_id": 46078682, "link": "https://stackoverflow.com/questions/46078682/haskell-polyvariadic-function-with-no-arguments", "title": "Haskell polyvariadic function with no arguments", "body": "<p>I'm trying to create a polyvariadic function in Haskell, I used <a href=\"https://stackoverflow.com/questions/3467279/how-to-create-a-polyvariadic-haskell-function\">this</a> answer to create a basic function. \nHere is the function's code :</p>\n\n<pre><code>class SumRes r where \n    sumOf :: Integer -&gt; r\n\ninstance SumRes Integer where\n    sumOf = id\n\ninstance (Integral a, SumRes r) =&gt; SumRes (a -&gt; r) where\n    sumOf x = sumOf . (x +) . toInteger\n</code></pre>\n\n<p>But the problem is : when the function is called without any arguments, it does not work. </p>\n\n<pre><code>Couldn't match expected type 'Integer' with actual type 'Integer -&gt; r0'\n    Probable cause: 'sumOf' is applied to too few arguments\n</code></pre>\n\n<p>For example, I would like to be able to write <code>sumOf :: Integer</code> and have this function return <code>0</code>.</p>\n\n<p>How should I do this ?</p>\n"}, {"tags": ["parsing", "haskell", "parsec"], "comments": [{"owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "edited": false, "score": 0, "creation_date": 1504708088, "post_id": 46077708, "comment_id": 79116926, "body": "Shouldn&#39;t your desired output be: <code>[65,65,43,65,44,255,44]</code> (that last <code>43</code> in your example should be a <code>44</code> if I&#39;m reading this correctly)"}, {"owner": {"reputation": 107, "user_id": 2296133, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/bdf9c39adeda0dad75919f40df4dbb4e?s=128&d=identicon&r=PG", "display_name": "Triostrong", "link": "https://stackoverflow.com/users/2296133/triostrong"}, "reply_to_user": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "edited": false, "score": 0, "creation_date": 1504717691, "post_id": 46077708, "comment_id": 79123243, "body": "I&#39;m sorry, my mistake. Fixed."}], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 2296133, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/bdf9c39adeda0dad75919f40df4dbb4e?s=128&d=identicon&r=PG", "display_name": "Triostrong", "link": "https://stackoverflow.com/users/2296133/triostrong"}, "edited": false, "score": 0, "creation_date": 1504717967, "post_id": 46078909, "comment_id": 79123376, "body": "Thank you! So that parser with parameter was a real surprise for me. I guess, just new to parser combinators."}], "tags": [], "owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "is_accepted": true, "score": 3, "last_activity_date": 1504711006, "creation_date": 1504711006, "answer_id": 46078909, "question_id": 46077708, "link": "https://stackoverflow.com/questions/46077708/haskell-parsec-parsing-chunks-of-string-to-map-values/46078909#46078909", "title": "Haskell Parsec parsing chunks of string to map values", "body": "<p>You first need to write a parser that takes as input a <code>(Word8, Int)</code> tuple and returns a <code>Parser Word8</code> value.</p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>keyValParser :: (String, Word8) -&gt; Parser Word8\nkeyValParser (s,v) = try (string s) &gt;&gt; return v\n</code></pre>\n\n<p>The above parser uses <code>try</code> against the <code>string</code> parser because Parsec has the nasty habit of consuming matching characters even on fail. If the <code>try (string s)</code> portion is successful, it returns the <code>Word8</code> value from the tuple.</p>\n\n<p>Now you can map your input list against that <code>keyValParser</code> to build the parser you're looking for:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>parser :: [(String, Word8)] -&gt; Parser [Word8]\nparser = many . choice . map keyValParser\n</code></pre>\n\n<p>Running this parser using <code>parseTest</code> in GHCi yields:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>&gt; let lookup = [(\"{\",43),(\"}\",44),(\"{END}\",255),(\"A\",65)]\n&gt; parseTest (parser lookup) \"AA{A}{END}}\"\n[65,65,43,65,44,43]\n</code></pre>\n\n<p>But wait! That's not quite right. The problem now is that <code>choice</code> stops at the first matching parser, and the string <code>{END}</code> first matches <code>{</code> and thus returns <code>43</code>. You can fix this by ordering the <code>lookup</code> values by longest text first using <code>sortBy (flip $ comparing (length . fst))</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>parser :: [(String, Word8)] -&gt; Parser [Word8]\nparser = many . choice . map keyValParser . sortBy (flip $ comparing (length . fst))\n</code></pre>\n\n<p>Now you get the right results:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>&gt; let lookup = [(\"{\",43),(\"}\",44),(\"{END}\",255),(\"A\",65)]\n&gt; parseTest (parser lookup) \"AA{A}{END}}\"\n[65,65,43,65,44,255,44]\n</code></pre>\n"}], "owner": {"reputation": 107, "user_id": 2296133, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/bdf9c39adeda0dad75919f40df4dbb4e?s=128&d=identicon&r=PG", "display_name": "Triostrong", "link": "https://stackoverflow.com/users/2296133/triostrong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "accepted_answer_id": 46078909, "answer_count": 1, "score": 1, "last_activity_date": 1504717658, "creation_date": 1504707715, "last_edit_date": 1504717658, "question_id": 46077708, "link": "https://stackoverflow.com/questions/46077708/haskell-parsec-parsing-chunks-of-string-to-map-values", "title": "Haskell Parsec parsing chunks of string to map values", "body": "<p>I'm trying to parse a string, like </p>\n\n<pre><code>AA{A}{END}}\n</code></pre>\n\n<p>with given map: <code>fromList [(\"{\",43),(\"}\",44),(\"{END}\",255),(\"A\",65)]</code>, </p>\n\n<p>so that desired output is:       <code>[65,65,43,65,44,255,44]</code></p>\n\n<p>It looks like searching for longest prefix in map in straight Haskell, but how do I parse it with Parsec? It is similar to <a href=\"https://stackoverflow.com/questions/15026081/haskell-parsec-adapting-oneof-to-string\">this question</a>, but here I should return <code>Word8</code> value instead of string parsed by 'choice'.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1504710847, "post_id": 46077442, "comment_id": 79119072, "body": "You don&#39;t need to explicitly introduce any type variable at all: <code>fooType (Foo x) = typeRep [x]</code> will also work, using the fact that the <code>proxy</code> for <code>typeRep</code> can be any functor: not necessarily the trivial <code>Proxy</code>, it can also be something that actually contains an <code>a</code> value!"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1504711064, "post_id": 46077442, "comment_id": 79119206, "body": "@leftaroundabout if we&#39;re getting rid of the type variable, you can go even further and just say <code>fooType (Foo x) = typeOf x</code>.  I went ahead and assumed the real use case was something where having access to the type variable was the important part."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1504711236, "post_id": 46077442, "comment_id": 79119324, "body": "@Carl yeah, but it&#39;s perhaps not that commonly known that <i>any</i> function with <code>proxy x</code> argument can also be called with a concrete container containing an actual <code>x</code> value."}, {"owner": {"reputation": 83, "user_id": 7321533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/473319b13d1589b40ea9b01fe311e988?s=128&d=identicon&r=PG&f=1", "display_name": "Theelepel", "link": "https://stackoverflow.com/users/7321533/theelepel"}, "edited": false, "score": 0, "creation_date": 1504712982, "post_id": 46077442, "comment_id": 79120390, "body": "Indeed, I realize I can use <code>typeOf</code> or other solutions in this case (see last paragraph of the question in parentheses), but in my real code that is not available. I need to get a Template Haskell <code>Type</code> by putting the type variable in a type quote. I also can&#39;t bind <code>a</code> directly in the top function, because the type I am trying to get is actually a functional dependency of the hidden type. The helper function solution works fine, I just don&#39;t really understand why."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504728100, "post_id": 46077442, "comment_id": 79128791, "body": "<code>let</code> can not do that, since it uses lazy pattern matching, and that can not bring typeclass dictionaries in scope. This is the same issue of <a href=\"https://stackoverflow.com/a/23540431/3234959\">stackoverflow.com/a/23540431/3234959</a>"}], "answers": [{"comments": [{"owner": {"reputation": 83, "user_id": 7321533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/473319b13d1589b40ea9b01fe311e988?s=128&d=identicon&r=PG&f=1", "display_name": "Theelepel", "link": "https://stackoverflow.com/users/7321533/theelepel"}, "edited": false, "score": 0, "creation_date": 1504713624, "post_id": 46078728, "comment_id": 79120813, "body": "I can&#39;t use the provided solution in my code, but that explanation of case and let expressions does answer the question. It is a more elegant solution than using the helper function. Thanks!"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1504742784, "post_id": 46078728, "comment_id": 79133925, "body": "Is STV even needed? <code>fooType (Foo x) = typeOf x</code> or <code>fooType (Foo x) = typeRep [x]</code> if you really want to use <code>typeRep</code> for some reason."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": true, "score": 8, "last_activity_date": 1504710743, "last_edit_date": 1504710743, "creation_date": 1504710434, "answer_id": 46078728, "question_id": 46077442, "link": "https://stackoverflow.com/questions/46077442/why-do-haskells-scoped-type-variables-not-allow-binding-of-type-variables-in-pa/46078728#46078728", "title": "Why do Haskell&#39;s scoped type variables not allow binding of type variables in pattern bindings?", "body": "<p>The big thing is, functions are <code>case</code> expressions in disguise, not <code>let</code> expressions.  <code>case</code> matching and <code>let</code> matching have different semantics.  This is also why you can't match a GADT constructor that does type refinement in a <code>let</code> expression.</p>\n\n<p>The difference is that <code>case</code> matches evaluate the scrutinee before continuing, whereas <code>let</code> matches throw a thunk onto the heap that says \"do this evaluation when the result is demanded\". GHC doesn't know how to preserve locally-scoped types (like <code>a</code> in your example) across all the potential ways laziness may interact with them, so it just doesn't try. If locally-scoped types are involved, use a <code>case</code> expression such that laziness can't become a problem.</p>\n\n<p>As for your code, <code>ScopedTypeVariables</code> actually provides you a far more succinct option:</p>\n\n<pre><code>{-# Language ScopedTypeVariables, GADTs #-}\n\nimport Data.Typeable\nimport Data.Proxy\n\ndata Foo where\n    Foo :: Typeable a =&gt; a -&gt; Foo\n\nfooType :: Foo -&gt; TypeRep\nfooType (Foo (x :: a)) = typeRep (Proxy :: Proxy a)\n</code></pre>\n"}], "owner": {"reputation": 83, "user_id": 7321533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/473319b13d1589b40ea9b01fe311e988?s=128&d=identicon&r=PG&f=1", "display_name": "Theelepel", "link": "https://stackoverflow.com/users/7321533/theelepel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 786, "favorite_count": 0, "accepted_answer_id": 46078728, "answer_count": 1, "score": 4, "last_activity_date": 1504710743, "creation_date": 1504706947, "question_id": 46077442, "link": "https://stackoverflow.com/questions/46077442/why-do-haskells-scoped-type-variables-not-allow-binding-of-type-variables-in-pa", "title": "Why do Haskell&#39;s scoped type variables not allow binding of type variables in pattern bindings?", "body": "<p>I noticed that GHC's <code>ScopedTypeVariables</code> is able to bind type variables in function patterns but not let patterns.</p>\n\n<p>As a minimal example, consider the type</p>\n\n<pre><code>data Foo where Foo :: Typeable a  =&gt; a -&gt; Foo\n</code></pre>\n\n<p>If I want to gain access to the type inside a Foo, the following function does not compile:</p>\n\n<pre><code>fooType :: Foo -&gt; TypeRep\nfooType (Foo x) =\n    let (_ :: a) = x\n    in typeRep (Proxy::Proxy a)\n</code></pre>\n\n<p>But using this trick to move the type variable binding to a function call, it works without issue:</p>\n\n<pre><code>fooType (Foo x) =\n    let helper (_ :: a) = typeRep (Proxy::Proxy a)\n    in helper x\n</code></pre>\n\n<p>Since <code>let</code> bindings are actually function bindings in disguise, why aren't the above two code snippets equivalent? </p>\n\n<p>(In this example, other solutions would be to create the <code>TypeRep</code> with <code>typeOf x</code>, or bind the variable directly as <code>x :: a</code> in the top-level function. Neither of those options are available in my real code, and using them doesn't answer the question.)</p>\n"}, {"tags": ["haskell", "recursion", "matrix", "zipwith"], "comments": [{"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504705877, "post_id": 46076851, "comment_id": 79115256, "body": "Hint: do you know of the function <code>foldl1</code>?; another hint: try to add the case <code>lstsAdder [x] = [x]</code>. Also check what <code>zipwith (+) [1..10] []</code> does"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504706117, "post_id": 46076851, "comment_id": 79115440, "body": "Another fact to check is - what do you expect <code>lstsAdder [[1..n]|n &lt;- [1..10]]</code> to be - or the length of the result?"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504706703, "post_id": 46076851, "comment_id": 79115871, "body": "sorry I meant <code>lstsAdder [x] = x</code>"}], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 8279308, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/xBPta.jpg?s=128&g=1", "display_name": "majorTom", "link": "https://stackoverflow.com/users/8279308/majortom"}, "edited": false, "score": 0, "creation_date": 1504708345, "post_id": 46077130, "comment_id": 79117125, "body": "in my case i don&#39;t need to fill missing zeroes since the function in witch i want to use this does it for me so thanks even tho i didn&#39;t really understand how your second point works (can do without it)"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 3, "last_activity_date": 1504706116, "creation_date": 1504706116, "answer_id": 46077130, "question_id": 46076851, "link": "https://stackoverflow.com/questions/46076851/recursive-sum-columns-of-matrix-to-single-row-with-zipwith/46077130#46077130", "title": "Recursive sum columns of matrix to single row (with zipWith (+))", "body": "<p>Your base case is too basic... the function will recursively consume all rows. When it's all the way down the recursion stack, it's left with the empty list, i.e. the list with no rows. This returns an empty result.</p>\n\n<p>But then, going back the recursion stack, each layer is supposed to be zipped onto it with <code>+</code>. Well, but zipping any list with an empty list results in an empty list!</p>\n\n<p>There are three ways you can adress this issue:</p>\n\n<ul>\n<li><p>Add an extra base case for one-row matrices. If there's only one row, the result should be <em>just that row</em>, right?</p>\n\n<pre><code>lstsAdder [] = []\nlstsAdder [r] = r\nlstsAdder (x:xs) = zipWith (+) x $ lstsAdder xs\n</code></pre></li>\n<li><p>Fill missing elements with zeroes in the zipping step.</p>\n\n<pre><code>lstsAdder [] = []\nlstsAdder (x:xs) = x ^+^ lstsAdder xs\n\ninfixrl 6 ^+^\n(^+^) :: [a] -&gt; [a] -&gt; [a]\nxs^+^[] = xs\n[]^+^ys = ys\n(x:xs)^+^(y:ys) = (x+y) : (xs^+^ys)\n</code></pre></li>\n<li><p>Give an <em>infinite list of zeroes</em> for the base case:</p>\n\n<pre><code>lstsAdder [] = repeat 0\nlstsAdder (x:xs) = zipWith (+) x $ lstsAdder xs\n</code></pre></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 934, "user_id": 7459445, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GBpx1.png?s=128&g=1", "display_name": "Claude", "link": "https://stackoverflow.com/users/7459445/claude"}, "is_accepted": false, "score": 5, "last_activity_date": 1504706849, "creation_date": 1504706849, "answer_id": 46077409, "question_id": 46076851, "link": "https://stackoverflow.com/questions/46076851/recursive-sum-columns-of-matrix-to-single-row-with-zipwith/46077409#46077409", "title": "Recursive sum columns of matrix to single row (with zipWith (+))", "body": "<p>Your recursion base case returns <code>[]</code>, and <code>length (zipWith f a b) = min (length a) (length b)</code>.  This means your result will always have length 0.  The identity element for <code>min</code> is +infinity, and the identity element for <code>(+)</code> is <code>0</code>, so one possible base case is <code>repeat 0</code>.</p>\n\n<p>You could also see if pre-conditions on the data would allow you to do something like</p>\n\n<pre><code>import Data.List (transpose)\nlstsAdder = map sum . transpose\n</code></pre>\n\n<p>It has different edge-case behaviour (<code>QuickCheck</code> gives <code>[[0,0],[0]]</code> as one example input) but maybe those edge cases won't occur for you in practice.</p>\n"}, {"tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 1, "last_activity_date": 1504708020, "creation_date": 1504708020, "answer_id": 46077829, "question_id": 46076851, "link": "https://stackoverflow.com/questions/46076851/recursive-sum-columns-of-matrix-to-single-row-with-zipwith/46077829#46077829", "title": "Recursive sum columns of matrix to single row (with zipWith (+))", "body": "<p>I believe you may also do with a single <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/Data-List.html#v:foldr1\" rel=\"nofollow noreferrer\"><code>foldr1</code></a> operation as follows;</p>\n\n<pre><code>listsAdd :: (Foldable t, Num c) =&gt; t [c] -&gt; [c]\nlistsAdd =  foldr1 (zipWith (+))\n\n*Main&gt; listsAdd [[1,2,3],[4,5,6]]\n[5,7,9]\n</code></pre>\n"}], "owner": {"reputation": 57, "user_id": 8279308, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/xBPta.jpg?s=128&g=1", "display_name": "majorTom", "link": "https://stackoverflow.com/users/8279308/majortom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 482, "favorite_count": 0, "accepted_answer_id": 46077130, "answer_count": 3, "score": 0, "last_activity_date": 1505245222, "creation_date": 1504705301, "last_edit_date": 1505245222, "question_id": 46076851, "link": "https://stackoverflow.com/questions/46076851/recursive-sum-columns-of-matrix-to-single-row-with-zipwith", "title": "Recursive sum columns of matrix to single row (with zipWith (+))", "body": "<pre><code>lstsAdder :: [[Integer]] -&gt; [Integer]\nlstsAdder [] = []\nlstsAdder (x:xs) = zipWith (+) x (lstsAdder xs)\n</code></pre>\n\n<p>As the title says, I want it to recursively add this: <code>[[a,b,c],[d,e,f]]</code> like this: <code>[a+d,b+e,c+f]</code>, and this with lists of lists of any finite length. But all my implementation returns is <code>[]</code>. Why is that, and how do I fix it?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1504699008, "post_id": 46074184, "comment_id": 79109906, "body": "What difference do you think there would be between returning a pair and returning two numbers?"}, {"owner": {"reputation": 425, "user_id": 8568658, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/aa526c0635301ba6229e26ff6516a08d?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew S.", "link": "https://stackoverflow.com/users/8568658/andrew-s"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1504699237, "post_id": 46074184, "comment_id": 79110051, "body": "No, seems like no difference at all. Though maybe in this particualr case there is a way to build it in somehow.  I just didn&#39;t like using (fst (make_coprime a b)) to extract data."}], "answers": [{"comments": [{"owner": {"reputation": 425, "user_id": 8568658, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/aa526c0635301ba6229e26ff6516a08d?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew S.", "link": "https://stackoverflow.com/users/8568658/andrew-s"}, "edited": false, "score": 0, "creation_date": 1504699963, "post_id": 46074707, "comment_id": 79110573, "body": "I&#39;m going then to apply this to a whole list of arguments instead of just one. Which will make it longer. Is there a way to make this to list thing at once?   (by the way my function does not work still. It compiles but then it just <code>Non type-variable in the constraint Num (t -&gt; t1)</code>"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "reply_to_user": {"reputation": 425, "user_id": 8568658, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/aa526c0635301ba6229e26ff6516a08d?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew S.", "link": "https://stackoverflow.com/users/8568658/andrew-s"}, "edited": false, "score": 0, "creation_date": 1504706568, "post_id": 46074707, "comment_id": 79115782, "body": "@user8568658 add type signatures! that will make your error messages clearer!"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 4, "last_activity_date": 1504699534, "last_edit_date": 1504699534, "creation_date": 1504699283, "answer_id": 46074707, "question_id": 46074184, "link": "https://stackoverflow.com/questions/46074184/applying-functions-to-lists-with-substitution/46074707#46074707", "title": "Applying functions to lists with substitution", "body": "<p>You only need to call <code>coprime a x</code> once; you can assign its return value to a name using a <code>let</code> statement:</p>\n\n<pre><code>f a (x:xs) = let pair = make_coprime a x \n             in  ((fst pair), ((snd pair):(snd (f (fst pair) xs))))\n</code></pre>\n\n<p>(Your parse error is likely due to the missing parentheses around <code>x:xs</code>.)</p>\n\n<p>You can simplify it more by unpacking the pair immediately instead of calling <code>fst</code> and <code>snd</code> repeatedly.</p>\n\n<pre><code>f a (x:xs) = let (n1,n2) = make_coprime a x \n             in  (n1, (n2:(snd (f n1 xs))))\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 425, "user_id": 8568658, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/aa526c0635301ba6229e26ff6516a08d?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew S.", "link": "https://stackoverflow.com/users/8568658/andrew-s"}, "edited": false, "score": 0, "creation_date": 1504700688, "post_id": 46074924, "comment_id": 79111188, "body": "Wow, i just forgot to insert it lol. My type signatures were <code>make_coprime :: (Integral a) =&gt; a -&gt; a -&gt; (a, a)</code> and <code>f :: (Integral a) =&gt; a -&gt; [a] -&gt; (a, [a])</code> which is kinda same, right?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 425, "user_id": 8568658, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/aa526c0635301ba6229e26ff6516a08d?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew S.", "link": "https://stackoverflow.com/users/8568658/andrew-s"}, "edited": false, "score": 0, "creation_date": 1504700820, "post_id": 46074924, "comment_id": 79111292, "body": "Yeah, it&#39;s just more general (also works with <code>Int</code> instead of <code>Integer</code>)."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 4, "last_activity_date": 1504699973, "creation_date": 1504699973, "answer_id": 46074924, "question_id": 46074184, "link": "https://stackoverflow.com/questions/46074184/applying-functions-to-lists-with-substitution/46074924#46074924", "title": "Applying functions to lists with substitution", "body": "<p>The parsing error is that you've not used parens around <code>x:xs</code>.</p>\n\n<p>Before saying any more: Haskell functions should always come with a type signature, which makes it hugely easier to reason what we're talking about and where any. I'm not sure what you want, but likely</p>\n\n<pre><code>makeCoprime :: Integer -&gt; Integer -&gt; (Integer,Integer)\n</code></pre>\n\n<p>and</p>\n\n<pre><code>f :: Integer -&gt; [Integer] -&gt; (Integer, [Integer])\n</code></pre>\n\n<p>Apart from that (and to find other parse errors, which occur before the type system ever takes action), I'd first try to write it as readable as possible. First align everything meaningfully:</p>\n\n<pre><code>f a (x:xs) = ( (fst (make_coprime a x))\n             , ( (snd (make_coprime a x))\n                 : (snd (f (fst (make_coprime a x)) xs))\n               )\n             )\n</code></pre>\n\n<p>ok, now there are a couple of parens that are <em>not</em> necessary and should be omitted: the <code>,</code> always seperates everything, so you never need to write e.g. <code>(1, (2))</code>: just make it <code>(1,2)</code>. And function application binds more <em>tightly</em> than any infix operator, so you also never need to write <code>(f x) : y</code>, just do <code>f x : y</code>. That makes your code</p>\n\n<pre><code>f a (x:xs) = ( fst (make_coprime a x)\n             , snd (make_coprime a x)\n                 : snd (f (fst (make_coprime a x)) xs)\n             )\n</code></pre>\n\n<p>which is already a good deal easier to understand. You could get rid of more parens by using the <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Data-Function.html#v:-36-\" rel=\"nofollow noreferrer\"><code>$</code></a> and <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#v:-46-\" rel=\"nofollow noreferrer\"><code>.</code></a> operators, but I'll leave that.</p>\n\n<p>What I would definitely not leave, as chepner suggests, are these multiple invokations of <code>make_coprime a x</code>. This kind of duplication is not only code-noise, it can also make your program run very slow.</p>\n\n<pre><code>f a (x:xs) = ( fst axCoprimes\n             , snd axCoprimes\n                 : snd (f (fst axCoprimes) xs)\n             )\n where axCoprimes = make_coprime a x\n</code></pre>\n\n<p>Now, all you ever do with <code>axCoprimes</code> is eval the <code>fst</code> and <code>snd</code> components separately. Thus instead of giving the tuple <em>one</em> name, you should immediately match the components:</p>\n\n<pre><code>f a (x:xs) = (p\u2080, p\u2081 : snd (f p\u2080 xs))\n where (p\u2080,p\u2081) = make_coprime a x\n</code></pre>\n\n<p>and there you go, that looks very clear IMO.</p>\n"}], "owner": {"reputation": 425, "user_id": 8568658, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/aa526c0635301ba6229e26ff6516a08d?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew S.", "link": "https://stackoverflow.com/users/8568658/andrew-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 46074924, "answer_count": 2, "score": 1, "last_activity_date": 1504699973, "creation_date": 1504697782, "last_edit_date": 1504698797, "question_id": 46074184, "link": "https://stackoverflow.com/questions/46074184/applying-functions-to-lists-with-substitution", "title": "Applying functions to lists with substitution", "body": "<p>I was trying to make a function that quickly calculates fractions. In my particular case there a factorials, so it s kinda easy. I wrote a <code>make_coprime</code> function which makes two numbers coprime (and returns a pair, which bothers me a little: it sounds a bit too complicated, is there no way to make it return 2 numbers? Looks like there isn't, but just to be sure)</p>\n\n<p>Now it is something like frac{numbers]/{numbers} and I want to make all of the upper ones coprime with all the lower ones.</p>\n\n<p>So I have two lists and I want to apply my function to all possible pairs with substitution after that. This is where I failed. I couldn't even do it with one element and a list, my best was </p>\n\n<pre><code>f a [] = (a, [1])\nf a x:xs = ((fst (make_coprime a x)), ((snd (make_coprime a x)):(snd (f (fst (make_coprime a x)) xs))))\n</code></pre>\n\n<p>(there is a parse error somewhere here, but I can't find it at all)</p>\n\n<p>But I feel like I overcomplicate things. It sounds way simplier than it looks when I write it. Is there an elegant way to do this?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1504690087, "post_id": 46071074, "comment_id": 79103673, "body": "Ignoring constraints, you have a function of type <code>n-&gt;(n-&gt;n)</code> and you want to use it as the first argument of <code>(.)</code> which has type <code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; (a -&gt; c)</code>. So you unify <code>(b -&gt; c)</code> with <code>n-&gt;(n-&gt;n)</code>. Now <code>b</code> becomes <code>n</code> and <code>c</code> becomes <code>n-&gt;n</code>, hence the type of <code>(.)</code> is <code>(n -&gt; (n-&gt;n)) -&gt; (a -&gt; n) -&gt; (a -&gt; (n-&gt;n))</code> and the type of the application is <code>(a -&gt; n) -&gt; (a -&gt; (n-&gt;n))</code>. Always give different type variables different names and you will have no problem performing substitutions."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1504690536, "post_id": 46071074, "comment_id": 79104022, "body": "If you further apply this to a function of type <code>m-&gt;(m-&gt;m)</code>, you have <code>a~m</code> and <code>n~(m-&gt;m)</code> so the function type becomes <code>(m-&gt; (m-&gt;m)) -&gt; (m -&gt; ((m-&gt;m)-&gt;(m-&gt;m)))</code> and the result type is <code>(m -&gt; ((m-&gt;m)-&gt;(m-&gt;m)))</code> which is (again, ignoring constraints) the right answer."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1504692259, "post_id": 46071074, "comment_id": 79105242, "body": "Mind that <code>a</code> is a type <i>variable</i>. The <code>a</code> in <code>id :: a -&gt; a</code>, is not the same one as the one in for instance <code>(+) :: Num a =&gt; a -&gt; a -&gt; a</code>."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1504693067, "post_id": 46071074, "comment_id": 79105803, "body": "I forgot about application, that after the first application, the type parameter differs. Awesome, thanks so much."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1504693527, "post_id": 46071074, "comment_id": 79106112, "body": "One more example <code>*Lib&gt; :t (+) id</code>, I did not get, why the signature is <code>(+) id :: Num (a -&gt; a) =&gt; (a -&gt; a) -&gt; a -&gt; a</code>."}, {"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 0, "creation_date": 1504747556, "post_id": 46071074, "comment_id": 79134956, "body": "In <code>id (*)</code> the type of <code>id</code> does <i>not</i> become <code>a -&gt; a -&gt; a</code>. The type of <code>id</code> becomes <code>(a -&gt; a -&gt; a) -&gt; (a -&gt; a -&gt; a)</code> and the type of <code>id (+)</code> is <code>a -&gt; a -&gt; a</code>. (if I omit the <code>Num a =&gt;</code> constraints from these types). The <code>a</code> in <code>id</code>&#39;s type can be different from the <code>a</code> in <code>(*)</code>&#39;s type!"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1504765217, "post_id": 46071074, "comment_id": 79139857, "body": "What when I have a function with signature <code>a -&gt; b</code> and pass as the first argument the <code>(+)</code> function, then <code>a</code> becomes <code>m</code> or <code>m -&gt; (m -&gt; m)</code> and why?"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1504688820, "creation_date": 1504688820, "question_id": 46071074, "link": "https://stackoverflow.com/questions/46071074/confusing-about-substitute-types", "title": "Confusing about substitute types", "body": "<p>I am trying with effort to understand how types substitution works. </p>\n\n<p>Consider following example:</p>\n\n<pre><code>*Lib Lib&gt; :t id (*)\nid (*) :: Num a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>Let's look at the type signature of <code>id</code> and <code>(*)</code>:</p>\n\n<pre><code>*Lib Lib&gt; :t (*)\n(*) :: Num a =&gt; a -&gt; a -&gt; a\n\n*Lib Lib&gt; :t id\nid :: a -&gt; a\n</code></pre>\n\n<p>How would I substitute types of <code>id (*)</code> without Prelude:</p>\n\n<pre><code>id  :: a -&gt; a\n\n(*) :: a -&gt; ( a -&gt; a ) \"I did parentheses because of currying.\n</code></pre>\n\n<p>the first <code>a</code> of the <code>id</code>, will be substitute through <code>a -&gt; ( a -&gt; a )</code></p>\n\n<pre><code> id  :: |a          | -&gt; a\n (*) :: |a -&gt; a -&gt; a| \n</code></pre>\n\n<p>because <code>a</code> is also the result type of <code>id</code>(is identify with <code>-&gt; a</code>) then the type of <code>id</code> becomes to <code>a -&gt; a -&gt; a</code>.</p>\n\n<p>Now consider more complicated example, how would I do the substitution with:</p>\n\n<pre><code>*Lib Lib&gt; :t (+) . (*)\n</code></pre>\n\n<p>Type signature of <code>.</code> function:</p>\n\n<pre><code>*Lib Lib&gt; :t (.)\n(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>Now let's substitute the first argument with <code>(+)</code>: </p>\n\n<pre><code>(.) :: (+)\n(.) :: (b -&gt;|c)      -&gt; (a -&gt; b) -&gt; a -&gt; c\n(.) :: (a -&gt;|a -&gt; a) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>Let's substitute the second argument with <code>(*)</code>:</p>\n\n<pre><code>(.) :: (+)           -&gt; (*)    \n(.) :: (b -&gt;|c)      -&gt; (a -&gt;|b)      -&gt; a -&gt; c\n(.) :: (a -&gt;|a -&gt; a) -&gt; (a -&gt;|a -&gt; a) -&gt; a -&gt; c\n</code></pre>\n\n<p>Then substitute step by step until we get the final type:</p>\n\n<pre><code>(.) :: (b -&gt;|c)      -&gt; (a -&gt;|b)      -&gt; a -&gt; c\n(.) :: (a -&gt;|a -&gt; a) -&gt; (a -&gt;|a -&gt; a) -&gt; a -&gt; c \n\n\"the b on the first argument becomes to (a -&gt; a), because\n\"of the substitution of the final type of second argument \n(.) :: (b        -&gt;|c     ) -&gt; (a -&gt;|b)      -&gt; a -&gt; c\n(.) :: ((a -&gt; a) -&gt;|a -&gt; a) -&gt; (a -&gt;|a -&gt; a) -&gt; a -&gt; c \n\n\"the c, the final type becomes (a -&gt; a), because the result\n\"type of the first argument\n(.) :: (b        -&gt;|c     ) -&gt; (a -&gt;|b)      -&gt; a -&gt; c\n(.) :: ((a -&gt; a) -&gt;|a -&gt; a) -&gt; (a -&gt;|a -&gt; a) -&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>Wait, the final type that I've got above is wrong </p>\n\n<pre><code>(+) . (*) :: a -&gt; a -&gt; a\n</code></pre>\n\n<p>The right type would be:</p>\n\n<pre><code>*Lib&gt; :t (+) . (*)\n(+) . (*) :: (Num (a -&gt; a), Num a) =&gt; a -&gt; (a -&gt; a) -&gt; a -&gt; a\n</code></pre>\n\n<p>My question is, why do I get <code>(a -&gt; a)</code>, there is no type parameter <code>b</code> at the end of the composition?</p>\n\n<p>To clarify, what I mean, let's compare the final type parameter with the signature of the function composition:</p>\n\n<pre><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt;          -&gt; c\n                               a -&gt; (a -&gt; a) -&gt; a -&gt; a\n</code></pre>\n\n<p>As you can I see, there is a hole between <code>a</code> and <code>c</code>, because <code>(a -&gt; a)</code> is the type of <code>b</code>.\nWhy is the type parameter <code>b</code> suddenly between <code>a</code> and <code>c</code>?</p>\n\n<p>I hope the explanation is understandable.</p>\n"}, {"tags": ["haskell", "pattern-matching", "operator-precedence", "parse-error"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504680502, "post_id": 46067091, "comment_id": 79097455, "body": "Minor style note: <code>foo | x = False | otherwise = something</code> is (IMO) more commonly written as <code>foo = not x &amp;&amp; something</code>. In your case, you can use <code>connected (...) = a &lt;= c &amp;&amp; connected (...)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "is_accepted": false, "score": 6, "last_activity_date": 1504676564, "last_edit_date": 1504676564, "creation_date": 1504674581, "answer_id": 46067201, "question_id": 46067091, "link": "https://stackoverflow.com/questions/46067091/haskell-where-is-the-parse-error-in-pattern/46067201#46067201", "title": "Haskell: where is the &quot;parse error in pattern&quot;", "body": "<p>You need to add parentheses around your cons expressions in two places:</p>\n\n<pre><code>connected :: [(Integer,Integer)] -&gt; Bool\nconnected [] = True\nconnected [(_,_)] = True\nconnected ((a,b):(c,d):xs)                           -- (2)\n                 | a &gt; c     = False\n                 | otherwise = connected ((c,d):xs)  -- (1)\n</code></pre>\n\n<ol>\n<li><p>Function application binds more tightly than infix operators, so <code>connected (c,d) : xs</code> gets parsed as <code>(connected (c,d)) : xs</code>.</p></li>\n<li><p>A similar thing happens in the pattern expression. Although the unhelpful error message you get there is rather unfortunate.</p></li>\n</ol>\n\n<p>Opinionated side note: I recommend always writing infix operators with spaces around them (for example, <code>a : b</code> instead of <code>a:b</code>), because I think omitting the whitespace subtly implies that the operator binds more tightly than it really does.</p>\n"}], "owner": {"reputation": 31, "user_id": 8566927, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/73cea277c635680379c8610b4d0c680b?s=128&d=identicon&r=PG&f=1", "display_name": "Jack ", "link": "https://stackoverflow.com/users/8566927/jack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 375, "favorite_count": 0, "closed_date": 1504684766, "answer_count": 1, "score": 3, "last_activity_date": 1504676564, "creation_date": 1504674000, "last_edit_date": 1504675710, "question_id": 46067091, "link": "https://stackoverflow.com/questions/46067091/haskell-where-is-the-parse-error-in-pattern", "closed_reason": "Duplicate", "title": "Haskell: where is the &quot;parse error in pattern&quot;", "body": "<p>This is the code I have:</p>\n\n<pre><code>connected :: [(Integer,Integer)] -&gt; Bool\nconnected [] = True\nconnected [(_,_)] = True\nconnected (a,b):(c,d):xs\n                 | a &gt; c     = False\n                 |otherwise = connected (c,d):xs\n</code></pre>\n\n<p>When I load it GHCi it shows</p>\n\n<blockquote>\n  <p><code>error: parse error in pattern: connected</code></p>\n</blockquote>\n\n<p>Where did I make a mistake?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 8, "creation_date": 1504654973, "post_id": 46064670, "comment_id": 79090344, "body": "Have you tried <code>[1.2, 3]</code> without the <code>take</code>? If not, I recommend you do. It isn&#39;t <code>take</code>&#39;s fault at all."}, {"owner": {"reputation": 2565, "user_id": 1108505, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a7e091fdb18efecace362189bc5f0bf5?s=128&d=identicon&r=PG", "display_name": "Tanner Swett", "link": "https://stackoverflow.com/users/1108505/tanner-swett"}, "edited": false, "score": 0, "creation_date": 1504655265, "post_id": 46064670, "comment_id": 79090419, "body": "It looks like the syntax you&#39;re trying to use to define <code>function</code> is incorrect. The expression <code>x == round(x)</code> is perfectly fine, but the syntax would look like this: <code>function(x:xs) | x == round(x) = round(x):function xs; function(x:xs) = x:function xs</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 2565, "user_id": 1108505, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a7e091fdb18efecace362189bc5f0bf5?s=128&d=identicon&r=PG", "display_name": "Tanner Swett", "link": "https://stackoverflow.com/users/1108505/tanner-swett"}, "edited": false, "score": 0, "creation_date": 1504655661, "post_id": 46064670, "comment_id": 79090496, "body": "@TannerSwett The expression <code>x == round x</code> is fine, but there is no concrete type (in the standard libraries) that you could give to <code>x</code> that would make it type-correct."}], "answers": [{"tags": [], "owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "is_accepted": false, "score": 6, "last_activity_date": 1504655220, "creation_date": 1504655220, "answer_id": 46064789, "question_id": 46064670, "link": "https://stackoverflow.com/questions/46064670/why-does-take-change-datatype-in-haskell/46064789#46064789", "title": "Why does &quot;take&quot; change datatype in haskell?", "body": "<p><code>take</code> does not change the type of list elements. Start up GHCi and follow along. My prompt is <code>&gt;&gt;&gt;</code>.</p>\n\n<pre><code>&gt;&gt;&gt; :t [1.2,3,4]\n[1.2,3,4] :: Fractional t =&gt; [t]\n</code></pre>\n\n<p>This says the list elements have some <code>Fractional</code> type.</p>\n\n<pre><code>&gt;&gt;&gt; :t [1.2,3.0,4.0]\n[1.2,3.0,4.0] :: Fractional t =&gt; [t]\n</code></pre>\n\n<p>GHCi says the same thing here as well. What is going on?</p>\n\n<pre><code>&gt;&gt;&gt; :t 2\n2 :: Num t =&gt; t\n&gt;&gt;&gt; :t 2.0\n2.0 :: Fractional t =&gt; t\n</code></pre>\n\n<p>A number literal without a decimal is inferred to have some <code>Num</code> type. A number literal with a decimal is inferred to have some <code>Fractional</code> type. For two elements to be in the same list, they must have the same type. What is the common type for <code>2</code> and <code>2.0</code>?</p>\n\n<pre><code>&gt;&gt;&gt; :t 2 `asTypeOf` 2.0\n2 `asTypeOf` 2.0 :: Fractional a =&gt; a\n</code></pre>\n\n<p>All <code>Fractional</code> types are <code>Num</code> types, and so the common type for <code>2</code> and <code>2.0</code> is some <code>Fractional</code> type.</p>\n\n<pre><code>&gt;&gt;&gt; [1.2,3,4]\n[1.2,3.0,4.0]\n</code></pre>\n\n<p>We can see from the printing of the list that all the elements have been inferred as a <code>Fractional</code> type. This defaults to <code>Double</code>.</p>\n\n<p>To remove unnecessary decimals from a list you will have to be more specific about what type you want this list to have. A list of <code>Int</code> has no decimals and a list of <code>Double</code> always has decimals. A single list cannot have both <code>Int</code> and <code>Double</code> typed elements.</p>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 11, "last_activity_date": 1504719322, "last_edit_date": 1504719322, "creation_date": 1504655240, "answer_id": 46064793, "question_id": 46064670, "link": "https://stackoverflow.com/questions/46064670/why-does-take-change-datatype-in-haskell/46064793#46064793", "title": "Why does &quot;take&quot; change datatype in haskell?", "body": "<p>You say, \"I actually want <code>[1.2, 3]</code> [and not <code>[1.2, 3.0]</code>]\". I interpret this to mean that you want a list that contains <code>Float</code>s or the like for fractional numbers and <code>Int</code>s or the like for numbers without a fraction part.</p>\n\n<p>You can't have this.</p>\n\n<p>All lists in Haskell are homogeneous: every element has the same type.</p>\n\n<p>There are some things you can do; for example, you can have tagged unions, the canonical example being <code>Either</code>. So</p>\n\n<pre><code>[Left 1.2, Right 3] :: [Either Double Integer]\n</code></pre>\n\n<p>would be fine; but you need to explicitly tag each element.</p>\n\n<p>This is also more or less the answer to why <code>x == round x</code> doesn't work: the <code>(==)</code> operator takes two arguments of the same type; whereas typically <code>round</code> cannot return a value of the same type as its argument. You might like <code>properFraction</code> instead:</p>\n\n<pre><code>&gt; properFraction 3\n(3,0.0)\n&gt; properFraction 1.2\n(1,0.19999999999999996)\n</code></pre>\n\n<p>You can check the second part of this to determine whether your number is a whole number or not (and when it is, the first part will be the result of <code>round</code>).</p>\n"}], "owner": {"reputation": 21, "user_id": 6859316, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9c859b040691406fb912a0b82b4dd424?s=128&d=identicon&r=PG&f=1", "display_name": "Lord", "link": "https://stackoverflow.com/users/6859316/lord"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1504719322, "creation_date": 1504654269, "last_edit_date": 1504659461, "question_id": 46064670, "link": "https://stackoverflow.com/questions/46064670/why-does-take-change-datatype-in-haskell", "title": "Why does &quot;take&quot; change datatype in haskell?", "body": "<p>I'm writing a function which takes elements from a list and returns them.</p>\n\n<p>Pretty simple I thought. But when using \"take\" in for example: <code>take 2 [1.2,3,4]</code></p>\n\n<p>it returns: <code>[1.2,3.0]</code> when I actually want <code>[1.2, 3]</code></p>\n\n<p>I thought for creating a function that goes through the list and cuts unnecessary decimals but I can't get my head around it seeing haskell doesn't accept my comparison with x &amp; round(x) in </p>\n\n<pre><code>function :: [a] -&gt; [a]\nfunction(x:xs)\n if x == round(x) = round(x):function xs\n else x:function xs\n</code></pre>\n\n<p>So A: Are there any simpler solutions?\nB: Why can't haskell compare x with round(x)?</p>\n"}, {"tags": ["performance", "haskell", "stream-fusion"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504648075, "post_id": 46063499, "comment_id": 79088472, "body": "Give a monomorphic type signature to <code>minmax</code>, and possibly <code>sort</code> as well. I can&#39;t see if on <code>minmax&#39;</code> it matters (but it can&#39;t hurt, I guess). Passing <code>lohi</code> as two arguments could also avoid the boxing."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 3, "creation_date": 1504648606, "post_id": 46063499, "comment_id": 79088653, "body": "If memory usage is a concern, You should begin by <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/profiling.html#profiling-memory-usage\" rel=\"nofollow noreferrer\">heap profiling</a> your program. Note that total allocation isn&#39;t necessarily a useful metric - you may be more interested in maximum residency. Laziness allows you to examine only two elements at a time, so this algorithm should run in constant space - this can mean high allocation, but very low residency."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504683245, "post_id": 46063499, "comment_id": 79099211, "body": "@user2407038 Oh, thanks for explaining. Still I&#39;m interested in wether this can be written in a way where it would reuse memory and wouldn&#39;t allocate much."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504684938, "post_id": 46063499, "comment_id": 79100199, "body": "@chi How would I pass lohi as two arguments if they returned as a tuple by sort? Not sure how to do that with Haskell."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504686361, "post_id": 46063499, "comment_id": 79101042, "body": "@chi I did what you suggested, now my machine just hangs. Probably too much memory is used. Could you provide code which works better then this one?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504722483, "post_id": 46063499, "comment_id": 79125875, "body": "I tried my suggestions but I got no real improvement -- GHC&#39;s optimizer might already be performing them."}], "answers": [{"comments": [{"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1504682923, "post_id": 46063917, "comment_id": 79098991, "body": "This requires <code>2n</code> comparisons. Algorithm I use requires <code>3&#47;2n</code>. I appreciate the effort, but I want to optimize the most optimal algorithm I know, not the trivial one."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "reply_to_user": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1504713876, "post_id": 46063917, "comment_id": 79120961, "body": "Actually, this only requires <code>2n</code> comparisons in the worst case. In the best case, it only requires <code>n</code> comparisons and in the average case it requires <code>1.5n</code> comparisons. On the other hand, your algorithm always requires <code>1.5n</code> comparisons.  I wouldn&#39;t worry about performance too much because whether you use the trivial algorithm or the algorithm that always performs <code>1.5n</code> comparisons, your asymptotic running time is always linear. The difference between <code>2n</code> comparisons, <code>1.5n</code> comparisons and <code>n</code> comparisons is negligible."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1504810595, "post_id": 46063917, "comment_id": 79169430, "body": "You seem to be missing the point. The point of this question is to optimize this algorithm (and I stated it clearly in the title). You right about average case of your implementation though. But you&#39;re wrong about the difference being negligible. In reality it depends. If it wouldn&#39;t, everybody would still use <code>quicksort</code> instead of more complicated algorithms."}], "tags": [], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "is_accepted": false, "score": 3, "last_activity_date": 1504649529, "last_edit_date": 1504649529, "creation_date": 1504648732, "answer_id": 46063917, "question_id": 46063499, "link": "https://stackoverflow.com/questions/46063499/how-can-i-improve-performance-of-this-minmax-implementation/46063917#46063917", "title": "How can I improve performance of this minmax implementation?", "body": "<p>Finding the minimum and maximum can be done in linear time and constant space as follows:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>sort :: (Int, Int) -&gt; Int -&gt; (Int, Int)\nsort (min, max) val\n    | val &lt; min = (val, max)\n    | val &gt; max = (min, val)\n    | otherwise = (min, max)\n\nminmax :: [Int] -&gt; Maybe (Int, Int)\nminmax []     = Nothing\nminmax (x:xs) = Just $ foldl sort (x, x) xs\n</code></pre>\n\n<p>Haskell's strictness analyzer should figure out that this code must be strict and optimize it.</p>\n"}], "owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1504891610, "creation_date": 1504646351, "last_edit_date": 1504891610, "question_id": 46063499, "link": "https://stackoverflow.com/questions/46063499/how-can-i-improve-performance-of-this-minmax-implementation", "title": "How can I improve performance of this minmax implementation?", "body": "<p>Here is my current code. It's a naive implementation.</p>\n\n<pre><code>import System.Environment (getArgs)\n\nminmax [] = Nothing\nminmax [x] = Just (x, x)\nminmax (a:b:xs) = Just $ minmax' xs $ sort a b\n    where minmax' [] lohi = lohi\n          minmax' [x] lohi@(lo, hi)\n            | x &lt; lo = (x, hi)\n            | x &gt; hi = (lo, x)\n            | otherwise = lohi\n          minmax' (x:y:xs) (lo, hi) = minmax' xs $ newlo `seq` newhi `seq` (newlo, newhi)\n              where (lo', hi') = sort x y\n                    newlo = if lo' &lt; lo then lo' else lo\n                    newhi = if hi' &gt; hi then hi' else hi\n\nsort x y = if x &lt; y then (x, y) else (y, x)\n\nmain = do\n    args &lt;- getArgs\n    let [from, till] = map read args :: [Int]\n    print $ minmax [from..till]\n</code></pre>\n\n<p>I want to see how far I can go with haskell compared to c++ <code>rust</code> and maybe using three approaches in all languages.\nNaive, naive parallel and using matrices (<code>repa</code> for Haskell and <code>eigen</code> for C++)</p>\n\n<p>From this profiler report I see that Haskell allocates a lot of memory.</p>\n\n<pre><code>   minmax +RTS -p -RTS 1 10000000\n\ntotal time  =        0.13 secs   (132 ticks @ 1000 us, 1 processor)\ntotal alloc = 800,062,584 bytes  (excludes profiling overheads)\n</code></pre>\n\n<p>I've compiled with <code>ghc -O2 -fllvm</code> (ghc 8.2.1). From my point of view naive implementation shouldn't allocate much memory because it should just iterate a list in pairs. How to achieve that, is there anything else I can do to improve performance?</p>\n\n<p>I wanted to try <code>stream-fusion</code> package, but it doesn't support <code>base 4.10</code>. Is there workaround for this? Couldn't find anything about this problem.</p>\n"}, {"tags": ["haskell", "lenses"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1504646006, "post_id": 46063334, "comment_id": 79087640, "body": "Probably not the answer you&#39;re looking for, but my opinion/experience here is that you need to <i>abstract</i>.  A function that depends on 5 parameters is already conceptually too complicated -- what does it <i>really</i> depend on, in your mind?  Are there collections of these parameters that form cohesive units?  Perhaps the types are too simplistic (as in C where you pass an int and a pointer when you really mean an array).  Perhaps the algorithm is not general/polymorphic enough, so where you think you need to be consulting settings, in fact a helper function needs to be factored into a parameter"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1504646195, "post_id": 46063334, "comment_id": 79087715, "body": "Anyway I wrote this controversial post about a similar situation <a href=\"https://lukepalmer.wordpress.com/2011/05/20/the-whole-program-fallacy/\" rel=\"nofollow noreferrer\">lukepalmer.wordpress.com/2011/05/20/the-whole-program-fallac&zwnj;&#8203;y</a>"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504649376, "post_id": 46063334, "comment_id": 79088901, "body": "&quot;Is there an easier way to solve this?&quot; - what is hard about either of your two solutions? Based on this very abstract explanation, I would hazard a guess that you want &quot;row polymorphism&quot; (or &quot;extensible records&quot;) for which there are dozens of packages on Hackage. However, this type of solution often comes with its own caveats (e.g. worse type inference, requiring complex type-level machinery, requiring TH in user code)."}, {"owner": {"reputation": 22952, "user_id": 210211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8721ff8fa4b5c658058f4a2803231f44?s=128&d=identicon&r=PG", "display_name": "comingstorm", "link": "https://stackoverflow.com/users/210211/comingstorm"}, "edited": false, "score": 0, "creation_date": 1504670129, "post_id": 46063334, "comment_id": 79093641, "body": "Why not just use both access functions:  <code>_p1 $ _common myparams</code> or similar?  If that&#39;s not sufficient, ask yourself:  exactly what do you want to do with your common parameters?  In what ways do you need to treat your variant parameter sets uniformly?"}, {"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1504678549, "post_id": 46063334, "comment_id": 79096390, "body": "As you are using lens you could use either mkClass or mkField"}], "answers": [{"tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": false, "score": 1, "last_activity_date": 1504738435, "creation_date": 1504738435, "answer_id": 46085440, "question_id": 46063334, "link": "https://stackoverflow.com/questions/46063334/extending-structures-in-haskell/46085440#46085440", "title": "Extending structures in Haskell", "body": "<p>What you are looking for is <a href=\"https://hackage.haskell.org/package/lens-4.15.4/docs/Control-Lens-TH.html#v:makeClassy\" rel=\"nofollow noreferrer\"><code>makeClassy</code></a> from <code>Control.Lens.TH</code>.  Read the documentation about its assumptions on field names. (If you cannot change your field names to match see friends <code>makeClassyFor</code> and <code>makeClassy_</code>)</p>\n\n<p>The idea here is that the Template creates a class of things that have your <code>commonParameters</code> and adds your data structure as an instance of that class.  When many data structures have the same fields they will all be part of the same class.  You can then use that class in your lens accessors.</p>\n\n<p>As a programming note, I tend to make a generic structure with <em>just</em> the <code>commonParameters</code> and a reasonable name so I can refer to the class created by TH using the <code>HasFoo</code> convention.</p>\n"}, {"tags": [], "owner": {"reputation": 4773, "user_id": 4148211, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/DiKJf.jpg?s=128&g=1", "display_name": "frasertweedale", "link": "https://stackoverflow.com/users/4148211/frasertweedale"}, "is_accepted": true, "score": 1, "last_activity_date": 1504751489, "creation_date": 1504751489, "answer_id": 46086961, "question_id": 46063334, "link": "https://stackoverflow.com/questions/46063334/extending-structures-in-haskell/46086961#46086961", "title": "Extending structures in Haskell", "body": "<p>The <em>classy lenses/optics</em> technique is useful here.</p>\n\n<pre><code>data CommonParameters = CommonParameters\n  { _p1 :: A\n  }\nmakeClassy ''CommonParameters\n</code></pre>\n\n<p>The <code>makeClassy</code> Template Haskell directive will result in the following class and instance:</p>\n\n<pre><code>class HasCommonParameters a where\n  commonParameters :: Lens' a CommonParameters\n  p1 :: Lens' a A\n  p1 = ... -- default implementation\n\ninstance HasCommonParameters CommonParameters where\n  commonParameters = id\n</code></pre>\n\n<p>Then for <code>AlgorithmParameters</code></p>\n\n<pre><code>data AlgorithmParameters = AlgorithmParameters\n  { _algCommonParameters :: CommonParameters\n  , _myp1 :: B\n  }\nmakeClassy ''AlgorithmParameters\n</code></pre>\n\n<p>Again <code>makeClassy</code> does its thing:</p>\n\n<pre><code>class HasAlgorithmParameters a where\n  algorithmParameters :: Lens' a AlgorithmParameters\n  algCommonParameters :: Lens' a CommonParameters\n  algCommonParameters = ... -- default implementation\n  myp1 :: Lens' a B\n  myp1 = ... -- default implementation\n\ninstance HasAlgorithmParameters AlgorithmParameters where\n  algorithmParameters = id\n</code></pre>\n\n<p>Now, so that you can use the <code>CommonParameters</code> optics with the\n<code>AlgorithmParameters</code> type, define the following instance:</p>\n\n<pre><code>instance HasCommonParameters AlgorithmParameters where\n  commonParameters = algCommonParameters\n</code></pre>\n"}], "owner": {"reputation": 1282, "user_id": 807631, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/3120b244b19cab8e1c52845139b3fc23?s=128&d=identicon&r=PG&f=1", "display_name": "Misguided", "link": "https://stackoverflow.com/users/807631/misguided"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 46086961, "answer_count": 2, "score": 2, "last_activity_date": 1504751489, "creation_date": 1504645532, "last_edit_date": 1504646017, "question_id": 46063334, "link": "https://stackoverflow.com/questions/46063334/extending-structures-in-haskell", "title": "Extending structures in Haskell", "body": "<p>I want to implement some algorithms that have a common set of parameters (in practice this is a high number, which is why I am not passing them separately into the functions):</p>\n\n<pre><code>data Parameters = Parameters {\n   _p1 :: A,\n   ...\n}\n</code></pre>\n\n<p>But each one of them has -aside from this common set- a set of parameters that only they know how to use:</p>\n\n<pre><code>data AlgorithmAParameters = AlgorithmAParameters {\n    _commonParameters :: Parameters,\n    _myp1 :: B\n}\n</code></pre>\n\n<p>The problem here is how to write idiomatic code. I am currently using lenses, so then I can define</p>\n\n<pre><code>p1 :: Lens' AlgorithmAParameters A\np1 = commonParameters . Common.p1\n</code></pre>\n\n<p>And this lets me access everything the same way I would if I were using just <code>Parameters</code>. The problem is that I have to do this for every algorithm that keeps its own set of parameters, and I have to be careful to import these separately, among other things.</p>\n\n<p>I could go further and use type classes</p>\n\n<pre><code>class Parameters p where\n    p1 :: Lens' p A\n    ...\n</code></pre>\n\n<p>And then implement separately</p>\n\n<pre><code>class AlgorithmAParameters p where\n    p1 :: Lens' p A\n    myp1 :: Lens' p B\n</code></pre>\n\n<p>Along with the <code>AlgorithmAParameters p =&gt; AlgorithmParameters p</code> instance. However, this has the same kind of problem (repeated code) and ultimately leads to code that is just as misleading as the first option (plus the whole <code>Lens'</code> in the type class is not very informative).</p>\n\n<p>Is there an easier way to solve this?.</p>\n"}, {"tags": ["haskell", "tuples", "named", "newtype"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504629329, "post_id": 46059483, "comment_id": 79079644, "body": "<code>data Account = Account { accCode :: Code, accName :: Name }</code> and then <code>accCode an</code> (NB: a &#39;named tuple&#39; is a record.)"}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 8, "last_activity_date": 1504631421, "last_edit_date": 1504631421, "creation_date": 1504629608, "answer_id": 46059739, "question_id": 46059483, "link": "https://stackoverflow.com/questions/46059483/how-to-access-newtype-named-tuples-fields-in-haskell/46059739#46059739", "title": "How to access newtype named tuples fields in haskell", "body": "<blockquote>\n  <p>Is it better to use <code>data</code> instead of a <code>newtype</code>?</p>\n</blockquote>\n\n<p>Um, yes... the whole point of <code>newtype</code> is to give a <em>single</em> type a new name. It's not supposed to be used for building composite types. So, like user2407038 suggested, make it</p>\n\n<pre><code>data Account = Account\n    { accCode :: Code\n    , accName :: Name\n    } deriving (Show)\n</code></pre>\n\n<p>and then you can simply use</p>\n\n<pre><code>*Main Lib&gt; let an = Account (Code \"1.1.1\") (Name \"Land And Buildings\")\n*Main Lib&gt; accCode an\nCode \"1.1.1\"\n</code></pre>\n\n<p>That said, it's also not difficult to access fields in a tuple buried in a newtype, provided you give the newtype an unwrapper:</p>\n\n<pre><code>newtype Account = Account {getAccount :: (Code, Name)}\n   deriving (Show)\n</code></pre>\n\n<p>then</p>\n\n<pre><code>*Main Lib&gt; let an = Account (Code \"1.1.1\", Name \"Land And Buildings\")\n*Main Lib&gt; fst $ getAccount an\nCode \"1.1.1\"\n</code></pre>\n\n<hr>\n\n<p>If you want to be fancy, you can also use the \u201c20.2nd century record accessors\u201d, <a href=\"http://hackage.haskell.org/package/microlens-platform\" rel=\"noreferrer\">lenses</a>:</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell, FunctionalDependencies #-}\nimport Lens.Micro\nimport Lens.Micro.TH\n\ndata Account = Account\n    { accountCode :: Code\n    , accountName :: Name\n    } deriving (Show)\nmakeFields ''Account\n</code></pre>\n\n<p>then</p>\n\n<pre><code>*Main Lib&gt; let an = Account (Code \"1.1.1\") (Name \"Land And Buildings\")\n*Main Lib&gt; an^.code\nCode \"1.1.1\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 4, "last_activity_date": 1504630159, "creation_date": 1504630159, "answer_id": 46059848, "question_id": 46059483, "link": "https://stackoverflow.com/questions/46059483/how-to-access-newtype-named-tuples-fields-in-haskell/46059848#46059848", "title": "How to access newtype named tuples fields in haskell", "body": "<p>You can use pattern matching. E.g.</p>\n\n<pre><code>case an of\n  Account (Code c, Name n) -&gt; \"Code \" ++ c ++ \", Name \" ++ n\n</code></pre>\n\n<p>or, in a function definition you can directly write</p>\n\n<pre><code>foo :: Account -&gt; String\nfoo  (Account (Code c, Name n)) = \"Code \" ++ c ++ \", Name \" ++ n\n</code></pre>\n\n<p>Using a <code>data</code> is usually better.</p>\n\n<pre><code>data Account = Account Code Name\n-- ...\ncase an of\n  Account (Code c) (Name n) -&gt; \"Code \" ++ c ++ \", Name \" ++ n\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 4466008, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/935337957f6a40a119d6dfdc5041f352?s=128&d=identicon&r=PG&f=1", "display_name": "nesiax", "link": "https://stackoverflow.com/users/4466008/nesiax"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 939, "favorite_count": 0, "accepted_answer_id": 46059739, "answer_count": 2, "score": 4, "last_activity_date": 1504631421, "creation_date": 1504628483, "last_edit_date": 1504628919, "question_id": 46059483, "link": "https://stackoverflow.com/questions/46059483/how-to-access-newtype-named-tuples-fields-in-haskell", "title": "How to access newtype named tuples fields in haskell", "body": "<p>I declare the following newtypes:</p>\n\n<pre><code>newtype Code = Code String deriving (Show)\nnewtype Name = Name String deriving (Show)\nnewtype Account = Account (Code, Name) deriving (Show)\n</code></pre>\n\n<p>So:</p>\n\n<pre><code>*Main Lib&gt; :t Code\nCode :: String -&gt; Code\n*Main Lib&gt; :t Name\nName :: String -&gt; Name\n*Main Lib&gt; :t Account\nAccount :: (Code, Name) -&gt; Account\n</code></pre>\n\n<p>and then I create some instances:</p>\n\n<pre><code>cn = Code \"1.1.1\"\nnn = Name \"Land And Buildings\"\nan = Account (cn, nn)\n\n*Main Lib&gt; an\nAccount (Code \"1.1.1\",Name \"Land And Buildings\")\n</code></pre>\n\n<p>Now I need to access for example just the <code>Code</code> field from the variable <code>an</code>, something like <code>an.Code</code> How can I do that?</p>\n\n<p>Is it better to use <code>Data</code> instead of a <code>newtype</code>? If Haskell lets me create a newtype named tuple, then I guess there should be an easy way to access the elements inside.</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 2, "creation_date": 1504630405, "post_id": 46056764, "comment_id": 79080134, "body": "Are you manually starting your Docker containers, as opposed to using Stack&#39;s built-in Docker support? The latter handles properly separating out host compilers and packages vs the container versions."}, {"owner": {"reputation": 412, "user_id": 6593641, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xVNVQ.jpg?s=128&g=1", "display_name": "madnight", "link": "https://stackoverflow.com/users/6593641/madnight"}, "edited": false, "score": 0, "creation_date": 1504680620, "post_id": 46056764, "comment_id": 79097539, "body": "why are you mounting .stack in the firat place? docker could have its own .stack or a data only container that contains .stack"}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1504684041, "post_id": 46056764, "comment_id": 79099662, "body": "@MichaelSnoyman please see answer from our devops engineer <a href=\"https://gist.github.com/k-bx/695578ed7437a1fa37cc1cca722fb145\" rel=\"nofollow noreferrer\">gist.github.com/k-bx/695578ed7437a1fa37cc1cca722fb145</a>"}, {"owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "reply_to_user": {"reputation": 412, "user_id": 6593641, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xVNVQ.jpg?s=128&g=1", "display_name": "madnight", "link": "https://stackoverflow.com/users/6593641/madnight"}, "edited": false, "score": 0, "creation_date": 1504684301, "post_id": 46056764, "comment_id": 79099811, "body": "@madnight we create new staging env for every developer&#39;s branch/PR, building from scratch takes hours, so we need to have some nice caching"}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "reply_to_user": {"reputation": 412, "user_id": 6593641, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xVNVQ.jpg?s=128&g=1", "display_name": "madnight", "link": "https://stackoverflow.com/users/6593641/madnight"}, "edited": false, "score": 0, "creation_date": 1504707148, "post_id": 46056764, "comment_id": 79116203, "body": "If the goal is to control the Docker images yourselves and reduce build time, I&#39;d recommend building the necessary dependencies within a Docker image, and then (as @madnight mentions) mounting a Docker-specific directory for caching additional work. Such an approach is available at: <a href=\"https://github.com/fpco/stack-docker-image-build\" rel=\"nofollow noreferrer\">github.com/fpco/stack-docker-image-build</a>"}, {"owner": {"reputation": 412, "user_id": 6593641, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xVNVQ.jpg?s=128&g=1", "display_name": "madnight", "link": "https://stackoverflow.com/users/6593641/madnight"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 1, "creation_date": 1504879931, "post_id": 46056764, "comment_id": 79199368, "body": "i can confirm @MichaelSnoyman i think you are heading into the wrong direction with mounting ~/.stack from host"}], "owner": {"reputation": 2277, "user_id": 540810, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/d6ac4c55425d6f9d28db9068dbb49e09?s=128&d=identicon&r=PG", "display_name": "Konstantine Rybnikov", "link": "https://stackoverflow.com/users/540810/konstantine-rybnikov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 217, "favorite_count": 2, "answer_count": 0, "score": 7, "last_activity_date": 1504619614, "creation_date": 1504619614, "question_id": 46056764, "link": "https://stackoverflow.com/questions/46056764/sharing-stack-with-docker", "title": "Sharing ~/.stack with docker", "body": "<p>Our team is using Docker for building our Haskell app in it, and in order to optimize build times, we work towards sharing the <code>~/.stack</code> directory from OS with the one inside docker containers. Initial implementation was to just reuse the one from OS, but it turned out this doesn't work quite well, it fails with an error like this:</p>\n\n<pre><code>The GHC located at /root/.stack/programs/x86_64-linux/ghc-8.0.1/bin/ghc failed to compile a sanity check. Please see:\n    http://docs.haskellstack.org/en/stable/install_and_upgrade/\nfor more information. Exception was:                                                                                                                                                 Running /root/.stack/programs/x86_64-linux/ghc-8.0.1/bin/ghc /tmp/stack-sanity-check48/Main.hs -no-user-package-db in directory /tmp/stack-sanity-check48/ exited with ExitFailure 127\n\n/root/.stack/programs/x86_64-linux/ghc-8.0.1/bin/ghc: line 9: /home/ubuntu/.stack/programs/x86_64-linux/ghc-8.0.1/lib/ghc-8.0.1/bin/ghc: No such file or directory\nmake: *** [adserver_executables] Error 1\n</code></pre>\n\n<p>It seems like somewhere in <code>~/.stack</code> there is a cache which states an absolute path to GHC, and when we mount <code>~/.stack</code> in docker, it gets mounted as <code>/root/.stack</code> instead of <code>/home/&lt;user&gt;/.stack</code>, thus compiler can't be found by that path.</p>\n\n<p>Our current decision is to make a separate directory <code>~/.docker-stack</code>, which we will use for all the docker-based builds, without interfering with the OS-level one. This is not ideal since it will use more space and will bring a need to re-compile packages even when they were compiled in non-docker OS-level environment.</p>\n\n<p>Is there a better approach someone can propose to share <code>~/.stack</code> with inner-docker stack? Thank you.</p>\n"}, {"tags": ["haskell", "ranking", "hackage"], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1504615181, "post_id": 46054966, "comment_id": 79069784, "body": "Makes sense. Interesting enough that <code>base</code> is ever downloaded from Hackage <i>at all</i>, seeing as it comes with the compiler..."}], "tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": true, "score": 3, "last_activity_date": 1504614362, "creation_date": 1504614362, "answer_id": 46054966, "question_id": 46054875, "link": "https://stackoverflow.com/questions/46054875/how-is-the-new-dl-ranking-in-the-hackage-package-search-calculated/46054966#46054966", "title": "How is the new \u201cDL\u201d ranking in the Hackage package search calculated?", "body": "<p>It's downloads.</p>\n\n<p>Clicking through to <a href=\"http://hackage.haskell.org/package/base\" rel=\"nofollow noreferrer\">base</a> for example shows:</p>\n\n<blockquote>\n  <p>Downloads        21206 total (1692 in the last 30 days)</p>\n</blockquote>\n\n<p>So it appears it's the last 30 days download count.</p>\n"}], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "accepted_answer_id": 46054966, "answer_count": 1, "score": 4, "last_activity_date": 1504614362, "creation_date": 1504614056, "question_id": 46054875, "link": "https://stackoverflow.com/questions/46054875/how-is-the-new-dl-ranking-in-the-hackage-package-search-calculated", "title": "How is the new \u201cDL\u201d ranking in the Hackage package search calculated?", "body": "<p>The <a href=\"http://hackage.haskell.org/packages/search?terms=base\" rel=\"nofollow noreferrer\">Hackage package search</a> as of now doesn't just give a list of all matches as it used to do, but allows sorting them in various ways. Notably, it is now possible to sort by <em>rating</em>, i.e. by how satisfied users were with the package (if people will actually start rating packages... this has been possible for a while but almost no votes are assigned yet), and by some \u201cDL\u201d criterium. I first assumed this somehow counted the reverse dependencies, i.e. described how many other packages depend on this one, but that can't seem to be the case since <a href=\"http://hackage.haskell.org/packages/search?terms=base\" rel=\"nofollow noreferrer\"><code>base</code> has only a value of 1692</a> whereas e.g. <code>base64-bytestring</code> has a whopping 7384.</p>\n\n<p>So if that's not it, what does this number tell me?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1504614645, "post_id": 46054813, "comment_id": 79069430, "body": "You could write an instance of <a href=\"https://hackage.haskell.org/package/mono-traversable-1.0.2.1/docs/Data-MonoTraversable.html#t:MonoFunctor\" rel=\"nofollow noreferrer\"><code>MonoFunctor</code></a>, then <code>scale x = omap (* x)</code>. Or you could make your type into a functor (<code>data Circle_ a = Circle_ a a a deriving Functor</code>) and work with <code>type Circle = Circle Float</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1504615431, "post_id": 46054813, "comment_id": 79069961, "body": "@BenjaminHodgson that&#39;s possible and commonly done, however I find such an approach rather unelegant. Such a functor instance isn&#39;t specific to the actual geometric properties of an object like <code>Circle</code>, but only to the <i>representation of these properties in a particular <a href=\"https://en.wikipedia.org/wiki/Basis_(linear_algebra)\" rel=\"nofollow noreferrer\">basis</a></i>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1504616211, "post_id": 46054813, "comment_id": 79070572, "body": "BTW, note that non-strict <code>Float</code> fields <a href=\"https://wiki.haskell.org/Performance/Floating_point\" rel=\"nofollow noreferrer\">make little sense in Haskell</a> \u2013 they have worse precision than <code>Double</code>, but don&#39;t give any performance advantage because there&#39;s a pointer/thunk indirection. You probably want <code>Circle {radius, xPos, yPos :: !Float}</code>, then compiling with optimisations / with <code>-funbox-strict-fields</code> will represent <code>Circle</code> efficiently by just the plain float data as-is. (Indeed, <code>!Double</code> might be fine too, use that unless you&#39;ve determined that <code>Float</code> really gives a significant memory/performance advantage.)"}], "answers": [{"comments": [{"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504619201, "post_id": 46055177, "comment_id": 79072895, "body": "That has to be the strangest instance of vectorspace I have ever seen, where scaling changes the position of an object. I like it!"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1504615062, "creation_date": 1504615062, "answer_id": 46055177, "question_id": 46054813, "link": "https://stackoverflow.com/questions/46054813/iterating-over-custom-data-types-in-haskell/46055177#46055177", "title": "Iterating over custom data types in Haskell", "body": "<p><em>Scaling by a factor</em> is generally a <a href=\"https://en.wikipedia.org/wiki/Vector_space\" rel=\"nofollow noreferrer\">vector space operation</a>. You could do the following:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies, DeriveGeneric #-}\n\nimport Data.VectorSpace\nimport GHC.Generics (Generic)\n\ndata Circle = Circle\n        { radius                   :: Float\n        , xPosition                :: Float\n        , yPosition                :: Float\n        } deriving (Generic, Show)\n\ninstance AdditiveGroup Circle\ninstance VectorSpace Circle where\n  type Scalar Circle = Float\n\nmain = print $ Circle 1.5 1 1 ^* 10\n</code></pre>\n\n<p>(result: <code>Circle {radius = 15.0, xPosition = 10.0, yPosition = 10.0}</code>).</p>\n\n<p>(requires <a href=\"http://hackage.haskell.org/package/vector-space-0.11\" rel=\"nofollow noreferrer\"><code>vector-space &gt;= 0.11</code></a>, which has just <a href=\"https://github.com/conal/vector-space/commit/3a5c3d59d310776e90a70fba75e7242233f9701c\" rel=\"nofollow noreferrer\">added support for generic-derived instances</a>.)</p>\n\n<p>However I should remark that <code>Circle</code> as such is <strong>not</strong> really a good <code>VectorSpace</code> instance: adding two circles doesn't make any sense, and scaling by a negative factor gives a bogus radius. Only define such an instance if your real use case follows the actual <a href=\"https://en.wikipedia.org/wiki/Vector_space#Definition\" rel=\"nofollow noreferrer\">vector space axioms</a>.</p>\n\n<p>What you really want for a type like <code>Circle</code> is something like <a href=\"http://hackage.haskell.org/package/diagrams-core-1.4.0.1/docs/Diagrams-Core-Transform.html#t:Transformable\" rel=\"nofollow noreferrer\"><code>diagrams</code>' <code>Transformable</code> class</a>. But I don't think there's any automatic way to derive an instance for that. In fact, since <code>diagrams</code> has \u2013 unfortunately IMO \u2013 switched from <code>vector-space</code> to <code>linear</code>, something like this has become considerably tougher to do even in principle.</p>\n"}, {"comments": [{"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 0, "creation_date": 1504654410, "post_id": 46057738, "comment_id": 79090207, "body": "If all fields really have the same type, and you want to express that as a type-checked condition, you could use <code>generics-sop</code> instead and write <code>circleModify f = to . hcmap (Proxy @((~) Float)) (mapII f) . from</code>."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1504622574, "creation_date": 1504622574, "answer_id": 46057738, "question_id": 46054813, "link": "https://stackoverflow.com/questions/46054813/iterating-over-custom-data-types-in-haskell/46057738#46057738", "title": "Iterating over custom data types in Haskell", "body": "<p>You can use \"scrap your boilerplate\":</p>\n\n<pre><code>import Data.Generics\n\ndata Circle = Circle\n    { radius                   :: Float\n    , xPosition                :: Float\n    , yPosition                :: Float\n    }\n    deriving (Show, Data)\n\ncircleModify :: (Float -&gt; Float) -&gt; Circle -&gt; Circle\ncircleModify f = gmapT (mkT f)\n</code></pre>\n\n<p>Intuitively, above, <code>mkT f</code> transforms <code>f</code> into a function which is applicable to any type: if the argument of <code>mkT f</code> is a <code>Float</code>, then <code>f</code> is applied, otherwise the argument is returned as it is.\nThe newly constructed general function is called a \"transformation\": the <code>T</code> in <code>mkT</code> stands for that.</p>\n\n<p>Then, <code>gmapT</code> applies the transformation <code>mkT f</code> to all the fields of the circle. Note that is a field contained, say, <code>(Float, Bool)</code> that float would be unaffected. Use <code>everywhere</code> instead of <code>gmapT</code> to recursively go deeper.</p>\n\n<p>Note that I'm not a big fan of this approach. If for any reason you change the type of a field, that change will not trigger a type error but <code>gmapT (mkT ...)</code> will now simply skip over that field.</p>\n\n<p>Generic programming can be convenient, but sometimes a bit too much, in that type errors can be silently transformed into unexpected results at runtime. Use with care.</p>\n"}], "owner": {"reputation": 5779, "user_id": 1255817, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9680f28a548dcaa8bfc2946254c5b3dc?s=128&d=identicon&r=PG", "display_name": "turtle", "link": "https://stackoverflow.com/users/1255817/turtle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 670, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1504622574, "creation_date": 1504613897, "question_id": 46054813, "link": "https://stackoverflow.com/questions/46054813/iterating-over-custom-data-types-in-haskell", "title": "Iterating over custom data types in Haskell", "body": "<p>I have a custom data type that looks like this:</p>\n\n<pre><code>data Circle = Circle\n        { radius                   :: Float\n        , xPosition                :: Float\n        , yPosition                :: Float\n        }\n</code></pre>\n\n<p>I want to be able to write a scale function that can take a given circle and change its size like this:</p>\n\n<pre><code>aCircle = Circle 1.5 1 1\nscaleFn aCircle 10\n</code></pre>\n\n<p>The desired output for this example with scale of 10 would be:</p>\n\n<pre><code>Circle 15 10 10\n</code></pre>\n\n<p>How can I create a function where I can iterate over each field and multiple the values by a constant? In my actual use case I need a way to map over all the fields as there are many of them.</p>\n"}, {"tags": ["haskell", "types", "ml"], "comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1504607280, "post_id": 46052479, "comment_id": 79064708, "body": "Are you asking what the purpose of ASTs is?"}], "answers": [{"comments": [{"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504612541, "post_id": 46052850, "comment_id": 79068069, "body": "Thanks @chi. I didn&#39;t know about these tags to get Haskell highlighting!"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 2, "creation_date": 1504736138, "post_id": 46052850, "comment_id": 79132270, "body": "To this point, <a href=\"http://okmij.org/ftp/tagless-final/course/\" rel=\"nofollow noreferrer\">Oleg Kiselyov&#39;s lecture notes on Typed Tagless Final Interpreters</a> are worth reading.  They explain the initial/final duality in detail, demonstrate the unexpected flexibility of the final representation in the context of a polymorphic type system, and show some of the incredible ways a &quot;final interpreter&quot; can be extended to handle new language constructs without modifying any existing code.  When I first read these notes, they blew my mind."}], "tags": [], "owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "is_accepted": true, "score": 7, "last_activity_date": 1504611214, "last_edit_date": 1504611214, "creation_date": 1504607567, "answer_id": 46052850, "question_id": 46052479, "link": "https://stackoverflow.com/questions/46052479/why-are-ml-haskell-datatypes-useful-for-defining-languages-like-arithmetic-exp/46052850#46052850", "title": "Why are ML/Haskell datatypes useful for defining &quot;languages&quot; like arithmetic expressions?", "body": "<p>There is a duality between initial / first-order / datatype-based encodings (aka deep embeddings) and final / higher-order / evaluator-based encodings (aka shallow embeddings). You can indeed typically use a typeclass of combinators instead of a datatype (and convert back and forth between the two).</p>\n\n<p>Here is a module showing the two approaches:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE GADTs, Rank2Types #-}\n\nmodule Expr where\n\ndata Expr where\n  Val :: Int -&gt; Expr\n  Add :: Expr -&gt; Expr -&gt; Expr\n\nclass Expr' a where\n  val :: Int -&gt; a\n  add :: a -&gt; a -&gt; a\n</code></pre>\n\n<p>You can see that the two definitions look eerily similar. <code>Expr' a</code> is basically describing an algebra on <code>Expr</code> which means that you can get an <code>a</code> out of an <code>Expr</code> if you have such an <code>Expr' a</code>. Similarly, because you can write an instance <code>Expr' Expr</code>, you're able to reify a term of type <code>forall a. Expr' a =&gt; a</code> into a syntactic value of type <code>Expr</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>expr :: Expr' a =&gt; Expr -&gt; a\nexpr e = case e of\n  Val n   -&gt; val n\n  Add p q -&gt; add (expr p) (expr q)\n\ninstance Expr' Expr where\n  val = Val\n  add = Add\n\nexpr' :: (forall a. Expr' a =&gt; a) -&gt; Expr\nexpr' e = e\n</code></pre>\n\n<p>In the end, picking a representation over another really depends on what your main focus is: if you want to inspect the structure of the expression (e.g. if you want to optimise / compile it), it's easier if you have access to an AST. If, on the other hand, you're only interested in computing an invariant using a fold (e.g. the depth of the expression or its evaluation), a higher order encoding will do.</p>\n"}, {"tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 4, "last_activity_date": 1504726982, "last_edit_date": 1504726982, "creation_date": 1504634232, "answer_id": 46060814, "question_id": 46052479, "link": "https://stackoverflow.com/questions/46052479/why-are-ml-haskell-datatypes-useful-for-defining-languages-like-arithmetic-exp/46060814#46060814", "title": "Why are ML/Haskell datatypes useful for defining &quot;languages&quot; like arithmetic expressions?", "body": "<p>The ADT is in a form you can inspect and manipulate in ways other than simply evaluating it. Once you hide all the interesting data in a function call, there is no longer anything you can do with it but evaluate it. Consider this definition, similar to the one in your question, but with a Var term to represent variables and with the Mul and Neg terms removed to focus on addition.</p>\n\n<pre><code>data Expr a = Constant a\n            | Add (Expr a) (Expr a)\n            | Var String\n            deriving Show\n</code></pre>\n\n<p>The obvious function to write is <code>eval</code>, of course. It requires a way to look up a variable's value, and is straightforward:</p>\n\n<pre><code>-- cheating a little bit by assuming all Vars are defined\neval :: Num a =&gt; Expr a -&gt; (String -&gt; a) -&gt; a\neval (Constant x) _env = x\neval (Add x y) env = eval x env + eval y env\neval (Var x) env = env x\n</code></pre>\n\n<p>But suppose you don't have a variable mapping yet. You have a large expression that you will evaluate many times, for different choices of variable. And some silly recursive function built up an expression like:</p>\n\n<pre><code>Add (Constant 1) \n    (Add (Constant 1) \n         (Add (Constant 1) \n              (Add (Constant 1) \n                   (Add (Constant 1) \n                        (Add (Constant 1) \n                             (Var \"x\"))))))\n</code></pre>\n\n<p>It would be wasteful to recompute <code>1+1+1+1+1+1</code> every time you evaluate this: wouldn't it be nice if your evaluator could realize that this is just another way of writing <code>Add (Constant 6) (Var \"x\")</code>?</p>\n\n<p>So, you write an expression optimizer, which runs before any variables are available and tries to simplify expressions. There are many simplification rules you could apply, of course; below I've implemented just two very easy ones to illustrate the point.</p>\n\n<pre><code>simplify :: Num a =&gt; Expr a -&gt; Expr a\nsimplify (Add (Constant x) (Constant y)) = Constant $ x + y\nsimplify (Add (Constant x) (Add (Constant y) z)) = simplify $ Add (Constant $ x + y) z\nsimplify x = x\n</code></pre>\n\n<p>Now how does our silly expression look?</p>\n\n<pre><code>&gt; simplify $ Add (Constant 1) (Add (Constant 1) (Add (Constant 1) (Add (Constant 1) (Add (Constant 1) (Add (Constant 1) (Var \"x\"))))))\nAdd (Constant 6) (Var \"x\")\n</code></pre>\n\n<p>All the unnecessary stuff has been removed, and you now have a nice clean expression to try for various values of <code>x</code>.</p>\n\n<p>How do you do the same thing with a representation of this expression in functions? You can't, because there is no \"intermediate form\" between the initial specification of the expression and its final evaluation: you can only look at the expression as a single, opaque function call. Evaluating it at a particular value of <code>x</code> necessarily evaluates each of the subexpressions anew, and there is no way to disentangle them.</p>\n\n<p>Here's an extension of the functional type you propose in your question, again enriched with variables:</p>\n\n<pre><code>type FExpr a = (String -&gt; a) -&gt; a\n\nlit :: a -&gt; FExpr a\nlit x _env = x\n\nadd :: Num a =&gt; FExpr a -&gt; FExpr a -&gt; FExpr a\nadd x y env = x env + y env\n\nvar :: String -&gt; FExpr a\nvar x env = env x\n</code></pre>\n\n<p>with the same silly expression to evaluate many times:</p>\n\n<pre><code>sample :: Num a =&gt; FExpr a\nsample = add (lit 1)\n             (add (lit 1)\n                  (add (lit 1)\n                       (add (lit 1)\n                            (add (lit 1)\n                                 (add (lit 1)\n                                      (var \"x\"))))))\n</code></pre>\n\n<p>It works as expected:</p>\n\n<pre><code>&gt; sample $ \\_var -&gt; 5\n11\n</code></pre>\n\n<p>But it has to do a bunch of addition every time you try it for a different <code>x</code>, even though the addition and the variable are mostly unrelated. And there's no way you can simplify the expression tree. You can't simplify it while defining it: that is, you can't make <code>add</code> smarter, because it can't inspect its arguments at all: its arguments are functions which, as far as <code>add</code> is concerned, could do anything at all. And you can't simplify it after constructing it, either: at that point you just have an opaque function that takes in a variable lookup function and produces a value.</p>\n\n<p>By modeling the important parts of your problem as data types in their own right, you make them values that your program can manipulate intelligently. If you leave them as functions, you get a shorter program that is less powerful, because you lock all the information inside lambdas that only GHC can manipulate.</p>\n\n<p>And once you've written it with ADTs, it's not hard to collapse that representation back into the shorter function-based representation if you want. That is, it might be nice to have a function of type</p>\n\n<pre><code>convert :: Expr a -&gt; FExpr a\n</code></pre>\n\n<p>But in fact, we've already done this! That's exactly the type that <code>eval</code> has. You just might not have noticed because of the FExpr type alias, which is not used in the definition of <code>eval</code>.</p>\n\n<p>So in a way, the ADT representation is more general and more powerful, acting as a tree that you can fold up in many different ways. One of those ways is evaluating it, in exactly the way that the function-based representation does. But there are others:</p>\n\n<ul>\n<li>Simplify the expression before evaluating it</li>\n<li>Produce a list of all the variables that must be defined for this expression to be well formed</li>\n<li>Count how deeply nested the deepest part of the tree is, to estimate how many stack frames an evaluator might need</li>\n<li>Convert the expression to a String approximating a Haskell expression you could type to get the same result</li>\n</ul>\n\n<p>So if possible you'd like to work with information-rich ADTs for as long as you can, and then eventually fold the tree up into a more compact form once you have something specific to do with it.</p>\n"}], "owner": {"reputation": 229, "user_id": 7188330, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3b1faff19f7efae6ee99dae9344c322f?s=128&d=identicon&r=PG&f=1", "display_name": "nek28", "link": "https://stackoverflow.com/users/7188330/nek28"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 261, "favorite_count": 0, "accepted_answer_id": 46052850, "answer_count": 2, "score": 6, "last_activity_date": 1504726982, "creation_date": 1504606525, "question_id": 46052479, "link": "https://stackoverflow.com/questions/46052479/why-are-ml-haskell-datatypes-useful-for-defining-languages-like-arithmetic-exp", "title": "Why are ML/Haskell datatypes useful for defining &quot;languages&quot; like arithmetic expressions?", "body": "<p>This is more of a soft question about static type systems in functional languages like those of the ML family. I understand why you need datatypes to describe data structures like lists and trees but defining \"expressions\" like those of propositional logic within datatypes seems to bring just some convenience and is not necessary. For example</p>\n\n<pre><code>datatype arithmetic_exp = Constant of int\n                        | Neg of arithmetic_exp\n                        | Add of (arithmetic_exp * arithmetic_exp)\n                        | Mult of (arithmetic_exp * arithmetic_exp)\n</code></pre>\n\n<p>defines a set of values, on which you can write an <code>eval</code> function which would give you the result. You could just as well define 4 functions: <code>const: int -&gt; int</code>, <code>neg: int -&gt; int</code>, <code>add: int * int -&gt; int</code> and <code>mult: int * int -&gt; int</code> and then an expression of the sort <code>add (mult (const 3, neg 2), neg 4)</code> would give you the same thing without any loss of static security. The only complication is that you have to do four things instead of two. While learning SML and Haskell I've been trying to think about which features give you something necessary and which are just a convenience, so this is the reason why I'm asking. I guess this would matter if you want to decouple the process of evaluating a value from the value itself but I'm not sure where that would be useful. </p>\n\n<p>Thanks a lot.</p>\n"}, {"tags": ["shell", "haskell"], "answers": [{"tags": [], "owner": {"reputation": 924, "user_id": 2329281, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/fb79942e307a17966df0774c5ac12daf?s=128&d=identicon&r=PG", "display_name": "Zeb McCorkle", "link": "https://stackoverflow.com/users/2329281/zeb-mccorkle"}, "is_accepted": false, "score": 1, "last_activity_date": 1504552261, "creation_date": 1504552261, "answer_id": 46042886, "question_id": 46042828, "link": "https://stackoverflow.com/questions/46042828/directory-not-found-when-compiling-haskell-with-emacs/46042886#46042886", "title": "Directory not found when compiling Haskell with Emacs", "body": "<p>You need quotations around <code>c:/Users/Rentian Dong/Documents/rdong6/hw1/Operations.hs</code>. The shell is parsing that as two separate arguments (<code>c:/Users/Rentian</code> and <code>Dong/Documents/rdong6/hw1/Operations.hs</code>) where you only want one. Example:</p>\n\n<pre><code>ghc -Wall -ferror-spans -fforce-recomp -c \"c:/Users/Rentian Dong/Documents/rdong6/hw1/Operations.hs\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 2, "last_activity_date": 1504552833, "last_edit_date": 1504552833, "creation_date": 1504552503, "answer_id": 46042923, "question_id": 46042828, "link": "https://stackoverflow.com/questions/46042828/directory-not-found-when-compiling-haskell-with-emacs/46042923#46042923", "title": "Directory not found when compiling Haskell with Emacs", "body": "<p>This has nothing to do with Haskell (and little with Emacs) but everything with paths containing unescaped spaces. Your command is parsed as</p>\n\n<pre><code>ghc -c \"c:/Users/Rentian\" \"Dong/Documents/rdong6/hw1/Operations.hs\"\n</code></pre>\n\n<p>I haven't used DOS/Windows/Powershell for a long time, but in Bash you could fix this by quoting the entire path:</p>\n\n<pre><code>ghc -c 'c:/Users/Rentian Dong/Documents/rdong6/hw1/Operations.hs'\n</code></pre>\n\n<p>The old-style Windows filename abbreviation <code>Rentia~1</code> should also do the trick.</p>\n\n<p>A better solution would be though to <em>not pass GHC the entire long path</em>. Just <code>cd</code> there once and then execute everything just with the relative path:</p>\n\n<pre><code>cd 'c:/Users/Rentian Dong/Documents/rdong6/hw1'\nghc -c Operations.hs\n</code></pre>\n\n<p>...or in Emacs,</p>\n\n<pre><code>M-x cd\n\"c:/Users/Rentian Dong/Documents/rdong6/hw1\"\nM-x compile\nghc -fforce-recomp Operations.hs\n</code></pre>\n\n<p>...then, with each new compilation,</p>\n\n<pre><code>M-x recompile\n</code></pre>\n\n<p>(or whatever keyboard shortcut you've given this).</p>\n\n<p>Actually, it seldom makes sense to manually invoke GHC <em>at all</em>. Why don't you let <a href=\"https://wiki.haskell.org/How_to_write_a_Haskell_program#Add_a_build_system\" rel=\"nofollow noreferrer\">Cabal</a> (or Stack) do that for you? Then you'd also never need to worry about paths.</p>\n"}], "owner": {"reputation": 81, "user_id": 7326954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fb92efe85db5f24e678f51ddeaf35f8b?s=128&d=identicon&r=PG&f=1", "display_name": "Rentian Dong", "link": "https://stackoverflow.com/users/7326954/rentian-dong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 46042923, "answer_count": 2, "score": 0, "last_activity_date": 1504557263, "creation_date": 1504551870, "last_edit_date": 1504557263, "question_id": 46042828, "link": "https://stackoverflow.com/questions/46042828/directory-not-found-when-compiling-haskell-with-emacs", "title": "Directory not found when compiling Haskell with Emacs", "body": "<p>I am trying to learn Haskell, and I have a Haskell file at </p>\n\n<pre><code>\"c:/Users/Rentian Dong/Documents/rdong6/hw1/Operations.hs\". \n</code></pre>\n\n<p>When I try to Haskell-compile it I get the following error output: </p>\n\n<pre><code>\"ghc -Wall -ferror-spans -fforce-recomp -c c:/Users/Rentian Dong/Documents/rdong6/hw1/Operations.hs\n\n&lt; command line &gt;: does not exist: C:\\Users\\Rentian\n\n\nHsCompilation exited abnormally with code 1 at Mon Sep  4 13:45:24\n</code></pre>\n\n<p>I am using a surface pro 4 with windows 10 pro. Version of Emacs is 25.1.1. I have been searching the internet but was not able to find anything, so any help will be appreciated. Thanks! </p>\n"}, {"tags": ["haskell", "syntax"], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 6, "creation_date": 1504551070, "post_id": 46042649, "comment_id": 79045521, "body": "Yes. Please don&#39;t write <code>f(x)</code> style function applications though, also not for number arguments \u2013 it just keeps up the confusion."}], "tags": [], "owner": {"reputation": 5469, "user_id": 598940, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/3665d076aec49bf74e33d162bde6a710?s=128&d=identicon&r=PG", "display_name": "Alec", "link": "https://stackoverflow.com/users/598940/alec"}, "is_accepted": true, "score": 7, "last_activity_date": 1504550797, "creation_date": 1504550797, "answer_id": 46042649, "question_id": 46042545, "link": "https://stackoverflow.com/questions/46042545/learning-haskell-syntax/46042649#46042649", "title": "Learning Haskell syntax", "body": "<p>All functions in Haskell are curried, meaning that they actually only take one parameter. When functions take two parameters, like <code>f a b</code> what's actually happening is <code>(f a) b</code>: <code>f a</code> is returning a function that is then applied to <code>b</code>.</p>\n\n<p>So <code>add 4</code> is the same as <code>add(3) . (+1)</code>. <code>(+1)</code> is syntax for a function that takes its input and adds 1 to it. The <code>.</code> is a way of composing functions: <code>(f . g) x</code> is the same as <code>f (g x)</code>. So <code>add(3) . (+1)</code> first adds 1 to its argument and then calls <code>add(3)</code> on the result.</p>\n\n<p><code>add(3)</code> is then expanded to <code>add(2) . (+1)</code>, and this continues recursively until <code>add 0</code>, which evaluates to <code>id</code>. <code>id</code> is the identity function, which just returns whatever you pass to it. So <code>add 0 x</code> is <code>id x</code> is <code>x</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": false, "score": 5, "last_activity_date": 1504551434, "creation_date": 1504551434, "answer_id": 46042737, "question_id": 46042545, "link": "https://stackoverflow.com/questions/46042545/learning-haskell-syntax/46042737#46042737", "title": "Learning Haskell syntax", "body": "<p>I like Alec's answer. Usually when I see these type of code, I\nmanipulate them in these steps. Original code:</p>\n\n<pre><code>add 0 = id\nadd x = add(x-1) . (+1)\n</code></pre>\n\n<p>Let's translate it to a much easier form:</p>\n\n<pre><code>add :: Int -&gt; Int -&gt; Int\nadd 0 num = id num\nadd num1 = add (num1 - 1) . (\\num2 -&gt; num2 + 1)\n</code></pre>\n\n<p>More easier translation:</p>\n\n<pre><code>add :: Int -&gt; Int -&gt; Int\nadd 0 num = id num\nadd num1 = \\num3 -&gt; add (num1 - 1) ((\\num2 -&gt; num2 + 1) num3)\n</code></pre>\n\n<p>Another transformation:</p>\n\n<pre><code>add :: Int -&gt; Int -&gt; Int\nadd 0 num = id num\nadd num1 = \\num3 -&gt; add (num1 - 1) (num3 + 1)\n</code></pre>\n\n<p>Final transformation:</p>\n\n<pre><code>add :: Int -&gt; Int -&gt; Int\nadd 0 num = id num\nadd num1 num3 = add (num1 - 1) (num3 + 1)\n</code></pre>\n\n<p>The <code>.</code> is a function composition operator. <code>(+1)</code> is a special syntax\nand represents <code>\\x -&gt; x + 1</code>.</p>\n"}], "owner": {"reputation": 391, "user_id": 7329781, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92251f1c532ae10fd9a214a46cd9b49f?s=128&d=identicon&r=PG&f=1", "display_name": "Anton Ostrouhhov", "link": "https://stackoverflow.com/users/7329781/anton-ostrouhhov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 46042649, "answer_count": 2, "score": 1, "last_activity_date": 1504586062, "creation_date": 1504550246, "last_edit_date": 1504586062, "question_id": 46042545, "link": "https://stackoverflow.com/questions/46042545/learning-haskell-syntax", "title": "Learning Haskell syntax", "body": "<p>I learn Haskell, but got stuck on one thing:</p>\n\n<pre><code>add 0 = id\nadd x = add(x-1) . (+1)\n</code></pre>\n\n<p>This function adds one argument to another by adding 1 to the first argument and subtracting 1 from the second argument.</p>\n\n<pre><code>*Main&gt; add 4 2\n6\n</code></pre>\n\n<p>But, I do not really understand how does it work! Can anybody explain WHY we write 2 numbers after 'add' (while it is described only with one parameter 'x'), WHAT do the '.' and '(+1)' in the second line mean and HOW does all this work?</p>\n\n<p>Thank You!</p>\n\n<p>UPD: Thanks again for all the answers! Now I understand how it works :)</p>\n"}, {"tags": ["haskell", "tcp", "haskell-snap-framework"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1504544225, "post_id": 46041262, "comment_id": 79043122, "body": "I doubt this is a haskell specific question. This may help you:   <a href=\"https://stackoverflow.com/a/6162238/1651941\">stackoverflow.com/a/6162238/1651941</a>"}, {"owner": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1504545099, "post_id": 46041262, "comment_id": 79043454, "body": "It might not be haskell-specific, except that I&#39;m looking for haskell web frameworks that make detecting this possible. But in any case, I&#39;m not dealing with web browsers and wanting to know when a page is closed. I&#39;m dealing with HTTP clients that have <i>an open TCP connection</i> to the server waiting for the response to a POST. That&#39;s totally different than what that question addresses."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1504545264, "post_id": 46041262, "comment_id": 79043521, "body": "Ah okay. I assumed it was only browser based. If you find a solution at the TCP protocol level, I guess the solution should be easily translatable to Haskell. Let&#39;s see. :)"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504565179, "post_id": 46041262, "comment_id": 79049583, "body": "Would using websockets be an option?"}, {"owner": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "reply_to_user": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504607643, "post_id": 46041262, "comment_id": 79064908, "body": "@epsilonhalbe That&#39;d mean an even more complicated client design than the suggestion for a 202 response. I don&#39;t understand why I can&#39;t, in Haskell, get the same things people get in the .Net world with <code>ClientDisconnectedTo\u200c\u200bken</code> or <code>Response.IsClientConnected</code>."}], "answers": [{"comments": [{"owner": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "edited": false, "score": 0, "creation_date": 1504549413, "post_id": 46042258, "comment_id": 79044962, "body": "Unfortunately, that greatly complicates the client - in that case, we can&#39;t rely on some supervising process to simply kill the client when it determines that the client is operating on now-outdated information. Also, it is often very hard to predict before the calculation is underway whether this input is going to finish in 0.1 seconds, 5 seconds, or 50 seconds. I really don&#39;t need the extra fine-grained control on calculations one can get from that sort of submit-and-poll design; I just need a simple way to detect that the client isn&#39;t waiting for an answer anymore."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "edited": false, "score": 0, "creation_date": 1504549615, "post_id": 46042258, "comment_id": 79045037, "body": "@DanielMartin Fair enough. I wasn&#39;t certain (at all) that this answer would be useful, but that was just what came readily to mind. If it doesn&#39;t fit your scenario, it doesn&#39;t fit."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 2, "last_activity_date": 1504548792, "last_edit_date": 1592644375, "creation_date": 1504548792, "answer_id": 46042258, "question_id": 46041262, "link": "https://stackoverflow.com/questions/46041262/in-haskell-how-can-i-abort-a-calculation-when-a-web-client-disconnects/46042258#46042258", "title": "In Haskell, how can I abort a calculation when a web client disconnects", "body": "<p>Assuming that 'web service' means HTTP(S)-based clients, one option is to use a  RESTful approach. Instead of assuming that clients are going to stay connected, the service could accept the request and return <code>202 Accepted</code>. As the <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.3\" rel=\"nofollow noreferrer\">HTTP status code specification</a> outlines:</p>\n<blockquote>\n<p>The request has been accepted for processing, but the processing has not been completed [...]</p>\n<p>The 202 response is intentionally non-committal. Its purpose is to allow a server to accept a request for some other process (perhaps a batch-oriented process that is only run once per day) without requiring that the user agent's connection to the server persist until the process is completed. The entity returned with this response SHOULD include an indication of the request's current status and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.</p>\n</blockquote>\n<p>The server immediately responds with a <code>202 Accepted</code> response, and also includes a URL that the client can use to poll for status. One option is to put this URL in the response's <code>Location</code> header, but you can also put the URL in a link in the response's body.</p>\n<p>The client can poll the status URL for status. Once the calculation finishes, the status resource can provide a link to the finished result.</p>\n<p>You can add cache headers to the status resource and final result if you're concerned that the clients will be polling too hard.</p>\n<p><a href=\"http://amzn.to/18aNOla\" rel=\"nofollow noreferrer\">REST in Practice</a> outlines the general concepts, while the <a href=\"http://amzn.to/YFnkRg\" rel=\"nofollow noreferrer\">RESTful Web Services Cookbook</a> has lots of good details.</p>\n<p>I'm not saying that you can't do something with either HTTP or TCP/IP (I don't know), but if you can't, then the above is a tried-and-true solution to similar problems.</p>\n<p>Obviously, this is completely independent on programming language, but it's been my experience that <a href=\"http://blog.ploeh.dk/2016/12/16/from-rest-to-algebraic-data\" rel=\"nofollow noreferrer\">REST and algebraic data types go well together</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "is_accepted": true, "score": 2, "last_activity_date": 1505647500, "last_edit_date": 1505647500, "creation_date": 1505146117, "answer_id": 46159969, "question_id": 46041262, "link": "https://stackoverflow.com/questions/46041262/in-haskell-how-can-i-abort-a-calculation-when-a-web-client-disconnects/46159969#46159969", "title": "In Haskell, how can I abort a calculation when a web client disconnects", "body": "<p>So I found an answer that works for me and it might work for someone else.</p>\n\n<p>It turns out that you can in fact mess around enough with the internals of Warp to do this, but then what you're left with is a basic version of Warp and if you need things like logging, etc., will need to add other packages on to that.</p>\n\n<p>Also, note that so-called \"half-closed\" connections (when the client closes their sending end, but is still waiting for data) will be detected as closed, interrupting your calculation. I don't know of any HTTP clients that deal in half-closed connections, but just something to be aware of.</p>\n\n<p>Anyway, what I did was first copy the functions <code>runSettings</code> and <code>runSettingsSocket</code> exposed by <code>Network.Wai.Handler.Warp</code> and <code>Network.Wai.Handler.Warp.Internal</code> and made versions that called a function I supplied instead of <code>WarpI.socketConnection</code>, so that I have the signature:</p>\n\n<pre><code>runSettings' :: Warp.Settings -&gt; (Socket -&gt; IO (IO WarpI.Connection))\n             -&gt; Wai.Application -&gt; IO ()\n</code></pre>\n\n<p>This required copying out a few helper methods, like <code>setSocketCloseOnExec</code> and <code>windowsThreadBlockHack</code>. The double-<code>IO</code> signature there might look weird, but it's what you want - the outer <code>IO</code> is run in the main thread (that calls <code>accept</code>) and the inner <code>IO</code> is run in the per-connection thread that is forked after <code>accept</code> returns. The original <code>Warp</code> function <code>runSettings</code> is equivalent to:</p>\n\n<pre><code>\\set -&gt; runSettings' set (WarpI.socketConnection &gt;=&gt; return . return)\n</code></pre>\n\n<p>Then I did:</p>\n\n<pre><code>data ClientDisappeared = ClientDisappeared deriving (Show, Eq, Enum, Ord)\ninstance Exception ClientDisappeared\n\nrunSettingsSignalDisconnect :: Warp.Settings -&gt; Wai.Application -&gt; IO ()\nrunSettingsSignalDisconnect set =\n  runSettings' set (WarpI.socketConnection &gt;=&gt; return . wrapConn)\n  where\n    -- Fork a 'monitor' thread that does nothing but attempt to\n    -- perform a read from conn in a loop 1/sec, and wrap the receive\n    -- methods on conn so that they first consume from the stuff read\n    -- by the monitoring thread. If the monitoring thread sees\n    -- end-of-file (signaled by an empty string read), raise\n    -- ClientDisappered on the per-connection thread.\n    wrapConn conn = do\n      tid &lt;- myThreadId\n      nxtBstr &lt;- newEmptyMVar :: IO (MVar ByteString)\n      semaphore &lt;- newMVar ()\n      readerCount &lt;- newIORef (0 :: Int)\n      monitorThread &lt;- forkIO (monitor tid nxtBstr semaphore readerCount)\n      return $ conn {\n        WarpI.connClose = throwTo monitorThread ClientDisappeared\n                          &gt;&gt; WarpI.connClose conn\n        , WarpI.connRecv = newRecv nxtBstr semaphore readerCount\n        , WarpI.connRecvBuf = newRecvBuf nxtBstr semaphore readerCount\n        }\n      where\n        newRecv :: MVar ByteString -&gt; MVar () -&gt; IORef Int\n                -&gt; IO ByteString\n        newRecv nxtBstr sem readerCount =\n          bracket_\n          (atomicModifyIORef' readerCount $ \\x -&gt; (succ x, ()))\n          (atomicModifyIORef' readerCount $ \\x -&gt; (pred x, ()))\n          (withMVar sem $ \\_ -&gt; do w &lt;- tryTakeMVar nxtBstr\n                                   case w of\n                                     Just w' -&gt; return w'\n                                     Nothing -&gt; WarpI.connRecv conn\n          )\n\n        newRecvBuf :: MVar ByteString -&gt; MVar () -&gt; IORef Int\n                   -&gt; WarpI.Buffer -&gt; WarpI.BufSize -&gt; IO Bool\n        newRecvBuf nxtBstr sem readerCount buf bufSize =\n          bracket_\n          (atomicModifyIORef' readerCount $ \\x -&gt; (succ x, ()))\n          (atomicModifyIORef' readerCount $ \\x -&gt; (pred x, ()))\n          (withMVar sem $ \\_ -&gt; do\n              (fulfilled, buf', bufSize') &lt;-\n                if bufSize == 0 then return (False, buf, bufSize)\n                else\n                  do w &lt;- tryTakeMVar nxtBstr\n                     case w of\n                       Nothing -&gt; return (False, buf, bufSize)\n                       Just w' -&gt; do\n                         let wlen = B.length w'\n                         if wlen &gt; bufSize\n                           then do BU.unsafeUseAsCString w' $ \\cw' -&gt;\n                                     copyBytes buf (castPtr cw') bufSize\n                                   putMVar nxtBstr (B.drop bufSize w')\n                                   return (True, buf, 0)\n                           else do BU.unsafeUseAsCString w' $ \\cw' -&gt;\n                                     copyBytes buf (castPtr cw') wlen\n                                   return (wlen == bufSize, plusPtr buf wlen,\n                                           bufSize - wlen)\n              if fulfilled then return True\n                else WarpI.connRecvBuf conn buf' bufSize'\n          )\n        dropClientDisappeared :: ClientDisappeared -&gt; IO ()\n        dropClientDisappeared _ = return ()\n        monitor tid nxtBstr sem st =\n          catch (monitor' tid nxtBstr sem st) dropClientDisappeared\n\n        monitor' tid nxtBstr sem st = do\n          (hitEOF, readerCount) &lt;- withMVar sem $ \\_ -&gt; do\n            w &lt;- tryTakeMVar nxtBstr\n            case w of\n              -- No one picked up our bytestring from last time\n              Just w' -&gt; putMVar nxtBstr w' &gt;&gt; return (False, 0)\n              Nothing -&gt; do\n                w &lt;- WarpI.connRecv conn\n                putMVar nxtBstr w\n                readerCount &lt;- readIORef st\n                return (B.null w, readerCount)\n          if hitEOF &amp;&amp; (readerCount == 0)\n            -- Don't signal if main thread is also trying to read -\n            -- in that case, main thread will see EOF directly\n            then throwTo tid ClientDisappeared\n            else do threadDelay oneSecondInMicros\n                    monitor' tid nxtBstr sem st\n        oneSecondInMicros = 1000000\n</code></pre>\n"}], "owner": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 0, "accepted_answer_id": 46159969, "answer_count": 2, "score": 11, "last_activity_date": 1505647500, "creation_date": 1504543285, "last_edit_date": 1504657244, "question_id": 46041262, "link": "https://stackoverflow.com/questions/46041262/in-haskell-how-can-i-abort-a-calculation-when-a-web-client-disconnects", "title": "In Haskell, how can I abort a calculation when a web client disconnects", "body": "<p>I have a Haskell-based web service that performs a calculation that for some input can take a really long time to finish. (\"really long\" here means over a minute)</p>\n\n<p>Because performing that calculation takes all the CPU available on the server, I place incoming requests in a queue (well, actually a stack for reasons that have to do with the typical client, but that's besides the point) when they arrive and service them when the currently running calculation finishes.</p>\n\n<p>My problem is that the clients don't always wait long enough, and sometimes time out on their end, disconnect, and try a different server (well, they try again and hit the elb, and usually get a different instance). Also, occasionally the calculation the web client was asking for will become obsolete because of external factors and the web client will be killed.</p>\n\n<p>In those cases I'd really like to be able to detect that the web client has gone away before I pull the next request off the stack and start the (expensive) calculation. Unfortunately, my experience with <a href=\"https://hackage.haskell.org/package/snap-server\" rel=\"nofollow noreferrer\">snap</a> leads me to believe that there's no way in that framework to ask \"is the client's TCP connection still connected?\" and I haven't found any documentation for other web frameworks that cover the \"client disconnected\" case.</p>\n\n<p>So is there a Haskell web framework that makes it easy to detect whether a web client has disconnected? Or failing that, is there one that at least makes it possible?</p>\n\n<p>(I understand that it may not be possible to be absolutely certain in all cases whether a TCP client is still there without sending data to the other end; however, when the client actually sends RST packets to the server and the server's framework doesn't let the application code determine that the connection is gone, that's a problem)</p>\n\n<hr>\n\n<p>Incidentally, though one might suspect that <a href=\"https://hackage.haskell.org/package/warp\" rel=\"nofollow noreferrer\">warp's</a> <code>onClose</code> handler would let you do this, this fires only when a response is ready and written to the client so is useless as a way of aborting a calculation in progress. There also seems to be no way to get access to the accepted socket so as to set <code>SO_KEEPALIVE</code> or similar. (There are ways to access the initial listening socket, but not the accepted one)</p>\n"}, {"tags": ["haskell", "yesod", "yesod-forms"], "comments": [{"owner": {"reputation": 558, "user_id": 1457136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e1f8148bbb8ea15c4b7c02893c99cab?s=128&d=identicon&r=PG", "display_name": "Jean-Baptiste Potonnier", "link": "https://stackoverflow.com/users/1457136/jean-baptiste-potonnier"}, "edited": false, "score": 0, "creation_date": 1504547781, "post_id": 46037708, "comment_id": 79044417, "body": "I don&#39;t know anything from yesod, but I would try my chance with something like <code>optionsPersistKey</code> from <a href=\"http://hackage.haskell.org/package/yesod-form-1.4.15/docs/Yesod-Form-Fields.html#g:4\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/yesod-form-1.4.15/docs/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": false, "score": 1, "last_activity_date": 1504533519, "creation_date": 1504533519, "answer_id": 46038643, "question_id": 46037708, "link": "https://stackoverflow.com/questions/46037708/yesod-form-with-foreign-key/46038643#46038643", "title": "Yesod - Form with foreign key", "body": "<p>If you are working with a SQL backend, there is <code>toSqlKey</code> in <a href=\"https://www.stackage.org/haddock/lts-9.3/persistent-2.7.0/Database-Persist-Sql.html#v:toSqlKey\" rel=\"nofollow noreferrer\">Database.Persist.Sql</a> module. Since you are given <code>Text</code>, you first need to convert it into <code>Int64</code> using <a href=\"https://hackage.haskell.org/package/text-1.2.2.2/docs/Data-Text-Read.html\" rel=\"nofollow noreferrer\">Data.Text.Read</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "is_accepted": true, "score": 1, "last_activity_date": 1504682052, "creation_date": 1504682052, "answer_id": 46069014, "question_id": 46037708, "link": "https://stackoverflow.com/questions/46037708/yesod-form-with-foreign-key/46069014#46069014", "title": "Yesod - Form with foreign key", "body": "<p>For the records, this is how I solved it in the end</p>\n\n<p>I had to create a new field</p>\n\n<pre><code>userIdField :: (Monad m, RenderMessage (HandlerSite m) FormMessage) =&gt; Field m UserId\nuserIdField = Field\n    { fieldParse = parseHelper $ \\s -&gt;\n        case signed decimal s of\n            Right (a, \"\") -&gt; Right $ toSqlKey a\n            _ -&gt; Left $ MsgInvalidInteger s\n    , fieldView = \\_ _ _ _ _ -&gt; \"\"\n    , fieldEnctype = UrlEncoded\n    }\n</code></pre>\n\n<p>and then use it like</p>\n\n<pre><code>&lt;*&gt; ireq userIdField \"userId\"\n</code></pre>\n"}], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "accepted_answer_id": 46069014, "answer_count": 2, "score": 1, "last_activity_date": 1504682052, "creation_date": 1504530204, "question_id": 46037708, "link": "https://stackoverflow.com/questions/46037708/yesod-form-with-foreign-key", "title": "Yesod - Form with foreign key", "body": "<p>I am developing my first application with Yesod and I am creating some CRUD api to start.</p>\n\n<p>I have a model that looks like</p>\n\n<pre><code>User json\n    ...\n\nActivity json\n    userId UserId\n    ...\n</code></pre>\n\n<p>where <code>userId</code> is a foreign key.</p>\n\n<p>I need to create an endpoint to be able to create a new Activity and the client needs to be able to specify the <code>userId</code>.</p>\n\n<p>To do this I am using a form like</p>\n\n<pre><code>postCreateActivityR :: Hadler Value\npostCreateActivityR = do\n    activity &lt;- runInputPost $ Activity\n        &lt;$&gt; ...\n        &lt;*&gt; ireq textField \"userId\"\n    ...\n</code></pre>\n\n<p>Doing so I get an error like the following:</p>\n\n<pre><code>Couldn't match type \u2018Text\u2019 with \u2018Key User\u2019 expected type: FormInput (HandlerT App IO) (Key User)\n</code></pre>\n\n<p>Is there a standard way to solve this?</p>\n"}, {"tags": ["haskell", "types", "recursive-type"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1504526590, "post_id": 46036603, "comment_id": 79033367, "body": "But you add <code>n</code> twice as parameter?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1504526702, "post_id": 46036603, "comment_id": 79033435, "body": "And the reason why this does not compile is because the output type would be <code>Num a =&gt; [a -&gt; [a -&gt; [a -&gt; [a -&gt; ...]]]]</code> (infinite type recursion)."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "edited": false, "score": 1, "creation_date": 1504527362, "post_id": 46036747, "comment_id": 79033820, "body": "Unfortunately, the type <code>T</code> is no longer particularly informative."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504529826, "post_id": 46036747, "comment_id": 79035289, "body": "@ftor What kind of information do you want to preserve? What kind of type would you expect?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "edited": false, "score": 0, "creation_date": 1504534294, "post_id": 46036747, "comment_id": 79038032, "body": "I just meant that with hiding the recursive type the type annotation is no longer particularly useful to conclude the space of possible computations from it - at least in this very case. You could have chosen a more meaningful name for the newtype, but still would exchange a type signature with a simple name."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504535131, "post_id": 46036747, "comment_id": 79038527, "body": "@ftor I see. Below leftaroundabout provides a more informative type expression like <code>Fix (ListT ((-&gt;) Int))</code>. In the general case, we would need type-level functions, like <code>Fix (\\T -&gt; (Int -&gt; [T]))</code> but these are not supported by Haskell."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1504527355, "last_edit_date": 1504527355, "creation_date": 1504526957, "answer_id": 46036747, "question_id": 46036603, "link": "https://stackoverflow.com/questions/46036603/how-to-define-a-function-type-of-a-non-recursive-functions-that-has-still-a-recu/46036747#46036747", "title": "How to define a function type of a non-recursive functions that has still a recursive type", "body": "<p>You need to define an explicit recursive type for that.</p>\n\n<pre><code>newtype T = T (Int -&gt; [T])\n\nisZero :: T\nisZero = T (\\n -&gt; if n == 0 then [] else [isZero])\n</code></pre>\n\n<p>The price to pay is the wrapping/unwrapping of the <code>T</code> constructor, but it is feasible.</p>\n\n<p>If you want to emulate a Javascript-like untyped world (AKA unityped, or dynamically typed), you can even use</p>\n\n<pre><code>data Value\n   = VInt Int\n   | VList [Value]\n   | VFun (Value -&gt; Value)\n   ...\n</code></pre>\n\n<p>(beware of a <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/bugs.html#bugs-in-ghc\" rel=\"nofollow noreferrer\">known bug</a>)</p>\n\n<p>In principle, every Javascript value can be represented by the above huge sum type. For example, application becomes something like</p>\n\n<pre><code>jsApply (VFun f) v = f v\njsApply _        _ = error \"Can not apply a non-function value\"\n</code></pre>\n\n<p>Note how static type checks are turned into dynamic checks, in this way. Similarly, static type errors are turned into runtime errors.</p>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "edited": false, "score": 0, "creation_date": 1504534797, "post_id": 46037323, "comment_id": 79038326, "body": "<code>fix</code> is indeed intriguing. This is a good opportunity for me to get a better idea of the concept. Thanks!"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1504529721, "last_edit_date": 1504529721, "creation_date": 1504528849, "answer_id": 46037323, "question_id": 46036603, "link": "https://stackoverflow.com/questions/46036603/how-to-define-a-function-type-of-a-non-recursive-functions-that-has-still-a-recu/46037323#46037323", "title": "How to define a function type of a non-recursive functions that has still a recursive type", "body": "<p>Chi showed how such an infinite type can be implemented: you need a newtype wrapper to \u201chide\u201d the infinite recursion.</p>\n\n<p>An intriguing alternative is to use a <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Data-Function.html#v:fix\" rel=\"nofollow noreferrer\">fixpoint formulation</a>. Recall that you could pseudo-define something recursive like your example as</p>\n\n<pre><code>isZero = fix $ \\f n -&gt; if n == 0 then [] else [f]\n</code></pre>\n\n<p>Likewise, the <em>type</em> can actually be expressed as a <a href=\"http://hackage.haskell.org/package/data-fix-0.0.7/docs/Data-Fix.html#v:Fix\" rel=\"nofollow noreferrer\">fixpoint</a> of the relevant functors, namely of the composition of <code>(Int -&gt;)</code> and <code>[]</code> (which in transformer gestalt is <a href=\"http://hackage.haskell.org/package/transformers/docs/Control-Monad-Trans-List.html#t:ListT\" rel=\"nofollow noreferrer\"><code>ListT</code></a>):</p>\n\n<pre><code>isZero :: Fix (ListT ((-&gt;) Int))\nisZero = Fix . ListT $ \\n -&gt; if n==0 then [] else [isZero]\n</code></pre>\n\n<p>Also worth noting is that you probably don't really want <code>ListT</code> there. <code>MaybeT</code> would be more natural if you only ever have zero or one elements. Even more nicely though, you can use the fact that functor fixpoints are <a href=\"https://stackoverflow.com/questions/17307416/difference-between-free-monads-and-fixpoints-of-functors\">closely related to the free monad</a>, which gives you exactly that <a href=\"http://hackage.haskell.org/package/free-3.4.2/docs/Control-Monad-Free.html#t:Free\" rel=\"nofollow noreferrer\">\u201cpossibly trivial\u201d alternative case</a>:</p>\n\n<pre><code>isZero' :: Free ((-&gt;) Int) ()\nisZero' = wrap $ \\n -&gt; if n==0 then Pure () else isZero'\n</code></pre>\n\n<p><code>Pure ()</code> is just <code>return ()</code> in the monad instance, so you can as well replace the <code>if</code> construct with the standard <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Control-Monad.html#v:when\" rel=\"nofollow noreferrer\"><code>when</code></a>:</p>\n\n<pre><code>isZero' = wrap $ \\n -&gt; when (n/=0) isZero'\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1504529721, "creation_date": 1504526427, "last_edit_date": 1504526770, "question_id": 46036603, "link": "https://stackoverflow.com/questions/46036603/how-to-define-a-function-type-of-a-non-recursive-functions-that-has-still-a-recu", "title": "How to define a function type of a non-recursive functions that has still a recursive type", "body": "<p>Given is a Javascript function like</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>const isNull = x =&gt; x === null ? [] : [isNull];\n</code></pre>\n\n<p>Such a function might be nonsense, which is not the question, though.</p>\n\n<p>When I tried to express a Haskell-like type annotation, I failed. Likewise with attempting to implement a similar function in Haskell:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>let isZero = \\n -&gt; if n == 0 then [] else [isZero] -- doesn't compile\n</code></pre>\n\n<p>Is there a term for this kind of functions that aren't recursive themselves, but recursive in their type? Can such functions be expressed only in dynamically typed languages?</p>\n\n<p>Sorry if this is obvious - my Haskell knowledge (including strict type systems) is rather superficial.</p>\n"}, {"tags": ["haskell", "duplicates"], "comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1504646093, "post_id": 46035597, "comment_id": 79087678, "body": "What&#39;s your definition of duplicate? Same elements in a different order? Sounds like you should be using a <a href=\"https://hackage.haskell.org/package/multiset-0.3.3/docs/Data-MultiSet.html\" rel=\"nofollow noreferrer\">multiset</a> rather than a list for <code>[&quot;A1&quot;, &quot;A2&quot;, &quot;A3&quot;]</code>."}], "answers": [{"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 4, "last_activity_date": 1504526169, "last_edit_date": 1504526169, "creation_date": 1504523237, "answer_id": 46035734, "question_id": 46035597, "link": "https://stackoverflow.com/questions/46035597/filter-duplicate-elements-from-a-string-haskell/46035734#46035734", "title": "Filter Duplicate elements from a [[String]] Haskell", "body": "<p><a href=\"https://www.haskell.org/hoogle/?hoogle=nubBy\" rel=\"nofollow noreferrer\"><code>nubBy :: (a -&gt; a -&gt; Bool) -&gt; [a] -&gt; [a]</code></a> is a relevant function that removes duplicates from a list via an arbitrary equality test.</p>\n\n<p>A version of the function you're looking for is:</p>\n\n<pre><code>import Data.List (sort, nubBy)\n\nremoveDuplicates' :: Ord a =&gt; [[a]] -&gt; [[a]]\nremoveDuplicates' = nubBy (\\l1 l2 = sort l1 == sort l2)\n</code></pre>\n\n<p>Of course, this does require that <code>a</code> is an <code>Ord</code>, not just an <code>Eq</code>, as well as using <code>sort</code>, which is (as stated below) an expensive function. So it is certainly not ideal. However, I don't know specifically how you want to do the equality tests on those lists, so I'll leave the details to you.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 1, "last_activity_date": 1504525929, "creation_date": 1504525929, "answer_id": 46036458, "question_id": 46035597, "link": "https://stackoverflow.com/questions/46035597/filter-duplicate-elements-from-a-string-haskell/46036458#46036458", "title": "Filter Duplicate elements from a [[String]] Haskell", "body": "<p><a href=\"https://stackoverflow.com/a/46035734/67579\">@AJFarmar's answer</a> solves the issue. But it can be done a bit more efficient: since <code>sort</code> is an expensive function. We want to save on such function calls.</p>\n\n<p>We can use:</p>\n\n<pre><code>import Data.List(nubBy, sort)\nimport Data.Function(on)\n\nremoveDuplicates' :: Ord a =&gt; [[a]] -&gt; [[a]]\nremoveDuplicates' = map snd . nubBy ((==) `on` fst) . map ((,) =&lt;&lt; sort)\n</code></pre>\n\n<p>what we here do is first construct a <code>map ((,) =&lt;&lt; sort)</code>. This means that for every element <code>x</code> in the original list, we construct a tuple <code>(sort x,x)</code>. Now we will perform a <code>nubBy</code> on the first elements of the two tuples we want to sort. After we have sorted, we will perform a <code>map snd</code> where we - for every tuple <code>(sort x,x)</code> return the second item.</p>\n\n<p>We can generalize this by constructing a <code>nubOn</code> function:</p>\n\n<pre><code>import Data.List(nubBy)\nimport Data.Function(on)\n\nnubOn :: Eq b =&gt; (a -&gt; b) -&gt; [a] -&gt; [a]\nnubOn f = map snd . nubBy ((==) `on` fst) . map ((,) =&lt;&lt; f)\n</code></pre>\n\n<p>In that case <code>removeDuplicates'</code> is <code>nubOn sort</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1504645998, "post_id": 46063392, "comment_id": 79087634, "body": "If both lists are of length <code>n</code>, sorting then comparing is <code>O(n log n)</code>, but this check is <code>O(n ^ 2)</code>, strictly more expensive."}], "tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 0, "last_activity_date": 1504647437, "last_edit_date": 1504647437, "creation_date": 1504645851, "answer_id": 46063392, "question_id": 46035597, "link": "https://stackoverflow.com/questions/46035597/filter-duplicate-elements-from-a-string-haskell/46063392#46063392", "title": "Filter Duplicate elements from a [[String]] Haskell", "body": "<p>You may not even need to sort. You just need to see if all items are the same like;</p>\n\n<pre><code>\\xs ys -&gt; length xs == (length . filter (== True) $ (==) &lt;$&gt; xs &lt;*&gt; ys)\n</code></pre>\n\n<p>you just need to know that <code>(==) &lt;$&gt; [\"A1\",\"A2\",\"A3\"] &lt;*&gt; [\"A3\",\"A2\",\"A1\"]</code> would in fact return <code>[False,False,True,False,True,False,True,False,False]</code></p>\n\n<p>As per @rampion 's rightful comment let's take it further and import <code>Data.Set</code> then it gets pretty dandy.</p>\n\n<pre><code>import Data.Set as S\n\nequity :: Ord a =&gt; [a] -&gt; [a] -&gt; Bool\nequity = (. S.fromList) . (==) . S.fromList\n\n*Main&gt; equity [\"A1\",\"A2\",\"A3\"] [\"A3\",\"A2\",\"A1\"]\nTrue\n</code></pre>\n"}], "owner": {"reputation": 19, "user_id": 8553356, "user_type": "registered", "profile_image": "https://graph.facebook.com/10214462639623598/picture?type=large", "display_name": "Ishesh Gambhir", "link": "https://stackoverflow.com/users/8553356/ishesh-gambhir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 445, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1504647437, "creation_date": 1504522721, "last_edit_date": 1504594615, "question_id": 46035597, "link": "https://stackoverflow.com/questions/46035597/filter-duplicate-elements-from-a-string-haskell", "title": "Filter Duplicate elements from a [[String]] Haskell", "body": "<p>I have a list in the form <code>[[\"A1\",\"A1\",\"A1\"] .. [\"G3\",\"G3\",\"G3\"]]</code> which contains many duplicate elements like <code>[\"A1\",\"A2\",\"A3\"]</code> and <code>[\"A3\",\"A2\",\"A1\"]</code>.</p>\n\n<p>How do I filter out such duplicate elements?</p>\n\n<p>if check the above two elements for equality, it shows false</p>\n\n<pre><code>*Main&gt; [\"A1\",\"A2\",\"A3\"] == [\"A3\",\"A2\",\"A1\"]\nFalse\n</code></pre>\n"}, {"tags": ["postgresql", "haskell", "postgresql-simple"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 1, "last_activity_date": 1504518578, "last_edit_date": 1504518578, "creation_date": 1504518220, "answer_id": 46034356, "question_id": 46034204, "link": "https://stackoverflow.com/questions/46034204/haskell-postgresql-simple-how-to-access-specific-data-from-a-broader-query/46034356#46034356", "title": "haskell postgresql-simple, how to access specific data from a broader query", "body": "<p>You actually already process the result of the <code>IO [VarcharIntDate]</code>. You use <code>=&lt;&lt;</code> with <code>print</code>. This is equivalent to:</p>\n\n<pre><code>main = do  -- or another function\n    result &lt;- query_ conn \"select vc,i,d from varintdate\" :: IO [VarcharIntDate]\n    print result\n</code></pre>\n\n<p>You can process the result of <code>query_</code> by performing a <code>map</code>ping, or accessing the <em>n</em>-th element of the row like:</p>\n\n<pre><code>p = 2  -- sample p\n\nmain = do\n    res &lt;- query_ conn \"select vc,i,d from varintdate\" :: IO [VarcharIntDate]\n    print (map i res)  -- print all i's\n    print (d (res!!p)) -- print d of the p-th row\n</code></pre>\n\n<p>So here we can use <code>res!!p</code> to access the <code>p</code>-th row, and then call the <code>d</code> getter to obtain the <code>d</code> of that row.</p>\n\n<p>If you want to obtain all <code>i</code>'s you can use <code>map i</code>.</p>\n"}], "owner": {"reputation": 13, "user_id": 8557858, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WVRUT.jpg?s=128&g=1", "display_name": "John Brown", "link": "https://stackoverflow.com/users/8557858/john-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 229, "favorite_count": 0, "accepted_answer_id": 46034356, "answer_count": 1, "score": 1, "last_activity_date": 1504518578, "creation_date": 1504517642, "question_id": 46034204, "link": "https://stackoverflow.com/questions/46034204/haskell-postgresql-simple-how-to-access-specific-data-from-a-broader-query", "title": "haskell postgresql-simple, how to access specific data from a broader query", "body": "<p>How can i access the data that`s in my query [VarcharIntDate] ?</p>\n\n<pre><code>data VarcharIntDate = VarcharIntDate {\n  vc :: Maybe String,\n  i  :: Maybe Int,\n  d  :: Maybe Date\n} deriving (Show)\n\ninstance FromRow VarcharIntDate where\n  fromRow = VarcharIntDate &lt;$&gt; field &lt;*&gt; field &lt;*&gt; field\n</code></pre>\n\n<p>I understand how to print it, but I cant do much else with it because I don`t understand how to treat 'IO [VarcharIntDate]'</p>\n\n<pre><code>print =&lt;&lt; ( query_ conn \"select vc,i,d from varintdate\" :: IO [VarcharIntDate] )\n</code></pre>\n\n<p>but what I want to do is access 'd' from the n'th row of the returned [VarcharIntDate] or 'i' from all rows, so I can start pulling the data out  from the query and start working with it.</p>\n"}, {"tags": ["haskell", "unification", "coerce"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1504516404, "post_id": 46032348, "comment_id": 79027451, "body": "How about <code>member&#39; k s = member k (coerce s)</code>?"}, {"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1504526084, "post_id": 46032348, "comment_id": 79033073, "body": "Good thinking, But this gets quite verbose for <code>union</code> (where <code>MySet</code> occurs multiple times in the type) and is not possible at all for <code>fromList</code>."}, {"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 2, "creation_date": 1504531911, "post_id": 46032348, "comment_id": 79036553, "body": "I think this might be considerable a bug in GHC, and certainly worth a ticket. Or talk to Richard in Oxford :-)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 1, "creation_date": 1504597237, "post_id": 46032348, "comment_id": 79058345, "body": "@JoachimBreitner, I suspect this would be rather hard to fix. See my answer. Of course, you and Richard both know much more than I do."}], "answers": [{"comments": [{"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1504688507, "post_id": 46049040, "comment_id": 79102422, "body": "That sounds kind-of like what my gut told me, but I wasn&#39;t sure. Thanks! Using <code>-XTypeApplications</code> is rather tedious, but it works: <a href=\"https://github.com/sgraf812/pomaps/blob/6d077d3413c3fcc0de05955c2d6b9bd82c085a85/library/Data/POSet/Internal.hs\" rel=\"nofollow noreferrer\">github.com/sgraf812/pomaps/blob/&hellip;</a>"}, {"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1504688901, "post_id": 46049040, "comment_id": 79102740, "body": "Btw., I think the third and fourth <code>Coercible</code>s are switched. Not that it changes anything about the idea."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 1, "creation_date": 1504703294, "post_id": 46049040, "comment_id": 79113199, "body": "@SebastianGraf, if you&#39;re wrapping a whole module, you may find it easier to use full type signatures than type applications.  <code>foo = coerce (M.foo :: theoldthing this that) :: forall this that. thenewthing this that)</code>. More copy/paste that way, with less thinking about which type arguments go where."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 2, "last_activity_date": 1504603637, "last_edit_date": 1504603637, "creation_date": 1504595760, "answer_id": 46049040, "question_id": 46032348, "link": "https://stackoverflow.com/questions/46032348/coerce-and-instantiation-of-type-variables/46049040#46049040", "title": "`coerce` and instantiation of type variables", "body": "<pre><code>member :: Ord a =&gt; a -&gt; Map a b -&gt; Bool\nmember' :: Ord a =&gt; a -&gt; MySet a -&gt; Bool\n</code></pre>\n\n<p>GHC needs to accept</p>\n\n<pre><code>Coercible (Map a b) (MySet a)\n</code></pre>\n\n<p>It sees that</p>\n\n<pre><code>Coercible (MySet a) (Map a ())\n</code></pre>\n\n<p>which leaves it needing</p>\n\n<pre><code>Coercible (Map a ()) (Map a b)\n</code></pre>\n\n<p>which leads to</p>\n\n<pre><code>Coercible () b\n</code></pre>\n\n<p>But what is <code>b</code>? It's ambiguous. In this case, it doesn't matter what <code>b</code> is, because by parametricity, <code>member</code> can't possibly care. So it would be perfectly reasonable to choose <code>b ~ ()</code> and resolve the coercion trivially. But GHC generally doesn't perform such a parametricity analysis in type inference. I suspect it might be tricky to change that. Most especially, any time the type inference \"guesses\", there's a risk it might guess wrong and block up inference somewhere else. It's a big can of worms.</p>\n\n<p>As for your problem, I don't have a good solution. When you have several functions with similar patterns, you can abstract them out, but you'll still face significant annoyance.</p>\n"}, {"comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504648783, "post_id": 46060326, "comment_id": 79088709, "body": "NB: the OP is explicit that they are aware of the TypeApplications solution, but I think it&#39;s &#39;simple enough&#39; - so this answer is essentially &quot;no, there is no more elegant way&quot;. But this seems largely opinion based, so instead I phrase the answer itself as a (simple!) method which can be used to mechanically write such code without thinking hard about how to do so."}, {"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 1, "creation_date": 1504688721, "post_id": 46060326, "comment_id": 79102600, "body": "<code>:set -fprint-explicit-foralls</code> sounds like what I had reached for if I had known it when implementing <a href=\"https://github.com/sgraf812/pomaps/blob/6d077d3413c3fcc0de05955c2d6b9bd82c085a85/library/Data/POSet/Internal.hs\" rel=\"nofollow noreferrer\">github.com/sgraf812/pomaps/blob/&hellip;</a>. Thanks for your tips, but I think the other post is a more direct answer to the question."}], "tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": false, "score": 1, "last_activity_date": 1504632097, "creation_date": 1504632097, "answer_id": 46060326, "question_id": 46032348, "link": "https://stackoverflow.com/questions/46032348/coerce-and-instantiation-of-type-variables/46060326#46060326", "title": "`coerce` and instantiation of type variables", "body": "<p>The solution with <code>TypeApplications</code> is quite straightforward:</p>\n\n<pre><code>{-# LANGUAGE TypeApplications #-}\n\nimport Data.Coerce\nimport qualified Data.Map as M\n\nnewtype Set a = Set (M.Map a ())\n\nmember :: Ord a =&gt; a -&gt; Set a -&gt; Bool\nmember = coerce (M.member @_ @())\n\nunion :: Ord a =&gt; Set a -&gt; Set a -&gt; Set a\nunion = coerce (M.union @_ @())\n</code></pre>\n\n<p>Note that some functions will require more or less wildcards, e.g. </p>\n\n<pre><code>smap :: (Ord b) =&gt; (a -&gt; b) -&gt; Set a -&gt; Set b\nsmap = coerce (M.mapKeys @_ @_ @())\n</code></pre>\n\n<p>To determine how exactly you must specify the type applications (aside from trial and error), use </p>\n\n<pre><code>&gt;:set -fprint-explicit-foralls\n&gt;:i M.mapKeys\nM.mapKeys ::\n  forall k2 k1 a. Ord k2 =&gt; (k1 -&gt; k2) -&gt; M.Map k1 a -&gt; M.Map k2 a\n</code></pre>\n\n<p>The variable order you get from <code>:i</code> is the same one used by <code>TypeApplications</code>.</p>\n\n<p>Note that you can't use <code>coerce</code> for <code>fromList</code> - it isn't a limitation, it just doesn't make sense:</p>\n\n<pre><code>fromList :: Ord a =&gt; [a] -&gt; Set a\nfromList = coerce (M.fromList @_ @())\n</code></pre>\n\n<p>This gives the error</p>\n\n<pre><code>* Couldn't match representation of type `a' with that of `(a, ())'\n</code></pre>\n\n<p>The best you can do here is probably</p>\n\n<pre><code>fromList :: Ord a =&gt; [a] -&gt; Set a\nfromList = coerce (M.fromList @_ @()) . map (flip (,) ())\n</code></pre>\n"}], "owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 316, "favorite_count": 2, "accepted_answer_id": 46049040, "answer_count": 2, "score": 8, "last_activity_date": 1504632097, "creation_date": 1504510593, "last_edit_date": 1504526164, "question_id": 46032348, "link": "https://stackoverflow.com/questions/46032348/coerce-and-instantiation-of-type-variables", "title": "`coerce` and instantiation of type variables", "body": "<p>Consider the following GHCi session:</p>\n\n<pre><code>&gt;:set -XTypeApplications\n&gt;import Data.Map.Strict\n&gt;import GHC.Exts\n&gt;newtype MySet a = MySet (Map a ())\n&gt;let member' :: Ord a =&gt; a -&gt; MySet a -&gt; Bool; member' = coerce member\n\n&lt;interactive&gt;:21:57: error:\n    * Couldn't match representation of type `a0' with that of `()'\n        arising from a use of `coerce'\n    * In the expression: coerce member\n      In an equation for member': member' = coerce member\n&gt;let member' :: Ord a =&gt; a -&gt; MySet a -&gt; Bool; member' = coerce (member @_ @())\n</code></pre>\n\n<p>I have a hunch of what's going on here: The type-checker needs to satisfy <code>Coercible (Ord a =&gt; a -&gt; Map a b -&gt; Bool) (Ord a =&gt; a -&gt; MySet a -&gt; Bool)</code> and isn't able to instantiate <code>b</code> in this constraint to <code>()</code>.</p>\n\n<p>Is there a more elegant way than to do this with <code>-XTypeApplications</code>? </p>\n\n<p>Edit: I'm especially looking for solutions that deal with many occurences of <code>MySet a</code> in the type, for example <code>union :: Ord a =&gt; MySet a -&gt; MySet a -&gt; MySet a</code>.</p>\n"}, {"tags": ["haskell", "deriving"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1504511520, "post_id": 46031533, "comment_id": 79024981, "body": "How would you write the instance yourself? Even writing out the type signature will prove difficult, if you want to show any information about the <code>testPrm</code>. If you can&#39;t figure out how to do it, then GHC can&#39;t do it automatically for you. On the other hand, if you don&#39;t care about showing <code>testPrm</code>, then the instance is easy to write by hand and you don&#39;t need to derive it."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1504514402, "post_id": 46031533, "comment_id": 79026341, "body": "This involves writing a <code>Binary</code> instance for every <code>Generic</code>. It looks as a rather complex task. I think we can&#39;t realistically hope that the automagic deriving mechanism solved this for us. Perhaps we could manually write an easier instance if we use <code>Binary a</code> instead of <code>Generic a</code>?"}, {"owner": {"reputation": 375, "user_id": 5287908, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/w0QJd.png?s=128&g=1", "display_name": "QSpider", "link": "https://stackoverflow.com/users/5287908/qspider"}, "edited": false, "score": 0, "creation_date": 1504519122, "post_id": 46031533, "comment_id": 79029054, "body": "Maybe I&#39;m not correctly implementing my idea. I just want to have some type of data, which in turn contains a field with an unknown type. But the field type meets a certain requirement through type classes. And all of them should be (Show a, Eq a, Typeable a, Generic, ...)."}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 6, "last_activity_date": 1504532381, "creation_date": 1504532381, "answer_id": 46038338, "question_id": 46031533, "link": "https://stackoverflow.com/questions/46031533/derived-instance-in-haskell/46038338#46038338", "title": "Derived instance in Haskell", "body": "<blockquote>\n  <p>Is any way of using derived instance for such data?</p>\n</blockquote>\n\n<p>Yes. Do what GHC suggested, make a <em>standalone</em> deriving clause:</p>\n\n<pre><code>{-# LANGUAGE StandaloneDeriving, ExistentialQuantification #-}\n\ndata Test3D = forall a. (Show a)\n                =&gt; Test3D { testDt :: String\n                          , testPrm :: a\n                          }\n\nderiving instance Show Test3D\n</code></pre>\n\n<p>What you cannot do is derive an <code>Eq</code> instance, because different values may actually contain different types and it's only possible to compare these with a dynamic-cast hack through <code>Typeable</code>.</p>\n"}], "owner": {"reputation": 375, "user_id": 5287908, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/w0QJd.png?s=128&g=1", "display_name": "QSpider", "link": "https://stackoverflow.com/users/5287908/qspider"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 648, "favorite_count": 1, "accepted_answer_id": 46038338, "answer_count": 1, "score": 3, "last_activity_date": 1504532381, "creation_date": 1504507153, "last_edit_date": 1504532036, "question_id": 46031533, "link": "https://stackoverflow.com/questions/46031533/derived-instance-in-haskell", "title": "Derived instance in Haskell", "body": "<p>I would like to use derived instance like this:</p>\n\n<pre><code>data Test3D = forall a. (Show a, Eq a, Typeable a, Generic a)\n                =&gt; Test3D { testDt :: String\n                          , testPrm :: a\n                          }\n   deriving (Show, Eq, Typeable, Generic)\n\ninstance Binary (Test3D)\n$(deriveJSON defaultOptions ''Test3D)\n</code></pre>\n\n<p>But I received from GHC:</p>\n\n<pre><code>\u2022 Can't make a derived instance of \u2018Show Test3D\u2019:\n        Constructor \u2018Test3D\u2019 has existentials or constraints in its type\n        Possible fix: use a standalone deriving declaration instead\n\u2022 In the data declaration for \u2018Test3D\u2019\n</code></pre>\n\n<p>This way is very convenient for my project. I can not find the solution.</p>\n\n<p>Is any way of using derived instance for such data?</p>\n"}, {"tags": ["haskell", "ffi"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1504496609, "post_id": 46029930, "comment_id": 79019888, "body": "You don&#39;t, because 1) that&#39;s not a constant and 2) it&#39;s marked <code>static</code>, so every <code>.c</code> file that includes the header gets its own (private) copy. There&#39;s nothing for you to import there."}, {"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1504496682, "post_id": 46029930, "comment_id": 79019910, "body": "Point granted on the <code>static</code> bit, but what do you mean it&#39;s not a constant?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1504496775, "post_id": 46029930, "comment_id": 79019932, "body": "<code>Name = &quot;something else&quot;;</code> You can assign other values to it (or rather, to each of them (remember, multiple copies))."}, {"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1504496879, "post_id": 46029930, "comment_id": 79019952, "body": "Then what effect does the <code>const</code> have? Is that the pointer itself is not constant, but the character that it points to are (so that you can change what <code>Name</code> points to, but whatever it points to cannot itself be mutated)?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1504497255, "post_id": 46029930, "comment_id": 79020035, "body": "<a href=\"http://c-faq.com/ansi/constptrconst.html\" rel=\"nofollow noreferrer\">c-faq.com/ansi/constptrconst.html</a>"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1504497504, "post_id": 46029930, "comment_id": 79020078, "body": "@George <code>const char * </code> is a pointer to a <code>const char</code>, not a constant pointer. In any case, I think Haskell&#39;s FFI only works with functions. Why not just make a simple <code>get_Name</code> function? That is pretty easy to do, even with a <code>static</code> variable."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1504498300, "post_id": 46029930, "comment_id": 79020238, "body": "@Alec You can import (the address of) variables: <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch8.html#x15-1620008.5.1\" rel=\"nofollow noreferrer\">haskell.org/onlinereport/haskell2010/&hellip;</a>"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1504498385, "post_id": 46029930, "comment_id": 79020255, "body": "@melpomene Cool - thanks for pointing that out! TIL."}], "answers": [{"tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": false, "score": 2, "last_activity_date": 1504505305, "last_edit_date": 1504505305, "creation_date": 1504501598, "answer_id": 46030561, "question_id": 46029930, "link": "https://stackoverflow.com/questions/46029930/bringing-ffi-constants-into-a-haskell-project/46030561#46030561", "title": "Bringing FFI Constants into a Haskell Project", "body": "<p>As @melpomene points out, <code>static</code> variables cannot be used for FFI. Every translation unit that includes this header file will create its own non-exported copy of the static variable. Unsurprisingly, that means that <code>Name</code> won't even be present in a compiled object file.</p>\n\n<pre><code>$ cat c_file.c\nstatic const char * Name = \"Name_001\";\n$ gcc -O -c c_file.c\n$ objdump c_file.o\n\nc_file.o: file format Mach-O 64-bit x86-64\n\nSYMBOL TABLE:\n$\n</code></pre>\n\n<p>Compare this to a non-static <code>Name</code> variable:</p>\n\n<pre><code>$ cat c_file.c\nconst char * Name = \"Name_001\";\n$ gcc -O -c c_file.c\n$ objdump c_file.o\n\nc_file.o: file format Mach-O 64-bit x86-64\n\nSYMBOL TABLE:\n0000000000000010 g       __DATA,__data  _Name\n$\n</code></pre>\n\n<p>It goes without saying that you need <code>Name</code> to be in the symbol table to be imported in Haskell's FFI. Taking the second variant, importing <code>Name</code> becomes pretty easy:</p>\n\n<pre><code>{-# LANGUAGE ForeignFunctionInterface #-}\n\nimport Foreign.Storable\nimport Foreign.C.String\nimport Foreign.Ptr\n\nforeign import ccall \"&amp;Name\" c_Name :: Ptr CString\n\nname :: IO String\nname = peek c_Name &gt;&gt;= peekCString\n\nmain :: IO ()\nmain = do\n  n &lt;- name\n  putStrLn (\"Name: \" ++ n)\n</code></pre>\n\n<p>If you want to convince me that <code>Name</code> is actually a constant string, <a href=\"https://stackoverflow.com/questions/890535/what-is-the-difference-between-char-const-and-const-char\">you probably need <code>char const * const = \"Name_001;</code></a>. Then, feel free to toss an <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/System-IO-Unsafe.html#v:unsafeDupablePerformIO\" rel=\"nofollow noreferrer\"><code>unsafeDupablePerformIO</code></a> in the definition of <code>name</code>:</p>\n\n<pre><code>{-# LANGUAGE ForeignFunctionInterface #-}\n\nimport Foreign.Storable\nimport Foreign.C.String\nimport Foreign.Ptr\n\nimport System.IO.Unsafe\n\nforeign import ccall \"&amp;Name\" c_Name :: Ptr CString\n\nname :: String\nname = unsafeDupablePerformIO (peek c_Name &gt;&gt;= peekCString)\n\nmain :: IO ()\nmain = putStrLn (\"Name: \" ++ name)\n</code></pre>\n\n<p>In either case, you get the expected output:</p>\n\n<pre><code>$ gcc -O -c c_file.c\n$ ghc -O2 -Wall main.hs c_file.o\n[1 of 1] Compiling Main             ( main.hs, main.o )\nLinking main ...\n$ ./main\nName: Name_001\n</code></pre>\n"}], "owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 207, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1504505305, "creation_date": 1504495979, "question_id": 46029930, "link": "https://stackoverflow.com/questions/46029930/bringing-ffi-constants-into-a-haskell-project", "title": "Bringing FFI Constants into a Haskell Project", "body": "<p>If one has a constant value in a C/C++ header file that one wants to bring into a Haskell project:</p>\n\n<pre><code>static const char * Name = \"Name_001\";\n</code></pre>\n\n<p>How does one do so using Haskell's FFI functionality?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 3, "creation_date": 1504456755, "post_id": 46025613, "comment_id": 79010591, "body": "Start by explaining in words what this function is supposed to do."}, {"owner": {"reputation": 682, "user_id": 2558145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38af9d0ae909e5005b63fe59fc22e619?s=128&d=identicon&r=PG", "display_name": "infotoni91", "link": "https://stackoverflow.com/users/2558145/infotoni91"}, "reply_to_user": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1504457367, "post_id": 46025613, "comment_id": 79010780, "body": "@Code-Apprentice I hope now it&#39;s a little bit more obvious what i want to achieve"}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 5, "creation_date": 1504459008, "post_id": 46025613, "comment_id": 79011293, "body": "p.s. Since you have working code, your question is more appropriate at <a href=\"https://codereview.stackexchange.com\">Code Review</a>. You might find more tips there since this is exactly the type of question they expect."}, {"owner": {"reputation": 682, "user_id": 2558145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38af9d0ae909e5005b63fe59fc22e619?s=128&d=identicon&r=PG", "display_name": "infotoni91", "link": "https://stackoverflow.com/users/2558145/infotoni91"}, "reply_to_user": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1504459771, "post_id": 46025613, "comment_id": 79011502, "body": "@Code-Apprentice didn&#39;t know that. Thanks ;)"}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1504501971, "post_id": 46025613, "comment_id": 79021024, "body": "I just saw another simplification. See the last sentence in my most recent answer."}], "answers": [{"comments": [{"owner": {"reputation": 682, "user_id": 2558145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38af9d0ae909e5005b63fe59fc22e619?s=128&d=identicon&r=PG", "display_name": "infotoni91", "link": "https://stackoverflow.com/users/2558145/infotoni91"}, "edited": false, "score": 0, "creation_date": 1504458494, "post_id": 46025776, "comment_id": 79011131, "body": "Thanks! Would be nice to avoid the 4 nested functions :/"}, {"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "reply_to_user": {"reputation": 682, "user_id": 2558145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38af9d0ae909e5005b63fe59fc22e619?s=128&d=identicon&r=PG", "display_name": "infotoni91", "link": "https://stackoverflow.com/users/2558145/infotoni91"}, "edited": false, "score": 2, "creation_date": 1504458651, "post_id": 46025776, "comment_id": 79011178, "body": "@infotoni91 I was looking at that, too. The only thing that comes to mind is breaking them out into a <code>let</code> or <code>where</code> clause. This doesn&#39;t avoid the &quot;nesting&quot; but might make it easier to read."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 682, "user_id": 2558145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38af9d0ae909e5005b63fe59fc22e619?s=128&d=identicon&r=PG", "display_name": "infotoni91", "link": "https://stackoverflow.com/users/2558145/infotoni91"}, "edited": false, "score": 2, "creation_date": 1504465034, "post_id": 46025776, "comment_id": 79013172, "body": "@infotoni91 It&#39;s maybe a bit debatable whether this is clearer, but you could replace the nested calls with <code>foldr</code> like this: <code>foldr (\\curr_point curr_area -&gt; get_connected_area  habitat curr_point curr_area nullValue) new_area [(x + 1, y), (x - 1, y), (x, y + 1), (x, y - 1)]</code>. Also, if you change the <code>nullValue</code> argument so that it comes before the last two arguments, you can write (making <code>nullValue</code> the first argument): <code>foldr (get_connected_area  nullValue habitat) new_area [(x + 1, y), (x - 1, y), (x, y + 1), (x, y - 1)]</code>"}], "tags": [], "owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "is_accepted": true, "score": 8, "last_activity_date": 1504501949, "last_edit_date": 1504501949, "creation_date": 1504457595, "answer_id": 46025776, "question_id": 46025613, "link": "https://stackoverflow.com/questions/46025613/simplify-haskell-function/46025776#46025776", "title": "Simplify haskell function", "body": "<p>One small change is that you can use pattern matching for the variable <code>point</code>. This means you can use <code>(x, y)</code> instead of <code>point</code> in the function declaration:</p>\n\n<pre><code>get_connected_area habitat (x, y) area nullValue = ...\n</code></pre>\n\n<p>Now everywhere you have <code>fst point</code>, just put <code>x</code>, and everywhere you have <code>snd point</code>, put <code>y</code>.</p>\n\n<p>Another modification is to use more variables for subexpressions. This can help with the nested recursive calls. For example, make a variable for the inner-most nested call:</p>\n\n<pre><code>....\nwhere foo = get_connected_area habitat (x, y-1) new_area nullValue\n</code></pre>\n\n<p>Now just put <code>foo</code> instead of the call. This technique can now be repeated for the \"new\" inner-most call. (Note that you should pick a more descriptive name than <code>foo</code>. Maybe <code>down</code>?)</p>\n\n<p>Note that <code>not (x &gt;= y)</code> is the same as <code>x &lt; y</code>. Use this to simplify all of the conditions. Since these conditions test if a point is inside a bounding rectangle, most of this logic can be factored to a function <code>isIn :: (Int, Int) -&gt; (Int, Int) -&gt; (Int, Int) -&gt; Bool</code> which will make <code>get_connected_area</code> more readable.</p>\n"}, {"tags": [], "owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "is_accepted": false, "score": 5, "last_activity_date": 1504476909, "creation_date": 1504476909, "answer_id": 46028271, "question_id": 46025613, "link": "https://stackoverflow.com/questions/46025613/simplify-haskell-function/46028271#46028271", "title": "Simplify haskell function", "body": "<p>This would be my first quick pass through the function, and sort of the minimum that might pass a code review (just in terms of style):</p>\n\n<pre><code>getConnectedArea :: Eq a =&gt; [[a]] -&gt; a -&gt; (Int, Int) -&gt; [(Int,Int)] -&gt; [(Int,Int)]\ngetConnectedArea habitat nullValue = go where\n  go point@(x,y) area\n      | elem point area = area\n      | x &lt; 0 = area\n      | y &lt; 0 = area\n      | x &gt;= length habitat = area\n      | y &gt;= length (habitat!!0) = area\n      | ((habitat!!x)!!y) == nullValue = area\n      | otherwise = \n          foldr go (point : area) \n            [ (x+1, y), (x-1, y), (x, y+1), (x, y-1) ]\n</code></pre>\n\n<p>We bind <code>habitat</code> and <code>nullValue</code> once at the top level (clarifying what the recursive work is doing), remove indirection in the predicates, use camel-case (underdashes obscure where function application is happening), replace <code>generic_type</code> with <code>a</code> (using a noisy variable here actually has the opposite effect from the one you intended; I end up trying to figure out what special semantics you're trying to call out when the interesting thing is that the type doesn't matter (so long as it can be compared for equality)).</p>\n\n<p>At this point there are lots of things we can do:</p>\n\n<ul>\n<li>pretend we're writing real code and worry about asymptotics of treating lists as arrays (<code>!!</code>, and <code>length</code>) and sets (<code>elem</code>), and use proper array and set data structures instead</li>\n<li>move your bounds checking (and possible null value checking) into a new lookup function (the goal being to have only a single <code>... = area</code> clause if possible</li>\n<li>consider improvements to the algorithm: can we avoid recursively checking the cell we just came from algorithmically? can we avoid passing <code>area</code> entirely (making our search nicely lazy/\"productive\")? </li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 682, "user_id": 2558145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38af9d0ae909e5005b63fe59fc22e619?s=128&d=identicon&r=PG", "display_name": "infotoni91", "link": "https://stackoverflow.com/users/2558145/infotoni91"}, "edited": false, "score": 0, "creation_date": 1504559173, "post_id": 46030219, "comment_id": 79048120, "body": "Thanks, although I don&#39;t even know how to call your implementation. Any hint on the worker function? I&#39;m feeling like 10 years ago when I started programming. Haskell and FP are completely new to me...sorry."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 682, "user_id": 2558145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38af9d0ae909e5005b63fe59fc22e619?s=128&d=identicon&r=PG", "display_name": "infotoni91", "link": "https://stackoverflow.com/users/2558145/infotoni91"}, "edited": false, "score": 0, "creation_date": 1504565702, "post_id": 46030219, "comment_id": 79049688, "body": "@infotoni91 Ok I gave you an example.  And yes that is what it is like, I went through the same thing.  You&#39;ll get the hang of it in due time."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1504585532, "post_id": 46030219, "comment_id": 79053519, "body": "I&#39;m always a bit wary of <code>Set</code> performance. It might be interesting to benchmark <code>Set (Int,Int)</code> against <code>IntMap IntSet</code>, but of course that would require a large and realistic test case."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1504585778, "post_id": 46030219, "comment_id": 79053580, "body": "One more thing: for finite <code>xs</code>, <code>foldr c n xs = foldl (flip c) n (reverse xs)</code>. This suggests that perhaps you should use <code>foldl&#39;</code>, swap the order of arguments to <code>worker</code>, and if necessary hand-reverse the list in the definition of <code>neighbors</code>."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 2, "last_activity_date": 1504565671, "last_edit_date": 1504565671, "creation_date": 1504498599, "answer_id": 46030219, "question_id": 46025613, "link": "https://stackoverflow.com/questions/46025613/simplify-haskell-function/46030219#46030219", "title": "Simplify haskell function", "body": "<p>Here is my take:</p>\n\n<pre><code>import qualified Data.Set as Set\n\ntype Point = (Int, Int)\n\ngetConnectedArea :: (Point -&gt; Bool) -&gt; Point -&gt; Set.Set Point\ngetConnectedArea habitat = \\p -&gt; worker p Set.empty  \n          -- \\p is to the right of = to keep it out of the scope of the where clause\n    where\n    worker p seen\n      | p `Set.member` seen = seen\n      | habitat p = foldr worker (Set.insert p seen) (neighbors p)\n      | otherwise = seen\n\n    neighbors (x,y) = [(x-1,y), (x+1,y), (x,y-1), (x,y+1)]\n</code></pre>\n\n<p>What I've done</p>\n\n<ul>\n<li><code>foldr</code> over the neighbors, as some commenters suggested.</li>\n<li>Since the order of points doesn't matter, I use a <code>Set</code> instead of a list, so it's semantically a better fit and faster to boot.</li>\n<li>Named some helpful intermediate abstractions such as <code>Point</code> and <code>neighbors</code>.</li>\n<li>A better data structure for the habitat would also be good, since lists are linear time to access, maybe a 2D <code>Data.Array</code>&mdash;but as far as this function cares, all you need is an indexing function <code>Point -&gt; Bool</code> (out of bounds and null value are treated the same), so I've replaced the data structure parameter with the indexing function itself (this is a common transformation in FP).  </li>\n</ul>\n\n<p>We can see that it would also be possible to abstract away the <code>neighbors</code> function and then we would arrive at a very general graph traversal method</p>\n\n<pre><code>traverseGraph :: (Ord a) =&gt; (a -&gt; [a]) -&gt; a -&gt; Set.Set a\n</code></pre>\n\n<p>in terms of which you could write <code>getConnectedArea</code>. I recommend doing this for educational purposes&mdash;left as an exercise.</p>\n\n<hr>\n\n<p><strong>EDIT</strong></p>\n\n<p>Here's an example of how to call the function in terms of (almost) your old function:</p>\n\n<pre><code>import Control.Monad ((&lt;=&lt;))\n\n-- A couple helpers for indexing lists.\n\nindex :: Int -&gt; [a] -&gt; Maybe a\nindex _ [] = Nothing\nindex 0 (x:_) = x\nindex n (_:xs) = index (n-1) xs\n\nindex2 :: (Int,Int) -&gt; [[a]] -&gt; Maybe a\nindex2 (x,y) = index x &lt;=&lt; index y\n-- index2 uses Maybe's monadic structure, and I think it's quite pretty. \n-- But if you're not ready for that, you might prefer\nindex2' (x,y) xss\n  | Just xs &lt;- index y xss = index x xs\n  | otherwise = Nothing\n\ngetConnectedArea' :: (Eq a) =&gt; [[a]] -&gt; Point -&gt; a -&gt; [a]\ngetConnectedArea' habitat point nullValue = Set.toList $ getConnectedArea nonnull point\n    where\n    nonnull :: Point -&gt; Bool\n    nonnull p = case index2 p habitat of\n                  Nothing -&gt; False\n                  Just x -&gt; x /= nullValue\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 1, "last_activity_date": 1504641534, "creation_date": 1504641534, "answer_id": 46062512, "question_id": 46025613, "link": "https://stackoverflow.com/questions/46025613/simplify-haskell-function/46062512#46062512", "title": "Simplify haskell function", "body": "<p>OK i will try to simplify your code. However there are already good answers and that's why i will tackle this with a slightly more conceptual approach.</p>\n\n<p>I believe you could chose better data types. For instance <a href=\"https://hackage.haskell.org/package/matrix-0.3.5.0/docs/Data-Matrix.html\" rel=\"nofollow noreferrer\"><code>Data.Matrix</code></a> seems to provide an ideal data type in the place of your <code>[[generic_type]]</code> type. Also for coordinates i wouldn't chose a tuple type since tuple type is there to pack different types. It's functor and monad instances are not very helpful when it is chosen as a coordinate system. Yet since it seems <code>Data.Matrix</code> is just happy with tuples as coordinates i will keep them.</p>\n\n<p>OK your rephrased code is as follows;</p>\n\n<pre><code>import Data.Matrix\n\ngca :: Matrix Int -&gt; (Int, Int) -&gt; Int -&gt; [(Int,Int)]\ngca fld crd nil = let nbs = [id, subtract 1, (+1)] &gt;&gt;= \\f -&gt; [id, subtract 1, (+1)]\n                                                    &gt;&gt;= \\g -&gt; return (f,g)\n                                                     &gt;&gt;= \\(f,g) -&gt; return ((f . fst) crd, (g . snd) crd)\n                  in filter (\\(x,y) -&gt; fld ! (x,y) /= nil) nbs\n\n*Main&gt; gca (fromLists [[0,1,0],[1,1,1],[0,1,0],[1,0,0]]) (2,2) 0\n[(2,2),(2,1),(2,3),(1,2),(3,2)]\n</code></pre>\n\n<p>The first thing to note is, the <code>Matrix</code> data type is index <code>1</code> based. So we have our center point at <code>(2,2)</code>.</p>\n\n<p>The second is... we have a three element list of functions defined as  <code>[id, subtract 1, (+1)]</code>. The contained functions are all <code>Num a =&gt; a -&gt; a</code> type and i need them to define the surrounding pixels of the given coordinate including the given coordinate. So we have a line just like if we did;</p>\n\n<p><code>[1,2,3] &gt;&gt;= \\x -&gt; [1,2,3] &gt;&gt;= \\y -&gt; return [x,y]</code> would result <code>[[1,1],[1,2],[1,3],[2,1],[2,2],[2,3],[3,1],[3,2],[3,3]]</code> which, in our case,  would yield a 2 combinations of all functions in the place of the numbers 1,2 and 3.</p>\n\n<p>Which then we apply to our given coordinate one by one with a cascading instruction</p>\n\n<pre><code>&gt;&gt;= \\[f,g] -&gt; return ((f . fst) crd, (g . snd) crd)\n</code></pre>\n\n<p>which yields all neighboring coordinates.</p>\n\n<p>Then its nothing more than filtering the neighboring filters by checking if they are not equal to the <code>nil</code> value within out matrix.</p>\n"}], "owner": {"reputation": 682, "user_id": 2558145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38af9d0ae909e5005b63fe59fc22e619?s=128&d=identicon&r=PG", "display_name": "infotoni91", "link": "https://stackoverflow.com/users/2558145/infotoni91"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 575, "favorite_count": 1, "accepted_answer_id": 46025776, "answer_count": 4, "score": 8, "last_activity_date": 1504641534, "creation_date": 1504456623, "last_edit_date": 1504457329, "question_id": 46025613, "link": "https://stackoverflow.com/questions/46025613/simplify-haskell-function", "title": "Simplify haskell function", "body": "<p>I'm really struggling with Haskell atm.</p>\n\n<p>It took me almost 6 hours to write a function that does what I want. Unfortunately I'm not satisfied with the look of it.</p>\n\n<p>Could someone please give me any hints how to rewrite it?</p>\n\n<pre><code>get_connected_area :: Eq generic_type =&gt; [[generic_type]] -&gt; (Int, Int) -&gt; [(Int,Int)] -&gt; generic_type -&gt; [(Int,Int)]\nget_connected_area habitat point area nullValue\n  | elem point area = area\n  | not ((fst point) &gt;= 0) = area\n  | not ((snd point) &gt;= 0) = area\n  | not ((fst point) &lt; (length habitat)) = area\n  | not ((snd point) &lt; (length (habitat!!0))) = area\n  | (((habitat!!(fst point))!!(snd point))) == nullValue = area\n  | otherwise = \n    let new_area = point : area\n    in \n    get_connected_area habitat (fst point+1, snd point) (\n        get_connected_area habitat (fst point-1, snd point) (\n            get_connected_area habitat (fst point, snd point+1) (\n                get_connected_area habitat (fst point, snd point-1) new_area nullValue\n                ) nullValue\n            ) nullValue\n    ) nullValue\n</code></pre>\n\n<p>The function get's a [[generic_type]] (representing a landscape-map) and searches the fully connected area around a point that isn't equal to the given nullValue.</p>\n\n<p>Eg.:</p>\n\n<p>If the function gets called like this: </p>\n\n<p><code>get_connected_area [[0,1,0],[1,1,1],[0,1,0],[1,0,0]] (1,1) [] 0</code></p>\n\n<p>That literally means</p>\n\n<p><strong>0 1 0</strong><br/>\n<strong>1 1 1</strong><br/>\n<strong>0 1 0</strong><br/>\n<strong>1 0 0</strong><br/></p>\n\n<p>Represents a map (like google maps). Start from the point (coordinates) (1,1) I want to get all coordinates of the elements that form a connected area with the given point.</p>\n\n<p>The result therefore should be:</p>\n\n<p>0 <strong>1</strong> 0<br/>\n<strong>1 1 1</strong><br/>\n0 <strong>1</strong> 0<br/>\n1 0 0<br/></p>\n\n<p>And the corresponting return value (list of coordinates of bold 1s):</p>\n\n<p><code>[(2,1),(0,1),(1,2),(1,0),(1,1)]</code></p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 3, "creation_date": 1504488405, "post_id": 46022615, "comment_id": 79018431, "body": "Are you familiar with any OOP languages at all? <code>class C {int x;}; C i;</code> now <code>i.x</code> is an <code>int</code>, likewise if you have <code>i :: Identity Int</code> then <code>runIdentity i</code> is an <code>Int</code>. So if <code>i</code> is an <code>Identity Int</code> and <code>runIdentity i</code> is an <code>Int</code> then what is <code>runIdentity</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 1309, "user_id": 4121440, "user_type": "registered", "accept_rate": 89, "profile_image": "https://lh6.googleusercontent.com/-sa6Am0YxEy0/AAAAAAAAAAI/AAAAAAAAABg/4mikHQDhZbI/photo.jpg?sz=128", "display_name": "Oleg", "link": "https://stackoverflow.com/users/4121440/oleg"}, "edited": false, "score": 0, "creation_date": 1504436189, "post_id": 46022646, "comment_id": 79004625, "body": "But if I wanted <code>runIdentity</code> to be a function shouldn&#39;t I write <code>newtype Identity a =  Identity {runIdentity :: Identity a -&gt; a}</code> ?"}, {"owner": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "reply_to_user": {"reputation": 1309, "user_id": 4121440, "user_type": "registered", "accept_rate": 89, "profile_image": "https://lh6.googleusercontent.com/-sa6Am0YxEy0/AAAAAAAAAAI/AAAAAAAAABg/4mikHQDhZbI/photo.jpg?sz=128", "display_name": "Oleg", "link": "https://stackoverflow.com/users/4121440/oleg"}, "edited": false, "score": 4, "creation_date": 1504436451, "post_id": 46022646, "comment_id": 79004702, "body": "If you&#39;d write it like that, the type of <code>runIdentity</code> would be <code>Identity a -&gt; Identity a -&gt; a</code>. Since you&#39;re coming from OOP, think of it like this: You call a member function <code>foo.bar()</code>, which returns something of type <code>a</code>. You&#39;d think the function <code>bar()</code> has type <code>a</code>, but that wouldn&#39;t be a function now, would it? Instead, it uses the <code>foo</code> (which - for convenience - is of type <code>Identity a</code>) to return that <code>a</code>. Written in C for example, that&#39;d be <code>a bar(Identity foo)</code>, which clearly takes a parameter of type <code>Identity</code>: the object itself."}], "tags": [], "owner": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "is_accepted": true, "score": 10, "last_activity_date": 1504451306, "last_edit_date": 1504451306, "creation_date": 1504435645, "answer_id": 46022646, "question_id": 46022615, "link": "https://stackoverflow.com/questions/46022615/how-to-derive-the-type-for-haskell-record-fields/46022646#46022646", "title": "How to derive the type for Haskell record fields?", "body": "<p>You're right that <code>runIdentity</code> is but a simple field of type <code>a</code>. But the <em>type</em> of <code>runIdentity</code> is <code>Identity a -&gt; a</code>, since <code>runIdentity</code> is a function to extract that field out of a <code>Identity a</code>. You can't get the <code>runIdentity</code> out of a value without supplying which value to get it from, after all.</p>\n\n<p>Edit:\nTo expand a little on that OOP-analogy in the comments, think of a class</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>class Identity&lt;T&gt; {\n    public T runIdentity;\n}\n</code></pre>\n\n<p>This is the <code>Identity</code> monad, loosely translated to OOP code. The template argument <code>T</code> basically is your <code>a</code>; as such, <code>runIdentity</code> is of type <code>T</code>. To get that <code>T</code> from your object, you'd probably do something like</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>Identity&lt;int&gt; foo = new Identity&lt;int&gt;();\nint x = foo.runIdentity;\n</code></pre>\n\n<p>You see <code>runIdentity</code> as something of type <code>T</code>, but it's not really. You can't just do</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>int x = runIdentity; // Nope!\n</code></pre>\n\n<p>because - where to get the <code>runIdentity</code> from? Instead, think of this like doing</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>Identity&lt;int&gt; foo = new Identity&lt;int&gt;();\nint x = runIdentity(foo);\n</code></pre>\n\n<p>This shows what actually happens when you're calling a member; you have a function (your <code>runIdentity</code>) and supply it an object to use - IIRC this is what Python does with <code>def func(self)</code>. So instead of being plainly of type <code>T</code>, <code>runIdentity</code> is actually taking an <code>Identity&lt;T&gt;</code> as argument to return a <code>T</code>. </p>\n\n<p>Thus, it's of type <code>Identity a -&gt; a</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 3609, "user_id": 2565354, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/590ed3229d95cdcaa05a96028c586165?s=128&d=identicon&r=PG", "display_name": "badcook", "link": "https://stackoverflow.com/users/2565354/badcook"}, "is_accepted": false, "score": 4, "last_activity_date": 1504475844, "creation_date": 1504475844, "answer_id": 46028169, "question_id": 46022615, "link": "https://stackoverflow.com/questions/46022615/how-to-derive-the-type-for-haskell-record-fields/46028169#46028169", "title": "How to derive the type for Haskell record fields?", "body": "<p>Another way to see this is that record syntax in Haskell is basically just syntactic sugar over algebraic datatypes, i.e. records don't truly exist in Haskell, only algebraic datatypes do, with perhaps some additional syntactic niceties. Hence there isn't a notion of members the same way that classes have in a lot of OO languages.</p>\n\n<pre><code>data MyRecord = MyRecord { myInt :: Int, myString :: String }\n</code></pre>\n\n<p>really is just</p>\n\n<pre><code>data MyRecord Int String\n</code></pre>\n\n<p>with the additional functions</p>\n\n<pre><code>myInt :: MyRecord -&gt; Int\nmyInt (MyRecord x _) = x\n\nmyString :: MyRecord -&gt; String\nmyString (MyRecord _ y) = y\n</code></pre>\n\n<p>automatically defined.</p>\n\n<p>The only things that you could not do by yourself with normal algebraic datatypes that record syntax gives you are a nice way of making a copy of <code>MyRecord</code> that only has a subset of fields changed and a nice way of naming certain patterns.</p>\n\n<pre><code>copyWithNewInt :: Int -&gt; MyRecord -&gt; MyRecord\ncopyWithNewInt x r = r { myInt = x }\n\n-- Same thing as myInt, just written differently\nextractInt :: MyRecord -&gt; Int\nextractInt (MyRecord { myInt = x }) = x\n</code></pre>\n\n<p>Because this is just syntactic sugar over ordinary algebraic datatypes, you could always fall back to doing things the usual way.</p>\n\n<pre><code>-- This is a more verbose but also valid way of doing things\ncopyWithNewInt :: Int -&gt; MyRecord -&gt; MyRecord\ncopyWithNewInt x (MyRecord _ oldString) = MyRecord x oldString\n</code></pre>\n\n<p>Incidentally this is why some otherwise ridiculous-seeming constraints exist (the most prominent is that you can't have another type defined with record syntax with <code>myInt</code> again, otherwise you're creating two functions in the same scope with the same name, which Haskell does not allow).</p>\n\n<p>Therefore</p>\n\n<pre><code>newtype Identity a = Identity {runIdentity :: a} deriving Show\n</code></pre>\n\n<p>is equivalent (minus convenient update syntax which doesn't really matter when you have only one field) to</p>\n\n<pre><code>newtype Identity a = Identity a deriving Show\n\nrunIdentity :: Identity a -&gt; a\nrunIdentity (Identity x) = x\n</code></pre>\n\n<p>Using record syntax just compresses all that into a single line (and perhaps gives more insight into why <code>runIdentity</code> is named that, i.e. as a verb, rather than as a noun).</p>\n"}, {"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": false, "score": 2, "last_activity_date": 1504483068, "creation_date": 1504483068, "answer_id": 46028805, "question_id": 46022615, "link": "https://stackoverflow.com/questions/46022615/how-to-derive-the-type-for-haskell-record-fields/46028805#46028805", "title": "How to derive the type for Haskell record fields?", "body": "<pre><code>newtype Identity a = Identity {runIdentity :: a} deriving Show\n</code></pre>\n\n<p>Using the record syntax here, you're really creating two things called <code>runIdentity</code>.</p>\n\n<p>One is the field of the constructor <code>Identity</code>. You can use that with record pattern syntax, as in <code>case i of Identity { x = runIdentity } -&gt; x</code>, where matching a value <code>i :: Identity a</code> to extract the field's contents into a local variable <code>x</code>. You can also use record construction or update syntax, as in <code>Identity { runIdentity = \"foo\" }</code> or <code>i { runIdentity = \"bar\" }</code>.</p>\n\n<p>In all of those cases <code>runIdentity</code> isn't really a standalone thing in its own right. You're using it only as part of a larger syntactic construct, to say which field of <code>Identity</code> you're accessing. The \"slot\" of <code>Identify a</code> referred to with the help of the field <code>runIdentity</code> does indeed store things of type <code>a</code>. But this <code>runIdentity</code> field is <strong>not</strong> a value of type <code>a</code>. It's not even a value at all really, since it needs to have these extra properties (that values do not have) about referring to a particular \"slot\" in a data type. Values are standalone things, that exist and make sense on their own. Fields are not; field <strong>contents</strong> are, which is why we use types to classify fields, but fields themselves are not values.<sup>1</sup> Values can be placed in data structures, returned from functions, etc. There's no way to define a value that you can place in a data structure, get back out, and then use with record pattern, construction, or update syntax.</p>\n\n<p>The other thing named <code>runIdentity</code> defined with the record match syntax is an ordinary function. Functions <em>are</em> values; you can pass them to other functions, put them in data structures, etc. The intent is to give you a helper for getting the value of a field in a value of type <code>Identity a</code>. But because you have to specify <strong>which</strong> <code>Identity a</code> value you want to get the value of the <code>runIdentity</code> field from, you have to pass an <code>Identity a</code> into the function. So the <code>runIdentity</code> <em>function</em> is a value of type <code>Identity a -&gt; a</code>, as distinct from the <code>runIdentity</code> <em>field</em> which is a non-value described by type <code>a</code>.</p>\n\n<p>A simple way to see this distinction is to add a definition like <code>myRunIdentity = runIdentity</code> to your file. That definition declares that <code>myRunIdentity</code> is equal to <code>runIdentity</code>, but you can only define <em>values</em> like that. And sure enough <code>myRunIdentity</code> will be a function of type <code>Identity a -&gt; a</code>, that you can apply to things of type <code>Identity a</code> to get an <code>a</code> value. But it won't be usable with record syntax as the field. The field <code>runIdentity</code> didn't \"come along with\" the value <code>runIdentity</code> in that definition.</p>\n\n<p>This question might have been prompted by type <code>:t runIdentity</code> into ghci, asking it to show you the type. It would have answered <code>runIdentity :: Identity a -&gt; a</code>. The reason is because the <code>:t</code> syntax works on <strong>values</strong><sup>2</sup>. You can type any expression at all there, and it will give you the type of the value that would result. So <code>:t runIdentity</code> is seeing the <code>runIdentity</code> <em>value</em> (the function), not the <code>runIdentity</code> field.</p>\n\n<p>As a final note, I've been banging on about how the field <code>runIdentity :: a</code> and the function <code>runIdentity :: Identity -&gt; a</code> are two separate things. I did so because I thought cleanly separating the two would help people confused by why there can be two different answers to \"what is the type of <code>runIdentity</code>\". But it's also a perfectly valid interpretation to say that <code>runIdentity</code> is a single thing, and it's simply the case that when you use a field as a first-class value it behaves as a function. And that is how people often talk about fields. So please don't be confused if other sources insist that there is only one thing; these are simply two different ways of looking at the same language concepts.</p>\n\n<hr>\n\n<p><sup>1</sup> A perspective on lenses, if you've heard of them, is that they are ordinary values that can be used to give us all of the semantics we need from \"fields\", without any special-purpose syntax. So a hypothetical language could theoretically not provide any syntax for field access at all, just giving us lenses when we declare a new data type, and we'd be able to make do.</p>\n\n<p>But Haskell record syntax fields aren't lenses; used as values they're only \"getter\" functions, which is why there's dedicated pattern match, construction, and update syntax for using the fields in ways beyond what is possible with ordinary values.</p>\n\n<p><sup>2</sup> Well, more properly it works on expressions, since it's type-checking the code, not running the code and then looking at the value to see what type it is (that wouldn't work anyway, since runtime Haskell values don't have any type information in the GHC system). But you can blur the lines and call values and expressions the same kind of thing; fields are quite different.</p>\n"}], "owner": {"reputation": 1309, "user_id": 4121440, "user_type": "registered", "accept_rate": 89, "profile_image": "https://lh6.googleusercontent.com/-sa6Am0YxEy0/AAAAAAAAAAI/AAAAAAAAABg/4mikHQDhZbI/photo.jpg?sz=128", "display_name": "Oleg", "link": "https://stackoverflow.com/users/4121440/oleg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 359, "favorite_count": 0, "accepted_answer_id": 46022646, "answer_count": 3, "score": 6, "last_activity_date": 1504516107, "creation_date": 1504435452, "last_edit_date": 1504516107, "question_id": 46022615, "link": "https://stackoverflow.com/questions/46022615/how-to-derive-the-type-for-haskell-record-fields", "title": "How to derive the type for Haskell record fields?", "body": "<p>Coming from OOP this seems like alien code to me.</p>\n\n<p>I don't understand why type of <code>runIdentity</code> is a function : </p>\n\n<p><code>runIdentity :: Identity a -&gt; a</code> ? I specified to be <code>runIdentity :: a</code></p>\n\n<pre><code>newtype Identity a = Identity {runIdentity :: a} deriving Show\n\ninstance Monad Identity where\n  return = Identity\n  Identity x &gt;&gt;= k = k x\n\ninstance Functor Identity where\n  fmap  f (Identity x) = Identity (f x)\n\ninstance Applicative Identity where\n  pure = Identity\n  Identity f &lt;*&gt; Identity v = Identity (f v)\n\nwrapNsucc :: Integer -&gt; Identity Integer\nwrapNsucc = Identity . succ\n</code></pre>\n\n<p>Calling <code>runIdentity</code> :</p>\n\n<blockquote>\n  <p>runIdentity $ wrapNsucc 5 -- gives 6 as output</p>\n</blockquote>\n"}, {"tags": ["mysql", "haskell", "yesod", "persistent"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1504412247, "post_id": 46019916, "comment_id": 79000115, "body": "Where and how is the type <code>Language</code> defined ?"}, {"owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1504417546, "post_id": 46019916, "comment_id": 79000849, "body": "@Sibi Language is a data type defined by myself in Language.hs to represent the various languages a user could select on their profile. It is imported to Model.hs as Import.Language.  I actually hadn&#39;t thought about the connection between Language in the error and my data type, I&#39;d just thought it was part of the package. I guess I should give my data types less generic names so that they stand out a bit more XD"}], "answers": [{"comments": [{"owner": {"reputation": 2602, "user_id": 338691, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/623eb344b815951d36fd826fbf0648b3?s=128&d=identicon&r=PG", "display_name": "Anuvrat Parashar", "link": "https://stackoverflow.com/users/338691/anuvrat-parashar"}, "edited": false, "score": 0, "creation_date": 1534792405, "post_id": 46021415, "comment_id": 90824259, "body": "<code>derivePersistField &quot;Language&quot;</code> should be added to <code>Language.hs</code> file."}], "tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 4, "last_activity_date": 1504425654, "creation_date": 1504425654, "answer_id": 46021415, "question_id": 46019916, "link": "https://stackoverflow.com/questions/46019916/no-instance-error-with-yesod-persistent-and-mysql/46021415#46021415", "title": "No Instance Error with Yesod, Persistent and MySQL", "body": "<p>The error shows that it's not able to find the sum type related Persistent instance. You have to do two things to fix it:</p>\n\n<p>=> Make sure to derive <code>Show</code> and <code>Read</code> instances for your sum type. Example:</p>\n\n<pre><code>data Language = JS | Haskell deriving (Eq, Show, Read, Ord)\n</code></pre>\n\n<p>=> Derive the persistent related instances for it using template haskell:</p>\n\n<pre><code>derivePersistField \"Language\"\n</code></pre>\n\n<p>You have to do this for all your sum types you are using it for your model.</p>\n"}], "owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 204, "favorite_count": 2, "accepted_answer_id": 46021415, "answer_count": 1, "score": 3, "last_activity_date": 1504425654, "creation_date": 1504408103, "last_edit_date": 1504417357, "question_id": 46019916, "link": "https://stackoverflow.com/questions/46019916/no-instance-error-with-yesod-persistent-and-mysql", "title": "No Instance Error with Yesod, Persistent and MySQL", "body": "<p>I'm not sure what to include in this post because I really don't understand the error message so I've just included the error, the Model.hs file and the models. I'm using the Yesod scaffolding site for MySQL. The operating system I'm using is Ubuntu. If you need to see any of the other code e.g. data definitions then just ask. </p>\n\n<p>Error Message:</p>\n\n<pre><code>[ 6 of 20] Compiling Model            ( src/Model.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/Model.o )\n\n/home/james/ConVoke/convoke-website/src/Model.hs:24:7: error:\n    \u2022 No instance for (persistent-2.7.0:Database.Persist.Sql.Class.PersistFieldSql\n                         Language)\n        arising from a use of \u2018persistent-2.7.0:Database.Persist.Sql.Class.sqlType\u2019\n    \u2022 In the fourth argument of \u2018FieldDef\u2019, namely\n        \u2018persistent-2.7.0:Database.Persist.Sql.Class.sqlType\n           (Data.Proxy.Proxy :: Data.Proxy.Proxy Language)\u2019\n      In the expression:\n        FieldDef\n          (HaskellName (packPTH \"language\"))\n          (DBName (packPTH \"language\"))\n          (FTTypeCon Nothing (packPTH \"Language\"))\n          (persistent-2.7.0:Database.Persist.Sql.Class.sqlType\n             (Data.Proxy.Proxy :: Data.Proxy.Proxy Language))\n          []\n          True\n          NoReference\n      In the \u2018entityFields\u2019 field of a record\n\n--  While building package website-0.0.0 using:\n      /home/james/.stack/setup-exe-cache/x86_64-linux/Cabal-simple_mPHDZzAJ_1.24.2.0_ghc-8.0.2 --builddir=.stack-work/dist/x86_64-linux/Cabal-1.24.2.0 build lib:website --ghc-options \" -ddump-hi -ddump-to-file\"\n</code></pre>\n\n<p>Model.hs:</p>\n\n<pre><code>{-# LANGUAGE EmptyDataDecls             #-}\n{-# LANGUAGE FlexibleInstances          #-}\n{-# LANGUAGE GADTs                      #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE MultiParamTypeClasses      #-}\n{-# LANGUAGE NoImplicitPrelude          #-}\n{-# LANGUAGE OverloadedStrings          #-}\n{-# LANGUAGE TemplateHaskell            #-}\n{-# LANGUAGE TypeFamilies               #-}\nmodule Model where\n\nimport ClassyPrelude.Yesod\nimport Database.Persist.Quasi\n\nimport Import.Game\nimport Import.Language\nimport Import.Profile\n\n-- You can define all of your database entities in the entities file.\n-- You can find more information on persistent and how to declare entities\n-- at:\n-- http://www.yesodweb.com/book/persistent/\nshare [mkPersist sqlSettings, mkMigrate \"migrateAll\"]\n    $(persistFileWith lowerCaseSettings \"config/models\")\n</code></pre>\n\n<p>models:</p>\n\n<pre><code>Player\n     name Text\n     username Text\n     dob Day\n     language Language\n     tournaments [TournamentResult]\n     deriving (Show)\n\n PlatformAccount\n     player PlayerId\n     platform Platform\n     account Text\n     deriving (Show)\n\n SocialAccount\n     player PlayerId\n     site SocialSite\n     account Text\n     deriving (Show)\n\n PastTeam\n     player PlayerId\n     team TeamId\n     yearJoined Int\n     yearLeft Int\n     deriving (Show)\n\n TournamentResult\n     player PlayerId\n     team TeamId\n     name Text\n     placing Text\n     year Int\n     deriving (Show)\n\n Roster\n     name Text\n     game Game\n     team TeamId\n     players [PlayerId]\n     creationDay Day\n     deriving (Show)\n\n PlayerRole\n     roster RosterId\n     player PlayerId\n     role Role\n     deriving (Show)\n\n CompetitiveGame\n     game Game\n     platform Platform\n     role Role\n     availability Availability\n     playingSince Int\n     deriving (Show)\n\n Team\n     name Text\n     creationDay Day\n     deriving (Show)\n</code></pre>\n\n<p>Thanks in advance :)</p>\n\n<p>EDIT: As requested the Language.hs file defining the Language data type:</p>\n\n<pre><code>module Import.Language where\n\nallLanguages :: [Language]\nallLanguages = [Afrikanns ..]\n\ndata Language = Afrikanns |\n                Albanian |\n                Arabic |\n                Armenian |\n                Basque |\n                Bengali |\n                Bulgarian |\n                Catalan |\n                Cambodian |\n                Chinese_Mandarin |\n                Croation |\n                Czech |\n                Danish |\n                Dutch |\n                English |\n                Estonian |\n                Fiji |\n                Finnish |\n                French |\n                Georgian |\n                German |\n                Greek |\n                Gujarati |\n                Hebrew |\n                Hindi |\n                Hungarian |\n                Icelandic |\n                Indonesian |\n                Irish |\n                Italian |\n                Japanese |\n                Javanese |\n                Korean |\n                Latin |\n                Latvian |\n                Lithuanian |\n                Macedonian |\n                Malay |\n                Malayalam |\n                Maltese |\n                Maori |\n                Marathi |\n                Mongolian |\n                Nepali |\n                Norwegian |\n                Persian |\n                Polish |\n                Portuguese |\n                Punjabi |\n                Quechua |\n                Romanian |\n                Russian |\n                Samoan |\n                Serbian |\n                Slovak |\n                Slovenian |\n                Spanish |\n                Swahili |\n                Swedish  |\n                Tamil |\n                Tatar |\n                Telugu |\n                Thai |\n                Tibetan |\n                Tonga |\n                Turkish |\n                Ukranian |\n                Urdu |\n                Uzbek |\n                Vietnamese |\n                Welsh |\n                Xhosa\n                deriving (Enum, Show, Eq)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1504389246, "post_id": 46018501, "comment_id": 78996856, "body": "<code>f &lt;$&gt; x &lt;*&gt; y = (&lt;*&gt;) ((&lt;$&gt;) f x) y)</code>. To see why, read the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch10.html#x17-18100010.6\" rel=\"nofollow noreferrer\">report</a>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504428625, "post_id": 46018501, "comment_id": 79002870, "body": "Order of execution is immaterial in a pure language: any order will give the same result. You are probably wondering about operator precedence. Note that evaluation order and precedence are distinct notions."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1504464238, "post_id": 46018501, "comment_id": 79012928, "body": "@chi Minor quibble: any evaluation order <i>that terminates</i> will get the same result. But it&#39;s possible (common, even -- basically any time recursion appears) for one order to loop forever while another order gets an answer. Idiomatic Haskell programs (and, therefore, the programmers writing those programs) frequently rely on lazy evaluation order to terminate."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 10, "last_activity_date": 1504389642, "creation_date": 1504389642, "answer_id": 46018592, "question_id": 46018501, "link": "https://stackoverflow.com/questions/46018501/which-application-is-executed-first/46018592#46018592", "title": "Which application is executed first?", "body": "<p>They don't just have precedence 4, they also have left-associativity. This is the <code>l</code> in <code>infixl</code>; one can also choose <code>infixr</code> for right-associativity, and <code>infix</code> for \"throw an error if you need to know what the associativity should be\". Thus</p>\n\n<pre><code>Three' x &lt;$&gt; f y &lt;*&gt; f z\n</code></pre>\n\n<p>is parsed as:</p>\n\n<pre><code>(Three' x &lt;$&gt; f y) &lt;*&gt; f z\n</code></pre>\n\n<p>As for which is <em>executed</em> first, that can't be answered without seeing the implementation of <code>(&lt;*&gt;)</code> that you want to ask about; <code>Three' x &lt;$&gt; f y</code> will be evaluated just far enough for <code>(&lt;*&gt;)</code> to make progress, as usual, so if <code>(&lt;*&gt;)</code> can make progress without evaluating the <code>(&lt;$&gt;)</code> call first, it will.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 46018592, "answer_count": 1, "score": 0, "last_activity_date": 1504389642, "creation_date": 1504388812, "question_id": 46018501, "link": "https://stackoverflow.com/questions/46018501/which-application-is-executed-first", "title": "Which application is executed first?", "body": "<p>I have following instance of Traversable:</p>\n\n<pre><code>  instance Traversable (Three' a) where\n    traverse f (Three' x y z) = Three' x &lt;$&gt; f y &lt;*&gt; f z  \n</code></pre>\n\n<p>the infix operator <code>&lt;$&gt;</code> and <code>&lt;*&gt;</code> has the same precedence and namely 4. </p>\n\n<pre><code>*ExercisesTraversable&gt; :i &lt;$&gt;\n(&lt;$&gt;) :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n    -- Defined in \u2018Data.Functor\u2019\ninfixl 4 &lt;$&gt;\n\n\n*ExercisesTraversable&gt; :i &lt;*&gt;\nclass Functor f =&gt; Applicative (f :: * -&gt; *) where\n  ...\n  (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b\n  ...\n    -- Defined in \u2018GHC.Base\u2019\ninfixl 4 &lt;*&gt;\n</code></pre>\n\n<p>Which one is going to executed first?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504389655, "post_id": 46018498, "comment_id": 78996955, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/45798242/the-purpose-of-the-traversable-typeclass\">The purpose of the Traversable typeclass</a>"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504389893, "post_id": 46018498, "comment_id": 78997009, "body": "The 2nd question seems completely unrelated to the 1st. But the answer is simple: <code>Foldable</code> is strong enough to implement <code>sequenceA_</code>."}], "answers": [{"comments": [{"owner": {"reputation": 2646, "user_id": 40751, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/VVvwi.jpg?s=128&g=1", "display_name": "tex", "link": "https://stackoverflow.com/users/40751/tex"}, "edited": false, "score": 0, "creation_date": 1559216629, "post_id": 46019833, "comment_id": 99355694, "body": "&quot;Haskell could have a more fine-grained typeclass hierarchy that breaks <code>Applicative</code> down into more fine-grained parts with separate classes for <code>pure</code> and <code>&lt;*&gt;</code>&quot; -- PureScript has this, defining <code>Apply</code> (<code>&lt;*&gt;</code>) and <code>Applicative</code> (<code>pure</code>) as separate type classes."}], "tags": [], "owner": {"reputation": 3609, "user_id": 2565354, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/590ed3229d95cdcaa05a96028c586165?s=128&d=identicon&r=PG", "display_name": "badcook", "link": "https://stackoverflow.com/users/2565354/badcook"}, "is_accepted": false, "score": 4, "last_activity_date": 1575694132, "last_edit_date": 1575694132, "creation_date": 1504406704, "answer_id": 46019833, "question_id": 46018498, "link": "https://stackoverflow.com/questions/46018498/what-is-the-relationship-between-applicative-foldable-and-traversable/46019833#46019833", "title": "What is the relationship between Applicative, Foldable and Traversable?", "body": "<p><code>traverse</code> and <code>sequenceA</code> both need to deal with what happens when the <code>Traversable</code> is empty. Then you won't have any elements in an <code>Applicative</code> context that you can use to glom other stuff onto so you'll need <code>pure</code>.</p>\n\n<p>The definitions you've presented are a bit misleading since, as you pointed out, they're mutually dependent. When you go to actually implement one of them you'll run into the empty collection problem. And you'll run into the need for <code>&lt;*&gt;</code> as <code>Functor</code> provides no facility to aggregate different values of <code>f a</code> for some functor <code>f</code>. </p>\n\n<p>Therefore the <code>Applicative</code> constraint is there because for most types, in order to implement either <code>traverse</code> or <code>sequenceA</code> you'll need the tools that <code>Applicative</code> provides.</p>\n\n<p>That being said there are certain types where you don't need <code>pure</code> or don't need <code>&lt;*&gt;</code>. If your collection can never be empty you don't need <code>pure</code>, e.g. <code>NonEmpty</code>. If your collection never has more than one element you don't need <code>&lt;*&gt;</code>, e.g. <code>Maybe</code>. Sometimes you don't need either and you can get away with just <code>fmap</code>, e.g. a tuple section such as <code>(a,)</code>).</p>\n\n<p>Haskell could have a more fine-grained typeclass hierarchy that breaks <code>Applicative</code> down into more fine-grained parts with separate classes for <code>pure</code> and <code>&lt;*&gt;</code> which would then allow you to make different versions of <code>Traversable</code> with weaker constraints.  Edward Kmett's library <code>semigroupoids</code> goes in this direction, although it isn't perfect since it can't add actual superclasses to the <code>base</code> classes. It has <code>Apply</code> which is <code>Applicative</code> but without <code>pure</code>, and <code>Traversable1</code> which is a variant of <code>Traversable</code> that uses <code>Apply</code> instead of <code>Applicative</code> and thus requires that its types can never be empty.</p>\n\n<p>Note that other ecosystems have chosen to have a more fine-grained typeclass hierarchy (see Scala's <code>cats</code> or <code>scalaz</code> libraries). I personally find such a distinction occasionally useful but not overwhelmingly so.</p>\n\n<p>As for your second question if all you know how to do is tear down something, you can still perform effects  along the way but you can't necessarily recover the original structure. Hence why <code>sequenceA_</code> is in <code>Foldable</code>. It is strictly less powerful than <code>sequenceA</code>.</p>\n"}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 261, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1575694132, "creation_date": 1504388809, "question_id": 46018498, "link": "https://stackoverflow.com/questions/46018498/what-is-the-relationship-between-applicative-foldable-and-traversable", "title": "What is the relationship between Applicative, Foldable and Traversable?", "body": "<p>I'm trying to understand what exactly is needed from the <code>Applicative</code> interface in order to perform any <code>traverse</code>. I'm stuck as they are not used in the default implementation as if the constraint was to strict. Is Haskell's type system too weak to describe the actual requirements?</p>\n\n<pre><code>-- | Map each element of a structure to an action, evaluate these actions\n-- from left to right, and collect the results. For a version that ignores\n-- the results see 'Data.Foldable.traverse_'.\ntraverse :: Applicative f =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)\ntraverse f = sequenceA . fmap f\n\n-- | Evaluate each action in the structure from left to right, and\n-- and collect the results. For a version that ignores the results\n-- see 'Data.Foldable.sequenceA_'.\nsequenceA :: Applicative f =&gt; t (f a) -&gt; f (t a)\nsequenceA = traverse id\n</code></pre>\n\n<p>A possibly related side question, why is <code>sequenceA_</code> defined in <code>Foldable</code>?</p>\n"}, {"tags": ["haskell", "functional-programming", "neural-network", "function-composition", "purely-functional"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 2, "creation_date": 1504389107, "post_id": 46018483, "comment_id": 78996825, "body": "It&#39;s a <a href=\"https://wiki.haskell.org/Section_of_an_infix_operator\" rel=\"nofollow noreferrer\">section</a>"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504389531, "post_id": 46018483, "comment_id": 78996924, "body": "&quot;He uses <code>(relu &lt;$&gt;) . )</code>. This <code>.</code> followed by a parentheses doesn&#39;t make sense to me.&quot; If you ask for the type of this expression (recalling that <code>relu</code> will be interpreted as a typed hole if its unbound) then you get a parse error. This should be a hint that you have not correctly identified this substring of the program as a subexpression. If this doesn&#39;t make sense, try replacing all infix operators with prefix functions (once you accomplish this while preserving semantics, you probably have understood what infix operators actually mean)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1504428249, "post_id": 46018483, "comment_id": 79002782, "body": "In my opinion, this is a paragon case of pointless style. Writing <code>(f .) . g</code> is a nice trick, but it not that much shorter than the pointful <code>\\x y -&gt; f (g x y)</code>. The latter is far more understandable. That being said, I&#39;ve started to see <code>(f .) . g</code> used so much often that might even become idiomatic one day. I&#39;d still avoid it, though. Pointfree code should be used only when the result is elegant and clear, IMO."}], "answers": [{"comments": [{"owner": {"reputation": 35, "user_id": 4808450, "user_type": "registered", "profile_image": "https://graph.facebook.com/874913972582137/picture?type=large", "display_name": "Andr&#233; Muricy", "link": "https://stackoverflow.com/users/4808450/andr%c3%a9-muricy"}, "edited": false, "score": 0, "creation_date": 1504707349, "post_id": 46019233, "comment_id": 79116377, "body": "This is an insanely comprehensive answer. Thank you so much, the issue is crystal clear now."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 6, "last_activity_date": 1504397281, "creation_date": 1504397281, "answer_id": 46019233, "question_id": 46018483, "link": "https://stackoverflow.com/questions/46018483/why-does-empty-function-composition-work-in-haskell/46019233#46019233", "title": "Why does empty function composition work in Haskell?", "body": "<p>As @Bergi notes, the expression <code>((relu &lt;$&gt;) . )</code> is not \"empty function composition\" but rather something called a \"section\".  (In fact, in this case, it's a section nested inside another section.)</p>\n\n<p>You've undoubtedly seen this before, even if you've forgotten what it was called and/or didn't realize it applied to the function composition operator <code>(.)</code>, but just to remind you...</p>\n\n<p>In Haskell, for any binary operator (like <code>(+)</code>), you can write a left or right \"section\":</p>\n\n<pre><code>(1+)  -- short for   \\x -&gt; 1+x\n(+1)  -- short for   \\x -&gt; x+1\n</code></pre>\n\n<p>so that something like <code>map (2*) mylist</code> can be used to double every element of a list instead of having to write <code>map (\\x -&gt; 2*x) mylist</code>.</p>\n\n<p>It works the same way for function composition <code>(.)</code> and the fmap operator <code>(&lt;$&gt;)</code>, so:</p>\n\n<pre><code>((sigmoid &lt;$&gt;) . )\n</code></pre>\n\n<p>is short for:</p>\n\n<pre><code>\\f -&gt; (sigmoid &lt;$&gt;) . f\n</code></pre>\n\n<p>which is short for:</p>\n\n<pre><code>\\f -&gt; (\\xs -&gt; sigmoid &lt;$&gt; xs) . f\n</code></pre>\n\n<p>which you could eta expand to:</p>\n\n<pre><code>\\f z -&gt; (\\xs -&gt; sigmoid &lt;$&gt; xs) (f z)\n</code></pre>\n\n<p>and then simplify to:</p>\n\n<pre><code>\\f z -&gt; sigmoid &lt;$&gt; f z    :: (a -&gt; [Float]) -&gt; a -&gt; [Float]\n</code></pre>\n\n<p>Note that, in contrast, the expression <code>(sigmoid &lt;$&gt;)</code> that you wanted to use in its place is equivalent to:</p>\n\n<pre><code>\\xs -&gt; sigmoid &lt;$&gt; xs    :: [Float] -&gt; [Float]\n</code></pre>\n\n<p>which obviously isn't the same.</p>\n\n<p>Anyway, all this means that the folded function:</p>\n\n<pre><code>(((sigmoid &lt;$&gt;) .) . computeLayer)\n</code></pre>\n\n<p>can be eta expanded and simplified as follows:</p>\n\n<pre><code>\\acc x -&gt; (((sigmoid &lt;$&gt;) .) . computeLayer) acc x\n\\acc x -&gt; ((sigmoid &lt;$&gt;) .) (computeLayer acc) x\n\\acc x -&gt; (\\f z -&gt; sigmode &lt;$&gt; f z) (computeLayer acc) x\n\\acc x -&gt; sigmoid &lt;$&gt; (computeLayer acc) x\n\\acc x -&gt; sigmoid &lt;$&gt; computeLayer acc x\n</code></pre>\n\n<p>and you can quickly verify that the modified definition:</p>\n\n<pre><code>feed inp brain = foldl' (\\acc x -&gt; sigmoid &lt;$&gt; computeLayer acc x) inp brain\n</code></pre>\n\n<p>typechecks and gives the same result in your program.</p>\n\n<p>At the end of the day, your intuition was mostly okay.  You wanted the folded function to be a composition of the <code>sigmoid</code> and <code>computeLayer</code> functions, but the fact that <code>computeLayer</code> takes two arguments, instead of one, means that simple composition doesn't work.</p>\n\n<p>For your amusement, the following works too:</p>\n\n<pre><code>feed inp brain = foldl' (((.).(.)) (sigmoid &lt;$&gt;) computeLayer) inp brain\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 4808450, "user_type": "registered", "profile_image": "https://graph.facebook.com/874913972582137/picture?type=large", "display_name": "Andr&#233; Muricy", "link": "https://stackoverflow.com/users/4808450/andr%c3%a9-muricy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 452, "favorite_count": 0, "accepted_answer_id": 46019233, "answer_count": 1, "score": 1, "last_activity_date": 1504397281, "creation_date": 1504388695, "question_id": 46018483, "link": "https://stackoverflow.com/questions/46018483/why-does-empty-function-composition-work-in-haskell", "title": "Why does empty function composition work in Haskell?", "body": "<p>I spent a long time without programming Haskell, and decided to get back into it by taking on a relatively advanced project. I'm trying to program a Neural Network from scratch by following <a href=\"http://crypto.stanford.edu/~blynn/haskell/brain.html\" rel=\"nofollow noreferrer\">this guide</a>. I've scratched my head around some of his most esoteric approaches to simple problems like creating a network of weights and biases, but when it comes to this:</p>\n\n<pre><code>feed :: [Float] -&gt; [([Float], [[Float]])] -&gt; [Float]\nfeed input brain = foldl' (((relu &lt;$&gt;) . ) . zLayer) input brain\n</code></pre>\n\n<p>I don't understand what he does. More specifically, I don't understand why use two <code>.</code>'s in the function composition here. He uses <code>(relu &lt;$&gt;) . )</code>. This <code>.</code> followed by a parentheses doesn't make sense to me. I understand it represents function composition, and in this case, the function zLayer takes in a layer of neurons, which is of type <code>([Float], [[Float]])</code> and the output of the previous layer, which is of type <code>[Float]</code>, and produces a new output, also of type <code>[Float]</code>. I understand he's applying the <code>relu &lt;$&gt;</code> function to the result of <code>zLayer</code>, which makes sense. That is, you want to fold the brain (which is nothing but a list of layers) by applying <code>zLayer</code> on a layer of the brain, then applying <code>relu &lt;$&gt;</code> on the result of that, and finally pass that as the <code>input</code> to the next layer.</p>\n\n<p>The seemingly empty composition is what bugs me. What I described above should, to me, be implemented like this:</p>\n\n<pre><code>feed :: [Float] -&gt; [([Float], [[Float]])] -&gt; [Float]\nfeed inp brain = foldl' (((sigmoid &lt;$&gt;) . computeLayer) inp brain\n</code></pre>\n\n<p>(I'm using the sigmoid function instead of the rectifier (ReLU), and computeLayer is just my implementation of zLayer.) Right? What I'm doing there is (supposedly) providing, as a function to <code>foldl'</code>, this:</p>\n\n<pre><code>(sigmoid &lt;$&gt; (computeLayer))\n</code></pre>\n\n<p>When I add just <code>.)</code> between my <code>.</code> and <code>computeLayer</code> (and an open parentheses before of course), it works. Without them, this is the error:</p>\n\n<pre><code>net.hs:42:42: error:\n    \u2022 Couldn't match type \u2018[Float]\u2019 with \u2018Float\u2019\n      Expected type: [Float] -&gt; ([Float], [[Float]]) -&gt; Float\n        Actual type: [Float] -&gt; ([Float], [[Float]]) -&gt; [Float]\n    \u2022 In the second argument of \u2018(.)\u2019, namely \u2018computeLayer\u2019\n      In the first argument of \u2018foldl'\u2019, namely\n        \u2018((sigmoid &lt;$&gt;) . computeLayer)\u2019\n      In the expression: foldl' ((sigmoid &lt;$&gt;) . computeLayer) inp brain\n   |\n42 | feed inp brain = foldl' ((sigmoid &lt;$&gt;) . computeLayer) inp brain\n   |                                          ^^^^^^^^^^^^\n</code></pre>\n\n<p>Why does this seemingly empty composition of functions work?</p>\n\n<p>This is the whole code so far, if it helps:</p>\n\n<pre><code>import System.Random\nimport Control.Monad\nimport Data.Functor\n\nfoldl' f z []     = z\nfoldl' f z (x:xs) = let z' = z `f` x\n                    in seq z' $ foldl' f z' xs\n\nsigmoid :: Float -&gt; Float\nsigmoid x = 1 / (1 + (exp 1) ** (-x))\n\n-- Given a list, gives out a list of lists of length *each element of the list*\nmakeBiases :: [Int] -&gt; Float -&gt; [[Float]]\nmakeBiases x b = flip replicate b &lt;$&gt; x\n\n-- Given a list, gives out, for each element X in the list, a list of length x + 1, of\n-- x elements in any normal distribution\nmakeWeights :: [Int] -&gt; Float -&gt; [[[Float]]]\nmakeWeights xl@(_:xs) el = zipWith (\\m n -&gt; replicate n (replicate m el)) xl xs\n\n-- Make initial biases and weights to give a list of tuples that corresponds to biases\n-- and weights associated with each node in each layer\nmakeBrain :: [Int] -&gt; Float -&gt; Float -&gt; [([Float], [[Float]])]\nmakeBrain (x:xs) b el = zip (makeBiases xs b)  (makeWeights (x:xs) el)\n\n-- Given output of a layer, apply weights and sum for all nodes in a layer. For each list\n-- of weights (each node has multiple inputs), there will be one output\nsumWeightsL l wvs = sum . zipWith (*) l &lt;$&gt; wvs\n\n-- Given output of a layer, apply weights to get tentative output of each node. Then\n-- sum biases of each node to its output\ncomputeLayer :: [Float] -&gt; ([Float], [[Float]]) -&gt; [Float]\ncomputeLayer l (bs, wvs) = zipWith (+) bs (sumWeightsL l wvs)\n\nfeed :: [Float] -&gt; [([Float], [[Float]])] -&gt; [Float]\nfeed inp brain = foldl' ((sigmoid &lt;$&gt;) . computeLayer) inp brain\n\nmain = do\n  putStrLn \"3 inputs, a hidden layer of 4 neurons, and 2 output neurons:\"\n  print $ feed [0.1, 0.2, 0.3] (makeBrain [3,4,2] 0 0.22)\n</code></pre>\n"}, {"tags": ["haskell", "continuations", "reader-monad"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504388813, "post_id": 46018177, "comment_id": 78996764, "body": "In the first definition of <code>app</code>, you aren&#39;t operating in the <code>IO</code> monad, you are operating in the <code>((-&gt;) r)</code> monad (which you seem to recognize?). As such, it&#39;s impossible for that definition to do any sequencing of the underlying <code>IO</code> actions inside <code>App</code> or <code>Handler</code> (or e.g. <code>StateT () IO</code> or any other monad with <code>IO</code> at its &#39;base&#39;). In other words, your definition is equivalent to <code>(\\f k r -&gt; k (f r) r) (route &quot;a&quot;) (const $ route &quot;b&quot;)</code> - can you do a few steps of evaluation to see why the output is the way it is? (hint: <code>const</code> ignores its second argument)"}], "owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1504386195, "creation_date": 1504386195, "question_id": 46018177, "link": "https://stackoverflow.com/questions/46018177/differing-reader-behaviour", "title": "Differing Reader Behaviour", "body": "<p>I'm writing a wrapper around a Warp server where users can specify routes and handlers to make a web server. I decided to try using Continuation Monads to allow handlers to exit using a continuation when a route matches. \nHere are the types and definitions I'm starting with: </p>\n\n<pre><code>import Control.Monad.Cont\nimport Control.Monad.Reader\nimport qualified Network.Wai as W\nimport qualified Data.Text as T\n\ntype App r a = ContT r (ReaderT W.Request IO) a\ntype Handler a = ReaderT W.Request IO a\ntype Respond = ((Status, T.Text) -&gt; App (Status, T.Text) ())\n\nroute :: T.Text -&gt; Handler (Status, T.Text) -&gt; Respond -&gt; App (Status, T.Text) ()\nroute routePath handler respond = do\n  liftIO $ print $ \"Checking\" `T.append` routePath\n  pth &lt;- path\n  when (routePath == pth) $ do\n    req &lt;- ask\n    response &lt;- liftIO $ runReaderT handler req\n    respond response\n</code></pre>\n\n<p>An app is a collection of routes, each route reads the current continuation from the Reader environment; I originally wrote it like this:</p>\n\n<pre><code>hello :: Handler (Status, T.Text)\nhello = return (ok200, \"Hello World!\")\n\ngoodbye :: Handler (Status, T.Text)\ngoodbye = return (ok200, \"Goodbye World!\")\n\napp :: Respond -&gt; App (Status, T.Text) ()\napp = do\n  route \"/hello\" hello\n  route \"/goodbye\" goodbye\n</code></pre>\n\n<p>Strangely this doesn't seem to work, it only prints \"Checking /goodbye\"; however if we instead write the reader in the next form it works properly, as far as I was aware these two definitions should be equivalent; but apparently I'm missing something:</p>\n\n<pre><code>app :: Respond -&gt; App (Status, T.Text) ()\napp resp = do\n  route \"/hello\" hello resp\n  route \"/goodbye\" goodbye resp\n</code></pre>\n\n<p>Is there any way I can get the proper behaviour using the original app definition? Is there some way that the Reader Monad is messing up the continuations somehow?</p>\n\n<p>I suspect that somehow the monad definition for reader is interrupting the order of computation; but it's not clear to me how:</p>\n\n<pre><code>instance Monad ((-&gt;) r) where\n    f &gt;&gt;= k = \\ r -&gt; k (f r) r\n</code></pre>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 4, "creation_date": 1504385540, "post_id": 46018066, "comment_id": 78995939, "body": "What are you actually hoping to ensure and/or avoid?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1504385990, "post_id": 46018066, "comment_id": 78996080, "body": "All functions in Haskell have arity 1... Furthermore Haskell has static typing."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 5, "creation_date": 1504386320, "post_id": 46018066, "comment_id": 78996177, "body": "GHC actually performs two sorts of arity analysis, which it uses to determine when it can safely eta-expand functions. One attempts to determine the inherent arity, that is, the number of arguments that must be applied before the function performs any real work. The other attempts to determine the &quot;call arity&quot; of local function definitions, the minimum number of arguments to which they are actually applied. I could be off on the details."}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 1, "creation_date": 1504386323, "post_id": 46018066, "comment_id": 78996180, "body": "This is a good question. If you are asking about what is called <code>known call</code> in the paper, then my bet is this is not possible. At least without LTO. But I&#39;m far from expert in these fields."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1504427035, "post_id": 46018066, "comment_id": 79002503, "body": "A compiler doing that is feasible: one can treat all functions as unary ones, and compile <code>f x y</code> with code that first builds the closure <code>f x</code> and then applies that to <code>y</code>. This is terribly inefficient: the GHC devs statistically observed that most calls pass &quot;all&quot; the arguments in common code. Hence, GHC optimizes for that, generating code that checks is more arguments are available before creating a closure: if &quot;all&quot; are, no closure is generated. This runtime check saves time, overall."}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 122, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1504385314, "creation_date": 1504385314, "question_id": 46018066, "link": "https://stackoverflow.com/questions/46018066/is-it-possible-for-ghc-to-determine-arity-at-compile-time", "title": "Is it possible for GHC to determine arity at compile time?", "body": "<p>As Haskell encourages currying, many libraries expose high-order constructs. These libraries have no way of knowing the arity of their arguments - I believe that GHC generates code that inspects the arguments at runtime (eval/apply).</p>\n\n<p>Can I inspect and guarantee generation of code that does not check for arity at runtime?</p>\n"}, {"tags": ["haskell", "pickle"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504384098, "post_id": 46016553, "comment_id": 78995552, "body": "The package simply doesn&#39;t implement all features of the &#39;pickle&#39; language (and instead of omitting parser entries for those features, it includes such entries that call &#39;undefined&#39; - this is at the very least bad design, but more likely an incorrect implementation). In other words, there is never a case in which this code works if this parser is ever reached. (Aside: a better (i.e. more productive) question would be what &#39;pickle&#39; is, what you&#39;re trying to use it to do, and why you need to interface with python using such a format)"}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 0, "last_activity_date": 1504499679, "creation_date": 1504499679, "answer_id": 46030329, "question_id": 46016553, "link": "https://stackoverflow.com/questions/46016553/why-am-i-hitting-undefined-when-deserializing-a-protocol-2-pickle-file-using-la/46030329#46030329", "title": "Why am I hitting undefined, when deserializing a protocol 2 pickle file using Language.Python.Pickle.unpickle?", "body": "<p>You are hitting <code>undefined</code> because the package is only a partial implementation.</p>\n"}], "owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 46030329, "answer_count": 1, "score": 0, "last_activity_date": 1504499679, "creation_date": 1504374422, "question_id": 46016553, "link": "https://stackoverflow.com/questions/46016553/why-am-i-hitting-undefined-when-deserializing-a-protocol-2-pickle-file-using-la", "title": "Why am I hitting undefined, when deserializing a protocol 2 pickle file using Language.Python.Pickle.unpickle?", "body": "<p>I'm trying to use <strong>Language.Python.Pickle.unpickle</strong>, from <em>python-pickle-0.2.3</em>, to deserialize a protocol 2 pickle archive, and am getting this:</p>\n\n<pre><code>undefined, called at ./Language/Python/Pickle.hs:175:44 in python-pickle-0.2.3-H8B4QMwzEy76HsmPt8HyK5:Language.Python.Pickle\n</code></pre>\n\n<p>Here is line 175 of <em>Pickle.hs</em>:</p>\n\n<pre><code>global = string \"c\" *&gt; (uncurry GLOBAL &lt;$&gt; undefined)\n</code></pre>\n\n<p>Anyone know why it's calling undefined?</p>\n"}, {"tags": ["haskell", "quickcheck"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1504376878, "post_id": 46016524, "comment_id": 78993688, "body": "Can&#39;t you just exploit currying and use <code>Fun Int (Fun Int Int)</code>? Remember that there&#39;s no such a thing as a binary function, since everything is curried."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1504383677, "post_id": 46016524, "comment_id": 78995449, "body": "Note that the statement &quot;This does not work because (Int -&gt; Int -&gt; Int) is not an instance of Arbitrary.&quot; is false (functions <i>are</i> instances of Arbitrary). It doesn&#39;t work because functions aren&#39;t instances of <code>Show</code>. But as @chi says, currying solves your problem in a trivial way (and also in the only slightly less trivial way that <code>Fun (Int, Int) Int</code> would work as well). You may find the definitions <code>unFun (Fun _ f) = f; unFun2 f = unFun . unFun f</code> useful."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1506112936, "post_id": 46016524, "comment_id": 79705439, "body": "@chi, my limited experience in practice suggests that <code>Fun (a,b,...) x</code> is less painful to work with than <code>Fun a (Fun b (... x ...))</code>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1506113282, "post_id": 46016524, "comment_id": 79705608, "body": "If your next question is &quot;what about higher-order functions?&quot;, then that was mine too. But that appears to be Very Hard. Koen Claessen wasn&#39;t able to find a satisfactory solution, so you should only consider it if you want a research project."}], "answers": [{"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 4, "last_activity_date": 1506104804, "creation_date": 1506104804, "answer_id": 46371069, "question_id": 46016524, "link": "https://stackoverflow.com/questions/46016524/how-to-generate-arbitrary-two-argument-function-with-quickcheck/46371069#46371069", "title": "How to generate arbitrary two argument function with QuickCheck?", "body": "<h1>QuickCheck 2.9.2</h1>\n\n<p>With QuickCheck 2.9.2, you can use the <code>Fun</code> type, and the <code>Fn</code> pattern. You'll have to</p>\n\n<pre><code>import Test.QuickCheck.Function\n</code></pre>\n\n<p>You can then write the property using a tuple as input, and then <code>curry</code> the function:</p>\n\n<pre><code>prop_myZipWith :: Eq c =&gt; Fun (a, b) c -&gt; [a] -&gt; [b] -&gt; Bool\nprop_myZipWith (Fn f) x y = myZipWith (curry f) x y == zipWith (curry f) x y\n</code></pre>\n\n<p><code>main</code> looks like this:</p>\n\n<pre><code>main =\n  quickCheck (prop_myZipWith :: Fun (Int, Int) Int -&gt; [Int] -&gt; [Int] -&gt; Bool)\n</code></pre>\n\n<p>This compiles, and the test passes, in my repro.</p>\n\n<h1>QuickCheck 2.10.0.1</h1>\n\n<p>With QuickCheck 2.10.0.1, you can instead use the <code>Fn2</code> pattern, like this:</p>\n\n<pre><code>prop_myZipWith :: Eq c =&gt; Fun (a, b) c -&gt; [a] -&gt; [b] -&gt; Bool\nprop_myZipWith (Fn2 f) x y = myZipWith f x y == zipWith f x y\n</code></pre>\n\n<p>The main method remains the same, because the type of <code>prop_myZipWith</code> hasn't changed, but <code>import Test.QuickCheck.Function</code> is no longer required.</p>\n"}], "owner": {"reputation": 4029, "user_id": 3224967, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/963b108f3bcde98ac96d09b04abbf63f?s=128&d=identicon&r=PG&f=1", "display_name": "mherzl", "link": "https://stackoverflow.com/users/3224967/mherzl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 418, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1506104804, "creation_date": 1504374229, "question_id": 46016524, "link": "https://stackoverflow.com/questions/46016524/how-to-generate-arbitrary-two-argument-function-with-quickcheck", "title": "How to generate arbitrary two argument function with QuickCheck?", "body": "<p>I am trying to test my implementation of <code>zipWith</code> using QuickCheck. My implementation, <code>myZipWith</code>, I would like to QuickCheck test by comparing to the standard function. Something like:</p>\n\n<pre><code>main = do\n  quickCheck (prop_myZipWith :: (Int -&gt; Int -&gt; Int) -&gt; [Int] -&gt; [Int] -&gt; Bool)\n\nprop_myZipWith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; Bool\nprop_myZipWith f x y = (myZipWith x y) == (zipWith f x y)\n</code></pre>\n\n<p>This does not work because <code>(Int -&gt; Int -&gt; Int)</code> is not an instance of <code>Arbitrary</code>.</p>\n\n<p>With single-argument functions one can get around this using <a href=\"https://hackage.haskell.org/package/QuickCheck-2.9.2/docs/Test-QuickCheck-Function.html#t::-45--62-\" rel=\"nofollow noreferrer\"><code>Test.QuickCheck.Function</code></a>'s <code>Fun</code> (which instantiates <code>Arbitrary</code>). For example:</p>\n\n<pre><code>main = do\n  quickCheck (prop_myMap :: Fun Int Int -&gt; [Int] -&gt; Bool)\n\nprop_myMap :: Fun a b -&gt; [a] -&gt; Bool\nprop_myMap (Fun _ f) l = (myMap f l) == (map f l)\n</code></pre>\n\n<p>I am trying to do something similar except generating <em>two</em>-argument arbitrary functions.</p>\n\n<p><strong>How can I generate arbitrary instances of two argument functions</strong> for QuickCheck testing of higher-order functions such as <code>zipWith</code>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1504371613, "post_id": 46016129, "comment_id": 78992088, "body": "<code>dropUnevenElements x = x</code>?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1504371646, "post_id": 46016129, "comment_id": 78992098, "body": "And lists can only contain one type of elements."}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1504372389, "post_id": 46016129, "comment_id": 78992284, "body": "Is &#39;skyffla&#39; some weird phonetic translation of &#39;shuffle&#39;? It should really be something like &#39;blanda&#39;."}, {"owner": {"reputation": 649, "user_id": 2998746, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2fc15b842026d8a039ffdd1b2a528aec?s=128&d=identicon&r=PG&f=1", "display_name": "Euge", "link": "https://stackoverflow.com/users/2998746/euge"}, "edited": false, "score": 0, "creation_date": 1504373472, "post_id": 46016129, "comment_id": 78992598, "body": "You can&#39;t have list whose elements are of different types. How is the test expressed?"}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1504375066, "post_id": 46016129, "comment_id": 78993103, "body": "Use <code>_</code> for values you don&#39;t care about (eg. <code>x:_:xs</code>)."}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 3, "creation_date": 1504375309, "post_id": 46016129, "comment_id": 78993197, "body": "The question title doesn&#39;t really reflect the content. Also, unless the output is validated <i>as a string</i> (which sounds like a terrible idea), the <code>.0</code> won&#39;t matter at all. It&#39;s possible that whoever wrote the sample output simply didn&#39;t think about how <code>show</code> works for most floating-point types in Haskell."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504382942, "post_id": 46016129, "comment_id": 78995257, "body": "Since this is about a homework problem, I&#39;m pretty sure this is off-topic. Only your instructor can actually tell you if you&#39;ve interpreted the instructions much too strictly (a frighteningly common thing for students to do...) or if this entirely trivial difference in expected output actually matters. Chances are, whoever wrote the problem simply computed the expected output in their head, as opposed to running the program (if they even wrote it as a part of writing the question...) and copy-pasting the actual output produced by Haskell."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504384563, "post_id": 46016129, "comment_id": 78995672, "body": "@user2407038 The current SO policy is that being homework is not a sufficient reason to close-vote the question as off topic. A few years ago we had the &quot;homework&quot; close-vote reason, but now it&#39;s gone because of the new policy. Now, most &quot;do the work for me&quot; questions are closed as too broad, while questions showing effort and asking for specific issues are kept open. (Personally, I now tend to upvote good honest questions which clearly state that it is homework, inviting help on small issues rather than a full solution)"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504385058, "post_id": 46016129, "comment_id": 78995798, "body": "@chi Sorry, I expressed this wrong. It&#39;s not off-topic just because it&#39;s homework; it&#39;s off-topic because it&#39;s a question about a specific requirement of a problem, but the author of the problem is not the author of the question, so no clarification can reasonably be expected from the author of the question (and also that information would be the answer itself). There are already two answers which make opposite assumptions about the question (one is &quot;the requirement is silly, here&#39;s why&quot;; the other is &quot;here&#39;s how you satisfy the requirement&quot;)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504386569, "post_id": 46016129, "comment_id": 78996250, "body": "@user2407038 Ah, I see now what you mean. The question is indeed about how to interpret the lack of &quot;.0&quot; in the requirement, which ultimately only the author of the question can answer. Still, I think one can make a really good guess for it, by saying that the provided reference output provides the value, and not the string representation of it. I find this to be very likely, also because achieving that exact output string would require some handling which is pointless as an homework exercise. Even if it&#39;s not 100% certain, I think a good guess here can still be useful to the OP."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504387846, "post_id": 46016129, "comment_id": 78996559, "body": "@chi &quot;I think a good guess here can still be useful to the OP.&quot; - indeed, which is why I have no intention to close/down vote. However, to be potentially more useful to all future readers, I am hoping that OP can rephrase the question slightly. But I don&#39;t see an obvious, objectively superior way to do so, so instead I just explain my reasoning for wanting this (aside: this has gotten very meta... I guess that&#39;s why we have the meta stack exchanges)."}], "answers": [{"comments": [{"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 2, "creation_date": 1504374330, "post_id": 46016500, "comment_id": 78992866, "body": "Add another dependency just to get rid of a trailing <code>.0</code>?"}, {"owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "reply_to_user": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1504374439, "post_id": 46016500, "comment_id": 78992908, "body": "As opposed to using floating-point numbers where they aren&#39;t appropriate for the sake of avoiding adding a dependency? Heck yeah"}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 1, "creation_date": 1504374557, "post_id": 46016500, "comment_id": 78992945, "body": "You could could format the numbers in other ways. And since this is a homework question with (presumably) rigid constraints, it might not even be allowed."}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1504375372, "post_id": 46016500, "comment_id": 78993217, "body": "Not trying to be a jerk, but as it currently stands, your answer doesn&#39;t address the question in full."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504386114, "post_id": 46016500, "comment_id": 78996121, "body": "Since the OP states it&#39;s homework, I doubt this was the intended solution."}], "tags": [], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "is_accepted": false, "score": 0, "last_activity_date": 1504374064, "creation_date": 1504374064, "answer_id": 46016500, "question_id": 46016129, "link": "https://stackoverflow.com/questions/46016129/haskell-shuffling-a-list-with-different-types/46016500#46016500", "title": "Haskell - Shuffling a list with different types?", "body": "<p>It sounds like you want to be using a <a href=\"https://hackage.haskell.org/package/Decimal-0.4.2/docs/Data-Decimal.html\" rel=\"nofollow noreferrer\">Decimal</a> type.</p>\n\n<pre><code>\u03bb&gt; import Data.Decimal\n\n\u03bb&gt; [3.4, 5, 23, 2.3, 185] :: [Decimal]\n[3.4,5,23,2.3,185]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 4, "last_activity_date": 1504376607, "creation_date": 1504376607, "answer_id": 46016925, "question_id": 46016129, "link": "https://stackoverflow.com/questions/46016129/haskell-shuffling-a-list-with-different-types/46016925#46016925", "title": "Haskell - Shuffling a list with different types?", "body": "<p>The answer is that your code is correct.</p>\n\n<p>By the time the list reaches your function, all the elements are already the same type</p>\n\n<pre><code>ghci&gt; [3.4, 2.3, 5, 185, 23]\n[3.4,2.3,5.0,185.0,23.0]\n</code></pre>\n\n<p>because all lists in Haskell are homogeneous from the get-go.  (Here <code>5</code> is interpreted as <code>fromInteger 5</code>, which casts it to whatever type is needed in its context)</p>\n\n<p>If you are comparing the output as a string, then you will have this problem. If you are testing them as lists of numbers, it's not a problem.</p>\n\n<pre><code>ghci&gt; skyffla [3.4, 2.3, 5, 185, 23] == [3.4, 5, 23, 2.3, 185]\nTrue\n</code></pre>\n\n<p>So what you are really facing is a display problem.  Chris Martin suggests <code>Data.Decimal</code>, which is one approach.  My perspective is that you don't have a problem, your code is correct, and it's your handling of test cases that needs to change.</p>\n"}], "owner": {"reputation": 61, "user_id": 7840385, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/ae8ff2b2f5c5430aa39b59a98181353b?s=128&d=identicon&r=PG&f=1", "display_name": "Augman", "link": "https://stackoverflow.com/users/7840385/augman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1504390090, "creation_date": 1504371507, "last_edit_date": 1504390090, "question_id": 46016129, "link": "https://stackoverflow.com/questions/46016129/haskell-shuffling-a-list-with-different-types", "title": "Haskell - Shuffling a list with different types?", "body": "<p>I am very new to Haskell, I started learning Haskell some days ago for a course that I have. In this course there is an assignment, or homework, that I am stuck with at the moment. I would appreciate hints and explanations to my problem more than full, outright answers, since this is homework, and as such I do not want to take credit for another's work. </p>\n\n<p>The assignment is to write a shuffling function (<code>skyffla</code>). The actual shuffling is not what I need help understanding, but rather one of the tests that the algorithm should pass. I'll mark the algorithm to the shuffling section with parentheses as to denote it as less important.</p>\n\n<p>(<code>skyffla</code> shuffles by taking the first element, the third element, the fifth element and so on, until all the odd indices were taken, and then append these to a list. </p>\n\n<p>The remaining elements in the first list should thereafter be processed by the same method, and appended onto the list that was first processed. And on, and on, until there is only one element left, which is then lastly appended onto the list.</p>\n\n<p>If I for example input:\n</p>\n\n<pre><code>skyffla [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n</code></pre>\n\n<p>it will give me:</p>\n\n<pre><code>1: _[1, 3, 5, 7, 9, 11] ++ skyffla ([2, 4, 6, 8, 10, 12])_\n2: _[1, 3, 5, 7, 9, 11] ++ [2, 6, 10] ++ skyffla ([4, 8, 12])_\n3: _[1, 3, 5, 7, 9, 11, 2, 6, 10] ++ [4, 12] ++ skyffla([8])_ \n(4): _[1, 3, 5, 7, 9, 11, 2, 6, 10, 4, 12, 8]_\n</code></pre>\n\n<p>This is exactly what my code does, and the actual shuffling is working just as it is intended. But as I mentioned, there is one test that I can't pass with my current implementation.)</p>\n\n<p>So, one of the tests is that skyffla should take: <code>[3.4, 2.3, 5, 185, 23]</code> and return: <code>_[3.4, 5, 23, 2.3, 185]_</code>.</p>\n\n<p>With the code that I  have, I get:  <code>_[3.4, 5.0, 23.0, 2.3, 185.0]_</code></p>\n\n<p>This is correct except for the \".0\" that is appended unto <em>5</em>, <em>185,</em> and <em>23</em>. </p>\n\n<p>Why is this?</p>\n\n<p>How can I make it so that \"5.0\" for instance instead would be listed as \"5\"? </p>\n\n<p>My code looks as follows:</p>\n\n<pre><code>skyffla :: [a] -&gt; [a]\nskyffla [] = []\nskyffla xs\n    | length xs == 1 = xs\n    | otherwise = dropUnevenElements xs ++ skyffla newList  where\n    newList = takeUnevenElements xs\n\ndropUnevenElements :: [a] -&gt; [a]\ndropUnevenElements [] = []\ndropUnevenElements (x:y:xs) = x:dropUnevenElements xs\ndropUnevenElements x = x\n\n\ntakeUnevenElements :: [a] -&gt; [a]\ntakeUnevenElements [] = []\ntakeUnevenElements (x:y:xs) = y:takeUnevenElements xs \ntakeUnevenElements x = []\n</code></pre>\n"}, {"tags": ["haskell", "cabal-install", "hsdev"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 2, "creation_date": 1504380649, "post_id": 46016071, "comment_id": 78994691, "body": "Use stack to install <code>hsdev</code>."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504384468, "post_id": 46016071, "comment_id": 78995643, "body": "You should look at the log file for clues as to why it happens. I guess trying  every conceivable way of building the package is one potential solution - maybe one will work!"}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1507310804, "post_id": 46016071, "comment_id": 80173881, "body": "This was likely a problem with haskell platform builds. cf: <a href=\"https://stackoverflow.com/a/46599487/371753\">stackoverflow.com/a/46599487/371753</a>"}], "owner": {"reputation": 463, "user_id": 5618041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5a34969d22f178eedd4acba43fa47e3?s=128&d=identicon&r=PG", "display_name": "harpresing", "link": "https://stackoverflow.com/users/5618041/harpresing"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 163, "favorite_count": 0, "closed_date": 1507594514, "answer_count": 0, "score": 0, "last_activity_date": 1507271033, "creation_date": 1504371086, "question_id": 46016071, "link": "https://stackoverflow.com/questions/46016071/cabal-install-hsdev-fails-with-exitfailure-1", "closed_reason": "Duplicate", "title": "cabal install hsdev fails with ExitFailure 1", "body": "<p>I was trying to setup Haskell auto completion on Sublime text on macOS Sierra using the pligin SublimeHaskell that requires the package hsdev. So when I try to install hsdev using cabal version <code>2.0.0.2</code> on ghci version <code>8.2.1</code> I get the following error-</p>\n\n<pre><code>Building regex-pcre-builtin-0.94.4.8.8.35...\nFailed to install regex-pcre-builtin-0.94.4.8.8.35\nBuild log ( /Users/harpreet/.cabal/logs/ghc-8.2.1/regex-pcre-builtin-0.94.4.8.8.35-ErSIfFBjU2O890llA9JKT4.log ):\ncabal: Entering directory '/var/folders/q3/0p0mxly93xv0khxhp59n7qrc0000gn/T/cabal-tmp-17197/regex-pcre-builtin-0.94.4.8.8.35'\nConfiguring regex-pcre-builtin-0.94.4.8.8.35...\nPreprocessing library for regex-pcre-builtin-0.94.4.8.8.35..\nBuilding library for regex-pcre-builtin-0.94.4.8.8.35..\n&lt;command line&gt;: cannot satisfy -package-id regex-base-0.93.2-6R4SyH615Fd96n1BuXT5nY:\n    regex-base-0.93.2-6R4SyH615Fd96n1BuXT5nY is unusable due to shadowed dependencies:\n      mtl-2.2.1-19EL8AGBsN3DnnOhrC9xY3\n    (use -v for more information)\n</code></pre>\n\n<p>and finally the build fails with the message - </p>\n\n<pre><code>cabal: Error: some packages failed to install:\nhsdev-0.2.5.1-KLZyINgHjNjLoIhf1REoIt depends on hsdev-0.2.5.1 which failed to\ninstall.\nregex-pcre-builtin-0.94.4.8.8.35-ErSIfFBjU2O890llA9JKT4 failed during the\nbuilding phase. The exception was:\nExitFailure 1\n</code></pre>\n\n<p>How should I fix this?</p>\n"}, {"tags": ["haskell", "ghc", "cabal", "cabal-install"], "answers": [{"tags": [], "owner": {"reputation": 191, "user_id": 5414805, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/329a31f8a12bd80134b9e57094052e04?s=128&d=identicon&r=PG&f=1", "display_name": "Zyphicx", "link": "https://stackoverflow.com/users/5414805/zyphicx"}, "is_accepted": true, "score": 2, "last_activity_date": 1504372991, "creation_date": 1504372991, "answer_id": 46016345, "question_id": 46015780, "link": "https://stackoverflow.com/questions/46015780/cabal-install-linking-error/46016345#46016345", "title": "Cabal install linking error", "body": "<p>I solved the issue. It turns out the problem was due to the GHC package I had got through pacman (I am using arch linux). The problem here is that whenever GHC tries to link to any libraries it does so statically. However, the pacman package for GHC doesn't include any of the static libraries needed. To solve the issue, I had to install a separate package called ghc-static which included all static libraries.</p>\n"}], "owner": {"reputation": 191, "user_id": 5414805, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/329a31f8a12bd80134b9e57094052e04?s=128&d=identicon&r=PG&f=1", "display_name": "Zyphicx", "link": "https://stackoverflow.com/users/5414805/zyphicx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 345, "favorite_count": 1, "accepted_answer_id": 46016345, "answer_count": 1, "score": 1, "last_activity_date": 1504423985, "creation_date": 1504368987, "last_edit_date": 1504423985, "question_id": 46015780, "link": "https://stackoverflow.com/questions/46015780/cabal-install-linking-error", "title": "Cabal install linking error", "body": "<p>I am quite new to Haskell programming and in the process of creating my first proper project using Cabal I encountered an error.</p>\n\n<p>I followed <a href=\"https://wiki.haskell.org/How_to_write_a_Haskell_program\" rel=\"nofollow noreferrer\">this</a> tutorial when structuring the project. However, when I got to the step where I had to enter <code>cabal install -j</code> I got the following error:</p>\n\n<pre><code>cabal: Entering directory '.'\nConfiguring CabalTest-0.1.0.0...\nBuilding CabalTest-0.1.0.0...\nPreprocessing executable 'CabalTest' for CabalTest-0.1.0.0...\nLinking dist/dist-sandbox-fe048ba8/build/CabalTest/CabalTest ...\n/usr/bin/ld: cannot find -lHSbase-4.9.1.0\n/usr/bin/ld: cannot find -lHSinteger-gmp-1.0.0.1\n/usr/bin/ld: cannot find -lHSghc-prim-0.5.0.0\n/usr/bin/ld: cannot find -lHSrts\ncollect2: error: ld returned 1 exit status\n`gcc' failed in phase `Linker'. (Exit code: 1)\ncabal: Leaving directory '.' \n</code></pre>\n\n<p>I have tried to run <code>cabal install base integer-gmp ghc-prim rts --reinstall</code>, to which it answers that it cannot find rts. When I modified the command to exclude rts it instead outputted this:</p>\n\n<pre><code>cabal: Could not resolve dependencies:\nnext goal: base (user goal)\nrejecting: base-4.10.0.0, base-4.9.1.0, base-4.9.0.0, base-4.8.2.0,\nbase-4.8.1.0, base-4.8.0.0, base-4.7.0.2, base-4.7.0.1, base-4.7.0.0,\nbase-4.6.0.1, base-4.6.0.0, base-4.5.1.0, base-4.5.0.0, base-4.4.1.0,\nbase-4.4.0.0, base-4.3.1.0, base-4.3.0.0, base-4.2.0.2, base-4.2.0.1,\nbase-4.2.0.0, base-4.1.0.0, base-4.0.0.0 (only already installed instances can\nbe used)\nrejecting: base-3.0.3.2 (conflict: base =&gt; base&gt;=4.0 &amp;&amp; &lt;4.3)\nrejecting: base-3.0.3.1 (conflict: base =&gt; base&gt;=4.0 &amp;&amp; &lt;4.2)\nDependency tree exhaustively searched.\n\nNote: when using a sandbox, all packages are required to have consistent\ndependencies. Try reinstalling/unregistering the offending packages or\nrecreating the sandbox.\n</code></pre>\n\n<p>Running <code>cabal update</code> did not help and changing the ~/.cabal/config file to include <code>user-install: False</code> did not do anything either.</p>\n"}, {"tags": ["haskell", "compare", "difference"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1504369475, "post_id": 46015693, "comment_id": 78991519, "body": "I do not get why for instance the first example has only one <i>same category</i> book?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504384770, "post_id": 46015693, "comment_id": 78995722, "body": "What have you tried? Do you have some code? If it doesn&#39;t compile, what&#39;s the error? If it does, what&#39;s the input/output pair for which it doesn&#39;t work? This question shows no effort to solve the problem, which makes it off-topic as it stands."}, {"owner": {"reputation": 63, "user_id": 8397335, "user_type": "registered", "accept_rate": 0, "profile_image": "https://lh5.googleusercontent.com/-c0MK9xQXSLc/AAAAAAAAAAI/AAAAAAAAAF4/-nKKH3p-4K4/photo.jpg?sz=128", "display_name": "Clark16", "link": "https://stackoverflow.com/users/8397335/clark16"}, "edited": false, "score": 0, "creation_date": 1504405976, "post_id": 46015693, "comment_id": 78999324, "body": "For the first example, because A1 was already counted as the same book(same category and same level), there are only H2 and H3 that has the same category but different level."}, {"owner": {"reputation": 63, "user_id": 8397335, "user_type": "registered", "accept_rate": 0, "profile_image": "https://lh5.googleusercontent.com/-c0MK9xQXSLc/AAAAAAAAAAI/AAAAAAAAAF4/-nKKH3p-4K4/photo.jpg?sz=128", "display_name": "Clark16", "link": "https://stackoverflow.com/users/8397335/clark16"}, "edited": false, "score": 0, "creation_date": 1504406202, "post_id": 46015693, "comment_id": 78999351, "body": "@ user2407038 when I tried to count the book with the same category but wrong level and the book with the same level but wrong category, sometimes, the same category or the same level will count more than once. Like, [&quot;A1&quot;,&quot;H3&quot;,&quot;M3&quot;] and [&quot;A1&quot;,&quot;H3&quot;,&quot;M1&quot;], the correct answer is (1,2,1), but I got (1,2,2), the level &#39;3&#39; are counted twice..."}], "answers": [{"tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 1, "last_activity_date": 1504371326, "creation_date": 1504371326, "answer_id": 46016102, "question_id": 46015693, "link": "https://stackoverflow.com/questions/46015693/haskell-how-to-calculate-the-difference-between-two-lists-of-string/46016102#46016102", "title": "Haskell. How to calculate the difference between two lists of string?", "body": "<p>The functions you want are in the <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/Data-List.html#g:20\" rel=\"nofollow noreferrer\"><code>Data.List</code> module</a>, so import that. You will also need the <code>on</code> function from <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/Data-Function.html\" rel=\"nofollow noreferrer\"><code>Data.Function</code></a>.</p>\n\n<p>Rather than having the books represented as a two-element list like \"H1\", you should make them pairs: <code>('H', 1)</code>. It makes life much easier, and you don't have to worry about invalid titles.</p>\n\n<p>The last bit of your question says that you never have two copies of a book on a shelf. That means that each shelf is a set of books. The <code>Data.List</code> module includes some set functions. So for instance the books that are the same in both lists is given by <code>intersect</code>, and the books on one shelf but not another are given by <code>(\\\\)</code>. You can also use the <code>By</code> variants of these functions, such as <code>intersectBy</code>. Each of these takes a function to use instead of <code>(==)</code>. If you represent a book by a pair as I suggested above then you can construct these functions like this:</p>\n\n<pre><code>zs = intersectBy ((==) `on` fst) xs ys\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 8397335, "user_type": "registered", "accept_rate": 0, "profile_image": "https://lh5.googleusercontent.com/-c0MK9xQXSLc/AAAAAAAAAAI/AAAAAAAAAF4/-nKKH3p-4K4/photo.jpg?sz=128", "display_name": "Clark16", "link": "https://stackoverflow.com/users/8397335/clark16"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1314, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1504371326, "creation_date": 1504368388, "question_id": 46015693, "link": "https://stackoverflow.com/questions/46015693/haskell-how-to-calculate-the-difference-between-two-lists-of-string", "title": "Haskell. How to calculate the difference between two lists of string?", "body": "<p>I have a question that can be described as this situation.<br></p>\n\n<p>There are three different categories of books: Medical book, Art book and History book.\nEach book has three level: Elementary, Intermediate, Advanced.</p>\n\n<p>These books will be put on bookshelves.<br>\nThe problem is to compare the difference about two different bookshelves.</p>\n\n<p>I have abstracted this question as two lists of string.<br></p>\n\n<p>For example:</p>\n\n<hr>\n\n<p><li>Medical book -> M\n<li>Art book -> A\n<li>History book -> H</p>\n\n<p><li>Elementary -> 1\n<li>Intermediate -> 2\n<li>Advanced -> 3</p>\n\n<hr>\n\n<p>Now, the bookshelves can be defined as [\"A1\",\"H2\",\"M3\"].<br>\nQuestion:<br></p>\n\n<ul>\n How many books are same? (Same category same level)<br>\n How many books have the same category but wrong level?(not include the same book)<br>\n How many books have the same level but wrong category?(not include the same book)<br>\n</ul>\n\n<p>By the way, the same books are not put on the same bookshelf, which means every element in the list is unique and regardless of the order of the book.</p>\n\n<p>Example</p>\n\n<pre><code>[\"A1\",\"H2\",\"M3\"] [\"A1\",\"H3\",\"A2\"] -&gt; (1 same book, 1 same category book,  2 same level books)  -&gt; (1,1,2)\n[\"H3\",\"M2\",\"A2\"] [\"H2\",\"M1\",\"H1\"] -&gt; (0 same book, 2 same category books, 1 same level book)   -&gt; (0,2,1)\n[\"A1\",\"H1\",\"M1\"] [\"A2\",\"H2\",\"M2\"] -&gt; (0 same book, 3 same catefory books, 0 same level book)   -&gt; (0,3,0)\n</code></pre>\n\n<p>When I count the same category book with different level or same level book with different category, sometimes I got more than 3 ...</p>\n"}, {"tags": ["haskell", "exception", "io"], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 2, "last_activity_date": 1504363075, "creation_date": 1504363075, "answer_id": 46014867, "question_id": 46014595, "link": "https://stackoverflow.com/questions/46014595/exception-user-error-prelude-readio-no-parse-in-haskell/46014867#46014867", "title": "*** Exception: user error (Prelude.readIO: no parse) in haskell", "body": "<p>When you use <code>getChar</code>, it will take only a single character from your stream. However, if you've entered <kbd>A</kbd><kbd>Enter</kbd>, the newline character <code>'\\n'</code> is still in your <code>stdin</code>. A <code>'\\n'</code> cannot get parsed into an <code>Int</code>, therefore you end up with that error.</p>\n\n<p>You can remove that newline if you call <code>getLine</code> afterwards:</p>\n\n<pre><code>       ch &lt;- getChar\n       putStrLn (show (charAt word ch))\n       _ &lt;- getLine\n</code></pre>\n\n<p>Or you write your own helpers:</p>\n\n<pre><code>promptInt :: IO Int\npromptInt = do\n  putStr \"Int: \"\n  line &lt;- getLine\n  case readMaybe line of\n    Just x -&gt; return x\n    _      -&gt; putStrLn \"Try again.\" &gt;&gt; promptInt\n\npromptChar :: IO Char\npromptChar = do\n  putStr \"Char: \"\n  line &lt;- getLine\n  case line of\n    [x,_] -&gt; return x\n    _     -&gt; putStrLn \"Try again.\" &gt;&gt; promptChar\n</code></pre>\n"}], "owner": {"reputation": 720, "user_id": 1987575, "user_type": "registered", "accept_rate": 37, "profile_image": "https://www.gravatar.com/avatar/5b4fbab56b918a56624a829ee5a0b7ec?s=128&d=identicon&r=PG", "display_name": "KaramJaber", "link": "https://stackoverflow.com/users/1987575/karamjaber"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1574, "favorite_count": 0, "accepted_answer_id": 46014867, "answer_count": 1, "score": 0, "last_activity_date": 1504363075, "creation_date": 1504361108, "question_id": 46014595, "link": "https://stackoverflow.com/questions/46014595/exception-user-error-prelude-readio-no-parse-in-haskell", "title": "*** Exception: user error (Prelude.readIO: no parse) in haskell", "body": "<p>I'm trying to write a program that loops all the time waiting for an input from the user but for some reason it doesn't loop.\nMy program is :</p>\n\n<pre><code>charAt :: String-&gt;Char-&gt;Int\nmain = do \n    x &lt;- readLn\n    if x == 1\n        then do\n           putStrLn \"Word: \"\n           word &lt;- getLine\n           putStrLn \"Char: \"\n           ch &lt;- getChar\n           putStrLn (show (charAt word ch))\n        else print \"Nothing\"\n    main\n</code></pre>\n\n<p>But i actually get this error:</p>\n\n<blockquote>\n  <p>*** Exception: user error (Prelude.readIO: no parse)</p>\n</blockquote>\n\n<p>If i remove the last main calling the program will work .\ndoes anybody knows why is that happening?</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 3, "creation_date": 1504351834, "post_id": 46013184, "comment_id": 78986650, "body": "Yes, you&#39;re saying that, but <code>[]</code> is of type <code>[a]</code>. So the compiler is telling you that you&#39;re saying something that&#39;s wrong."}, {"owner": {"reputation": 1309, "user_id": 4121440, "user_type": "registered", "accept_rate": 89, "profile_image": "https://lh6.googleusercontent.com/-sa6Am0YxEy0/AAAAAAAAAAI/AAAAAAAAABg/4mikHQDhZbI/photo.jpg?sz=128", "display_name": "Oleg", "link": "https://stackoverflow.com/users/4121440/oleg"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1504379340, "post_id": 46013184, "comment_id": 78994338, "body": "@sepp2k I thought that by writing empty = [] I give to this class some kind of &#39;default&#39; implementation just like in a java interface."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504385576, "post_id": 46013184, "comment_id": 78995954, "body": "@Oleg You are indeed correct; but the default implementation must match the most general type of the class function. With <code>DefaultSignatures</code>, you are allowed to give a default which is more specific than the most general type. However, that doesn&#39;t work for your case, because to have <code>[] :: m k v</code> you must have <code>m k ~ []</code>, but that&#39;s trivially false."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1504386715, "post_id": 46013184, "comment_id": 78996288, "body": "With <code>DefaultSignatures</code> (and <code>FlexibleContexts</code>) you could use something like <code>default empty :: Monoid (m k v) =&gt; m k v; empty = mempty</code>."}, {"owner": {"reputation": 1309, "user_id": 4121440, "user_type": "registered", "accept_rate": 89, "profile_image": "https://lh6.googleusercontent.com/-sa6Am0YxEy0/AAAAAAAAAAI/AAAAAAAAABg/4mikHQDhZbI/photo.jpg?sz=128", "display_name": "Oleg", "link": "https://stackoverflow.com/users/4121440/oleg"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504387083, "post_id": 46013184, "comment_id": 78996386, "body": "@user2407038 what is the significance of <code>~</code> in <code>m k ~ [] </code> ?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504387961, "post_id": 46013184, "comment_id": 78996585, "body": "<code>m k ~ []</code> means the type <code>m k</code> is equal to the type <code>[]</code> (the <code>~</code> symbol is the symbol used by GHC to denote a type equality in actual code; and it is useful to distinguish from value-level equality)."}], "answers": [{"comments": [{"owner": {"reputation": 1309, "user_id": 4121440, "user_type": "registered", "accept_rate": 89, "profile_image": "https://lh6.googleusercontent.com/-sa6Am0YxEy0/AAAAAAAAAAI/AAAAAAAAABg/4mikHQDhZbI/photo.jpg?sz=128", "display_name": "Oleg", "link": "https://stackoverflow.com/users/4121440/oleg"}, "edited": false, "score": 0, "creation_date": 1504375260, "post_id": 46013323, "comment_id": 78993179, "body": "Thanks, indeed class and instances keywords are very confusing when coming from OOP"}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 7, "last_activity_date": 1504352165, "last_edit_date": 1504352165, "creation_date": 1504351824, "answer_id": 46013323, "question_id": 46013184, "link": "https://stackoverflow.com/questions/46013184/define-an-empty-container-directly-in-a-haskell-class/46013323#46013323", "title": "Define an empty container directly in a Haskell class?", "body": "<p>I think the root of your confusion may be the <code>class</code> keyword.</p>\n\n<p>Forget all your preconceived notions of classes. A Haskell <code>class</code> is really nothing like a <code>class</code> in an object-oriented language like Java. Type classes are a lot more like a Java <code>interface</code> than a <code>class</code>. </p>\n\n<p>More specifically, a <code>class</code> in Haskell defines a <em>signature</em>, or an <em>interface</em>, that a type may conform to. So when you write</p>\n\n<pre><code>class MapLike m where\n    empty :: m k v\n    lookup :: Ord k =&gt; k -&gt; m k v -&gt; Maybe v\n</code></pre>\n\n<p>you're declaring a class of map-like types <code>m :: * -&gt; * -&gt; *</code>, and in order to be <code>MapLike</code> a type must support at least the <code>empty</code> and <code>lookup</code> operations.</p>\n\n<p>Now I can write functions which work for any <code>MapLike</code> type.</p>\n\n<pre><code>contains :: (MapLike m, Ord k) =&gt; m k v -&gt; k -&gt; Bool\nm `contains` k =\n    case lookup k m of\n        Just _ -&gt; True\n        Nothing -&gt; False\n</code></pre>\n\n<p>An <em>implementation</em> of a type class goes in an <code>instance</code>. You say which <code>class</code> you're implementing, you say which type implements it, and then you give an implementation for the functions declared in the class. So, below, I'm saying that <code>ListMap</code> is a <code>MapLike</code> type, and I'm explaining how the <code>empty</code> and <code>lookup</code> operations work for the <code>ListMap</code> type.</p>\n\n<pre><code>instance MapLike ListMap where\n    empty = ListMap []\n    lookup k (ListMap []) = Nothing\n    lookup k (ListMap ((k', v):kvs)\n        | k == k' = Just v\n        | otherwise = lookup k (ListMap kvs)\n</code></pre>\n\n<p>Since <code>contains</code> works for any <code>MapLike</code> type, and <code>ListMap</code> is an instance of <code>MapLike</code>, we can use <code>contains</code> with a <code>ListMap</code>.</p>\n\n<pre><code>ghci&gt; let myMap = ListMap [(\"foo\", 'a'), (\"bar\", b)]\nghci&gt; myMap `contains` \"foo\"\nTrue\nghci&gt; myMap `contains` \"nabble\"\nFalse\n</code></pre>\n\n<p>Object-oriented classes classify objects, whereas type classes classify types. I do think the words <code>class</code> and <code>instance</code> are unfortunate - they're confusing to newcomers with an OO background - but Haskell predates OOP becoming popular so the language designers weren't to know. <a href=\"https://www.idris-lang.org/\" rel=\"noreferrer\">Idris</a>, a newer language in the Haskell family, also has type classes, but <a href=\"http://docs.idris-lang.org/en/latest/tutorial/interfaces.html\" rel=\"noreferrer\">they're called <code>interface</code>s</a>, which I think is a much better name.</p>\n"}], "owner": {"reputation": 1309, "user_id": 4121440, "user_type": "registered", "accept_rate": 89, "profile_image": "https://lh6.googleusercontent.com/-sa6Am0YxEy0/AAAAAAAAAAI/AAAAAAAAABg/4mikHQDhZbI/photo.jpg?sz=128", "display_name": "Oleg", "link": "https://stackoverflow.com/users/4121440/oleg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "accepted_answer_id": 46013323, "answer_count": 1, "score": 1, "last_activity_date": 1504381079, "creation_date": 1504350790, "last_edit_date": 1504381079, "question_id": 46013184, "link": "https://stackoverflow.com/questions/46013184/define-an-empty-container-directly-in-a-haskell-class", "title": "Define an empty container directly in a Haskell class?", "body": "<p>My task is to implement these functions but I'm stuck at first one.</p>\n\n<p>Why can't I write <code>empty</code> like this ? (<code>ghci</code> complains : <code>couldn't match type</code>)</p>\n\n<p>Am I not saying that <code>[]</code> should be of <code>type m k v</code> ?</p>\n\n<pre><code>class MapLike m where\n    empty :: m k v\n    empty = [] :: m k v\n    lookup :: Ord k =&gt; k -&gt; m k v -&gt; Maybe v\n\nnewtype ListMap k v = ListMap { getListMap :: [(k,v)] } deriving (Eq,Show)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 1, "creation_date": 1504346440, "post_id": 46012596, "comment_id": 78985278, "body": "What should it return if you made a <code>Protein</code> instead of a <code>DNA</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": true, "score": 4, "last_activity_date": 1504346508, "creation_date": 1504346508, "answer_id": 46012611, "question_id": 46012596, "link": "https://stackoverflow.com/questions/46012596/returning-value-from-a-datatype-haskell/46012611#46012611", "title": "Returning value from a Datatype Haskell", "body": "<p>You can pattern match it, for example:</p>\n\n<pre><code>getMolString :: MolSeq -&gt; String\ngetMolString (DNA     (s, _) _) = s\ngetMolString (Protein (s, _) _) = s\n</code></pre>\n\n<p>Here you have a <a href=\"https://repl.it/Kd9E/0\" rel=\"noreferrer\">live example</a></p>\n\n<p>A data type is just data, you should make functions to work with that, you can't think of them as objects with attributes or methods.</p>\n"}], "owner": {"reputation": 337, "user_id": 7804993, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/12abcdce92eb5eaec0c7a4c2ee002060?s=128&d=identicon&r=PG&f=1", "display_name": "Sequinex", "link": "https://stackoverflow.com/users/7804993/sequinex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 46012611, "answer_count": 1, "score": 0, "last_activity_date": 1504346508, "creation_date": 1504346343, "question_id": 46012596, "link": "https://stackoverflow.com/questions/46012596/returning-value-from-a-datatype-haskell", "title": "Returning value from a Datatype Haskell", "body": "<p>Lets say I have created the following Datatype that looks like this:</p>\n\n<pre><code>data MolSeq = DNA (String, String) String | Protein (String, String) String \n</code></pre>\n\n<p>Then I create a MolSeq datatype of type DNA like this:</p>\n\n<pre><code>dna = DNA (\"T2\", \"ACATAA\") \"DNA\"\n</code></pre>\n\n<p>How can I then later in my program return let's say the value \"T2\"?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["list", "haskell", "fold"], "comments": [{"owner": {"reputation": 8576, "user_id": 327074, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/785321440230453d4a2a721f753bd538?s=128&d=identicon&r=PG", "display_name": "icc97", "link": "https://stackoverflow.com/users/327074/icc97"}, "edited": false, "score": 0, "creation_date": 1504343798, "post_id": 46012263, "comment_id": 78984672, "body": "See <a href=\"https://stackoverflow.com/questions/26847192/reverse-a-list-in-haskell\" title=\"reverse a list in haskell\">stackoverflow.com/questions/26847192/reverse-a-list-in-haske&zwnj;&#8203;ll</a>"}, {"owner": {"reputation": 8576, "user_id": 327074, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/785321440230453d4a2a721f753bd538?s=128&d=identicon&r=PG", "display_name": "icc97", "link": "https://stackoverflow.com/users/327074/icc97"}, "edited": false, "score": 0, "creation_date": 1504343810, "post_id": 46012263, "comment_id": 78984674, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/26847192/reverse-a-list-in-haskell\">Reverse a list in haskell</a>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 8576, "user_id": 327074, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/785321440230453d4a2a721f753bd538?s=128&d=identicon&r=PG", "display_name": "icc97", "link": "https://stackoverflow.com/users/327074/icc97"}, "edited": false, "score": 0, "creation_date": 1504343895, "post_id": 46012263, "comment_id": 78984696, "body": "@icc97 though a correct <code>foldl</code> solution is given in that question, the question itself not really about that, so I wouldn&#39;t say it&#39;s a duplicate."}, {"owner": {"reputation": 8576, "user_id": 327074, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/785321440230453d4a2a721f753bd538?s=128&d=identicon&r=PG", "display_name": "icc97", "link": "https://stackoverflow.com/users/327074/icc97"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1504343972, "post_id": 46012263, "comment_id": 78984714, "body": "@leftaroundabout OP wants to use <code>foldl</code> to reverse a list the <a href=\"https://stackoverflow.com/a/26847373/327074\">top answer</a> to the duplicate question gives: <code>reverseList = foldl (\\acc x -&gt; x : acc) []</code>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1504344124, "post_id": 46012263, "comment_id": 78984746, "body": "As I was saying, the solution is sure there. Just, a <i>question duplicate</i> should actually be asking the same question, and it&#39;s not really adressed over there why <code>foldl</code> without <code>flip</code> gives the the result in the wrong order."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1504373405, "post_id": 46012263, "comment_id": 78992582, "body": "your definition gives <code>reverse [1,2,3] = (([] ++ [1]) ++ [2]) ++ [3]</code>. the same definition with <code>foldr</code> would produce <code>reverse [1,2,3] = [1] ++ reverse [2,3]</code>."}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1504372816, "post_id": 46012305, "comment_id": 78992412, "body": "&quot;concatenates ... to&quot; is non-directional; confusing. &quot;before&quot; would be much better."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": false, "score": 3, "last_activity_date": 1504343914, "creation_date": 1504343914, "answer_id": 46012305, "question_id": 46012263, "link": "https://stackoverflow.com/questions/46012263/fail-to-use-foldl-to-reverse-a-list-in-haskell/46012305#46012305", "title": "fail to use foldl to reverse a list in Haskell", "body": "<p><code>foldl</code> passes the accumulator as the first argument to the function. <code>++</code> concatenates the first argument to the second, but, to reverse a list, you need to concatenate the second to the first. You can do this using <code>flip (++)</code>:</p>\n\n<pre><code>Prelude&gt; let reverse list = foldl (flip (++)) [] (map (\\x -&gt; [x]) list)\nPrelude&gt; reverse [1..5]\n[5,4,3,2,1]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1504349250, "post_id": 46012359, "comment_id": 78985960, "body": "im always struggling with the difference foldl vs foldr, why use foldl here? would you mind a quick explanation? thanks!"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1504349663, "post_id": 46012359, "comment_id": 78986065, "body": "@DanielSanchez: <code>foldr</code> starts a the right end of the list (or more general the foldable). So if the list is <code>[a,b,c,d]</code>, it will calculate <code>f a (f b (f c (f d z)))</code>. Whereas <code>foldl</code> will calculate <code>f (f (f (f z a) b) c) d</code>. With <code>z</code> the initial element`."}, {"owner": {"reputation": 17, "user_id": 8456850, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9d3ebd9c83d5e96d60a30c9e6d32f49d?s=128&d=identicon&r=PG&f=1", "display_name": "YM.Zhou", "link": "https://stackoverflow.com/users/8456850/ym-zhou"}, "edited": false, "score": 0, "creation_date": 1504415835, "post_id": 46012359, "comment_id": 79000584, "body": "Worked for me! Thanks for your advice."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 3, "last_activity_date": 1504344386, "creation_date": 1504344386, "answer_id": 46012359, "question_id": 46012263, "link": "https://stackoverflow.com/questions/46012263/fail-to-use-foldl-to-reverse-a-list-in-haskell/46012359#46012359", "title": "fail to use foldl to reverse a list in Haskell", "body": "<p>Instead of first converting all elements of the list to singleton lists (which is expensive as well), you can use the cons <code>(:)</code> function:</p>\n\n<pre><code>reverse :: Foldable t =&gt; t a  -&gt; [a]\nreverse = foldl (flip (:)) []\n</code></pre>\n\n<p>So here we use <code>flip (:) :: [a] -&gt; a -&gt; [a]</code> as fold function. It takes a tail <code>[a]</code> and a head <code>a</code>, and constructs a list with the head as first element and the tail as last element.</p>\n\n<p>So what happens is:</p>\n\n<pre><code>   foldl (flip (:)) [] [1,4,2,5]\n-&gt; foldl (flip (:)) (1:[]) [4,2,5]\n-&gt; foldl (flip (:)) (4:1:[]) [2,5]\n-&gt; foldl (flip (:)) (2:4:1:[]) [5]\n-&gt; foldl (flip (:)) (5:2:4:1:[]) []\n-&gt; (5:2:4:1:[])\n-&gt; [5,2,4,1]\n</code></pre>\n"}], "owner": {"reputation": 17, "user_id": 8456850, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9d3ebd9c83d5e96d60a30c9e6d32f49d?s=128&d=identicon&r=PG&f=1", "display_name": "YM.Zhou", "link": "https://stackoverflow.com/users/8456850/ym-zhou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 903, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1504348700, "creation_date": 1504343567, "last_edit_date": 1504348700, "question_id": 46012263, "link": "https://stackoverflow.com/questions/46012263/fail-to-use-foldl-to-reverse-a-list-in-haskell", "title": "fail to use foldl to reverse a list in Haskell", "body": "<p>I know how to use recursion to reverse a list, but I am trying to use foldl to make it more efficient. My code is as follow:</p>\n\n<pre><code>reverse list = foldl (++) [] (map (\\x -&gt; [x]) list)\n</code></pre>\n\n<p>When running it in GHCi, it returns the same list as input. What goes wrong? I also try to finish it by foldr but it does not show any change.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 3, "creation_date": 1504338056, "post_id": 46011518, "comment_id": 78983420, "body": "Your terminology here seems a little confused\u2014\u201cpartial functions\u201d are a quite distinct concept from what you are talking about in this question\u2014but that\u2019s mostly a separate problem. The core issue here is that <code>(f . g) x</code> is equivalent to <code>(f (g x))</code> but you are hoping that <code>((* 2) . (+)) n</code> will be the same as <code>((* 2) . (+ n))</code>, when clearly it is really <code>(* 2) ((+) n)</code> by the definition of <code>(.)</code>, which is <i>not</i> the same. You need a different function than <code>(.)</code> for that sort of composition."}, {"owner": {"reputation": 2570, "user_id": 4142266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rMCN5.png?s=128&g=1", "display_name": "mschmidt", "link": "https://stackoverflow.com/users/4142266/mschmidt"}, "edited": false, "score": 3, "creation_date": 1504338364, "post_id": 46011518, "comment_id": 78983479, "body": "Your first example <code>f = ((*2).(+)) 3</code> can be written as <code>f = (.) (*2) . (+) $ 3</code>. The pattern to do this is: <code>(.) f1 . f2</code>, where <code>f1</code> and <code>f2</code> are functions that take 1 and 2 arguments respectively."}, {"owner": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 3, "creation_date": 1504338657, "post_id": 46011518, "comment_id": 78983542, "body": "... and using that, you can do <code>map ( (.) (*2) . (+) ) [1,2,3]</code> which gives you a list of functions of type <code>Num a =&gt; a -&gt; a</code> each."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 2570, "user_id": 4142266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rMCN5.png?s=128&g=1", "display_name": "mschmidt", "link": "https://stackoverflow.com/users/4142266/mschmidt"}, "edited": false, "score": 0, "creation_date": 1504339364, "post_id": 46011518, "comment_id": 78983681, "body": "@mschmidt You could expand that into an answer."}, {"owner": {"reputation": 144, "user_id": 8299684, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/13e72908732ef4648880cd34f9b0279d?s=128&d=identicon&r=PG", "display_name": "Raskell", "link": "https://stackoverflow.com/users/8299684/raskell"}, "reply_to_user": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 0, "creation_date": 1504342020, "post_id": 46011518, "comment_id": 78984285, "body": "@AlexisKing Yes, I did indeed mean partially applied functions. Let me amend the question."}], "answers": [{"comments": [{"owner": {"reputation": 144, "user_id": 8299684, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/13e72908732ef4648880cd34f9b0279d?s=128&d=identicon&r=PG", "display_name": "Raskell", "link": "https://stackoverflow.com/users/8299684/raskell"}, "edited": false, "score": 0, "creation_date": 1504342833, "post_id": 46011803, "comment_id": 78984450, "body": "Am I right to think that the additional <code>.</code> is needed to compose (*2) with the function arising from partial application of (+)? Yes, I think that&#39;s indeed what it is. <code>(.) ((.) (*2)) (+)</code>"}], "tags": [], "owner": {"reputation": 214, "user_id": 6022119, "user_type": "registered", "profile_image": "https://graph.facebook.com/932720230116038/picture?type=large", "display_name": "Igor Fedorov", "link": "https://stackoverflow.com/users/6022119/igor-fedorov"}, "is_accepted": true, "score": 7, "last_activity_date": 1504341534, "last_edit_date": 1504341534, "creation_date": 1504339823, "answer_id": 46011803, "question_id": 46011518, "link": "https://stackoverflow.com/questions/46011518/does-haskell-support-composition-of-partially-applied-functions/46011803#46011803", "title": "Does Haskell support composition of partially applied functions?", "body": "<p>Haskell support composition of partial functions but you have type mismatch. Composition is function </p>\n\n<pre><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>In your case you have two function </p>\n\n<pre><code>(*2) :: Num a =&gt; a -&gt; a\n(+)  :: Num a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>and when you compose this functions type of result will be</p>\n\n<pre><code>((*2).(+)) :: (Num (a -&gt; a), Num a) =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>that not what you want. You can rewrite your function <code>f</code> such as <code>(.) (*2) . (+)</code> but I think that lambda is more readable.</p>\n\n<p>And you confuse partial function and partial application. Partial function is function that defined not for the entire domain and partial application is the process of fixing a number of arguments to a function, producing function of smaller arity.</p>\n"}, {"tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 3, "last_activity_date": 1504367127, "creation_date": 1504367127, "answer_id": 46015486, "question_id": 46011518, "link": "https://stackoverflow.com/questions/46011518/does-haskell-support-composition-of-partially-applied-functions/46015486#46015486", "title": "Does Haskell support composition of partially applied functions?", "body": "<p>When going to point-free it might get confusing. If we go through the type signatures;</p>\n\n<p><code>(.)</code> is <code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code></p>\n\n<p><code>(+)</code> is <code>Num a =&gt; a -&gt; a -&gt; a</code></p>\n\n<p><code>(2*)</code> is <code>Num a =&gt; a -&gt; a</code></p>\n\n<p>Now if we do <code>(2*) . (+)</code> being the second parameter of <code>(.)</code> which is <code>(+)</code>, has to have a type <code>(a -&gt; b)</code> which is in fact true when we rewrite <code>(+)</code>s type as <code>Num a =&gt; a -&gt; (a -&gt; a)</code>. So our <code>b</code> type happens to be <code>Num a =&gt; a -&gt; a</code>. Now remember that <code>(.)</code> takes <code>(b -&gt; c)</code> as first parameter. We have a little problem here because in our expression <code>(2*) . (+)</code> <code>(2*)</code> waits for a <code>b</code> type like <code>Num a =&gt; a</code> while we have our <code>b</code> type like <code>Num a =&gt; a -&gt; a</code>. You can't multiply a function by 2..! We must transform <code>(2*)</code> into such a function that would take a function of our type which is <code>Num a =&gt; a -&gt; a</code>, run it and feed it's result to <code>(2*)</code>. No need to look this is no more than <code>(.)</code>. In this case if we write again like <code>((2*) . )</code> we can safely feed our <code>Num a =&gt; a -&gt; a</code> type function (remember this is partially applied <code>(+)</code>). Let us wrap it up...</p>\n\n<p>Our point free equivalent of <code>\\x y -&gt; 2*(x + y)</code> is <code>((2*) . ) . (+)</code></p>\n\n<pre><code>Prelude&gt; (((2*) . ) . (+)) 3 5\n16\n</code></pre>\n\n<p>We may use applicative functors of <code>((-&gt;) r)</code> type to express ourselves more easily in these situations. I will try to add it once i have more time.</p>\n"}], "owner": {"reputation": 144, "user_id": 8299684, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/13e72908732ef4648880cd34f9b0279d?s=128&d=identicon&r=PG", "display_name": "Raskell", "link": "https://stackoverflow.com/users/8299684/raskell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 0, "accepted_answer_id": 46011803, "answer_count": 2, "score": 6, "last_activity_date": 1504367127, "creation_date": 1504337252, "last_edit_date": 1504342048, "question_id": 46011518, "link": "https://stackoverflow.com/questions/46011518/does-haskell-support-composition-of-partially-applied-functions", "title": "Does Haskell support composition of partially applied functions?", "body": "<p>For example, I can't do </p>\n\n<pre><code>f = ((*2).(+)) 3\n</code></pre>\n\n<p>which is alright since I can always do</p>\n\n<pre><code>f = (*2).(+3)\n</code></pre>\n\n<p>but this is slightly inconvenient when I want to create a list of functions, e.g.</p>\n\n<pre><code>map ((*2).(+)) [1, 2, 3]\n</code></pre>\n\n<p>whereas </p>\n\n<pre><code>map (+) [1, 2, 3]\n</code></pre>\n\n<p>would be alright.</p>\n\n<p>Of course, I can always use lambda notation to implement currying:</p>\n\n<pre><code>map (\\x y -&gt; 2*(x + y)) [1, 2, 3]\n</code></pre>\n\n<p>As far as I can tell, GHC doesn't like composing partially applied functions because it doesn't know how to feed function types to operations like (*2). </p>\n\n<pre><code>(+) 2 :: Num a =&gt; a -&gt; a \n(*2) :: Num a =&gt; a -&gt; a \n</code></pre>\n\n<p>But I've always thought it should be a rather natural thing: the type of the output of (+) is Num a => a, so (*2) should be able to 'eat' that. </p>\n\n<p>My question is: is this implemented in some way? Or, does someone have any idea why such a straightforward thing isn't implemented in Haskell?</p>\n"}, {"tags": ["mysql", "haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504386066, "post_id": 46010959, "comment_id": 78996103, "body": "What does &quot;can&#39;t figure out&quot; mean? What did you try to make it fit? Did you read the docs of <code>binary</code>? Even if you parse the result, you still have to pattern match on a list (so you still rely on the order) of values, and for each value, you have to pattern match on the constructor for the appropriate SQL type. Everything about this package seems to treat a table as a sequence of columns (as opposed to a set, which is the interpretation you want) - this is probably done for performance reasons. The package simply doesn&#39;t offer this functionality (probably by design)."}, {"owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504386228, "post_id": 46010959, "comment_id": 78996151, "body": "What do you think &quot;Can&#39;t figure out&quot; means? What I&#39;ve tried doing is seeing a path forward by reading the docs before I start coding. Thanks for the rest of your answer though seems like you might be right."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504387192, "post_id": 46010959, "comment_id": 78996408, "body": "I don&#39;t know what &quot;can&#39;t figure out&quot; means - hence the question. It could be mean you spent ten hours hacking trying to figure it out, and couldn&#39;t; or you looked at the type signature and decided you couldn&#39;t figure it out. To rephrase my question: what is your existing knowledge regarding how <code>getTextField</code> (or any other part of this package) could be used to solve your problem?"}, {"owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504387657, "post_id": 46010959, "comment_id": 78996517, "body": "I couldn&#39;t look at the type signature and understand what it&#39;s supposed to return. The Get function doesn&#39;t have a type Show and I don&#39;t know what it&#39;s used for. I think it&#39;s a red herring though, so probably not worth going down the rabbit hole if it&#39;s not going to help me query the value by column name. I&#39;m wondering if I can zip both headers and values together and create a helper function myself to return the data I want."}], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1504332119, "creation_date": 1504332119, "question_id": 46010959, "link": "https://stackoverflow.com/questions/46010959/get-mysqlvalue-by-column-name-using-mysql-haskell", "title": "Get MySQLValue by column name using mysql-haskell", "body": "<p>I'm using the <a href=\"https://hackage.haskell.org/package/mysql-haskell-0.8.1.0\" rel=\"nofollow noreferrer\">mysql-haskell</a> package. I want to write my query and then get each value from a row by column name. But I'm having trouble putting the pieces together.</p>\n\n<p><a href=\"https://hackage.haskell.org/package/mysql-haskell-0.8.1.0/docs/Database-MySQL-Base.html#v:queryStmt\" rel=\"nofollow noreferrer\">Here</a> is the query function I am using.</p>\n\n<pre><code>queryStmt :: MySQLConn -&gt; StmtID -&gt; [MySQLValue] -&gt; IO ([ColumnDef], InputStream [MySQLValue])\n</code></pre>\n\n<p>This is my current code.</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-} \n{-# LANGUAGE ScopedTypeVariables #-}\nmodule Main where\n\nimport Database.MySQL.Base\nimport Data.Binary.Get\nimport qualified System.IO.Streams as Streams\nimport Data.Word\nimport Data.Traversable\n\nmain :: IO ()\nmain = do\n  conn &lt;- connect defaultConnectInfo {ciUser = \"ffxi_auction_house\", ciDatabase = \"darkstar\" }\n  s &lt;- prepareStmt conn \"SELECT itemid FROM item_armor WHERE name = ?\"\n  (def:defs, is) &lt;- queryStmt conn s [MySQLText \"moogle_suit\"]\n  armorStreams &lt;- Streams.toList is\n  armors &lt;- forM armorStreams $ \\(MySQLInt16U value:_) -&gt; return ItemArmor { itemid = value }\n  print armors\n\ndata ItemArmor = ItemArmor\n  {\n    itemid :: !Word16\n  } deriving (Show)\n</code></pre>\n\n<p>The querystmt returns the list of columns a matrix of data.\nThis actually works but I have to rely on the order of the return set.</p>\n\n<p>There is one function called <a href=\"https://hackage.haskell.org/package/mysql-haskell-0.8.1.0/docs/Database-MySQL-Protocol-MySQLValue.html#v:getTextField\" rel=\"nofollow noreferrer\">getTextField</a> I keep looking at but I can't figure out how it fits.</p>\n\n<pre><code>getTextField :: ColumnDef -&gt; Get MySQLValue\n</code></pre>\n"}, {"tags": ["haskell", "syntax"], "comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1504336271, "post_id": 46010524, "comment_id": 78983015, "body": "Others have already answered about the difference between <code>let</code>\u2026<code>in</code> and <code>where</code> here. But as for indentation, a good rule of thumb is that you won\u2019t get into trouble (and won\u2019t need to do fiddly alignment of things) if you just newline+indent after layout keywords such as <code>do</code>, <code>let</code>, <code>where</code>, <code>case</code>\u2026<code>of</code>, and so on."}], "answers": [{"tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 2, "last_activity_date": 1504329466, "creation_date": 1504329466, "answer_id": 46010711, "question_id": 46010524, "link": "https://stackoverflow.com/questions/46010524/parse-error-on-input-let-with-multiple-let-blocks/46010711#46010711", "title": "parse error on input `let&#39; with multiple let blocks", "body": "<p>The problem is that you're defining functions by <code>let</code> after using the functions, but <code>let</code> is for opposite purpose.</p>\n\n<p>You might want to read <a href=\"https://wiki.haskell.org/Let_vs._Where\" rel=\"nofollow noreferrer\">Let vs. Where</a> article, because you can use <code>where</code> here:</p>\n\n<pre><code>nextGuess (prev_string, prev_int) (a1, a2, a3) = (new_string, new_int)\n    where\n      new_int_1 = if a3 - a1 &lt; 0\n        then prev_int\n        else (filter (myPred1 a3 prev_string) prev_int)\n      new_int_2 = if a2 - a1 &lt; 0\n        then new_int_1\n        else (filter (myPred2 a2 prev_string) new_int_1)\n      new_int = filter (myPred3 a1 prev_string) new_int_2\n</code></pre>\n\n<p>Or <code>let in</code>:</p>\n\n<pre><code>nextGuess (prev_string, prev_int) (a1, a2, a3) =\n    let new_int_1 = if a3 - a1 &lt; 0\n          then prev_int\n          else (filter (myPred1 a3 prev_string) prev_int)\n        new_int_2 = if a2 - a1 &lt; 0\n          then new_int_1\n          else (filter (myPred2 a2 prev_string) new_int_1)\n        new_int = filter (myPred3 a1 prev_string) new_int_2\n      in\n          (new_string, new_int)\n</code></pre>\n\n<p>Or <code>do notation</code>:</p>\n\n<pre><code>nextGuess (prev_string, prev_int) (a1, a2, a3) = do\n    let new_int_1 = if a3 - a1 &lt; 0\n          then prev_int\n          else (filter (myPred1 a3 prev_string) prev_int)\n    let new_int_2 = if a2 - a1 &lt; 0\n          then new_int_1\n          else (filter (myPred2 a2 prev_string) new_int_1)\n    let new_int = filter (myPred3 a1 prev_string) new_int_2\n    (new_string, new_int)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 179940, "user_id": 20713, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/09b9758a4a83cc25547eb93891f19df7?s=128&d=identicon&r=PG", "display_name": "ephemient", "link": "https://stackoverflow.com/users/20713/ephemient"}, "is_accepted": false, "score": 1, "last_activity_date": 1504329614, "creation_date": 1504329614, "answer_id": 46010724, "question_id": 46010524, "link": "https://stackoverflow.com/questions/46010524/parse-error-on-input-let-with-multiple-let-blocks/46010724#46010724", "title": "parse error on input `let&#39; with multiple let blocks", "body": "<p><a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-440003.12\" rel=\"nofollow noreferrer\"><code>let</code>-expressions</a> should be in the form</p>\n\n<pre><code>let pattern_1 = expression_1\n    pattern_2 = expression_2\n    ...\nin final_expression\n</code></pre>\n\n<p>so in your case, something like this:</p>\n\n<pre><code>myFunc :: ([String], Int) -&gt; (Int, Int, Int) -&gt; ([String], Int)\nnextGuess (prev_string, prev_int) (a1, a2, a3) =\n    let new_int_1 = if a3 - a1 &lt; 0\n            then prev_int\n            else (filter (myPred1 a3 prev_string) prev_int)\n        new_int_2 = if a2 - a1 &lt; 0\n            then new_int_1\n            else (filter (myPred2 a2 prev_string) new_int_1)\n        new_int = filter (myPred3 a1 prev_string) new_int_2\n    in (new_string, new_int)\n</code></pre>\n\n<p>(There is a use of <code>let</code> inside <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-470003.14\" rel=\"nofollow noreferrer\"><code>do</code>-expressions</a> that doesn't require <code>in</code>, but that's special.)</p>\n\n<p>Alternately, the additional declarations can be inside the optional <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-830004.4.3\" rel=\"nofollow noreferrer\"><code>where</code></a> of the binding.</p>\n\n<pre><code>myFunc :: ([String], Int) -&gt; (Int, Int, Int) -&gt; ([String], Int)\nnextGuess (prev_string, prev_int) (a1, a2, a3) = (new_string, new_int) where\n    new_int_1 = if a3 - a1 &lt; 0\n        then prev_int\n        else (filter (myPred1 a3 prev_string) prev_int)\n    new_int_2 = if a2 - a1 &lt; 0\n        then new_int_1\n        else (filter (myPred2 a2 prev_string) new_int_1)\n    new_int = filter (myPred3 a1 prev_string) new_int_2\n</code></pre>\n"}], "owner": {"reputation": 1713, "user_id": 3989939, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/530734853101ecc62e278406ed5b9065?s=128&d=identicon&r=PG&f=1", "display_name": "JavascriptLoser", "link": "https://stackoverflow.com/users/3989939/javascriptloser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 703, "favorite_count": 0, "accepted_answer_id": 46010711, "answer_count": 2, "score": 0, "last_activity_date": 1504329614, "creation_date": 1504327298, "question_id": 46010524, "link": "https://stackoverflow.com/questions/46010524/parse-error-on-input-let-with-multiple-let-blocks", "title": "parse error on input `let&#39; with multiple let blocks", "body": "<p>I am trying to define a function with a number of let statements, but I keep getting an error <code>parse error on input 'let'</code>. I'm still new to Haskell so I can't actually see what is causing this problem.</p>\n\n<p>Here is my function:</p>\n\n<pre><code>myFunc :: ([String], Int) -&gt; (Int, Int, Int) -&gt; ([String], Int)\nnextGuess (prev_string, prev_int) (a1, a2, a3) = (new_string, new_int)\n    let new_int_1 = if a3 - a1 &lt; 0\n        then prev_int\n        else (filter (myPred1 a3 prev_string) prev_int)\n    let new_int_2 = if a2 - a1 &lt; 0\n        then new_int_1\n        else (filter (myPred2 a2 prev_string) new_int_1)\n    new_int = filter (myPred3 a1 prev_string) new_int_2\n</code></pre>\n\n<p>I won't explain what the function is supposed to do because that is irrelevant to the question, my main issue is that there is a parse error on the first <code>let</code> statement and I don't know why.</p>\n"}, {"tags": ["haskell", "lenses", "rank-n-types"], "comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 2, "creation_date": 1504334077, "post_id": 46010198, "comment_id": 78982584, "body": "As an aside, <code>a -&gt; forall x. b</code> = <code>forall x. a -&gt; b</code> (if <code>x</code> is not mentioned in <code>a</code> and possibly mentioned in <code>b</code>) and <code>a -&gt; c =&gt; b</code> = <code>c =&gt; a -&gt; b</code> (where <code>c</code> is a constraint). Note that <code>(forall x. a) -&gt; b</code>, a rank-2 type, can\u2019t be rewritten like this because  the <code>forall</code>-quantified type appears in \u201cnegative position\u201d (to the left of a function arrow)."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 3, "creation_date": 1504386417, "post_id": 46010198, "comment_id": 78996206, "body": "You&#39;ve made a mistake in the 2nd line - the type <code>Lens&#39; X Y -&gt; Lens&#39; Y Z -&gt; Lens&#39; X Z</code> will never be inferred for <code>(.)</code>. This type is impredicative and GHC <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#impredicative-polymorphism\" rel=\"nofollow noreferrer\">doesn&#39;t support</a> impredicativ polymorphism. You have an answer showing you what actually happens; the short version is every polytype is instantiated to a monotype when a function is applied, unless that function explicitly takes a polytype as an argument (i.e. with <code>RankNTypes</code>)."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "reply_to_user": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1504411443, "post_id": 46010198, "comment_id": 79000021, "body": "Oh, hey @Jon. How&#39;s your kitten?"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 1, "creation_date": 1504469633, "post_id": 46010198, "comment_id": 79014646, "body": "@AaditMShah: Good, thanks. :) I\u2019m in the middle of reorganising some code to make it easier to implement the last few major features before a release. (Trait constraints, generic trait instances, unboxed closures &amp; arrays, a few other things.) If I can find/make the time to work on it, I <i>should</i> be able to release something in a couple months."}], "answers": [{"tags": [], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "is_accepted": true, "score": 3, "last_activity_date": 1504326818, "creation_date": 1504326818, "answer_id": 46010477, "question_id": 46010198, "link": "https://stackoverflow.com/questions/46010198/what-happens-with-universal-quantifications-and-typeclass-constraints-when-compo/46010477#46010477", "title": "What happens with universal quantifications and typeclass constraints when composing functions?", "body": "<p>Why don't we see what happens? Consider the following values:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n\nfoo :: Lens' A B\n\nbar :: Lens' B C\n</code></pre>\n\n<p>The type of <code>foo</code> and <code>bar</code> will be expanded to:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foo :: Functor f =&gt; (B -&gt; f B) -&gt; A -&gt; f A\n\nbar :: Functor g =&gt; (C -&gt; g C) -&gt; B -&gt; g B\n</code></pre>\n\n<p>Note that I left out the <code>forall f.</code> part because it's implicit. Also, I changed the name of <code>f</code> to <code>g</code> for <code>bar</code> to show that it's different from the <code>f</code> for <code>foo</code>.</p>\n\n<p>Anyway, we'll first apply  <code>(.)</code> to <code>foo</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(.)     ::                 (b      -&gt;    c)    -&gt; (a -&gt;    b)     -&gt; a -&gt;    c\n                            |            |         |       |         |       |\n                         --------     --------     |       |         |       |\n                         |      |     |      |     |       |         |       |\nfoo     :: Functor f =&gt; (B -&gt; f B) -&gt; A -&gt; f A     |    --------     |    --------\n                                                   |    |      |     |    |      |\n(.) foo :: Functor f =&gt;                           (a -&gt; B -&gt; f B) -&gt; a -&gt; A -&gt; f A\n</code></pre>\n\n<p>Thus, <code>(.) foo</code> has the type <code>Functor f =&gt; (a -&gt; B -&gt; f B) -&gt; a -&gt; A -&gt; f A</code>. As you can see, the <code>Functor</code> constraint is simply copied as is.</p>\n\n<p>Now, we apply <code>(.) foo</code> to <code>bar</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(.) foo     :: Functor f =&gt;    (a      -&gt; B -&gt; f B) -&gt;     a      -&gt; A -&gt; f A\n                       |        |         |    | |         |         |    | |\n                       |     --------     |    | |         |         |    | |\n                       |     |      |     |    | |         |         |    | |\nbar         :: Functor g =&gt; (C -&gt; g C) -&gt; B -&gt; g B      --------     |    | |\n                                                        |      |     |    | |\n(.) foo bar :: Functor g =&gt;                            (C -&gt; g C) -&gt; A -&gt; g A\n</code></pre>\n\n<p>Thus, <code>(.) foo bar</code> has the type <code>Functor g =&gt; (C -&gt; g C) -&gt; A -&gt; g A</code> which means that it's a <code>Lens' A C</code>. As you can see <code>Functor f</code> is the same as <code>Functor g</code> which is why everything works out.</p>\n"}], "owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 1, "accepted_answer_id": 46010477, "answer_count": 1, "score": 2, "last_activity_date": 1504326818, "creation_date": 1504323005, "question_id": 46010198, "link": "https://stackoverflow.com/questions/46010198/what-happens-with-universal-quantifications-and-typeclass-constraints-when-compo", "title": "What happens with universal quantifications and typeclass constraints when composing functions?", "body": "<p>Lenses <a href=\"https://hackage.haskell.org/package/lens-tutorial-1.0.3/docs/Control-Lens-Tutorial.html\" rel=\"nofollow noreferrer\">can be composed</a> like any ordinary function. We have:</p>\n\n<pre><code>Lens' a b = forall f . Functor f =&gt; (b -&gt; f b) -&gt; a -&gt; f a\n</code></pre>\n\n<p>Now consider this example:</p>\n\n<pre><code>(.) :: Lens' Config Foo -&gt; Lens' Foo String -&gt; Lens' Config String\n</code></pre>\n\n<p>Expanding we get:</p>\n\n<pre><code>(.) :: (forall f. Functor f =&gt; (Foo -&gt; f Foo) -&gt; Config -&gt; f Config)\n    -&gt; (forall f. Functor f =&gt; (String -&gt; f String) -&gt; Foo -&gt; f Foo)\n    -&gt; (forall f. Functor f =&gt; (String -&gt; f String) -&gt; Config -&gt; f Config)\n</code></pre>\n\n<p>And the type of function composition is:</p>\n\n<pre><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; (a -&gt; c)\n</code></pre>\n\n<p>Which lacks any universal quantification and typeclass constraints. Now my question is, how are these two features treated by the compiler/type-checker so that the function composition operator can be used for composing lenses? </p>\n\n<p>My guess is that it is OK to have functions universally quantified and typeclass constraints, as long as these match for the two functions being composed.</p>\n"}, {"tags": ["string", "haskell", "pattern-matching", "decode", "reverse"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1504339926, "post_id": 46009040, "comment_id": 78983816, "body": "Functions like <code>head, tail</code> are partial, and can crash your program if you forget to check for emptiness. They should be avoided, if possible. They are not idiomatic Haskell, which favors pattern matching instead, since it is safe. <code>length a &lt; 3</code> is also inefficient compared to pattern matching."}], "answers": [{"tags": [], "owner": {"reputation": 335, "user_id": 8387889, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-ytIoDLa0WGg/AAAAAAAAAAI/AAAAAAAAAcg/PoU425sbyWw/photo.jpg?sz=128", "display_name": "Andrew Lei", "link": "https://stackoverflow.com/users/8387889/andrew-lei"}, "is_accepted": true, "score": 2, "last_activity_date": 1504318421, "creation_date": 1504318421, "answer_id": 46009863, "question_id": 46009040, "link": "https://stackoverflow.com/questions/46009040/haskell-decode-message-with-pattern/46009863#46009863", "title": "Haskell - Decode message with pattern", "body": "<p><a href=\"http://learnyouahaskell.com/syntax-in-functions\" rel=\"nofollow noreferrer\">Pattern match</a> to find occurrences of 'o'. I.e., use</p>\n\n<p><code>karpsravorhelp (a:'o':b:rest) res = ...</code></p>\n\n<p>You can't have <code>a:'o':a:rest</code> in the above, you can't pattern match for equality; you'll need to use a guard to make sure that <code>a == b</code>:</p>\n\n<p><code>karpsravorhelp (a:'o':b:rest) res \n  | a == b = ...\n  | otherwise = ...</code></p>\n\n<p>You'll also have to make sure <code>a</code> and <code>b</code> are consonants, which will just be an 'and' condition for the first guard. For the <code>otherwise</code> condition, make sure that the recursive call calls <code>(b:rest)</code> since you could have something like <code>a:'o':b:'o':b:...</code>.</p>\n\n<p>Also make sure to match for two other patterns:</p>\n\n<ol>\n<li>Empty List, <code>[]</code></li>\n<li><code>x:rest</code>, which must go after the above pattern; this way, it will first attempt to match on the <code>a:'o':b:rest</code> pattern, and if that's not there, just take the next letter.</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "is_accepted": false, "score": 1, "last_activity_date": 1504319505, "creation_date": 1504319505, "answer_id": 46009946, "question_id": 46009040, "link": "https://stackoverflow.com/questions/46009040/haskell-decode-message-with-pattern/46009946#46009946", "title": "Haskell - Decode message with pattern", "body": "<p>One way to do it would be with <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Data-List.html#v:unfoldr\" rel=\"nofollow noreferrer\"><code>unfoldr</code></a> from <code>Data.List</code>. You can use a <code>case</code> expression to pattern match on <code>a : 'o' : b : rest</code>, and then check that <code>a</code> and <code>b</code> are equal and not vowels using a guard <code>|</code>. Then just include the base cases for when the pattern doesn't match.</p>\n\n<pre><code>notVowel :: Char -&gt; Bool\nnotVowel = (`notElem` \"aeiouAEIOU\")\n\nkarpsravor :: String -&gt; String\nkarpsravor = unfoldr $ \\str -&gt; case str of\n    a : 'o' : b : rest\n        | a == b &amp;&amp; notVowel a -&gt; Just (a, rest)\n    a : rest                   -&gt; Just (a, rest)\n    \"\"                         -&gt; Nothing\n</code></pre>\n"}], "owner": {"reputation": 703, "user_id": 4490045, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/df608bfbe36fb52c6d54de21d7de5345?s=128&d=identicon&r=PG&f=1", "display_name": "Schytheron", "link": "https://stackoverflow.com/users/4490045/schytheron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "accepted_answer_id": 46009863, "answer_count": 2, "score": 0, "last_activity_date": 1504319505, "creation_date": 1504307933, "question_id": 46009040, "link": "https://stackoverflow.com/questions/46009040/haskell-decode-message-with-pattern", "title": "Haskell - Decode message with pattern", "body": "<p>I am new to Haskell and I am currently learning it in school. I got a school task where I have to decode a message that contain certain patterns but I have got no idea how to do this.</p>\n\n<p>The pattern looks something like this: If a letter has a consonant followed by the character 'o' and then once again followed by the same consonant as before it should replace that substring (\"XoX\" where X is a consonant) with only the consonant. For example if I decode the string \"hohejoj\" it should return \"hej\". Sorry if I am explaining this poorly but I think you understand.</p>\n\n<p>This is the code I have so far (but it doesn't work):\u00a8</p>\n\n<pre><code>karpsravor :: String-&gt;String\nkarpsravor s = karpsravor_help s \"\"\n    where karpsravor_help s res\n           |s == \"\" &amp;&amp; (last res) == 'o' = (init res)\n           |s==\"\"=res\n           |otherwise = karpsravor_help (drop 3 s) (res ++ (consDecode (take 3 s)))\n\nconsDecode :: String-&gt;String\nconsDecode a\n    |(length a) &lt; 3 = \"\"\n    |a == [(head a)]++\"o\"++[(head a)] = [(head a)]\n    |otherwise = a\n</code></pre>\n\n<p>The code is completely broken and poorly written (dumb method) but I have no other idea for how to solve this. Please help!</p>\n"}, {"tags": ["haskell", "memory-leaks"], "comments": [{"owner": {"reputation": 1032, "user_id": 7919890, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1hAL5.png?s=128&g=1", "display_name": "wha7ever", "link": "https://stackoverflow.com/users/7919890/wha7ever"}, "edited": false, "score": 1, "creation_date": 1504298746, "post_id": 46007746, "comment_id": 78976460, "body": "<a href=\"https://wiki.haskell.org/Space_leak\" rel=\"nofollow noreferrer\">page in question</a>"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1504303489, "post_id": 46007746, "comment_id": 78977935, "body": "This is a nice post from Neil on memory leaks wrt Haskell: <a href=\"https://queue.acm.org/detail.cfm?id=2538488\" rel=\"nofollow noreferrer\">queue.acm.org/detail.cfm?id=2538488</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1032, "user_id": 7919890, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1hAL5.png?s=128&g=1", "display_name": "wha7ever", "link": "https://stackoverflow.com/users/7919890/wha7ever"}, "edited": false, "score": 0, "creation_date": 1504299064, "post_id": 46007799, "comment_id": 78976592, "body": "It come from here: <a href=\"https://en.wikipedia.org/wiki/Memory_leak\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Memory_leak</a>. <b>edit</b>: not original source, but contains identical sentance."}, {"owner": {"reputation": 137, "user_id": 7422028, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/E7ZYE.jpg?s=128&g=1", "display_name": "Rasko", "link": "https://stackoverflow.com/users/7422028/rasko"}, "reply_to_user": {"reputation": 1032, "user_id": 7919890, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1hAL5.png?s=128&g=1", "display_name": "wha7ever", "link": "https://stackoverflow.com/users/7919890/wha7ever"}, "edited": false, "score": 0, "creation_date": 1504299133, "post_id": 46007799, "comment_id": 78976610, "body": "Added the source"}], "tags": [], "owner": {"reputation": 137, "user_id": 7422028, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/E7ZYE.jpg?s=128&g=1", "display_name": "Rasko", "link": "https://stackoverflow.com/users/7422028/rasko"}, "is_accepted": false, "score": 8, "last_activity_date": 1504299079, "last_edit_date": 1504299079, "creation_date": 1504298946, "answer_id": 46007799, "question_id": 46007746, "link": "https://stackoverflow.com/questions/46007746/whats-a-space-leak/46007799#46007799", "title": "What&#39;s a space leak?", "body": "<blockquote>\n  <p>A space leak occurs when a computer program uses more memory than necessary. In contrast to memory leaks, where the leaked memory is never released, the memory consumed by a space leak is released, but later than expected. <a href=\"https://softwareengineering.stackexchange.com/questions/306226/does-it-make-sense-to-use-the-term-space-leak-with-regard-to-java\">*\n  Source</a></p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 407, "user_id": 2882634, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jbZId.jpg?s=128&g=1", "display_name": "RandomStudent", "link": "https://stackoverflow.com/users/2882634/randomstudent"}, "edited": false, "score": 0, "creation_date": 1530047789, "post_id": 46009036, "comment_id": 89093996, "body": "Thanks! I finally understood space leaks beyond &quot;Don&#39;t keep too many thunks!&quot;"}, {"owner": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "edited": false, "score": 0, "creation_date": 1616330167, "post_id": 46009036, "comment_id": 117962493, "body": "Stumbled upon this question/answer once again. This is a really good answer. Big thanks!"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 28, "last_activity_date": 1504307874, "creation_date": 1504307874, "answer_id": 46009036, "question_id": 46007746, "link": "https://stackoverflow.com/questions/46007746/whats-a-space-leak/46009036#46009036", "title": "What&#39;s a space leak?", "body": "<p>As noted in @Rasko's answer, a space leak refers to a situation where a program or specific computation uses more (usually much more) memory than is necessary for the computation and/or expected by the programmer.</p>\n\n<p>Haskell programs tend to be particularly susceptible to space leaks, mostly because of the lazy evaluation model (sometimes complicated by the way IO interacts with this model) and the highly abstract nature of the language which can make it difficult for a programmer to determine exactly how a particular computation is likely to be performed.</p>\n\n<p>It helps to consider a specific example.  This Haskell program:</p>\n\n<pre><code>main = print $ sum [1..1000000000]\n</code></pre>\n\n<p>is an idiomatic way to sum the first billion integers.  Compiled with <code>-O2</code>, it runs in a few seconds in constant memory (a few megabytes, basically the runtime overhead).</p>\n\n<p>Now, any programmer would expect a program to sum the first billion integers should run without chewing up memory, but it's actually a little surprising that this Haskell version is well behaved.  After all, read literally, it constructs a list of a billion integers before summing them up, so it ought to require at least a few gigabytes (just for storage for the billion integers, not to mention the overhead of a Haskell linked list).</p>\n\n<p>However, lazy evaluation ensures that the list is only generated <em>as it's needed</em> and -- equally importantly -- optimizations performed by the compiler ensure that as list elements are added to the accumulating sum, the program recognizes they are no longer needed and allows them to be garbage collected instead of keeping them around until the end of the computation.  So, at any point during the computation, only a sliding \"window\" into the middle of the list needs to be kept in memory -- earlier elements have been discarded, and later elements are yet to be lazily computed.  (In fact, the optimizations go further than this: no list is even constructed, but this is far from obvious to the programmer.)</p>\n\n<p>Soooo... Haskell programmers get used to the idea that tossing around giant (or even infinite) data structures will \"just work\" with computations automatically using only the memory they need.</p>\n\n<p>But, a minor change to the program, like also printing the length of the list as proof of all the hard work we are doing:</p>\n\n<pre><code>main = let vals = [1..1000000000]\n       in print (sum vals, length vals)\n</code></pre>\n\n<p>suddenly causes space usage to explode to dozens of gigabytes (or in the case of my laptop, to about 13Gigs before it starts swapping hopelessly and I kill it).</p>\n\n<p>This is a space leak.  Calculating the sum and length of this list are obviously things that can be done in constant space using a \"sliding window\" view into the list, but the above program uses much more memory than needed.  The reason, it turns out, is that once the list has been given a name <code>vals</code> that's used in two places, the compiler no longer allows the \"used\" elements to be immediately discarded.  If the <code>sum vals</code> is evaluated first, the list is lazily generated and summed, but the entire, giant list is then kept around until <code>length vals</code> can be evaluated.</p>\n\n<p>As a more practical example, you might write a simple program to count words and characters in a file:</p>\n\n<pre><code>main = do txt &lt;- getContents\n          print (length txt, length (words txt))\n</code></pre>\n\n<p>This works fine on small test files up to a couple megabytes, but it's noticeably sluggish on 10meg file, and if you try to run it on a 100meg file, it'll slowly but surely start gobbling up all available memory.  Again, the problem is that -- even though the file contents are read lazily into <code>txt</code> -- because <code>txt</code> is used twice, the entire contents are read into memory as a Haskell <code>String</code> type (a memory-inefficient representation of large blocks of text) when, say, <code>length txt</code> is evaluated, and none of that memory can be freed until <code>length (words txt)</code> has also been computed.</p>\n\n<p>Note that:</p>\n\n<pre><code>main = do txt &lt;- getContents\n          print $ length txt\n</code></pre>\n\n<p>and:</p>\n\n<pre><code>main = do txt &lt;- getContents\n          print $ length (words txt)\n</code></pre>\n\n<p>both run quickly in constant space even on big files.</p>\n\n<p>As a side note, fixing the above space leak normally involves rewriting the computation so the characters and words are counted with one pass through the contents, so the compiler can determine that the contents of the file that have already been processed do not need to be kept around in memory until the end of the computation.  One possible solution is:</p>\n\n<pre><code>{-# LANGUAGE BangPatterns #-}\n\nimport Data.List\nimport Data.Char\n\ncharsWords :: String -&gt; (Int, Int)\ncharsWords str = let (_, chrs, wrds) = foldl' step (False, 0, 0) str\n                 in (chrs, wrds)\n  where step (inWord, cs, ws) c =\n          let !cs' = succ cs\n              !ws' = if not inWord &amp;&amp; inWord' then succ ws else ws\n              !inWord' = not (isSpace c)\n          in (inWord', cs', ws')\n\nmain = do txt &lt;- getContents\n          print $ charsWords txt\n</code></pre>\n\n<p>The complexity of this solution (use of bang (<code>!</code>) patterns and an explicit fold instead of <code>length</code> and <code>words</code>) illustrates how tough space leaks can be, especially for new Haskell programmers.  And it's not at all obvious that using <code>foldl'</code> instead of <code>foldl</code> makes no difference (but using <code>foldr</code> or <code>foldr'</code> would be a disaster!), that the bangs before <code>cs'</code> and <code>ws'</code> are critical to avoid a space leak, but that the bang before <code>inWord'</code> isn't (though it slightly improves performance), etc.</p>\n"}], "owner": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2537, "favorite_count": 6, "accepted_answer_id": 46009036, "answer_count": 2, "score": 11, "last_activity_date": 1504307874, "creation_date": 1504298619, "question_id": 46007746, "link": "https://stackoverflow.com/questions/46007746/whats-a-space-leak", "title": "What&#39;s a space leak?", "body": "<p>I found the haskell wiki page on space leaks, which claims to list examples of real-world leaks, which it doesn't. It doesn't really say what a space leak is; it just links to the page for memory leaks. </p>\n\n<p>What's a space leak?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 2, "creation_date": 1504285640, "post_id": 46004882, "comment_id": 78970982, "body": "<code>_</code> isn&#39;t a valid Haskell expression. If <code>(_, &#39;b&#39;)</code> is what you get back with <code>:sprint</code> in GHCi, then that would be WNHF, since you know the expression as a whole is a tuple, but not everything in the expression is evaluated."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1504291522, "post_id": 46004882, "comment_id": 78973580, "body": "Was this really the question in the book, or were they asking about <code>(\u22a5,&#39;b&#39;)</code>, maybe written <code>(_|_,&#39;b&#39;)</code>?"}, {"owner": {"reputation": 4029, "user_id": 3224967, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/963b108f3bcde98ac96d09b04abbf63f?s=128&d=identicon&r=PG&f=1", "display_name": "mherzl", "link": "https://stackoverflow.com/users/3224967/mherzl"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1504294219, "post_id": 46004882, "comment_id": 78974691, "body": "@K.A.Buhr question has been edited to include screenshot of the problem as listed in the book."}, {"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 0, "creation_date": 1504504653, "post_id": 46004882, "comment_id": 79021830, "body": "I assume _ is meant to stand for a placeholder for something that hasn&#39;t been evaluated yet."}], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1504296140, "post_id": 46007264, "comment_id": 78975482, "body": "A lot of tools (mostly debuggers) list unevaluated &quot;holes&quot; as _. I do agree that it should have been defined before, though."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1504312594, "post_id": 46007264, "comment_id": 78979771, "body": "You can write holes yourself as <code>_</code>,  and even run the code with <code>-fdefer-typed-holes</code> (in which case they behave like undefined). The author probably could have explained better how they wanted readers to treat the <code>_</code> in those exercises (I guess if we&#39;re considering them typed holes then they can&#39;t be in normal form because evaluating them blows up?), but it&#39;s not really true that <code>(_,&#39;b&#39;)</code> isn&#39;t a valid expression."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 4, "last_activity_date": 1504296073, "creation_date": 1504296073, "answer_id": 46007264, "question_id": 46004882, "link": "https://stackoverflow.com/questions/46004882/is-the-expression-b-in-normal-form-in-weak-head-normal-form/46007264#46007264", "title": "Is the expression (_, &#39;b&#39;) in Normal Form? in Weak Head Normal Form?", "body": "<p>Unfortunately, the author has made a bad decision to use a <code>_</code> character in these questions.  As @Alec notes, the string of code <code>(_,'b')</code> is not a valid Haskell expression (because <code>_</code> is a reserved identifier that can only appear in a pattern), so asking if <code>(_,'b')</code> is in normal form (NF) or weak head normal form (WHNF) is a bit like asking if an elephant is in NF or WHNF.  It doesn't really make sense.</p>\n\n<p>If the question had instead asked about <code>(x, 'b')</code>, that would have been a better question.  This is a valid Haskell expression.  We can tell it's in WHNF because its \"head\" (the outermost part of the expression) is a data constructor.  In this case, it's the tuple constructor <code>(,)</code> which has a special syntax, so that makes it a little less obvious than usual, but note that <code>(x, 'b')</code> can be rewritten <code>(,) x 'b'</code> which makes it clear that the \"head\" is the data constructor <code>(,)</code>.   It can't be in NF, though, because <code>x</code> isn't fully evaluated (i.e., hasn't been replaced with its value, which is presumably given elsewhere).</p>\n\n<p>In contrast, <code>(1, 'b')</code> would be in both WHNF (because it's head is the data constructor <code>(,)</code>) <em>and</em> in NF because that data constructor is fully applied to arguments and each of those arguments have been fully evaluated.</p>\n\n<p>Now, I think that what the author <em>intended</em> was for <code>_</code> to stand for some unspecified, unevaluated part of an otherwise valid expression, so he or she intended you to reason that <code>(_, 'b')</code> is in WHNF (because the head is the data constructor <code>(,)</code>) but not in NF (because there's an unevaluated portion <code>_</code> floating around).  So, the \"right\" answer is \"WHNF only\".</p>\n\n<p>Does that help?</p>\n"}], "owner": {"reputation": 4029, "user_id": 3224967, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/963b108f3bcde98ac96d09b04abbf63f?s=128&d=identicon&r=PG&f=1", "display_name": "mherzl", "link": "https://stackoverflow.com/users/3224967/mherzl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 1, "accepted_answer_id": 46007264, "answer_count": 1, "score": 1, "last_activity_date": 1504296073, "creation_date": 1504284941, "last_edit_date": 1504294176, "question_id": 46004882, "link": "https://stackoverflow.com/questions/46004882/is-the-expression-b-in-normal-form-in-weak-head-normal-form", "title": "Is the expression (_, &#39;b&#39;) in Normal Form? in Weak Head Normal Form?", "body": "<p>Working through an exercise in a haskell programming book, I am not sure of the answer and want to check my understanding.</p>\n\n<p>The expression is: <code>(_, 'b')</code>.</p>\n\n<p>Is this in Normal Form, in Weak Head Normal Form, or neither?</p>\n\n<hr>\n\n<p>Here is a screenshot of the problem (#7) as listed in the book.</p>\n\n<p><a href=\"https://i.stack.imgur.com/OoX0S.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/OoX0S.png\" alt=\"enter image description here\"></a></p>\n"}, {"tags": ["haskell", "aeson"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1504285832, "post_id": 46004877, "comment_id": 78971070, "body": "<code>instance ToJSON User</code> is just a regular class instance. You&#39;re probably used to seeing <code>instance ToJSON User where { ... }</code>. When there is nothing in the body of the instance, you can omit the <code>where</code> (In fact, if you enable <code>DeriveAnyClass</code>, you can even just put <code>ToJSON</code> in the <code>deriving</code> clause of <code>User</code>). The reason <code>Generic</code> &quot;enables&quot; <code>ToJSON</code> is that <code>ToJSON</code> has a <a href=\"https://hackage.haskell.org/package/aeson-1.2.1.0/docs/Data-Aeson.html#v:toJSON\" rel=\"nofollow noreferrer\">default implementation that relies on <code>Generic</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "is_accepted": true, "score": 3, "last_activity_date": 1504289629, "last_edit_date": 1504289629, "creation_date": 1504286294, "answer_id": 46005172, "question_id": 46004877, "link": "https://stackoverflow.com/questions/46004877/by-what-mechanism-does-generic-interact-with-aesons-tojson-class/46005172#46005172", "title": "By what mechanism does Generic interact with Aeson&#39;s ToJSON class?", "body": "<p>Let's look at <a href=\"https://www.stackage.org/haddock/lts-9.2/aeson-1.1.2.0/src/Data.Aeson.Types.ToJSON.html#ToJSON\" rel=\"nofollow noreferrer\">the source</a> for <code>ToJSON</code>:</p>\n\n<pre><code>class ToJSON a where\n    -- | Convert a Haskell value to a JSON-friendly intermediate type.\n    toJSON     :: a -&gt; Value\n\n    default toJSON :: (Generic a, GToJSON Zero (Rep a)) =&gt; a -&gt; Value\n    toJSON = genericToJSON defaultOptions\n</code></pre>\n\n<p>The <code>ToJSON</code> class has a default <code>toJSON</code> implementation with additional type constraints (including <code>Generic</code>, as you've noticed). This requires the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#ghc-flag--XDefaultSignatures\" rel=\"nofollow noreferrer\"><code>DefaultSignatures</code></a> extension; notice at the top of that module you can see</p>\n\n<pre><code>{-# LANGUAGE DefaultSignatures #-}\n</code></pre>\n\n<p>The other constraint, <code>GToJSON Zero (Rep a)</code>, imposes some further restrictions on the structure of <code>a</code>, and so not <em>every</em> type with a <code>Generic</code> instance will satisfy this signature.</p>\n\n<p>Regarding your question about GHCi: <code>instance</code> is a Haskell keyword. Inspecting <code>toJSON</code> may be what you want instead. This will show you the same information we saw in the source:</p>\n\n<pre><code>\u03bb&gt; :i toJSON\nclass ToJSON a where\n  toJSON :: a -&gt; Value\n  default toJSON :: (GHC.Generics.Generic a,\n                     GToJSON Zero (GHC.Generics.Rep a)) =&gt;\n                    a -&gt; Value\n  ...\n        -- Defined in \u2018aeson-1.1.2.0:Data.Aeson.Types.ToJSON\u2019\n</code></pre>\n"}], "owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 46005172, "answer_count": 1, "score": 2, "last_activity_date": 1504289629, "creation_date": 1504284925, "last_edit_date": 1504289522, "question_id": 46004877, "link": "https://stackoverflow.com/questions/46004877/by-what-mechanism-does-generic-interact-with-aesons-tojson-class", "title": "By what mechanism does Generic interact with Aeson&#39;s ToJSON class?", "body": "<p>Looking at part of the <code>servant</code> <a href=\"https://haskell-servant.readthedocs.io/en/stable/tutorial/Server.html\" rel=\"nofollow noreferrer\">example</a>, I see:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeOperators #-}\n\nmodule Main where\n\nimport Prelude ()\nimport Prelude.Compat\n\nimport Control.Monad.Except\nimport Control.Monad.Reader\nimport Data.Aeson.Types\nimport Data.Attoparsec.ByteString\nimport Data.ByteString (ByteString)\nimport Data.List\nimport Data.Maybe\nimport Data.String.Conversions\nimport Data.Time.Calendar\nimport GHC.Generics\nimport Lucid\nimport Network.HTTP.Media ((//), (/:))\nimport Network.Wai\nimport Network.Wai.Handler.Warp\nimport Servant\nimport System.Directory\nimport Text.Blaze\nimport Text.Blaze.Html.Renderer.Utf8\nimport qualified Data.Aeson.Parser\nimport qualified Text.Blaze.Html\n\ntype UserAPI1 = \"users\" :&gt; Get '[JSON] [User]\n\ndata User = User\n  { name :: String\n  , age :: Int\n  , email :: String\n  , registration_date :: Day\n  } deriving (Eq, Show, Generic)\n\ninstance ToJSON User\n</code></pre>\n\n<p>When I removed the <code>deriving</code> of <code>Generic</code>, I got the following error:</p>\n\n<pre><code>\u2022 No instance for (Generic User)\n    arising from a use of \u2018aeson-1.1.2.0:Data.Aeson.Types.ToJSON.$dmtoJSON\u2019\n</code></pre>\n\n<p>So, it appears that the <code>Generic</code> typeclass instance for <code>User</code> enables <code>instance ToJSON User</code> to, I'm assuming, create a JSON <code>Encoder</code> for <code>User</code>.</p>\n\n<p>What's the machinery of <code>instance ToJSON User</code>, i.e. type signature, if that's the right word?</p>\n\n<p>I'm trying to look at its type from the <code>stack ghci</code>, i.e. REPL, but failing:</p>\n\n<pre><code>\u03bb: &gt;:t instance\n&lt;interactive&gt;:1:1: error: parse error on input \u2018instance\u2019\n\u03bb: &gt;:i instance\n&lt;interactive&gt;:1:1: error: parse error on input \u2018instance\u2019\n</code></pre>\n"}, {"tags": ["python", "parsing", "haskell", "syntax-error", "indentation"], "answers": [{"tags": [], "owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "is_accepted": false, "score": 5, "last_activity_date": 1504278229, "last_edit_date": 1504278229, "creation_date": 1504277833, "answer_id": 46002988, "question_id": 46002881, "link": "https://stackoverflow.com/questions/46002881/is-indentation-in-haskell-like-in-python/46002988#46002988", "title": "Is indentation in Haskell like in Python?", "body": "<p>Two things:</p>\n\n<ol>\n<li>You need to line up the pipes to occur <em>after</em> the helper function starts. <a href=\"https://stackoverflow.com/questions/2223468/haskell-where-indentation-why-must-it-be-indented-past-identifier#answer-2228683\">Here is a good explanation on why this is</a>.</li>\n<li><code>otherwise</code> still needs an <code>=</code> sign after it (<a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#v:otherwise\" rel=\"nofollow noreferrer\"><code>otherwise</code> is synonymous with <code>True</code></a>):</li>\n</ol>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>fib :: Integer -&gt; Integer\nfib n = fib_help n 0 1\n    where fib_help n a b\n           |n&lt;=1 = b\n           |otherwise = fib_help (n-1) b (a+b)\n</code></pre>\n\n<p>To say that Haskell indentation is like Python's is probably an overgeneralization, simply because the language constructs are drastically different. A more accurate statement would be to say that whitespace is significant in both Haskell and Python.</p>\n"}, {"tags": [], "owner": {"reputation": 87, "user_id": 8425653, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KHyTe.png?s=128&g=1", "display_name": "Gober", "link": "https://stackoverflow.com/users/8425653/gober"}, "is_accepted": false, "score": 0, "last_activity_date": 1504278034, "creation_date": 1504278034, "answer_id": 46003045, "question_id": 46002881, "link": "https://stackoverflow.com/questions/46002881/is-indentation-in-haskell-like-in-python/46003045#46003045", "title": "Is indentation in Haskell like in Python?", "body": "<p>You missed a \"=\" in otherwise, you can see more examples <a href=\"http://learnyouahaskell.com/syntax-in-functions#guards-guards\" rel=\"nofollow noreferrer\">here</a>. The right code: </p>\n\n<pre><code>fib :: Integer -&gt; Integer\nfib n = fib_help n 0 1\n    where fib_help n a b\n            | n &lt;=1 = b\n            | otherwise = fib_help (n-1) b (a+b)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 703, "user_id": 4490045, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/df608bfbe36fb52c6d54de21d7de5345?s=128&d=identicon&r=PG&f=1", "display_name": "Schytheron", "link": "https://stackoverflow.com/users/4490045/schytheron"}, "edited": false, "score": 0, "creation_date": 1504278729, "post_id": 46003126, "comment_id": 78967274, "body": "Thank you! Now I get it!"}], "tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 10, "last_activity_date": 1504278282, "creation_date": 1504278282, "answer_id": 46003126, "question_id": 46002881, "link": "https://stackoverflow.com/questions/46002881/is-indentation-in-haskell-like-in-python/46003126#46003126", "title": "Is indentation in Haskell like in Python?", "body": "<p>No, Haskell indentation is not like Python.</p>\n\n<p>Haskell is not about indentation levels, it's all about making things line up with other things.</p>\n\n<pre><code>    where fib_help n a b\n</code></pre>\n\n<p>In this example you have <code>where</code>, and the following token is not <code>{</code>. This activates layout mode (i.e. whitespace sensitive parsing). The next token (<code>fib_help</code>) sets the start column for the following block:</p>\n\n<pre><code>    where fib_help n a b\n--        ^\n--        | this is \"column 0\" for the current block\n</code></pre>\n\n<p>The next line is:</p>\n\n<pre><code>        |n&lt;=1 = b\n</code></pre>\n\n<p>The first token (<code>|</code>) is indented less than \"column 0\", which implicitly closes the block.</p>\n\n<p>Your code is parsed as if you had written</p>\n\n<pre><code>fib n = fib_help n 0 1\n    where { fib_help n a b }\n\n        |n&lt;=1 = b\n        |otherwise fib_help (n-1) b (a+b)\n</code></pre>\n\n<p>This is several syntax errors: The <code>where</code> block is missing a <code>=</code>, and you can't start a new declaration with <code>|</code>.</p>\n\n<p>Solution: Indent everything that should be part of the <code>where</code> block more than the first token after <code>where</code>. For example:</p>\n\n<pre><code>fib n = fib_help n 0 1\n    where fib_help n a b\n            |n&lt;=1 = b\n            |otherwise = fib_help (n-1) b (a+b)\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>fib n = fib_help n 0 1\n    where\n    fib_help n a b\n        |n&lt;=1 = b\n        |otherwise = fib_help (n-1) b (a+b)\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>fib n = fib_help n 0 1 where\n    fib_help n a b\n        |n&lt;=1 = b\n        |otherwise = fib_help (n-1) b (a+b)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": false, "score": 0, "last_activity_date": 1504406755, "creation_date": 1504406755, "answer_id": 46019834, "question_id": 46002881, "link": "https://stackoverflow.com/questions/46002881/is-indentation-in-haskell-like-in-python/46019834#46019834", "title": "Is indentation in Haskell like in Python?", "body": "<p>You can imagine Haskell and Python indentation similarly, but there are a couple of small differences.</p>\n\n<p>The biggest difference however is probably that Python's indentation-sensitive syntax always start the aligned block on a new line, whereas Haskell has syntactic constructs with aligned blocks that are permitted to start part way through an existing line. This isn't really a difference in the layout-rules, but it dramatically effects how you think about them (Haskellers don't tend to simplify the rules down to \"indent levels\" in their heads as much).</p>\n\n<p>Here's an example of some (horrible) layout-sensitive syntax in Python:</p>\n\n<pre><code>if True:\n    x = 1\n    while (\nnot x\n  ):\n     y = 2\n</code></pre>\n\n<p>The <code>if</code> and <code>while</code> constructs are followed by a suite of aligned statements. The first non-whitespace of character next statement must be indented to some position further than the alignment position of the outer block, and sets the alignment for all following statements in the same inner block. The first character of each statement must align to some position of an enclosing block (which determines which block it's a part of).</p>\n\n<p>If we added a <code>z = 3</code> at aligned to position 0, it will be part of the global \"block\". If we add it aligned to position 4 it will be part of the <code>if</code> block. If we add it aligned to position 5, it will be part of the <code>while</code> block. Starting a statement at any other position would be a syntax error.</p>\n\n<p>Note also that there are multi-line constructs whose alignment is totally irrelevant. Above I wrote the condition of the <code>while</code> over multiple lines using parentheses, even aligning the line with <code>not x</code> to position 0. It doesn't even matter that the colon introducing the indented block was on a \"mis-aligned\" line; the relevant alignments for the indented block are the position of the first non-whitespace character of the <code>while</code> statement (position 4), and the position of the first non-whitespace character of the next statement (position 5).</p>\n\n<p>Here's some (horrible) layout-sensitive Haskell:</p>\n\n<pre><code>x = let\n   y = head . head $ do\n              _ &lt;- [1, 2, 3]\n              pure [10]\n   z = let a = 2\n           b = 2\n    in a * b\n in y + z\n</code></pre>\n\n<p>Here we have <code>let</code> (twice) and <code>do</code> introducing aligned blocks. The definition of <code>x</code> itself is part of the \"block\" of definitions forming the module, and is required to be at position 0.</p>\n\n<p>The first non-whitespace character of the first definition in a <code>let</code> block sets the alignment of all other definitions in the block. In the outer <code>let</code> block that's the <code>y</code> at position 3. However the syntax of <code>let</code> does not require a line break before beginning the indented block (as Python's indented constructs all do by ending the \"header\" with a colon and a new line). The inner <code>let</code> block has <code>a = 2</code> immediately following the <code>let</code>, but the position of <code>a</code> still sets the required alignment for other definitions in the block (11).</p>\n\n<p>Again there's stuff you can split over multiple lines where the lines aren't required to align. In Haskell you can do this with almost anything that isn't a particular layout-sensitive construct, whereas in Python you can only do it with parentheses or ending a line with a backslash. But in Haskell, all of the lines forming part of a construct have to be indented further than the block they're part of. For example, I was able to put the <code>in a * b</code> part of the definition of <code>z</code> on a separate line. The <code>in</code> is part of the <code>let</code> syntactic construct, but it's <em>not</em> part of the aligned block of definitions introduced by <code>let</code>, so it has no particular alignment requirements. However the whole definition of <code>z = ...</code> is part of the <em>outer</em> <code>let</code> block of definitions, so I could not start the <code>in a * b</code> line at position 3 or earlier; it's a \"continuation line\" of the <code>z</code> definition, so is required to be indented further than the start of that definition. This is different than Python's continuation lines, which have no constraints on their indentation at all.</p>\n\n<p>The <code>do</code> also introduces an aligned block (of \"statements\" rather than definitions). I could have followed the first statement immediately on from the <code>do</code>, but instead I chose to start a new line. The block here behaves much like a Python-style intended block; I had to start it at some position further indented than the outer block (the definitions of the outer <code>let</code> at position 3), and once I've done that all the statements in the <code>do</code> block have to be aligned to the same position (14, here). Since the next line after the <code>pure [10]</code> is <code>z = ...</code> starting at position 3, it implicitly ends the <code>do</code> block because it's aligned to the <code>let</code> block's definitions, not the <code>do</code> block's statements.</p>\n\n<p>In your example:</p>\n\n<pre><code>fib :: Integer -&gt; Integer\nfib n = fib_help n 0 1\n    where fib_help n a b\n        |n&lt;=1 = b\n        |otherwise fib_help (n-1) b (a+b)\n</code></pre>\n\n<p>The construct requiring alignment is <code>where</code>, which introduces a block of definitions much like <code>let</code>. Using Python-style blocks where you always start a new line before beginning a new block, your example would look like this:</p>\n\n<pre><code>fib :: Integer -&gt; Integer\nfib n = fib_help n 0 1\n    where\n          fib_help n a b\n        |n&lt;=1 = b\n        |otherwise fib_help (n-1) b (a+b)\n</code></pre>\n\n<p>Which makes the error jump out at you much more. You didn't start the block of definitions in the <code>where</code> at the next \"indent level\" of 4 spaces, you started it at position 10! And then went back to position 8 for the next \"indent level\".</p>\n\n<p>If you're more comfortable thinking of Python-style \"indent levels\" than Haskell-style alignment, simply format your Haskell blocks the way Python requires you to format its blocks; after the \"header\" introducing a block, always end the line and then begin the block on the next line at the next \"tab stop\".</p>\n"}], "owner": {"reputation": 703, "user_id": 4490045, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/df608bfbe36fb52c6d54de21d7de5345?s=128&d=identicon&r=PG&f=1", "display_name": "Schytheron", "link": "https://stackoverflow.com/users/4490045/schytheron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 716, "favorite_count": 0, "accepted_answer_id": 46003126, "answer_count": 4, "score": 3, "last_activity_date": 1504406755, "creation_date": 1504277455, "last_edit_date": 1504294986, "question_id": 46002881, "link": "https://stackoverflow.com/questions/46002881/is-indentation-in-haskell-like-in-python", "title": "Is indentation in Haskell like in Python?", "body": "<p>I just started learning Haskell and I briefly read through some of the indentation rules and it seems to me that Haskell behaves just like Python when it comes to indentation (I might be wrong). Anyway, I tried to write a tail recursive fibonacci function and I keep getting an indentation error and I don't know where I indented my code wrong.</p>\n\n<p>ERROR message:</p>\n\n<pre><code>F1.hs:6:9: error:\n    parse error (possibly incorrect indentation or mismatched brackets)\n  |\n6 |         |n&lt;=1 = b   |         ^\n</code></pre>\n\n<p>Code:</p>\n\n<pre><code>fib :: Integer -&gt; Integer\nfib n = fib_help n 0 1\n    where fib_help n a b\n        |n&lt;=1 = b\n        |otherwise fib_help (n-1) b (a+b)\n</code></pre>\n\n<p>Note: I am writing the code in Notepad++ and I have changed the settings so that when I TAB it created 4 whitespaces instead of a tab character (like it should be I guess)</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1504277054, "post_id": 46002600, "comment_id": 78966204, "body": "What is the grouping criterion? Why are <code>[26,3]</code> grouped together? What have you tried? Where are you stuck?"}], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 8289587, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-t8_MyqkcJbs/AAAAAAAAAAI/AAAAAAAAABo/EbHcX_jtC-g/photo.jpg?sz=128", "display_name": "VVV", "link": "https://stackoverflow.com/users/8289587/vvv"}, "edited": false, "score": 0, "creation_date": 1504281728, "post_id": 46003468, "comment_id": 78969071, "body": "Thank You. Is there any inbuilt function to do the same?"}, {"owner": {"reputation": 87, "user_id": 8425653, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KHyTe.png?s=128&g=1", "display_name": "Gober", "link": "https://stackoverflow.com/users/8425653/gober"}, "reply_to_user": {"reputation": 43, "user_id": 8289587, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-t8_MyqkcJbs/AAAAAAAAAAI/AAAAAAAAABo/EbHcX_jtC-g/photo.jpg?sz=128", "display_name": "VVV", "link": "https://stackoverflow.com/users/8289587/vvv"}, "edited": false, "score": 0, "creation_date": 1504304502, "post_id": 46003468, "comment_id": 78978240, "body": "Yes, you can use a foldr with a lambda."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1504309000, "post_id": 46003468, "comment_id": 78979234, "body": "<a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#v:splitAt\" rel=\"nofollow noreferrer\"><code>splitAt</code></a> would make this code a bit more efficient, so that you don&#39;t have to iterate the list twice with <code>take</code> and <code>drop</code>."}], "tags": [], "owner": {"reputation": 87, "user_id": 8425653, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KHyTe.png?s=128&g=1", "display_name": "Gober", "link": "https://stackoverflow.com/users/8425653/gober"}, "is_accepted": true, "score": 1, "last_activity_date": 1504279496, "creation_date": 1504279496, "answer_id": 46003468, "question_id": 46002600, "link": "https://stackoverflow.com/questions/46002600/grouping-elements-in-a-list-in-haskell/46003468#46003468", "title": "grouping elements in a list in haskell", "body": "<p>You can make your own recursively function that receives a list and returns a list of list, first we need to <a href=\"http://zvon.org/other/haskell/Outputprelude/take_f.html\" rel=\"nofollow noreferrer\">take</a> n elements from the list, for that we call <code>take n xs</code>, afterwards we need to cons the element with the rest of the elements for this we need to call <code>mySplit n+1</code> and drop the element that we incorporated to list, so we only need to <code>call drop n xs</code> <a href=\"http://zvon.org/other/haskell/Outputprelude/drop_f.html\" rel=\"nofollow noreferrer\">drop</a>. </p>\n\n<pre><code>mySplit :: Int -&gt; [a] -&gt; [[a]]\nmySplit n [] = []\nmySplit n xs = (take n xs):(mySplit (n + 1) (drop n xs))\n\nghci&gt; mySplit 1 [1,26,3,94,51,6,7,8,9,10,11,12,73,29,19,90,76,87,1]\n[[1],[26,3],[94,51,6],[7,8,9,10],[11,12,73,29,19],[90,76,87,1]]\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 8289587, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-t8_MyqkcJbs/AAAAAAAAAAI/AAAAAAAAABo/EbHcX_jtC-g/photo.jpg?sz=128", "display_name": "VVV", "link": "https://stackoverflow.com/users/8289587/vvv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 313, "favorite_count": 0, "accepted_answer_id": 46003468, "answer_count": 1, "score": -3, "last_activity_date": 1504279496, "creation_date": 1504276536, "last_edit_date": 1504277838, "question_id": 46002600, "link": "https://stackoverflow.com/questions/46002600/grouping-elements-in-a-list-in-haskell", "title": "grouping elements in a list in haskell", "body": "<p>I want to transform a list from <code>[1,26,3,94,51,6,7,8,9,10,11,12,73,29,19,90,76,87,1]</code></p>\n\n<p>to <code>[[1],[26,3],[94,51,6],[7,8,9,10],[11,12,73,29,19]]</code> and so on till end in haskell. (I'm trying to group the elements in increasing order of length of sub list) </p>\n\n<p>I am new to haskell please help me out</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504266620, "post_id": 45998631, "comment_id": 78959366, "body": "Perhaps you should provide an expected output. You could also try to debug your code using e.g. <code>Debug.Trace.trace</code> or the GHCi debugger. You should be able to print each input that is passed to <code>cluster</code> and see if that&#39;s what you expect."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504271594, "post_id": 45998631, "comment_id": 78962480, "body": "For the <code>partitionN</code> part of the question, just replace <code>cluster1</code> with the new <code>cluster1</code> function (of course you must also change the new <code>cluster1</code> and all related functions to use <code>Point</code> instead of <code>(Double, Double)</code>). I recommend you try this yourself - it would be a good learning exercise."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504272042, "post_id": 45998631, "comment_id": 78962821, "body": "This code doesn&#39;t work due to the 2nd last line (<code>main = mapM ..</code>) - in my previous answer, the code was <code>mapM_ (print . map (\\p -&gt; (ptX p, ptY p)) . clusterPts)</code> - this function takes a list of clusters, converts each one to a list of tuples, and prints every list. The modified function <code>mapM (map .. . clusterPts)</code> takes a list of clusters, converts them to lists of lists of tuples and computes the cartesian product(!). This can be reduced to the difference between <code>mapM id</code> and <code>mapM print</code> (try it on e.g. <code>[[0,1],[2,3]]</code>). Note in these two cases <code>mapM</code> is used at different types."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1504290868, "post_id": 45998631, "comment_id": 78973303, "body": "see if <a href=\"https://chat.stackoverflow.com/transcript/message/38959687#38959687\">this comment</a> helps you in any way, coding with list comprehensions can be much easier sometimes. -- BTW your two top red dots are wrong, one notch above their correct positions. You had the same mistake in the previous question, with the top dots."}, {"owner": {"reputation": 179, "user_id": 8526423, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2b3704e90f096e08359ec2b9e26a2fa1?s=128&d=identicon&r=PG&f=1", "display_name": "Sir DK", "link": "https://stackoverflow.com/users/8526423/sir-dk"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504524332, "post_id": 45998631, "comment_id": 79032009, "body": "@user2407038 I&#39;ve done that. But one more error at this part: go 0 (repeat []). The error is that it expected [Point] -&gt; [Cluster] but actual type is [Point] -&gt; [[Point]]. But I have changed it to: partitionN :: (Point -&gt; Natural) -&gt; [Point] -&gt; [Cluster]."}, {"owner": {"reputation": 179, "user_id": 8526423, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2b3704e90f096e08359ec2b9e26a2fa1?s=128&d=identicon&r=PG&f=1", "display_name": "Sir DK", "link": "https://stackoverflow.com/users/8526423/sir-dk"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1504524596, "post_id": 45998631, "comment_id": 79032170, "body": "@WillNess thanks for the comment. Yes the code work perfectly. About the red dots, you&#39;re right. Sorry for mistake. Thanks. I will edit it."}], "owner": {"reputation": 179, "user_id": 8526423, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2b3704e90f096e08359ec2b9e26a2fa1?s=128&d=identicon&r=PG&f=1", "display_name": "Sir DK", "link": "https://stackoverflow.com/users/8526423/sir-dk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 149, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1504527380, "creation_date": 1504263080, "last_edit_date": 1504527380, "question_id": 45998631, "link": "https://stackoverflow.com/questions/45998631/haskell-recursion-in-recursion-for-loop-in-loop-part-2", "title": "Haskell :: Recursion in Recursion for Loop in Loop (Part 2)", "body": "<p>This question derived from previous question and answer. You can found the link here: <a href=\"https://stackoverflow.com/questions/45958843/haskell-recursion-in-recursion-for-loop-in-loop\">Haskell :: Recursion in Recursion for Loop in Loop (Part 1)</a></p>\n\n<p>The question were answered, I can say super amazing with nice explanation for future reference. Credit to @user2407038 for his amazing skills. However, something interesting to ponder with recursion with more than two partition. To make it clear I've changed the data a little bit for simplicity. Here how it looks:</p>\n\n<p><a href=\"https://i.stack.imgur.com/cVoAl.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/cVoAl.jpg\" alt=\"Phase 0\"></a></p>\n\n<p>Previously, the 2 red dots were generated by finding (min x, min y) and (max x, max y). To generate 4 red dots (min x, min y) (max x, min y) (min x, max y) (max x, max y) partition4 should take into consideration. Visually it looks like this:</p>\n\n<p><a href=\"https://i.stack.imgur.com/Lw31o.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Lw31o.jpg\" alt=\"![enter image description here\"></a></p>\n\n<p>Considering the max members for each group is 3, group 1 and group 4 exceed the number. A new group should be created based on these group. However, the trickier part is that this group will not compute the distance with previous red dots:</p>\n\n<p><a href=\"https://i.stack.imgur.com/3xPAz.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/3xPAz.jpg\" alt=\"![enter image description here\"></a>  </p>\n\n<p>The edited code for previous question:</p>\n\n<pre><code>data Point = Point { ptX :: Double, ptY :: Double }\ndata Cluster = Cluster { clusterPts :: [Point] }\n\nminMaxPoints :: [Point] -&gt; (Point, Point)\nminMaxPoints ps =\n   (Point minX minY\n   ,Point maxX maxY)\n     where minX = minimum $ map ptX ps\n           maxX = maximum $ map ptX ps\n           minY = minimum $ map ptY ps\n           maxY = maximum $ map ptY ps\n\nmain = do\n\n    let pointDistance :: Point -&gt; Point -&gt; Double\n        pointDistance (Point x1 y1) (Point x2 y2) = sqrt $ (x1-x2)^2 + (y1-y2)^2\n\n        cluster1 :: [Point] -&gt; [Cluster]\n        cluster1 ps =\n          let (mn, mx) = minMaxPoints ps\n              (psmn, psmx) = partition (\\p -&gt; pointDistance mn p &lt; pointDistance mx p) ps\n          in [ Cluster psmn, Cluster psmx ]\n\n        cluster :: [Point] -&gt; [Cluster]\n        cluster ps =\n          cluster1 ps &gt;&gt;= \\cl@(Cluster c) -&gt;\n          if length c &gt; 5\n          then cluster c\n          else [cl]\n\n        testPts :: [Point]\n        testPts = map (uncurry Point)\n          [ (1,0), (2,1), (0,2)\n          , (5,2), (4,3), (4,4)\n          , (8,2), (9,3), (10,2)\n          , (11,4), (12,3), (13,3) ]\n\n        main = mapM (map (\\p -&gt; (ptX p, ptY p)) . clusterPts) $ cluster testPts\n\n    print main\n</code></pre>\n\n<p>I've found it when the length c changed the answer as not as expected it should be. Perhaps I've edited it wrongly (Sigh). </p>\n\n<p>Still figuring how to fit in <a href=\"https://gist.github.com/anonymous/45f81962f8d33af17a9e4ac64ee7c774\" rel=\"nofollow noreferrer\">PartitionN</a> code for partitioning into N groups as suggested. </p>\n"}, {"tags": ["haskell", "exception-handling", "monad-transformers"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 9, "creation_date": 1504253757, "post_id": 45994157, "comment_id": 78951644, "body": "The problem is the <code>MonadCatch</code> instance of <code>WriterT</code>. It defines <code>catch (WriterT m) h = WriterT $ m `catch` \\e -&gt; runWriterT (h e)</code>; note that when <code>m</code> throws an exception, the <code>WriterT</code> environment of <code>m</code> is discarded, and the one which is kept is that of <code>h e</code>. And of course <code>onError</code> does not <code>tell</code> any deferred actions. This is a limitation of <code>WriterT</code> itself, which is a value of type <code>m (a, w)</code> - if that <code>m</code> throws an error, you don&#39;t have access to the <code>w</code>, so you can&#39;t keep the environment after an error. Possibly you want the monad <code>\\m w a -&gt; (w, m a)</code> or <code>ExcepT e (WriterT w m)</code>."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504277315, "post_id": 45994157, "comment_id": 78966371, "body": "@user2407038 That should probably be an answer."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 2, "creation_date": 1504278087, "post_id": 45994157, "comment_id": 78966871, "body": "@jkeuhlen I don&#39;t know, I think a complete answer would show what the example would look like with at least one of the two suggested alternative implementations proposed in the last sentence of my comment. As it stands, that last sentence is essentially a claim without proof (which I think is insufficient for an answer). Currently I&#39;m unwilling to write such an answer, but maybe someone else will or I&#39;ll find time later."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504278170, "post_id": 45994157, "comment_id": 78966925, "body": "@user2407038 Fair enough, I never said it would be a perfect answer, but at least 6 people found that comment helpful enough to upvote it."}, {"owner": {"reputation": 3780, "user_id": 1065654, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/74bd400c23607114d9ff560ce1b7391c?s=128&d=identicon&r=PG", "display_name": "maiermic", "link": "https://stackoverflow.com/users/1065654/maiermic"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504339632, "post_id": 45994157, "comment_id": 78983743, "body": "@user2407038 Thank you very much. Your comment helped me to understand why my approach in the question doesn&#39;t work and pointed out another approach that helped me to find an answer."}], "answers": [{"comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1504366695, "post_id": 46011300, "comment_id": 78990747, "body": "Note that <code>safeIO</code> doesn&#39;t need to be lifted in this code (i.e., the definition <code>safeIO = catchIOError</code> works just as well) because <code>catchIOError</code> is already taking an <code>IO a</code> and lifting it."}, {"owner": {"reputation": 3780, "user_id": 1065654, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/74bd400c23607114d9ff560ce1b7391c?s=128&d=identicon&r=PG", "display_name": "maiermic", "link": "https://stackoverflow.com/users/1065654/maiermic"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1504379015, "post_id": 46011300, "comment_id": 78994263, "body": "@K.A.Buhr Thanks, how could I oversee that. I&#39;ve updated my answer."}], "tags": [], "owner": {"reputation": 3780, "user_id": 1065654, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/74bd400c23607114d9ff560ce1b7391c?s=128&d=identicon&r=PG", "display_name": "maiermic", "link": "https://stackoverflow.com/users/1065654/maiermic"}, "is_accepted": false, "score": 4, "last_activity_date": 1504378893, "last_edit_date": 1504378893, "creation_date": 1504335292, "answer_id": 46011300, "question_id": 45994157, "link": "https://stackoverflow.com/questions/45994157/defer-actions-in-haskell/46011300#46011300", "title": "Defer actions in Haskell", "body": "<p>Like <a href=\"https://stackoverflow.com/users/2407038/user2407038\">user2407038</a> already <a href=\"https://stackoverflow.com/questions/45994157/defer-actions-in-haskell#comment78951644_45994157\">explained</a> it is not possible to get the state (deferred actions) in <code>catch</code>. However, you can use <code>ExceptT</code> to catch errors explicitly:</p>\n\n<pre><code>module Main where\n\nimport Control.Exception.Safe\n       (Exception, Handler(Handler), MonadCatch,\n        SomeException(SomeException), catch, catches, throw)\nimport Control.Monad.IO.Class (MonadIO, liftIO)\nimport Control.Monad.Trans.Class (lift)\nimport Control.Monad.Trans.Except (ExceptT, runExceptT, throwE)\nimport Control.Monad.Trans.Writer (WriterT, runWriterT, tell)\n\ntype DeferM m = WriterT (IO ()) m\n\ntype Defer m a = DeferM m a\n\n-- | Register an action that should be run later.\n--\ndefer :: (Monad m) =&gt; IO () -&gt; Defer m ()\ndefer = tell\n\n-- | Register an action that should be run later.\n-- Use @deferE@ instead of @defer@ inside @ExceptT@.\ndeferE :: (Monad m) =&gt; IO () -&gt; ExceptT e (DeferM m) ()\ndeferE = lift . defer\n\n-- | Ensures to run deferred actions even after an error has been thrown.\n--\nrunDefer :: (MonadIO m, MonadCatch m) =&gt; Defer m a -&gt; m a\nrunDefer fn = do\n  (result, deferredActions) &lt;- runWriterT fn\n  liftIO $ do\n    putStrLn \"run deferred actions\"\n    deferredActions\n  return result\n\n-- | Catch all errors that might be thrown in @f@.\n--\ncatchIOError :: (MonadIO m) =&gt; IO a -&gt; ExceptT SomeException m a\ncatchIOError f = do\n  r &lt;- liftIO (catch (Right &lt;$&gt; f) (return . Left))\n  case r of\n    (Left e) -&gt; throwE e\n    (Right c) -&gt; return c\n\ndata MyException =\n  MyException String\n\ninstance Exception MyException\n\ninstance Show MyException where\n  show (MyException message) = \"MyException(\" ++ message ++ \")\"\n\nhandleResult :: Show a =&gt; Either SomeException a -&gt; IO ()\nhandleResult result =\n  case result of\n    Left e -&gt; putStrLn $ \"caught an exception \" ++ show e\n    Right _ -&gt; putStrLn \"no exception was thrown\"\n\nmain :: IO ()\nmain = do\n  putStrLn \"start\"\n  runDefer $ do\n    result &lt;-runExceptT $ do\n      catchIOError $ putStrLn \"do stuff 1\"\n      deferE $ putStrLn \"cleanup 1\"\n      catchIOError $ putStrLn \"do stuff 2\"\n      deferE $ putStrLn \"cleanup 2\"\n      catchIOError $ putStrLn \"do stuff 3\"\n      catchIOError $ throw $ MyException \"exception after do stuff 3\"\n      return \"result\"\n    liftIO $ handleResult result\n  putStrLn \"end\"\n</code></pre>\n\n<p>We get the expected output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>start\ndo stuff 1\ndo stuff 2\ndo stuff 3\nhandle my exception: \"exception after do stuff 3\"\nrun deferred actions\ncleanup 1\ncleanup 2\nend\n</code></pre>\n\n<p>Notice that you have to catch errors explicitly using <code>catchIOError</code>. If you forget it and just call <code>liftIO</code>, the error will not be caught.</p>\n\n<p>Note further that the call to <code>handleResult</code> is not safe. If it throws an error the deferred actions won't be run afterwards. You might consider to handle the result after the actions have been run:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  putStrLn \"start\"\n  result &lt;-\n    runDefer $ do\n      runExceptT $ do\n        catchIOError $ putStrLn \"do stuff 1\"\n        deferE $ putStrLn \"cleanup 1\"\n        catchIOError $ putStrLn \"do stuff 2\"\n        deferE $ putStrLn \"cleanup 2\"\n        catchIOError $ putStrLn \"do stuff 3\"\n        catchIOError $ throw $ MyException \"exception after do stuff 3\"\n        return \"result\"\n  handleResult result\n  putStrLn \"end\"\n</code></pre>\n\n<p>Otherwise, you have to catch that error separately.</p>\n\n<hr>\n\n<p><strong>Edit 1:</strong> Introduce <code>safeIO</code></p>\n\n<p><strong>Edit 2:</strong></p>\n\n<ul>\n<li>use simpler error handling</li>\n<li>use <code>safeIO</code> in all snippets</li>\n<li>warn of exceptions in <code>handleResult</code></li>\n</ul>\n\n<p><strong>Edit 3:</strong> Replace <code>safeIO</code> with <code>catchIOError</code>.</p>\n"}], "owner": {"reputation": 3780, "user_id": 1065654, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/74bd400c23607114d9ff560ce1b7391c?s=128&d=identicon&r=PG", "display_name": "maiermic", "link": "https://stackoverflow.com/users/1065654/maiermic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 0, "answer_count": 1, "score": 12, "last_activity_date": 1504378893, "creation_date": 1504246030, "last_edit_date": 1504249258, "question_id": 45994157, "link": "https://stackoverflow.com/questions/45994157/defer-actions-in-haskell", "title": "Defer actions in Haskell", "body": "<p>I'd like to defer actions. Therefore I use a <code>WriterT</code> that should remember actions that I <code>tell</code> him.</p>\n\n<pre><code>module Main where\n\nimport Control.Exception.Safe\n       (Exception, MonadCatch, MonadThrow, SomeException,\n        SomeException(SomeException), catch, throwM)\nimport Control.Monad.IO.Class (MonadIO, liftIO)\nimport Control.Monad.Trans.Writer (WriterT, runWriterT, tell)\n\ntype Defer m a = WriterT (IO ()) m a\n\n-- | Register an action that should be run later.\ndefer :: (Monad m) =&gt; IO () -&gt; Defer m ()\ndefer = tell\n\n-- | Ensures to run deferred actions even after an error has been thrown.\nrunDefer :: (MonadIO m, MonadCatch m) =&gt; Defer m () -&gt; m ()\nrunDefer fn = do\n  ((), deferredActions) &lt;- runWriterT (catch fn onError)\n  liftIO $ do\n    putStrLn \"run deferred actions\"\n    deferredActions\n\n-- | Handle exceptions.\nonError :: (MonadIO m) =&gt; MyException -&gt; m ()\nonError e = liftIO $ putStrLn $ \"handle exception: \" ++ show e\n\ndata MyException =\n  MyException String\n\ninstance Exception MyException\n\ninstance Show MyException where\n  show (MyException message) = \"MyException(\" ++ message ++ \")\"\n\nmain :: IO ()\nmain = do\n  putStrLn \"start\"\n  runDefer $ do\n    liftIO $ putStrLn \"do stuff 1\"\n    defer $ putStrLn \"cleanup 1\"\n    liftIO $ putStrLn \"do stuff 2\"\n    defer $ putStrLn \"cleanup 2\"\n    liftIO $ putStrLn \"do stuff 3\"\n  putStrLn \"end\"\n</code></pre>\n\n<p>I get the expected output</p>\n\n<pre><code>start\ndo stuff 1\ndo stuff 2\ndo stuff 3\nrun deferred actions\ncleanup 1\ncleanup 2\nend\n</code></pre>\n\n<p>However, if an exception is thrown</p>\n\n<pre><code>main :: IO ()\nmain = do\n  putStrLn \"start\"\n  runDefer $ do\n    liftIO $ putStrLn \"do stuff 1\"\n    defer $ putStrLn \"cleanup 1\"\n    liftIO $ putStrLn \"do stuff 2\"\n    defer $ putStrLn \"cleanup 2\"\n    liftIO $ putStrLn \"do stuff 3\"\n    throwM $ MyException \"exception after do stuff 3\"\n  putStrLn \"end\"\n</code></pre>\n\n<p>none of the deferred actions is run</p>\n\n<pre><code>start\ndo stuff 1\ndo stuff 2\ndo stuff 3\nhandle exception: MyException(exception after do stuff 3)\nrun deferred actions\nend\n</code></pre>\n\n<p>but I expect this</p>\n\n<pre><code>start\ndo stuff 1\ndo stuff 2\ndo stuff 3\nhandle exception: MyException(exception after do stuff 3)\nrun deferred actions\ncleanup 1\ncleanup 2\nend\n</code></pre>\n\n<p>The writer somehow looses his state. If I use <code>[IO ()]</code> as state instead of <code>IO ()</code></p>\n\n<pre><code>type Defer m a = WriterT [IO ()] m a\n</code></pre>\n\n<p>and print the length of <code>deferredActions</code> in <code>runDefer</code> it is 2 on success  (because I called <code>defer</code> twice) and 0 on error (even though <code>defer</code> has been called twice).</p>\n\n<p>What causes this issue? How can I run the deferred actions after an error?</p>\n"}, {"tags": ["email", "haskell"], "comments": [{"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504250403, "post_id": 45993309, "comment_id": 78950046, "body": "Have you tried using an empty list instead of your current definition of,<code>mParts</code>"}, {"owner": {"reputation": 43, "user_id": 6707409, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/576c0ebaaa58d501b9d4bfaabceaa526?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle&#39;s Corpse", "link": "https://stackoverflow.com/users/6707409/kyles-corpse"}, "reply_to_user": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504275156, "post_id": 45993309, "comment_id": 78964887, "body": "Just tried it out, no change in result though."}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504289060, "post_id": 45993309, "comment_id": 78972475, "body": "Did you try to use <code>simpleMail&#39;</code> ?"}, {"owner": {"reputation": 43, "user_id": 6707409, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/576c0ebaaa58d501b9d4bfaabceaa526?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle&#39;s Corpse", "link": "https://stackoverflow.com/users/6707409/kyles-corpse"}, "reply_to_user": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1504290475, "post_id": 45993309, "comment_id": 78973112, "body": "Tried it out, still getting the same result"}], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 6707409, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/576c0ebaaa58d501b9d4bfaabceaa526?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle&#39;s Corpse", "link": "https://stackoverflow.com/users/6707409/kyles-corpse"}, "edited": false, "score": 0, "creation_date": 1504309187, "post_id": 46006649, "comment_id": 78979271, "body": "So I copied/pasted this into my editor and replaced everything with its true value and ran it. It runs without error but no email is sent. Is there something I could be doing wrong?"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "reply_to_user": {"reputation": 43, "user_id": 6707409, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/576c0ebaaa58d501b9d4bfaabceaa526?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle&#39;s Corpse", "link": "https://stackoverflow.com/users/6707409/kyles-corpse"}, "edited": false, "score": 0, "creation_date": 1504314613, "post_id": 46006649, "comment_id": 78980022, "body": "You can change the when to an <code>if success then..else..</code> and check if the authentication fails"}], "tags": [], "owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "is_accepted": false, "score": 1, "last_activity_date": 1504293219, "creation_date": 1504293219, "answer_id": 46006649, "question_id": 45993309, "link": "https://stackoverflow.com/questions/45993309/cant-send-email-with-network-mail-smtp/46006649#46006649", "title": "Can&#39;t Send Email With Network.Mail.SMTP", "body": "<p>I could reproduce the error, but honestly I don't know why this is happening, maybe it has to do with encryption, which I guess google forbids not to have (but that is just a guess).</p>\n\n<p>But since I remembered having sent some email with haskell in the past - I dug out some old code: note this uses <a href=\"https://hackage.haskell.org/package/HaskellNet\" rel=\"nofollow noreferrer\">HaskellNet</a></p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nmodule Main where\n\nimport Control.Monad (when)\nimport Control.Exception (bracket)\nimport Network.HaskellNet.SMTP.SSL\n\nmain :: IO ()\nmain = bracket\n         (connectSMTPSSL \"smtp.gmail.com\")\n         closeSMTP $ \\conn -&gt;\n           do success &lt;- authenticate LOGIN\n                                      \"myemailaddress@gmail.com\"\n                                      \"password\"\n                                      conn\n              when success\n                   $ sendPlainTextMail \"to\" \"from\" \"Test\" \"test\" conn\n</code></pre>\n\n<p>the usage is pretty straightforward establish a connection, authenticate over it send your email, if you have attachments use <code>sendMimeMail</code> or <code>sendMimeMail'</code> or if you want to use the existing <code>Mail</code> type you already built use <code>sendMimeMail2</code>.</p>\n\n<p>If you haven't seen <code>bracket</code> it is the (quite elegant) haskell variant of <code>try..finally</code> - it simply makes sure that the connection is closed.</p>\n"}], "owner": {"reputation": 43, "user_id": 6707409, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/576c0ebaaa58d501b9d4bfaabceaa526?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle&#39;s Corpse", "link": "https://stackoverflow.com/users/6707409/kyles-corpse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1504293219, "creation_date": 1504240216, "question_id": 45993309, "link": "https://stackoverflow.com/questions/45993309/cant-send-email-with-network-mail-smtp", "title": "Can&#39;t Send Email With Network.Mail.SMTP", "body": "<p>I've been reading through the documentation for <a href=\"https://hackage.haskell.org/package/smtp-mail-0.1.4.6\" rel=\"nofollow noreferrer\">Network.Mail.SMTP</a> to send an e-mail. My problem comes after the code begins to run I get a message saying </p>\n\n<blockquote>\n  <p>socket 11: Data.ByteString.hGetLine end of file</p>\n</blockquote>\n\n<p>When I check the inbox folder for the recipient's email and the sent folder of the sending email, there is no message being sent. What can I do to make this code do it's job. I've posted the code and omitted some of the sensitive sections. </p>\n\n<pre><code>import Network.Mail.Mime\n\nimport Network.Mail.SMTP\n\nimport qualified Data.Text as T\n\nimport qualified Data.ByteString as B\n\nimport qualified Data.ByteString.Lazy as BL\n\nmFrom = Address (Just $ T.pack \"FirstName LastName\") (T.pack \"Sender's Email\")\n\nmTo = [Address Nothing (T.pack \"Recipient Email\")]\n\nmCC = []\n\nmBCC = []\n\nmHeader = [(B.empty, (T.pack \"Test Header\"))]\n\npType = T.empty\n\npEncoding = None\n\npFilename = Nothing\n\npHeader = [(B.empty, T.pack \"Test Part Header\")]\n\npContent = BL.empty\n\npPart = Part pType pEncoding pFilename pHeader pContent\n\nalternative =[pPart]\n\nmParts = [alternative]\n\nmMail = Mail mFrom mTo mCC mBCC mHeader mParts\n\na = sendMailWithLogin' \"smtp.gmail.com\" 465 \"Sender Email\" \"Sender Password\" mMail\n\nmain = a\n</code></pre>\n"}, {"tags": ["haskell", "compiler-construction", "interpreter"], "answers": [{"tags": [], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "is_accepted": true, "score": 16, "last_activity_date": 1504233156, "creation_date": 1504233156, "answer_id": 45992581, "question_id": 45992580, "link": "https://stackoverflow.com/questions/45992580/proof-of-the-futamura-projections-in-haskell/45992581#45992581", "title": "Proof of the Futamura projections in Haskell", "body": "<p>Yes, the Futamura projections will work if and only if the source and object languages of the specializer are the same. This is because the specializer can only be applied to itself if it's written in the same language that it can read. However, the target language of the specializer is independent of the other two. This has important consequences which I'll discuss later in this answer.</p>\n\n<p>To prove my hypothesis I'll introduce a new notation to describe programs loosely based on <a href=\"https://en.wikipedia.org/wiki/Tombstone_diagram\" rel=\"noreferrer\">tombstone diagrams</a>. A tombstone diagram (or T-diagram) is a pictorial representation of compilers and other related <a href=\"https://en.wikipedia.org/wiki/Metaprogramming\" rel=\"noreferrer\">metaprograms</a>. They are used to illustrate and reason about the transformation of a program from a source language (left of T) to a target language (right of T) as implemented in an object language (bottom of T). Let's extend the idea of T-diagrams  to work for all programs:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03b1 \u2192 \u03b2 : \u2112 -- A program is a function from \u03b1 to \u03b2 as implemented in language \u2112.\n</code></pre>\n\n<p>In the case of metaprograms <code>\u03b1</code> and <code>\u03b2</code> are themselves programs:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(\u03b1 \u2192 \u03b2 : \ud835\udcae) \u00d7 \u03b1 \u2192 \u03b2 : \ud835\udcaa -- An interpreter for language \ud835\udcae as implemented in \ud835\udcaa.\n(\u03b1 \u2192 \u03b2 : \ud835\udcae) \u2192 (\u03b1 \u2192 \u03b2 : \ud835\udcaf) : \ud835\udcaf -- A compiler from \ud835\udcae to \ud835\udcaf as implemented in \ud835\udcaf.\n(\u03b9 \u00d7 \u03b1 \u2192 \u03b2 : \ud835\udcae) \u00d7 \u03b9 \u2192 (\u03b1 \u2192 \u03b2 : \ud835\udcaf) : \ud835\udcae -- A self-hosting specializer from \ud835\udcae to \ud835\udcaf.\n(\u03b9 \u00d7 \u03b1 \u2192 \u03b2 : \ud835\udcae) \u2192 (\u03b9 \u2192 (\u03b1 \u2192 \u03b2 : \ud835\udcaf) : \ud835\udcaf) : \ud835\udcaf -- A compiler compiler from \ud835\udcae to \ud835\udcaf.\n</code></pre>\n\n<p>This notation can be directly converted into type definitions in Haskell. Armed with this, we can now write a proof of the Futamura projections in Haskell with respect to languages:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE RankNTypes #-}\n\nmodule Futamura where\n\nnewtype Program a b language = Program { runProgram :: a -&gt; b }\n\ntype Interpreter source object = forall a b.       Program (Program a b source, a) b object\ntype Compiler    source target = forall a b.       Program (Program a b source) (Program a b target) target\ntype Specializer source target = forall input a b. Program (Program (input, a) b source, input) (Program a b target) source\ntype Partializer source target = forall input a b. Program (Program (input, a) b source) (Program input (Program a b target) target) target\n\nprojection1 :: Specializer object target -&gt; Interpreter source object -&gt; Program a b source -&gt; Program a b target\nprojection1 specializer interpreter program = runProgram specializer (interpreter, program)\n\nprojection2 :: Specializer object target -&gt; Interpreter source object -&gt; Compiler source target\nprojection2 specializer interpreter = runProgram specializer (specializer, interpreter)\n\nprojection3 :: Specializer source target -&gt; Partializer source target\nprojection3 specializer = runProgram specializer (specializer, specializer)\n</code></pre>\n\n<p>We use the <code>RankNTypes</code> language extension to hide the type-level machinery, allowing us to concentrate on the languages involved. It's also necessary for applying a specializer to itself.</p>\n\n<p>In the above program, the second projection is of particular interest. It tells us that given a self-hosting Haskell to LLVM specializer, we can apply it to any interpreter written in Haskell for some source language \ud835\udcae to get an \ud835\udcae to LLVM compiler. This means that we can write an interpreter in a high-level language and use it to generate a compiler that targets a low-level language. If the specializer is any good then the generated compiler would also be decently good.</p>\n\n<p>Another noteworthy detail is that a self-hosting specializer is very similar to a self-hosting compiler. If your compiler already performs partial evaluation then it shouldn't be too much work to turn it into a specializer. This means that implementing the Futamura projections is a lot easier and a lot more rewarding than originally believed to be. I haven't yet tested this so take it with a grain of salt.</p>\n"}], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 648, "favorite_count": 6, "accepted_answer_id": 45992581, "answer_count": 1, "score": 20, "last_activity_date": 1504456293, "creation_date": 1504233156, "question_id": 45992580, "link": "https://stackoverflow.com/questions/45992580/proof-of-the-futamura-projections-in-haskell", "title": "Proof of the Futamura projections in Haskell", "body": "<p>I read Dan Piponi's excellent blog post on <a href=\"http://blog.sigfpe.com/2009/05/three-projections-of-doctor-futamura.html\" rel=\"noreferrer\">The Three Projections of Doctor Futamura</a>. Towards the end of the article he has an appendix with a proof of the Futamura projections in Haskell. However, I find his article lacking information about the languages involved. What must the source, target and object languages of the specializer be in order for the Futamura projections to work? For example, would the Futamura projections work if I wrote a Haskell to LLVM specializer in Haskell? It would be helpful if you wrote a Haskell program to prove this just like Dan Piponi did in his article.</p>\n"}, {"tags": ["haskell", "tree", "monads", "either", "lifting"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 3, "creation_date": 1504223892, "post_id": 45991542, "comment_id": 78943435, "body": "Depending on what the implementation of <code>mapIsh</code> is, it looks a lot like <code>traverse :: (Applicative f, Traversable t) =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)</code> (with <code>f ~ Either b</code>)."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 3, "creation_date": 1504224001, "post_id": 45991542, "comment_id": 78943461, "body": "<code>foldIsh</code> looks like <code>foldM :: (Monad m, Foldable t) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m b</code>"}, {"owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1504227204, "post_id": 45991542, "comment_id": 78943990, "body": "Those look promising! As does <a href=\"https://hackage.haskell.org/package/transformers-0.5.4.0/docs/Control-Monad-Trans-Accum.html\" rel=\"nofollow noreferrer\">Control.Monad.Trans.Accum</a>. Further processing pending ..."}], "owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 380, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1504223097, "creation_date": 1504223097, "question_id": 45991542, "link": "https://stackoverflow.com/questions/45991542/how-to-lift-a-foldmapboth-into-the-either-monad", "title": "How to lift a fold|map|both into the Either monad?", "body": "<p>A \"map\" of type</p>\n\n<pre><code>mapIsh :: Traversable t =&gt; (a -&gt; Either b c) -&gt; t a -&gt; Either b (t c)\n</code></pre>\n\n<p>would be a start. (Hayoo doesn't find one.) Or a \"fold\" of type</p>\n\n<pre><code>foldIsh :: (b -&gt; a -&gt; Either l b) -&gt; b -&gt; t a -&gt; Either l b\n</code></pre>\n\n<p>Best of all (for my case) would be this:</p>\n\n<pre><code>mapAccumIsh :: (a -&gt; b -&gt; Either l (a, c)) -&gt; a -&gt; t b -&gt; Either l (a, t c)\n</code></pre>\n\n<p>That might be all you need to read. In case you want more details, though, here's a concrete example:</p>\n\n<p>Imagine a treelike structure to mapAccum over. Each branch, after evaluating its children, gets transformed by some function of its children and the accumulator.</p>\n\n<p>Here's some working code that adds each Tree's value to the accumulator, and also adds to each Branch's label the product of its childrens' labels:</p>\n\n<pre><code>module Temp where\n\nimport Data.List\n\ndata Tree = Leaf Float | Branch Float [Tree] deriving (Show)\n\nlabel :: Tree -&gt; Float\nlabel (Leaf i) = i\nlabel (Branch i _) = i\n\nf :: Float -&gt; Tree -&gt; (Float, Tree)\nf i (Leaf j) = (i+j, Leaf j)\nf i (Branch j ts) = (i + tf, Branch tf ts2) where\n  (i2, ts2) = mapAccumL f i ts\n  tf = j + (foldl (*) 1 $ map label ts2)\n\n-- the problem: what if instead of (*) in the line above, we used this?\nevenMult :: Float -&gt; Float -&gt; Either String Float\nevenMult a b = case even $ round b of True -&gt; Right $ a * b\n                                      False -&gt; Left \"that's odd\" \n\ngo = f 0 $ Branch 2 [Branch 2 [Leaf 2]\n                    ,Branch 2 [Leaf 2, Leaf (-2)]]\n</code></pre>\n\n<p>Here's what that returns:</p>\n\n<pre><code>(-6.0,Branch (-6.0) [Branch 4.0 [Leaf 2.0]\n                    ,Branch (-2.0) [Leaf 2.0,Leaf (-2.0)]])\n</code></pre>\n\n<p>But what if, instead of using (*) in the foldl, we used evenMult?</p>\n"}, {"tags": ["haskell", "duplicates", "instance", "monads", "redefinition"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1504203519, "post_id": 45987740, "comment_id": 78935630, "body": "Easiest way: Define your own <code>Maybe</code>-like type."}, {"owner": {"reputation": 108, "user_id": 6476589, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-OHBMKOvbfng/AAAAAAAAAAI/AAAAAAAADjw/5ye5MX8Sbzo/photo.jpg?sz=128", "display_name": "Brendan Murphy", "link": "https://stackoverflow.com/users/6476589/brendan-murphy"}, "edited": false, "score": 1, "creation_date": 1504216568, "post_id": 45987740, "comment_id": 78941483, "body": "There&#39;s no way to avoid importing a typeclass instance for a given type. (see further <a href=\"https://stackoverflow.com/a/8731340/6476589\">stackoverflow.com/a/8731340/6476589</a>)"}, {"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 0, "creation_date": 1504232048, "post_id": 45987740, "comment_id": 78944808, "body": "Change it to MyMaybe?"}], "answers": [{"comments": [{"owner": {"reputation": 151, "user_id": 5293973, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/f1eaae0559197cfe5639f6a3879d6d27?s=128&d=identicon&r=PG&f=1", "display_name": "Atir", "link": "https://stackoverflow.com/users/5293973/atir"}, "edited": false, "score": 0, "creation_date": 1504419943, "post_id": 45987923, "comment_id": 79001220, "body": "Following your advice (Thank you), How would you mimic the list Monad, given as follows:instance Monad [] where       return x = [x]       xs &gt;&gt;= f = concat (map f xs)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 151, "user_id": 5293973, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/f1eaae0559197cfe5639f6a3879d6d27?s=128&d=identicon&r=PG&f=1", "display_name": "Atir", "link": "https://stackoverflow.com/users/5293973/atir"}, "edited": false, "score": 0, "creation_date": 1504425392, "post_id": 45987923, "comment_id": 79002129, "body": "<code>data List&#39; = Empty&#39; | Cons&#39; a (List&#39; a)</code>."}, {"owner": {"reputation": 151, "user_id": 5293973, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/f1eaae0559197cfe5639f6a3879d6d27?s=128&d=identicon&r=PG&f=1", "display_name": "Atir", "link": "https://stackoverflow.com/users/5293973/atir"}, "edited": false, "score": 0, "creation_date": 1504428801, "post_id": 45987923, "comment_id": 79002918, "body": "Shouldn&#39;t be: data List&#39; a = Empty&#39; | Cons&#39; a (List&#39; a) (Thank you for a quick answer)."}, {"owner": {"reputation": 151, "user_id": 5293973, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/f1eaae0559197cfe5639f6a3879d6d27?s=128&d=identicon&r=PG&f=1", "display_name": "Atir", "link": "https://stackoverflow.com/users/5293973/atir"}, "edited": false, "score": 0, "creation_date": 1504437011, "post_id": 45987923, "comment_id": 79004826, "body": "It Does not Work:   Here is the Code (taken from here :<a href=\"https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell/13-the-list-monad\" rel=\"nofollow noreferrer\">schoolofhaskell.com/school/starting-with-haskell/&hellip;</a>)  data List a = Nil | Cons a (List a)  instance (Show a) =&gt; Show (List a) where     show Nil = &quot;&quot;     show (Cons x xs) = show x ++ &quot;, &quot; ++ show xs  instance Functor List where     fmap f Nil = Nil     fmap f (Cons x xs) = Cons (f x) (fmap f xs)  instance Applicative List where     pure = Cons x Nil     (List f) &lt;*&gt; (List x) = List (f x)     _ &lt;*&gt; _ = Nil   (errors : Not in scope: data constructor `List&#39;)"}, {"owner": {"reputation": 151, "user_id": 5293973, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/f1eaae0559197cfe5639f6a3879d6d27?s=128&d=identicon&r=PG&f=1", "display_name": "Atir", "link": "https://stackoverflow.com/users/5293973/atir"}, "edited": false, "score": 0, "creation_date": 1504437438, "post_id": 45987923, "comment_id": 79004936, "body": "It Does not Work:   Here is the Code (taken from here :<a href=\"https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell/13-the-list-monad\" rel=\"nofollow noreferrer\">schoolofhaskell.com/school/starting-with-haskell/&hellip;</a>)  data List a = Nil | Cons a (List a)  instance (Show a) =&gt; Show (List a) where     show Nil = &quot;&quot;     show (Cons x xs) = show x ++ &quot;, &quot; ++ show xs  instance Functor List where     fmap f Nil = Nil     fmap f (Cons x xs) = Cons (f x) (fmap f xs)  instance Applicative List where     pure = Cons x Nil     (List f) &lt;*&gt; (List x) = List (f x)     _ &lt;*&gt; _ = Nil   (errors : Not in scope: data constructor `List&#39;)"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 7, "last_activity_date": 1504204054, "creation_date": 1504204054, "answer_id": 45987923, "question_id": 45987740, "link": "https://stackoverflow.com/questions/45987740/type-class-instance-redefining/45987923#45987923", "title": "Type class instance redefining", "body": "<p>I would simply <strong>mimic the <code>Maybe</code> datatype</strong>, like:</p>\n\n<pre><code>data Maybe' a = Just' a | Nothing' deriving Show\n\ninstance Monad Maybe' where\n    return x = Just' x\n    Nothing' &gt;&gt;= _ = Nothing'\n    (Just' x) &gt;&gt;= f = f x\n</code></pre>\n\n<p>In the last versions of <code>ghc</code>, this will fail, since the last versions require that you implement applicative as well. We can do this like:</p>\n\n<pre><code>instance Applicative Maybe' where\n    pure = Just'\n    (Just' f) &lt;*&gt; (Just' x) = Just' (f x)\n    _ &lt;*&gt; _ = Nothing'\n</code></pre>\n\n<p><code>Applicative</code> requires the type to be an instance of <code>Functor</code>, so we can implement it like:</p>\n\n<pre><code>instance Functor Maybe' where\n    fmap f (Just' x) = Just' (f x)\n    fmap _ Nothing' = Nothing'\n</code></pre>\n\n<p>It will then compile. The advantage of this approach is furthermore that we can easily compare the two <code>Maybe</code> monads, for example:</p>\n\n<pre><code>*Main&gt; Just 2 &gt;&gt;= (\\x -&gt; Just (x+1))\nJust 3\n*Main&gt; Just' 2 &gt;&gt;= (\\x -&gt; Just' (x+1))\nJust' 3\n</code></pre>\n"}], "owner": {"reputation": 151, "user_id": 5293973, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/f1eaae0559197cfe5639f6a3879d6d27?s=128&d=identicon&r=PG&f=1", "display_name": "Atir", "link": "https://stackoverflow.com/users/5293973/atir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1504267932, "creation_date": 1504203248, "last_edit_date": 1504267932, "question_id": 45987740, "link": "https://stackoverflow.com/questions/45987740/type-class-instance-redefining", "title": "Type class instance redefining", "body": "<ol>\n<li><p>I am trying to answer this question:\n\"Given the algebraic data type</p>\n\n<pre><code>data Maybe a = Nothing | Just a\n</code></pre>\n\n<p>pick the correct instance declaration that shows that the type constructor <code>Maybe</code> is a <code>Monad</code>.\" (taken from here:\"DelftX: FP101x Introduction to Functional Programming\".</p></li>\n<li><p>The way I am trying to anwer it is by compiling each potencial answer in turn, for example, this one:</p>\n\n<pre><code>instance Monad Maybe where\n           return x = Just x\n           Nothing &gt;&gt;= _ = Nothing\n           (Just x ) &gt;&gt;= f = f x\n</code></pre></li>\n<li><p>I can not compile it because it is already defined in the prelude.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>HwEx9.hs:16:10: error:\n    Duplicate instance declarations:\n      instance Monad Maybe -- Defined at HwEx9.hs:16:10\n      instance Monad Maybe -- Defined in `GHC.Base'\n</code></pre></li>\n</ol>\n\n<p>My question is: How can I compile it?</p>\n"}, {"tags": ["haskell", "parallel-processing", "repa"], "comments": [{"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 2, "creation_date": 1504195857, "post_id": 45985530, "comment_id": 78931726, "body": "Is it compiled with the threaded runtime?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 5, "creation_date": 1504198035, "post_id": 45985530, "comment_id": 78932903, "body": "The README for repa literally has 3 sentences in it; there&#39;s no excuse for not having read it. One of those sentences is &quot;Functions written with the Repa combinators are automatically parallel provided you supply +RTS -Nwhatever on the command line when running the program&quot;."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 6, "creation_date": 1504206729, "post_id": 45985530, "comment_id": 78937242, "body": "I disagree with the downvotes. Yes, the OP missed to turn on the threading runtime, as the docs suggest. But at least the question shows effort in diagnosing the issue. I wish all the questions on SO showed this much effort."}, {"owner": {"reputation": 615, "user_id": 4176597, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4f118d3068ac55ffc44752d308d50ee7?s=128&d=identicon&r=PG&f=1", "display_name": "ethanabrooks", "link": "https://stackoverflow.com/users/4176597/ethanabrooks"}, "edited": false, "score": 0, "creation_date": 1504405826, "post_id": 45985530, "comment_id": 78999301, "body": "I updated the original question. Please let me know if I am still misunderstanding you."}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1504551595, "post_id": 46042434, "comment_id": 79045733, "body": "Um, what options is ghci supposed to have ignored? It looks like you never used e.g. <code>+RTS -N4</code> at all, which is the recommended way (like the README and the commenters said)!"}, {"owner": {"reputation": 3609, "user_id": 2565354, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/590ed3229d95cdcaa05a96028c586165?s=128&d=identicon&r=PG", "display_name": "badcook", "link": "https://stackoverflow.com/users/2565354/badcook"}, "edited": false, "score": 0, "creation_date": 1504574423, "post_id": 46042434, "comment_id": 79051377, "body": "I think the crucial thing that a lot of commenters are looking at is that even though in your question&#39;s update you indicate that you were using <code>-with-rtsopts=-N</code>, both how you&#39;ve phrased this answer, as well as the <code>ghc-options</code> you are passing to <code>stack ghci</code> seem to indicate that you were missing that option until now, which is indicated in Repa&#39;s README. Note that <code>-with-rtsopts=-N</code> is the same as passing <code>+RTS -N</code> directly, which indicates to the runtime to use as many cores as are on the machine."}, {"owner": {"reputation": 3609, "user_id": 2565354, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/590ed3229d95cdcaa05a96028c586165?s=128&d=identicon&r=PG", "display_name": "badcook", "link": "https://stackoverflow.com/users/2565354/badcook"}, "edited": false, "score": 0, "creation_date": 1504574629, "post_id": 46042434, "comment_id": 79051416, "body": "Note that just specifying <code>-threaded</code> isn&#39;t enough because that&#39;s a compile-time option that only turns on multi-core support; it enables the <code>-N$SOME_NUM_HERE</code> flag. RTS options are runtime options (RTS stands for runtime system) and hence can be changed for each different run of your program (one run you could limit the max # of cores to 3, another maybe 1)"}, {"owner": {"reputation": 615, "user_id": 4176597, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4f118d3068ac55ffc44752d308d50ee7?s=128&d=identicon&r=PG&f=1", "display_name": "ethanabrooks", "link": "https://stackoverflow.com/users/4176597/ethanabrooks"}, "edited": false, "score": 0, "creation_date": 1504665628, "post_id": 46042434, "comment_id": 79092628, "body": "Apologies! That was a type. As the screenshot proves, I did in fact pass <code>-with-rtsopts=-N</code> to ghci, but not to <code>ghc-options</code> in the cabal file. I figured that if it didn&#39;t work for ghci, it wouldn&#39;t work for the compiled code either. That assumption, it turns out, was wrong."}], "tags": [], "owner": {"reputation": 615, "user_id": 4176597, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4f118d3068ac55ffc44752d308d50ee7?s=128&d=identicon&r=PG&f=1", "display_name": "ethanabrooks", "link": "https://stackoverflow.com/users/4176597/ethanabrooks"}, "is_accepted": false, "score": 0, "last_activity_date": 1504549674, "creation_date": 1504549674, "answer_id": 46042434, "question_id": 45985530, "link": "https://stackoverflow.com/questions/45985530/why-does-haskell-repa-use-only-one-cpu/46042434#46042434", "title": "Why does (Haskell) Repa use only one CPU?", "body": "<p>For whatever reason, it appears that ghci ignores certain input options and therefore monadic computations like <code>sumP</code> will only use one CPU core. However, the purpose of this experiment was to use multiple cores for a personal project that I was working on, and I was successful in that objective. The key, I think, was adding <code>-with-rtsopts=-N</code> in my <code>.cabal</code> file under <code>ghc-options</code>. The final <code>ghc-options</code> are as follows:</p>\n\n<pre><code>executable write\n  hs-source-dirs:      app\n  main-is:             Write.hs\n  ghc-options:         -Odph \n                       -rtsopts \n                       -with-rtsopts=-N\n                       -threaded \n                       -fno-liberate-case \n                       -funfolding-use-threshold1000 \n                       -funfolding-keeness-factor1000 \n                       -fllvm \n                       -optlo-O3\n</code></pre>\n"}], "owner": {"reputation": 615, "user_id": 4176597, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4f118d3068ac55ffc44752d308d50ee7?s=128&d=identicon&r=PG&f=1", "display_name": "ethanabrooks", "link": "https://stackoverflow.com/users/4176597/ethanabrooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 237, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1504665474, "creation_date": 1504194630, "last_edit_date": 1504665474, "question_id": 45985530, "link": "https://stackoverflow.com/questions/45985530/why-does-haskell-repa-use-only-one-cpu", "title": "Why does (Haskell) Repa use only one CPU?", "body": "<p>I have been working on a pathtracer using the <code>Repa</code> library. I recently refactored it to incorporate parallelism by using the monadic <code>computeP</code>. However, I found that the performance increases were negligible. Moreover, monitoring <code>htop</code>, it seemed like the program was still only using one CPU. To drill down on the problem, I opened <code>ghci</code> and ran the following:</p>\n\n<pre><code>~\n\u276f stack ghci --package repa\nConfiguring GHCi with the following packages: \nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\nLoaded GHCi configuration from /tmp/ghci12667/ghci-script\nPrelude&gt; import Data.Array.Repa\nPrelude Data.Array.Repa&gt; import System.Random\nPrelude Data.Array.Repa System.Random&gt; randomList = randoms (mkStdGen 0)\nPrelude Data.Array.Repa System.Random&gt; shape = (Z :. 1000000)\nPrelude Data.Array.Repa System.Random&gt; array = fromFunction shape $ \\(Z :. i) -&gt; randomList !! i\nPrelude Data.Array.Repa System.Random&gt; sumP array\n</code></pre>\n\n<p>No dice. <code>repa</code> still seems to use only one CPU core as indicated by <code>htop</code>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/JQ5f7.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/JQ5f7.jpg\" alt=\"enter image description here\"></a></p>\n\n<p>Moreover, execution team barely varies between <code>sumP</code> and <code>sumS</code>, slightly favoring <code>sumS</code>:</p>\n\n<pre><code>Prelude Data.Array.Repa System.Random&gt; array = fromListUnboxed (Z :. 1000000) $ take 1000000 $ randoms (mkStdGen 0)\n(0.01 secs, 0 bytes)\nPrelude Data.Array.Repa System.Random&gt; sumP array\nAUnboxed Z [500140.92257232184]\n(0.99 secs, 1,916,158,952 bytes)\nPrelude Data.Array.Repa System.Random&gt; sumS array\nAUnboxed Z [500140.92257232184]\n(0.93 secs, 2,348,156,248 bytes)\n</code></pre>\n\n<p>What am I missing? In case it matters, I am using Arch Linux:</p>\n\n<pre><code>~\n\u276f uname -a\nLinux roskolnikov 4.11.9-1-ARCH #1 SMP PREEMPT Wed Jul 5 18:23:08 CEST 2017 x86_64 GNU/Linux\n</code></pre>\n\n<h1>Update</h1>\n\n<p>Some of the comments indicate that I should use the <code>-threaded</code> option for <code>ghci</code> as indicated in the <code>repa</code> docs. I was under the (mis?)impression that <code>ghci</code> used <code>-threaded</code> by default. In any case, my program was already using these flags -- this is the snippet from the <code>.cabal</code> file:</p>\n\n<pre><code>executable write\n  hs-source-dirs:      app\n  main-is:             Write.hs\n  ghc-options:         -Odph \n                       -rtsopts \n                       -threaded \n                       -fno-liberate-case \n                       -funfolding-use-threshold1000 \n                       -funfolding-keeness-factor1000 \n                       -fllvm \n                       -optlo-O3\n  build-depends:       base \n                     , pathtracer\n                     , repa\n                     , JuicyPixels\n  default-language:    Haskell2010\n</code></pre>\n\n<p>Moreover, I reran the commands in <code>ghci</code> using (I think) the correct ghci options:</p>\n\n<pre><code>~\n\u276f stack ghci\\\n --package repa\\\n --ghc-options -Odph\\\n --ghc-options -rtsopts\\\n --ghc-options -with-rtsopts=-N\\\n --ghc-options -threaded\\\n --ghc-options -fno-liberate-case\\\n --ghc-options -funfolding-use-threshold1000\\\n --ghc-options -funfolding-keeness-factor1000\\\n --ghc-options -fllvm\\\n --ghc-options -optlo-O3\n\nConfiguring GHCi with the following packages: \n\nwhen making flags consistent: warning:\n    -O conflicts with --interactive; -O ignored.\nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\nLoaded GHCi configuration from /tmp/ghci31252/ghci-script\nPrelude&gt; import Data.Array.Repa\nPrelude Data.Array.Repa&gt; import System.Random\nPrelude Data.Array.Repa System.Random&gt; randomList = randoms (mkStdGen 0)\nPrelude Data.Array.Repa System.Random&gt; shape = (Z :. 1000000)\nPrelude Data.Array.Repa System.Random&gt; array = fromFunction shape $ \\(Z :. i) -&gt; randomList !! i\nPrelude Data.Array.Repa System.Random&gt; sumP array\n</code></pre>\n\n<p>Still no dice:</p>\n\n<p><a href=\"https://i.stack.imgur.com/4SBrA.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/4SBrA.jpg\" alt=\"enter image description here\"></a></p>\n\n<p>I deeply appreciate any further assistance with this matter.</p>\n"}, {"tags": ["haskell", "syntax"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 5, "creation_date": 1504189100, "post_id": 45983399, "comment_id": 78927057, "body": "Why do you need to do this? It&#39;s certainly possible, but it may not be the best way to accomplish what you&#39;re trying to do."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1504207171, "post_id": 45983399, "comment_id": 78937479, "body": "If you&#39;re new to Haskell&#39;s type system, I&#39;d strongly recommend reading the <a href=\"http://learnyouahaskell.com/types-and-typeclasses#typeclasses-101\" rel=\"nofollow noreferrer\">learn you a haskell chapter</a> on the subject. If you&#39;re more experienced, the <a href=\"http://book.realworldhaskell.org/read/using-typeclasses.html\" rel=\"nofollow noreferrer\">real world haskell chapter</a> might help you more."}, {"owner": {"reputation": 101, "user_id": 5827227, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aab504b4456f584465cd210b36e9cd6a?s=128&d=identicon&r=PG", "display_name": "Jujhar Singh", "link": "https://stackoverflow.com/users/5827227/jujhar-singh"}, "edited": false, "score": 0, "creation_date": 1504286052, "post_id": 45983399, "comment_id": 78971166, "body": "I tried the three above but none of them worked in winHugs. Lets say you have an custom type like Color and its made up of say 5 colours, Red, Green, Blue, Yellow, and White and then you have the function theFunction Color -&gt; String. Now if you pass a different color like Purple or maybe enclose Red in quotes it would throw an error is there any way around that. I see the Either keyword but using it throws an error also not sure what the backticks and double backticks do after the function name and what Left and Right do."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1504646251, "post_id": 45983399, "comment_id": 79087736, "body": "Hello! I notice you haven&#39;t yet accepted an answer yet. If you&#39;re satisfied with any answer below, please accept it by clicking the green tick underneath it."}], "answers": [{"comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1504216943, "post_id": 45983659, "comment_id": 78941607, "body": "Both of those last two <i>are</i> technically syntactically valid (with GHC extensions), just not what the person asking the question is looking for."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 4, "last_activity_date": 1504188863, "creation_date": 1504188863, "answer_id": 45983659, "question_id": 45983399, "link": "https://stackoverflow.com/questions/45983399/passing-any-type-in-function-signature-in-haskell/45983659#45983659", "title": "Passing any type in function signature in Haskell", "body": "<p>Defining a function <code>a -&gt; String</code> is easily possible, it just won't be able to do anything useful unless you also restrict <code>a</code> to some typeclass (like <code>Show</code>).</p>\n\n<p><code>_ -&gt; String</code> is not valid syntax. If it were, I imagine it would do the same as <code>a -&gt; String</code>, so you can just use that.</p>\n\n<p><code>(String || Number) -&gt; String</code> is also not valid syntax, but <code>Either String Number -&gt; String</code> is. You can also define your data type with constructors for the types you want to allow.</p>\n"}, {"comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1504206850, "post_id": 45983667, "comment_id": 78937298, "body": "May I make a suggestion to write the constraint as <code>(Show a) =&gt; ...</code> rather than <code>Show a =&gt; ...</code> to more clearly denote that it&#39;s a constraint, rather than an argument? I realise this is more of a style choice, however I&#39;ve always found it to be helpful in reading a function&#39;s type."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1504215469, "post_id": 45983667, "comment_id": 78941074, "body": "@AJFarmar yeah you&#39;ve got a point there... I&#39;ve actually started parenthesising all constraints a couple of times (in particular, superclass constraints), but eventually the \u201cavoid all unnecessary parens\u201d instinct always won. I&#39;ll consider it again in future SO answers."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1504269245, "post_id": 45983667, "comment_id": 78960991, "body": "One major difference between the two styles is also the fact that you need to wrap the <code>String</code> / <code>Integer</code> using the right constructor in the <code>myFunction&#39;&#39;</code> case."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 12, "last_activity_date": 1504188882, "creation_date": 1504188882, "answer_id": 45983667, "question_id": 45983399, "link": "https://stackoverflow.com/questions/45983399/passing-any-type-in-function-signature-in-haskell/45983667#45983667", "title": "Passing any type in function signature in Haskell", "body": "<p><code>myFunction :: a -&gt; String</code> is technically possible, however it's profoundly useless \u2013 since this must be able to deal with an argument <em>of any type</em>, there's nothing you can actually do with the argument. (It's a bit like getting a can with a completely unspecified substance \u2013 you wouldn't eat it in case it's corrosive, you couldn't use it for cleaning purposes in case it's fat, paint or glue, you couldn't process it further... in case of an unrestricted Haskell type you couldn't even <em>analyse</em> it.)</p>\n\n<p>If you narrow it down to types that support some kind of common operation, a polymorphic argument can make sense:</p>\n\n<pre><code>myFunction' :: Show a =&gt; a -&gt; String\nmyFunction' x = \"The value is \" ++ show x\n</code></pre>\n\n<p>Your other approach, supporting only two very specific types, is also possible:</p>\n\n<pre><code>myFunction'' :: Either String Integer -&gt; String\nmyFunction'' (Left s) = \"Got a string: \u201c\" ++ s ++ \"\u201d\"\nmyFunction'' (Right n) = \"Got a number: \" ++ show n\n</code></pre>\n\n<p>Note that these two approaches are quite different: <code>Show a =&gt; a -&gt; String</code> can be used as <code>String -&gt; String</code> or as <code>Integer -&gt; String</code>, or in fact any other type which supports the <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#v:show\" rel=\"noreferrer\"><code>show</code> operation</a> (including newly-defined types of your own), but you must decide <em>at compile-time</em> which type you want. At runtime, all arguments passed to this function must then have the same type.</p>\n\n<p><code>Either String Integer -&gt; String</code> can accept a mixture of <code>String</code>- and <code>Integer</code> values at runtime, but is always restricted to only these two types.</p>\n"}, {"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": false, "score": 4, "last_activity_date": 1504188912, "creation_date": 1504188912, "answer_id": 45983679, "question_id": 45983399, "link": "https://stackoverflow.com/questions/45983399/passing-any-type-in-function-signature-in-haskell/45983679#45983679", "title": "Passing any type in function signature in Haskell", "body": "<p><code>myFunction :: a -&gt; String</code> means that <code>myFunction</code> can take an argument of any type, but will always return a string.  This is legal Haskell syntax.</p>\n\n<p>With <code>PartialTypeSignatures</code> enabled, <code>myFunction :: _ -&gt; String</code> is legal Haskell syntax, with <code>_</code> acting as a \"hole\", or a way to get the compiler to tell you what type it inferred at that position:</p>\n\n<pre><code>Temp.hs:4:15: warning: [-Wpartial-type-signatures]\n    \u2022 Found type wildcard \u2018_\u2019 standing for \u2018String\u2019\n    \u2022 In the type signature: myFunction :: _ -&gt; String\n  |\n4 | myFunction :: _ -&gt; String\n  |               ^\n</code></pre>\n\n<p>If you enable <code>TypeOperators</code>, then you can define <code>type (||) = Either</code>, which make <code>myFuncion :: (String || Number) -&gt; String</code> mean that <code>myFuncion</code> is a function that takes an argument of type <code>Either String Number</code> and returns a <code>String</code>:</p>\n\n<pre><code>type Number = Integer\ntype (||) = Either\n\nmyFuncion = (String ||  Number) -&gt; String\nmyFuncion (Left string) = string\nmyFuncion (Right number) = show number\n</code></pre>\n"}], "owner": {"reputation": 101, "user_id": 5827227, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aab504b4456f584465cd210b36e9cd6a?s=128&d=identicon&r=PG", "display_name": "Jujhar Singh", "link": "https://stackoverflow.com/users/5827227/jujhar-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 780, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1504646162, "creation_date": 1504188202, "last_edit_date": 1504646162, "question_id": 45983399, "link": "https://stackoverflow.com/questions/45983399/passing-any-type-in-function-signature-in-haskell", "title": "Passing any type in function signature in Haskell", "body": "<p>I want to pass a function a wildcard or any type or even a way to choose between either of multiple types rather than just restrict it to String, or Number, or Boolean, for example:</p>\n\n<pre><code>myFunction :: a -&gt; String\n</code></pre>\n\n<p>or</p>\n\n<pre><code>myFunction :: _ -&gt; String\n</code></pre>\n\n<p>or</p>\n\n<pre><code>myFunction :: (String || Number) -&gt; String\n</code></pre>\n\n<p>Is that possible?</p>\n"}, {"tags": ["list", "haskell", "insert"], "answers": [{"comments": [{"owner": {"reputation": 3633, "user_id": 675154, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/23da6806cab4830b5d1b15ef2a410541?s=128&d=identicon&r=PG", "display_name": "delta", "link": "https://stackoverflow.com/users/675154/delta"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1504168592, "post_id": 45976870, "comment_id": 78912369, "body": "@Zeta <code>before</code> and <code>behind</code> is not about order, but about <b>positions</b> in the list, there is no pre assumption of <code>a</code> an instance of <code>Ord</code>."}, {"owner": {"reputation": 3633, "user_id": 675154, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/23da6806cab4830b5d1b15ef2a410541?s=128&d=identicon&r=PG", "display_name": "delta", "link": "https://stackoverflow.com/users/675154/delta"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1504168721, "post_id": 45976870, "comment_id": 78912449, "body": "@Zeta I have modified to <b>appears</b>, hope makes it clear. I am not an native English speaker, I would appreciate it if there are any suggestions expressing this."}, {"owner": {"reputation": 117, "user_id": 8542117, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/abe9b7ac3afe582ee17e633bf060b9f9?s=128&d=identicon&r=PG&f=1", "display_name": "john", "link": "https://stackoverflow.com/users/8542117/john"}, "edited": false, "score": 0, "creation_date": 1504169122, "post_id": 45976870, "comment_id": 78912744, "body": "In the part (f y xs), what this do is to call the function using the list without the first element right?"}, {"owner": {"reputation": 3633, "user_id": 675154, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/23da6806cab4830b5d1b15ef2a410541?s=128&d=identicon&r=PG", "display_name": "delta", "link": "https://stackoverflow.com/users/675154/delta"}, "reply_to_user": {"reputation": 117, "user_id": 8542117, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/abe9b7ac3afe582ee17e633bf060b9f9?s=128&d=identicon&r=PG&f=1", "display_name": "john", "link": "https://stackoverflow.com/users/8542117/john"}, "edited": false, "score": 0, "creation_date": 1504169211, "post_id": 45976870, "comment_id": 78912805, "body": "@john yes. recursive is about find the sub-problem, the pattern."}, {"owner": {"reputation": 117, "user_id": 8542117, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/abe9b7ac3afe582ee17e633bf060b9f9?s=128&d=identicon&r=PG&f=1", "display_name": "john", "link": "https://stackoverflow.com/users/8542117/john"}, "edited": false, "score": 0, "creation_date": 1504169303, "post_id": 45976870, "comment_id": 78912864, "body": "Thank you very much!! It&#39;s incredible to see how simple the answer was, I think that I need alot of practice to get this language"}], "tags": [], "owner": {"reputation": 3633, "user_id": 675154, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/23da6806cab4830b5d1b15ef2a410541?s=128&d=identicon&r=PG", "display_name": "delta", "link": "https://stackoverflow.com/users/675154/delta"}, "is_accepted": true, "score": 8, "last_activity_date": 1504170546, "last_edit_date": 1504170546, "creation_date": 1504168393, "answer_id": 45976870, "question_id": 45976590, "link": "https://stackoverflow.com/questions/45976590/creating-a-lists-of-lists-with-new-element-in-each-position/45976870#45976870", "title": "Creating a lists of lists with new element in each position", "body": "<pre><code>insert' :: a -&gt; [a] -&gt; [[a]]\ninsert' y [] = [[y]]\ninsert' y xss@(x:xs) = (y : xss) : map (x :) (insert' y xs)\n</code></pre>\n\n<p>While the empty list case comes natural, let's take a look at <code>insert' y xss@(x:xs)</code>. We essentially have two cases we need to cover:</p>\n\n<ol>\n<li><code>y</code> appears in front of <code>x</code>. Then we can just use <code>y : xss</code>.</li>\n<li><code>y</code> appears somewhere after <code>x</code>. We therefore just insert it in the rest of our list and make sure that <code>x</code> is the first element with <code>map (x:)</code>.</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 0, "last_activity_date": 1504201099, "creation_date": 1504201099, "answer_id": 45987227, "question_id": 45976590, "link": "https://stackoverflow.com/questions/45976590/creating-a-lists-of-lists-with-new-element-in-each-position/45987227#45987227", "title": "Creating a lists of lists with new element in each position", "body": "<p>Although <a href=\"https://stackoverflow.com/a/45976870/67579\">@delta's answer</a> is definitely more elegant, here a solution with <em>difference lists</em>. If we insert an element <code>x</code> on every location of list <code>ys = [y1,y2,...,yn]</code>, the first time we will insert it as head, so that means we can construct <code>x : ys</code>.</p>\n\n<p>. For the second element of the resulting list, we want to construct a list <code>[y1,x,y2,...,yn]</code>. We can do this like <code>y1 : x : y2s</code>. The next lists will all have a structure <code>y1 : ...</code>.</p>\n\n<p>The question is: how can we write a recursive structure that keeps track of the fact that we want to put elements in the head. We can use a function for that: we start with a function <code>id</code>. If we now call <code>id (x:ys)</code> then we will of course generate the list <code>(x:ys)</code>.</p>\n\n<p>We can however, based on the <code>id</code> function, construct a new function <code>id2 = \\z -&gt; id (y1:z)</code>. This function will thus put <code>y1</code> in the head of the list and then add the list with which we call <code>id2</code> as tail. Next we can construct <code>id3 = \\z -&gt; id2 (y2:z)</code>. This will put <code>y1</code> and <code>y2</code> as first elements followed by the tail <code>z</code>.</p>\n\n<p>So we can put this into the following recursive format: </p>\n\n<pre><code>insert' :: a -&gt; [a] -&gt; [[a]]\ninsert' x = go id\n    where go d [] = [d [x]]\n          go d ys@(yh:yt) = (d (x : ys)) : go (d . (yh :)) yt\n</code></pre>\n\n<p>So we redirect <code>insert'</code> to <code>go</code> where the initial difference list is simply the <code>id</code> function. Each time we check if we have reached the end of the given list. If that is the case, we return the basecase: we call <code>[x]</code> (as tail) on the difference list, and thus construct a list where we append <code>x</code> as last element.</p>\n\n<p>In case we have not yet reached the last element, we will first emit <code>d (x : ys)</code>: we prepend <code>x</code> to the list and provide this as argument to the difference list <code>d</code>. <code>d</code> will prepend <code>y1 : y2 : ... : yk</code> up to the point where we insert <code>x</code>. Furthermore we call recursively <code>go (d . (yh :)) yt</code> on the tail of the list: we thus construct a new difference list, wehere we insert <code>(yh :)</code> as tail of the list. We thus produce a new function with one argument: the tail after the <code>yh</code> element.</p>\n\n<p>This function produces the expected results:</p>\n\n<pre><code>*Main&gt; insert' 4 []\n[[4]]\n*Main&gt; insert' 4 [1,2,5]\n[[4,1,2,5],[1,4,2,5],[1,2,4,5],[1,2,5,4]]\n*Main&gt; insert' 7 [1,2,3]\n[[7,1,2,3],[1,7,2,3],[1,2,7,3],[1,2,3,7]]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 0, "last_activity_date": 1504286517, "creation_date": 1504286517, "answer_id": 46005235, "question_id": 45976590, "link": "https://stackoverflow.com/questions/45976590/creating-a-lists-of-lists-with-new-element-in-each-position/46005235#46005235", "title": "Creating a lists of lists with new element in each position", "body": "<p>You may also do as follows;</p>\n\n<pre><code>import Data.List\n\nspread :: a -&gt; [a] -&gt; [[a]]\nspread x xs = zipWith (++) (inits xs) ((x:) &lt;$&gt; tails xs)\n\n*Main&gt; spread 7 [1,2,3]\n[[7,1,2,3],[1,7,2,3],[1,2,7,3],[1,2,3,7]]\n*Main&gt; spread 7 []\n[[7]]\n</code></pre>\n\n<p>So this is about three stages.</p>\n\n<ol>\n<li><code>(x:) &lt;$&gt; tails xs</code> is all about applying the <code>(x:)</code> function to all elements of <code>tails xs</code> function. So <code>tails [1,2,3]</code> would return <code>[[1,2,3],[2,3],[3],[]]</code> and we are to apply an <code>fmap</code> which is designated by <code>&lt;$&gt;</code> in the inline form. This is going to be the third argument of the <code>zipWith</code> function.</li>\n<li><code>(inits xs)</code> which would return <code>[[],[1],[1,2],[1,2,3]]</code>, is going to be the second argument to <code>zipWith</code>.</li>\n<li><code>zipWith (++)</code> is obviously will zip two list of lists by concatenating the list elements.</li>\n</ol>\n\n<p>So we may also express the same functionality with applicative function functors as follows;</p>\n\n<pre><code>spread :: a -&gt; [a] -&gt; [[a]]\nspread x = zipWith (++) &lt;$&gt; inits &lt;*&gt; fmap (x:) . tails\n</code></pre>\n\n<p>In this case we <code>fmap</code> the <code>zipWith (++)</code> function with type <code>[[a]] -&gt; [[a]] -&gt; [[a]]</code> over <code>inits</code> and then apply it over to <code>fmap (x:) . tails</code>.</p>\n\n<p>It could get more pointfree but becomes more complicated to read through (at least for me). In my opinion this is as best as it gets.</p>\n"}], "owner": {"reputation": 117, "user_id": 8542117, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/abe9b7ac3afe582ee17e633bf060b9f9?s=128&d=identicon&r=PG&f=1", "display_name": "john", "link": "https://stackoverflow.com/users/8542117/john"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 703, "favorite_count": 0, "accepted_answer_id": 45976870, "answer_count": 3, "score": 4, "last_activity_date": 1504286517, "creation_date": 1504167519, "question_id": 45976590, "link": "https://stackoverflow.com/questions/45976590/creating-a-lists-of-lists-with-new-element-in-each-position", "title": "Creating a lists of lists with new element in each position", "body": "<p>i'm new in the haskell world and i'd like to know how to insert a value in each position of a list in haskell, and return a lists of sublists containing the value in each position. For example: </p>\n\n<pre><code>insert' :: a -&gt; [a] -&gt; [[a]]\ninsert' a [] = [[a]]\ninsert' a list = ??\n</code></pre>\n\n<p>To get something like:</p>\n\n<pre><code>insert' 7 [1,2,3] = [[7,1,2,3],[1,7,2,3],[1,2,7,3],[1,2,3,7]]\n</code></pre>\n"}, {"tags": ["haskell", "cabal"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504169160, "post_id": 45976083, "comment_id": 78912775, "body": "I&#39;m not too familiar with CMake, but based on what the docs say about <code>configure_file</code>, it should work for Haskell as well, in much the same way you do it in C. You can have a field like <code>cpp-options: -DLIB_VERSION=&quot;${LIB_VERSION}&quot;</code> (where <code>${LIB_VERSION}</code> is whichever variable identifies the version) in the prototype of your .cabal file, and then have <code>libVersion :: String; libVersion = LIB_VERSION</code> in some Haskell source file (in which <code>-XCPP</code> is enabled). You can do the same in the stack.yaml file with e.g. <code>ghc-options: &quot;$everything&quot;: -D..</code>, which might be easier if you have many packages."}, {"owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504248554, "post_id": 45976083, "comment_id": 78949191, "body": "The issue with <code>configure_file</code>, as I see it, is that CMake likes to split building into a separate dir so the generated files end up out-of-source. This, unfortunately, isn&#39;t always so easy to deal with in Cabal+stack. Using CPP is something I didn&#39;t think of though, I&#39;ll look into passing the information via the build command instead of via a generated file."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504252936, "post_id": 45976083, "comment_id": 78951209, "body": "&quot;CMake likes to split building into a separate dir so the generated files end up out-of-source&quot; - I&#39;m not sure I understand  - can you not tell CMake to put a generated file in a particular place (the place being wherever stack/cabal expect their config files to be, i.e. at the root of the project source)? And yes, another option is to just pass <code>--cpp-options=-D..</code> on the command line to stack/cabal, which saves you from having to generate <code>stack.yaml</code> or <code>*.cabal</code> with configure_file - I guess depending on your particular setup, this could be easier or harder."}, {"owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504253399, "post_id": 45976083, "comment_id": 78951459, "body": "Yes, I can tell <code>configure_file</code> exactly where to put things, but I&#39;d rather not go against the convention and put generated files in-source (it&#39;s already a point of contention that <i>stack</i> leaves stuff in-source when building). Also, I kind of like that my Haskell bits are complete after check-out, i.e. I don&#39;t have to remember running CMake to generate missing bits before opening Haskell source in my editor (which integrates with intero/stack). I know, both reasons aren&#39;t very good but a solution that fulfils them both would be nice."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504254150, "post_id": 45976083, "comment_id": 78951865, "body": "I think these are fine reasons (not wanting to interrupt your workflow, and not placing the undue burden of an additional dependency of your users for the purpose of a somewhat minor feature). Thanks for explaining! I suggest passing <code>-cpp-options=-D..</code> on the command line in the CMake build, and having <code>version :: Maybe String; #ifdef VERSION; version = Just VERSION; #else; version = Nothing</code> - this allows the package to be built without CMake (but then of course you have no knowledge of the version - but I think that&#39;s the best you can do)."}, {"owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504254765, "post_id": 45976083, "comment_id": 78952171, "body": "Yes, that&#39;s basically what I just checked in :) I&#39;ll write a proper answer as soon as our CI is happy with the changes. There are a few details that might be worth documenting in a proper answer."}], "answers": [{"tags": [], "owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "is_accepted": false, "score": 1, "last_activity_date": 1504256074, "creation_date": 1504256074, "answer_id": 45996545, "question_id": 45976083, "link": "https://stackoverflow.com/questions/45976083/using-an-external-version-number-in-haskell-packages-cabal/45996545#45996545", "title": "Using an external version number in Haskell packages (Cabal)", "body": "<p>I thought I'd document the solution I've landed on.</p>\n\n<h3>the source changes</h3>\n\n<p>I added the <em>CPP</em> language extension and use a macro (<code>VERSION</code>) to chose between a version provided as a CPP macro and the version provided by Cabal:</p>\n\n<pre><code>{-# LANGUAGE CPP #-}\nmodule Main where\n\nimport           Data.Version\nimport           Text.ParserCombinators.ReadP\n.... -- other imports\n\n#ifdef VERSION\n#define xstr(s) str(s)\n#define str(s) #s\nversion = fst $ last $ readP_to_S parseVersion xstr(VERSION)\n#else\nimport Paths_&lt;Cabal project name&gt; (version)\n#endif\n</code></pre>\n\n<p>The need for the double-expansion (<em>xstr</em> and <em>str</em>) is explained in <a href=\"https://stackoverflow.com/questions/16989730/stringification-how-does-it-work#16990634\">the answer to another question</a>.</p>\n\n<h3>building</h3>\n\n<p>The above code will unfortunately not build with a simple <code>stack build</code> command. This apparently has to do with the default CPP that <em>ghc</em> uses (<code>/usr/bin/gcc</code>) and the flags it passes to it (as I understand it the culprit is <code>-traditional</code>). The solution is to tell <em>ghc</em> to use GNU CPP:</p>\n\n<pre><code>stack build --ghc-options \"-pgmP=/usr/bin/cpp -DVERSION=1.2.3\"\n</code></pre>\n\n<p>or as I put it in my <code>CMakeLists.txt</code> (I use <code>ExternalProject</code> to integrate <em>stack</em> into our CMake-based build):</p>\n\n<pre><code>ExternalProject_Add(haskell-bits\n...\nBUILD_COMMAND cd &lt;SOURCE_DIR&gt;\n  &amp;&amp; ${HaskellStack_EXE} --local-bin-path &lt;BINARY_DIR&gt; --install-ghc\n         install --ghc-options \"-pgmP=/usr/bin/cpp -DVERSION=${&lt;CMake proj name&gt;_VERSION}\"\n...\n)\n</code></pre>\n"}], "owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1504256074, "creation_date": 1504165811, "question_id": 45976083, "link": "https://stackoverflow.com/questions/45976083/using-an-external-version-number-in-haskell-packages-cabal", "title": "Using an external version number in Haskell packages (Cabal)", "body": "<p>I'm working on a project that's chosen CMake as its build tool. The project is made up of several executables and since a few months back a few of them are written in Haskell. We strongly wish all executables to show the same version number when called as <code>foo --version</code>. Ideally that version should be recorded in one place, and ideally that place should be the top-level <code>CMakeLists.txt</code> (this is where the source for all the other executables get it, via the use of CMake's <code>configure_file</code> function).</p>\n\n<p>Is there some nice way of achieving this?</p>\n\n<p>Some extra information that might be useful:</p>\n\n<ul>\n<li>The source for each executable lives in its own dir, with its own <em>Cabal</em> file.</li>\n<li>We use <code>stack</code> to build, and there is a single <code>stack.yaml</code> file that points to all directories with Haskell code.</li>\n</ul>\n"}, {"tags": ["oop", "haskell", "data-structures"], "comments": [{"owner": {"reputation": 149903, "user_id": 14637, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/1904e7096278a10f1dfb3fdc0ceb53cc?s=128&d=identicon&r=PG", "display_name": "Thomas", "link": "https://stackoverflow.com/users/14637/thomas"}, "edited": false, "score": 2, "creation_date": 1504158328, "post_id": 45974033, "comment_id": 78906751, "body": "Why are typeclasses unsatisfactory? I&#39;m not a Haskell expert, but I think that they would be the tool of choice."}, {"owner": {"reputation": 149903, "user_id": 14637, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/1904e7096278a10f1dfb3fdc0ceb53cc?s=128&d=identicon&r=PG", "display_name": "Thomas", "link": "https://stackoverflow.com/users/14637/thomas"}, "edited": false, "score": 0, "creation_date": 1504158503, "post_id": 45974033, "comment_id": 78906817, "body": "It also depends on what you eventually want to do with these data types. E.g. do you even need to keep track of the fact that a particular polygon is an isosceles triangle, or can you just create it as a generic polygon through a factory function? What do Points and Lines have in common with Polygons that they all need to inherit from Shape? And so on."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 11, "creation_date": 1504158747, "post_id": 45974033, "comment_id": 78906917, "body": "How is that inheritance hierarchy useful? As given, <code>Shape</code> offers no common behaviour, so the first step should be to dismantle the hierarchy."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 19, "creation_date": 1504159849, "post_id": 45974033, "comment_id": 78907391, "body": "Additionally, I think the premise of this question ought to be challenged. We&#39;ve known for more than 20 years that inheritance is bad, re <a href=\"http://amzn.to/XBYukB\" rel=\"nofollow noreferrer\">Design Patterns</a> (1994): <i>Favor object composition over class inheritance.</i>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 5, "creation_date": 1504159890, "post_id": 45974033, "comment_id": 78907412, "body": "It&#39;s generally the case that OOP it&#39;s better at adding new types of data while functional programming is better at adding new operations to work with those data. We functional programmers tend to think that we need new operations more often than we need new types of data. There are various ways to try to get everything, but they&#39;re not for the faint of heart. Search for &quot;expression problem&quot;."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 3, "creation_date": 1504159916, "post_id": 45974033, "comment_id": 78907427, "body": "I agree entirely with @MarkSeemann - you are not making proper use of OOP principles, so trying to emulate them in Haskell (or even in a language with actual OOP) will be confusing at best. That being said, you can write e.g. <code>data Polygon = Quad Quad | ...; data Quad = Rectangle Point Point Length Length | Parallelogram Point Point Length Length Length</code>; essentially each node is a the datatype containing nodes below it; and the constructor injecting that datatype into nodes above it."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1504181185, "post_id": 45974033, "comment_id": 78921230, "body": "It&#39;s &quot;<i>Favor</i> composition over inheritance&quot;, not &quot;Replace inheritance at all costs&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1504172315, "post_id": 45974768, "comment_id": 78915028, "body": "<code>data Line = Line { a :: Line, b :: Line }</code>?  Shouldn&#39;t <code>a</code> and <code>b</code> be <code>:: Point</code>?"}, {"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "edited": false, "score": 0, "creation_date": 1504175102, "post_id": 45974768, "comment_id": 78917069, "body": "This is a great comment, but the example that Rectangle.intersects(Shape other) needs ot use instanceOf (or another form of RTTI or type tags ...) is not generally true. I would consider using instanceOf a design flaw in your hierarchy. The Visitor pattern solves this problem by using double-dispatch, so you can dispatch on both types.It makes it easy to add new operations to your program, at the expense of making it harder to add new Shape types. But this is also true for the sum type where you have to add cases everywhere."}, {"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "edited": false, "score": 0, "creation_date": 1504176021, "post_id": 45974768, "comment_id": 78917674, "body": "This was pretty interesting: <a href=\"http://koerbitz.me/posts/Solving-the-Expression-Problem-in-Haskell-and-Java.html\" rel=\"nofollow noreferrer\">koerbitz.me/posts/&hellip;</a>"}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "edited": false, "score": 0, "creation_date": 1504180750, "post_id": 45974768, "comment_id": 78920945, "body": "@Jens Yes you&#39;re exactly right. The visitor pattern is more-or-less just a more structured way to switch on the type than writing isinstance if/else chains. It has the same fundamental issue that you end up distributing code that needs to know about the set of types in use. The point is that the supposed extensibility of OO classes isn&#39;t actually always present in hierarchies like this, so translating them to simple sum type hierarchies doesn&#39;t necessarily lose on &quot;openness&quot;."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1504194317, "post_id": 45974768, "comment_id": 78930795, "body": "For a completely different take on this, check out the awesome <a href=\"http://hackage.haskell.org/package/diagrams\" rel=\"nofollow noreferrer\">diagrams</a> package, which offers points and lines and rectangles and more. The big idea of that package is to discover a core semantics shared by all the objects of interest, or, if there is no shared semantics, admit it and use two semanticses (e.g. points and rectangles, which after all don&#39;t really share that many operations). Then there is no question of inheritance; rectangles and circles aren&#39;t different types, they are two different semantic objects in the <i>same</i> type."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1504203918, "post_id": 45974768, "comment_id": 78935830, "body": "Perhaps my strongest argument for favoring composition over inheritance is that compositional designs tend to port easily from OOP to FP (and vice versa) while inheritance-based designs do not. This leads me to believe that composition is more modular in some general sense that transcends parochial concerns like classes or ADTs."}, {"owner": {"reputation": 500, "user_id": 6030440, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh6.googleusercontent.com/-3k0aSh3Ojgs/AAAAAAAAAAI/AAAAAAAAACg/Yn_hyfPJonk/photo.jpg?sz=128", "display_name": "Austin Garrett", "link": "https://stackoverflow.com/users/6030440/austin-garrett"}, "edited": false, "score": 0, "creation_date": 1504283418, "post_id": 45974768, "comment_id": 78969870, "body": "I think it would be possible for me to cobble together an interface in a typeclass that could allow me to access the necessary functionality for the different cases, but my particular use is in a rigid-body simulator where I&#39;m calculating intersections. If I restrict myself to a common set of functions between all shapes, then I lose out on potential efficiency gains in the unique pairs of shapes (<code>isColliding :: Circle -&gt; Circle -&gt; Bool</code> is just a simple distance calculation)."}], "tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": true, "score": 32, "last_activity_date": 1504180066, "last_edit_date": 1504180066, "creation_date": 1504161342, "answer_id": 45974768, "question_id": 45974033, "link": "https://stackoverflow.com/questions/45974033/restructuring-an-oop-datatype-into-haskell-types/45974768#45974768", "title": "Restructuring an OOP datatype into Haskell types", "body": "<p>You <em>can</em> use sum types to represent the entire hierarchy, without losing structure. Something like this would do it:</p>\n\n<pre><code>data Shape = IsPoint Point\n           | IsLine Line \n           | IsPolygon Polygon\n\ndata Point = Point { x :: Int, y :: Int }\n\ndata Line = Line { a :: Point, b :: Point }\n\ndata Polygon = IsTriangle Triangle\n             | IsQuad Quad\n             | ...\n</code></pre>\n\n<p>And so on. The basic pattern is you translate each OO abstract class into a Haskell sum type, with each of its immediate OO subclasses (that may themselves be abstract) as variants in the sum type. The concrete classes are product/record types with the actual data members in them.<sup>1</sup></p>\n\n<p>The thing you lose compared to the OOP you're used to by modeling things this way isn't the ability to <em>represent</em> your hierarchy, but the ability to <em>extend</em> it without touching existing code. Sum types are \"closed\", where OO inheritance is \"open\". If you later decide that you want a <code>Circle</code> option for <code>Shape</code>, you have to add it to <code>Shape</code> and then add cases for it everywhere you pattern match on a <code>Shape</code>.</p>\n\n<p>However, this kind of hierarchy probably requires fairly liberal downcasting in OO. For example, if you want a function that can tell if two shapes intersect that's probably an abstract method on <code>Shape</code> like <code>Shape.intersects(Shape other)</code>, so each sub-type gets to write its own implementation. But when I'm writing <code>Rectangle.intersects(Shape other)</code> it's basically impossible generically, without knowing what other subclasses of <code>Shape</code> are out there. I'll have to be using <code>isinstance</code> checks to see what <code>other</code> actually is. But that actually means that I probably can't just add my new <code>Circle</code> subclass without revisiting existing code; an OO hierarchy where isinstance checks are needed is de-facto just as \"closed\" as the Haskell sum type hierarchy is. Basically pattern matching on one of the sum-types generated by applying this pattern is the equivalent of isinstancing and downcasting in the OO version. Only because the sum types are exhaustively known to the compiler (only possible <strong>because</strong> they're closed), if I do add a <code>Circle</code> case to <code>Shape</code> the compiler is able to tell me about all the places that I need to revisit to handle that case.<sup>2</sup></p>\n\n<p>If you have a hierarchy that <em>doesn't</em> need a lot of downcasting, it means that the various base classes have substantial and useful interfaces that they guarantee to be available, and you usually use things <em>through</em> that interface rather than switching on what it could possibly be, then you can probably use type classes. You still need all the \"leaf\" data types (the product types with the actual data fields), only instead of adding sum type wrappers to group them up you add type classes for the common interface. If you can use this style of translation, then you <em>can</em> add new cases more easily (just add the new <code>Circle</code> data type, and an instance to say how it implements the <code>Shape</code> type class; all the places that are polymorphic in any type in the <code>Shape</code> class will now handle <code>Circle</code>s as well). But if you're doing that in OO you always have downcasts available as an escape hatch when it turns out you can't handle shapes generically; with this design in Haskell it's <em>impossible</em>.<sup>3</sup></p>\n\n<p>But my \"real\" answer to \"how do I represent OO type hierarchies in Haskell\" is unfortunately the trite one: I don't. I design differently in Haskell than I do in OO languages<sup>4</sup>, and in practice it's just not a huge problem. But to say how I'd design <strong>this case</strong> differently, I'd have to know more about what you're using them for. For example you could do something like represent a shape as a <code>Point -&gt; Bool</code> function (that tells you whether any given point is inside the shape), and having things like <code>circle :: Point -&gt; Int -&gt; (Point -&gt; Bool)</code> for generating such functions corresponding to normal shapes; that representation is awesome for forming composite intersection/union shapes without knowing anything about them (<code>intersect shapeA shapeB = \\point -&gt; shapeA point &amp;&amp; shapeB point</code>), but terrible for calculating things like areas and circumferences.</p>\n\n<hr>\n\n<p><sup>1</sup> If you have abstract classes with data members, or you have concrete classes that also have further subclasses you can manually push the data members down into the \"leaves\", factor out the inherited data members into a shared record and make all of the \"leaves\" contain one of those, split a layer so that you have a product type containing the inherited data members <em>and</em> a sum type (where that sum type then \"splits\" into the options for the subclasses), stuff like that.</p>\n\n<p><sup>2</sup> If you use catch-all patterns then the warning might not be exhaustive, so it's not always bullet proof, but how bullet proof it is is up to how you code.</p>\n\n<p><sup>3</sup> Unless you opt into runtime type information with a solution like <code>Typeable</code>, but that's not an invisible change; your <em>callers</em> have to opt into it as well.</p>\n\n<p><sup>4</sup> Actually I probably wouldn't design a hierarchy like this even in OO languages. I find it doesn't turn out to be as useful as you'd think in real programs, hence the \"favour composition over inheritance\" advice.</p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1504176943, "post_id": 45976633, "comment_id": 78918262, "body": "It&#39;s worth noting that this use of existentials <a href=\"https://lukepalmer.wordpress.com/2010/01/24/haskell-antipattern-existential-typeclass/\" rel=\"nofollow noreferrer\">is widely considered an anti-pattern</a>. They are generally much more cumbersome to deal with than properly seperable sum types. The advantage they do bring, as you say, is that they&#39;re freely extendable."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1504181497, "post_id": 45976633, "comment_id": 78921434, "body": "@leftaroundabout I was about to write the same thing. IMO, for classes such as <code>Shape</code> above, it could be better to employ <code>data Shape = Shape AABB (IO ())</code> and include this inside <code>Circle,...</code>. The existential typeclass approach becomes more interesting, instead, on type-preserving operations like <code>translate :: Shape a =&gt; a -&gt; Vector -&gt; a</code> since we can&#39;t instead have <code>data Shape = Shape ... (Vector -&gt; ?(actual subtype))</code>, provided we really need to collect shapes in a list or a map (which forces us to have a <code>AnyShape</code> existential)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1504181707, "post_id": 45976633, "comment_id": 78921583, "body": "And, of course, such type preserving operations are those which (ironically) can not be expressed in OOP. Usually we see encodings of that such as <code>class Circle implements Translatable&lt;Circle&gt; {..}</code> (AKA CRTP, AKA F-bound polymorphism). Still, those are the cases were (AFAICS) one really needs existentials+typeclass."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504185704, "post_id": 45976633, "comment_id": 78924558, "body": "@chi Why can&#39;t we use a normal typeclass for <code>translate</code>? How is it relevant whether <code>translate</code> is type-preserving or not when we only use it on  elements of a heterogenous collection?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1504191627, "post_id": 45976633, "comment_id": 78928875, "body": "@Bergi You can use a normal typeclass for <code>translate</code>, as I write above. You can not however, do without it and use the <code>data Shape = ..</code> basic alternative. If you have a heterog. collection probably everything works fine, but the OP seems to want subtyping, and in Haskell that&#39;s mostly needed only when you want a homog. collection instead like <code>[AnyShape]</code> containing circles, rectangles, etc."}, {"owner": {"reputation": 22952, "user_id": 210211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8721ff8fa4b5c658058f4a2803231f44?s=128&d=identicon&r=PG", "display_name": "comingstorm", "link": "https://stackoverflow.com/users/210211/comingstorm"}, "edited": false, "score": 1, "creation_date": 1504212777, "post_id": 45976633, "comment_id": 78939953, "body": "Thanks for pointing out that existentials (as with other high-level features) are best avoided when they aren&#39;t necessary -- as well as articulating a use case where they <i>are</i> necessary!  I&#39;m still considering how (and if) I ought to update my answer to incorporate those points..."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1504225471, "post_id": 45976633, "comment_id": 78943724, "body": "@leftaroundabout nonononono I don&#39;t consider sum types preferable to existentials, unless the structure of your domain really is a sum (which I find quite rare -- rather sum types are often used as a &quot;list of examples&quot; of the domain, which causes you to miss out on the powerful generalizations that you&#39;ll get by characterizing your domain precisely)!  Rather, usually I recommend replacing an typeclass+existential with a record of functions, as in my article."}], "tags": [], "owner": {"reputation": 22952, "user_id": 210211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8721ff8fa4b5c658058f4a2803231f44?s=128&d=identicon&r=PG", "display_name": "comingstorm", "link": "https://stackoverflow.com/users/210211/comingstorm"}, "is_accepted": false, "score": 7, "last_activity_date": 1504171626, "last_edit_date": 1504171626, "creation_date": 1504167639, "answer_id": 45976633, "question_id": 45974033, "link": "https://stackoverflow.com/questions/45974033/restructuring-an-oop-datatype-into-haskell-types/45976633#45976633", "title": "Restructuring an OOP datatype into Haskell types", "body": "<p>You may be looking for a Haskell equivalent of <a href=\"https://en.wikipedia.org/wiki/Dynamic_dispatch\" rel=\"noreferrer\">dynamic dispatch</a>, such that you could store a heterogeneous list of values supporting distinct implementations of a common <code>Shape</code> interface.</p>\n\n<p>Haskell's <a href=\"https://wiki.haskell.org/Existential_type\" rel=\"noreferrer\">existential types</a> support this kind of usage.  It's fairly rare for a Haskell program to actually need existential types -- as Ben's answer demonstrates, sum types can handle this kind of problem.  However, existential types are appropriate for a large, open-ended collection of cases:</p>\n\n<pre><code>{-# LANGUAGE ExistentialQuantification #-}\n...\nclass Shape a where\n    bounds :: a -&gt; AABB\n    draw   :: a -&gt; IO ()\n\ndata AnyShape = forall a. Shape a =&gt; AnyShape a\n</code></pre>\n\n<p>This lets you declare instances in an open-ended style:</p>\n\n<pre><code>data Line = Line Point Point\ninstance Shape Line where ...\n\ndata Circle= Circle {center :: Point, radius :: Double}\ninstance Shape Circle where ...\n\n...\n</code></pre>\n\n<p>Then, you can build your heterogeneous list:</p>\n\n<pre><code>shapes = [AnyShape(Line a b),\n          AnyShape(Circle a 3.0),\n          AnyShape(Circle b 1.8)]\n</code></pre>\n\n<p>and use it in a uniform way:</p>\n\n<pre><code>drawIn box xs = sequence_ [draw s | AnyShape s &lt;- xs, bounds s `hits` box]\n</code></pre>\n\n<p>Note that you need to unwrap your <code>AnyShape</code> in order to use the <code>class Shape</code> interface functions.  Also note that you <em>must</em> use the class functions to access your heterogeneous data -- there is no other way to \"downcast\" the unwrapped existential value <code>s</code>!  Its type only makes sense within the local scope, so the compiler will not let it escape.</p>\n\n<p>If you are trying to use existential types, yet find yourself needing to \"downcast\" them, sum types might be a better fit.</p>\n"}], "owner": {"reputation": 500, "user_id": 6030440, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh6.googleusercontent.com/-3k0aSh3Ojgs/AAAAAAAAAAI/AAAAAAAAACg/Yn_hyfPJonk/photo.jpg?sz=128", "display_name": "Austin Garrett", "link": "https://stackoverflow.com/users/6030440/austin-garrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1492, "favorite_count": 4, "accepted_answer_id": 45974768, "answer_count": 2, "score": 27, "last_activity_date": 1504180066, "creation_date": 1504158203, "question_id": 45974033, "link": "https://stackoverflow.com/questions/45974033/restructuring-an-oop-datatype-into-haskell-types", "title": "Restructuring an OOP datatype into Haskell types", "body": "<p>Coming from an OOP background, Haskell's type system and the way data constructors and typeclasses interact is difficult to conceptualize. I can understand how each are used for simple examples, but some more complication examples of data structures that are very well-suited for an OOP style are proving non-trivial to translate into similarly elegant and understandable types.</p>\n\n<p>In particular, I have a problem with organizing a hierarchy of data such as the following.</p>\n\n<p><img src=\"https://chitu.okoli.org/media/pro/teach/oop/uml.gif\" alt=\"data\"></p>\n\n<p>This is a deeply nested hierarchical inheritance structure, and the lack of support for subtyping makes it unclear how to turn this structure into a natural-feeling alternative in Haskell. It may be fine to replace something like <code>Polygon</code> with a sum data type, declaring it like</p>\n\n<pre><code>data Polygon\n= Quad Point Point\n| Triangle Point Point Point\n| RegularNGon Int Radius\n| ...\n</code></pre>\n\n<p>But this loses some of the structure, and can only really satisfactorily be done for one level of the hierarchy. Typeclasses can be used to implement a form of inheritance and substructure in that a <code>Polygon</code> typeclass could be a subclass of a <code>Shape</code>, and so maybe all <code>Polygon</code> instances have implementations for <code>centroid :: Point</code> and also <code>vertices :: [Point]</code>, but this seems unsatisfactory. What would be a good way of capturing the structure of the picture in Haskell?</p>\n"}, {"tags": ["haskell", "ghci"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504158047, "post_id": 45973912, "comment_id": 78906634, "body": "You can&#39;t - just type your code into a file and load that file."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1504162857, "post_id": 45973912, "comment_id": 78908873, "body": "I&#39;d love if multi-line mode entered a real editor mode where 1) you can still see the lines above and 2) you can move freely in the bottom part of the screen as in a regular editor. Alas, this is not the case."}], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 1, "last_activity_date": 1504169453, "creation_date": 1504169453, "answer_id": 45977217, "question_id": 45973912, "link": "https://stackoverflow.com/questions/45973912/how-to-edit-prior-line-in-ghcis-multi-line-mode/45977217#45977217", "title": "How to edit prior line in ghci&#39;s multi-line mode?", "body": "<p>No. GHCi uses <a href=\"https://hackage.haskell.org/package/haskeline\" rel=\"nofollow noreferrer\">Haskeline</a>, which only works on a per-line basis (and does not provide <code>C-x C-e</code> as GNU Bash does). Essentially, GHCi just works through <a href=\"https://github.com/ghc/ghc/blob/master/ghc/GHCi/UI.hs#L948-L971\" rel=\"nofollow noreferrer\">a queue of lines</a>, which use <a href=\"https://github.com/ghc/ghc/blob/master/ghc/GHCi/UI.hs#L636-L646\" rel=\"nofollow noreferrer\">Haskeline's <code>getInputLine</code></a>.</p>\n\n<p>So <code>:{</code> and <code>:}</code> only take your code, add <code>\"\\n\"</code> inbetween your lines, and then \"run it trough the interpreteter\". There's no line-buffer you can edit, unfortunately. All you can do is to discard the lines with <code>C-c</code> and try again.</p>\n"}], "owner": {"reputation": 4029, "user_id": 3224967, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/963b108f3bcde98ac96d09b04abbf63f?s=128&d=identicon&r=PG&f=1", "display_name": "mherzl", "link": "https://stackoverflow.com/users/3224967/mherzl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 45977217, "answer_count": 1, "score": 3, "last_activity_date": 1504169453, "creation_date": 1504157702, "question_id": 45973912, "link": "https://stackoverflow.com/questions/45973912/how-to-edit-prior-line-in-ghcis-multi-line-mode", "title": "How to edit prior line in ghci&#39;s multi-line mode?", "body": "<p>Using <code>ghci</code>, I sometimes enter definitions using multi-line mode (as described in the <a href=\"https://downloads.haskell.org/~ghc/7.2.2/docs/html/users_guide/interactive-evaluation.html\" rel=\"nofollow noreferrer\">interactive-evaluation documentation</a>).</p>\n\n<p>For instance,</p>\n\n<pre><code>&gt; :{\nPrelude| sumToN :: (Eq a, Num a) =&gt; a -&gt; a\nPrelude| sumToN n\nPrelude|   | signum n /= 1 = 0\nPrelude|   | otherwise = 1 + sumToN (n-1)\nPrelude| :}\n&gt;\n</code></pre>\n\n<p>When using this multi-line input mode, I occasionally realize that I have made a mistake in my input on a previous line. For example, in this code I accidentally typed <code>A</code> instead of <code>a</code>.</p>\n\n<pre><code>&gt; :{\nPrelude| sumToN :: (Eq a, Num a) =&gt; a -&gt; A\nPrelude|\n</code></pre>\n\n<p>To correct the mistake I need to edit a prior line. However, I cannot find any way to go back and edit a previous line. Instead, I <code>^C</code> out of the multi-line mode and start again, repeating if necessary until I type the whole definition line-by-line without mistakes.</p>\n\n<p><strong>Is there any way to edit a previous line in <code>ghci</code>'s multi-line mode without having to type all lines again?</strong></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504158195, "post_id": 45973776, "comment_id": 78906688, "body": "As far as I can see, you&#39;ve answered your own question: &quot;One inserts items into the tree from the back, the other inserts from the front.&quot;."}, {"owner": {"reputation": 253, "user_id": 8423622, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e0fd3c2609ac77126477434153dcb440?s=128&d=identicon&r=PG&f=1", "display_name": "johnson", "link": "https://stackoverflow.com/users/8423622/johnson"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504158592, "post_id": 45973776, "comment_id": 78906855, "body": "I&#39;m am curious about more sophisticated differences. For example the input arguments to both functions are different, so there has to be some other difference in behaviour. There is also something to do with &quot;tail recursion&quot; but I am not sure what that means"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504159690, "post_id": 45973776, "comment_id": 78907322, "body": "These are both more specific questions, which makes them more well-suited to SO. I suggest you include them in your question and possibly elaborate a little bit (in particular, if you don&#39;t know what &#39;tail recursion&#39; means, there is very little you can get from someone explaining to you what the role of tail recursion here is - you should get a basic understanding first and then ask a specific question about anything you misunderstand)."}], "owner": {"reputation": 253, "user_id": 8423622, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e0fd3c2609ac77126477434153dcb440?s=128&d=identicon&r=PG&f=1", "display_name": "johnson", "link": "https://stackoverflow.com/users/8423622/johnson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 161, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1504157064, "creation_date": 1504157064, "question_id": 45973776, "link": "https://stackoverflow.com/questions/45973776/converting-an-associative-list-into-a-bst-using-two-different-methods", "title": "Converting an associative list into a BST using two different methods", "body": "<p>Given this Tree data structure and insert function in Haskell</p>\n\n<pre><code>data Tree\n    = Leaf\n    | Node String Int Tree Tree\n          deriving(Show)\n\ninsert_bst :: Tree -&gt; String -&gt; Int -&gt; Tree\ninsert_bst Leaf ik iv = Node ik iv Leaf Leaf\ninsert_bst (Node k v l r) ik iv =\n                if ik == k then\n                     Node ik iv l r\n                else if ik &lt; k then\n                     Node k v (insert_bst l ik iv) r\n                else\n                     Node k v l (insert_bst r ik iv)\n</code></pre>\n\n<p>What are some of the conceptual differences between these two ways of converting an associative list to a BST. One inserts items into the tree from the back, the other inserts from the front. </p>\n\n<pre><code>assoc_list_to_bst :: [(String, Int)] -&gt; Tree\nassoc_list_to_bst [] = Leaf\nassoc_list_to_bst ((hk, hv):kvs) =\n        let t0 = assoc_list_to_bst kvs\n              in insert_bst t0 hk hv\n</code></pre>\n\n<p>and </p>\n\n<pre><code>assoc_list_to_bst :: [(String, Int)] -&gt; Tree-&gt;Tree\nassoc_list_to_bst [] tree= tree\nassoc_list_to_bst ((hk, hv):kvs) tree =\n        let newtree = insert_bst tree hk hv \n                in insert_bst kvs newtree\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 69864, "user_id": 444991, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c57f597182ae324d8eb33b935f7d38af?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/444991/matt"}, "edited": false, "score": 0, "creation_date": 1504191556, "post_id": 45972477, "comment_id": 78928826, "body": "Welcome to Stack Overflow! In future, please do not edit your question such that it invalidates existing answers. Instead, create a new question."}], "answers": [{"tags": [], "owner": {"reputation": 3633, "user_id": 675154, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/23da6806cab4830b5d1b15ef2a410541?s=128&d=identicon&r=PG", "display_name": "delta", "link": "https://stackoverflow.com/users/675154/delta"}, "is_accepted": false, "score": 0, "last_activity_date": 1504165924, "creation_date": 1504165924, "answer_id": 45976119, "question_id": 45972477, "link": "https://stackoverflow.com/questions/45972477/append-from-one-list-to-a-2d-list-haskell/45976119#45976119", "title": "Append from one list to a 2d list - haskell", "body": "<p>There are many ways to do this, like</p>\n\n<pre><code>Prelude&gt; x = [[1,2,3],[5,6,3],[9,12,7]]\nPrelude&gt; y = [4,5,6]\nPrelude&gt; (flip (++) . return) &lt;$&gt; y &lt;*&gt; x\n[[1,2,3,4],[5,6,3,4],[9,12,7,4],[1,2,3,5],[5,6,3,5],[9,12,7,5],[1,2,3,6],[5,6,3,6],[9,12,7,6]]\n</code></pre>\n\n<p>You can think <code>&lt;$&gt;</code> as the infix <code>fmap</code>, <code>&lt;*&gt;</code> as cartesian product.</p>\n\n<p>or list comprehension</p>\n\n<pre><code>Prelude&gt; [ a ++ [b] | a &lt;- x, b &lt;- y ]\n[[1,2,3,4],[1,2,3,5],[1,2,3,6],[5,6,3,4],[5,6,3,5],[5,6,3,6],[9,12,7,4],[9,12,7,5],[9,12,7,6]]\n</code></pre>\n\n<p>or with <code>do</code> syntax</p>\n\n<pre><code>f :: [a] -&gt; [[a]] -&gt; [[a]]\nf ys xs = do\n    y &lt;- ys\n    x &lt;- xs\n    return $ x ++ return y\n\nmain :: IO ()\nmain = do\n    let x = [[1,2,3],[5,6,3],[9,12,7]]\n    let y = [4,5,6]\n    print $ f y x\n</code></pre>\n\n<hr>\n\n<p>For more information, you can refer to</p>\n\n<ol>\n<li><a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids\" rel=\"nofollow noreferrer\">http://learnyouahaskell.com/functors-applicative-functors-and-monoids</a></li>\n<li><a href=\"http://learnyouahaskell.com/a-fistful-of-monads\" rel=\"nofollow noreferrer\">http://learnyouahaskell.com/a-fistful-of-monads</a></li>\n</ol>\n"}], "owner": {"reputation": 17, "user_id": 8529748, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f6461a5e232badfd9bcf125b36772fc?s=128&d=identicon&r=PG&f=1", "display_name": "Skux", "link": "https://stackoverflow.com/users/8529748/skux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 263, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1504165924, "creation_date": 1504147908, "last_edit_date": 1504157843, "question_id": 45972477, "link": "https://stackoverflow.com/questions/45972477/append-from-one-list-to-a-2d-list-haskell", "title": "Append from one list to a 2d list - haskell", "body": "<p>I want a function where I pass in a list of lists and a list eg <code>[[1,2,3],[5,6,3],[9,12,7]]</code> and <code>[4,5,6]</code></p>\n\n<p>and the function should return a list of lists with every item from the second list appended to the end of the first list</p>\n\n<p>eg the output will be <code>[[1,2,3,4],[1,2,3,5],[1,2,3,6],[9,12,7,5],[9,12,7,6],[9,12,7,4],[5,6,3,4],[5,6,3,5],[5,6,3,6]]</code></p>\n\n<p>thanks</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 55, "user_id": 6835343, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4a9aa1c7126043d7d6a41d5c5da72a7?s=128&d=identicon&r=PG&f=1", "display_name": "dunnl", "link": "https://stackoverflow.com/users/6835343/dunnl"}, "edited": false, "score": 0, "creation_date": 1504140306, "post_id": 45971614, "comment_id": 78902186, "body": "I have read <a href=\"https://stackoverflow.com/questions/9468963/runst-and-function-composition/9469942#9469942\">this</a> and <a href=\"https://stackoverflow.com/questions/8343239/type-error-with-rank-2-types-and-function-composition/8343964#8343964\">this</a> but the content seems obscured by the discussion of <code>($)</code>. I am trying to understand what the problem is in general, and how I can either help GHC understand my code, or ask GHC to help me understand the problem."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1504149914, "post_id": 45971614, "comment_id": 78904296, "body": "The type of <code>(. getKeyVal)</code> is <code>Data m =&gt; (m String -&gt; c) -&gt; Key -&gt; c</code>; the type of <code>useConnection c</code> is <code>(forall m. Data m =&gt; m String) -&gt; IO String</code>. Do you see why the types <code>m String -&gt; IO String</code> and <code>(forall m . Data m =&gt; m String) -&gt; IO String</code> cannot unify? Neither of the latter two definitions require performing this unification."}, {"owner": {"reputation": 19480, "user_id": 2491900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/W8FMW.jpg?s=128&g=1", "display_name": "shree.pat18", "link": "https://stackoverflow.com/users/2491900/shree-pat18"}, "edited": false, "score": 0, "creation_date": 1504150006, "post_id": 45971614, "comment_id": 78904315, "body": "Might be helpful: <a href=\"https://stackoverflow.com/questions/43943793/function-composition-and-foralled-types\" title=\"function composition and foralled types\">stackoverflow.com/questions/43943793/&hellip;</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504164415, "post_id": 45971614, "comment_id": 78909769, "body": "This might be a near-duplicate of <a href=\"https://stackoverflow.com/questions/45964162/could-not-match-polymorphic-type-in-haskell\" title=\"could not match polymorphic type in haskell\">stackoverflow.com/questions/45964162/&hellip;</a>"}, {"owner": {"reputation": 55, "user_id": 6835343, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4a9aa1c7126043d7d6a41d5c5da72a7?s=128&d=identicon&r=PG&f=1", "display_name": "dunnl", "link": "https://stackoverflow.com/users/6835343/dunnl"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1504183702, "post_id": 45971614, "comment_id": 78922985, "body": "@user2407038, I do see that, and I edited my question to ask a new one: Can I force GHC to accept a different type signature on <code>getKeyVal</code>?"}, {"owner": {"reputation": 55, "user_id": 6835343, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4a9aa1c7126043d7d6a41d5c5da72a7?s=128&d=identicon&r=PG&f=1", "display_name": "dunnl", "link": "https://stackoverflow.com/users/6835343/dunnl"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504183805, "post_id": 45971614, "comment_id": 78923081, "body": "@chi, the answer there mentions instantiating <code>(.)</code> as an issue. But in my edit, I think I&#39;m running into an issue even before <code>(.)</code> comes into play."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504191343, "post_id": 45971614, "comment_id": 78928675, "body": "@dunnl Aren&#39;t you still using <code>(.)</code> in your edit? That can&#39;t work since its type variables can not be instantiated to the polymorphic type, I think."}, {"owner": {"reputation": 55, "user_id": 6835343, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4a9aa1c7126043d7d6a41d5c5da72a7?s=128&d=identicon&r=PG&f=1", "display_name": "dunnl", "link": "https://stackoverflow.com/users/6835343/dunnl"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504191970, "post_id": 45971614, "comment_id": 78929128, "body": "@chi My concern was that in GHCI, <code>:t getKeyVal :: Key -&gt; (Data m =&gt; m String)</code> returns <code>getKeyVal :: Data m =&gt; Key -&gt; m String</code>, without yet talking about <code>(.)</code>. My belief now is that the type is somewhat flexible (w.r.t. the exact location of the <code>forall</code>), and indeed the issue is <code>(.)</code> as you say."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1504192707, "post_id": 45971614, "comment_id": 78929654, "body": "Ah, yes. <code>forall a . ...</code> and <code>Context =&gt; ...</code> are automatically hoisted -- moved to the top level if possible. This is usually not an issue, though. I.e. if I write <code>f :: Int -&gt; forall a . a</code> it gets changed to <code>f :: forall a. Int -&gt; a</code>, but after I apply <code>f 5</code> I get again <code>forall a. a</code>, so everything is mostly OK. Even composition usually works fine with that hoisting. A major problem, instead, is if composition requires to involve a polymorphic type, requiring impredicativity."}], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 6835343, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4a9aa1c7126043d7d6a41d5c5da72a7?s=128&d=identicon&r=PG&f=1", "display_name": "dunnl", "link": "https://stackoverflow.com/users/6835343/dunnl"}, "edited": false, "score": 0, "creation_date": 1504191412, "post_id": 45982465, "comment_id": 78928726, "body": "In light of the edit to my question, it appeared to me that GHC simply wouldn&#39;t allow me to say <code>getKeyVal :: Key -&gt; (Data m =&gt; m String)</code> (or rather it would, but GHCI refuses to give me back a rank 2 type with <code>:t</code>). Would you say that my observation is just a red herring? It seems now that GHC is flexible with exact type of <code>getKeyVal</code> until it appears in a specific context."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 55, "user_id": 6835343, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4a9aa1c7126043d7d6a41d5c5da72a7?s=128&d=identicon&r=PG&f=1", "display_name": "dunnl", "link": "https://stackoverflow.com/users/6835343/dunnl"}, "edited": false, "score": 0, "creation_date": 1504192140, "post_id": 45982465, "comment_id": 78929248, "body": "You can always move a universal quantifier out of the result of a function, that&#39;s why querying GHCi for <code>:t _ :: Key -&gt; (\u2200 m . Data m =&gt; m String)</code> gives <code>\u2200 m . Data m =&gt; Key-&gt;m String</code>. But in case the type variable doesn&#39;t appear in the arguments, this can also be inverted and GHC will in fact happily do that, so there&#39;s no problem there."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 4, "last_activity_date": 1504185995, "last_edit_date": 1504185995, "creation_date": 1504185591, "answer_id": 45982465, "question_id": 45971614, "link": "https://stackoverflow.com/questions/45971614/why-cant-ghc-typecheck-this-function-involving-polymorphism-and-existential-typ/45982465#45982465", "title": "Why can&#39;t GHC typecheck this function involving polymorphism and existential types?", "body": "<p>This is all about <code>.</code>. It's unable to pass a polymorphic argument between the functions, hence <code>f . g</code> doesn't work if <code>f</code> is rank-2 polymorphic. Notice the following works:</p>\n\n<pre><code>(~.) :: ((\u2200 m. Data m =&gt; m String) -&gt; z) -&gt; (x -&gt; (\u2200 m. Data m =&gt; m String))\n          -&gt; x -&gt; z\n(~.) f g x = f (g x)\n\ngetKeyValWith :: SomeConn -&gt; Key -&gt; IO String\ngetKeyValWith c = useConnection c ~. getKeyVal\n</code></pre>\n\n<p>Ideally, <code>.</code> would have a type like</p>\n\n<pre><code>(.) :: \u2200 c . ((\u2200 y . c y =&gt; y) -&gt; z) -&gt; x -&gt; ((\u2200 y . c y =&gt; y) -&gt; x)\n               -&gt; x -&gt; z\n</code></pre>\n\n<p>and thus cover all special cases like <code>~.</code> above. But this is not possible \u2013 it would require inferring the weakest possible constraint <code>c</code> to pick in any given situation \u2013 in the traditional case, <code>c y = y~y\u2080</code> \u2013 and I'm pretty sure that is uncomputable in general.</p>\n\n<p>(An interesting question is how far we could get if the compiler just inlined <code>.</code> as much as possible <em>before type-checking</em>, as it right now already does with <code>$</code>. If it did automatic eta-expansion, it could certainly get <code>useConnection c . getKeyVal</code> to work, but automatic eta-expansion is in general not a good idea...)</p>\n\n<p>Hiding the Rank-2 polymorphism by wrapping the polymorphic argument in a GADT, as you did with <code>SomeConn</code>, is the usual workaround.</p>\n"}], "owner": {"reputation": 55, "user_id": 6835343, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4a9aa1c7126043d7d6a41d5c5da72a7?s=128&d=identicon&r=PG&f=1", "display_name": "dunnl", "link": "https://stackoverflow.com/users/6835343/dunnl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 45982465, "answer_count": 1, "score": 4, "last_activity_date": 1504185995, "creation_date": 1504140282, "last_edit_date": 1504183594, "question_id": 45971614, "link": "https://stackoverflow.com/questions/45971614/why-cant-ghc-typecheck-this-function-involving-polymorphism-and-existential-typ", "title": "Why can&#39;t GHC typecheck this function involving polymorphism and existential types?", "body": "<p>I have some Haskell code that won't compile (with GHC 8.0.2). I think I understand the basic problem, but I would like to understand it better so I can avoid this in the future.</p>\n\n<p>My library looks similar to this:</p>\n\n<pre><code>{-# language TypeFamilyDependencies #-}\n{-# language GADTs #-}\n{-# language RankNTypes #-}\n\nmodule Lib where\n\ntype Key = Int\n\nclass Handle m where\n    type Connection m = c | c -&gt; m\n    withConnection :: Connection m -&gt; m a -&gt; IO a\n\nclass (Handle m) =&gt; Data m where\n    getKeyVal :: Key -&gt; m String\n\ndata SomeConn where\n    SomeConn :: (Data m) =&gt; Connection m -&gt; SomeConn\n\nuseConnection :: SomeConn -&gt; (forall m. Data m =&gt; m String) -&gt; IO String\nuseConnection (SomeConn c) action = withConnection c action\n</code></pre>\n\n<p>The idea is that <code>Data m</code> represents a class of monads similar to <code>ReaderT (Connection m) IO</code>. I am hoping to write generic functions with the methods of this typeclass, and have the exact method instance be determined by the connection type wrapped with <code>SomeConn</code> (which is chosen at run-time).</p>\n\n<p>Now the following code</p>\n\n<pre><code>getKeyValWith :: SomeConn -&gt; Key -&gt; IO String\ngetKeyValWith c = (useConnection c). getKeyVal\n</code></pre>\n\n<p>gives me the following error from GHC 8.0.2:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018m0 String\u2019\n                 with \u2018forall (m :: * -&gt; *). Data m =&gt; m String\u2019\n  Expected type: m0 String -&gt; IO String\n    Actual type: (forall (m :: * -&gt; *). Data m =&gt; m String)\n                 -&gt; IO String\n\u2022 In the first argument of \u2018(.)\u2019, namely \u2018useConnection c\u2019\n  In the expression: useConnection c . getKeyVal\n  In an equation for \u2018getKeyValWith\u2019:\n      getKeyValWith c = useConnection c . getKeyVal\n</code></pre>\n\n<p>Strangely enough, the following works just fine:</p>\n\n<pre><code>getKeyValWith c k = useConnection c (getKeyVal k)\n</code></pre>\n\n<p>Less surprisingly, so does this:</p>\n\n<pre><code>getKeyValWith (SomeConn c) = withConnection c . getKeyVal\n</code></pre>\n\n<p>Is there a simple rule to understand why GHC doesn't like the first example, but the other examples are okay? Is there a way I can ask GHC for more information about what it's doing when it tries to compile the first definition? I understand this is probably not idiomatic Haskell (what some call the \"Existential/typeclass anti-pattern\").</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>I should add that I run into the same problem even if I explicitly add the type <code>getKeyVal :: Key -&gt; (Data m =&gt; m String)</code> in the first example. I can even give this function its own name with my chosen type signature (which typechecks), but I get the same error. But I see now that even when I explicitly add the type, running <code>:t</code> in GHCI (with <code>-XRankNTypes</code>) on it gives me back the original type with <code>Data m =&gt;</code> floated to the left. So I think I understand why GHC is balking at me. Can I force GHC to use my chosen type?</p>\n"}]